import{h as E,i as S,j as V,k as F,l as b,m as I,n as L,o as W,u as x,V as O,p as $,T as l,q as s,s as c,t as f,v as k,a as H}from"./inspector-1W7GSp_t.js";const o={sErrors:"{n, plural, =1 {# error} other {# errors}}",sWarnings:"{n, plural, =1 {# warning} other {# warnings}}",openConsoleToViewS:"Open Console to view {PH1}",openIssuesToView:"{n, plural, =1 {Open Issues to view # issue:} other {Open Issues to view # issues:}}"},N=E("panels/console_counters/WarningErrorCounter.ts",o),r=S.bind(void 0,N);let d;class a{toolbarItem;consoleCounter;issueCounter;throttler;updatingForTest;constructor(){a.instanceForTest=this;const t=document.createElement("div");this.toolbarItem=new V(t),this.toolbarItem.setVisible(!1),this.toolbarItem.addEventListener("CompactLayoutUpdated",this.onSetCompactLayout,this),this.consoleCounter=new F,this.consoleCounter.setAttribute("jslog",`${b("console").track({click:!0})}`),t.appendChild(this.consoleCounter),this.consoleCounter.data={clickHandler:I.instance().show.bind(I.instance()),groups:[{iconName:"cross-circle-filled",iconColor:"var(--icon-error)",iconHeight:"14px",iconWidth:"14px"},{iconName:"warning-filled",iconColor:"var(--icon-warning)",iconHeight:"14px",iconWidth:"14px"}]};const e=L.instance();this.issueCounter=new W,this.issueCounter.classList.add("main-toolbar"),this.issueCounter.setAttribute("jslog",`${b("issue").track({click:!0})}`),t.appendChild(this.issueCounter),this.issueCounter.data={clickHandler:()=>{x.issuesPanelOpenedFrom(2),O.instance().showView("issues-pane")},issuesManager:e,displayMode:"OnlyMostImportant"},this.throttler=new $(100),l.instance().addModelListener(s,c.ConsoleCleared,this.update,this),l.instance().addModelListener(s,c.MessageAdded,this.update,this),l.instance().addModelListener(s,c.MessageUpdated,this.update,this),e.addEventListener("IssuesCountUpdated",this.update,this),this.update()}onSetCompactLayout(t){this.setCompactLayout(t.data)}setCompactLayout(t){this.consoleCounter.data={...this.consoleCounter.data,compact:t},this.issueCounter.data={...this.issueCounter.data,compact:t}}static instance(t={forceNew:null}){const{forceNew:e}=t;return(!d||e)&&(d=new a),d}updatedForTest(){}update(){this.updatingForTest=!0,this.throttler.schedule(this.updateThrottled.bind(this))}get titlesForTesting(){const t=this.consoleCounter.shadowRoot?.querySelector("button");return t?t.getAttribute("aria-label"):null}async updateThrottled(){const t=s.allErrors(),e=s.allWarnings(),h=L.instance(),u=h.numberOfIssues(),p=i=>i===0?void 0:`${i}`,C=r(o.sErrors,{n:t}),g=r(o.sWarnings,{n:e}),M=[p(t),p(e)];let n="";t&&e?n=`${C}, ${g}`:t?n=C:e&&(n=g);const m=r(o.openConsoleToViewS,{PH1:n}),T=this.consoleCounter.data;this.consoleCounter.data={...T,groups:T.groups.map((i,y)=>({...i,text:M[y]})),accessibleName:m},f.install(this.consoleCounter,m),this.consoleCounter.classList.toggle("hidden",!(t||e));const v=k(h),w=`${r(o.openIssuesToView,{n:u})} ${v}`;f.install(this.issueCounter,w),this.issueCounter.data={...this.issueCounter.data,accessibleName:w},this.issueCounter.classList.toggle("hidden",!u),this.toolbarItem.setVisible(!!(t||e||u)),H.instance().toolbarItemResized(),this.updatingForTest=!1,this.updatedForTest()}item(){return this.toolbarItem}static instanceForTest=null}const A=Object.freeze(Object.defineProperty({__proto__:null,WarningErrorCounter:a},Symbol.toStringTag,{value:"Module"}));export{A as WarningErrorCounter};
//# sourceMappingURL=console_counters-DSUAMwD4.js.map
