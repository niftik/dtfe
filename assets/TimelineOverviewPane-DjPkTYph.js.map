{"version":3,"file":"TimelineOverviewPane-DjPkTYph.js","sources":["../../ui/legacy/components/perf_ui/TimelineOverviewCalculator.js","../../ui/legacy/components/perf_ui/TimelineOverviewPane.js"],"sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nexport class TimelineOverviewCalculator {\n    #minimumBoundary = Trace.Types.Timing.MilliSeconds(0);\n    #maximumBoundary = Trace.Types.Timing.MilliSeconds(100);\n    workingArea;\n    navStartTimes;\n    computePosition(time) {\n        return (time - this.#minimumBoundary) / this.boundarySpan() * this.workingArea;\n    }\n    positionToTime(position) {\n        return position / this.workingArea * this.boundarySpan() + this.#minimumBoundary;\n    }\n    setBounds(minimumBoundary, maximumBoundary) {\n        this.#minimumBoundary = minimumBoundary;\n        this.#maximumBoundary = maximumBoundary;\n    }\n    setNavStartTimes(navStartTimes) {\n        this.navStartTimes = navStartTimes;\n    }\n    setDisplayWidth(clientWidth) {\n        this.workingArea = clientWidth;\n    }\n    reset() {\n        this.setBounds(Trace.Types.Timing.MilliSeconds(0), Trace.Types.Timing.MilliSeconds(100));\n    }\n    formatValue(value, precision) {\n        // If there are nav start times the value needs to be remapped.\n        if (this.navStartTimes) {\n            // Find the latest possible nav start time which is considered earlier\n            // than the value passed through.\n            for (let i = this.navStartTimes.length - 1; i >= 0; i--) {\n                const startTimeMilliseconds = Trace.Helpers.Timing.microSecondsToMilliseconds(this.navStartTimes[i].ts);\n                if (value > startTimeMilliseconds) {\n                    value -= (startTimeMilliseconds - this.zeroTime());\n                    break;\n                }\n            }\n        }\n        return i18n.TimeUtilities.preciseMillisToString(value - this.zeroTime(), precision);\n    }\n    maximumBoundary() {\n        return this.#maximumBoundary;\n    }\n    minimumBoundary() {\n        return this.#minimumBoundary;\n    }\n    zeroTime() {\n        return this.#minimumBoundary;\n    }\n    boundarySpan() {\n        return Trace.Types.Timing.MilliSeconds(this.#maximumBoundary - this.#minimumBoundary);\n    }\n}\n//# sourceMappingURL=TimelineOverviewCalculator.js.map","/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../../../core/common/common.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as VisualLoggging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\nimport * as ThemeSupport from '../../theme_support/theme_support.js';\nimport { OverviewGrid } from './OverviewGrid.js';\nimport { TimelineOverviewCalculator } from './TimelineOverviewCalculator.js';\nimport timelineOverviewInfoStyles from './timelineOverviewInfo.css.js';\nexport class TimelineOverviewPane extends Common.ObjectWrapper.eventMixin(UI.Widget.VBox) {\n    overviewCalculator;\n    overviewGrid;\n    cursorArea;\n    cursorElement;\n    overviewControls;\n    markers;\n    overviewInfo;\n    updateThrottler;\n    cursorEnabled;\n    cursorPosition;\n    lastWidth;\n    windowStartTime;\n    windowEndTime;\n    muteOnWindowChanged;\n    #dimHighlightSVG;\n    constructor(prefix) {\n        super();\n        this.element.id = prefix + '-overview-pane';\n        this.overviewCalculator = new TimelineOverviewCalculator();\n        this.overviewGrid = new OverviewGrid(prefix, this.overviewCalculator);\n        this.overviewGrid.element.setAttribute('jslog', `${VisualLoggging.timeline(`${prefix}-overview`).track({ click: true, drag: true, hover: true })}`);\n        this.element.appendChild(this.overviewGrid.element);\n        this.cursorArea = this.overviewGrid.element.createChild('div', 'overview-grid-cursor-area');\n        this.cursorElement = this.overviewGrid.element.createChild('div', 'overview-grid-cursor-position');\n        this.cursorArea.addEventListener('mousemove', this.onMouseMove.bind(this), true);\n        this.cursorArea.addEventListener('mouseleave', this.hideCursor.bind(this), true);\n        this.overviewGrid.setResizeEnabled(false);\n        this.overviewGrid.addEventListener(\"WindowChangedWithPosition\" /* OverviewGridEvents.WINDOW_CHANGED_WITH_POSITION */, this.onWindowChanged, this);\n        this.overviewGrid.addEventListener(\"BreadcrumbAdded\" /* OverviewGridEvents.BREADCRUMB_ADDED */, this.onBreadcrumbAdded, this);\n        this.overviewGrid.setClickHandler(this.onClick.bind(this));\n        this.overviewControls = [];\n        this.markers = new Map();\n        this.overviewInfo = new OverviewInfo(this.cursorElement);\n        this.updateThrottler = new Common.Throttler.Throttler(100);\n        this.cursorEnabled = false;\n        this.cursorPosition = 0;\n        this.lastWidth = 0;\n        this.windowStartTime = 0;\n        this.windowEndTime = Infinity;\n        this.muteOnWindowChanged = false;\n        this.#dimHighlightSVG = UI.UIUtils.createSVGChild(this.element, 'svg', 'timeline-minimap-dim-highlight-svg hidden');\n    }\n    enableCreateBreadcrumbsButton() {\n        const breacrumbsElement = this.overviewGrid.enableCreateBreadcrumbsButton();\n        breacrumbsElement.addEventListener('mousemove', this.onMouseMove.bind(this), true);\n        breacrumbsElement.addEventListener('mouseleave', this.hideCursor.bind(this), true);\n    }\n    onMouseMove(event) {\n        if (!this.cursorEnabled) {\n            return;\n        }\n        const mouseEvent = event;\n        const target = event.target;\n        const offsetLeftRelativeToCursorArea = target.getBoundingClientRect().left - this.cursorArea.getBoundingClientRect().left;\n        this.cursorPosition = mouseEvent.offsetX + offsetLeftRelativeToCursorArea;\n        this.cursorElement.style.left = this.cursorPosition + 'px';\n        this.cursorElement.style.visibility = 'visible';\n        void this.overviewInfo.setContent(this.buildOverviewInfo());\n    }\n    async buildOverviewInfo() {\n        const document = this.element.ownerDocument;\n        const x = this.cursorPosition;\n        const elements = await Promise.all(this.overviewControls.map(control => control.overviewInfoPromise(x)));\n        const fragment = document.createDocumentFragment();\n        const nonNullElements = elements.filter(element => element !== null);\n        fragment.append(...nonNullElements);\n        return fragment;\n    }\n    hideCursor() {\n        this.cursorElement.style.visibility = 'hidden';\n        this.overviewInfo.hide();\n    }\n    wasShown() {\n        this.update();\n    }\n    willHide() {\n        this.overviewInfo.hide();\n    }\n    onResize() {\n        const width = this.element.offsetWidth;\n        if (width === this.lastWidth) {\n            return;\n        }\n        this.lastWidth = width;\n        this.scheduleUpdate();\n    }\n    setOverviewControls(overviewControls) {\n        for (let i = 0; i < this.overviewControls.length; ++i) {\n            this.overviewControls[i].dispose();\n        }\n        for (let i = 0; i < overviewControls.length; ++i) {\n            overviewControls[i].setCalculator(this.overviewCalculator);\n            overviewControls[i].show(this.overviewGrid.element);\n        }\n        this.overviewControls = overviewControls;\n        this.update();\n    }\n    set showingScreenshots(isShowing) {\n        this.overviewGrid.showingScreenshots = isShowing;\n    }\n    setBounds(minimumBoundary, maximumBoundary) {\n        if (minimumBoundary === this.overviewCalculator.minimumBoundary() &&\n            maximumBoundary === this.overviewCalculator.maximumBoundary()) {\n            return;\n        }\n        this.overviewCalculator.setBounds(minimumBoundary, maximumBoundary);\n        this.overviewGrid.setResizeEnabled(true);\n        this.cursorEnabled = true;\n        this.scheduleUpdate(minimumBoundary, maximumBoundary);\n    }\n    setNavStartTimes(navStartTimes) {\n        this.overviewCalculator.setNavStartTimes(navStartTimes);\n    }\n    scheduleUpdate(start, end) {\n        void this.updateThrottler.schedule(async () => {\n            this.update(start, end);\n        });\n    }\n    update(start, end) {\n        if (!this.isShowing()) {\n            return;\n        }\n        this.overviewCalculator.setDisplayWidth(this.overviewGrid.clientWidth());\n        for (let i = 0; i < this.overviewControls.length; ++i) {\n            this.overviewControls[i].update(start, end);\n        }\n        this.overviewGrid.updateDividers(this.overviewCalculator);\n        this.updateMarkers();\n        this.updateWindow();\n    }\n    setMarkers(markers) {\n        this.markers = markers;\n    }\n    getMarkers() {\n        return this.markers;\n    }\n    updateMarkers() {\n        const filteredMarkers = new Map();\n        for (const time of this.markers.keys()) {\n            const marker = this.markers.get(time);\n            const position = Math.round(this.overviewCalculator.computePosition(Trace.Types.Timing.MilliSeconds(time)));\n            // Limit the number of markers to one per pixel.\n            if (filteredMarkers.has(position)) {\n                continue;\n            }\n            filteredMarkers.set(position, marker);\n            marker.style.left = position + 'px';\n        }\n        this.overviewGrid.removeEventDividers();\n        this.overviewGrid.addEventDividers([...filteredMarkers.values()]);\n    }\n    reset() {\n        this.windowStartTime = 0;\n        this.windowEndTime = Infinity;\n        this.overviewCalculator.reset();\n        this.overviewGrid.reset();\n        this.overviewGrid.setResizeEnabled(false);\n        this.cursorEnabled = false;\n        this.hideCursor();\n        this.markers = new Map();\n        for (const control of this.overviewControls) {\n            control.reset();\n        }\n        this.overviewInfo.hide();\n        this.scheduleUpdate();\n    }\n    onClick(event) {\n        return this.overviewControls.some(control => control.onClick(event));\n    }\n    onBreadcrumbAdded() {\n        this.dispatchEventToListeners(\"OverviewPaneBreadcrumbAdded\" /* Events.OVERVIEW_PANE_BREADCRUMB_ADDED */, {\n            startTime: Trace.Types.Timing.MilliSeconds(this.windowStartTime),\n            endTime: Trace.Types.Timing.MilliSeconds(this.windowEndTime),\n        });\n    }\n    onWindowChanged(event) {\n        if (this.muteOnWindowChanged) {\n            return;\n        }\n        // Always use first control as a time converter.\n        if (!this.overviewControls.length) {\n            return;\n        }\n        this.windowStartTime =\n            event.data.rawStartValue === this.overviewCalculator.minimumBoundary() ? 0 : event.data.rawStartValue;\n        this.windowEndTime =\n            event.data.rawEndValue === this.overviewCalculator.maximumBoundary() ? Infinity : event.data.rawEndValue;\n        const windowTimes = {\n            startTime: Trace.Types.Timing.MilliSeconds(this.windowStartTime),\n            endTime: Trace.Types.Timing.MilliSeconds(this.windowEndTime),\n        };\n        this.dispatchEventToListeners(\"OverviewPaneWindowChanged\" /* Events.OVERVIEW_PANE_WINDOW_CHANGED */, windowTimes);\n    }\n    setWindowTimes(startTime, endTime) {\n        if (startTime === this.windowStartTime && endTime === this.windowEndTime) {\n            return;\n        }\n        this.windowStartTime = startTime;\n        this.windowEndTime = endTime;\n        this.updateWindow();\n        this.dispatchEventToListeners(\"OverviewPaneWindowChanged\" /* Events.OVERVIEW_PANE_WINDOW_CHANGED */, {\n            startTime: Trace.Types.Timing.MilliSeconds(startTime),\n            endTime: Trace.Types.Timing.MilliSeconds(endTime),\n        });\n    }\n    updateWindow() {\n        if (!this.overviewControls.length) {\n            return;\n        }\n        const absoluteMin = this.overviewCalculator.minimumBoundary();\n        const timeSpan = this.overviewCalculator.maximumBoundary() - absoluteMin;\n        const haveRecords = absoluteMin > 0;\n        const left = haveRecords && this.windowStartTime ? Math.min((this.windowStartTime - absoluteMin) / timeSpan, 1) : 0;\n        const right = haveRecords && this.windowEndTime < Infinity ? (this.windowEndTime - absoluteMin) / timeSpan : 1;\n        this.muteOnWindowChanged = true;\n        this.overviewGrid.setWindow(left, right);\n        this.muteOnWindowChanged = false;\n    }\n    highlightBounds(bounds) {\n        let mask = this.#dimHighlightSVG?.querySelector('mask');\n        if (!mask) {\n            // Set up the desaturation mask\n            const defs = UI.UIUtils.createSVGChild(this.#dimHighlightSVG, 'defs');\n            mask = UI.UIUtils.createSVGChild(defs, 'mask');\n            mask.id = 'dim-highlight-cutouts';\n            /* Within the mask...\n                - black fill = punch, fully transparently, through to the next thing. these are the cutouts to the color.\n                - white fill = be 100% desaturated\n                - grey fill  = show at the Lightness level of grayscale/desaturation\n            */\n            const showAllRect = UI.UIUtils.createSVGChild(mask, 'rect');\n            showAllRect.setAttribute('width', '100%');\n            showAllRect.setAttribute('height', '100%');\n            showAllRect.setAttribute('fill', 'hsl(0deg 0% 95%)');\n            const desaturateRect = UI.UIUtils.createSVGChild(this.#dimHighlightSVG, 'rect');\n            desaturateRect.setAttribute('width', '100%');\n            desaturateRect.setAttribute('height', '100%');\n            desaturateRect.setAttribute('fill', '#ffffff');\n            desaturateRect.setAttribute('mask', `url(#${mask.id})`);\n            desaturateRect.style.mixBlendMode = 'saturation';\n            const punchRect = UI.UIUtils.createSVGChild(mask, 'rect', 'punch');\n            punchRect.setAttribute('y', '0');\n            punchRect.setAttribute('height', '100%');\n            punchRect.setAttribute('fill', 'black');\n            const bracketColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-state-on-header-hover');\n            const bracket = UI.UIUtils.createSVGChild(this.#dimHighlightSVG, 'polygon');\n            bracket.setAttribute('fill', bracketColor);\n        }\n        const left = this.overviewCalculator.computePosition(Trace.Helpers.Timing.microSecondsToMilliseconds(bounds.min));\n        const right = this.overviewCalculator.computePosition(Trace.Helpers.Timing.microSecondsToMilliseconds(bounds.max));\n        const punchRect = this.#dimHighlightSVG.querySelector('rect.punch');\n        punchRect?.setAttribute('x', left.toString());\n        punchRect?.setAttribute('width', (right - left).toString());\n        const size = 5; // px size of triangles\n        const bracket = this.#dimHighlightSVG.querySelector('polygon');\n        bracket?.setAttribute('points', `${left},0 ${left},${size} ${left + size - 1},1 ${right - size - 1},1 ${right},${size} ${right},0`);\n        this.#dimHighlightSVG.classList.remove('hidden');\n    }\n    clearBoundsHighlight() {\n        this.#dimHighlightSVG.classList.add('hidden');\n    }\n}\nexport class TimelineOverviewBase extends UI.Widget.VBox {\n    calculatorInternal;\n    canvas;\n    contextInternal;\n    constructor() {\n        super();\n        this.calculatorInternal = null;\n        this.canvas = this.element.createChild('canvas', 'fill');\n        this.contextInternal = this.canvas.getContext('2d');\n    }\n    width() {\n        return this.canvas.width;\n    }\n    height() {\n        return this.canvas.height;\n    }\n    context() {\n        if (!this.contextInternal) {\n            throw new Error('Unable to retrieve canvas context');\n        }\n        return this.contextInternal;\n    }\n    calculator() {\n        return this.calculatorInternal;\n    }\n    update() {\n        throw new Error('Not implemented');\n    }\n    dispose() {\n        this.detach();\n    }\n    reset() {\n    }\n    async overviewInfoPromise(_x) {\n        return null;\n    }\n    setCalculator(calculator) {\n        this.calculatorInternal = calculator;\n    }\n    onClick(_event) {\n        return false;\n    }\n    resetCanvas() {\n        if (this.element.clientWidth) {\n            this.setCanvasSize(this.element.clientWidth, this.element.clientHeight);\n        }\n    }\n    setCanvasSize(width, height) {\n        this.canvas.width = width * window.devicePixelRatio;\n        this.canvas.height = height * window.devicePixelRatio;\n    }\n}\nexport class OverviewInfo {\n    anchorElement;\n    glassPane;\n    visible;\n    element;\n    constructor(anchor) {\n        this.anchorElement = anchor;\n        this.glassPane = new UI.GlassPane.GlassPane();\n        this.glassPane.setPointerEventsBehavior(\"PierceContents\" /* UI.GlassPane.PointerEventsBehavior.PIERCE_CONTENTS */);\n        this.glassPane.setMarginBehavior(\"Arrow\" /* UI.GlassPane.MarginBehavior.ARROW */);\n        this.glassPane.setSizeBehavior(\"MeasureContent\" /* UI.GlassPane.SizeBehavior.MEASURE_CONTENT */);\n        this.visible = false;\n        this.element = UI.UIUtils\n            .createShadowRootWithCoreStyles(this.glassPane.contentElement, {\n            cssFile: [timelineOverviewInfoStyles],\n            delegatesFocus: undefined,\n        })\n            .createChild('div', 'overview-info');\n    }\n    async setContent(contentPromise) {\n        this.visible = true;\n        const content = await contentPromise;\n        if (!this.visible) {\n            return;\n        }\n        this.element.removeChildren();\n        this.element.appendChild(content);\n        this.glassPane.setContentAnchorBox(this.anchorElement.boxInWindow());\n        if (!this.glassPane.isShowing()) {\n            this.glassPane.show(this.anchorElement.ownerDocument);\n        }\n    }\n    hide() {\n        this.visible = false;\n        this.glassPane.hide();\n    }\n}\n//# sourceMappingURL=TimelineOverviewPane.js.map"],"names":["TimelineOverviewCalculator","#minimumBoundary","Trace.Types.Timing.MilliSeconds","#maximumBoundary","time","position","minimumBoundary","maximumBoundary","navStartTimes","clientWidth","value","precision","startTimeMilliseconds","Trace.Helpers.Timing.microSecondsToMilliseconds","i18n.TimeUtilities.preciseMillisToString","TimelineOverviewPane","Common.ObjectWrapper.eventMixin","UI.Widget.VBox","#dimHighlightSVG","prefix","OverviewGrid","VisualLoggging.timeline","OverviewInfo","Common.Throttler.Throttler","UI.UIUtils.createSVGChild","breacrumbsElement","event","mouseEvent","offsetLeftRelativeToCursorArea","document","x","elements","control","fragment","nonNullElements","element","width","overviewControls","i","isShowing","start","end","markers","filteredMarkers","marker","windowTimes","startTime","endTime","absoluteMin","timeSpan","haveRecords","left","right","bounds","mask","defs","showAllRect","desaturateRect","punchRect","bracketColor","ThemeSupport.ThemeSupport","size","TimelineOverviewBase","_x","calculator","_event","height","anchor","UI.GlassPane.GlassPane","UI.UIUtils\n            .createShadowRootWithCoreStyles","timelineOverviewInfoStyles","contentPromise","content"],"mappings":"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"}