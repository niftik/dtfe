{"version":3,"file":"CompatibilityTracksAppender-Bm26C5B2.js","sources":["../../core/sdk/EnhancedTracesParser.js","../../panels/timeline/utils/Helpers.js","../../models/trace/types/File.js","../../models/trace/extras/FetchNodes.js","../../models/trace/extras/MainThreadActivity.js","../../models/trace/extras/Metadata.js","../../panels/timeline/utils/SourceMapsResolver.js","../../panels/timeline/utils/IgnoreList.js","../../panels/timeline/AppenderUtils.js","../../panels/timeline/AnimationsTrackAppender.js","../../services/trace_bounds/TraceBounds.js","../../panels/timeline/components/Breadcrumbs.js","../../panels/timeline/components/breadcrumbsUI.css.js","../../panels/timeline/components/BreadcrumbsUI.js","../../panels/timeline/components/cpuThrottlingSelector.css.js","../../panels/timeline/components/CPUThrottlingSelector.js","../../panels/timeline/components/DetailsView.js","../../panels/timeline/components/EntryStyles.js","../../panels/timeline/components/EntryName.js","../../panels/timeline/components/fieldSettingsDialog.css.js","../../panels/timeline/components/FieldSettingsDialog.js","../../panels/timeline/components/interactionBreakdown.css.js","../../panels/timeline/components/InteractionBreakdown.js","../../panels/timeline/components/insights/sidebarInsight.css.js","../../panels/timeline/components/insights/EventRef.js","../../panels/timeline/components/insights/SidebarInsight.js","../../panels/timeline/components/insights/types.js","../../panels/timeline/components/insights/Helpers.js","../../panels/timeline/components/insights/CLSCulprits.js","../../panels/timeline/components/insights/DocumentLatency.js","../../panels/timeline/components/insights/table.css.js","../../panels/timeline/components/insights/Table.js","../../panels/timeline/components/insights/FontDisplay.js","../../panels/timeline/components/insights/InteractionToNextPaint.js","../../panels/timeline/components/insights/LCPDiscovery.js","../../panels/timeline/components/insights/LCPPhases.js","../../panels/timeline/components/insights/NodeLink.js","../../panels/timeline/components/insights/RenderBlocking.js","../../ui/components/linkifier/linkifierImpl.css.js","../../ui/components/linkifier/LinkifierUtils.js","../../ui/components/linkifier/LinkifierImpl.js","../../panels/timeline/components/insights/SlowCSSSelector.js","../../panels/timeline/components/insights/ThirdParties.js","../../panels/timeline/components/insights/Viewport.js","../../panels/timeline/components/layoutShiftDetails.css.js","../../panels/timeline/components/LayoutShiftDetails.js","../../panels/timeline/components/networkThrottlingSelector.css.js","../../panels/timeline/components/NetworkThrottlingSelector.js","../../panels/timeline/components/metricCard.css.js","../../panels/timeline/components/MetricCompareStrings.js","../../panels/timeline/components/metricValueStyles.css.js","../../panels/timeline/components/Utils.js","../../panels/timeline/components/MetricCard.js","../../panels/timeline/components/liveMetricsView.css.js","../../panels/timeline/components/LiveMetricsView.js","../../panels/timeline/components/networkRequestDetails.css.js","../../panels/timeline/components/networkRequestTooltip.css.js","../../panels/timeline/components/NetworkRequestTooltip.js","../../panels/timeline/components/NetworkRequestDetails.js","../../panels/timeline/components/relatedInsightChips.css.js","../../panels/timeline/components/RelatedInsightChips.js","../../panels/timeline/components/sidebarAnnotationsTab.css.js","../../panels/timeline/components/SidebarAnnotationsTab.js","../../panels/timeline/components/sidebarSingleInsightSet.css.js","../../panels/timeline/components/SidebarSingleInsightSet.js","../../panels/timeline/components/sidebarInsightsTab.css.js","../../panels/timeline/components/SidebarInsightsTab.js","../../panels/timeline/components/Sidebar.js","../../panels/timeline/AnnotationHelpers.js","../../panels/timeline/BenchmarkEvents.js","../../panels/timeline/CLSLinkifier.js","../../panels/timeline/ActiveFilters.js","../../panels/timeline/EasterEgg.js","../../panels/timeline/FreshRecording.js","../../panels/timeline/historyToolbarButton.css.js","../../panels/timeline/IsolateSelector.js","../../panels/timeline/EntriesFilter.js","../../panels/timeline/EventsSerializer.js","../../panels/timeline/ModificationsManager.js","../../panels/timeline/overlays/components/entriesLinkOverlay.css.js","../../panels/timeline/overlays/components/EntriesLinkOverlay.js","../../panels/timeline/overlays/components/entryLabelOverlay.css.js","../../panels/timeline/overlays/components/EntryLabelOverlay.js","../../panels/timeline/overlays/components/timeRangeOverlay.css.js","../../panels/timeline/overlays/components/TimeRangeOverlay.js","../../panels/timeline/overlays/components/timespanBreakdownOverlay.css.js","../../panels/timeline/overlays/components/TimespanBreakdownOverlay.js","../../panels/timeline/overlays/OverlaysImpl.js","../../panels/timeline/SaveFileFormatter.js","../../panels/timeline/TimelineController.js","../../panels/timeline/CountersGraph.js","../../panels/timeline/TargetForEvent.js","../../models/timeline_model/TimelineJSProfile.js","../../models/timeline_model/TimelineModelFilter.js","../../models/timeline_model/TimelineProfileTree.js","../../models/timeline_model/TracingLayerTree.js","../../panels/timeline/extensions/ExtensionUI.js","../../panels/timeline/TimelineSelection.js","../../panels/timeline/TimelineUIUtils.js","../../panels/timeline/TimelineFilters.js","../../panels/timeline/TimelineTreeView.js","../../panels/timeline/EventsTimelineTreeView.js","../../panels/timeline/TimelineLayersView.js","../../panels/timeline/timelinePaintProfiler.css.js","../../panels/timeline/TimelinePaintProfilerView.js","../../panels/timeline/TimelineSelectorStatsView.js","../../panels/timeline/TimelineDetailsView.js","../../panels/timeline/Initiators.js","../../panels/timeline/ThreadAppender.js","../../panels/timeline/timelineFlamechartPopover.css.js","../../panels/timeline/TimelineFlameChartDataProvider.js","../../panels/timeline/NetworkTrackAppender.js","../../panels/timeline/TimelineFlameChartNetworkDataProvider.js","../../panels/timeline/timelineFlameChartView.css.js","../../panels/timeline/TimelineFlameChartView.js","../../panels/timeline/TimelineEventOverview.js","../../panels/timeline/timelineHistoryManager.css.js","../../panels/timeline/TimelineHistoryManager.js","../../panels/timeline/TimelineLandingPage.js","../../panels/timeline/TimelineLoader.js","../../panels/timeline/timelineMiniMap.css.js","../../panels/timeline/TimelineMiniMap.js","../../panels/timeline/timelinePanel.css.js","../../panels/timeline/timelineStatusDialog.css.js","../../panels/timeline/UIDevtoolsUtils.js","../../panels/timeline/UIDevtoolsController.js","../../panels/timeline/TimelinePanel.js","../../panels/timeline/ExtensionDataGatherer.js","../../panels/timeline/ExtensionTrackAppender.js","../../panels/timeline/GPUTrackAppender.js","../../panels/timeline/InteractionsTrackAppender.js","../../panels/timeline/LayoutShiftsTrackAppender.js","../../panels/timeline/ServerTimingsTrackAppender.js","../../panels/timeline/TimingsTrackAppender.js","../../panels/timeline/CompatibilityTracksAppender.js"],"sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport { UserVisibleError } from '../platform/platform.js';\nexport class EnhancedTracesParser {\n    #scriptRundownEvents = [];\n    #scriptToV8Context = new Map();\n    #scriptToScriptSource = new Map();\n    #largeScriptToScriptSource = new Map();\n    #scriptToSourceLength = new Map();\n    #targets = [];\n    #executionContexts = [];\n    #scripts = [];\n    static enhancedTraceVersion = 1;\n    constructor(traceEvents) {\n        // Initialize with the trace events provided.\n        try {\n            this.parseEnhancedTrace(traceEvents);\n        }\n        catch (e) {\n            throw new UserVisibleError.UserVisibleError(e);\n        }\n    }\n    parseEnhancedTrace(traceEvents) {\n        for (const event of traceEvents) {\n            if (this.isTargetRundownEvent(event)) {\n                // Set up script to v8 context mapping\n                const data = event.args?.data;\n                this.#scriptToV8Context.set(this.getScriptIsolateId(data.isolate, data.scriptId), data.v8context);\n                // Add target\n                if (!this.#targets.find(target => target.targetId === data.frame)) {\n                    this.#targets.push({\n                        targetId: data.frame,\n                        type: data.frameType,\n                        isolate: data.isolate,\n                        pid: event.pid,\n                        url: data.url,\n                    });\n                }\n                // Add execution context, need to put back execution context id with info from other traces\n                if (!this.#executionContexts.find(executionContext => executionContext.v8Context === data.v8context)) {\n                    this.#executionContexts.push({\n                        id: -1,\n                        origin: data.origin,\n                        v8Context: data.v8context,\n                        auxData: {\n                            frameId: data.frame,\n                            isDefault: data.isDefault,\n                            type: data.contextType,\n                        },\n                        isolate: data.isolate,\n                    });\n                }\n            }\n            else if (this.isScriptRundownEvent(event)) {\n                this.#scriptRundownEvents.push(event);\n                const data = event.args.data;\n                // Add script\n                if (!this.#scripts.find(script => script.scriptId === data.scriptId && script.isolate === data.isolate)) {\n                    this.#scripts.push({\n                        scriptId: data.scriptId,\n                        isolate: data.isolate,\n                        executionContextId: data.executionContextId,\n                        startLine: data.startLine,\n                        startColumn: data.startColumn,\n                        endLine: data.endLine,\n                        endColumn: data.endColumn,\n                        hash: data.hash,\n                        isModule: data.isModule,\n                        url: data.url,\n                        hasSourceUrl: data.hasSourceUrl,\n                        sourceMapUrl: data.sourceMapUrl,\n                    });\n                }\n            }\n            else if (this.isScriptRundownSourceEvent(event)) {\n                // Set up script to source text and length mapping\n                const data = event.args.data;\n                const scriptIsolateId = this.getScriptIsolateId(data.isolate, data.scriptId);\n                if ('splitIndex' in data && 'splitCount' in data) {\n                    if (!this.#largeScriptToScriptSource.has(scriptIsolateId)) {\n                        this.#largeScriptToScriptSource.set(scriptIsolateId, new Array(data.splitCount).fill(''));\n                    }\n                    const splittedSource = this.#largeScriptToScriptSource.get(scriptIsolateId);\n                    if (splittedSource && data.sourceText) {\n                        splittedSource[data.splitIndex] = data.sourceText;\n                    }\n                }\n                else {\n                    if (data.sourceText) {\n                        this.#scriptToScriptSource.set(scriptIsolateId, data.sourceText);\n                    }\n                    if (data.length) {\n                        this.#scriptToSourceLength.set(scriptIsolateId, data.length);\n                    }\n                }\n            }\n        }\n    }\n    data() {\n        // Put back execution context id\n        const v8ContextToExecutionContextId = new Map();\n        this.#scriptRundownEvents.forEach(scriptRundownEvent => {\n            const data = scriptRundownEvent.args.data;\n            const v8Context = this.#scriptToV8Context.get(this.getScriptIsolateId(data.isolate, data.scriptId));\n            if (v8Context) {\n                v8ContextToExecutionContextId.set(v8Context, data.executionContextId);\n            }\n        });\n        this.#executionContexts.forEach(executionContext => {\n            if (executionContext.v8Context) {\n                const id = v8ContextToExecutionContextId.get(executionContext.v8Context);\n                if (id) {\n                    executionContext.id = id;\n                }\n            }\n        });\n        // Put back script source text and length\n        this.#scripts.forEach(script => {\n            const scriptIsolateId = this.getScriptIsolateId(script.isolate, script.scriptId);\n            if (this.#scriptToScriptSource.has(scriptIsolateId)) {\n                script.sourceText = this.#scriptToScriptSource.get(scriptIsolateId);\n                script.length = this.#scriptToSourceLength.get(scriptIsolateId);\n            }\n            else if (this.#largeScriptToScriptSource.has(scriptIsolateId)) {\n                const splittedSources = this.#largeScriptToScriptSource.get(scriptIsolateId);\n                if (splittedSources) {\n                    script.sourceText = splittedSources.join('');\n                    script.length = script.sourceText.length;\n                }\n            }\n            // put in the aux data\n            script.auxData =\n                this.#executionContexts\n                    .find(context => context.id === script.executionContextId && context.isolate === script.isolate)\n                    ?.auxData;\n        });\n        const data = new Map();\n        for (const target of this.#targets) {\n            data.set(target, this.groupContextsAndScriptsUnderTarget(target, this.#executionContexts, this.#scripts));\n        }\n        return {\n            data,\n        };\n    }\n    getScriptIsolateId(isolate, scriptId) {\n        return scriptId + '@' + isolate;\n    }\n    isTraceEvent(event) {\n        return 'cat' in event && 'pid' in event;\n    }\n    isTargetRundownEvent(event) {\n        return this.isTraceEvent(event) && event.cat === 'disabled-by-default-devtools.target-rundown';\n    }\n    isScriptRundownEvent(event) {\n        return this.isTraceEvent(event) && event.cat === 'disabled-by-default-devtools.v8-source-rundown';\n    }\n    isScriptRundownSourceEvent(event) {\n        return this.isTraceEvent(event) && event.cat === 'disabled-by-default-devtools.v8-source-rundown-sources';\n    }\n    groupContextsAndScriptsUnderTarget(target, executionContexts, scripts) {\n        const filteredExecutionContexts = [];\n        const filteredScripts = [];\n        for (const executionContext of executionContexts) {\n            if (executionContext.auxData?.frameId === target.targetId) {\n                filteredExecutionContexts.push(executionContext);\n            }\n        }\n        for (const script of scripts) {\n            if (script.auxData === null) {\n                console.error(script + ' missing aux data');\n            }\n            if (script.auxData?.frameId === target.targetId) {\n                filteredScripts.push(script);\n            }\n        }\n        return [filteredExecutionContexts, filteredScripts];\n    }\n}\n//# sourceMappingURL=EnhancedTracesParser.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Platform from '../../../core/platform/platform.js';\nfunction createTrimmedUrlSearch(url) {\n    const maxSearchValueLength = 8;\n    let search = '';\n    for (const [key, value] of url.searchParams) {\n        if (search) {\n            search += '&';\n        }\n        if (value) {\n            search += `${key}=${Platform.StringUtilities.trimEndWithMaxLength(value, maxSearchValueLength)}`;\n        }\n        else {\n            search += key;\n        }\n    }\n    if (search) {\n        search = '?' + search;\n    }\n    return search;\n}\n/**\n * Shortens URLs as much as possible while keeping important context.\n *\n * - Elides the host if the previous url is the same host+protocol\n * - Always elide search param values\n * - Always includes protocol/domain if there is a mix of protocols\n * - First URL is elided fully to show just the pathname, unless there is a mix of protocols (see above)\n */\nexport function createUrlLabels(urls) {\n    const labels = [];\n    const isAllHttps = urls.every(url => url.protocol === 'https:');\n    for (const [index, url] of urls.entries()) {\n        const previousUrl = urls[index - 1];\n        const sameHostAndProtocol = previousUrl && url.host === previousUrl.host && url.protocol === previousUrl.protocol;\n        let elideHost = sameHostAndProtocol;\n        let elideProtocol = isAllHttps;\n        // For the first URL, show just the pathname and search - this will be relative to the domain as seen in the\n        // trace dropdown selector. Exception is if there are non-https protocols, in which case we're only going to elide\n        // parts of the query string.\n        if (index === 0 && isAllHttps) {\n            elideHost = true;\n            elideProtocol = true;\n        }\n        const search = createTrimmedUrlSearch(url);\n        if (!elideProtocol) {\n            labels.push(`${url.protocol}//${url.host}${url.pathname}${search}`);\n        }\n        else if (!elideHost) {\n            labels.push(`${url.host}${url.pathname}${search}`);\n        }\n        else {\n            labels.push(`${url.pathname}${search}`);\n        }\n    }\n    // Lastly, remove any trailing `/`.\n    return labels.map(label => label.length > 1 && label.endsWith('/') ? label.substring(0, label.length - 1) : label);\n}\n/**\n * Shortens the provided URL for use within a narrow display usecase.\n *\n * The resulting string will at least contain the last path component of the URL.\n * More components are included until a limit of maxChars (default 20) is reached.\n * No querystring is included.\n *\n * If the last path component is larger than maxChars characters, the middle is elided.\n */\nexport function shortenUrl(url, maxChars = 20) {\n    const parts = url.pathname.split('/');\n    let shortenedUrl = parts.at(-1) ?? '';\n    if (shortenedUrl.length > maxChars) {\n        return Platform.StringUtilities.trimMiddle(shortenedUrl, maxChars);\n    }\n    let i = parts.length - 1;\n    while (--i >= 0) {\n        if (shortenedUrl.length + parts[i].length <= maxChars) {\n            shortenedUrl = `${parts[i]}/${shortenedUrl}`;\n        }\n    }\n    return shortenedUrl;\n}\n//# sourceMappingURL=Helpers.js.map","export function isTimeRangeAnnotation(annotation) {\n    return annotation.type === 'TIME_RANGE';\n}\nexport function isEntryLabelAnnotation(annotation) {\n    return annotation.type === 'ENTRY_LABEL';\n}\nexport function isEntriesLinkAnnotation(annotation) {\n    return annotation.type === 'ENTRIES_LINK';\n}\nexport function traceEventKeyToValues(key) {\n    const parts = key.split('-');\n    const type = parts[0];\n    switch (type) {\n        case \"p\" /* EventKeyType.PROFILE_CALL */:\n            if (parts.length !== 5 ||\n                !(parts.every((part, i) => i === 0 || typeof part === 'number' || !isNaN(parseInt(part, 10))))) {\n                throw new Error(`Invalid ProfileCallKey: ${key}`);\n            }\n            return {\n                type: parts[0],\n                processID: parseInt(parts[1], 10),\n                threadID: parseInt(parts[2], 10),\n                sampleIndex: parseInt(parts[3], 10),\n                protocol: parseInt(parts[4], 10),\n            };\n        case \"r\" /* EventKeyType.RAW_EVENT */:\n            if (parts.length !== 2 || !(typeof parts[1] === 'number' || !isNaN(parseInt(parts[1], 10)))) {\n                throw new Error(`Invalid RawEvent Key: ${key}`);\n            }\n            return {\n                type: parts[0],\n                rawIndex: parseInt(parts[1], 10),\n            };\n        case \"s\" /* EventKeyType.SYNTHETIC_EVENT */:\n            if (parts.length !== 2 || !(typeof parts[1] === 'number' || !isNaN(parseInt(parts[1], 10)))) {\n                throw new Error(`Invalid SyntheticEvent Key: ${key}`);\n            }\n            return {\n                type: parts[0],\n                rawIndex: parseInt(parts[1], 10),\n            };\n        case \"l\" /* EventKeyType.LEGACY_TIMELINE_FRAME */: {\n            if (parts.length !== 2 || Number.isNaN(parseInt(parts[1], 10))) {\n                throw new Error(`Invalid LegacyTimelineFrame Key: ${key}`);\n            }\n            return {\n                type,\n                rawIndex: parseInt(parts[1], 10),\n            };\n        }\n        default:\n            throw new Error(`Unknown trace event key: ${key}`);\n    }\n}\n//# sourceMappingURL=File.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Types from '../types/types.js';\nconst domLookUpSingleNodeCache = new Map();\nconst domLookUpBatchNodesCache = new Map();\nexport function clearCacheForTesting() {\n    domLookUpSingleNodeCache.clear();\n    domLookUpBatchNodesCache.clear();\n    layoutShiftSourcesCache.clear();\n    normalizedLayoutShiftNodesCache.clear();\n}\n/**\n * Looks up the DOM Node on the page for the given BackendNodeId. Uses the\n * provided ParsedTrace as the cache and will cache the result after the\n * first lookup.\n */\nexport async function domNodeForBackendNodeID(modelData, nodeId) {\n    const fromCache = domLookUpSingleNodeCache.get(modelData)?.get(nodeId);\n    if (fromCache !== undefined) {\n        return fromCache;\n    }\n    const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    const domModel = target?.model(SDK.DOMModel.DOMModel);\n    if (!domModel) {\n        return null;\n    }\n    const domNodesMap = await domModel.pushNodesByBackendIdsToFrontend(new Set([nodeId]));\n    const result = domNodesMap?.get(nodeId) || null;\n    const cacheForModel = domLookUpSingleNodeCache.get(modelData) || new Map();\n    cacheForModel.set(nodeId, result);\n    domLookUpSingleNodeCache.set(modelData, cacheForModel);\n    return result;\n}\nconst nodeIdsForEventCache = new WeakMap();\n/**\n * Extracts a set of NodeIds for a given event.\n * NOTE: you probably don't want to call this and instead use\n * `extractRelatedDOMNodesFromEvent`, which will fetch the nodes over CDP.\n * This method is primarily exported so we can test the logic more easily\n * without having to mock the CDP layer.\n **/\nexport function nodeIdsForEvent(modelData, event) {\n    const fromCache = nodeIdsForEventCache.get(event);\n    if (fromCache) {\n        return fromCache;\n    }\n    const foundIds = new Set();\n    if (Types.Events.isLayout(event)) {\n        event.args.endData?.layoutRoots.forEach(root => foundIds.add(root.nodeId));\n    }\n    else if (Types.Events.isSyntheticLayoutShift(event) && event.args.data?.impacted_nodes) {\n        event.args.data.impacted_nodes.forEach(node => foundIds.add(node.node_id));\n    }\n    else if (Types.Events.isLargestContentfulPaintCandidate(event) && typeof event.args.data?.nodeId !== 'undefined') {\n        foundIds.add(event.args.data.nodeId);\n    }\n    else if (Types.Events.isPaint(event) && typeof event.args.data.nodeId !== 'undefined') {\n        foundIds.add(event.args.data.nodeId);\n    }\n    else if (Types.Events.isPaintImage(event) && typeof event.args.data.nodeId !== 'undefined') {\n        foundIds.add(event.args.data.nodeId);\n    }\n    else if (Types.Events.isScrollLayer(event) && typeof event.args.data.nodeId !== 'undefined') {\n        foundIds.add(event.args.data.nodeId);\n    }\n    else if (Types.Events.isSyntheticAnimation(event) && typeof event.args.data.beginEvent.args.data.nodeId !== 'undefined') {\n        foundIds.add(event.args.data.beginEvent.args.data.nodeId);\n    }\n    else if (Types.Events.isDecodeImage(event)) {\n        // For a DecodeImage event, we can use the ImagePaintingHandler, which has\n        // done the work to build the relationship between a DecodeImage event and\n        // the corresponding PaintImage event.\n        const paintImageEvent = modelData.ImagePainting.paintImageForEvent.get(event);\n        if (paintImageEvent && typeof paintImageEvent.args.data.nodeId !== 'undefined') {\n            foundIds.add(paintImageEvent.args.data.nodeId);\n        }\n    }\n    else if (Types.Events.isDrawLazyPixelRef(event) && event.args?.LazyPixelRef) {\n        const paintImageEvent = modelData.ImagePainting.paintImageByDrawLazyPixelRef.get(event.args.LazyPixelRef);\n        if (paintImageEvent && typeof paintImageEvent.args.data.nodeId !== 'undefined') {\n            foundIds.add(paintImageEvent.args.data.nodeId);\n        }\n    }\n    else if (Types.Events.isParseMetaViewport(event) && typeof event.args?.data.node_id !== 'undefined') {\n        foundIds.add(event.args.data.node_id);\n    }\n    nodeIdsForEventCache.set(event, foundIds);\n    return foundIds;\n}\n/**\n * Looks up for backend node ids in different types of trace events\n * and resolves them into related DOM nodes.\n * This method should be progressively updated to support more events\n * containing node ids which we want to resolve.\n */\nexport async function extractRelatedDOMNodesFromEvent(modelData, event) {\n    const nodeIds = nodeIdsForEvent(modelData, event);\n    if (nodeIds.size) {\n        return domNodesForMultipleBackendNodeIds(modelData, Array.from(nodeIds));\n    }\n    return null;\n}\n/**\n * Takes a set of Protocol.DOM.BackendNodeId ids and will return a map of NodeId=>DOMNode.\n * Results are cached based on 1) the provided ParsedTrace and 2) the provided set of IDs.\n */\nexport async function domNodesForMultipleBackendNodeIds(modelData, nodeIds) {\n    const fromCache = domLookUpBatchNodesCache.get(modelData)?.get(nodeIds);\n    if (fromCache) {\n        return fromCache;\n    }\n    const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    const domModel = target?.model(SDK.DOMModel.DOMModel);\n    if (!domModel) {\n        return new Map();\n    }\n    const domNodesMap = await domModel.pushNodesByBackendIdsToFrontend(new Set(nodeIds)) || new Map();\n    const cacheForModel = domLookUpBatchNodesCache.get(modelData) ||\n        new Map();\n    cacheForModel.set(nodeIds, domNodesMap);\n    domLookUpBatchNodesCache.set(modelData, cacheForModel);\n    return domNodesMap;\n}\nconst layoutShiftSourcesCache = new Map();\nconst normalizedLayoutShiftNodesCache = new Map();\n/**\n * Calculates and returns a list of sources for a LayoutShift.\n * Here, a source is considered as a node that moved and contributed to the\n * given LayoutShift existing and the score it was given. Each source returned\n * contains a reference to the DOM Node, and its dimensions (as a DOMRect), both\n * before and now, so we can see how this node changed and how that impacted the\n * layout shift.\n *\n * This data is cached based on the provided model data and the given layout\n * shift, so it is is safe to call multiple times with the same input.\n */\nexport async function sourcesForLayoutShift(modelData, event) {\n    const fromCache = layoutShiftSourcesCache.get(modelData)?.get(event);\n    if (fromCache) {\n        return fromCache;\n    }\n    const impactedNodes = event.args.data?.impacted_nodes;\n    if (!impactedNodes) {\n        return [];\n    }\n    const sources = [];\n    await Promise.all(impactedNodes.map(async (node) => {\n        const domNode = await domNodeForBackendNodeID(modelData, node.node_id);\n        if (domNode) {\n            sources.push({\n                previousRect: new DOMRect(node.old_rect[0], node.old_rect[1], node.old_rect[2], node.old_rect[3]),\n                currentRect: new DOMRect(node.new_rect[0], node.new_rect[1], node.new_rect[2], node.new_rect[3]),\n                node: domNode,\n            });\n        }\n    }));\n    const cacheForModel = layoutShiftSourcesCache.get(modelData) || new Map();\n    cacheForModel.set(event, sources);\n    layoutShiftSourcesCache.set(modelData, cacheForModel);\n    return sources;\n}\n/**\n * Takes a LayoutShift and normalizes its node dimensions based on the device\n * pixel ratio (DPR) of the user's display.\n * This is required because the Layout Instability API is not based on CSS\n * pixels, but physical pixels. Therefore we need to map these to normalized CSS\n * pixels if we can. For example, if the user is on a device with a DPR of 2,\n * the values of the node dimensions reported by the Instability API need to be\n * divided by 2 to be accurate.\n * This function is safe to call multiple times as results are cached based on\n * the provided model data.\n * See https://crbug.com/1300309 for details.\n */\nexport async function normalizedImpactedNodesForLayoutShift(modelData, event) {\n    const fromCache = normalizedLayoutShiftNodesCache.get(modelData)?.get(event);\n    if (fromCache) {\n        return fromCache;\n    }\n    const impactedNodes = event.args?.data?.impacted_nodes;\n    if (!impactedNodes) {\n        return [];\n    }\n    let viewportScale = null;\n    const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    // Get the CSS-to-physical pixel ratio of the device the inspected\n    // target is running at.\n    const evaluateResult = await target?.runtimeAgent().invoke_evaluate({ expression: 'window.devicePixelRatio' });\n    if (evaluateResult?.result.type === 'number') {\n        viewportScale = evaluateResult?.result.value ?? null;\n    }\n    if (!viewportScale) {\n        // Bail and return the nodes as is.\n        return impactedNodes;\n    }\n    const normalizedNodes = [];\n    for (const impactedNode of impactedNodes) {\n        const newNode = { ...impactedNode };\n        for (let i = 0; i < impactedNode.old_rect.length; i++) {\n            newNode.old_rect[i] /= viewportScale;\n        }\n        for (let i = 0; i < impactedNode.new_rect.length; i++) {\n            newNode.new_rect[i] /= viewportScale;\n        }\n        normalizedNodes.push(newNode);\n    }\n    const cacheForModel = normalizedLayoutShiftNodesCache.get(modelData) ||\n        new Map();\n    cacheForModel.set(event, normalizedNodes);\n    normalizedLayoutShiftNodesCache.set(modelData, cacheForModel);\n    return normalizedNodes;\n}\n//# sourceMappingURL=FetchNodes.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Helpers from '../helpers/helpers.js';\nimport * as Types from '../types/types.js';\nconst IDLE_FUNCTION_CALL_NAMES = new Set([\n    '(program)',\n    '(idle)',\n    '(root)',\n]);\nexport function calculateWindow(traceBounds, mainThreadEntries) {\n    if (!mainThreadEntries.length) {\n        return traceBounds;\n    }\n    const entriesWithIdleRemoved = mainThreadEntries.filter(entry => {\n        if (Types.Events.isProfileCall(entry) &&\n            (IDLE_FUNCTION_CALL_NAMES.has(entry.callFrame.functionName) || !entry.callFrame.functionName)) {\n            return false;\n        }\n        return true;\n    });\n    if (entriesWithIdleRemoved.length === 0) {\n        return traceBounds;\n    }\n    /**\n     * Calculates regions of low utilization and returns the index of the event\n     * that is the first event that should be included.\n     **/\n    function findLowUtilizationRegion(startIndex, stopIndex) {\n        const threshold = 0.1;\n        let cutIndex = startIndex;\n        const entryAtCut = entriesWithIdleRemoved[cutIndex];\n        const timings = Helpers.Timing.eventTimingsMicroSeconds(entryAtCut);\n        let cutTime = (timings.startTime + timings.endTime) / 2;\n        let usedTime = 0;\n        const step = Math.sign(stopIndex - startIndex);\n        for (let i = startIndex; i !== stopIndex; i += step) {\n            const task = entriesWithIdleRemoved[i];\n            const taskTimings = Helpers.Timing.eventTimingsMicroSeconds(task);\n            const taskTime = (taskTimings.startTime + taskTimings.endTime) / 2;\n            const interval = Math.abs(cutTime - taskTime);\n            if (usedTime < threshold * interval) {\n                cutIndex = i;\n                cutTime = taskTime;\n                usedTime = 0;\n            }\n            usedTime += taskTimings.duration;\n        }\n        return cutIndex;\n    }\n    const rightIndex = findLowUtilizationRegion(entriesWithIdleRemoved.length - 1, 0);\n    const leftIndex = findLowUtilizationRegion(0, rightIndex);\n    const leftTimings = Helpers.Timing.eventTimingsMicroSeconds(entriesWithIdleRemoved[leftIndex]);\n    const rightTimings = Helpers.Timing.eventTimingsMicroSeconds(entriesWithIdleRemoved[rightIndex]);\n    let leftTime = leftTimings.startTime;\n    let rightTime = rightTimings.endTime;\n    const zoomedInSpan = rightTime - leftTime;\n    if (zoomedInSpan < traceBounds.range * 0.1) {\n        // If the area we have chosen to zoom into is less than 10% of the entire\n        // span, we bail and show the entire trace. It would not be so useful to\n        // the user to zoom in on such a small area; we assume they have\n        // purposefully recorded a trace that contains empty periods of time.\n        return traceBounds;\n    }\n    // Adjust the left time down by 5%, and the right time up by 5%, so that\n    // we give the range we want to zoom a bit of breathing space. At the\n    // same time, ensure that we do not stray beyond the bounds of the\n    // min/max time of the entire trace.\n    leftTime = Types.Timing.MicroSeconds(Math.max(leftTime - 0.05 * zoomedInSpan, traceBounds.min));\n    rightTime = Types.Timing.MicroSeconds(Math.min(rightTime + 0.05 * zoomedInSpan, traceBounds.max));\n    return {\n        min: leftTime,\n        max: rightTime,\n        range: Types.Timing.MicroSeconds(rightTime - leftTime),\n    };\n}\n//# sourceMappingURL=MainThreadActivity.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Types from '../types/types.js';\nexport async function forNewRecording(isCpuProfile, recordStartTime) {\n    try {\n        if (isCpuProfile) {\n            // For CPU profile, only specify data origin\n            return {\n                dataOrigin: \"CPUProfile\" /* Types.File.DataOrigin.CPU_PROFILE */,\n            };\n        }\n        const cpuThrottlingManager = SDK.CPUThrottlingManager.CPUThrottlingManager.instance();\n        // If the CPU Throttling manager has yet to have its primary page target\n        // set, it will block on the call to get the current hardware concurrency\n        // until it does. At this point where the user has recorded a trace, that\n        // target should have been set. So if it doesn't have it set, we instead\n        // just bail and don't store the hardware concurrency (this is only\n        // metadata, not mission critical information).\n        // We also race this call against a 1s timeout, because sometimes this call\n        // can hang (unsure exactly why) and we do not want to block parsing for\n        // too long as a result.\n        function getConcurrencyOrTimeout() {\n            return Promise.race([\n                SDK.CPUThrottlingManager.CPUThrottlingManager.instance().getHardwareConcurrency(),\n                new Promise(resolve => {\n                    setTimeout(() => resolve(undefined), 1_000);\n                }),\n            ]);\n        }\n        const hardwareConcurrency = cpuThrottlingManager.hasPrimaryPageTargetSet() ? await getConcurrencyOrTimeout() : undefined;\n        const cpuThrottling = SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingRate();\n        const networkConditions = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n        const networkTitle = typeof networkConditions.title === 'function' ? networkConditions.title() : networkConditions.title;\n        return {\n            source: 'DevTools',\n            startTime: recordStartTime ? new Date(recordStartTime).toJSON() : undefined, // ISO-8601 timestamp\n            cpuThrottling,\n            networkThrottling: networkTitle,\n            hardwareConcurrency,\n            dataOrigin: \"TraceEvents\" /* Types.File.DataOrigin.TRACE_EVENTS */,\n        };\n    }\n    catch {\n        // If anything went wrong, it does not really matter. The impact is that we\n        // will not save the metadata when we save the trace to disk, but that is\n        // not really important, so just return empty object and move on\n        return {};\n    }\n}\n//# sourceMappingURL=Metadata.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Bindings from '../../../models/bindings/bindings.js';\nimport * as SourceMapScopes from '../../../models/source_map_scopes/source_map_scopes.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as Workspace from '../../../models/workspace/workspace.js';\nexport class SourceMappingsUpdated extends Event {\n    static eventName = 'sourcemappingsupdated';\n    constructor() {\n        super(SourceMappingsUpdated.eventName, {\n            composed: true,\n            bubbles: true,\n        });\n    }\n}\n// Resolved code location data is keyed based on\n// ProcessID=>ThreadID=> Call frame key.\n// The code location key is created as a concatenation of its fields.\nexport const resolvedCodeLocationDataNames = new Map();\nexport class SourceMapsResolver extends EventTarget {\n    #parsedTrace;\n    #isResolving = false;\n    // We need to gather up a list of all the DebuggerModels that we should\n    // listen to for source map attached events. For most pages this will be\n    // the debugger model for the primary page target, but if a trace has\n    // workers, we would also need to gather up the DebuggerModel instances for\n    // those workers too.\n    #debuggerModelsToListen = new Set();\n    constructor(parsedTrace) {\n        super();\n        this.#parsedTrace = parsedTrace;\n    }\n    static clearResolvedNodeNames() {\n        resolvedCodeLocationDataNames.clear();\n    }\n    static keyForCodeLocation(callFrame) {\n        return `${callFrame.url}$$$${callFrame.scriptId}$$$${callFrame.functionName}$$$${callFrame.lineNumber}$$$${callFrame.columnNumber}`;\n    }\n    /**\n     * For trace events containing a call frame / source location\n     * (f.e. a stack trace), attempts to obtain the resolved source\n     * location based on the those that have been resolved so far from\n     * listened source maps.\n     *\n     * Note that a single deployed URL can map to multiple authored URLs\n     * (f.e. if an app is bundled). Thus, beyond a URL we can use code\n     * location data like line and column numbers to obtain the specific\n     * authored code according to the source mappings.\n     */\n    static resolvedCodeLocationForEntry(entry) {\n        let callFrame = null;\n        if (Trace.Types.Events.isProfileCall(entry)) {\n            callFrame = entry.callFrame;\n        }\n        else {\n            const stackTrace = Trace.Helpers.Trace.getZeroIndexedStackTraceForEvent(entry);\n            if (stackTrace === null || stackTrace.length < 1) {\n                return null;\n            }\n            callFrame = stackTrace[0];\n        }\n        const codeLocationKey = this.keyForCodeLocation(callFrame);\n        return resolvedCodeLocationDataNames.get(entry.pid)?.get(entry.tid)?.get(codeLocationKey) ?? null;\n    }\n    static resolvedURLForEntry(parsedTrace, entry) {\n        const resolvedCallFrameURL = SourceMapsResolver.resolvedCodeLocationForEntry(entry)?.devtoolsLocation?.uiSourceCode.url();\n        if (resolvedCallFrameURL) {\n            return resolvedCallFrameURL;\n        }\n        // If no source mapping was found for an entry's URL, then default\n        // to the URL value contained in the event itself, if any.\n        const url = Trace.Extras.URLForEntry.getNonResolved(parsedTrace, entry);\n        if (url) {\n            return Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url)?.url() ?? url;\n        }\n        return null;\n    }\n    static storeResolvedNodeDataForEntry(pid, tid, callFrame, resolvedCodeLocationData) {\n        const resolvedForPid = resolvedCodeLocationDataNames.get(pid) ||\n            new Map();\n        const resolvedForTid = resolvedForPid.get(tid) || new Map();\n        const keyForCallFrame = this.keyForCodeLocation(callFrame);\n        resolvedForTid.set(keyForCallFrame, resolvedCodeLocationData);\n        resolvedForPid.set(tid, resolvedForTid);\n        resolvedCodeLocationDataNames.set(pid, resolvedForPid);\n    }\n    async install() {\n        for (const threadToProfileMap of this.#parsedTrace.Samples.profilesInProcess.values()) {\n            for (const [tid, profile] of threadToProfileMap) {\n                const nodes = profile.parsedProfile.nodes();\n                if (!nodes || nodes.length === 0) {\n                    continue;\n                }\n                const target = this.#targetForThread(tid);\n                const debuggerModel = target?.model(SDK.DebuggerModel.DebuggerModel);\n                if (!debuggerModel) {\n                    continue;\n                }\n                for (const node of nodes) {\n                    const script = debuggerModel.scriptForId(String(node.callFrame.scriptId));\n                    const shouldListenToSourceMap = !script || script.sourceMapURL;\n                    if (!shouldListenToSourceMap) {\n                        continue;\n                    }\n                    this.#debuggerModelsToListen.add(debuggerModel);\n                }\n            }\n        }\n        for (const debuggerModel of this.#debuggerModelsToListen) {\n            debuggerModel.sourceMapManager().addEventListener(SDK.SourceMapManager.Events.SourceMapAttached, this.#onAttachedSourceMap, this);\n        }\n        // Although we have added listeners for SourceMapAttached events, we also\n        // immediately try to resolve function names. This ensures we use any\n        // sourcemaps that were attached before we bound our event listener.\n        await this.#resolveMappingsForProfileNodes();\n    }\n    /**\n     * Removes the event listeners and stops tracking newly added sourcemaps.\n     * Should be called before destroying an instance of this class to avoid leaks\n     * with listeners.\n     */\n    uninstall() {\n        for (const debuggerModel of this.#debuggerModelsToListen) {\n            debuggerModel.sourceMapManager().removeEventListener(SDK.SourceMapManager.Events.SourceMapAttached, this.#onAttachedSourceMap, this);\n        }\n        this.#debuggerModelsToListen.clear();\n    }\n    async #resolveMappingsForProfileNodes() {\n        // Used to track if source mappings were updated when a source map\n        // is attach. If not, we do not notify the flamechart that mappings\n        // were updated, since that would trigger a rerender.\n        let updatedMappings = false;\n        for (const [pid, threadsInProcess] of this.#parsedTrace.Samples.profilesInProcess) {\n            for (const [tid, threadProfile] of threadsInProcess) {\n                const nodes = threadProfile.parsedProfile.nodes() ?? [];\n                const target = this.#targetForThread(tid);\n                if (!target) {\n                    continue;\n                }\n                for (const node of nodes) {\n                    const resolvedFunctionName = await SourceMapScopes.NamesResolver.resolveProfileFrameFunctionName(node.callFrame, target);\n                    updatedMappings ||= Boolean(resolvedFunctionName);\n                    node.setFunctionName(resolvedFunctionName);\n                    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n                    const script = debuggerModel?.scriptForId(node.scriptId) || null;\n                    const location = debuggerModel &&\n                        new SDK.DebuggerModel.Location(debuggerModel, node.callFrame.scriptId, node.callFrame.lineNumber, node.callFrame.columnNumber);\n                    const uiLocation = location &&\n                        await Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().rawLocationToUILocation(location);\n                    updatedMappings ||= Boolean(uiLocation);\n                    SourceMapsResolver.storeResolvedNodeDataForEntry(pid, tid, node.callFrame, { name: resolvedFunctionName, devtoolsLocation: uiLocation, script });\n                }\n            }\n        }\n        if (!updatedMappings) {\n            return;\n        }\n        this.dispatchEvent(new SourceMappingsUpdated());\n    }\n    #onAttachedSourceMap() {\n        // Exit if we are already resolving so that we batch requests; if pages\n        // have a lot of sourcemaps we can get a lot of events at once.\n        if (this.#isResolving) {\n            return;\n        }\n        this.#isResolving = true;\n        // Resolving names triggers a repaint of the flame chart. Instead of attempting to resolve\n        // names every time a source map is attached, wait for some time once the first source map is\n        // attached. This way we allow for other source maps to be parsed before attempting a name\n        // resolving using the available source maps. Otherwise the UI is blocked when the number\n        // of source maps is particularly large.\n        setTimeout(async () => {\n            this.#isResolving = false;\n            await this.#resolveMappingsForProfileNodes();\n        }, 500);\n    }\n    // Figure out the target for the node. If it is in a worker thread,\n    // that is the target, otherwise we use the primary page target.\n    #targetForThread(tid) {\n        const maybeWorkerId = this.#parsedTrace.Workers.workerIdByThread.get(tid);\n        if (maybeWorkerId) {\n            return SDK.TargetManager.TargetManager.instance().targetById(maybeWorkerId);\n        }\n        return SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    }\n}\n//# sourceMappingURL=SourceMapsResolver.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Bindings from '../../../models/bindings/bindings.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport { SourceMapsResolver } from './SourceMapsResolver.js';\nexport function isIgnoreListedEntry(entry) {\n    if (!Trace.Types.Events.isProfileCall(entry)) {\n        return false;\n    }\n    const rawUrl = entry.callFrame.url;\n    const sourceMappedData = SourceMapsResolver.resolvedCodeLocationForEntry(entry);\n    const script = sourceMappedData?.script;\n    const uiSourceCode = sourceMappedData?.devtoolsLocation?.uiSourceCode;\n    const resolvedUrl = uiSourceCode?.url();\n    const isKnownThirdParty = uiSourceCode?.isKnownThirdParty();\n    const isContentScript = script?.isContentScript();\n    const ignoreListOptions = { isContentScript, isKnownThirdParty };\n    const urlToUse = resolvedUrl || rawUrl;\n    return isIgnoreListedURL(urlToUse, ignoreListOptions);\n}\nexport function isIgnoreListedURL(url, options) {\n    return Bindings.IgnoreListManager.IgnoreListManager.instance().isUserIgnoreListedURL(url, options);\n}\n//# sourceMappingURL=IgnoreList.js.map","import * as i18n from '../../core/i18n/i18n.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nconst UIStrings = {\n    /**\n     * @description Text in the Performance panel to show how long was spent in a particular part of the code.\n     * The first placeholder is the total time taken for this node and all children, the second is the self time\n     * (time taken in this node, without children included).\n     *@example {10ms} PH1\n     *@example {10ms} PH2\n     */\n    sSelfS: '{PH1} (self {PH2})',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/AppenderUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * Builds the style for the group.\n * Each group has a predefined style and a reference to the definition of the legacy track (which should be removed in the future).\n * @param extra the customized fields with value.\n * @returns the built GroupStyle\n */\nexport function buildGroupStyle(extra) {\n    const defaultGroupStyle = {\n        padding: 4,\n        height: 17,\n        collapsible: true,\n        color: ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-on-surface'),\n        backgroundColor: ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container'),\n        nestingLevel: 0,\n        shareHeaderLine: true,\n    };\n    return Object.assign(defaultGroupStyle, extra);\n}\n/**\n * Builds the header corresponding to the track. A header is added in the shape of a group in the flame chart data.\n * @param jslogContext the text that will be set as the logging context\n *                          for the Visual Elements logging framework. Pass\n *                          `null` to not set a context and consequently\n *                          cause this group not to be logged.\n * @param startLevel the flame chart level at which the track header is appended.\n * @param name the display name of the track.\n * @param style the GroupStyle for the track header.\n * @param selectable if the track is selectable.\n * @param expanded if the track is expanded.\n * @param track this is set only when `selectable` is true, and it is used for selecting a track in the details panel.\n * @param showStackContextMenu whether menu with options to merge/collapse entries in track is shown.\n * @returns the group that built from the give data\n */\nexport function buildTrackHeader(jslogContext, startLevel, name, style, selectable, expanded, showStackContextMenu) {\n    const group = {\n        startLevel,\n        name: name,\n        style,\n        selectable,\n        expanded,\n        showStackContextMenu,\n    };\n    if (jslogContext !== null) {\n        group.jslogContext = jslogContext;\n    }\n    return group;\n}\n/**\n * Returns the time info shown when an event is hovered in the timeline.\n * @param totalTime the total time of the hovered event.\n * @param selfTime the self time of the hovered event.\n * @returns the formatted time string for highlightedEntryInfo\n */\nexport function getFormattedTime(totalTime, selfTime) {\n    const formattedTotalTime = Trace.Helpers.Timing.microSecondsToMilliseconds((totalTime || 0));\n    if (formattedTotalTime === Trace.Types.Timing.MilliSeconds(0)) {\n        return '';\n    }\n    const formattedSelfTime = Trace.Helpers.Timing.microSecondsToMilliseconds((selfTime || 0));\n    const minSelfTimeSignificance = 1e-6;\n    const formattedTime = Math.abs(formattedTotalTime - formattedSelfTime) > minSelfTimeSignificance &&\n        formattedSelfTime > minSelfTimeSignificance ?\n        i18nString(UIStrings.sSelfS, {\n            PH1: i18n.TimeUtilities.millisToString(formattedTotalTime, true),\n            PH2: i18n.TimeUtilities.millisToString(formattedSelfTime, true),\n        }) :\n        i18n.TimeUtilities.millisToString(formattedTotalTime, true);\n    return formattedTime;\n}\n/**\n * Returns the first level that is available for an event.\n */\nexport function getEventLevel(event, lastTimestampByLevel) {\n    let level = 0;\n    const startTime = event.ts;\n    const endTime = event.ts + (event.dur || 0);\n    // Look vertically for the first level where this event fits,\n    // that is, where it wouldn't overlap with other events.\n    while (level < lastTimestampByLevel.length && startTime < lastTimestampByLevel[level]) {\n        // For each event, we look each level from top, and see if start timestamp of this\n        // event is used by current level already. If yes, we will go to check next level.\n        ++level;\n    }\n    lastTimestampByLevel[level] = endTime;\n    return level;\n}\nexport function addDecorationToEvent(timelineData, eventIndex, decoration) {\n    const decorationsForEvent = timelineData.entryDecorations[eventIndex] || [];\n    decorationsForEvent.push(decoration);\n    timelineData.entryDecorations[eventIndex] = decorationsForEvent;\n}\n//# sourceMappingURL=AppenderUtils.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport { addDecorationToEvent, buildGroupStyle, buildTrackHeader, getFormattedTime } from './AppenderUtils.js';\nconst UIStrings = {\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    animations: 'Animations',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/AnimationsTrackAppender.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class AnimationsTrackAppender {\n    appenderName = 'Animations';\n    #compatibilityBuilder;\n    #parsedTrace;\n    #eventAppendedCallback = this.#eventAppendedCallbackFunction.bind(this);\n    constructor(compatibilityBuilder, parsedTrace) {\n        this.#compatibilityBuilder = compatibilityBuilder;\n        this.#parsedTrace = parsedTrace;\n    }\n    appendTrackAtLevel(trackStartLevel, expanded) {\n        const animations = this.#parsedTrace.Animations.animations;\n        if (animations.length === 0) {\n            return trackStartLevel;\n        }\n        this.#appendTrackHeaderAtLevel(trackStartLevel, expanded);\n        return this.#compatibilityBuilder.appendEventsAtLevel(animations, trackStartLevel, this, this.#eventAppendedCallback);\n    }\n    #appendTrackHeaderAtLevel(currentLevel, expanded) {\n        const style = buildGroupStyle({ useFirstLineForOverview: false });\n        const group = buildTrackHeader(\"animations\" /* VisualLoggingTrackName.ANIMATIONS */, currentLevel, i18nString(UIStrings.animations), style, \n        /* selectable= */ true, expanded);\n        this.#compatibilityBuilder.registerTrackForGroup(group, this);\n    }\n    #eventAppendedCallbackFunction(event, index) {\n        if (event && Trace.Types.Events.isSyntheticAnimation(event)) {\n            const CLSInsight = Trace.Insights.InsightRunners.CumulativeLayoutShift;\n            const failures = CLSInsight.getNonCompositedFailure(event);\n            if (failures.length) {\n                addDecorationToEvent(this.#compatibilityBuilder.getFlameChartTimelineData(), index, {\n                    type: \"WARNING_TRIANGLE\" /* PerfUI.FlameChart.FlameChartDecorationType.WARNING_TRIANGLE */,\n                });\n            }\n        }\n    }\n    colorForEvent() {\n        return ThemeSupport.ThemeSupport.instance().getComputedValue('--app-color-rendering');\n    }\n    titleForEvent(event) {\n        const { displayName } = event.args.data.beginEvent.args.data;\n        return displayName || event.name;\n    }\n    highlightedEntryInfo(event) {\n        const title = this.titleForEvent(event);\n        return { title, formattedTime: getFormattedTime(event.dur) };\n    }\n}\n//# sourceMappingURL=AnimationsTrackAppender.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Trace from '../../models/trace/trace.js';\nlet instance = null;\nexport class StateChangedEvent extends Event {\n    state;\n    updateType;\n    options;\n    static eventName = 'traceboundsstatechanged';\n    constructor(state, updateType, options = { shouldAnimate: false }) {\n        super(StateChangedEvent.eventName, { composed: true, bubbles: true });\n        this.state = state;\n        this.updateType = updateType;\n        this.options = options;\n    }\n}\n// Exposed as a shortcut to BoundsManager.instance().addEventListener, which\n// also takes care of type-casting the event to StateChangedEvent.\nexport function onChange(cb) {\n    BoundsManager.instance().addEventListener(StateChangedEvent.eventName, \n    // Cast the callback as TS doesn't know that these events will emit\n    // StateChangedEvent types.\n    cb);\n}\nexport function removeListener(cb) {\n    BoundsManager.instance().removeEventListener(StateChangedEvent.eventName, cb);\n}\nexport class BoundsManager extends EventTarget {\n    static instance(opts = { forceNew: null }) {\n        const forceNew = Boolean(opts.forceNew);\n        if (!instance || forceNew) {\n            instance = new BoundsManager();\n        }\n        return instance;\n    }\n    static removeInstance() {\n        instance = null;\n    }\n    #currentState = null;\n    constructor() {\n        // Defined to enable us to mark it as Private.\n        super();\n    }\n    resetWithNewBounds(initialBounds) {\n        this.#currentState = {\n            entireTraceBounds: initialBounds,\n            minimapTraceBounds: initialBounds,\n            timelineTraceWindow: initialBounds,\n        };\n        this.dispatchEvent(new StateChangedEvent(this.state(), 'RESET'));\n        return this;\n    }\n    state() {\n        if (this.#currentState === null) {\n            return null;\n        }\n        const entireBoundsMilli = Trace.Helpers.Timing.traceWindowMilliSeconds(this.#currentState.entireTraceBounds);\n        const minimapBoundsMilli = Trace.Helpers.Timing.traceWindowMilliSeconds(this.#currentState.minimapTraceBounds);\n        const timelineTraceWindowMilli = Trace.Helpers.Timing.traceWindowMilliSeconds(this.#currentState.timelineTraceWindow);\n        return {\n            micro: this.#currentState,\n            milli: {\n                entireTraceBounds: entireBoundsMilli,\n                minimapTraceBounds: minimapBoundsMilli,\n                timelineTraceWindow: timelineTraceWindowMilli,\n            },\n        };\n    }\n    setMiniMapBounds(newBounds) {\n        if (!this.#currentState) {\n            // If we don't have the existing state and know the trace bounds, we\n            // cannot set the minimap bounds.\n            console.error('TraceBounds.setMiniMapBounds could not set bounds because there is no existing trace window set.');\n            return;\n        }\n        const existingBounds = this.#currentState.minimapTraceBounds;\n        if (newBounds.min === existingBounds.min && newBounds.max === existingBounds.max) {\n            // New bounds are identical to the old ones so no action required.\n            return;\n        }\n        if (newBounds.range < 1_000) {\n            // Minimum minimap bounds range is 1 millisecond.\n            return;\n        }\n        this.#currentState.minimapTraceBounds = newBounds;\n        // this.state() cannot be null here.\n        this.dispatchEvent(new StateChangedEvent(this.state(), 'MINIMAP_BOUNDS'));\n    }\n    /**\n     * Updates the visible part of the trace that the user can see.\n     * @param options.ignoreMiniMapBounds - by default the visible window will be\n     * bound by the minimap bounds. If you set this to `true` then the timeline\n     * visible window will not be constrained by the minimap bounds. Be careful\n     * with this! Unless you deal with this situation, the UI of the performance\n     * panel will break.\n     */\n    setTimelineVisibleWindow(newWindow, options = {\n        shouldAnimate: false,\n        ignoreMiniMapBounds: false,\n    }) {\n        if (!this.#currentState) {\n            // This is a weird state to be in: we can't change the visible timeline\n            // window if we don't alreayd have an existing state with the trace\n            // bounds set.\n            console.error('TraceBounds.setTimelineVisibleWindow could not set bounds because there is no existing trace window set.');\n            return;\n        }\n        const existingWindow = this.#currentState.timelineTraceWindow;\n        if (newWindow.range < 1_000) {\n            // Minimum timeline visible window range is 1 millisecond.\n            return;\n        }\n        if (newWindow.min === existingWindow.min && newWindow.max === existingWindow.max) {\n            // New bounds are identical to the old ones so no action required.\n            return;\n        }\n        if (!options.ignoreMiniMapBounds) {\n            // Ensure that the setTimelineVisibleWindow can never go outside the bounds of the minimap bounds.\n            newWindow.min =\n                Trace.Types.Timing.MicroSeconds(Math.max(this.#currentState.minimapTraceBounds.min, newWindow.min));\n            newWindow.max =\n                Trace.Types.Timing.MicroSeconds(Math.min(this.#currentState.minimapTraceBounds.max, newWindow.max));\n        }\n        if (newWindow.min === existingWindow.min && newWindow.max === existingWindow.max) {\n            // If, after we adjust for the minimap bounds, the new window matches the\n            // old one, we can exit as no action is required.\n            return;\n        }\n        this.#currentState.timelineTraceWindow = newWindow;\n        this.dispatchEvent(new StateChangedEvent(this.state(), 'VISIBLE_WINDOW', { shouldAnimate: options.shouldAnimate }));\n    }\n}\n//# sourceMappingURL=TraceBounds.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as TraceBounds from '../../../services/trace_bounds/trace_bounds.js';\nexport function flattenBreadcrumbs(initialBreadcrumb) {\n    const allBreadcrumbs = [initialBreadcrumb];\n    let breadcrumbsIter = initialBreadcrumb;\n    while (breadcrumbsIter.child !== null) {\n        const iterChild = breadcrumbsIter.child;\n        if (iterChild !== null) {\n            allBreadcrumbs.push(iterChild);\n            breadcrumbsIter = iterChild;\n        }\n    }\n    return allBreadcrumbs;\n}\nexport class Breadcrumbs {\n    initialBreadcrumb;\n    activeBreadcrumb;\n    constructor(initialTraceWindow) {\n        this.initialBreadcrumb = {\n            window: initialTraceWindow,\n            child: null,\n        };\n        let lastBreadcrumb = this.initialBreadcrumb;\n        while (lastBreadcrumb.child !== null) {\n            lastBreadcrumb = lastBreadcrumb.child;\n        }\n        this.activeBreadcrumb = lastBreadcrumb;\n    }\n    add(newBreadcrumbTraceWindow) {\n        if (!this.isTraceWindowWithinTraceWindow(newBreadcrumbTraceWindow, this.activeBreadcrumb.window)) {\n            throw new Error('Can not add a breadcrumb that is equal to or is outside of the parent breadcrumb TimeWindow');\n        }\n        const newBreadcrumb = {\n            window: newBreadcrumbTraceWindow,\n            child: null,\n        };\n        // To add a new Breadcrumb to the Breadcrumbs Linked List, set the child of active breadcrumb\n        // to the new breadcrumb and update the active Breadcrumb to the newly added one\n        this.activeBreadcrumb.child = newBreadcrumb;\n        this.setActiveBreadcrumb(newBreadcrumb, { removeChildBreadcrumbs: false, updateVisibleWindow: true });\n        return newBreadcrumb;\n    }\n    // Breadcumb should be within the bounds of the parent and can not have both start and end be equal to the parent\n    isTraceWindowWithinTraceWindow(child, parent) {\n        return (child.min >= parent.min && child.max <= parent.max) &&\n            !(child.min === parent.min && child.max === parent.max);\n    }\n    // Used to set an initial breadcrumbs from modifications loaded from a file\n    setInitialBreadcrumbFromLoadedModifications(initialBreadcrumb) {\n        this.initialBreadcrumb = initialBreadcrumb;\n        // Make last breadcrumb active\n        let lastBreadcrumb = initialBreadcrumb;\n        while (lastBreadcrumb.child !== null) {\n            lastBreadcrumb = lastBreadcrumb.child;\n        }\n        this.setActiveBreadcrumb(lastBreadcrumb, { removeChildBreadcrumbs: false, updateVisibleWindow: true });\n    }\n    /**\n     * Sets a breadcrumb to be active.\n     * Doing this will update the minimap bounds and optionally based on the\n     * `updateVisibleWindow` parameter, it will also update the active window.\n     * The reason `updateVisibleWindow` is configurable is because if we are\n     * changing which breadcrumb is active because we want to reveal something to\n     * the user, we may have already updated the visible timeline window, but we\n     * are activating the breadcrumb to show the user that they are now within\n     * this breadcrumb. This is used when revealing insights and annotations.\n     */\n    setActiveBreadcrumb(activeBreadcrumb, options) {\n        // If the children of the activated breadcrumb need to be removed, set the child on the\n        // activated breadcrumb to null. Since breadcrumbs are a linked list, this will remove all\n        // of the following children.\n        if (options.removeChildBreadcrumbs) {\n            activeBreadcrumb.child = null;\n        }\n        // When we assign a new active breadcrumb, both the minimap bounds and the visible\n        // window get set to that breadcrumb's window.\n        this.activeBreadcrumb = activeBreadcrumb;\n        TraceBounds.TraceBounds.BoundsManager.instance().setMiniMapBounds(activeBreadcrumb.window);\n        if (options.updateVisibleWindow) {\n            TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(activeBreadcrumb.window);\n        }\n    }\n}\n//# sourceMappingURL=Breadcrumbs.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.breadcrumbs {\n  display: none;\n  align-items: center;\n  height: 29px;\n  padding: 3px;\n  overflow-y: hidden;\n  overflow-x: scroll;\n}\n\n.breadcrumbs::-webkit-scrollbar {\n  display: none;\n}\n\n.breadcrumb {\n  padding: 2px 6px;\n  border-radius: 4px;\n}\n\n.breadcrumb:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.range {\n  font-size: 12px;\n  white-space: nowrap;\n}\n\n.active-breadcrumb {\n  font-weight: bold;\n  color: var(--app-color-active-breadcrumb);\n}\n\n/*# sourceURL=breadcrumbsUI.css */\n`);\n\nexport default styles;\n","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport { flattenBreadcrumbs } from './Breadcrumbs.js';\nimport breadcrumbsUIStyles from './breadcrumbsUI.css.js';\nconst { render, html } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description A context menu item in the Minimap Breadcrumb context menu.\n     * This context menu option activates the breadcrumb that the context menu was opened on.\n     */\n    activateBreadcrumb: 'Activate breadcrumb',\n    /**\n     *@description A context menu item in the Minimap Breadcrumb context menu.\n     * This context menu option removed all the child breadcrumbs and activates\n     * the breadcrumb that the context menu was opened on.\n     */\n    removeChildBreadcrumbs: 'Remove child breadcrumbs',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/BreadcrumbsUI.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class BreadcrumbActivatedEvent extends Event {\n    breadcrumb;\n    childBreadcrumbsRemoved;\n    static eventName = 'breadcrumbactivated';\n    constructor(breadcrumb, childBreadcrumbsRemoved) {\n        super(BreadcrumbActivatedEvent.eventName);\n        this.breadcrumb = breadcrumb;\n        this.childBreadcrumbsRemoved = childBreadcrumbsRemoved;\n    }\n}\nexport class BreadcrumbsUI extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #boundRender = this.#render.bind(this);\n    #initialBreadcrumb = null;\n    #activeBreadcrumb = null;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [breadcrumbsUIStyles];\n    }\n    set data(data) {\n        this.#initialBreadcrumb = data.initialBreadcrumb;\n        this.#activeBreadcrumb = data.activeBreadcrumb;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    #activateBreadcrumb(breadcrumb) {\n        this.#activeBreadcrumb = breadcrumb;\n        this.dispatchEvent(new BreadcrumbActivatedEvent(breadcrumb));\n    }\n    #showBreadcrumbsAndScrollLastCrumbIntoView() {\n        const container = this.#shadow.querySelector('.breadcrumbs');\n        if (!container) {\n            return;\n        }\n        // Display Breadcrumbs after at least one was created\n        container.style.display = 'flex';\n        requestAnimationFrame(() => {\n            // If the width of all the elements is greater than the width of the\n            // container, we need to scroll the last element into view.\n            if (container.scrollWidth - container.clientWidth > 0) {\n                requestAnimationFrame(() => {\n                    // For some unknown reason, if we scroll after one rAF, the values\n                    // are slightly off by a few pixels which means that the element does\n                    // not get properly scrolled fully into view. Therefore we wait for a\n                    // second rAF, at which point the values are correct and this will\n                    // scroll the container fully to ensure the last breadcrumb is fully\n                    // visible.\n                    container.scrollLeft = container.scrollWidth - container.clientWidth;\n                });\n            }\n        });\n    }\n    #onContextMenu(event, breadcrumb) {\n        const menu = new UI.ContextMenu.ContextMenu(event);\n        menu.defaultSection().appendItem(i18nString(UIStrings.activateBreadcrumb), () => {\n            this.dispatchEvent(new BreadcrumbActivatedEvent(breadcrumb));\n        });\n        menu.defaultSection().appendItem(i18nString(UIStrings.removeChildBreadcrumbs), () => {\n            this.dispatchEvent(new BreadcrumbActivatedEvent(breadcrumb, true));\n        });\n        void menu.show();\n    }\n    #renderElement(breadcrumb, index) {\n        const breadcrumbRange = Trace.Helpers.Timing.microSecondsToMilliseconds(breadcrumb.window.range);\n        // clang-format off\n        return html `\n          <div class=\"breadcrumb\" @contextmenu=${(event) => this.#onContextMenu(event, breadcrumb)} @click=${() => this.#activateBreadcrumb(breadcrumb)}\n          jslog=${VisualLogging.item('timeline.breadcrumb-select').track({ click: true })}>\n           <span class=\"${(breadcrumb === this.#activeBreadcrumb) ? 'active-breadcrumb' : ''} range\">\n            ${(index === 0) ?\n            `Full range (${i18n.TimeUtilities.preciseMillisToString(breadcrumbRange, 2)})` :\n            `${i18n.TimeUtilities.preciseMillisToString(breadcrumbRange, 2)}`}\n            </span>\n          </div>\n          ${breadcrumb.child !== null ?\n            html `\n            <devtools-icon .data=${{\n                iconName: 'chevron-right',\n                color: 'var(--icon-default)',\n                width: '16px',\n                height: '16px',\n            }}>`\n            : ''}\n      `;\n        // clang-format on\n    }\n    #render() {\n        // clang-format off\n        const output = html `\n      ${this.#initialBreadcrumb === null ? LitHtml.nothing : html `<div class=\"breadcrumbs\" jslog=${VisualLogging.section('breadcrumbs')}>\n        ${flattenBreadcrumbs(this.#initialBreadcrumb).map((breadcrumb, index) => this.#renderElement(breadcrumb, index))}\n      </div>`}\n    `;\n        // clang-format on\n        render(output, this.#shadow, { host: this });\n        if (this.#initialBreadcrumb?.child) {\n            // If we have >1 crumbs show breadcrumbs and ensure the last one is visible by scrolling the container.\n            this.#showBreadcrumbsAndScrollLastCrumbIntoView();\n        }\n    }\n}\ncustomElements.define('devtools-breadcrumbs-ui', BreadcrumbsUI);\n//# sourceMappingURL=BreadcrumbsUI.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: inline-block;\n  max-width: 100%;\n  min-width: 50px;\n}\n\ndevtools-select-menu {\n  max-width: 100%;\n}\n\n/*# sourceURL=cpuThrottlingSelector.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/menus/menus.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../../mobile_throttling/mobile_throttling.js';\nimport cpuThrottlingSelectorStyles from './cpuThrottlingSelector.css.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     * @description Text label for a selection box showing which CPU throttling option is applied.\n     * @example {No throttling} PH1\n     */\n    cpu: 'CPU: {PH1}',\n    /**\n     * @description Text label for a selection box showing which CPU throttling option is applied.\n     * @example {No throttling} PH1\n     */\n    cpuThrottling: 'CPU throttling: {PH1}',\n    /**\n     * @description Text label for a menu item indicating that no throttling is applied.\n     */\n    noThrottling: 'No throttling',\n    /**\n     * @description Text label for a menu item indicating that a specific slowdown multiplier is applied.\n     * @example {2} PH1\n     */\n    dSlowdown: '{PH1}× slowdown',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/CPUThrottlingSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class CPUThrottlingSelector extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #currentRate;\n    constructor() {\n        super();\n        this.#currentRate = SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingRate();\n        this.#render();\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [cpuThrottlingSelectorStyles];\n        SDK.CPUThrottlingManager.CPUThrottlingManager.instance().addEventListener(\"RateChanged\" /* SDK.CPUThrottlingManager.Events.RATE_CHANGED */, this.#onRateChange, this);\n        this.#onRateChange();\n    }\n    disconnectedCallback() {\n        SDK.CPUThrottlingManager.CPUThrottlingManager.instance().removeEventListener(\"RateChanged\" /* SDK.CPUThrottlingManager.Events.RATE_CHANGED */, this.#onRateChange, this);\n    }\n    #onRateChange() {\n        this.#currentRate = SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingRate();\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #onMenuItemSelected(event) {\n        MobileThrottling.ThrottlingManager.throttlingManager().setCPUThrottlingRate(Number(event.itemValue));\n    }\n    #render = () => {\n        const selectionTitle = this.#currentRate === 1 ? i18nString(UIStrings.noThrottling) :\n            i18nString(UIStrings.dSlowdown, { PH1: this.#currentRate });\n        // clang-format off\n        const output = html `\n      <devtools-select-menu\n            @selectmenuselected=${this.#onMenuItemSelected}\n            .showDivider=${true}\n            .showArrow=${true}\n            .sideButton=${false}\n            .showSelectedItem=${true}\n            .showConnector=${false}\n            .jslogContext=${'cpu-throttling'}\n            .buttonTitle=${i18nString(UIStrings.cpu, { PH1: selectionTitle })}\n            title=${i18nString(UIStrings.cpuThrottling, { PH1: selectionTitle })}\n          >\n          ${MobileThrottling.ThrottlingPresets.ThrottlingPresets.cpuThrottlingPresets.map(rate => {\n            const title = rate === 1 ? i18nString(UIStrings.noThrottling) : i18nString(UIStrings.dSlowdown, { PH1: rate });\n            const jslogContext = rate === 1 ? 'cpu-no-throttling' : `cpu-throttled-${rate}`;\n            return html `\n              <devtools-menu-item\n                .value=${rate}\n                .selected=${this.#currentRate === rate}\n                jslog=${VisualLogging.item(jslogContext).track({ click: true })}\n              >\n                ${title}\n              </devtools-menu-item>\n            `;\n        })}\n      </devtools-select-menu>\n    `;\n        // clang-format on\n        LitHtml.render(output, this.#shadow, { host: this });\n    };\n}\ncustomElements.define('devtools-cpu-throttling-selector', CPUThrottlingSelector);\n//# sourceMappingURL=CPUThrottlingSelector.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\n// *********************************************************************\n// At the moment this file consists of helpers to aid in the rendering\n// of events details in the bottom drawer. In the future, we should use\n// LitHtml for this section, and update this helpers accordingly.\n// *********************************************************************\nconst UIStrings = {\n    /**\n     *@description Text in the Performance panel for a forced style and layout calculation of elements\n     * in a page. See https://developer.mozilla.org/en-US/docs/Glossary/Reflow\n     */\n    forcedReflow: 'Forced reflow',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     *@example {Forced reflow} PH1\n     */\n    sIsALikelyPerformanceBottleneck: '{PH1} is a likely performance bottleneck.',\n    /**\n     *@description Text in the Performance panel for a function called during a time the browser was\n     * idle (inactive), which to longer to execute than a predefined deadline.\n     *@example {10ms} PH1\n     */\n    idleCallbackExecutionExtended: 'Idle callback execution extended beyond deadline by {PH1}',\n    /**\n     *@description Text in the Performance panel which describes how long a task took.\n     *@example {task} PH1\n     *@example {10ms} PH2\n     */\n    sTookS: '{PH1} took {PH2}.',\n    /**\n     *@description Text in the Performance panel for a task that took long. See\n     * https://developer.mozilla.org/en-US/docs/Glossary/Long_task\n     */\n    longTask: 'Long task',\n    /**\n     *@description Text used to highlight a long interaction and link to web.dev/inp\n     */\n    longInteractionINP: 'Long interaction',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel when the\n     *             user clicks on a long interaction.\n     *@example {Long interaction} PH1\n     */\n    sIsLikelyPoorPageResponsiveness: '{PH1} is indicating poor page responsiveness.',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    websocketProtocol: 'WebSocket protocol',\n    /**\n     * @description Details text indicating how many bytes were received in a WebSocket message\n     * @example {1024} PH1\n     */\n    webSocketBytes: '{PH1} byte(s)',\n    /**\n     * @description Details text indicating how many bytes were sent in a WebSocket message\n     */\n    webSocketDataLength: 'Data length',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/DetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport function buildWarningElementsForEvent(event, parsedTrace) {\n    const warnings = parsedTrace.Warnings.perEvent.get(event);\n    const warningElements = [];\n    if (!warnings) {\n        return warningElements;\n    }\n    for (const warning of warnings) {\n        const duration = Trace.Helpers.Timing.microSecondsToMilliseconds(Trace.Types.Timing.MicroSeconds(event.dur || 0));\n        const span = document.createElement('span');\n        switch (warning) {\n            case 'FORCED_REFLOW': {\n                const forcedReflowLink = UI.XLink.XLink.create('https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing#avoid-forced-synchronous-layouts', i18nString(UIStrings.forcedReflow), undefined, undefined, 'forced-reflow');\n                span.appendChild(i18n.i18n.getFormatLocalizedString(str_, UIStrings.sIsALikelyPerformanceBottleneck, { PH1: forcedReflowLink }));\n                break;\n            }\n            case 'IDLE_CALLBACK_OVER_TIME': {\n                if (!Trace.Types.Events.isFireIdleCallback(event)) {\n                    break;\n                }\n                const exceededMs = i18n.TimeUtilities.millisToString((duration || 0) - event.args.data['allottedMilliseconds'], true);\n                span.textContent = i18nString(UIStrings.idleCallbackExecutionExtended, { PH1: exceededMs });\n                break;\n            }\n            case 'LONG_TASK': {\n                const longTaskLink = UI.XLink.XLink.create('https://web.dev/optimize-long-tasks/', i18nString(UIStrings.longTask), undefined, undefined, 'long-tasks');\n                span.appendChild(i18n.i18n.getFormatLocalizedString(str_, UIStrings.sTookS, { PH1: longTaskLink, PH2: i18n.TimeUtilities.millisToString((duration || 0), true) }));\n                break;\n            }\n            case 'LONG_INTERACTION': {\n                const longInteractionINPLink = UI.XLink.XLink.create('https://web.dev/inp', i18nString(UIStrings.longInteractionINP), undefined, undefined, 'long-interaction');\n                span.appendChild(i18n.i18n.getFormatLocalizedString(str_, UIStrings.sIsLikelyPoorPageResponsiveness, { PH1: longInteractionINPLink }));\n                break;\n            }\n            default: {\n                Platform.assertNever(warning, `Unhandled warning type ${warning}`);\n            }\n        }\n        warningElements.push(span);\n    }\n    return warningElements;\n}\nexport function buildRowsForWebSocketEvent(event, parsedTrace) {\n    const rows = [];\n    const initiator = parsedTrace.Initiators.eventToInitiator.get(event);\n    if (initiator && Trace.Types.Events.isWebSocketCreate(initiator)) {\n        // The initiator will be a WebSocketCreate, but this check helps TypeScript to understand.\n        rows.push({ key: i18n.i18n.lockedString('URL'), value: initiator.args.data.url });\n        if (initiator.args.data.websocketProtocol) {\n            rows.push({ key: i18nString(UIStrings.websocketProtocol), value: initiator.args.data.websocketProtocol });\n        }\n    }\n    else if (Trace.Types.Events.isWebSocketCreate(event)) {\n        rows.push({ key: i18n.i18n.lockedString('URL'), value: event.args.data.url });\n        if (event.args.data.websocketProtocol) {\n            rows.push({ key: i18nString(UIStrings.websocketProtocol), value: event.args.data.websocketProtocol });\n        }\n    }\n    if (Trace.Types.Events.isWebSocketTransfer(event)) {\n        if (event.args.data.dataLength) {\n            rows.push({\n                key: i18nString(UIStrings.webSocketDataLength),\n                value: `${i18nString(UIStrings.webSocketBytes, { PH1: event.args.data.dataLength })}`,\n            });\n        }\n    }\n    return rows;\n}\n/**\n * This method does not output any content but instead takes a list of\n * invalidations and groups them, doing some processing of the data to collect\n * invalidations grouped by the reason/cause.\n * It also returns all BackendNodeIds that are related to these invalidations\n * so that they can be fetched via CDP.\n * It is exported only for testing purposes.\n **/\nexport function generateInvalidationsList(invalidations) {\n    const groupedByReason = {};\n    const backendNodeIds = new Set();\n    for (const invalidation of invalidations) {\n        backendNodeIds.add(invalidation.args.data.nodeId);\n        let reason = invalidation.args.data.reason || 'unknown';\n        // ScheduleStyle events do not always have a reason, but if they tell us\n        // via their data what changed, we can update the reason that we show to\n        // the user.\n        if (reason === 'unknown' && Trace.Types.Events.isScheduleStyleInvalidationTracking(invalidation) &&\n            invalidation.args.data.invalidatedSelectorId) {\n            switch (invalidation.args.data.invalidatedSelectorId) {\n                case 'attribute':\n                    reason = 'Attribute';\n                    if (invalidation.args.data.changedAttribute) {\n                        reason += ` (${invalidation.args.data.changedAttribute})`;\n                    }\n                    break;\n                case 'class':\n                    reason = 'Class';\n                    if (invalidation.args.data.changedClass) {\n                        reason += ` (${invalidation.args.data.changedClass})`;\n                    }\n                    break;\n                case 'id':\n                    reason = 'Id';\n                    if (invalidation.args.data.changedId) {\n                        reason += ` (${invalidation.args.data.changedId})`;\n                    }\n                    break;\n            }\n        }\n        if (reason === 'PseudoClass' && Trace.Types.Events.isStyleRecalcInvalidationTracking(invalidation) &&\n            invalidation.args.data.extraData) {\n            // This will append the `:focus` onto the reason.\n            reason += invalidation.args.data.extraData;\n        }\n        if (reason === 'Attribute' && Trace.Types.Events.isStyleRecalcInvalidationTracking(invalidation) &&\n            invalidation.args.data.extraData) {\n            // Append the attribute that changed.\n            reason += ` (${invalidation.args.data.extraData})`;\n        }\n        if (reason === 'StyleInvalidator') {\n            // These events give us some extra metadata but are not in isolation that\n            // useful and end up duplicating information from other tracking events,\n            // so we do not include these in the UI.\n            continue;\n        }\n        const existing = groupedByReason[reason] || [];\n        existing.push(invalidation);\n        groupedByReason[reason] = existing;\n    }\n    return { groupedByReason, backendNodeIds };\n}\n//# sourceMappingURL=DetailsView.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as ThemeSupport from '../../../ui/legacy/theme_support/theme_support.js';\nconst UIStrings = {\n    /**\n     *@description Category in the Summary view of the Performance panel to indicate time spent to load resources\n     */\n    loading: 'Loading',\n    /**\n     *@description Text in Timeline for the Experience title\n     */\n    experience: 'Experience',\n    /**\n     *@description Category in the Summary view of the Performance panel to indicate time spent in script execution\n     */\n    scripting: 'Scripting',\n    /**\n     *@description Category in the Summary view of the Performance panel to indicate time spent in rendering the web page\n     */\n    rendering: 'Rendering',\n    /**\n     *@description Category in the Summary view of the Performance panel to indicate time spent to visually represent the web page\n     */\n    painting: 'Painting',\n    /**\n     *@description Event category in the Performance panel for time spent in the GPU\n     */\n    gpu: 'GPU',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    async: 'Async',\n    /**\n     *@description Category in the Summary view of the Performance panel to indicate time spent in the rest of the system\n     */\n    system: 'System',\n    /**\n     *@description Category in the Summary view of the Performance panel to indicate idle time\n     */\n    idle: 'Idle',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    task: 'Task',\n    /**\n     *@description Text for other types of items\n     */\n    other: 'Other',\n    /**\n     *@description Text that refers to the animation of the web page\n     */\n    animation: 'Animation',\n    /**\n     *@description Text that refers to some events\n     */\n    event: 'Event',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    requestMainThreadFrame: 'Request main thread frame',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    frameStart: 'Frame start',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    onMessage: 'On message',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    schedulePostMessage: 'Schedule postMessage',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    messaging: 'Messaging',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    frameStartMainThread: 'Frame start (main thread)',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    drawFrame: 'Draw frame',\n    /**\n     *@description Noun for an event in the Performance panel. This marks time\n      spent in an operation that only happens when the profiler is active.\n     */\n    profilingOverhead: 'Profiling overhead',\n    /**\n     *@description The process the browser uses to determine a target element for a\n     *pointer event. Typically, this is determined by considering the pointer's\n     *location and also the visual layout of elements on the screen.\n     */\n    hitTest: 'Hit test',\n    /**\n     *@description Noun for an event in the Performance panel. The browser has decided\n     *that the styles for some elements need to be recalculated and scheduled that\n     *recalculation process at some time in the future.\n     */\n    scheduleStyleRecalculation: 'Schedule style recalculation',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    recalculateStyle: 'Recalculate style',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    invalidateLayout: 'Invalidate Layout',\n    /**\n     *@description Noun for an event in the Performance panel. Layerize is a step\n     *where we calculate which layers to create.\n     */\n    layerize: 'Layerize',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    layout: 'Layout',\n    /**\n     *@description Noun for an event in the Performance panel. Paint setup is a\n     *step before the 'Paint' event. A paint event is when the browser draws pixels\n     *to the screen. This step is the setup beforehand.\n     */\n    paintSetup: 'Paint setup',\n    /**\n     *@description Noun for a paint event in the Performance panel, where an image\n     *was being painted. A paint event is when the browser draws pixels to the\n     *screen, in this case specifically for an image in a website.\n     */\n    paintImage: 'Paint image',\n    /**\n     *@description Noun for an event in the Performance panel. Pre-paint is a\n     *step before the 'Paint' event. A paint event is when the browser records the\n     *instructions for drawing the page. This step is the setup beforehand.\n     */\n    prePaint: 'Pre-paint',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    updateLayer: 'Update layer',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    updateLayerTree: 'Update layer tree',\n    /**\n     *@description Noun for a paint event in the Performance panel. A paint event is when the browser draws pixels to the screen.\n     */\n    paint: 'Paint',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    rasterizePaint: 'Rasterize paint',\n    /**\n     *@description The action to scroll\n     */\n    scroll: 'Scroll',\n    /**\n     *@description Noun for an event in the Performance panel. Commit is a step\n     *where we send (also known as \"commit\") layers to the compositor thread. This\n     *step follows the \"Layerize\" step which is what calculates which layers to\n     *create.\n     */\n    commit: 'Commit',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    compositeLayers: 'Composite layers',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    computeIntersections: 'Compute intersections',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    parseHtml: 'Parse HTML',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    parseStylesheet: 'Parse stylesheet',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    installTimer: 'Install timer',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    removeTimer: 'Remove timer',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    timerFired: 'Timer fired',\n    /**\n     *@description Text for an event. Shown in the timeline in the Performance panel.\n     * XHR refers to XmlHttpRequest, a Web API. This particular Web API has a property\n     * named 'readyState' (https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState). When\n     * the 'readyState' property changes the text is shown.\n     */\n    xhrReadyStateChange: '`XHR` `readyState` change',\n    /**\n     * @description Text for an event. Shown in the timeline in the Perforamnce panel.\n     * XHR refers to XmlHttpRequest, a Web API. (see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest)\n     * The text is shown when a XmlHttpRequest load event happens on the inspected page.\n     */\n    xhrLoad: '`XHR` load',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    compileScript: 'Compile script',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    cacheScript: 'Cache script code',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    compileCode: 'Compile code',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    optimizeCode: 'Optimize code',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    evaluateScript: 'Evaluate script',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    compileModule: 'Compile module',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    cacheModule: 'Cache module code',\n    /**\n     * @description Text for an event. Shown in the timeline in the Perforamnce panel.\n     * \"Module\" refers to JavaScript modules: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\n     * JavaScript modules are a way to organize JavaScript code.\n     * \"Evaluate\" is the phase when the JavaScript code of a module is executed.\n     */\n    evaluateModule: 'Evaluate module',\n    /**\n     *@description Noun indicating that a compile task (type: streaming) happened.\n     */\n    streamingCompileTask: 'Streaming compile task',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    waitingForNetwork: 'Waiting for network',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    parseAndCompile: 'Parse and compile',\n    /**\n     * @description Text in Timeline UIUtils of the Performance panel.\n     * \"Code Cache\" refers to JavaScript bytecode cache: https://v8.dev/blog/code-caching-for-devs\n     * \"Deserialize\" refers to the process of reading the code cache.\n     */\n    deserializeCodeCache: 'Deserialize code cache',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    streamingWasmResponse: 'Streaming Wasm response',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    compiledWasmModule: 'Compiled Wasm module',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    cachedWasmModule: 'Cached Wasm module',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    wasmModuleCacheHit: 'Wasm module cache hit',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    wasmModuleCacheInvalid: 'Wasm module cache invalid',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    frameStartedLoading: 'Frame started loading',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    onloadEvent: 'Onload event',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    domcontentloadedEvent: 'DOMContentLoaded event',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    firstPaint: 'First Paint',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    firstContentfulPaint: 'First Contentful Paint',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    largestContentfulPaint: 'Largest Contentful Paint',\n    /**\n     *@description Text for timestamps of items\n     */\n    timestamp: 'Timestamp',\n    /**\n     *@description Noun for a 'time' event that happens in the Console (a tool in\n     * DevTools). The user can trigger console time events from their code, and\n     * they will show up in the Performance panel. Time events are used to measure\n     * the duration of something, e.g. the user will emit two time events at the\n     * start and end of some interesting task.\n     */\n    consoleTime: 'Console time',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    userTiming: 'User timing',\n    /**\n     * @description Name for an event shown in the Performance panel. When a network\n     * request is about to be sent by the browser, the time is recorded and DevTools\n     * is notified that a network request will be sent momentarily.\n     */\n    willSendRequest: 'Will send request',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    sendRequest: 'Send request',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    receiveResponse: 'Receive response',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    finishLoading: 'Finish loading',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    receiveData: 'Receive data',\n    /**\n     *@description Event category in the Performance panel for time spent to execute microtasks in JavaScript\n     */\n    runMicrotasks: 'Run microtasks',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    functionCall: 'Function call',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    gcEvent: 'GC event',\n    /**\n     *@description Event category in the Performance panel for time spent to perform a full Garbage Collection pass\n     */\n    majorGc: 'Major GC',\n    /**\n     *@description Event category in the Performance panel for time spent to perform a quick Garbage Collection pass\n     */\n    minorGc: 'Minor GC',\n    /**\n     *@description Text for the request animation frame event\n     */\n    requestAnimationFrame: 'Request animation frame',\n    /**\n     *@description Text to cancel the animation frame\n     */\n    cancelAnimationFrame: 'Cancel animation frame',\n    /**\n     *@description Text for the event that an animation frame is fired\n     */\n    animationFrameFired: 'Animation frame fired',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    requestIdleCallback: 'Request idle callback',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    cancelIdleCallback: 'Cancel idle callback',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    fireIdleCallback: 'Fire idle callback',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    createWebsocket: 'Create WebSocket',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    sendWebsocketHandshake: 'Send WebSocket handshake',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    receiveWebsocketHandshake: 'Receive WebSocket handshake',\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    wsMessageReceived: 'Receive WebSocket message',\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    wsMessageSent: 'Send WebSocket message',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    destroyWebsocket: 'Destroy WebSocket',\n    /**\n     *@description Event category in the Performance panel for time spent in the embedder of the WebView\n     */\n    embedderCallback: 'Embedder callback',\n    /**\n     *@description Event category in the Performance panel for time spent decoding an image\n     */\n    imageDecode: 'Image decode',\n    /**\n     *@description Event category in the Performance panel for time spent to perform Garbage Collection for the Document Object Model\n     */\n    domGc: 'DOM GC',\n    /**\n     *@description Event category in the Performance panel for time spent to perform Garbage Collection for C++: https://chromium.googlesource.com/v8/v8/+/main/include/cppgc/README.md\n     */\n    cppGc: 'CPP GC',\n    /**\n     *@description Event category in the Performance panel for time spent to perform encryption\n     */\n    encrypt: 'Encrypt',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    encryptReply: 'Encrypt reply',\n    /**\n     *@description Event category in the Performance panel for time spent to perform decryption\n     */\n    decrypt: 'Decrypt',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    decryptReply: 'Decrypt reply',\n    /**\n     * @description Noun phrase meaning 'the browser was preparing the digest'.\n     * Digest: https://developer.mozilla.org/en-US/docs/Glossary/Digest\n     */\n    digest: 'Digest',\n    /**\n     *@description Noun phrase meaning 'the browser was preparing the digest\n     *reply'. Digest: https://developer.mozilla.org/en-US/docs/Glossary/Digest\n     */\n    digestReply: 'Digest reply',\n    /**\n     *@description The 'sign' stage of a web crypto event. Shown when displaying what the website was doing at a particular point in time.\n     */\n    sign: 'Sign',\n    /**\n     * @description Noun phrase for an event of the Web Crypto API. The event is recorded when the signing process is concluded.\n     * Signature: https://developer.mozilla.org/en-US/docs/Glossary/Signature/Security\n     */\n    signReply: 'Sign reply',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    verify: 'Verify',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    verifyReply: 'Verify reply',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    asyncTask: 'Async task',\n    /**\n     *@description Text in Timeline for Layout Shift records\n     */\n    layoutShift: 'Layout shift',\n    /**\n     *@description Text in Timeline for Layout Shift records\n     */\n    layoutShiftCluster: 'Layout shift cluster',\n    /**\n     *@description Text in Timeline for an Event Timing record\n     */\n    eventTiming: 'Event timing',\n    /**\n     *@description Event category in the Performance panel for JavaScript nodes in CPUProfile\n     */\n    jsFrame: 'JS frame',\n    /**\n     *@description Text in UIDevtools Utils of the Performance panel\n     */\n    rasterizing: 'Rasterizing',\n    /**\n     *@description Text in UIDevtools Utils of the Performance panel\n     */\n    drawing: 'Drawing',\n};\nexport var EventCategory;\n(function (EventCategory) {\n    EventCategory[\"DRAWING\"] = \"drawing\";\n    EventCategory[\"RASTERIZING\"] = \"rasterizing\";\n    EventCategory[\"LAYOUT\"] = \"layout\";\n    EventCategory[\"LOADING\"] = \"loading\";\n    EventCategory[\"EXPERIENCE\"] = \"experience\";\n    EventCategory[\"SCRIPTING\"] = \"scripting\";\n    EventCategory[\"MESSAGING\"] = \"messaging\";\n    EventCategory[\"RENDERING\"] = \"rendering\";\n    EventCategory[\"PAINTING\"] = \"painting\";\n    EventCategory[\"GPU\"] = \"gpu\";\n    EventCategory[\"ASYNC\"] = \"async\";\n    EventCategory[\"OTHER\"] = \"other\";\n    EventCategory[\"IDLE\"] = \"idle\";\n})(EventCategory || (EventCategory = {}));\nlet mainEventCategories;\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/EntryStyles.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineRecordStyle {\n    title;\n    category;\n    hidden;\n    constructor(title, category, hidden = false) {\n        this.title = title;\n        this.category = category;\n        this.hidden = hidden;\n    }\n}\nexport class TimelineCategory {\n    name;\n    title;\n    visible;\n    childColor;\n    colorInternal;\n    #hidden;\n    constructor(name, title, visible, childColor, color) {\n        this.name = name;\n        this.title = title;\n        this.visible = visible;\n        this.childColor = childColor;\n        this.colorInternal = color;\n        this.hidden = false;\n    }\n    get hidden() {\n        return Boolean(this.#hidden);\n    }\n    get color() {\n        return this.getComputedColorValue();\n    }\n    getCSSValue() {\n        return `var(${this.colorInternal})`;\n    }\n    getComputedColorValue() {\n        return ThemeSupport.ThemeSupport.instance().getComputedValue(this.colorInternal);\n    }\n    set hidden(hidden) {\n        this.#hidden = hidden;\n    }\n}\n/**\n * This object defines the styles for the categories used in the\n * timeline (loading, rendering, scripting, etc.).\n */\nlet categoryStyles;\n/**\n * This map defines the styles for events shown in the panel. This\n * includes its color (which on the event's category, the label it's\n * displayed with and flag to know wether it's visible in the flamechart\n * or not).\n * The thread appenders use this map to determine if an event should be\n * shown in the flame chart. If an event is not in the map, then it\n * won't be shown, but it also won't be shown if it's marked as \"hidden\"\n * in its styles.\n *\n * The map is also used in other places, like the event's details view.\n */\nlet eventStylesMap;\nexport function getEventStyle(eventName) {\n    return maybeInitSylesMap()[eventName];\n}\nexport function stringIsEventCategory(it) {\n    return Object.values(EventCategory).includes(it);\n}\nexport function getCategoryStyles() {\n    if (categoryStyles) {\n        return categoryStyles;\n    }\n    categoryStyles = {\n        loading: new TimelineCategory(EventCategory.LOADING, i18nString(UIStrings.loading), true, '--app-color-loading-children', '--app-color-loading'),\n        experience: new TimelineCategory(EventCategory.EXPERIENCE, i18nString(UIStrings.experience), false, '--app-color-rendering-children', '--app-color-rendering'),\n        messaging: new TimelineCategory(EventCategory.MESSAGING, i18nString(UIStrings.messaging), true, '--app-color-messaging-children', '--app-color-messaging'),\n        scripting: new TimelineCategory(EventCategory.SCRIPTING, i18nString(UIStrings.scripting), true, '--app-color-scripting-children', '--app-color-scripting'),\n        rendering: new TimelineCategory(EventCategory.RENDERING, i18nString(UIStrings.rendering), true, '--app-color-rendering-children', '--app-color-rendering'),\n        painting: new TimelineCategory(EventCategory.PAINTING, i18nString(UIStrings.painting), true, '--app-color-painting-children', '--app-color-painting'),\n        gpu: new TimelineCategory(EventCategory.GPU, i18nString(UIStrings.gpu), false, '--app-color-painting-children', '--app-color-painting'),\n        async: new TimelineCategory(EventCategory.ASYNC, i18nString(UIStrings.async), false, '--app-color-async-children', '--app-color-async'),\n        other: new TimelineCategory(EventCategory.OTHER, i18nString(UIStrings.system), false, '--app-color-system-children', '--app-color-system'),\n        idle: new TimelineCategory(EventCategory.IDLE, i18nString(UIStrings.idle), false, '--app-color-idle-children', '--app-color-idle'),\n        layout: new TimelineCategory(EventCategory.LAYOUT, i18nString(UIStrings.layout), false, '--app-color-loading-children', '--app-color-loading'),\n        rasterizing: new TimelineCategory(EventCategory.RASTERIZING, i18nString(UIStrings.rasterizing), false, '--app-color-children', '--app-color-scripting'),\n        drawing: new TimelineCategory(EventCategory.DRAWING, i18nString(UIStrings.drawing), false, '--app-color-rendering-children', '--app-color-rendering'),\n    };\n    return categoryStyles;\n}\nexport function maybeInitSylesMap() {\n    if (eventStylesMap) {\n        return eventStylesMap;\n    }\n    const defaultCategoryStyles = getCategoryStyles();\n    eventStylesMap = {\n        [\"RunTask\" /* Trace.Types.Events.Name.RUN_TASK */]: new TimelineRecordStyle(i18nString(UIStrings.task), defaultCategoryStyles.other),\n        [\"ProfileCall\" /* Trace.Types.Events.Name.PROFILE_CALL */]: new TimelineRecordStyle(i18nString(UIStrings.jsFrame), defaultCategoryStyles.scripting),\n        [\"JSSample\" /* Trace.Types.Events.Name.JS_SAMPLE */]: new TimelineRecordStyle(\"JSSample\" /* Trace.Types.Events.Name.JS_SAMPLE */, defaultCategoryStyles.scripting),\n        [\"Program\" /* Trace.Types.Events.Name.PROGRAM */]: new TimelineRecordStyle(i18nString(UIStrings.other), defaultCategoryStyles.other),\n        [\"CpuProfiler::StartProfiling\" /* Trace.Types.Events.Name.START_PROFILING */]: new TimelineRecordStyle(i18nString(UIStrings.profilingOverhead), defaultCategoryStyles.other),\n        [\"Animation\" /* Trace.Types.Events.Name.ANIMATION */]: new TimelineRecordStyle(i18nString(UIStrings.animation), defaultCategoryStyles.rendering),\n        [\"EventDispatch\" /* Trace.Types.Events.Name.EVENT_DISPATCH */]: new TimelineRecordStyle(i18nString(UIStrings.event), defaultCategoryStyles.scripting),\n        [\"RequestMainThreadFrame\" /* Trace.Types.Events.Name.REQUEST_MAIN_THREAD_FRAME */]: new TimelineRecordStyle(i18nString(UIStrings.requestMainThreadFrame), defaultCategoryStyles.rendering, true),\n        [\"BeginFrame\" /* Trace.Types.Events.Name.BEGIN_FRAME */]: new TimelineRecordStyle(i18nString(UIStrings.frameStart), defaultCategoryStyles.rendering, true),\n        [\"BeginMainThreadFrame\" /* Trace.Types.Events.Name.BEGIN_MAIN_THREAD_FRAME */]: new TimelineRecordStyle(i18nString(UIStrings.frameStartMainThread), defaultCategoryStyles.rendering, true),\n        [\"DrawFrame\" /* Trace.Types.Events.Name.DRAW_FRAME */]: new TimelineRecordStyle(i18nString(UIStrings.drawFrame), defaultCategoryStyles.rendering, true),\n        [\"HitTest\" /* Trace.Types.Events.Name.HIT_TEST */]: new TimelineRecordStyle(i18nString(UIStrings.hitTest), defaultCategoryStyles.rendering),\n        [\"ScheduleStyleRecalculation\" /* Trace.Types.Events.Name.SCHEDULE_STYLE_RECALCULATION */]: new TimelineRecordStyle(i18nString(UIStrings.scheduleStyleRecalculation), defaultCategoryStyles.rendering),\n        [\"UpdateLayoutTree\" /* Trace.Types.Events.Name.UPDATE_LAYOUT_TREE */]: new TimelineRecordStyle(i18nString(UIStrings.recalculateStyle), defaultCategoryStyles.rendering),\n        [\"InvalidateLayout\" /* Trace.Types.Events.Name.INVALIDATE_LAYOUT */]: new TimelineRecordStyle(i18nString(UIStrings.invalidateLayout), defaultCategoryStyles.rendering, true),\n        [\"Layerize\" /* Trace.Types.Events.Name.LAYERIZE */]: new TimelineRecordStyle(i18nString(UIStrings.layerize), defaultCategoryStyles.rendering),\n        [\"Layout\" /* Trace.Types.Events.Name.LAYOUT */]: new TimelineRecordStyle(i18nString(UIStrings.layout), defaultCategoryStyles.rendering),\n        [\"PaintSetup\" /* Trace.Types.Events.Name.PAINT_SETUP */]: new TimelineRecordStyle(i18nString(UIStrings.paintSetup), defaultCategoryStyles.painting),\n        [\"PaintImage\" /* Trace.Types.Events.Name.PAINT_IMAGE */]: new TimelineRecordStyle(i18nString(UIStrings.paintImage), defaultCategoryStyles.painting, true),\n        [\"UpdateLayer\" /* Trace.Types.Events.Name.UPDATE_LAYER */]: new TimelineRecordStyle(i18nString(UIStrings.updateLayer), defaultCategoryStyles.painting, true),\n        [\"UpdateLayerTree\" /* Trace.Types.Events.Name.UPDATE_LAYER_TREE */]: new TimelineRecordStyle(i18nString(UIStrings.updateLayerTree), defaultCategoryStyles.rendering),\n        [\"Paint\" /* Trace.Types.Events.Name.PAINT */]: new TimelineRecordStyle(i18nString(UIStrings.paint), defaultCategoryStyles.painting),\n        [\"PrePaint\" /* Trace.Types.Events.Name.PRE_PAINT */]: new TimelineRecordStyle(i18nString(UIStrings.prePaint), defaultCategoryStyles.rendering),\n        [\"RasterTask\" /* Trace.Types.Events.Name.RASTER_TASK */]: new TimelineRecordStyle(i18nString(UIStrings.rasterizePaint), defaultCategoryStyles.painting),\n        [\"ScrollLayer\" /* Trace.Types.Events.Name.SCROLL_LAYER */]: new TimelineRecordStyle(i18nString(UIStrings.scroll), defaultCategoryStyles.rendering),\n        [\"Commit\" /* Trace.Types.Events.Name.COMMIT */]: new TimelineRecordStyle(i18nString(UIStrings.commit), defaultCategoryStyles.painting),\n        [\"CompositeLayers\" /* Trace.Types.Events.Name.COMPOSITE_LAYERS */]: new TimelineRecordStyle(i18nString(UIStrings.compositeLayers), defaultCategoryStyles.painting),\n        [\"ComputeIntersections\" /* Trace.Types.Events.Name.COMPUTE_INTERSECTION */]: new TimelineRecordStyle(i18nString(UIStrings.computeIntersections), defaultCategoryStyles.rendering),\n        [\"ParseHTML\" /* Trace.Types.Events.Name.PARSE_HTML */]: new TimelineRecordStyle(i18nString(UIStrings.parseHtml), defaultCategoryStyles.loading),\n        [\"ParseAuthorStyleSheet\" /* Trace.Types.Events.Name.PARSE_AUTHOR_STYLE_SHEET */]: new TimelineRecordStyle(i18nString(UIStrings.parseStylesheet), defaultCategoryStyles.loading),\n        [\"TimerInstall\" /* Trace.Types.Events.Name.TIMER_INSTALL */]: new TimelineRecordStyle(i18nString(UIStrings.installTimer), defaultCategoryStyles.scripting),\n        [\"TimerRemove\" /* Trace.Types.Events.Name.TIMER_REMOVE */]: new TimelineRecordStyle(i18nString(UIStrings.removeTimer), defaultCategoryStyles.scripting),\n        [\"TimerFire\" /* Trace.Types.Events.Name.TIMER_FIRE */]: new TimelineRecordStyle(i18nString(UIStrings.timerFired), defaultCategoryStyles.scripting),\n        [\"XHRReadyStateChange\" /* Trace.Types.Events.Name.XHR_READY_STATE_CHANGED */]: new TimelineRecordStyle(i18nString(UIStrings.xhrReadyStateChange), defaultCategoryStyles.scripting),\n        [\"XHRLoad\" /* Trace.Types.Events.Name.XHR_LOAD */]: new TimelineRecordStyle(i18nString(UIStrings.xhrLoad), defaultCategoryStyles.scripting),\n        [\"v8.compile\" /* Trace.Types.Events.Name.COMPILE */]: new TimelineRecordStyle(i18nString(UIStrings.compileScript), defaultCategoryStyles.scripting),\n        [\"v8.produceCache\" /* Trace.Types.Events.Name.CACHE_SCRIPT */]: new TimelineRecordStyle(i18nString(UIStrings.cacheScript), defaultCategoryStyles.scripting),\n        [\"V8.CompileCode\" /* Trace.Types.Events.Name.COMPILE_CODE */]: new TimelineRecordStyle(i18nString(UIStrings.compileCode), defaultCategoryStyles.scripting),\n        [\"V8.OptimizeCode\" /* Trace.Types.Events.Name.OPTIMIZE_CODE */]: new TimelineRecordStyle(i18nString(UIStrings.optimizeCode), defaultCategoryStyles.scripting),\n        [\"EvaluateScript\" /* Trace.Types.Events.Name.EVALUATE_SCRIPT */]: new TimelineRecordStyle(i18nString(UIStrings.evaluateScript), defaultCategoryStyles.scripting),\n        [\"V8.CompileModule\" /* Trace.Types.Events.Name.COMPILE_MODULE */]: new TimelineRecordStyle(i18nString(UIStrings.compileModule), defaultCategoryStyles.scripting),\n        [\"v8.produceModuleCache\" /* Trace.Types.Events.Name.CACHE_MODULE */]: new TimelineRecordStyle(i18nString(UIStrings.cacheModule), defaultCategoryStyles.scripting),\n        [\"v8.evaluateModule\" /* Trace.Types.Events.Name.EVALUATE_MODULE */]: new TimelineRecordStyle(i18nString(UIStrings.evaluateModule), defaultCategoryStyles.scripting),\n        [\"v8.parseOnBackground\" /* Trace.Types.Events.Name.STREAMING_COMPILE_SCRIPT */]: new TimelineRecordStyle(i18nString(UIStrings.streamingCompileTask), defaultCategoryStyles.other),\n        [\"v8.parseOnBackgroundWaiting\" /* Trace.Types.Events.Name.STREAMING_COMPILE_SCRIPT_WAITING */]: new TimelineRecordStyle(i18nString(UIStrings.waitingForNetwork), defaultCategoryStyles.idle),\n        [\"v8.parseOnBackgroundParsing\" /* Trace.Types.Events.Name.STREAMING_COMPILE_SCRIPT_PARSING */]: new TimelineRecordStyle(i18nString(UIStrings.parseAndCompile), defaultCategoryStyles.scripting),\n        [\"v8.deserializeOnBackground\" /* Trace.Types.Events.Name.BACKGROUND_DESERIALIZE */]: new TimelineRecordStyle(i18nString(UIStrings.deserializeCodeCache), defaultCategoryStyles.scripting),\n        [\"V8.FinalizeDeserialization\" /* Trace.Types.Events.Name.FINALIZE_DESERIALIZATION */]: new TimelineRecordStyle(i18nString(UIStrings.profilingOverhead), defaultCategoryStyles.other),\n        [\"v8.wasm.streamFromResponseCallback\" /* Trace.Types.Events.Name.WASM_STREAM_FROM_RESPONSE_CALLBACK */]: new TimelineRecordStyle(i18nString(UIStrings.streamingWasmResponse), defaultCategoryStyles.scripting),\n        [\"v8.wasm.compiledModule\" /* Trace.Types.Events.Name.WASM_COMPILED_MODULE */]: new TimelineRecordStyle(i18nString(UIStrings.compiledWasmModule), defaultCategoryStyles.scripting),\n        [\"v8.wasm.cachedModule\" /* Trace.Types.Events.Name.WASM_CACHED_MODULE */]: new TimelineRecordStyle(i18nString(UIStrings.cachedWasmModule), defaultCategoryStyles.scripting),\n        [\"v8.wasm.moduleCacheHit\" /* Trace.Types.Events.Name.WASM_MODULE_CACHE_HIT */]: new TimelineRecordStyle(i18nString(UIStrings.wasmModuleCacheHit), defaultCategoryStyles.scripting),\n        [\"v8.wasm.moduleCacheInvalid\" /* Trace.Types.Events.Name.WASM_MODULE_CACHE_INVALID */]: new TimelineRecordStyle(i18nString(UIStrings.wasmModuleCacheInvalid), defaultCategoryStyles.scripting),\n        [\"FrameStartedLoading\" /* Trace.Types.Events.Name.FRAME_STARTED_LOADING */]: new TimelineRecordStyle(i18nString(UIStrings.frameStartedLoading), defaultCategoryStyles.loading, true),\n        [\"MarkLoad\" /* Trace.Types.Events.Name.MARK_LOAD */]: new TimelineRecordStyle(i18nString(UIStrings.onloadEvent), defaultCategoryStyles.scripting, true),\n        [\"MarkDOMContent\" /* Trace.Types.Events.Name.MARK_DOM_CONTENT */]: new TimelineRecordStyle(i18nString(UIStrings.domcontentloadedEvent), defaultCategoryStyles.scripting, true),\n        [\"firstPaint\" /* Trace.Types.Events.Name.MARK_FIRST_PAINT */]: new TimelineRecordStyle(i18nString(UIStrings.firstPaint), defaultCategoryStyles.painting, true),\n        [\"firstContentfulPaint\" /* Trace.Types.Events.Name.MARK_FCP */]: new TimelineRecordStyle(i18nString(UIStrings.firstContentfulPaint), defaultCategoryStyles.rendering, true),\n        [\"largestContentfulPaint::Candidate\" /* Trace.Types.Events.Name.MARK_LCP_CANDIDATE */]: new TimelineRecordStyle(i18nString(UIStrings.largestContentfulPaint), defaultCategoryStyles.rendering, true),\n        [\"TimeStamp\" /* Trace.Types.Events.Name.TIME_STAMP */]: new TimelineRecordStyle(i18nString(UIStrings.timestamp), defaultCategoryStyles.scripting),\n        [\"ConsoleTime\" /* Trace.Types.Events.Name.CONSOLE_TIME */]: new TimelineRecordStyle(i18nString(UIStrings.consoleTime), defaultCategoryStyles.scripting),\n        [\"UserTiming\" /* Trace.Types.Events.Name.USER_TIMING */]: new TimelineRecordStyle(i18nString(UIStrings.userTiming), defaultCategoryStyles.scripting),\n        [\"ResourceWillSendRequest\" /* Trace.Types.Events.Name.RESOURCE_WILL_SEND_REQUEST */]: new TimelineRecordStyle(i18nString(UIStrings.willSendRequest), defaultCategoryStyles.loading),\n        [\"ResourceSendRequest\" /* Trace.Types.Events.Name.RESOURCE_SEND_REQUEST */]: new TimelineRecordStyle(i18nString(UIStrings.sendRequest), defaultCategoryStyles.loading),\n        [\"ResourceReceiveResponse\" /* Trace.Types.Events.Name.RESOURCE_RECEIVE_RESPONSE */]: new TimelineRecordStyle(i18nString(UIStrings.receiveResponse), defaultCategoryStyles.loading),\n        [\"ResourceFinish\" /* Trace.Types.Events.Name.RESOURCE_FINISH */]: new TimelineRecordStyle(i18nString(UIStrings.finishLoading), defaultCategoryStyles.loading),\n        [\"ResourceReceivedData\" /* Trace.Types.Events.Name.RESOURCE_RECEIVE_DATA */]: new TimelineRecordStyle(i18nString(UIStrings.receiveData), defaultCategoryStyles.loading),\n        [\"RunMicrotasks\" /* Trace.Types.Events.Name.RUN_MICROTASKS */]: new TimelineRecordStyle(i18nString(UIStrings.runMicrotasks), defaultCategoryStyles.scripting),\n        [\"FunctionCall\" /* Trace.Types.Events.Name.FUNCTION_CALL */]: new TimelineRecordStyle(i18nString(UIStrings.functionCall), defaultCategoryStyles.scripting),\n        [\"GCEvent\" /* Trace.Types.Events.Name.GC */]: new TimelineRecordStyle(i18nString(UIStrings.gcEvent), defaultCategoryStyles.scripting),\n        [\"MajorGC\" /* Trace.Types.Events.Name.MAJOR_GC */]: new TimelineRecordStyle(i18nString(UIStrings.majorGc), defaultCategoryStyles.scripting),\n        [\"MinorGC\" /* Trace.Types.Events.Name.MINOR_GC */]: new TimelineRecordStyle(i18nString(UIStrings.minorGc), defaultCategoryStyles.scripting),\n        [\"CppGC.IncrementalSweep\" /* Trace.Types.Events.Name.CPPGC_SWEEP */]: new TimelineRecordStyle(i18nString(UIStrings.cppGc), defaultCategoryStyles.scripting),\n        [\"RequestAnimationFrame\" /* Trace.Types.Events.Name.REQUEST_ANIMATION_FRAME */]: new TimelineRecordStyle(i18nString(UIStrings.requestAnimationFrame), defaultCategoryStyles.scripting),\n        [\"CancelAnimationFrame\" /* Trace.Types.Events.Name.CANCEL_ANIMATION_FRAME */]: new TimelineRecordStyle(i18nString(UIStrings.cancelAnimationFrame), defaultCategoryStyles.scripting),\n        [\"FireAnimationFrame\" /* Trace.Types.Events.Name.FIRE_ANIMATION_FRAME */]: new TimelineRecordStyle(i18nString(UIStrings.animationFrameFired), defaultCategoryStyles.scripting),\n        [\"RequestIdleCallback\" /* Trace.Types.Events.Name.REQUEST_IDLE_CALLBACK */]: new TimelineRecordStyle(i18nString(UIStrings.requestIdleCallback), defaultCategoryStyles.scripting),\n        [\"CancelIdleCallback\" /* Trace.Types.Events.Name.CANCEL_IDLE_CALLBACK */]: new TimelineRecordStyle(i18nString(UIStrings.cancelIdleCallback), defaultCategoryStyles.scripting),\n        [\"FireIdleCallback\" /* Trace.Types.Events.Name.FIRE_IDLE_CALLBACK */]: new TimelineRecordStyle(i18nString(UIStrings.fireIdleCallback), defaultCategoryStyles.scripting),\n        [\"WebSocketCreate\" /* Trace.Types.Events.Name.WEB_SOCKET_CREATE */]: new TimelineRecordStyle(i18nString(UIStrings.createWebsocket), defaultCategoryStyles.scripting),\n        [\"WebSocketSendHandshakeRequest\" /* Trace.Types.Events.Name.WEB_SOCKET_SEND_HANDSHAKE_REQUEST */]: new TimelineRecordStyle(i18nString(UIStrings.sendWebsocketHandshake), defaultCategoryStyles.scripting),\n        [\"WebSocketReceiveHandshakeResponse\" /* Trace.Types.Events.Name.WEB_SOCKET_RECEIVE_HANDSHAKE_REQUEST */]: new TimelineRecordStyle(i18nString(UIStrings.receiveWebsocketHandshake), defaultCategoryStyles.scripting),\n        [\"WebSocketDestroy\" /* Trace.Types.Events.Name.WEB_SOCKET_DESTROY */]: new TimelineRecordStyle(i18nString(UIStrings.destroyWebsocket), defaultCategoryStyles.scripting),\n        [\"WebSocketSend\" /* Trace.Types.Events.Name.WEB_SOCKET_SEND */]: new TimelineRecordStyle(i18nString(UIStrings.wsMessageSent), defaultCategoryStyles.scripting),\n        [\"WebSocketReceive\" /* Trace.Types.Events.Name.WEB_SOCKET_RECEIVE */]: new TimelineRecordStyle(i18nString(UIStrings.wsMessageReceived), defaultCategoryStyles.scripting),\n        [\"EmbedderCallback\" /* Trace.Types.Events.Name.EMBEDDER_CALLBACK */]: new TimelineRecordStyle(i18nString(UIStrings.embedderCallback), defaultCategoryStyles.scripting),\n        [\"Decode Image\" /* Trace.Types.Events.Name.DECODE_IMAGE */]: new TimelineRecordStyle(i18nString(UIStrings.imageDecode), defaultCategoryStyles.painting),\n        [\"GPUTask\" /* Trace.Types.Events.Name.GPU_TASK */]: new TimelineRecordStyle(i18nString(UIStrings.gpu), defaultCategoryStyles.gpu),\n        [\"BlinkGC.AtomicPhase\" /* Trace.Types.Events.Name.GC_COLLECT_GARBARGE */]: new TimelineRecordStyle(i18nString(UIStrings.domGc), defaultCategoryStyles.scripting),\n        [\"DoEncrypt\" /* Trace.Types.Events.Name.CRYPTO_DO_ENCRYPT */]: new TimelineRecordStyle(i18nString(UIStrings.encrypt), defaultCategoryStyles.scripting),\n        [\"DoEncryptReply\" /* Trace.Types.Events.Name.CRYPTO_DO_ENCRYPT_REPLY */]: new TimelineRecordStyle(i18nString(UIStrings.encryptReply), defaultCategoryStyles.scripting),\n        [\"DoDecrypt\" /* Trace.Types.Events.Name.CRYPTO_DO_DECRYPT */]: new TimelineRecordStyle(i18nString(UIStrings.decrypt), defaultCategoryStyles.scripting),\n        [\"DoDecryptReply\" /* Trace.Types.Events.Name.CRYPTO_DO_DECRYPT_REPLY */]: new TimelineRecordStyle(i18nString(UIStrings.decryptReply), defaultCategoryStyles.scripting),\n        [\"DoDigest\" /* Trace.Types.Events.Name.CRYPTO_DO_DIGEST */]: new TimelineRecordStyle(i18nString(UIStrings.digest), defaultCategoryStyles.scripting),\n        [\"DoDigestReply\" /* Trace.Types.Events.Name.CRYPTO_DO_DIGEST_REPLY */]: new TimelineRecordStyle(i18nString(UIStrings.digestReply), defaultCategoryStyles.scripting),\n        [\"DoSign\" /* Trace.Types.Events.Name.CRYPTO_DO_SIGN */]: new TimelineRecordStyle(i18nString(UIStrings.sign), defaultCategoryStyles.scripting),\n        [\"DoSignReply\" /* Trace.Types.Events.Name.CRYPTO_DO_SIGN_REPLY */]: new TimelineRecordStyle(i18nString(UIStrings.signReply), defaultCategoryStyles.scripting),\n        [\"DoVerify\" /* Trace.Types.Events.Name.CRYPTO_DO_VERIFY */]: new TimelineRecordStyle(i18nString(UIStrings.verify), defaultCategoryStyles.scripting),\n        [\"DoVerifyReply\" /* Trace.Types.Events.Name.CRYPTO_DO_VERIFY_REPLY */]: new TimelineRecordStyle(i18nString(UIStrings.verifyReply), defaultCategoryStyles.scripting),\n        [\"AsyncTask\" /* Trace.Types.Events.Name.ASYNC_TASK */]: new TimelineRecordStyle(i18nString(UIStrings.asyncTask), defaultCategoryStyles.async),\n        [\"LayoutShift\" /* Trace.Types.Events.Name.LAYOUT_SHIFT */]: new TimelineRecordStyle(i18nString(UIStrings.layoutShift), defaultCategoryStyles.experience),\n        [\"SyntheticLayoutShiftCluster\" /* Trace.Types.Events.Name.SYNTHETIC_LAYOUT_SHIFT_CLUSTER */]: new TimelineRecordStyle(i18nString(UIStrings.layoutShiftCluster), defaultCategoryStyles.experience),\n        [\"EventTiming\" /* Trace.Types.Events.Name.EVENT_TIMING */]: new TimelineRecordStyle(i18nString(UIStrings.eventTiming), defaultCategoryStyles.experience),\n        [\"HandlePostMessage\" /* Trace.Types.Events.Name.HANDLE_POST_MESSAGE */]: new TimelineRecordStyle(i18nString(UIStrings.onMessage), defaultCategoryStyles.messaging),\n        [\"SchedulePostMessage\" /* Trace.Types.Events.Name.SCHEDULE_POST_MESSAGE */]: new TimelineRecordStyle(i18nString(UIStrings.schedulePostMessage), defaultCategoryStyles.messaging),\n    };\n    return eventStylesMap;\n}\nexport function setEventStylesMap(eventStyles) {\n    eventStylesMap = eventStyles;\n}\nexport function setCategories(cats) {\n    categoryStyles = cats;\n}\nexport function visibleTypes() {\n    const eventStyles = maybeInitSylesMap();\n    const result = [];\n    for (const name in eventStyles) {\n        // Typescript cannot infer that `name` is a key of eventStyles\n        const nameAsKey = name;\n        if (!eventStyles[nameAsKey]?.hidden) {\n            result.push(name);\n        }\n    }\n    return result;\n}\nexport function getTimelineMainEventCategories() {\n    if (mainEventCategories) {\n        return mainEventCategories;\n    }\n    mainEventCategories = [\n        EventCategory.IDLE,\n        EventCategory.LOADING,\n        EventCategory.PAINTING,\n        EventCategory.RENDERING,\n        EventCategory.SCRIPTING,\n        EventCategory.OTHER,\n    ];\n    return mainEventCategories;\n}\nexport function setTimelineMainEventCategories(categories) {\n    mainEventCategories = categories;\n}\n//# sourceMappingURL=EntryStyles.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport { getEventStyle } from './EntryStyles.js';\nconst UIStrings = {\n    /**\n     *@description Text shown for an entry in the flame chart that has no explict name.\n     */\n    anonymous: '(anonymous)',\n    /**\n     *@description Text used to show an EventDispatch event which has a type associated with it\n     *@example {click} PH1\n     */\n    eventDispatchS: 'Event: {PH1}',\n    /**\n     *@description Text shown for an entry in the flame chart that represents a frame.\n     */\n    frame: 'Frame',\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    wsConnectionOpened: 'WebSocket opened',\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     *@example {ws://example.com} PH1\n     */\n    wsConnectionOpenedWithUrl: 'WebSocket opened: {PH1}',\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    wsConnectionClosed: 'WebSocket closed',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/EntryName.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * Calculates the display name for a given entry.\n * @param parsedTrace - If the trace data is provided\n * as the second argument it can be used to find source map resolved names for\n * profile calls.\n * Use this function to customise the user visible name for an entry. If no\n * custom name is found, we will fallback to the `name` property in the trace\n * entry.\n */\nexport function nameForEntry(entry, parsedTrace) {\n    if (Trace.Types.Events.isProfileCall(entry)) {\n        if (parsedTrace) {\n            const potentialCallName = Trace.Handlers.ModelHandlers.Samples.getProfileCallFunctionName(parsedTrace.Samples, entry);\n            // We need this extra check because the call name could be the empty\n            // string. If it is, we want to fallback.\n            if (potentialCallName) {\n                return potentialCallName;\n            }\n        }\n        return entry.callFrame.functionName || i18nString(UIStrings.anonymous);\n    }\n    if (Trace.Types.Events.isLegacyTimelineFrame(entry)) {\n        return i18n.i18n.lockedString(UIStrings.frame);\n    }\n    if (Trace.Types.Events.isDispatch(entry)) {\n        // EventDispatch represent user actions such as clicks, so in this case\n        // rather than show the event title (which is always just \"Event\"), we\n        // add the type (\"click\") to help the user understand the event.\n        return i18nString(UIStrings.eventDispatchS, { PH1: entry.args.data.type });\n    }\n    if (Trace.Types.Events.isSyntheticNetworkRequest(entry)) {\n        const parsedURL = new Common.ParsedURL.ParsedURL(entry.args.data.url);\n        const text = parsedURL.isValid ? `${parsedURL.displayName} (${parsedURL.host})` : entry.args.data.url || 'Network request';\n        return Platform.StringUtilities.trimEndWithMaxLength(text, 40);\n    }\n    if (Trace.Types.Events.isWebSocketCreate(entry)) {\n        if (entry.args.data.url) {\n            return i18nString(UIStrings.wsConnectionOpenedWithUrl, { PH1: entry.args.data.url });\n        }\n        return i18nString(UIStrings.wsConnectionOpened);\n    }\n    if (Trace.Types.Events.isWebSocketDestroy(entry)) {\n        return i18nString(UIStrings.wsConnectionClosed);\n    }\n    if (Trace.Types.Events.isSyntheticInteraction(entry)) {\n        return nameForInteractionEvent(entry);\n    }\n    const eventStyleCustomName = getEventStyle(entry.name)?.title;\n    return eventStyleCustomName || entry.name;\n}\nfunction nameForInteractionEvent(event) {\n    const category = Trace.Handlers.ModelHandlers.UserInteractions.categoryOfInteraction(event);\n    // Because we hide nested interactions, we do not want to show the\n    // specific type of the interaction that was not hidden, so instead we\n    // show just the category of that interaction.\n    if (category === 'OTHER') {\n        return 'Other';\n    }\n    if (category === 'KEYBOARD') {\n        return 'Keyboard';\n    }\n    if (category === 'POINTER') {\n        return 'Pointer';\n    }\n    return event.type;\n}\n//# sourceMappingURL=EntryName.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n}\n\n:host * {\n  box-sizing: border-box;\n}\n\ndevtools-dialog {\n  --override-transparent: color-mix(in sRGB, var(--color-background) 80%, transparent);\n}\n\n.title {\n  font-size: var(--sys-typescale-headline4-size);\n  line-height: var(--sys-typescale-headline4-line-height);\n  font-weight: var(--ref-typeface-weight-medium);\n  margin: 0;\n}\n\n.section-title {\n  font-size: var(--sys-typescale-headline5-size);\n  line-height: var(--sys-typescale-headline5-line-height);\n  font-weight: var(--ref-typeface-weight-medium);\n  margin: 0;\n}\n\n.privacy-disclosure {\n  margin: 8px 0;\n}\n\n.url-override {\n  margin: 8px 0;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: max-content;\n}\n\ndetails > summary {\n  font-size: var(--sys-typescale-body4-size);\n  line-height: var(--sys-typescale-body4-line-height);\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.content {\n  max-width: 360px;\n  padding: 16px 20px 18px;\n  box-sizing: border-box;\n}\n\n.open-button-section {\n  display: flex;\n  flex-direction: row;\n}\n\n.origin-mapping-grid {\n  border: 1px solid var(--sys-color-divider);\n  margin-top: 8px;\n}\n\n.origin-mapping-button-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 6px;\n}\n\n.config-button {\n  margin-left: auto;\n}\n\n.advanced-section-contents {\n  margin: 4px 0 14px;\n}\n\n.buttons-section {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 6px;\n  gap: 8px;\n}\n\ninput[type=\"checkbox\"] {\n  height: 12px;\n  width: 12px;\n  min-height: 12px;\n  min-width: 12px;\n  margin: 6px;\n}\n\ninput[type=\"text\"][disabled] {\n  color: var(--sys-color-state-disabled);\n}\n\n.warning {\n  margin: 2px 8px;\n  color: var(--color-error-text);\n}\n\nx-link { /* stylelint-disable-line selector-type-no-unknown */\n  color: var(--sys-color-primary);\n  text-decoration-line: underline;\n}\n\n.divider {\n  margin: 10px 0;\n  border: none;\n  border-top: 1px solid var(--sys-color-divider);\n}\n\n/*# sourceURL=fieldSettingsDialog.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/data_grid/data_grid.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport fieldSettingsDialogStyles from './fieldSettingsDialog.css.js';\nconst UIStrings = {\n    /**\n     * @description Text label for a button that opens a dialog to set up field data.\n     */\n    setUp: 'Set up',\n    /**\n     * @description Text label for a button that opens a dialog to configure field data.\n     */\n    configure: 'Configure',\n    /**\n     * @description Text label for a button that enables the collection of field data.\n     */\n    ok: 'Ok',\n    /**\n     * @description Text label for a button that opts out of the collection of field data.\n     */\n    optOut: 'Opt out',\n    /**\n     * @description Text label for a button that cancels the setup of field data collection.\n     */\n    cancel: 'Cancel',\n    /**\n     * @description Text label for a checkbox that controls if a manual URL override is enabled for field data.\n     */\n    onlyFetchFieldData: 'Always show field data for the below URL',\n    /**\n     * @description Text label for a text box that that contains the manual override URL for fetching field data.\n     */\n    url: 'URL',\n    /**\n     * @description Warning message explaining that the Chrome UX Report could not find enough real world speed data for the page. \"Chrome UX Report\" is a product name and should not be translated.\n     */\n    doesNotHaveSufficientData: 'The Chrome UX Report does not have sufficient real-world speed data for this page.',\n    /**\n     * @description Title for a dialog that contains information and settings related to fetching field data.\n     */\n    configureFieldData: 'Configure field data fetching',\n    /**\n     * @description Paragraph explaining where field data comes from and and how it can be used. PH1 will be a link with text \"Chrome UX Report\" that is untranslated because it is a product name.\n     * @example {Chrome UX Report} PH1\n     */\n    fetchAggregated: 'Fetch aggregated field data from the {PH1} to help you contextualize local measurements with what real users experience on the site.',\n    /**\n     * @description Heading for a section that explains what user data needs to be collected to fetch field data.\n     */\n    privacyDisclosure: 'Privacy disclosure',\n    /**\n     * @description Paragraph explaining what data needs to be sent to Google to fetch field data, and when that data will be sent.\n     */\n    whenPerformanceIsShown: 'When DevTools is open, the URLs you visit will be sent to Google to query field data. These requests are not tied to your Google account.',\n    /**\n     * @description Header for a section containing advanced settings\n     */\n    advanced: 'Advanced',\n    /**\n     * @description Paragraph explaining that the user can associate a development origin with a production origin for the purposes of fetching real user data.\n     */\n    mapDevelopmentOrigins: 'Set a development origin to automatically get relevant field data for its production origin.',\n    /**\n     * @description Title for a column in a data table representing a site origin used for development\n     */\n    developmentOrigin: 'Development origin',\n    /**\n     * @description Title for a column in a data table representing a site origin used by real users in a production environment\n     */\n    productionOrigin: 'Production origin',\n    /**\n     * @description Label for an input that accepts a site origin used for development\n     * @example {http://localhost:8080} PH1\n     */\n    developmentOriginValue: 'Development origin: {PH1}',\n    /**\n     * @description Label for an input that accepts a site origin used by real users in a production environment\n     * @example {https://example.com} PH1\n     */\n    productionOriginValue: 'Production origin: {PH1}',\n    /**\n     * @description Text label for a button that adds a new editable row to a data table\n     */\n    new: 'New',\n    /**\n     * @description Text label for a button that saves the changes of an editable row in a data table\n     */\n    add: 'Add',\n    /**\n     * @description Text label for a button that deletes a row in a data table\n     */\n    delete: 'Delete',\n    /**\n     * @description Warning message explaining that an input origin is not a valid origin or URL.\n     * @example {http//malformed.com} PH1\n     */\n    invalidOrigin: '\"{PH1}\" is not a valid origin or URL.',\n    /**\n     * @description Warning message explaining that an development origin is already mapped to a productionOrigin.\n     * @example {https://example.com} PH1\n     */\n    alreadyMapped: '\"{PH1}\" is already mapped to a production origin.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/FieldSettingsDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst { html, nothing, Directives: { ifDefined } } = LitHtml;\nexport class ShowDialog extends Event {\n    static eventName = 'showdialog';\n    constructor() {\n        super(ShowDialog.eventName);\n    }\n}\nexport class FieldSettingsDialog extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #dialog;\n    #configSetting = CrUXManager.CrUXManager.instance().getConfigSetting();\n    #urlOverride = '';\n    #urlOverrideEnabled = false;\n    #urlOverrideWarning = '';\n    #originMapWarning = '';\n    #originMappings = [];\n    #isEditingOriginGrid = false;\n    #editGridDevelopmentOrigin = '';\n    #editGridProductionOrigin = '';\n    constructor() {\n        super();\n        const cruxManager = CrUXManager.CrUXManager.instance();\n        this.#configSetting = cruxManager.getConfigSetting();\n        this.#resetToSettingState();\n        this.#render();\n    }\n    #resetToSettingState() {\n        const configSetting = this.#configSetting.get();\n        this.#urlOverride = configSetting.override || '';\n        this.#urlOverrideEnabled = configSetting.overrideEnabled || false;\n        this.#originMappings = configSetting.originMappings || [];\n        this.#urlOverrideWarning = '';\n        this.#originMapWarning = '';\n        this.#isEditingOriginGrid = false;\n        this.#editGridDevelopmentOrigin = '';\n        this.#editGridProductionOrigin = '';\n    }\n    #flushToSetting(enabled) {\n        this.#configSetting.set({\n            enabled,\n            override: this.#urlOverride,\n            originMappings: this.#originMappings,\n            overrideEnabled: this.#urlOverrideEnabled,\n        });\n    }\n    #onSettingsChanged() {\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    async #urlHasFieldData(url) {\n        const cruxManager = CrUXManager.CrUXManager.instance();\n        const result = await cruxManager.getFieldDataForPage(url);\n        return Object.values(result).some(v => v);\n    }\n    async #submit(enabled) {\n        if (enabled && this.#urlOverrideEnabled) {\n            const origin = this.#getOrigin(this.#urlOverride);\n            if (!origin) {\n                this.#urlOverrideWarning = i18nString(UIStrings.invalidOrigin, { PH1: this.#urlOverride });\n                void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n                return;\n            }\n            const hasFieldData = await this.#urlHasFieldData(this.#urlOverride);\n            if (!hasFieldData) {\n                this.#urlOverrideWarning = i18nString(UIStrings.doesNotHaveSufficientData);\n                void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n                return;\n            }\n        }\n        this.#flushToSetting(enabled);\n        this.#closeDialog();\n    }\n    #showDialog() {\n        if (!this.#dialog) {\n            throw new Error('Dialog not found');\n        }\n        this.#resetToSettingState();\n        void this.#dialog.setDialogVisible(true);\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n        this.dispatchEvent(new ShowDialog());\n    }\n    #closeDialog(evt) {\n        if (!this.#dialog) {\n            throw new Error('Dialog not found');\n        }\n        void this.#dialog.setDialogVisible(false);\n        if (evt) {\n            evt.stopImmediatePropagation();\n        }\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [fieldSettingsDialogStyles, Input.textInputStyles, Input.checkboxStyles];\n        this.#configSetting.addChangeListener(this.#onSettingsChanged, this);\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    disconnectedCallback() {\n        this.#configSetting.removeChangeListener(this.#onSettingsChanged, this);\n    }\n    #renderOpenButton() {\n        if (this.#configSetting.get().enabled) {\n            // clang-format off\n            return html `\n        <devtools-button\n          class=\"config-button\"\n          @click=${this.#showDialog}\n          .data=${{\n                variant: \"outlined\" /* Buttons.Button.Variant.OUTLINED */,\n                title: i18nString(UIStrings.configure),\n            }}\n        jslog=${VisualLogging.action('timeline.field-data.configure').track({ click: true })}\n        >${i18nString(UIStrings.configure)}</devtools-button>\n      `;\n            // clang-format on\n        }\n        // clang-format off\n        return html `\n      <devtools-button\n        class=\"setup-button\"\n        @click=${this.#showDialog}\n        .data=${{\n            variant: \"primary\" /* Buttons.Button.Variant.PRIMARY */,\n            title: i18nString(UIStrings.setUp),\n        }}\n        jslog=${VisualLogging.action('timeline.field-data.setup').track({ click: true })}\n        data-field-data-setup\n      >${i18nString(UIStrings.setUp)}</devtools-button>\n    `;\n        // clang-format on\n    }\n    #renderEnableButton() {\n        // clang-format off\n        return html `\n      <devtools-button\n        @click=${() => {\n            void this.#submit(true);\n        }}\n        .data=${{\n            variant: \"primary\" /* Buttons.Button.Variant.PRIMARY */,\n            title: i18nString(UIStrings.ok),\n        }}\n        jslog=${VisualLogging.action('timeline.field-data.enable').track({ click: true })}\n        data-field-data-enable\n      >${i18nString(UIStrings.ok)}</devtools-button>\n    `;\n        // clang-format on\n    }\n    #renderDisableButton() {\n        const label = this.#configSetting.get().enabled ? i18nString(UIStrings.optOut) : i18nString(UIStrings.cancel);\n        // clang-format off\n        return html `\n      <devtools-button\n        @click=${() => {\n            void this.#submit(false);\n        }}\n        .data=${{\n            variant: \"outlined\" /* Buttons.Button.Variant.OUTLINED */,\n            title: label,\n        }}\n        jslog=${VisualLogging.action('timeline.field-data.disable').track({ click: true })}\n        data-field-data-disable\n      >${label}</devtools-button>\n    `;\n        // clang-format on\n    }\n    #onUrlOverrideChange(event) {\n        event.stopPropagation();\n        const input = event.target;\n        this.#urlOverride = input.value;\n        this.#urlOverrideWarning = '';\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #onUrlOverrideEnabledChange(event) {\n        event.stopPropagation();\n        const input = event.target;\n        this.#urlOverrideEnabled = input.checked;\n        this.#urlOverrideWarning = '';\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    // Cannot use Lit template automatic binding because this event function is technically added to a different component\n    #onEditGridDevelopmentOriginChange = (event) => {\n        event.stopPropagation();\n        const input = event.target;\n        this.#editGridDevelopmentOrigin = input.value;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    };\n    // Cannot use Lit template automatic binding because this event function is technically added to a different component\n    #onEditGridProductionOriginChange = (event) => {\n        event.stopPropagation();\n        const input = event.target;\n        this.#editGridProductionOrigin = input.value;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    };\n    #getOrigin(url) {\n        try {\n            return new URL(url).origin;\n        }\n        catch {\n            return null;\n        }\n    }\n    #startEditingOriginMapping() {\n        this.#editGridDevelopmentOrigin = '';\n        this.#editGridProductionOrigin = '';\n        this.#isEditingOriginGrid = true;\n        this.#originMapWarning = '';\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    async #addOriginMapping() {\n        const developmentOrigin = this.#getOrigin(this.#editGridDevelopmentOrigin);\n        const productionOrigin = this.#getOrigin(this.#editGridProductionOrigin);\n        if (!developmentOrigin) {\n            this.#originMapWarning = i18nString(UIStrings.invalidOrigin, { PH1: this.#editGridDevelopmentOrigin });\n            void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n            return;\n        }\n        if (this.#originMappings.find(m => m.developmentOrigin === developmentOrigin)) {\n            this.#originMapWarning = i18nString(UIStrings.alreadyMapped, { PH1: developmentOrigin });\n            void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n            return;\n        }\n        if (!productionOrigin) {\n            this.#originMapWarning = i18nString(UIStrings.invalidOrigin, { PH1: this.#editGridProductionOrigin });\n            void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n            return;\n        }\n        const hasFieldData = await this.#urlHasFieldData(productionOrigin);\n        if (!hasFieldData) {\n            this.#originMapWarning = i18nString(UIStrings.doesNotHaveSufficientData, { PH1: this.#editGridProductionOrigin });\n            void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n            return;\n        }\n        this.#originMappings.push({ developmentOrigin, productionOrigin });\n        this.#editGridDevelopmentOrigin = '';\n        this.#editGridProductionOrigin = '';\n        this.#isEditingOriginGrid = false;\n        this.#originMapWarning = '';\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #deleteOriginMapping(index) {\n        this.#originMappings.splice(index, 1);\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #renderOriginMapGrid() {\n        const rows = this.#originMappings.map((mapping, index) => {\n            return {\n                cells: [\n                    {\n                        columnId: 'development-origin',\n                        value: mapping.developmentOrigin,\n                        title: mapping.developmentOrigin,\n                    },\n                    {\n                        columnId: 'production-origin',\n                        value: mapping.productionOrigin,\n                        title: mapping.productionOrigin,\n                    },\n                    {\n                        columnId: 'action-button',\n                        value: i18nString(UIStrings.delete),\n                        // clang-format off\n                        renderer: value => html `\n              <div style=\"display: flex; align-items: center; justify-content: center;\">\n                <devtools-button\n                  class=\"delete-mapping\"\n                  .data=${{\n                            variant: \"icon\" /* Buttons.Button.Variant.ICON */,\n                            size: \"SMALL\" /* Buttons.Button.Size.SMALL */,\n                            title: value,\n                            iconName: 'bin',\n                            jslogContext: 'delete-origin-mapping',\n                        }}\n                  @click=${() => this.#deleteOriginMapping(index)}\n                ></devtools-button>\n              </div>\n            `,\n                        // clang-format on\n                    },\n                ],\n            };\n        });\n        if (this.#isEditingOriginGrid) {\n            // Input element is in a different component so we need to inject this in the style attribute\n            const inputStyle = 'width: 100%; box-sizing: border-box; border: none; background: none;';\n            rows.push({\n                cells: [\n                    {\n                        columnId: 'development-origin',\n                        value: this.#editGridDevelopmentOrigin,\n                        // clang-format off\n                        renderer: value => html `\n              <input\n                type=\"text\"\n                placeholder=\"http://localhost:8080\"\n                aria-label=${i18nString(UIStrings.developmentOriginValue, { PH1: value })}\n                style=${inputStyle}\n                title=${ifDefined(value)}\n                @keyup=${this.#onEditGridDevelopmentOriginChange}\n                @change=${this.#onEditGridDevelopmentOriginChange} />\n            `,\n                        // clang-format on\n                    },\n                    {\n                        columnId: 'production-origin',\n                        value: this.#editGridProductionOrigin,\n                        // clang-format off\n                        renderer: value => html `\n              <input\n                type=\"text\"\n                placeholder=\"https://example.com\"\n                aria-label=${i18nString(UIStrings.productionOriginValue, { PH1: value })}\n                style=${inputStyle}\n                title=${ifDefined(value)}\n                @keyup=${this.#onEditGridProductionOriginChange}\n                @change=${this.#onEditGridProductionOriginChange} />\n            `,\n                        // clang-format on\n                    },\n                    {\n                        columnId: 'action-button',\n                        value: i18nString(UIStrings.add),\n                        // clang-format off\n                        renderer: value => html `\n              <div style=\"display: flex; align-items: center; justify-content: center;\">\n                <devtools-button\n                  id=\"add-mapping-button\"\n                  .data=${{\n                            variant: \"icon\" /* Buttons.Button.Variant.ICON */,\n                            size: \"SMALL\" /* Buttons.Button.Size.SMALL */,\n                            title: value,\n                            iconName: 'plus',\n                            disabled: !this.#editGridDevelopmentOrigin || !this.#editGridProductionOrigin,\n                            jslogContext: 'add-origin-mapping',\n                        }}\n                  @click=${() => this.#addOriginMapping()}\n                ></devtools-button>\n              </div>\n            `,\n                        // clang-format on\n                    },\n                ],\n            });\n        }\n        const gridData = {\n            columns: [\n                {\n                    id: 'development-origin',\n                    title: i18nString(UIStrings.developmentOrigin),\n                    widthWeighting: 13,\n                    hideable: false,\n                    visible: true,\n                    sortable: false,\n                },\n                {\n                    id: 'production-origin',\n                    title: i18nString(UIStrings.productionOrigin),\n                    widthWeighting: 13,\n                    hideable: false,\n                    visible: true,\n                    sortable: false,\n                },\n                {\n                    id: 'action-button',\n                    title: '',\n                    widthWeighting: 3,\n                    hideable: false,\n                    visible: true,\n                    sortable: false,\n                },\n            ],\n            rows,\n        };\n        // clang-format off\n        return html `\n      <div>${i18nString(UIStrings.mapDevelopmentOrigins)}</div>\n      <devtools-data-grid-controller\n        class=\"origin-mapping-grid\"\n        .data=${gridData}\n      ></devtools-data-grid-controller>\n      ${this.#originMapWarning ? html `\n        <div class=\"warning\" role=\"alert\" aria-label=${this.#originMapWarning}>${this.#originMapWarning}</div>\n      ` : nothing}\n      <div class=\"origin-mapping-button-section\">\n        <devtools-button\n          @click=${this.#startEditingOriginMapping}\n          .data=${{\n            variant: \"text\" /* Buttons.Button.Variant.TEXT */,\n            title: i18nString(UIStrings.new),\n            iconName: 'plus',\n            disabled: this.#isEditingOriginGrid,\n        }}\n          jslogContext=${'new-origin-mapping'}\n        >${i18nString(UIStrings.new)}</devtools-button>\n      </div>\n    `;\n        // clang-format on\n    }\n    #render = () => {\n        const linkEl = UI.XLink.XLink.create('https://developer.chrome.com/docs/crux', i18n.i18n.lockedString('Chrome UX Report'));\n        const descriptionEl = i18n.i18n.getFormatLocalizedString(str_, UIStrings.fetchAggregated, { PH1: linkEl });\n        // clang-format off\n        const output = html `\n      <div class=\"open-button-section\">${this.#renderOpenButton()}</div>\n      <devtools-dialog\n        @clickoutsidedialog=${this.#closeDialog}\n        .showConnector=${true}\n        .position=${\"auto\" /* Dialogs.Dialog.DialogVerticalPosition.AUTO */}\n        .horizontalAlignment=${\"center\" /* Dialogs.Dialog.DialogHorizontalAlignment.CENTER */}\n        .jslogContext=${'timeline.field-data.settings'}\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n            this.#dialog = node;\n        })}\n      >\n        <div class=\"content\">\n          <h2 class=\"title\">${i18nString(UIStrings.configureFieldData)}</h2>\n          <div>${descriptionEl}</div>\n          <div class=\"privacy-disclosure\">\n            <h3 class=\"section-title\">${i18nString(UIStrings.privacyDisclosure)}</h3>\n            <div>${i18nString(UIStrings.whenPerformanceIsShown)}</div>\n          </div>\n          <details aria-label=${i18nString(UIStrings.advanced)}>\n            <summary>${i18nString(UIStrings.advanced)}</summary>\n            <div class=\"advanced-section-contents\">\n              ${this.#renderOriginMapGrid()}\n              <hr class=\"divider\">\n              <label class=\"url-override\">\n                <input\n                  type=\"checkbox\"\n                  .checked=${this.#urlOverrideEnabled}\n                  @change=${this.#onUrlOverrideEnabledChange}\n                  aria-label=${i18nString(UIStrings.onlyFetchFieldData)}\n                  jslog=${VisualLogging.toggle().track({ click: true }).context('field-url-override-enabled')}\n                />\n                ${i18nString(UIStrings.onlyFetchFieldData)}\n              </label>\n              <input\n                type=\"text\"\n                @keyup=${this.#onUrlOverrideChange}\n                @change=${this.#onUrlOverrideChange}\n                class=\"devtools-text-input\"\n                .disabled=${!this.#urlOverrideEnabled}\n                .value=${this.#urlOverride}\n                placeholder=${ifDefined(this.#urlOverrideEnabled ? i18nString(UIStrings.url) : undefined)}\n              />\n              ${this.#urlOverrideWarning\n            ? html `<div class=\"warning\" role=\"alert\" aria-label=${this.#urlOverrideWarning}>${this.#urlOverrideWarning}</div>`\n            : nothing}\n            </div>\n          </details>\n          <div class=\"buttons-section\">\n            ${this.#renderDisableButton()}\n            ${this.#renderEnableButton()}\n          </div>\n        </div>\n      </devtools-dialog>\n    `;\n        // clang-format on\n        LitHtml.render(output, this.#shadow, { host: this });\n    };\n}\ncustomElements.define('devtools-field-settings-dialog', FieldSettingsDialog);\n//# sourceMappingURL=FieldSettingsDialog.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n}\n\n.breakdown {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  color: var(--sys-color-token-subtle);\n}\n\n.value {\n  display: inline-block;\n  padding: 0 5px;\n  color: var(--sys-color-on-surface);\n}\n\n/*# sourceURL=interactionBreakdown.css */\n`);\n\nexport default styles;\n","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport styles from './interactionBreakdown.css.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description Text shown next to the interaction event's input delay time in the detail view.\n     */\n    inputDelay: 'Input delay',\n    /**\n     *@description Text shown next to the interaction event's thread processing duration in the detail view.\n     */\n    processingDuration: 'Processing duration',\n    /**\n     *@description Text shown next to the interaction event's presentation delay time in the detail view.\n     */\n    presentationDelay: 'Presentation delay',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/InteractionBreakdown.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class InteractionBreakdown extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #boundRender = this.#render.bind(this);\n    #entry = null;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [styles];\n    }\n    set entry(entry) {\n        if (entry === this.#entry) {\n            return;\n        }\n        this.#entry = entry;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    #render() {\n        if (!this.#entry) {\n            return;\n        }\n        const inputDelay = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(this.#entry.inputDelay);\n        const mainThreadTime = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(this.#entry.mainThreadHandling);\n        const presentationDelay = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(this.#entry.presentationDelay);\n        LitHtml.render(html `<ul class=\"breakdown\">\n                     <li data-entry=\"input-delay\">${i18nString(UIStrings.inputDelay)}<span class=\"value\">${inputDelay}</span></li>\n                     <li data-entry=\"processing-duration\">${i18nString(UIStrings.processingDuration)}<span class=\"value\">${mainThreadTime}</span></li>\n                     <li data-entry=\"presentation-delay\">${i18nString(UIStrings.presentationDelay)}<span class=\"value\">${presentationDelay}</span></li>\n                   </ul>\n                   `, this.#shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-interaction-breakdown', InteractionBreakdown);\n//# sourceMappingURL=InteractionBreakdown.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  --markdown-link-text-decoration-style: underline;\n}\n\n.insight {\n  display: block;\n  position: relative;\n  width: auto;\n  height: auto;\n  margin: var(--sys-size-6) 0;\n  border-radius: var(--sys-shape-corner-extra-small);\n  overflow: hidden;\n  border: var(--sys-size-1) solid var(--sys-color-divider);\n  background-color: var(--sys-color-base);\n\n  &.closed {\n    background-color: var(--sys-color-surface3);\n    border: none;\n\n    &:focus-within {\n      /* Ensure that if the user tabs to a closed insight, we outline it so they know it's focused. */\n      outline: var(--sys-size-1) solid var(--sys-color-primary);\n    }\n  }\n\n  header {\n    padding: var(--sys-size-5) var(--sys-size-6);\n\n    h3 {\n      font: var(--sys-typescale-body4-medium);\n    }\n  }\n\n  &:not(.closed) {\n    header {\n      padding-bottom: var(--sys-size-2);\n    }\n  }\n}\n\n.insight-hover-icon {\n  position: absolute;\n  top: var(--sys-size-5);\n  right: var(--sys-size-5);\n  border: none;\n  width: var(--sys-size-9);\n  user-select: none;\n  height: var(--sys-size-9);\n  box-shadow: var(--sys-elevation-level1);\n  border-radius: var(--sys-shape-corner-full);\n  background: var(--sys-color-cdt-base-container);\n  opacity: 0%;\n  transition: opacity 0.2s ease;\n\n  /* Ensure that the icon appears when the user hovers, or focuses the header */\n  .insight:hover &,\n  header:focus-within & {\n    opacity: 100%;\n  }\n\n  devtools-button {\n    transition: transform 0.2s ease;\n  }\n\n  &.active devtools-button {\n    transform: rotate(180deg);\n  }\n}\n\n.insight-description,\n.insight-body,\n.insight-title {\n  user-select: text;\n}\n\n.insight-body {\n  padding: 0 var(--sys-size-6) var(--sys-size-5) var(--sys-size-6);\n}\n\n.insight-section {\n  padding-top: var(--sys-size-5);\n}\n\n.insight-description:not(:empty) {\n  padding-bottom: var(--sys-size-5);\n}\n\n.insight-section:not(:empty) {\n  border-top: var(--sys-size-1) solid var(--sys-color-divider);\n}\n\n.insight-title {\n  color: var(--sys-color-on-base);\n  margin-block: 3px;\n}\n\n.link {\n  color: var(--sys-color-primary);\n}\n\n.dl-title {\n  font-weight: bold;\n}\n\ndd.dl-title {\n  text-align: right;\n}\n\n.dl-value {\n  font-weight: bold;\n}\n\n.metric-value-bad {\n  color: var(--app-color-performance-bad);\n}\n\n.metric-value-good {\n  color: var(--app-color-performance-good);\n}\n\n.insight-entry {\n  font: var(--sys-typescale-body4-medium);\n  padding-block: var(--sys-size-3);\n  display: flex;\n  align-items: center;\n}\n\n.element-img {\n  width: var(--sys-size-13);\n  height: var(--sys-size-13);\n  object-fit: cover;\n  border: var(--sys-size-1) solid var(--sys-color-divider);\n  background: var(--sys-color-divider) -0.054px -12px / 100.239% 148.936% no-repeat;\n  margin-right: var(--sys-size-5);\n}\n\n.element-img-details {\n  font: var(--sys-typescale-body4-regular);\n  display: flex;\n  flex-direction: column;\n  word-break: break-all;\n\n  .element-img-details-size {\n    color: var(--color-text-secondary);\n  }\n}\n\n::slotted(*) {\n  font: var(--sys-typescale-body4-regular);\n}\n\n.insight-savings {\n  font: var(--sys-typescale-body4-medium);\n  color: var(--sys-color-green);\n}\n\nul.insight-icon-results {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    display: flex;\n    align-items: flex-start;\n    justify-content: flex-start;\n    gap: var(--sys-size-3);\n\n    span {\n      /* push the text down to align slightly better with the icons */\n      padding-top: 2px;\n    }\n  }\n}\n\n.timeline-link {\n  cursor: pointer;\n  text-decoration: underline;\n  color: var(--sys-color-primary);\n  /* for a11y reasons this is a button, so we have to remove some default\n   * styling */\n  background: none;\n  border: none;\n  padding: 0;\n  font: inherit;\n}\n\n.timeline-link.invalid-link {\n  color: var(--sys-color-state-disabled);\n}\n\n.lcp-element {\n  display: inline-flex;\n  align-items: center;\n}\n\n.insight-results:not(:last-child) {\n  border-bottom: var(--sys-size-1) solid var(--sys-color-divider);\n  padding-bottom: var(--sys-size-5);\n}\n\n.lcp-element:not(:empty) {\n  padding: inherit;\n}\n\n/*# sourceURL=sidebarInsight.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as ComponentHelpers from '../../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport * as Utils from '../../utils/utils.js';\nimport sidebarInsightStyles from './sidebarInsight.css.js';\nconst { html } = LitHtml;\nexport class EventReferenceClick extends Event {\n    event;\n    static eventName = 'eventreferenceclick';\n    constructor(event) {\n        super(EventReferenceClick.eventName, { bubbles: true, composed: true });\n        this.event = event;\n    }\n}\nclass EventRef extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #boundRender = this.#render.bind(this);\n    #text = null;\n    #event = null;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [sidebarInsightStyles];\n    }\n    set text(text) {\n        this.#text = text;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    set event(event) {\n        this.#event = event;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    #render() {\n        if (!this.#text || !this.#event) {\n            return;\n        }\n        // clang-format off\n        LitHtml.render(html `\n      <button type=\"button\" class=\"timeline-link\" @click=${(e) => {\n            e.stopPropagation();\n            if (this.#event) {\n                this.dispatchEvent(new EventReferenceClick(this.#event));\n            }\n        }}>${this.#text}</button>\n    `, this.#shadow, { host: this });\n        // clang-format on\n    }\n}\nexport function eventRef(event) {\n    let title, text;\n    if (Trace.Types.Events.isSyntheticNetworkRequest(event)) {\n        text = Utils.Helpers.shortenUrl(new URL(event.args.data.url));\n        title = event.args.data.url;\n    }\n    else {\n        Platform.TypeScriptUtilities.assertNever(event, `unsupported event in eventRef: ${event.name}`);\n    }\n    return html `<devtools-performance-event-ref\n    .event=${event}\n    .text=${text}\n    title=${title}\n  ></devtools-performance-event-ref>`;\n}\ncustomElements.define('devtools-performance-event-ref', EventRef);\n//# sourceMappingURL=EventRef.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Buttons from '../../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\nimport { md } from './Helpers.js';\nimport sidebarInsightStyles from './sidebarInsight.css.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     * @description Text to tell the user the estimated time or size savings for this insight. \"&\" means \"and\" - space is limited to prefer abbreviated terms if possible. Text will still fit if not short, it just won't look very good, so using no abbreviations is fine if necessary.\n     * @example {401 ms} PH1\n     * @example {112 kB} PH1\n     */\n    estimatedSavings: 'Est savings: {PH1}',\n    /**\n     * @description Text to tell the user the estimated time and size savings for this insight. \"&\" means \"and\", \"Est\" means \"Estimated\" - space is limited to prefer abbreviated terms if possible. Text will still fit if not short, it just won't look very good, so using no abbreviations is fine if necessary.\n     * @example {401 ms} PH1\n     * @example {112 kB} PH2\n     */\n    estimatedSavingsTimingAndBytes: 'Est savings: {PH1} & {PH2}',\n    /**\n     * @description Used for screen-readers as a label on the button to expand an insight to view details\n     * @example {LCP by phase} PH1\n     */\n    viewDetails: 'View details for {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/SidebarInsight.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class InsightActivated extends Event {\n    name;\n    insightSetKey;\n    overlays;\n    static eventName = 'insightactivated';\n    constructor(name, insightSetKey, overlays) {\n        super(InsightActivated.eventName, { bubbles: true, composed: true });\n        this.name = name;\n        this.insightSetKey = insightSetKey;\n        this.overlays = overlays;\n    }\n}\nexport class InsightDeactivated extends Event {\n    static eventName = 'insightdeactivated';\n    constructor() {\n        super(InsightDeactivated.eventName, { bubbles: true, composed: true });\n    }\n}\nexport class InsightSetHovered extends Event {\n    bounds;\n    static eventName = 'insightsethovered';\n    constructor(bounds) {\n        super(InsightSetHovered.eventName, { bubbles: true, composed: true });\n        this.bounds = bounds;\n    }\n}\nexport class InsightSetZoom extends Event {\n    bounds;\n    static eventName = 'insightsetzoom';\n    constructor(bounds) {\n        super(InsightSetZoom.eventName, { bubbles: true, composed: true });\n        this.bounds = bounds;\n    }\n}\nexport class InsightProvideOverlays extends Event {\n    overlays;\n    options;\n    static eventName = 'insightprovideoverlays';\n    constructor(overlays, options) {\n        super(InsightProvideOverlays.eventName, { bubbles: true, composed: true });\n        this.overlays = overlays;\n        this.options = options;\n    }\n}\nexport class InsightProvideRelatedEvents extends Event {\n    label;\n    events;\n    activateInsight;\n    static eventName = 'insightproviderelatedevents';\n    constructor(label, events, activateInsight) {\n        super(InsightProvideRelatedEvents.eventName, { bubbles: true, composed: true });\n        this.label = label;\n        this.events = events;\n        this.activateInsight = activateInsight;\n    }\n}\nexport class SidebarInsight extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #boundRender = this.#render.bind(this);\n    #insightTitle = '';\n    #insightDescription = '';\n    #insightInternalName = '';\n    #expanded = false;\n    #estimatedSavingsTime = undefined;\n    #estimatedSavingsBytes = undefined;\n    set data(data) {\n        this.#insightTitle = data.title;\n        this.#insightDescription = data.description;\n        this.#insightInternalName = data.internalName;\n        this.#expanded = data.expanded;\n        this.#estimatedSavingsTime = data.estimatedSavingsTime;\n        this.#estimatedSavingsBytes = data.estimatedSavingsBytes;\n        // Used for testing.\n        this.dataset.insightTitle = data.title;\n        if (data.expanded) {\n            this.dataset.insightExpanded = '';\n        }\n        else {\n            delete this.dataset.insightExpanded;\n        }\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [sidebarInsightStyles];\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    #dispatchInsightToggle() {\n        this.dispatchEvent(new CustomEvent('insighttoggleclick'));\n    }\n    #renderHoverIcon(insightIsActive) {\n        // clang-format off\n        const containerClasses = LitHtml.Directives.classMap({\n            'insight-hover-icon': true,\n            active: insightIsActive,\n        });\n        return html `\n      <div class=${containerClasses} inert>\n        <devtools-button .data=${{\n            variant: \"icon\" /* Buttons.Button.Variant.ICON */,\n            iconName: 'chevron-down',\n            size: \"SMALL\" /* Buttons.Button.Size.SMALL */,\n        }}\n      ></devtools-button>\n      </div>\n\n    `;\n        // clang-format on\n    }\n    /**\n     * Ensure that if the user presses enter or space on a header, we treat it\n     * like a click and toggle the insight.\n     */\n    #handleHeaderKeyDown(event) {\n        if (event.key === 'Enter' || event.key === ' ') {\n            event.preventDefault();\n            event.stopPropagation();\n            this.#dispatchInsightToggle();\n        }\n    }\n    #getEstimatedSavingsString() {\n        let timeString, bytesString;\n        if (this.#estimatedSavingsTime !== undefined && this.#estimatedSavingsTime > 0) {\n            timeString = i18n.TimeUtilities.millisToString(this.#estimatedSavingsTime);\n        }\n        if (this.#estimatedSavingsBytes !== undefined && this.#estimatedSavingsBytes > 0) {\n            bytesString = Platform.NumberUtilities.bytesToString(this.#estimatedSavingsBytes);\n        }\n        if (timeString && bytesString) {\n            return i18nString(UIStrings.estimatedSavingsTimingAndBytes, {\n                PH1: timeString,\n                PH2: bytesString,\n            });\n        }\n        if (timeString) {\n            return i18nString(UIStrings.estimatedSavings, {\n                PH1: timeString,\n            });\n        }\n        if (bytesString) {\n            return i18nString(UIStrings.estimatedSavings, {\n                PH1: bytesString,\n            });\n        }\n        return null;\n    }\n    #render() {\n        const containerClasses = LitHtml.Directives.classMap({\n            insight: true,\n            closed: !this.#expanded,\n        });\n        const estimatedSavingsString = this.#getEstimatedSavingsString();\n        // clang-format off\n        const output = html `\n      <div class=${containerClasses}>\n        <header @click=${this.#dispatchInsightToggle}\n          @keydown=${this.#handleHeaderKeyDown}\n          jslog=${VisualLogging.action(`timeline.toggle-insight.${this.#insightInternalName}`).track({ click: true })}\n          tabIndex=\"0\"\n          role=\"button\"\n          aria-expanded=${this.#expanded}\n          aria-label=${i18nString(UIStrings.viewDetails, { PH1: this.#insightTitle })}\n        >\n          ${this.#renderHoverIcon(this.#expanded)}\n          <h3 class=\"insight-title\">${this.#insightTitle}</h3>\n          ${estimatedSavingsString ?\n            html `\n            <slot name=\"insight-savings\" class=\"insight-savings\">\n              ${estimatedSavingsString}\n            </slot>\n          </div>`\n            : LitHtml.nothing}\n        </header>\n        ${this.#expanded ? html `\n          <div class=\"insight-body\">\n            <div class=\"insight-description\">${this.#insightDescription ? md(this.#insightDescription) : LitHtml.nothing}</div>\n            <div class=\"insight-content\">\n              <slot name=\"insight-content\"></slot>\n            </div>\n          </div>`\n            : LitHtml.nothing}\n      </div>\n    `;\n        // clang-format on\n        LitHtml.render(output, this.#shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-sidebar-insight', SidebarInsight);\n//# sourceMappingURL=SidebarInsight.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nexport var Category;\n(function (Category) {\n    Category[\"ALL\"] = \"All\";\n    Category[\"INP\"] = \"INP\";\n    Category[\"LCP\"] = \"LCP\";\n    Category[\"CLS\"] = \"CLS\";\n})(Category || (Category = {}));\n//# sourceMappingURL=types.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../../ui/components/markdown_view/markdown_view.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Marked from '../../../../third_party/marked/marked.js';\nimport * as ComponentHelpers from '../../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\nimport sidebarInsightStyles from './sidebarInsight.css.js';\nimport * as SidebarInsight from './SidebarInsight.js';\nimport { Category } from './types.js';\nconst { html } = LitHtml;\nexport function shouldRenderForCategory(options) {\n    return options.activeCategory === Category.ALL || options.activeCategory === options.insightCategory;\n}\nexport function insightIsActive(options) {\n    const active = options.activeInsight && options.activeInsight.name === options.insightName &&\n        options.activeInsight.insightSetKey === options.insightSetKey;\n    return Boolean(active);\n}\n// TODO(crbug.com/371615739): BaseInsight, SidebarInsight should be combined.\n// This is an abstract base class so the component naming rules do not apply.\nexport class BaseInsight extends HTMLElement {\n    // So we can use the TypeScript BaseInsight class without getting warnings\n    // about litTagName. Every child should overrwrite this.\n    static litTagName = LitHtml.literal ``;\n    shadow = this.attachShadow({ mode: 'open' });\n    data = {\n        insights: null,\n        parsedTrace: null,\n        insightSetKey: null,\n        activeInsight: null,\n        activeCategory: Category.ALL,\n    };\n    // eslint-disable-next-line rulesdir/no_bound_component_methods\n    #boundRender = this.#baseRender.bind(this);\n    sharedTableState = {\n        selectedRowEl: null,\n        selectionIsSticky: false,\n    };\n    #initialOverlays = null;\n    #hasRegisteredRelatedEvents = false;\n    scheduleRender() {\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    connectedCallback() {\n        this.shadow.adoptedStyleSheets.push(sidebarInsightStyles);\n        this.setAttribute('jslog', `${VisualLogging.section(`timeline.insights.${this.internalName}`)}`);\n        // Used for unit test purposes when querying the DOM.\n        this.dataset.insightName = this.internalName;\n        // TODO(crbug.com/371615739): this should be moved to model/trace/insights\n        if (!this.#hasRegisteredRelatedEvents) {\n            this.#hasRegisteredRelatedEvents = true;\n            const events = this.getRelatedEvents();\n            if (events.length) {\n                this.dispatchEvent(new SidebarInsight.InsightProvideRelatedEvents(this.userVisibleTitle, events, this.#dispatchInsightActivatedEvent.bind(this)));\n            }\n        }\n    }\n    set insights(insights) {\n        this.data.insights = insights;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    set parsedTrace(parsedTrace) {\n        this.data.parsedTrace = parsedTrace;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    set insightSetKey(insightSetKey) {\n        this.data.insightSetKey = insightSetKey;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    set activeInsight(activeInsight) {\n        this.data.activeInsight = activeInsight;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    set activeCategory(activeCategory) {\n        this.data.activeCategory = activeCategory;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    onSidebarClick() {\n        if (this.isActive()) {\n            this.dispatchEvent(new SidebarInsight.InsightDeactivated());\n            return;\n        }\n        this.#dispatchInsightActivatedEvent();\n    }\n    #dispatchInsightActivatedEvent() {\n        if (!this.data.insightSetKey) {\n            // Shouldn't happen, but needed to satisfy TS.\n            return;\n        }\n        this.sharedTableState.selectedRowEl?.classList.remove('selected');\n        this.sharedTableState.selectedRowEl = null;\n        this.sharedTableState.selectionIsSticky = false;\n        this.dispatchEvent(new SidebarInsight.InsightActivated(this.internalName, this.data.insightSetKey, this.getInitialOverlays()));\n    }\n    /**\n     * Replaces the initial insight overlays with the ones provided.\n     *\n     * If `overlays` is null, reverts back to the initial overlays.\n     *\n     * This allows insights to provide an initial set of overlays,\n     * and later temporarily replace all of those insights with a different set.\n     * This enables the hover/click table interactions.\n     */\n    toggleTemporaryOverlays(overlays, options) {\n        if (!this.isActive()) {\n            return;\n        }\n        this.dispatchEvent(new SidebarInsight.InsightProvideOverlays(overlays ?? this.getInitialOverlays(), options));\n    }\n    getInitialOverlays() {\n        if (this.#initialOverlays) {\n            return this.#initialOverlays;\n        }\n        this.#initialOverlays = this.createOverlays();\n        return this.#initialOverlays;\n    }\n    // Should be overrided by subclasses.\n    getRelatedEvents() {\n        return [];\n    }\n    #baseRender() {\n        this.render();\n        if (this.isActive()) {\n            requestAnimationFrame(() => requestAnimationFrame(() => this.scrollIntoViewIfNeeded()));\n        }\n    }\n    isActive() {\n        return insightIsActive({\n            activeInsight: this.data.activeInsight,\n            insightName: this.internalName,\n            insightSetKey: this.data.insightSetKey,\n        });\n    }\n    getInsightSetUrl() {\n        const url = this.data.insights?.get(this.data.insightSetKey ?? '')?.url;\n        Platform.TypeScriptUtilities.assertNotNullOrUndefined(url, 'Expected url for insight set');\n        return new URL(url);\n    }\n}\n/**\n * Returns a rendered MarkdownView component.\n *\n * This should not be used for markdown that is not guaranteed to be valid.\n */\nexport function md(markdown) {\n    const tokens = Marked.Marked.lexer(markdown);\n    return html `<devtools-markdown-view\n    .data=${{ tokens }}>\n  </devtools-markdown-view>`;\n}\n//# sourceMappingURL=Helpers.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport { EventReferenceClick } from './EventRef.js';\nimport { BaseInsight, shouldRenderForCategory } from './Helpers.js';\nimport { Category } from './types.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /** Title of an insight that provides details about why elements shift/move on the page. The causes for these shifts are referred to as culprits (\"reasons\"). */\n    title: 'Layout shift culprits',\n    /**\n     * @description Description of a DevTools insight that identifies the reasons that elements shift on the page.\n     * This is displayed after a user expands the section to see more. No character length limits.\n     */\n    description: 'Layout shifts occur when elements move absent any user interaction. [Investigate the causes of layout shifts](https://web.dev/articles/optimize-cls), such as elements being added, removed, or their fonts changing as the page loads.',\n    /**\n     *@description Text indicating the worst layout shift cluster.\n     */\n    worstLayoutShiftCluster: 'Worst layout shift cluster',\n    /**\n     * @description Text indicating the worst layout shift cluster.\n     */\n    worstCluster: 'Worst cluster',\n    /**\n     * @description Text indicating a layout shift cluster and its start time.\n     * @example {32 ms} PH1\n     */\n    layoutShiftCluster: 'Layout shift cluster @ {PH1}',\n    /**\n     *@description Text indicating the biggest reasons for the layout shifts.\n     */\n    topCulprits: 'Top layout shift culprits',\n    /**\n     * @description Text for a culprit type of Injected iframe.\n     */\n    injectedIframe: 'Injected iframe',\n    /**\n     * @description Text for a culprit type of Font request.\n     */\n    fontRequest: 'Font request',\n    /**\n     * @description Text for a culprit type of Animation.\n     */\n    animation: 'Animation',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/CLSCulprits.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class CLSCulprits extends BaseInsight {\n    static litTagName = LitHtml.literal `devtools-performance-cls-culprits`;\n    insightCategory = Category.CLS;\n    internalName = 'cls-culprits';\n    userVisibleTitle = i18nString(UIStrings.title);\n    description = i18nString(UIStrings.description);\n    createOverlays() {\n        const insight = Trace.Insights.Common.getInsight('CumulativeLayoutShift', this.data.insights, this.data.insightSetKey);\n        const clustersByScore = insight?.clusters.toSorted((a, b) => b.clusterCumulativeScore - a.clusterCumulativeScore) ?? [];\n        const worstCluster = clustersByScore[0];\n        if (!worstCluster) {\n            return [];\n        }\n        const range = Trace.Types.Timing.MicroSeconds(worstCluster.dur ?? 0);\n        const max = Trace.Types.Timing.MicroSeconds(worstCluster.ts + range);\n        const label = html `<div>${i18nString(UIStrings.worstLayoutShiftCluster)}</div>`;\n        return [{\n                type: 'TIMESPAN_BREAKDOWN',\n                sections: [\n                    { bounds: { min: worstCluster.ts, range, max }, label, showDuration: false },\n                ],\n                // This allows for the overlay to sit over the layout shift.\n                entry: worstCluster.events[0],\n                renderLocation: 'ABOVE_EVENT',\n            }];\n    }\n    /**\n     * getTopCulprits gets the top 3 shift root causes based on worst cluster.\n     */\n    getTopCulprits(cluster, culpritsByShift) {\n        const MAX_TOP_CULPRITS = 3;\n        const causes = [];\n        if (causes.length === MAX_TOP_CULPRITS) {\n            return causes;\n        }\n        const shifts = cluster.events;\n        for (const shift of shifts) {\n            if (causes.length === MAX_TOP_CULPRITS) {\n                break;\n            }\n            const culprits = culpritsByShift.get(shift);\n            if (!culprits) {\n                continue;\n            }\n            const fontReq = culprits.fontRequests;\n            const iframes = culprits.iframeIds;\n            const animations = culprits.nonCompositedAnimations;\n            for (let i = 0; i < fontReq.length && causes.length < MAX_TOP_CULPRITS; i++) {\n                causes.push(i18nString(UIStrings.fontRequest));\n            }\n            for (let i = 0; i < iframes.length && causes.length < MAX_TOP_CULPRITS; i++) {\n                causes.push(i18nString(UIStrings.injectedIframe));\n            }\n            for (let i = 0; i < animations.length && causes.length < MAX_TOP_CULPRITS; i++) {\n                causes.push(i18nString(UIStrings.animation));\n            }\n        }\n        return causes.slice(0, MAX_TOP_CULPRITS);\n    }\n    #clickEvent(event) {\n        this.dispatchEvent(new EventReferenceClick(event));\n    }\n    #render(culprits, worstCluster) {\n        const ts = Trace.Types.Timing.MicroSeconds(worstCluster.ts - (this.data.parsedTrace?.Meta.traceBounds.min ?? 0));\n        const clusterTs = i18n.TimeUtilities.formatMicroSecondsTime(ts);\n        // TODO(crbug.com/369102516): use Table for hover/click ux.\n        // clang-format off\n        return html `\n        <div class=\"insights\">\n            <devtools-performance-sidebar-insight .data=${{\n            title: this.userVisibleTitle,\n            description: this.description,\n            internalName: this.internalName,\n            expanded: this.isActive(),\n        }}\n            @insighttoggleclick=${this.onSidebarClick}>\n                <div slot=\"insight-content\" class=\"insight-section\">\n                  <span class=\"worst-cluster\">${i18nString(UIStrings.worstCluster)}: <button type=\"button\" class=\"timeline-link\" @click=${() => this.#clickEvent(worstCluster)}>${i18nString(UIStrings.layoutShiftCluster, { PH1: clusterTs })}</button></span>\n                    <p>${i18nString(UIStrings.topCulprits)}:</p>\n                        ${culprits.map(culprit => {\n            return html `\n                            <li>${culprit}</li>\n                          `;\n        })}\n                </div>\n            </devtools-performance-sidebar-insight>\n        </div>`;\n        // clang-format on\n    }\n    getRelatedEvents() {\n        const insight = Trace.Insights.Common.getInsight('CumulativeLayoutShift', this.data.insights, this.data.insightSetKey);\n        return insight?.relatedEvents ?? [];\n    }\n    render() {\n        const insight = Trace.Insights.Common.getInsight('CumulativeLayoutShift', this.data.insights, this.data.insightSetKey);\n        if (!insight) {\n            return;\n        }\n        const culpritsByShift = insight.shifts;\n        const clusters = insight.clusters ?? [];\n        if (!clusters.length || !insight.worstCluster) {\n            return;\n        }\n        const causes = this.getTopCulprits(insight.worstCluster, culpritsByShift);\n        const hasCulprits = causes.length > 0;\n        const matchesCategory = shouldRenderForCategory({\n            activeCategory: this.data.activeCategory,\n            insightCategory: this.insightCategory,\n        });\n        const output = hasCulprits && matchesCategory ? this.#render(causes, insight.worstCluster) : LitHtml.nothing;\n        LitHtml.render(output, this.shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-cls-culprits', CLSCulprits);\n//# sourceMappingURL=CLSCulprits.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../../ui/components/icon_button/icon_button.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport { BaseInsight, shouldRenderForCategory } from './Helpers.js';\nimport { Category } from './types.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description Title of an insight that provides a breakdown for how long it took to download the main document.\n     */\n    title: 'Document request latency',\n    /**\n     *@description Description of an insight that provides a breakdown for how long it took to download the main document.\n     */\n    description: 'Your first network request is the most important.  Reduce its latency by avoiding redirects, ensuring a fast server response, and enabling text compression.',\n    /**\n     * @description Text to tell the user that the document request does not have redirects.\n     */\n    passingRedirects: 'Avoids redirects',\n    /**\n     * @description Text to tell the user that the document request had redirects.\n     */\n    failedRedirects: 'Had redirects',\n    /**\n     * @description Text to tell the user that the time starting the document request to when the server started responding is acceptable.\n     */\n    passingServerResponseTime: 'Server responds quickly',\n    /**\n     * @description Text to tell the user that the time starting the document request to when the server started responding is not acceptable.\n     */\n    failedServerResponseTime: 'Server responded slowly',\n    /**\n     * @description Text to tell the user that text compression (like gzip) was applied.\n     */\n    passingTextCompression: 'Applies text compression',\n    /**\n     * @description Text to tell the user that text compression (like gzip) was not applied.\n     */\n    failedTextCompression: 'No compression applied',\n    /**\n     * @description Text for a label describing a network request event as having redirects.\n     */\n    redirectsLabel: 'Redirects',\n    /**\n     * @description Text for a label describing a network request event as taking too long to start delivery by the server.\n     */\n    serverResponseTimeLabel: 'Server response time',\n    /**\n     * @description Text for a label describing a network request event as taking longer to download because it wasn't compressed.\n     */\n    uncompressedDownload: 'Uncompressed download',\n    /**\n     *@description Text for a screen-reader label to tell the user that the icon represents a successful insight check\n     *@example {Server response time} PH1\n     */\n    successAriaLabel: 'Insight check passed: {PH1}',\n    /**\n     *@description Text for a screen-reader label to tell the user that the icon represents an unsuccessful insight check\n     *@example {Server response time} PH1\n     */\n    failedAriaLabel: 'Insight check failed: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/DocumentLatency.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class DocumentLatency extends BaseInsight {\n    static litTagName = LitHtml.literal `devtools-performance-document-latency`;\n    insightCategory = Category.ALL;\n    internalName = 'document-latency';\n    userVisibleTitle = i18nString(UIStrings.title);\n    description = i18nString(UIStrings.description);\n    #check(didPass, good, bad) {\n        const icon = didPass ? 'check-circle' : 'clear';\n        const ariaLabel = didPass ? i18nString(UIStrings.successAriaLabel, { PH1: good }) :\n            i18nString(UIStrings.failedAriaLabel, { PH1: bad });\n        return html `\n      <devtools-icon\n        aria-label=${ariaLabel}\n        name=${icon}\n        class=${didPass ? 'metric-value-good' : 'metric-value-bad'}\n      ></devtools-icon>\n      <span>${didPass ? good : bad}</span>\n    `;\n    }\n    createOverlays() {\n        const insight = Trace.Insights.Common.getInsight('DocumentLatency', this.data.insights, this.data.insightSetKey);\n        if (!insight?.data?.documentRequest) {\n            return [];\n        }\n        const overlays = [];\n        const event = insight.data.documentRequest;\n        const redirectDurationMicro = Trace.Helpers.Timing.millisecondsToMicroseconds(insight.data.redirectDuration);\n        const sections = [];\n        if (insight.data.redirectDuration) {\n            const bounds = Trace.Helpers.Timing.traceWindowFromMicroSeconds(event.ts, (event.ts + redirectDurationMicro));\n            sections.push({ bounds, label: i18nString(UIStrings.redirectsLabel), showDuration: true });\n            overlays.push({ type: 'CANDY_STRIPED_TIME_RANGE', bounds, entry: event });\n        }\n        if (insight.data.serverResponseTooSlow) {\n            const serverResponseTimeMicro = Trace.Helpers.Timing.millisecondsToMicroseconds(insight.data.serverResponseTime);\n            // NOTE: NetworkRequestHandlers never makes a synthetic network request event if `timing` is missing.\n            const sendEnd = event.args.data.timing?.sendEnd ?? Trace.Types.Timing.MilliSeconds(0);\n            const sendEndMicro = Trace.Helpers.Timing.millisecondsToMicroseconds(sendEnd);\n            const bounds = Trace.Helpers.Timing.traceWindowFromMicroSeconds(sendEndMicro, (sendEndMicro + serverResponseTimeMicro));\n            sections.push({ bounds, label: i18nString(UIStrings.serverResponseTimeLabel), showDuration: true });\n        }\n        if (insight.data.uncompressedResponseBytes) {\n            const bounds = Trace.Helpers.Timing.traceWindowFromMicroSeconds(event.args.data.syntheticData.downloadStart, (event.args.data.syntheticData.downloadStart + event.args.data.syntheticData.download));\n            sections.push({ bounds, label: i18nString(UIStrings.uncompressedDownload), showDuration: true });\n            overlays.push({ type: 'CANDY_STRIPED_TIME_RANGE', bounds, entry: event });\n        }\n        if (sections.length) {\n            overlays.push({\n                type: 'TIMESPAN_BREAKDOWN',\n                sections,\n                entry: insight.data.documentRequest,\n                // Always render below because the document request is guaranteed to be\n                // the first request in the network track.\n                renderLocation: 'BELOW_EVENT',\n            });\n        }\n        overlays.push({\n            type: 'ENTRY_SELECTED',\n            entry: insight.data.documentRequest,\n        });\n        return overlays;\n    }\n    #renderInsight(insight) {\n        if (!insight.data) {\n            return LitHtml.nothing;\n        }\n        // clang-format off\n        return html `\n    <div class=\"insights\">\n      <devtools-performance-sidebar-insight .data=${{\n            title: this.userVisibleTitle,\n            description: this.description,\n            expanded: this.isActive(),\n            internalName: this.internalName,\n            estimatedSavingsTime: insight.metricSavings?.FCP,\n            estimatedSavingsBytes: insight.data.uncompressedResponseBytes,\n        }}\n        @insighttoggleclick=${this.onSidebarClick}\n      >\n        <div slot=\"insight-content\" class=\"insight-section\">\n          <ul class=\"insight-results insight-icon-results\">\n            <li class=\"insight-entry\">\n              ${this.#check(insight.data.redirectDuration === 0, i18nString(UIStrings.passingRedirects), i18nString(UIStrings.failedRedirects))}\n            </li>\n            <li class=\"insight-entry\">\n              ${this.#check(!insight.data.serverResponseTooSlow, i18nString(UIStrings.passingServerResponseTime), i18nString(UIStrings.failedServerResponseTime))}\n            </li>\n            <li class=\"insight-entry\">\n              ${this.#check(insight.data.uncompressedResponseBytes === 0, i18nString(UIStrings.passingTextCompression), i18nString(UIStrings.failedTextCompression))}\n            </li>\n          </ul>\n        </div>\n      </devtools-performance-sidebar-insight>\n    </div>`;\n        // clang-format on\n    }\n    getRelatedEvents() {\n        const insight = Trace.Insights.Common.getInsight('DocumentLatency', this.data.insights, this.data.insightSetKey);\n        return insight?.relatedEvents ?? [];\n    }\n    render() {\n        const insight = Trace.Insights.Common.getInsight('DocumentLatency', this.data.insights, this.data.insightSetKey);\n        if (insight?.data === undefined) {\n            return;\n        }\n        const matchesCategory = shouldRenderForCategory({\n            activeCategory: this.data.activeCategory,\n            insightCategory: this.insightCategory,\n        });\n        const hasFailure = insight?.data?.redirectDuration > 0 || insight?.data?.serverResponseTooSlow ||\n            insight.data.uncompressedResponseBytes > 0;\n        const output = (matchesCategory && hasFailure) ? this.#renderInsight(insight) : LitHtml.nothing;\n        LitHtml.render(output, this.shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-document-latency', DocumentLatency);\n//# sourceMappingURL=DocumentLatency.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\ntable {\n  width: 100%;\n  padding: 5px 0;\n  border-collapse: collapse;\n}\n\nthead {\n  white-space: nowrap;\n}\n\ntable tr > * {\n  text-align: right;\n}\n\ntable tr > *:first-child {\n  text-align: left;\n}\n\ntable.interactive tbody tr {\n  cursor: pointer;\n}\n\ntable.interactive tbody tr:hover,\ntable.interactive tbody tr.selected {\n  background-color: var(--app-color-performance-sidebar-table-row-hover);\n}\n\ntable thead th {\n  font: var(--sys-typescale-body4-medium);\n}\n\ntable tbody th {\n  font-weight: normal;\n}\n\ntable th[scope=\"row\"] {\n  padding: 3px 0;\n  word-break: break-word;\n}\n\n/*# sourceURL=table.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as ComponentHelpers from '../../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport tableStyles from './table.css.js';\nconst { html } = LitHtml;\nexport class Table extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #boundRender = this.#render.bind(this);\n    #insight;\n    #state;\n    #headers;\n    #rows;\n    #interactive = false;\n    #currentHoverIndex = null;\n    set data(data) {\n        this.#insight = data.insight;\n        this.#state = data.insight.sharedTableState;\n        this.#headers = data.headers;\n        this.#rows = data.rows;\n        // If this table isn't interactive, don't attach mouse listeners or use CSS :hover.\n        this.#interactive = this.#rows.some(row => row.overlays);\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets.push(tableStyles);\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    #onHoverRow(e) {\n        if (!(e.target instanceof HTMLElement)) {\n            return;\n        }\n        const rowEl = e.target.closest('tr');\n        if (!rowEl || !rowEl.parentElement) {\n            return;\n        }\n        const index = [...rowEl.parentElement.children].indexOf(rowEl);\n        if (index === -1 || index === this.#currentHoverIndex) {\n            return;\n        }\n        this.#currentHoverIndex = index;\n        // Temporarily selects the row, but only if there is not already a sticky selection.\n        this.#onSelectedRowChanged(rowEl, index, { isHover: true });\n    }\n    #onClickRow(e) {\n        if (!(e.target instanceof HTMLElement)) {\n            return;\n        }\n        const rowEl = e.target.closest('tr');\n        if (!rowEl || !rowEl.parentElement) {\n            return;\n        }\n        const index = [...rowEl.parentElement.children].indexOf(rowEl);\n        if (index === -1) {\n            return;\n        }\n        // Select the row and make it sticky.\n        this.#onSelectedRowChanged(rowEl, index, { sticky: true });\n    }\n    #onMouseLeave() {\n        this.#currentHoverIndex = null;\n        // Unselect the row, unless it's sticky.\n        this.#onSelectedRowChanged(null, null);\n    }\n    #onSelectedRowChanged(rowEl, rowIndex, opts = {}) {\n        if (!this.#rows || !this.#state || !this.#insight) {\n            return;\n        }\n        if (this.#state.selectionIsSticky && !opts.sticky) {\n            return;\n        }\n        // Unselect a sticky-selection when clicking it for a second time.\n        if (this.#state.selectionIsSticky && rowEl === this.#state.selectedRowEl) {\n            rowEl = null;\n            opts.sticky = false;\n        }\n        if (rowEl && rowIndex !== null) {\n            const overlays = this.#rows[rowIndex].overlays;\n            if (overlays) {\n                this.#insight.toggleTemporaryOverlays(overlays, { updateTraceWindow: !opts.isHover });\n            }\n        }\n        else {\n            this.#insight.toggleTemporaryOverlays(null, { updateTraceWindow: false });\n        }\n        this.#state.selectedRowEl?.classList.remove('selected');\n        rowEl?.classList.add('selected');\n        this.#state.selectedRowEl = rowEl;\n        this.#state.selectionIsSticky = opts.sticky ?? false;\n    }\n    async #render() {\n        if (!this.#headers || !this.#rows) {\n            return;\n        }\n        LitHtml.render(html `<table\n          class=${LitHtml.Directives.classMap({\n            interactive: this.#interactive,\n        })}\n          @mouseleave=${this.#interactive ? this.#onMouseLeave : null}>\n        <thead>\n          <tr>\n          ${this.#headers.map(h => html `<th scope=\"col\">${h}</th>`)}\n          </tr>\n        </thead>\n        <tbody\n          @mouseover=${this.#interactive ? this.#onHoverRow : null}\n          @click=${this.#interactive ? this.#onClickRow : null}\n        >\n          ${this.#rows.map(row => {\n            const rowsEls = row.values.map((value, i) => i === 0 ? html `<th scope=\"row\">${value}</th>` : html `<td>${value}</td>`);\n            return html `<tr>${rowsEls}</tr>`;\n        })}\n        </tbody>\n      </table>`, this.#shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-table', Table);\n//# sourceMappingURL=Table.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport './Table.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport { eventRef } from './EventRef.js';\nimport { BaseInsight, shouldRenderForCategory } from './Helpers.js';\nimport { Category } from './types.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /** Title of an insight that provides details about the fonts used on the page, and the value of their `font-display` properties. */\n    title: 'Font display',\n    /**\n     * @description Text to tell the user about the font-display CSS feature to help improve a the UX of a page.\n     */\n    description: 'Consider setting [`font-display`](https://developer.chrome.com/blog/font-display) to `swap` or `optional` to ensure text is consistently visible. `swap` can be further optimized to mitigate layout shifts with [font metric overrides](https://developer.chrome.com/blog/font-fallbacks).',\n    /** Column for a font loaded by the page to render text. */\n    fontColumn: 'Font',\n    /** Column for the amount of time wasted. */\n    wastedTimeColumn: 'Wasted time',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/FontDisplay.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class FontDisplay extends BaseInsight {\n    static litTagName = LitHtml.literal `devtools-performance-font-display`;\n    insightCategory = Category.INP;\n    internalName = 'font-display';\n    userVisibleTitle = i18nString(UIStrings.title);\n    description = i18nString(UIStrings.description);\n    #overlayForRequest = new Map();\n    createOverlays() {\n        this.#overlayForRequest.clear();\n        const insight = Trace.Insights.Common.getInsight('FontDisplay', this.data.insights, this.data.insightSetKey);\n        if (!insight) {\n            return [];\n        }\n        for (const font of insight.fonts) {\n            this.#overlayForRequest.set(font.request, {\n                type: 'ENTRY_OUTLINE',\n                entry: font.request,\n                outlineReason: font.wastedTime ? 'ERROR' : 'INFO',\n            });\n        }\n        return [...this.#overlayForRequest.values()];\n    }\n    #render(insight) {\n        // clang-format off\n        return html `\n        <div class=\"insights\">\n            <devtools-performance-sidebar-insight .data=${{\n            title: this.userVisibleTitle,\n            description: this.description,\n            expanded: this.isActive(),\n            internalName: this.internalName,\n            estimatedSavingsTime: insight.metricSavings?.FCP,\n        }}\n            @insighttoggleclick=${this.onSidebarClick}>\n                <div slot=\"insight-content\" class=\"insight-section\">\n                  ${html `<devtools-performance-table\n                    .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.fontColumn), 'font-display', i18nString(UIStrings.wastedTimeColumn)],\n            rows: insight.fonts.map(font => ({\n                values: [\n                    // TODO(crbug.com/369422196): the font name would be nicer here.\n                    eventRef(font.request),\n                    font.display,\n                    i18n.TimeUtilities.millisToString(font.wastedTime),\n                ],\n                overlays: [this.#overlayForRequest.get(font.request)],\n            })),\n        }}>\n                  </devtools-performance-table>`}\n                </div>\n            </devtools-performance-sidebar-insight>\n        </div>`;\n        // clang-format on\n    }\n    getRelatedEvents() {\n        const insight = Trace.Insights.Common.getInsight('FontDisplay', this.data.insights, this.data.insightSetKey);\n        return insight?.relatedEvents ?? [];\n    }\n    render() {\n        const insight = Trace.Insights.Common.getInsight('FontDisplay', this.data.insights, this.data.insightSetKey);\n        const shouldShow = insight && insight.fonts.find(font => font.wastedTime);\n        const matchesCategory = shouldRenderForCategory({\n            activeCategory: this.data.activeCategory,\n            insightCategory: this.insightCategory,\n        });\n        const output = shouldShow && matchesCategory ? this.#render(insight) : LitHtml.nothing;\n        LitHtml.render(output, this.shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-font-display', FontDisplay);\n//# sourceMappingURL=FontDisplay.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport './Table.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport { BaseInsight, shouldRenderForCategory } from './Helpers.js';\nimport { Category } from './types.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     * @description Text to tell the user about the longest user interaction.\n     */\n    description: 'Start investigating with the longest phase. [Delays can be minimized](https://web.dev/articles/optimize-inp#optimize_interactions). To reduce processing duration, [optimize the main-thread costs](https://web.dev/articles/optimize-long-tasks), often JS.',\n    /**\n     * @description Title for the performance insight \"INP by phase\", which shows a breakdown of INP by phases / sections.\n     */\n    title: 'INP by phase',\n    /**\n     *@description Label used for the phase/component/stage/section of a larger duration.\n     */\n    phase: 'Phase',\n    /**\n     *@description Label used for a time duration.\n     */\n    duration: 'Duration',\n    // TODO: these are repeated in InteractionBreakdown. Add a place for common strings?\n    /**\n     *@description Text shown next to the interaction event's input delay time in the detail view.\n     */\n    inputDelay: 'Input delay',\n    /**\n     *@description Text shown next to the interaction event's thread processing duration in the detail view.\n     */\n    processingDuration: 'Processing duration',\n    /**\n     *@description Text shown next to the interaction event's presentation delay time in the detail view.\n     */\n    presentationDelay: 'Presentation delay',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/InteractionToNextPaint.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class InteractionToNextPaint extends BaseInsight {\n    static litTagName = LitHtml.literal `devtools-performance-inp`;\n    insightCategory = Category.INP;\n    internalName = 'inp';\n    userVisibleTitle = i18nString(UIStrings.title);\n    description = i18nString(UIStrings.description);\n    createOverlays() {\n        const insight = Trace.Insights.Common.getInsight('InteractionToNextPaint', this.data.insights, this.data.insightSetKey);\n        if (!insight) {\n            return [];\n        }\n        const event = insight.longestInteractionEvent;\n        if (!event) {\n            return [];\n        }\n        return this.#createOverlaysForPhase(event);\n    }\n    // If `phase` is -1, then all phases are included. Otherwise it's just that phase index.\n    #createOverlaysForPhase(event, phase = -1) {\n        const p1 = Trace.Helpers.Timing.traceWindowFromMicroSeconds(event.ts, (event.ts + event.inputDelay));\n        const p2 = Trace.Helpers.Timing.traceWindowFromMicroSeconds(p1.max, (p1.max + event.mainThreadHandling));\n        const p3 = Trace.Helpers.Timing.traceWindowFromMicroSeconds(p2.max, (p2.max + event.presentationDelay));\n        let sections = [\n            { bounds: p1, label: i18nString(UIStrings.inputDelay), showDuration: true },\n            { bounds: p2, label: i18nString(UIStrings.processingDuration), showDuration: true },\n            { bounds: p3, label: i18nString(UIStrings.presentationDelay), showDuration: true },\n        ];\n        if (phase !== -1) {\n            sections = [sections[phase]];\n        }\n        return [\n            {\n                type: 'TIMESPAN_BREAKDOWN',\n                sections,\n                renderLocation: 'BELOW_EVENT',\n                entry: event,\n            },\n        ];\n    }\n    #render(event) {\n        const time = (us) => i18n.TimeUtilities.millisToString(Platform.Timing.microSecondsToMilliSeconds(us));\n        // clang-format off\n        return html `\n        <div class=\"insights\">\n            <devtools-performance-sidebar-insight .data=${{\n            title: this.userVisibleTitle,\n            description: this.description,\n            internalName: this.internalName,\n            expanded: this.isActive(),\n        }}\n            @insighttoggleclick=${this.onSidebarClick}>\n                <div slot=\"insight-content\" class=\"insight-section\">\n                  ${html `<devtools-performance-table\n                    .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.phase), i18nString(UIStrings.duration)],\n            rows: [\n                {\n                    values: [i18nString(UIStrings.inputDelay), time(event.inputDelay)],\n                    overlays: this.#createOverlaysForPhase(event, 0),\n                },\n                {\n                    values: [i18nString(UIStrings.processingDuration), time(event.mainThreadHandling)],\n                    overlays: this.#createOverlaysForPhase(event, 1),\n                },\n                {\n                    values: [i18nString(UIStrings.presentationDelay), time(event.presentationDelay)],\n                    overlays: this.#createOverlaysForPhase(event, 2),\n                },\n            ],\n        }}>\n                  </devtools-performance-table>`}\n                </div>\n            </devtools-performance-sidebar-insight>\n        </div>`;\n        // clang-format on\n    }\n    getRelatedEvents() {\n        const insight = Trace.Insights.Common.getInsight('InteractionToNextPaint', this.data.insights, this.data.insightSetKey);\n        return insight?.relatedEvents ?? [];\n    }\n    render() {\n        const insight = Trace.Insights.Common.getInsight('InteractionToNextPaint', this.data.insights, this.data.insightSetKey);\n        const event = insight?.longestInteractionEvent;\n        const matchesCategory = shouldRenderForCategory({\n            activeCategory: this.data.activeCategory,\n            insightCategory: this.insightCategory,\n        });\n        const output = event && matchesCategory ? this.#render(event) : LitHtml.nothing;\n        LitHtml.render(output, this.shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-inp', InteractionToNextPaint);\n//# sourceMappingURL=InteractionToNextPaint.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../../ui/components/icon_button/icon_button.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport { eventRef } from './EventRef.js';\nimport { BaseInsight, shouldRenderForCategory } from './Helpers.js';\nimport { Category } from './types.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description Title of an insight that provides details about the LCP metric, and the network requests necessary to load it. Details how the LCP request was discoverable - in other words, the path necessary to load it (ex: network requests, JavaScript)\n     */\n    title: 'LCP request discovery',\n    /**\n     *@description Description of an insight that provides details about the LCP metric, and the network requests necessary to load it.\n     */\n    description: 'Optimize LCP by making the LCP image [discoverable](https://web.dev/articles/optimize-lcp#1_eliminate_resource_load_delay) from the HTML immediately, and [avoiding lazy-loading](https://web.dev/articles/lcp-lazy-loading)',\n    /**\n     * @description Text to tell the user how long after the earliest discovery time their LCP element loaded.\n     * @example {401ms} PH1\n     */\n    lcpLoadDelay: 'LCP image loaded {PH1} after earliest start point.',\n    /**\n     * @description Text to tell the user that a fetchpriority property value of \"high\" is applied to the LCP request.\n     */\n    fetchPriorityApplied: 'fetchpriority=high applied',\n    /**\n     * @description Text to tell the user that the LCP request is discoverable in the initial document.\n     */\n    requestDiscoverable: 'Request is discoverable in initial document',\n    /**\n     * @description Text to tell the user that the LCP request does not have the lazy load property applied.\n     */\n    lazyLoadNotApplied: 'lazy load not applied',\n    /**\n     *@description Text for a screen-reader label to tell the user that the icon represents a successful insight check\n     *@example {Server response time} PH1\n     */\n    successAriaLabel: 'Insight check passed: {PH1}',\n    /**\n     *@description Text for a screen-reader label to tell the user that the icon represents an unsuccessful insight check\n     *@example {Server response time} PH1\n     */\n    failedAriaLabel: 'Insight check failed: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/LCPDiscovery.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nfunction getImageData(insights, insightSetKey) {\n    const insight = Trace.Insights.Common.getInsight('LargestContentfulPaint', insights, insightSetKey);\n    if (!insight) {\n        return null;\n    }\n    if (insight.lcpRequest === undefined) {\n        return null;\n    }\n    const shouldIncreasePriorityHint = insight.shouldIncreasePriorityHint;\n    const shouldPreloadImage = insight.shouldPreloadImage;\n    const shouldRemoveLazyLoading = insight.shouldRemoveLazyLoading;\n    const imageLCP = shouldIncreasePriorityHint !== undefined && shouldPreloadImage !== undefined &&\n        shouldRemoveLazyLoading !== undefined;\n    // Shouldn't render anything if lcp insight is null or lcp is text.\n    if (!imageLCP) {\n        return null;\n    }\n    const data = {\n        shouldIncreasePriorityHint,\n        shouldPreloadImage,\n        shouldRemoveLazyLoading,\n        request: insight.lcpRequest,\n        discoveryDelay: null,\n        estimatedSavings: insight.metricSavings?.LCP ?? null,\n    };\n    if (insight.earliestDiscoveryTimeTs && insight.lcpRequest) {\n        const discoveryDelay = insight.lcpRequest.ts - insight.earliestDiscoveryTimeTs;\n        data.discoveryDelay = Trace.Types.Timing.MicroSeconds(discoveryDelay);\n    }\n    return data;\n}\nexport class LCPDiscovery extends BaseInsight {\n    static litTagName = LitHtml.literal `devtools-performance-lcp-discovery`;\n    insightCategory = Category.LCP;\n    internalName = 'lcp-discovery';\n    userVisibleTitle = i18nString(UIStrings.title);\n    description = i18nString(UIStrings.description);\n    #adviceIcon(didFail, label) {\n        const icon = didFail ? 'clear' : 'check-circle';\n        const ariaLabel = didFail ? i18nString(UIStrings.failedAriaLabel, { PH1: label }) :\n            i18nString(UIStrings.successAriaLabel, { PH1: label });\n        return html `\n      <devtools-icon\n        aria-label=${ariaLabel}\n        name=${icon}\n        class=${didFail ? 'metric-value-bad' : 'metric-value-good'}\n      ></devtools-icon>\n    `;\n    }\n    #renderDiscoveryDelay(delay) {\n        const timeWrapper = document.createElement('span');\n        timeWrapper.classList.add('discovery-time-ms');\n        timeWrapper.innerText = i18n.TimeUtilities.formatMicroSecondsTime(delay);\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.lcpLoadDelay, { PH1: timeWrapper });\n    }\n    createOverlays() {\n        const imageResults = getImageData(this.data.insights, this.data.insightSetKey);\n        if (!imageResults || !imageResults.discoveryDelay) {\n            return [];\n        }\n        const delay = Trace.Helpers.Timing.traceWindowFromMicroSeconds(Trace.Types.Timing.MicroSeconds(imageResults.request.ts - imageResults.discoveryDelay), imageResults.request.ts);\n        const label = html `<div class=\"discovery-delay\"> ${this.#renderDiscoveryDelay(delay.range)}</div>`;\n        return [\n            {\n                type: 'ENTRY_OUTLINE',\n                entry: imageResults.request,\n                outlineReason: 'ERROR',\n            },\n            {\n                type: 'CANDY_STRIPED_TIME_RANGE',\n                bounds: delay,\n                entry: imageResults.request,\n            },\n            {\n                type: 'TIMESPAN_BREAKDOWN',\n                sections: [{\n                        bounds: delay,\n                        label,\n                        showDuration: false,\n                    }],\n                entry: imageResults.request,\n                renderLocation: 'ABOVE_EVENT',\n            },\n        ];\n    }\n    #handleBadImage(event) {\n        const img = event.target;\n        img.style.display = 'none';\n    }\n    #renderImage(imageData) {\n        // clang-format off\n        return html `\n      <div class=\"lcp-element\">\n        ${imageData.request.args.data.mimeType.includes('image') ?\n            html `\n        <img\n          class=\"element-img\"\n          src=${imageData.request.args.data.url}\n          @error=${this.#handleBadImage}\n           />` : LitHtml.nothing}\n        <span class=\"element-img-details\">\n          ${eventRef(imageData.request)}\n          <span class=\"element-img-details-size\">${Platform.NumberUtilities.bytesToString(imageData.request.args.data.decodedBodyLength ?? 0)}</span>\n        </span>\n      </div>`;\n        // clang-format on\n    }\n    #renderDiscovery(imageData) {\n        // clang-format off\n        return html `\n        <div class=\"insights\">\n          <devtools-performance-sidebar-insight .data=${{\n            title: this.userVisibleTitle,\n            description: this.description,\n            internalName: this.internalName,\n            expanded: this.isActive(),\n            estimatedSavingsTime: imageData.estimatedSavings,\n        }}\n          @insighttoggleclick=${this.onSidebarClick}>\n            <div slot=\"insight-content\" class=\"insight-section\">\n              <div class=\"insight-results\">\n                <ul class=\"insight-icon-results\">\n                  <li class=\"insight-entry\">\n                    ${this.#adviceIcon(imageData.shouldIncreasePriorityHint, i18nString(UIStrings.fetchPriorityApplied))}\n                    <span>${i18nString(UIStrings.fetchPriorityApplied)}</span>\n                  </li>\n                  <li class=\"insight-entry\">\n                    ${this.#adviceIcon(imageData.shouldPreloadImage, i18nString(UIStrings.requestDiscoverable))}\n                    <span>${i18nString(UIStrings.requestDiscoverable)}</span>\n                  </li>\n                  <li class=\"insight-entry\">\n                    ${this.#adviceIcon(imageData.shouldRemoveLazyLoading, i18nString(UIStrings.lazyLoadNotApplied))}\n                    <span>${i18nString(UIStrings.lazyLoadNotApplied)}</span>\n                  </li>\n                </ul>\n              </div>\n              ${this.#renderImage(imageData)}\n            </div>\n          </devtools-performance-sidebar-insight>\n      </div>`;\n        // clang-format on\n    }\n    getRelatedEvents() {\n        const insight = Trace.Insights.Common.getInsight('LargestContentfulPaint', this.data.insights, this.data.insightSetKey);\n        if (!insight?.lcpEvent || !insight?.lcpRequest) {\n            return [];\n        }\n        // TODO: add entire request initiator chain?\n        return [insight.lcpEvent, insight.lcpRequest];\n    }\n    render() {\n        const imageResults = getImageData(this.data.insights, this.data.insightSetKey);\n        const matchesCategory = shouldRenderForCategory({\n            activeCategory: this.data.activeCategory,\n            insightCategory: this.insightCategory,\n        });\n        const output = imageResults && matchesCategory ? this.#renderDiscovery(imageResults) : LitHtml.nothing;\n        LitHtml.render(output, this.shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-lcp-discovery', LCPDiscovery);\n//# sourceMappingURL=LCPDiscovery.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport './Table.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport { BaseInsight, shouldRenderForCategory } from './Helpers.js';\nimport { Category } from './types.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description Title of an insight that provides details about the LCP metric, broken down by phases / parts.\n     */\n    title: 'LCP by phase',\n    /**\n     * @description Description of a DevTools insight that presents a breakdown for the LCP metric by phases.\n     * This is displayed after a user expands the section to see more. No character length limits.\n     */\n    description: 'Each [phase has specific improvement strategies](https://web.dev/articles/optimize-lcp#lcp-breakdown). Ideally, most of the LCP time should be spent on loading the resources, not within delays.',\n    /**\n     *@description Time to first byte title for the Largest Contentful Paint's phases timespan breakdown.\n     */\n    timeToFirstByte: 'Time to first byte',\n    /**\n     *@description Resource load delay title for the Largest Contentful Paint phases timespan breakdown.\n     */\n    resourceLoadDelay: 'Resource load delay',\n    /**\n     *@description Resource load duration title for the Largest Contentful Paint phases timespan breakdown.\n     */\n    resourceLoadDuration: 'Resource load duration',\n    /**\n     *@description Element render delay title for the Largest Contentful Paint phases timespan breakdown.\n     */\n    elementRenderDelay: 'Element render delay',\n    /**\n     *@description Label used for the phase/component/stage/section of a larger duration.\n     */\n    phase: 'Phase',\n    /**\n     *@description Label used for the percentage a single phase/component/stage/section takes up of a larger duration.\n     */\n    percentLCP: '% of LCP',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/LCPPhases.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class LCPPhases extends BaseInsight {\n    static litTagName = LitHtml.literal `devtools-performance-lcp-by-phases`;\n    insightCategory = Category.LCP;\n    internalName = 'lcp-by-phase';\n    userVisibleTitle = i18nString(UIStrings.title);\n    description = i18nString(UIStrings.description);\n    #overlay = null;\n    #getPhaseData(insights, navigationId) {\n        if (!insights || !navigationId) {\n            return [];\n        }\n        const insightsByNavigation = insights.get(navigationId);\n        if (!insightsByNavigation) {\n            return [];\n        }\n        const lcpInsight = insightsByNavigation.data.LargestContentfulPaint;\n        if (lcpInsight instanceof Error) {\n            return [];\n        }\n        const timing = lcpInsight.lcpMs;\n        const phases = lcpInsight.phases;\n        if (!timing || !phases) {\n            return [];\n        }\n        const { ttfb, loadDelay, loadTime, renderDelay } = phases;\n        if (loadDelay && loadTime) {\n            const phaseData = [\n                { phase: i18nString(UIStrings.timeToFirstByte), timing: ttfb, percent: `${(100 * ttfb / timing).toFixed(0)}%` },\n                {\n                    phase: i18nString(UIStrings.resourceLoadDelay),\n                    timing: loadDelay,\n                    percent: `${(100 * loadDelay / timing).toFixed(0)}%`,\n                },\n                {\n                    phase: i18nString(UIStrings.resourceLoadDuration),\n                    timing: loadTime,\n                    percent: `${(100 * loadTime / timing).toFixed(0)}%`,\n                },\n                {\n                    phase: i18nString(UIStrings.elementRenderDelay),\n                    timing: renderDelay,\n                    percent: `${(100 * renderDelay / timing).toFixed(0)}%`,\n                },\n            ];\n            return phaseData;\n        }\n        // If the lcp is text, we only have ttfb and render delay.\n        const phaseData = [\n            { phase: i18nString(UIStrings.timeToFirstByte), timing: ttfb, percent: `${(100 * ttfb / timing).toFixed(0)}%` },\n            {\n                phase: i18nString(UIStrings.elementRenderDelay),\n                timing: renderDelay,\n                percent: `${(100 * renderDelay / timing).toFixed(0)}%`,\n            },\n        ];\n        return phaseData;\n    }\n    createOverlays() {\n        this.#overlay = null;\n        if (!this.data.insights || !this.data.insightSetKey) {\n            return [];\n        }\n        const { insightSetKey: navigationId, insights } = this.data;\n        const insightsByNavigation = insights.get(navigationId);\n        if (!insightsByNavigation) {\n            return [];\n        }\n        const lcpInsight = insightsByNavigation.data.LargestContentfulPaint;\n        if (lcpInsight instanceof Error) {\n            return [];\n        }\n        const phases = lcpInsight.phases;\n        const lcpTs = lcpInsight.lcpTs;\n        if (!phases || !lcpTs) {\n            return [];\n        }\n        const lcpMicroseconds = Trace.Types.Timing.MicroSeconds(Trace.Helpers.Timing.millisecondsToMicroseconds(lcpTs));\n        const sections = [];\n        // For text LCP, we should only have ttfb and renderDelay sections.\n        if (!phases?.loadDelay && !phases?.loadTime) {\n            const renderBegin = Trace.Types.Timing.MicroSeconds(lcpMicroseconds - Trace.Helpers.Timing.millisecondsToMicroseconds(phases.renderDelay));\n            const renderDelay = Trace.Helpers.Timing.traceWindowFromMicroSeconds(renderBegin, lcpMicroseconds);\n            const mainReqStart = Trace.Types.Timing.MicroSeconds(renderBegin - Trace.Helpers.Timing.millisecondsToMicroseconds(phases.ttfb));\n            const ttfb = Trace.Helpers.Timing.traceWindowFromMicroSeconds(mainReqStart, renderBegin);\n            sections.push({ bounds: ttfb, label: i18nString(UIStrings.timeToFirstByte), showDuration: true }, { bounds: renderDelay, label: i18nString(UIStrings.elementRenderDelay), showDuration: true });\n        }\n        else if (phases?.loadDelay && phases?.loadTime) {\n            const renderBegin = Trace.Types.Timing.MicroSeconds(lcpMicroseconds - Trace.Helpers.Timing.millisecondsToMicroseconds(phases.renderDelay));\n            const renderDelay = Trace.Helpers.Timing.traceWindowFromMicroSeconds(renderBegin, lcpMicroseconds);\n            const loadBegin = Trace.Types.Timing.MicroSeconds(renderBegin - Trace.Helpers.Timing.millisecondsToMicroseconds(phases.loadTime));\n            const loadTime = Trace.Helpers.Timing.traceWindowFromMicroSeconds(loadBegin, renderBegin);\n            const loadDelayStart = Trace.Types.Timing.MicroSeconds(loadBegin - Trace.Helpers.Timing.millisecondsToMicroseconds(phases.loadDelay));\n            const loadDelay = Trace.Helpers.Timing.traceWindowFromMicroSeconds(loadDelayStart, loadBegin);\n            const mainReqStart = Trace.Types.Timing.MicroSeconds(loadDelayStart - Trace.Helpers.Timing.millisecondsToMicroseconds(phases.ttfb));\n            const ttfb = Trace.Helpers.Timing.traceWindowFromMicroSeconds(mainReqStart, loadDelayStart);\n            sections.push({ bounds: ttfb, label: i18nString(UIStrings.timeToFirstByte), showDuration: true }, { bounds: loadDelay, label: i18nString(UIStrings.resourceLoadDelay), showDuration: true }, { bounds: loadTime, label: i18nString(UIStrings.resourceLoadDuration), showDuration: true }, { bounds: renderDelay, label: i18nString(UIStrings.elementRenderDelay), showDuration: true });\n        }\n        this.#overlay = {\n            type: 'TIMESPAN_BREAKDOWN',\n            sections,\n        };\n        return [this.#overlay];\n    }\n    #renderLCPPhases(phaseData) {\n        const rows = phaseData.map(({ phase, percent }) => {\n            const section = this.#overlay?.sections.find(section => phase === section.label);\n            return {\n                values: [phase, percent],\n                overlays: section && [{\n                        type: 'TIMESPAN_BREAKDOWN',\n                        sections: [section],\n                    }],\n            };\n        });\n        // clang-format off\n        return html `\n    <div class=\"insights\">\n      <devtools-performance-sidebar-insight .data=${{\n            title: this.userVisibleTitle,\n            description: this.description,\n            internalName: this.internalName,\n            expanded: this.isActive(),\n        }}\n        @insighttoggleclick=${this.onSidebarClick}\n      >\n        <div slot=\"insight-content\" class=\"insight-section\">\n          ${html `<devtools-performance-table\n            .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.phase), i18nString(UIStrings.percentLCP)],\n            rows,\n        }}>\n          </devtools-performance-table>`}\n        </div>\n      </devtools-performance-sidebar-insight>\n    </div>`;\n        // clang-format on\n    }\n    #hasDataToRender(phaseData) {\n        return phaseData ? phaseData.length > 0 : false;\n    }\n    getRelatedEvents() {\n        const insight = Trace.Insights.Common.getInsight('LargestContentfulPaint', this.data.insights, this.data.insightSetKey);\n        if (!insight?.lcpEvent) {\n            return [];\n        }\n        const relatedEvents = [insight.lcpEvent];\n        if (insight.lcpRequest) {\n            relatedEvents.push(insight.lcpRequest);\n        }\n        return relatedEvents;\n    }\n    render() {\n        const phaseData = this.#getPhaseData(this.data.insights, this.data.insightSetKey);\n        const matchesCategory = shouldRenderForCategory({\n            activeCategory: this.data.activeCategory,\n            insightCategory: this.insightCategory,\n        });\n        const shouldRender = matchesCategory && this.#hasDataToRender(phaseData);\n        const output = shouldRender ? this.#renderLCPPhases(phaseData) : LitHtml.nothing;\n        LitHtml.render(output, this.shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-lcp-by-phases', LCPPhases);\n//# sourceMappingURL=LCPPhases.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// TODO: move to ui/components/node_link?\nimport * as Common from '../../../../core/common/common.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as ComponentHelpers from '../../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nconst { html } = LitHtml;\nexport class NodeLink extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #boundRender = this.#render.bind(this);\n    #backendNodeId;\n    #options;\n    set data(data) {\n        this.#backendNodeId = data.backendNodeId;\n        this.#options = data.options;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    async #linkify() {\n        // TODO: consider using `Trace.Extras.FetchNodes.extractRelatedDOMNodesFromEvent`, which\n        // requires parsedTrace.\n        if (this.#backendNodeId === undefined) {\n            return;\n        }\n        const mainTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n        if (!mainTarget) {\n            return;\n        }\n        const domModel = mainTarget.model(SDK.DOMModel.DOMModel);\n        if (!domModel) {\n            return;\n        }\n        const backendNodeIds = new Set([this.#backendNodeId]);\n        const domNodesMap = await domModel.pushNodesByBackendIdsToFrontend(backendNodeIds);\n        if (!domNodesMap) {\n            return;\n        }\n        const node = domNodesMap.get(this.#backendNodeId);\n        if (!node) {\n            return;\n        }\n        // TODO: it'd be nice if we could specify what attributes to render,\n        // ex for the Viewport insight: <meta content=\"...\"> (instead of just <meta>)\n        return Common.Linkifier.Linkifier.linkify(node, this.#options);\n    }\n    async #render() {\n        const relatedNodeEl = await this.#linkify();\n        LitHtml.render(html `<div class='node-link'>\n        ${relatedNodeEl}\n      </div>`, this.#shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-node-link', NodeLink);\n//# sourceMappingURL=NodeLink.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport './Table.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport { eventRef } from './EventRef.js';\nimport { BaseInsight, shouldRenderForCategory } from './Helpers.js';\nimport { Category } from './types.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     * @description Title of an insight that provides the user with the list of network requests that blocked and therefore slowed down the page rendering and becoming visible to the user.\n     */\n    title: 'Render blocking requests',\n    /**\n     * @description Text to describe that there are requests blocking rendering, which may affect LCP.\n     */\n    description: 'Requests are blocking the page\\'s initial render, which may delay LCP. ' +\n        '[Deferring or inlining](https://web.dev/learn/performance/understanding-the-critical-path#render-blocking_resources/) ' +\n        'can move these network requests out of the critical path.',\n    /**\n     * @description Label to describe a network request (that happens to be render-blocking).\n     */\n    renderBlockingRequest: 'Request',\n    /**\n     *@description Label used for a time duration.\n     */\n    duration: 'Duration',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/RenderBlocking.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class RenderBlockingRequests extends BaseInsight {\n    static litTagName = LitHtml.literal `devtools-performance-render-blocking-requests`;\n    insightCategory = Category.LCP;\n    internalName = 'render-blocking-requests';\n    userVisibleTitle = i18nString(UIStrings.title);\n    description = i18nString(UIStrings.description);\n    createOverlays() {\n        const insight = Trace.Insights.Common.getInsight('RenderBlocking', this.data.insights, this.data.insightSetKey);\n        if (!insight) {\n            return [];\n        }\n        return insight.renderBlockingRequests.map(request => this.#createOverlayForRequest(request));\n    }\n    #createOverlayForRequest(request) {\n        return {\n            type: 'ENTRY_OUTLINE',\n            entry: request,\n            outlineReason: 'ERROR',\n        };\n    }\n    #renderRenderBlocking(insightResult) {\n        const estimatedSavings = insightResult.metricSavings?.FCP;\n        const MAX_REQUESTS = 3;\n        const topRequests = insightResult.renderBlockingRequests.slice(0, MAX_REQUESTS);\n        // clang-format off\n        return html `\n        <div class=\"insights\">\n          <devtools-performance-sidebar-insight .data=${{\n            title: this.userVisibleTitle,\n            description: this.description,\n            internalName: this.internalName,\n            expanded: this.isActive(),\n            estimatedSavingsTime: estimatedSavings,\n        }}\n          @insighttoggleclick=${this.onSidebarClick} >\n            <div slot=\"insight-content\" class=\"insight-section\">\n              ${html `<devtools-performance-table\n                .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.renderBlockingRequest), i18nString(UIStrings.duration)],\n            rows: topRequests.map(request => ({\n                values: [\n                    eventRef(request),\n                    i18n.TimeUtilities.millisToString(Platform.Timing.microSecondsToMilliSeconds(request.dur)),\n                ],\n                overlays: [this.#createOverlayForRequest(request)],\n            })),\n        }}>\n              </devtools-performance-table>`}\n            </div>\n          </devtools-performance-sidebar-insight>\n      </div>`;\n        // clang-format on\n    }\n    getRelatedEvents() {\n        const insight = Trace.Insights.Common.getInsight('RenderBlocking', this.data.insights, this.data.insightSetKey);\n        return insight?.relatedEvents ?? [];\n    }\n    render() {\n        const insight = Trace.Insights.Common.getInsight('RenderBlocking', this.data.insights, this.data.insightSetKey);\n        const hasBlockingRequests = insight?.renderBlockingRequests && insight.renderBlockingRequests.length > 0;\n        const matchesCategory = shouldRenderForCategory({\n            activeCategory: this.data.activeCategory,\n            insightCategory: this.insightCategory,\n        });\n        const output = hasBlockingRequests && matchesCategory ? this.#renderRenderBlocking(insight) : LitHtml.nothing;\n        LitHtml.render(output, this.shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-render-blocking-requests', RenderBlockingRequests);\n//# sourceMappingURL=RenderBlocking.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.link:link,\n.link:visited {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n  outline-offset: 2px;\n}\n\n/*# sourceURL=linkifierImpl.css */\n`);\n\nexport default styles;\n","// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Bindings from '../../../models/bindings/bindings.js';\nexport function linkText(url, lineNumber) {\n    if (url) {\n        const displayName = Bindings.ResourceUtils.displayNameForURL(url);\n        let text = `${displayName}`;\n        if (typeof lineNumber !== 'undefined') {\n            text += `:${lineNumber + 1}`;\n        }\n        return text;\n    }\n    throw new Error('New linkifier component error: don\\'t know how to generate link text for given arguments');\n}\n//# sourceMappingURL=LinkifierUtils.js.map","// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as Coordinator from '../render_coordinator/render_coordinator.js';\nimport linkifierImplStyles from './linkifierImpl.css.js';\nimport * as LinkifierUtils from './LinkifierUtils.js';\nconst { html } = LitHtml;\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\nexport class LinkifierClick extends Event {\n    data;\n    static eventName = 'linkifieractivated';\n    constructor(data) {\n        super(LinkifierClick.eventName, {\n            bubbles: true,\n            composed: true,\n        });\n        this.data = data;\n        this.data = data;\n    }\n}\nexport class Linkifier extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #url = Platform.DevToolsPath.EmptyUrlString;\n    #lineNumber;\n    #columnNumber;\n    #linkText;\n    #title;\n    set data(data) {\n        this.#url = data.url;\n        this.#lineNumber = data.lineNumber;\n        this.#columnNumber = data.columnNumber;\n        this.#linkText = data.linkText;\n        this.#title = data.title;\n        if (!this.#url) {\n            throw new Error('Cannot construct a Linkifier without providing a valid string URL.');\n        }\n        void this.#render();\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [linkifierImplStyles];\n    }\n    #onLinkActivation(event) {\n        event.preventDefault();\n        const linkifierClickEvent = new LinkifierClick({\n            url: this.#url,\n            lineNumber: this.#lineNumber,\n            columnNumber: this.#columnNumber,\n        });\n        this.dispatchEvent(linkifierClickEvent);\n    }\n    async #render() {\n        const linkText = this.#linkText ?? LinkifierUtils.linkText(this.#url, this.#lineNumber);\n        // Disabled until https://crbug.com/1079231 is fixed.\n        await coordinator.write(() => {\n            // clang-format off\n            // eslint-disable-next-line rulesdir/ban_a_tags_in_lit_html\n            LitHtml.render(html `<a class=\"link\" href=${this.#url} @click=${this.#onLinkActivation} title=${LitHtml.Directives.ifDefined(this.#title)}><slot>${linkText}</slot></a>`, this.#shadow, { host: this });\n            // clang-format on\n        });\n    }\n}\ncustomElements.define('devtools-linkifier', Linkifier);\n//# sourceMappingURL=LinkifierImpl.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport './Table.js';\nimport '../../../../ui/components/linkifier/linkifier.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport { BaseInsight, shouldRenderForCategory } from './Helpers.js';\nimport { Category } from './types.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description Title of an insight that provides details about slow CSS selectors.\n     */\n    title: 'CSS Selector costs',\n    /**\n     * @description Text to describe how to improve the performance of CSS selectors.\n     */\n    description: 'If Recalculate Style costs remain high, selector optimization can reduce them. [Optimize the selectors](https://developer.chrome.com/docs/devtools/performance/selector-stats) with both high elapsed time and high slow-path %. Simpler selectors, fewer selectors, a smaller DOM, and a shallower DOM will all reduce matching costs.',\n    /**\n     *@description Column name for count of elements that the engine attempted to match against a style rule\n     */\n    matchAttempts: 'Match attempts',\n    /**\n     *@description Column name for count of elements that matched a style rule\n     */\n    matchCount: 'Match count',\n    /**\n     *@description Column name for elapsed time spent computing a style rule\n     */\n    elapsed: 'Elapsed time',\n    /**\n     *@description Column name for the selectors that took the longest amount of time/effort.\n     */\n    topSelectors: 'Top selectors',\n    /**\n     *@description Column name for a total sum.\n     */\n    total: 'Total',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/SlowCSSSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class SlowCSSSelector extends BaseInsight {\n    static litTagName = LitHtml.literal `devtools-performance-slow-css-selector`;\n    insightCategory = Category.ALL;\n    internalName = 'slow-css-selector';\n    userVisibleTitle = i18nString(UIStrings.title);\n    description = i18nString(UIStrings.description);\n    #slowCSSSelector = null;\n    #selectorLocations = new Map();\n    createOverlays() {\n        return [];\n    }\n    async toSourceFileLocation(cssModel, selector) {\n        if (!cssModel) {\n            return undefined;\n        }\n        const styleSheetHeader = cssModel.styleSheetHeaderForId(selector.style_sheet_id);\n        if (!styleSheetHeader || !styleSheetHeader.resourceURL()) {\n            return undefined;\n        }\n        // get the locations from cache if available\n        const key = JSON.stringify({ selectorText: selector.selector, styleSheetId: selector.style_sheet_id });\n        let ranges = this.#selectorLocations.get(key);\n        if (!ranges) {\n            const result = await cssModel.agent.invoke_getLocationForSelector({ selectorText: selector.selector, styleSheetId: selector.style_sheet_id });\n            if (result.getError() || !result.ranges) {\n                return undefined;\n            }\n            ranges = result.ranges;\n            this.#selectorLocations.set(key, ranges);\n        }\n        const locations = ranges.map((range, itemIndex) => {\n            return {\n                url: styleSheetHeader.resourceURL(),\n                lineNumber: range.startLine,\n                columnNumber: range.startColumn,\n                linkText: `[${itemIndex + 1}]`,\n                title: `${styleSheetHeader.id} line ${range.startLine + 1}:${range.startColumn + 1}`,\n            };\n        });\n        return locations;\n    }\n    async getSelectorLinks(cssModel, selector) {\n        if (!cssModel) {\n            return LitHtml.nothing;\n        }\n        if (!selector.style_sheet_id) {\n            return LitHtml.nothing;\n        }\n        const locations = await this.toSourceFileLocation(cssModel, selector);\n        if (!locations) {\n            return LitHtml.nothing;\n        }\n        const links = html `\n    ${locations.map((location, itemIndex) => {\n            const divider = itemIndex !== locations.length - 1 ? ', ' : '';\n            return html `<devtools-linkifier .data=${location}></devtools-linkifier>${divider}`;\n        })}`;\n        return links;\n    }\n    renderSlowCSSSelector() {\n        const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n        const cssModel = target?.model(SDK.CSSModel.CSSModel);\n        const time = (us) => i18n.TimeUtilities.millisToString(Platform.Timing.microSecondsToMilliSeconds(us));\n        // clang-format off\n        return this.#slowCSSSelector ? html `\n      <div class=\"insights\">\n        <devtools-performance-sidebar-insight .data=${{\n            title: this.userVisibleTitle,\n            description: this.description,\n            internalName: this.internalName,\n            expanded: this.isActive(),\n        }}\n          @insighttoggleclick=${this.onSidebarClick} >\n          <div slot=\"insight-content\">\n            <div class=\"insight-section\">\n              ${html `<devtools-performance-table\n                .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.total), ''],\n            rows: [\n                { values: [i18nString(UIStrings.elapsed), i18n.TimeUtilities.millisToString(this.#slowCSSSelector.totalElapsedMs)] },\n                { values: [i18nString(UIStrings.matchAttempts), this.#slowCSSSelector.totalMatchAttempts] },\n                { values: [i18nString(UIStrings.matchCount), this.#slowCSSSelector.totalMatchCount] },\n            ],\n        }}>\n              </devtools-performance-table>`}\n            </div>\n            <div class=\"insight-section\">\n              ${html `<devtools-performance-table\n                .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.topSelectors), i18nString(UIStrings.elapsed)],\n            rows: this.#slowCSSSelector.topElapsedMs.map(selector => {\n                return {\n                    values: [\n                        html `${selector.selector} ${LitHtml.Directives.until(this.getSelectorLinks(cssModel, selector))}`,\n                        time(Trace.Types.Timing.MicroSeconds(selector['elapsed (us)']))\n                    ],\n                };\n            }),\n        }}>\n              </devtools-performance-table>`}\n            </div>\n            <div class=\"insight-section\">\n              ${html `<devtools-performance-table\n                .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.topSelectors), i18nString(UIStrings.matchAttempts)],\n            rows: this.#slowCSSSelector.topMatchAttempts.map(selector => {\n                return {\n                    values: [\n                        html `${selector.selector} ${LitHtml.Directives.until(this.getSelectorLinks(cssModel, selector))}`,\n                        selector['match_attempts']\n                    ],\n                };\n            }),\n        }}>\n              </devtools-performance-table>`}\n            </div>\n          </div>\n        </devtools-performance-sidebar-insight>\n      </div>` : LitHtml.nothing;\n        // clang-format on\n    }\n    #hasDataToRender() {\n        this.#slowCSSSelector =\n            Trace.Insights.Common.getInsight('SlowCSSSelector', this.data.insights, this.data.insightSetKey);\n        return this.#slowCSSSelector !== null && this.#slowCSSSelector.topElapsedMs.length !== 0 &&\n            this.#slowCSSSelector.topMatchAttempts.length !== 0;\n    }\n    getRelatedEvents() {\n        const insight = Trace.Insights.Common.getInsight('SlowCSSSelector', this.data.insights, this.data.insightSetKey);\n        return insight?.relatedEvents ?? [];\n    }\n    render() {\n        const matchesCategory = shouldRenderForCategory({\n            activeCategory: this.data.activeCategory,\n            insightCategory: this.insightCategory,\n        });\n        const shouldRender = matchesCategory && this.#hasDataToRender();\n        const output = shouldRender ? this.renderSlowCSSSelector() : LitHtml.nothing;\n        LitHtml.render(output, this.shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-slow-css-selector', SlowCSSSelector);\n//# sourceMappingURL=SlowCSSSelector.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport './Table.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport { BaseInsight, shouldRenderForCategory } from './Helpers.js';\nimport { Category } from './types.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /** Title of an insight that provides details about the code on a web page that the user doesn't control (referred to as \"third-party code\"). */\n    title: 'Third parties',\n    /**\n     * @description Description of a DevTools insight that identifies the code on the page that the user doesn't control.\n     * This is displayed after a user expands the section to see more. No character length limits.\n     */\n    description: 'Third party code can significantly impact load performance. ' +\n        '[Reduce and defer loading of third party code](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript/) to prioritize your page\\'s content.',\n    /** Label for a table column that displays the name of a third-party provider. */\n    columnThirdParty: 'Third party',\n    /** Label for a column in a data table; entries will be the download size of a web resource in kilobytes. */\n    columnTransferSize: 'Transfer size',\n    /** Label for a table column that displays how much time each row spent blocking other work on the main thread, entries will be the number of milliseconds spent. */\n    columnBlockingTime: 'Blocking time',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/ThirdParties.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ThirdParties extends BaseInsight {\n    static litTagName = LitHtml.literal `devtools-performance-third-parties`;\n    insightCategory = Category.ALL;\n    internalName = 'third-parties';\n    userVisibleTitle = i18nString(UIStrings.title);\n    description = i18nString(UIStrings.description);\n    #overlaysForEntity = new Map();\n    createOverlays() {\n        this.#overlaysForEntity.clear();\n        const insight = Trace.Insights.Common.getInsight('ThirdPartyWeb', this.data.insights, this.data.insightSetKey);\n        if (!insight) {\n            return [];\n        }\n        const overlays = [];\n        for (const [entity, requests] of insight.requestsByEntity) {\n            if (entity === insight.firstPartyEntity) {\n                continue;\n            }\n            const overlaysForThisEntity = [];\n            for (const request of requests) {\n                const overlay = {\n                    type: 'ENTRY_OUTLINE',\n                    entry: request,\n                    outlineReason: 'INFO',\n                };\n                overlaysForThisEntity.push(overlay);\n                overlays.push(overlay);\n            }\n            this.#overlaysForEntity.set(entity, overlaysForThisEntity);\n        }\n        return overlays;\n    }\n    #render(entries) {\n        const topTransferSizeEntries = entries.sort((a, b) => b[1].transferSize - a[1].transferSize).slice(0, 6);\n        const topMainThreadTimeEntries = entries.sort((a, b) => b[1].mainThreadTime - a[1].mainThreadTime).slice(0, 6);\n        // clang-format off\n        return html `\n        <div class=\"insights\">\n            <devtools-performance-sidebar-insight .data=${{\n            title: this.userVisibleTitle,\n            description: this.description,\n            internalName: this.internalName,\n            expanded: this.isActive(),\n        }}\n            @insighttoggleclick=${this.onSidebarClick}>\n                <div slot=\"insight-content\">\n                  <div class=\"insight-section\">\n                    ${html `<devtools-performance-table\n                      .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.columnThirdParty), i18nString(UIStrings.columnTransferSize)],\n            rows: topTransferSizeEntries.map(([entity, summary]) => ({\n                values: [\n                    entity.name,\n                    Platform.NumberUtilities.bytesToString(summary.transferSize),\n                ],\n                overlays: this.#overlaysForEntity.get(entity),\n            })),\n        }}>\n                    </devtools-performance-table>`}\n                  </div>\n\n                  <div class=\"insight-section\">\n                    ${html `<devtools-performance-table\n                      .data=${{\n            insight: this,\n            headers: [i18nString(UIStrings.columnThirdParty), i18nString(UIStrings.columnBlockingTime)],\n            rows: topMainThreadTimeEntries.map(([entity, summary]) => ({\n                values: [\n                    entity.name,\n                    i18n.TimeUtilities.millisToString(Platform.Timing.microSecondsToMilliSeconds(summary.mainThreadTime)),\n                ],\n                overlays: this.#overlaysForEntity.get(entity),\n            })),\n        }}>\n                    </devtools-performance-table>`}\n                  </div>\n                </div>\n            </devtools-performance-sidebar-insight>\n        </div>`;\n        // clang-format on\n    }\n    getRelatedEvents() {\n        const insight = Trace.Insights.Common.getInsight('ThirdPartyWeb', this.data.insights, this.data.insightSetKey);\n        return insight?.relatedEvents ?? [];\n    }\n    render() {\n        const insight = Trace.Insights.Common.getInsight('ThirdPartyWeb', this.data.insights, this.data.insightSetKey);\n        const entries = insight && [...insight.summaryByEntity.entries()].filter(kv => kv[0] !== insight.firstPartyEntity);\n        const shouldShow = entries?.length;\n        const matchesCategory = shouldRenderForCategory({\n            activeCategory: this.data.activeCategory,\n            insightCategory: this.insightCategory,\n        });\n        const output = shouldShow && matchesCategory ? this.#render(entries) : LitHtml.nothing;\n        LitHtml.render(output, this.shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-third-parties', ThirdParties);\n//# sourceMappingURL=ThirdParties.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport './NodeLink.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport { BaseInsight, shouldRenderForCategory } from './Helpers.js';\nimport { Category } from './types.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /** Title of an insight that provides details about if the page's viewport is optimized for mobile viewing. */\n    title: 'Viewport not optimized for mobile',\n    /**\n     * @description Text to tell the user how a viewport meta element can improve performance. \\xa0 is a non-breaking space\n     */\n    description: 'The page\\'s viewport is not mobile-optimized, so tap interactions may be [delayed by up to 300\\xA0ms](https://developer.chrome.com/blog/300ms-tap-delay-gone-away/).',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/insights/Viewport.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class Viewport extends BaseInsight {\n    static litTagName = LitHtml.literal `devtools-performance-viewport`;\n    insightCategory = Category.INP;\n    internalName = 'viewport';\n    userVisibleTitle = i18nString(UIStrings.title);\n    description = i18nString(UIStrings.description);\n    createOverlays() {\n        // TODO(b/351757418): create overlay for synthetic input delay events\n        return [];\n    }\n    #render(insight) {\n        const backendNodeId = insight.viewportEvent?.args.data.node_id;\n        // clang-format off\n        return html `\n        <div class=\"insights\">\n            <devtools-performance-sidebar-insight .data=${{\n            title: this.userVisibleTitle,\n            description: this.description,\n            expanded: this.isActive(),\n            internalName: this.internalName,\n            estimatedSavingsTime: insight.metricSavings?.INP,\n        }}\n            @insighttoggleclick=${this.onSidebarClick}>\n              ${backendNodeId !== undefined ? html `<devtools-performance-node-link\n                .data=${{\n            backendNodeId,\n            options: { tooltip: insight.viewportEvent?.args.data.content },\n        }}>\n              </devtools-performance-node-link>` : LitHtml.nothing}\n            </devtools-performance-sidebar-insight>\n        </div>`;\n        // clang-format on\n    }\n    render() {\n        const viewportInsight = Trace.Insights.Common.getInsight('Viewport', this.data.insights, this.data.insightSetKey);\n        const shouldShow = viewportInsight && viewportInsight.mobileOptimized === false;\n        const matchesCategory = shouldRenderForCategory({\n            activeCategory: this.data.activeCategory,\n            insightCategory: this.insightCategory,\n        });\n        const output = shouldShow && matchesCategory ? this.#render(viewportInsight) : LitHtml.nothing;\n        LitHtml.render(output, this.shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-viewport', Viewport);\n//# sourceMappingURL=Viewport.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.layout-shift-details-title,\n.cluster-details-title {\n  padding-bottom: var(--sys-size-5);\n  display: flex;\n  align-items: center;\n\n  .layout-shift-event-title,\n  .cluster-event-title {\n    background-color: var(--app-color-rendering);\n    width: var(--sys-size-6);\n    height: var(--sys-size-6);\n    border: var(--sys-size-1) solid var(--sys-color-divider);\n    display: inline-block;\n    margin-right: var(--sys-size-3);\n  }\n}\n\n.layout-shift-details-table {\n  font: var(--sys-typescale-body4-regular);\n  margin-bottom: var(--sys-size-4);\n  text-align: left;\n  border-block: var(--sys-size-1) solid var(--sys-color-divider);\n  border-collapse: collapse;\n  font-variant-numeric: tabular-nums;\n\n  th,\n  td {\n    padding-right: var(--sys-size-4);\n    min-width: var(--sys-size-20);\n    max-width: var(--sys-size-24);\n  }\n}\n\n.table-title {\n  th {\n    font: var(--sys-typescale-body4-medium);\n  }\n\n  tr {\n    border-bottom: var(--sys-size-1) solid var(--sys-color-divider);\n  }\n}\n\n/** TODO: This is duplicated in sidebarInsights.css. Should make a component. */\n.timeline-link {\n  cursor: pointer;\n  text-decoration: underline;\n  color: var(--sys-color-primary);\n  /* for a11y reasons this is a button, so we have to remove some default\n   * styling */\n  background: none;\n  border: none;\n  padding: 0;\n  font: inherit;\n}\n\n.timeline-link.invalid-link {\n  color: var(--sys-color-state-disabled);\n}\n\n.details-row {\n  display: flex;\n  min-height: var(--sys-size-9);\n}\n\n.title {\n  color: var(--sys-color-token-subtle);\n  overflow: hidden;\n  padding-right: var(--sys-size-5);\n  display: inline-block;\n  vertical-align: top;\n}\n\n.value {\n  display: inline-block;\n  user-select: text;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  padding: 0 var(--sys-size-3);\n}\n\n.layout-shift-summary-details,\n.layout-shift-cluster-summary-details {\n  font: var(--sys-typescale-body4-regular);\n  display: flex;\n  flex-direction: column;\n  column-gap: var(--sys-size-4);\n  padding: var(--sys-size-6) var(--sys-size-6) 0 var(--sys-size-6);\n}\n\n.culprits {\n  display: flex;\n  flex-direction: column;\n}\n\n.shift-row:not(:last-child) {\n  border-bottom: var(--sys-size-1) solid var(--sys-color-divider);\n}\n\n.total-row {\n  font: var(--sys-typescale-body4-medium);\n}\n\n/*# sourceURL=layoutShiftDetails.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Helpers from '../../../models/trace/helpers/helpers.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as LegacyComponents from '../../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as EntryName from './EntryName.js';\nimport * as Insights from './insights/insights.js';\nimport layoutShiftDetailsStyles from './layoutShiftDetails.css.js';\nconst { html } = LitHtml;\nconst MAX_URL_LENGTH = 20;\nconst UIStrings = {\n    /**\n     * @description Text referring to the start time of a given event.\n     */\n    startTime: 'Start time',\n    /**\n     * @description Text for a table header referring to the score of a Layout Shift event.\n     */\n    shiftScore: 'Shift score',\n    /**\n     * @description Text for a table header referring to the elements shifted for a Layout Shift event.\n     */\n    elementsShifted: 'Elements shifted',\n    /**\n     * @description Text for a table header referring to the culprit of a Layout Shift event.\n     */\n    culprit: 'Culprit',\n    /**\n     * @description Text for a culprit type of Injected iframe.\n     */\n    injectedIframe: 'Injected iframe',\n    /**\n     * @description Text for a culprit type of Font request.\n     */\n    fontRequest: 'Font request',\n    /**\n     * @description Text for a culprit type of non-composited animation.\n     */\n    nonCompositedAnimation: 'Non-composited animation',\n    /**\n     * @description Text referring to an animation.\n     */\n    animation: 'Animation',\n    /**\n     * @description Text referring to a parent cluster.\n     */\n    parentCluster: 'Parent cluster',\n    /**\n     * @description Text referring to a layout shift cluster and its start time.\n     * @example {32 ms} PH1\n     */\n    cluster: 'Layout shift cluster @ {PH1}',\n    /**\n     * @description Text referring to a layout shift and its start time.\n     * @example {32 ms} PH1\n     */\n    layoutShift: 'Layout shift @ {PH1}',\n    /**\n     * @description Text referring to the total cumulative score of a layout shift cluster.\n     */\n    total: 'Total',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/LayoutShiftDetails.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class LayoutShiftDetails extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #event = null;\n    #traceInsightsSets = null;\n    #parsedTrace = null;\n    #isFreshRecording = false;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [layoutShiftDetailsStyles];\n        // Styles for linkifier button.\n        UI.UIUtils.injectTextButtonStyles(this.#shadow);\n        this.#render();\n    }\n    setData(event, traceInsightsSets, parsedTrace, isFreshRecording) {\n        if (this.#event === event) {\n            return;\n        }\n        this.#event = event;\n        this.#traceInsightsSets = traceInsightsSets;\n        this.#parsedTrace = parsedTrace;\n        this.#isFreshRecording = isFreshRecording;\n        this.#render();\n    }\n    #renderTitle(event) {\n        const title = EntryName.nameForEntry(event);\n        return html `\n      <div class=\"layout-shift-details-title\">\n        <div class=\"layout-shift-event-title\"></div>\n        ${title}\n      </div>\n    `;\n    }\n    #renderShiftedElements(elementsShifted) {\n        // clang-format off\n        return html `\n      ${elementsShifted?.map(el => {\n            if (el.node_id !== undefined) {\n                return html `\n            <devtools-performance-node-link\n              .data=${{\n                    backendNodeId: el.node_id,\n                }}>\n            </devtools-performance-node-link>`;\n            }\n            return LitHtml.nothing;\n        })}`;\n        // clang-format on\n    }\n    #renderIframe(iframeId) {\n        const domLoadingId = iframeId;\n        if (!domLoadingId) {\n            return null;\n        }\n        const domLoadingFrame = SDK.FrameManager.FrameManager.instance().getFrame(domLoadingId);\n        if (!domLoadingFrame) {\n            return null;\n        }\n        const el = LegacyComponents.Linkifier.Linkifier.linkifyRevealable(domLoadingFrame, domLoadingFrame.displayName());\n        // clang-format off\n        return html `\n    <span class=\"culprit\"><span class=\"culprit-type\">${i18nString(UIStrings.injectedIframe)}: </span><span class=\"culprit-value\">${el}</span></span>`;\n        // clang-format on\n    }\n    #renderFontRequest(request) {\n        const options = {\n            tabStop: true,\n            showColumnNumber: false,\n            inlineFrameIndex: 0,\n            maxLength: MAX_URL_LENGTH,\n        };\n        const linkifiedURL = LegacyComponents.Linkifier.Linkifier.linkifyURL(request.args.data.url, options);\n        // clang-format off\n        return html `\n    <span class=\"culprit\"><span class=\"culprit-type\">${i18nString(UIStrings.fontRequest)}: </span><span class=\"culprit-value\">${linkifiedURL}</span></span>`;\n        // clang-format on\n    }\n    // TODO(crbug.com/368170718): use eventRef instead\n    #clickEvent(event) {\n        this.dispatchEvent(new Insights.EventRef.EventReferenceClick(event));\n    }\n    #renderAnimation(failure) {\n        const event = failure.animation;\n        if (!event) {\n            return null;\n        }\n        // clang-format off\n        return html `\n        <span class=\"culprit\">\n        <span class=\"culprit-type\">${i18nString(UIStrings.nonCompositedAnimation)}: </span>\n        <button type=\"button\" class=\"culprit-value timeline-link\" @click=${() => this.#clickEvent(event)}>${i18nString(UIStrings.animation)}</button>\n      </span>`;\n        // clang-format on\n    }\n    #renderRootCauseValues(rootCauses) {\n        return html `\n      ${rootCauses?.fontRequests.map(fontReq => this.#renderFontRequest(fontReq))}\n      ${rootCauses?.iframeIds.map(iframe => this.#renderIframe(iframe))}\n      ${rootCauses?.nonCompositedAnimations.map(failure => this.#renderAnimation(failure))}\n    `;\n    }\n    #renderStartTime(shift, parsedTrace) {\n        const ts = Trace.Types.Timing.MicroSeconds(shift.ts - parsedTrace.Meta.traceBounds.min);\n        if (shift === this.#event) {\n            return html `${i18n.TimeUtilities.preciseMillisToString(Helpers.Timing.microSecondsToMilliseconds(ts))}`;\n        }\n        const shiftTs = i18n.TimeUtilities.formatMicroSecondsTime(ts);\n        // clang-format off\n        return html `\n         <button type=\"button\" class=\"timeline-link\" @click=${() => this.#clickEvent(shift)}>${i18nString(UIStrings.layoutShift, { PH1: shiftTs })}</button>`;\n        // clang-format on\n    }\n    #renderShiftRow(shift, parsedTrace, elementsShifted, rootCauses) {\n        const score = shift.args.data?.weighted_score_delta;\n        if (!score) {\n            return null;\n        }\n        const hasCulprits = Boolean(rootCauses &&\n            (rootCauses.fontRequests.length || rootCauses.iframeIds.length || rootCauses.nonCompositedAnimations.length));\n        // clang-format off\n        return html `\n      <tr class=\"shift-row\" data-ts=${shift.ts}>\n        <td>${this.#renderStartTime(shift, parsedTrace)}</td>\n        <td>${(score.toFixed(4))}</td>\n        ${this.#isFreshRecording ? html `\n          <td>\n            <div class=\"elements-shifted\">\n              ${this.#renderShiftedElements(elementsShifted)}\n            </div>\n          </td>` : LitHtml.nothing}\n        ${hasCulprits && this.#isFreshRecording ? html `\n          <td class=\"culprits\">\n            ${this.#renderRootCauseValues(rootCauses)}\n          </td>` : LitHtml.nothing}\n      </tr>`;\n        // clang-format on\n    }\n    #renderParentCluster(cluster, parsedTrace) {\n        if (!cluster) {\n            return null;\n        }\n        const ts = Trace.Types.Timing.MicroSeconds(cluster.ts - (parsedTrace?.Meta.traceBounds.min ?? 0));\n        const clusterTs = i18n.TimeUtilities.formatMicroSecondsTime(ts);\n        // clang-format off\n        return html `\n      <span class=\"parent-cluster\">${i18nString(UIStrings.parentCluster)}:\n         <button type=\"button\" class=\"timeline-link\" @click=${() => this.#clickEvent(cluster)}>${i18nString(UIStrings.cluster, { PH1: clusterTs })}</button>\n      </span>`;\n        // clang-format on\n    }\n    #renderClusterTotalRow(cluster) {\n        // clang-format off\n        return html `\n      <td class=\"total-row\">${i18nString(UIStrings.total)}</td>\n      <td class=\"total-row\">${(cluster.clusterCumulativeScore.toFixed(4))}</td>`;\n        // clang-format on\n    }\n    #renderShiftDetails(layoutShift, traceInsightsSets, parsedTrace) {\n        if (!traceInsightsSets) {\n            return null;\n        }\n        const insightsId = layoutShift.args.data?.navigationId ?? Trace.Types.Events.NO_NAVIGATION;\n        const clsInsight = traceInsightsSets.get(insightsId)?.data.CumulativeLayoutShift;\n        if (!clsInsight || clsInsight instanceof Error) {\n            return null;\n        }\n        const rootCauses = clsInsight.shifts.get(layoutShift);\n        const elementsShifted = layoutShift.args.data?.impacted_nodes ?? [];\n        const hasCulprits = rootCauses &&\n            (rootCauses.fontRequests.length || rootCauses.iframeIds.length || rootCauses.nonCompositedAnimations.length);\n        const hasShiftedElements = elementsShifted?.length;\n        const parentCluster = clsInsight.clusters.find(cluster => {\n            return cluster.events.find(event => event === layoutShift);\n        });\n        // clang-format off\n        return html `\n      <table class=\"layout-shift-details-table\">\n        <thead class=\"table-title\">\n          <tr>\n            <th>${i18nString(UIStrings.startTime)}</th>\n            <th>${i18nString(UIStrings.shiftScore)}</th>\n            ${hasShiftedElements && this.#isFreshRecording ? html `\n              <th>${i18nString(UIStrings.elementsShifted)}</th>` : LitHtml.nothing}\n            ${hasCulprits && this.#isFreshRecording ? html `\n              <th>${i18nString(UIStrings.culprit)}</th> ` : LitHtml.nothing}\n          </tr>\n        </thead>\n        <tbody>\n          ${this.#renderShiftRow(layoutShift, parsedTrace, elementsShifted, rootCauses)}\n        </tbody>\n      </table>\n      ${this.#renderParentCluster(parentCluster, parsedTrace)}\n    `;\n        // clang-format on\n    }\n    #renderClusterDetails(cluster, traceInsightsSets, parsedTrace) {\n        if (!traceInsightsSets) {\n            return null;\n        }\n        const insightsId = cluster.navigationId ?? Trace.Types.Events.NO_NAVIGATION;\n        const clsInsight = traceInsightsSets.get(insightsId)?.data.CumulativeLayoutShift;\n        if (!clsInsight || clsInsight instanceof Error) {\n            return null;\n        }\n        // This finds the culprits of the cluster and returns an array of the culprits.\n        const clusterCulprits = Array.from(clsInsight.shifts.entries())\n            .filter(([key]) => cluster.events.includes(key))\n            .map(([, value]) => value)\n            .flatMap(x => Object.values(x))\n            .flat();\n        const hasCulprits = Boolean(clusterCulprits.length);\n        // clang-format off\n        return html `\n          <table class=\"layout-shift-details-table\">\n            <thead class=\"table-title\">\n              <tr>\n                <th>${i18nString(UIStrings.startTime)}</th>\n                <th>${i18nString(UIStrings.shiftScore)}</th>\n                ${this.#isFreshRecording ? html `\n                  <th>${i18nString(UIStrings.elementsShifted)}</th>` : LitHtml.nothing}\n                ${hasCulprits && this.#isFreshRecording ? html `\n                  <th>${i18nString(UIStrings.culprit)}</th> ` : LitHtml.nothing}\n              </tr>\n            </thead>\n            <tbody>\n              ${cluster.events.map(shift => {\n            const rootCauses = clsInsight.shifts.get(shift);\n            const elementsShifted = shift.args.data?.impacted_nodes ?? [];\n            return this.#renderShiftRow(shift, parsedTrace, elementsShifted, rootCauses);\n        })}\n              ${this.#renderClusterTotalRow(cluster)}\n            </tbody>\n          </table>\n        `;\n        // clang-format on\n    }\n    #render() {\n        if (!this.#event || !this.#parsedTrace) {\n            return;\n        }\n        // clang-format off\n        const output = html `\n      <div class=\"layout-shift-summary-details\">\n        <div\n          class=\"event-details\"\n          @mouseover=${this.#togglePopover}\n          @mouseleave=${this.#togglePopover}\n        >\n          ${this.#renderTitle(this.#event)}\n          ${Trace.Types.Events.isSyntheticLayoutShift(this.#event)\n            ? this.#renderShiftDetails(this.#event, this.#traceInsightsSets, this.#parsedTrace)\n            : this.#renderClusterDetails(this.#event, this.#traceInsightsSets, this.#parsedTrace)}\n        </div>\n      </div>\n    `;\n        // clang-format on\n        LitHtml.render(output, this.#shadow, { host: this });\n    }\n    #togglePopover(e) {\n        const show = e.type === 'mouseover';\n        if (e.type === 'mouseleave') {\n            this.dispatchEvent(new CustomEvent('toggle-popover', { detail: { show }, bubbles: true, composed: true }));\n        }\n        if (!(e.target instanceof HTMLElement) || !this.#event) {\n            return;\n        }\n        const rowEl = e.target.closest('tbody tr');\n        if (!rowEl || !rowEl.parentElement) {\n            return;\n        }\n        // Grab the associated trace event of this row.\n        const event = Trace.Types.Events.isSyntheticLayoutShift(this.#event) ?\n            this.#event :\n            this.#event.events.find(e => e.ts === parseInt(rowEl.getAttribute('data-ts') ?? '', 10));\n        this.dispatchEvent(new CustomEvent('toggle-popover', { detail: { event, show }, bubbles: true, composed: true }));\n    }\n}\ncustomElements.define('devtools-performance-layout-shift-details', LayoutShiftDetails);\n//# sourceMappingURL=LayoutShiftDetails.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: inline-block;\n  max-width: 100%;\n  min-width: 50px;\n}\n\ndevtools-select-menu {\n  max-width: 100%;\n}\n\n/*# sourceURL=networkThrottlingSelector.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/menus/menus.js';\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../../mobile_throttling/mobile_throttling.js';\nimport networkThrottlingSelectorStyles from './networkThrottlingSelector.css.js';\nconst { html, nothing } = LitHtml;\nconst UIStrings = {\n    /**\n     * @description Text label for a selection box showing which network throttling option is applied.\n     * @example {No throttling} PH1\n     */\n    network: 'Network: {PH1}',\n    /**\n     * @description Text label for a selection box showing which network throttling option is applied.\n     * @example {No throttling} PH1\n     */\n    networkThrottling: 'Network throttling: {PH1}',\n    /**\n     * @description Text label for a menu group that disables network throttling.\n     */\n    disabled: 'Disabled',\n    /**\n     * @description Text label for a menu group that contains default presets for network throttling.\n     */\n    presets: 'Presets',\n    /**\n     * @description Text label for a menu group that contains custom presets for network throttling.\n     */\n    custom: 'Custom',\n    /**\n     * @description Text label for a menu option to add a new custom throttling preset.\n     */\n    add: 'Add…',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/NetworkThrottlingSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class NetworkThrottlingSelector extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #customNetworkConditionsSetting;\n    #groups = [];\n    #currentConditions;\n    constructor() {\n        super();\n        this.#customNetworkConditionsSetting =\n            Common.Settings.Settings.instance().moduleSetting('custom-network-conditions');\n        this.#resetPresets();\n        this.#currentConditions = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n        this.#render();\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [networkThrottlingSelectorStyles];\n        SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\"ConditionsChanged\" /* SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED */, this.#onConditionsChanged, this);\n        // Also call onConditionsChanged immediately to make sure we get the\n        // latest snapshot. Otherwise if another panel updated this value and this\n        // component wasn't in the DOM, this component will not update itself\n        // when it is put into the page\n        this.#onConditionsChanged();\n        this.#customNetworkConditionsSetting.addChangeListener(this.#onSettingChanged, this);\n    }\n    disconnectedCallback() {\n        SDK.NetworkManager.MultitargetNetworkManager.instance().removeEventListener(\"ConditionsChanged\" /* SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED */, this.#onConditionsChanged, this);\n        this.#customNetworkConditionsSetting.removeChangeListener(this.#onSettingChanged, this);\n    }\n    #resetPresets() {\n        this.#groups = [\n            {\n                name: i18nString(UIStrings.disabled),\n                items: [\n                    SDK.NetworkManager.NoThrottlingConditions,\n                ],\n            },\n            {\n                name: i18nString(UIStrings.presets),\n                items: MobileThrottling.ThrottlingPresets.ThrottlingPresets.networkPresets,\n            },\n            {\n                name: i18nString(UIStrings.custom),\n                items: this.#customNetworkConditionsSetting.get(),\n                showCustomAddOption: true,\n                jslogContext: 'custom-network-throttling-item',\n            },\n        ];\n    }\n    #onConditionsChanged() {\n        this.#currentConditions = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #onMenuItemSelected(event) {\n        const newConditions = this.#groups.flatMap(g => g.items).find(item => {\n            const keyForItem = this.#keyForNetworkConditions(item);\n            return keyForItem === event.itemValue;\n        });\n        if (newConditions) {\n            SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(newConditions);\n        }\n    }\n    #onSettingChanged() {\n        this.#resetPresets();\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #getConditionsTitle(conditions) {\n        return conditions.title instanceof Function ? conditions.title() : conditions.title;\n    }\n    #onAddClick() {\n        void Common.Revealer.reveal(this.#customNetworkConditionsSetting);\n    }\n    /**\n     * The key that uniquely identifies the condition setting. All the DevTools\n     * presets have the i18nKey, so we rely on that, but for custom user added\n     * ones we fallback to using the title (it wouldn't make sense for a user to\n     * add presets with the same title)\n     */\n    #keyForNetworkConditions(conditions) {\n        return conditions.i18nTitleKey || this.#getConditionsTitle(conditions);\n    }\n    #render = () => {\n        const selectionTitle = this.#getConditionsTitle(this.#currentConditions);\n        const selectedConditionsKey = this.#keyForNetworkConditions(this.#currentConditions);\n        // clang-format off\n        const output = html `\n      <devtools-select-menu\n        @selectmenuselected=${this.#onMenuItemSelected}\n        .showDivider=${true}\n        .showArrow=${true}\n        .sideButton=${false}\n        .showSelectedItem=${true}\n        .showConnector=${false}\n        .jslogContext=${'network-conditions'}\n        .buttonTitle=${i18nString(UIStrings.network, { PH1: selectionTitle })}\n        title=${i18nString(UIStrings.networkThrottling, { PH1: selectionTitle })}\n      >\n        ${this.#groups.map(group => {\n            return html `\n            <devtools-menu-group .name=${group.name}>\n              ${group.items.map(conditions => {\n                const key = this.#keyForNetworkConditions(conditions);\n                const title = this.#getConditionsTitle(conditions);\n                const jslogContext = group.jslogContext || Platform.StringUtilities.toKebabCase(conditions.i18nTitleKey || title);\n                return html `\n                  <devtools-menu-item\n                    title=${title}\n                    .value=${key}\n                    .selected=${selectedConditionsKey === key}\n                    jslog=${VisualLogging.item(jslogContext).track({ click: true })}\n                  >\n                    ${title}\n                  </devtools-menu-item>\n                `;\n            })}\n              ${group.showCustomAddOption ? html `\n                <devtools-menu-item\n                  .value=${1 /* This won't be displayed unless it has some value. */}\n                  jslog=${VisualLogging.action('add').track({ click: true })}\n                  @click=${this.#onAddClick}\n                >\n                  ${i18nString(UIStrings.add)}\n                </devtools-menu-item>\n              ` : nothing}\n            </devtools-menu-group>\n          `;\n        })}\n      </devtools-select-menu>\n    `;\n        // clang-format on\n        LitHtml.render(output, this.#shadow, { host: this });\n    };\n}\ncustomElements.define('devtools-network-throttling-selector', NetworkThrottlingSelector);\n//# sourceMappingURL=NetworkThrottlingSelector.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.metric-card {\n  border-radius: var(--sys-shape-corner-small);\n  padding: 14px 16px;\n  background-color: var(--sys-color-surface3);\n  height: 100%;\n  box-sizing: border-box;\n}\n\n.title {\n  font-size: var(--sys-typescale-headline5-size);\n  line-height: var(--sys-typescale-headline5-line-height);\n  font-weight: var(--ref-typeface-weight-medium);\n  margin: 0;\n  margin-bottom: 6px;\n}\n\n.metric-values-section {\n  position: relative;\n  display: flex;\n  column-gap: 8px;\n  margin-bottom: 8px;\n}\n\n.metric-values-section:focus-visible {\n  outline: 2px solid -webkit-focus-ring-color;\n}\n\n.metric-source-block {\n  flex: 1;\n}\n\n.metric-source-value {\n  font-size: 32px;\n  line-height: 36px;\n  font-weight: var(--ref-typeface-weight-regular);\n}\n\n.metric-source-label {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.good-bg {\n  background-color: var(--app-color-performance-good);\n}\n\n.needs-improvement-bg {\n  background-color: var(--app-color-performance-ok);\n}\n\n.poor-bg {\n  background-color: var(--app-color-performance-bad);\n}\n\n.divider {\n  width: 100%;\n  border: 0;\n  border-bottom: 1px solid var(--sys-color-divider);\n  margin: 8px 0;\n  box-sizing: border-box;\n}\n\n.compare-text {\n  margin-top: 8px;\n}\n\n.environment-recs-intro {\n  margin-top: 8px;\n}\n\n.environment-recs {\n  margin: 12px 0;\n}\n\n.environment-recs > summary {\n  font-weight: var(--ref-typeface-weight-medium);\n  margin-bottom: 4px;\n}\n\n.environment-recs-list {\n  margin: 0;\n  padding-left: 20px;\n}\n\n.detailed-compare-text {\n  margin-bottom: 8px;\n}\n\n.bucket-summaries {\n  margin-top: 8px;\n  overflow-x: auto;\n}\n\n.bucket-summaries.histogram {\n  display: grid;\n  grid-template-columns: minmax(min-content, auto) minmax(20px, 50px) max-content;\n  grid-auto-rows: 1fr;\n  column-gap: 8px;\n  justify-items: flex-end;\n  align-items: center;\n}\n\n.bucket-label {\n  justify-self: start;\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.bucket-range {\n  color: var(--sys-color-token-subtle);\n}\n\n.histogram-bar {\n  height: 6px;\n}\n\n.histogram-percent {\n  color: var(--sys-color-token-subtle);\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.tooltip {\n  display: none;\n  visibility: hidden;\n  transition-property: visibility;\n  width: min(var(--tooltip-container-width, 350px), 350px);\n  max-width: max-content;\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 1;\n  box-sizing: border-box;\n  padding: var(--sys-size-5) var(--sys-size-6);\n  border-radius: var(--sys-shape-corner-small);\n  background-color: var(--sys-color-cdt-base-container);\n  box-shadow: var(--drop-shadow-depth-3);\n}\n\n.phase-table-row {\n  display: flex;\n  justify-content: space-between;\n}\n\n.phase-table-header-row {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n/*# sourceURL=metricCard.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\n// This file is auto-generated by scripts/generate_metric_compare_strings.js.\n//\n// If you need to update one or more of these strings, it is preferable to modify the script\n// and write stdout to this file (Minor formatting differences may apply).\nconst UIStrings = {\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     */\n    goodBetterCompare: 'Your local {PH1} value of {PH2} is good, but is significantly better than your users’ experience.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     */\n    goodWorseCompare: 'Your local {PH1} value of {PH2} is good, but is significantly worse than your users’ experience.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     */\n    goodSimilarCompare: 'Your local {PH1} value of {PH2} is good, and is similar to your users’ experience.',\n    /**\n     * @description Text block that summarize a local metric value. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     */\n    goodSummarized: 'Your local {PH1} value of {PH2} is good.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     */\n    needsImprovementBetterCompare: 'Your local {PH1} value of {PH2} needs improvement, but is significantly better than your users’ experience.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     */\n    needsImprovementWorseCompare: 'Your local {PH1} value of {PH2} needs improvement, but is significantly worse than your users’ experience.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     */\n    needsImprovementSimilarCompare: 'Your local {PH1} value of {PH2} needs improvement, and is similar to your users’ experience.',\n    /**\n     * @description Text block that summarize a local metric value. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     */\n    needsImprovementSummarized: 'Your local {PH1} value of {PH2} needs improvement.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     */\n    poorBetterCompare: 'Your local {PH1} value of {PH2} is poor, but is significantly better than your users’ experience.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     */\n    poorWorseCompare: 'Your local {PH1} value of {PH2} is poor, but is significantly worse than your users’ experience.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     */\n    poorSimilarCompare: 'Your local {PH1} value of {PH2} is poor, and is similar to your users’ experience.',\n    /**\n     * @description Text block that summarize a local metric value. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     */\n    poorSummarized: 'Your local {PH1} value of {PH2} is poor.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"field data\" refers to performance data collected from real users on the site. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     * @example {400 ms} PH3\n     * @example {40%} PH4\n     */\n    goodGoodDetailedCompare: 'Your local {PH1} value of {PH2} is good and is rated the same as {PH4} of real-user {PH1} experiences. Additionally, the field data 75th percentile {PH1} value of {PH3} is good.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"field data\" refers to performance data collected from real users on the site. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     * @example {400 ms} PH3\n     * @example {40%} PH4\n     */\n    goodNeedsImprovementDetailedCompare: 'Your local {PH1} value of {PH2} is good and is rated the same as {PH4} of real-user {PH1} experiences. However, the field data 75th percentile {PH1} value of {PH3} needs improvement.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"field data\" refers to performance data collected from real users on the site. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     * @example {400 ms} PH3\n     * @example {40%} PH4\n     */\n    goodPoorDetailedCompare: 'Your local {PH1} value of {PH2} is good and is rated the same as {PH4} of real-user {PH1} experiences. However, the field data 75th percentile {PH1} value of {PH3} is poor.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"field data\" refers to performance data collected from real users on the site. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     * @example {400 ms} PH3\n     * @example {40%} PH4\n     */\n    needsImprovementGoodDetailedCompare: 'Your local {PH1} value of {PH2} needs improvement and is rated the same as {PH4} of real-user {PH1} experiences. However, the field data 75th percentile {PH1} value of {PH3} is good.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"field data\" refers to performance data collected from real users on the site. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     * @example {400 ms} PH3\n     * @example {40%} PH4\n     */\n    needsImprovementNeedsImprovementDetailedCompare: 'Your local {PH1} value of {PH2} needs improvement and is rated the same as {PH4} of real-user {PH1} experiences. Additionally, the field data 75th percentile {PH1} value of {PH3} needs improvement.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"field data\" refers to performance data collected from real users on the site. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     * @example {400 ms} PH3\n     * @example {40%} PH4\n     */\n    needsImprovementPoorDetailedCompare: 'Your local {PH1} value of {PH2} needs improvement and is rated the same as {PH4} of real-user {PH1} experiences. However, the field data 75th percentile {PH1} value of {PH3} is poor.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"field data\" refers to performance data collected from real users on the site. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     * @example {400 ms} PH3\n     * @example {40%} PH4\n     */\n    poorGoodDetailedCompare: 'Your local {PH1} value of {PH2} is poor and is rated the same as {PH4} of real-user {PH1} experiences. However, the field data 75th percentile {PH1} value of {PH3} is good.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"field data\" refers to performance data collected from real users on the site. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     * @example {400 ms} PH3\n     * @example {40%} PH4\n     */\n    poorNeedsImprovementDetailedCompare: 'Your local {PH1} value of {PH2} is poor and is rated the same as {PH4} of real-user {PH1} experiences. However, the field data 75th percentile {PH1} value of {PH3} needs improvement.',\n    /**\n     * @description Text block that compares a local metric value to real user experiences. \"field data\" refers to performance data collected from real users on the site. \"local\" refers to a developers local testing environment.\n     * @example {LCP} PH1\n     * @example {500 ms} PH2\n     * @example {400 ms} PH3\n     * @example {40%} PH4\n     */\n    poorPoorDetailedCompare: 'Your local {PH1} value of {PH2} is poor and is rated the same as {PH4} of real-user {PH1} experiences. Additionally, the field data 75th percentile {PH1} value of {PH3} is poor.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/MetricCompareStrings.ts', UIStrings);\nexport function renderCompareText(options) {\n    const { rating, compare } = options;\n    const values = {\n        PH1: options.metric,\n        PH2: options.localValue,\n    };\n    if (rating === 'good' && compare === 'better') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodBetterCompare, values);\n    }\n    if (rating === 'good' && compare === 'worse') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodWorseCompare, values);\n    }\n    if (rating === 'good' && compare === 'similar') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodSimilarCompare, values);\n    }\n    if (rating === 'good' && !compare) {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodSummarized, values);\n    }\n    if (rating === 'needs-improvement' && compare === 'better') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementBetterCompare, values);\n    }\n    if (rating === 'needs-improvement' && compare === 'worse') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementWorseCompare, values);\n    }\n    if (rating === 'needs-improvement' && compare === 'similar') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementSimilarCompare, values);\n    }\n    if (rating === 'needs-improvement' && !compare) {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementSummarized, values);\n    }\n    if (rating === 'poor' && compare === 'better') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorBetterCompare, values);\n    }\n    if (rating === 'poor' && compare === 'worse') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorWorseCompare, values);\n    }\n    if (rating === 'poor' && compare === 'similar') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorSimilarCompare, values);\n    }\n    if (rating === 'poor' && !compare) {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorSummarized, values);\n    }\n    throw new Error('Compare string not found');\n}\nexport function renderDetailedCompareText(options) {\n    const { localRating, fieldRating } = options;\n    const values = {\n        PH1: options.metric,\n        PH2: options.localValue,\n        PH3: options.fieldValue,\n        PH4: options.percent,\n    };\n    if (localRating === 'good' && fieldRating === 'good') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodGoodDetailedCompare, values);\n    }\n    if (localRating === 'good' && fieldRating === 'needs-improvement') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodNeedsImprovementDetailedCompare, values);\n    }\n    if (localRating === 'good' && fieldRating === 'poor') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodPoorDetailedCompare, values);\n    }\n    if (localRating === 'good' && !fieldRating) {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.goodSummarized, values);\n    }\n    if (localRating === 'needs-improvement' && fieldRating === 'good') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementGoodDetailedCompare, values);\n    }\n    if (localRating === 'needs-improvement' && fieldRating === 'needs-improvement') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementNeedsImprovementDetailedCompare, values);\n    }\n    if (localRating === 'needs-improvement' && fieldRating === 'poor') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementPoorDetailedCompare, values);\n    }\n    if (localRating === 'needs-improvement' && !fieldRating) {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.needsImprovementSummarized, values);\n    }\n    if (localRating === 'poor' && fieldRating === 'good') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorGoodDetailedCompare, values);\n    }\n    if (localRating === 'poor' && fieldRating === 'needs-improvement') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorNeedsImprovementDetailedCompare, values);\n    }\n    if (localRating === 'poor' && fieldRating === 'poor') {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorPoorDetailedCompare, values);\n    }\n    if (localRating === 'poor' && !fieldRating) {\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.poorSummarized, values);\n    }\n    throw new Error('Detailed compare string not found');\n}\n//# sourceMappingURL=MetricCompareStrings.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.metric-value {\n  text-wrap: nowrap;\n}\n\n.metric-value.dim {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.metric-value.waiting {\n  color: var(--sys-color-token-subtle);\n}\n\n.metric-value.good {\n  color: var(--app-color-performance-good);\n}\n\n.metric-value.needs-improvement {\n  color: var(--app-color-performance-ok);\n}\n\n.metric-value.poor {\n  color: var(--app-color-performance-bad);\n}\n\n.metric-value.good.dim {\n  color: var(--app-color-performance-good-dim);\n}\n\n.metric-value.needs-improvement.dim {\n  color: var(--app-color-performance-ok-dim);\n}\n\n.metric-value.poor.dim {\n  color: var(--app-color-performance-bad-dim);\n}\n\n/*# sourceURL=metricValueStyles.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as ThemeSupport from '../../../ui/legacy/theme_support/theme_support.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nconst UIStrings = {\n    /**\n     *@description ms is the short form of milli-seconds and the placeholder is a decimal number.\n     * The shortest form or abbreviation of milliseconds should be used, as there is\n     * limited room in this UI.\n     *@example {2.14} PH1\n     */\n    fms: '{PH1}[ms]()',\n    /**\n     *@description s is short for seconds and the placeholder is a decimal number\n     * The shortest form or abbreviation of seconds should be used, as there is\n     * limited room in this UI.\n     *@example {2.14} PH1\n     */\n    fs: '{PH1}[s]()',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/Utils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport var NetworkCategory;\n(function (NetworkCategory) {\n    NetworkCategory[\"DOC\"] = \"Doc\";\n    NetworkCategory[\"CSS\"] = \"CSS\";\n    NetworkCategory[\"JS\"] = \"JS\";\n    NetworkCategory[\"FONT\"] = \"Font\";\n    NetworkCategory[\"IMG\"] = \"Img\";\n    NetworkCategory[\"MEDIA\"] = \"Media\";\n    NetworkCategory[\"WASM\"] = \"Wasm\";\n    NetworkCategory[\"OTHER\"] = \"Other\";\n})(NetworkCategory || (NetworkCategory = {}));\nexport function networkResourceCategory(request) {\n    const { mimeType } = request.args.data;\n    switch (request.args.data.resourceType) {\n        case \"Document\" /* Protocol.Network.ResourceType.Document */:\n            return NetworkCategory.DOC;\n        case \"Stylesheet\" /* Protocol.Network.ResourceType.Stylesheet */:\n            return NetworkCategory.CSS;\n        case \"Image\" /* Protocol.Network.ResourceType.Image */:\n            return NetworkCategory.IMG;\n        case \"Media\" /* Protocol.Network.ResourceType.Media */:\n            return NetworkCategory.MEDIA;\n        case \"Font\" /* Protocol.Network.ResourceType.Font */:\n            return NetworkCategory.FONT;\n        case \"Script\" /* Protocol.Network.ResourceType.Script */:\n        case \"WebSocket\" /* Protocol.Network.ResourceType.WebSocket */:\n            return NetworkCategory.JS;\n        default:\n            // FWIW, all the other (current) resourceTypes are:\n            //     TextTrack, XHR, Fetch, Prefetch, EventSource, Manifest, SignedExchange, Ping, CSPViolationReport, Preflight, Other\n            // Traces before Feb 2024 don't have `resourceType`.\n            // We'll keep mimeType logic for a couple years to avoid grey network requests for last year's traces.\n            return mimeType.startsWith('text/') ? NetworkCategory.DOC :\n                mimeType.endsWith('/css') ? NetworkCategory.CSS :\n                    mimeType.endsWith('javascript') ? NetworkCategory.JS :\n                        mimeType.startsWith('image/') ? NetworkCategory.IMG :\n                            mimeType.startsWith('audio/') || mimeType.startsWith('video/') ? NetworkCategory.MEDIA :\n                                mimeType.startsWith('font/') || mimeType.includes('font-') ? NetworkCategory.FONT :\n                                    mimeType === 'application/wasm' ? NetworkCategory.WASM :\n                                        // Ultimate fallback:\n                                        NetworkCategory.OTHER;\n    }\n}\nexport function colorForNetworkCategory(category) {\n    // TODO: These should align with `baseResourceTypeColors` from `NetworkWaterfallColumn`.\n    let cssVarName = '--app-color-system';\n    switch (category) {\n        case NetworkCategory.DOC:\n            cssVarName = '--app-color-doc';\n            break;\n        case NetworkCategory.JS:\n            cssVarName = '--app-color-scripting';\n            break;\n        case NetworkCategory.CSS:\n            cssVarName = '--app-color-css';\n            break;\n        case NetworkCategory.IMG:\n            cssVarName = '--app-color-image';\n            break;\n        case NetworkCategory.MEDIA:\n            cssVarName = '--app-color-media';\n            break;\n        case NetworkCategory.FONT:\n            cssVarName = '--app-color-font';\n            break;\n        case NetworkCategory.WASM:\n            cssVarName = '--app-color-wasm';\n            break;\n        case NetworkCategory.OTHER:\n        default:\n            cssVarName = '--app-color-system';\n            break;\n    }\n    return ThemeSupport.ThemeSupport.instance().getComputedValue(cssVarName);\n}\nexport function colorForNetworkRequest(request) {\n    const category = networkResourceCategory(request);\n    return colorForNetworkCategory(category);\n}\n// TODO: Consolidate our metric rating logic with the trace engine.\nexport const LCP_THRESHOLDS = [2500, 4000];\nexport const CLS_THRESHOLDS = [0.1, 0.25];\nexport const INP_THRESHOLDS = [200, 500];\nexport function rateMetric(value, thresholds) {\n    if (value <= thresholds[0]) {\n        return 'good';\n    }\n    if (value <= thresholds[1]) {\n        return 'needs-improvement';\n    }\n    return 'poor';\n}\n/**\n * Ensure to also include `metricValueStyles.css` when generating metric value elements.\n */\nexport function renderMetricValue(jslogContext, value, thresholds, format, options) {\n    const metricValueEl = document.createElement('span');\n    metricValueEl.classList.add('metric-value');\n    if (value === undefined) {\n        metricValueEl.classList.add('waiting');\n        metricValueEl.textContent = '-';\n        return metricValueEl;\n    }\n    metricValueEl.textContent = format(value);\n    const rating = rateMetric(value, thresholds);\n    metricValueEl.classList.add(rating);\n    // Ensure we log impressions of each section. We purposefully add this here\n    // because if we don't have field data (dealt with in the undefined branch\n    // above), we do not want to log an impression on it.\n    metricValueEl.setAttribute('jslog', `${VisualLogging.section(jslogContext)}`);\n    if (options?.dim) {\n        metricValueEl.classList.add('dim');\n    }\n    return metricValueEl;\n}\n/**\n * These methods format numbers with units in a way that allows the unit portion to be styled specifically.\n * They return a text string (the usual string resulting from formatting a number), and an HTMLSpanElement.\n * The element contains the formatted number, with a nested span element for the unit portion: `.unit`.\n *\n * This formatting is locale-aware. This is accomplished by utilizing the fact that UIStrings passthru\n * markdown link syntax: `[text that will be translated](not translated)`. The result\n * is a translated string like this: `[t̂éx̂t́ t̂h́ât́ ŵíl̂ĺ b̂é t̂ŕâńŝĺât́êd́](not translated)`. This is used within\n * insight components to localize markdown content. But here, we utilize it to parse a localized string.\n *\n * If the parsing fails, we fallback to i18n.TimeUtilities, and there will be no `.unit` element.\n *\n * As of this writing, our only locale where the unit comes before the number is `sw`, ex: `Sek {PH1}`.\n *\n    new Intl.NumberFormat('sw', {\n      style: 'unit',\n      unit: 'millisecond',\n      unitDisplay: 'narrow'\n    }).format(10); // 'ms 10'\n *\n */\nexport var NumberWithUnit;\n(function (NumberWithUnit) {\n    function parse(text) {\n        const startBracket = text.indexOf('[');\n        const endBracket = startBracket !== -1 && text.indexOf(']', startBracket);\n        const startParen = endBracket && text.indexOf('(', endBracket);\n        const endParen = startParen && text.indexOf(')', startParen);\n        if (!endParen || endParen === -1) {\n            return null;\n        }\n        const firstPart = text.substring(0, startBracket);\n        const unitPart = text.substring(startBracket + 1, endBracket);\n        const lastPart = text.substring(endParen + 1); // skips `]()`\n        return { firstPart, unitPart, lastPart };\n    }\n    NumberWithUnit.parse = parse;\n    function formatMicroSecondsAsSeconds(time) {\n        const element = document.createElement('span');\n        element.classList.add('number-with-unit');\n        const milliseconds = Platform.Timing.microSecondsToMilliSeconds(time);\n        const seconds = Platform.Timing.milliSecondsToSeconds(milliseconds);\n        const text = i18nString(UIStrings.fs, { PH1: (seconds).toFixed(2) });\n        const result = parse(text);\n        if (!result) {\n            // Some sort of problem with parsing, so fallback to not marking up the unit.\n            element.textContent = i18n.TimeUtilities.formatMicroSecondsAsSeconds(time);\n            return { text, element };\n        }\n        const { firstPart, unitPart, lastPart } = result;\n        if (firstPart) {\n            element.append(firstPart);\n        }\n        element.createChild('span', 'unit').textContent = unitPart;\n        if (lastPart) {\n            element.append(lastPart);\n        }\n        return { text: element.textContent ?? '', element };\n    }\n    NumberWithUnit.formatMicroSecondsAsSeconds = formatMicroSecondsAsSeconds;\n    function formatMicroSecondsAsMillisFixed(time, fractionDigits = 0) {\n        const element = document.createElement('span');\n        element.classList.add('number-with-unit');\n        const milliseconds = Platform.Timing.microSecondsToMilliSeconds(time);\n        const text = i18nString(UIStrings.fms, { PH1: (milliseconds).toFixed(fractionDigits) });\n        const result = parse(text);\n        if (!result) {\n            // Some sort of problem with parsing, so fallback to not marking up the unit.\n            element.textContent = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(time);\n            return { text, element };\n        }\n        const { firstPart, unitPart, lastPart } = result;\n        if (firstPart) {\n            element.append(firstPart);\n        }\n        element.createChild('span', 'unit').textContent = unitPart;\n        if (lastPart) {\n            element.append(lastPart);\n        }\n        return { text: element.textContent ?? '', element };\n    }\n    NumberWithUnit.formatMicroSecondsAsMillisFixed = formatMicroSecondsAsMillisFixed;\n})(NumberWithUnit || (NumberWithUnit = {}));\n//# sourceMappingURL=Utils.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport metricCardStyles from './metricCard.css.js';\nimport { renderCompareText, renderDetailedCompareText } from './MetricCompareStrings.js';\nimport metricValueStyles from './metricValueStyles.css.js';\nimport { CLS_THRESHOLDS, INP_THRESHOLDS, LCP_THRESHOLDS, rateMetric, renderMetricValue, } from './Utils.js';\nconst { html, nothing } = LitHtml;\nconst UIStrings = {\n    /**\n     * @description Label for a metric value that was measured in the local environment.\n     */\n    localValue: 'Local',\n    /**\n     * @description Label for the 75th percentile of a metric according to data collected from real users in the field.\n     */\n    field75thPercentile: 'Field 75th percentile',\n    /**\n     * @description Text label for values that are classified as \"good\".\n     */\n    good: 'Good',\n    /**\n     * @description Text label for values that are classified as \"needs improvement\".\n     */\n    needsImprovement: 'Needs improvement',\n    /**\n     * @description Text label for values that are classified as \"poor\".\n     */\n    poor: 'Poor',\n    /**\n     * @description Text label for a range of values that are less than or equal to a certain value.\n     * @example {500 ms} PH1\n     */\n    leqRange: '(≤{PH1})',\n    /**\n     * @description Text label for a range of values that are between two values.\n     * @example {500 ms} PH1\n     * @example {800 ms} PH2\n     */\n    betweenRange: '({PH1}-{PH2})',\n    /**\n     * @description Text label for a range of values that are greater than a certain value.\n     * @example {500 ms} PH1\n     */\n    gtRange: '(>{PH1})',\n    /**\n     * @description Text for a percentage value in the live metrics view.\n     * @example {13} PH1\n     */\n    percentage: '{PH1}%',\n    /**\n     * @description Text instructing the user to interact with the page because a user interaction is required to measure Interaction to Next Paint (INP).\n     */\n    interactToMeasure: 'Interact with the page to measure INP.',\n    /**\n     * @description Label for a tooltip that provides more details.\n     */\n    viewCardDetails: 'View card details',\n    /**\n     * @description Text block recommending a site developer look at their test environment followed by bullet points that highlight specific things about the test environment. \"local\" refers to the testing setup of the developer as opposed to the conditions experienced by real users.\n     */\n    considerTesting: 'Consider your local test conditions',\n    /**\n     * @description Text block explaining how network conditions can slow down the page load. \"network throttling\" refers to artificially slowing down the network to simulate slower network conditions.\n     */\n    recThrottlingLCP: 'Real users may experience longer page loads due to slower network conditions. Increasing network throttling will simulate slower network conditions.',\n    /**\n     * @description Text block explaining how CPU speed affects how long it takes the page to render after an interaction. \"CPU throttling\" refers to artificially slowing down the CPU to simulate slower devices.\n     */\n    recThrottlingINP: 'Real users may experience longer interactions due to slower CPU speeds. Increasing CPU throttling will simulate a slower device.',\n    /**\n     * @description Text block explaining how screen size can affect what content is rendered and therefore affects the LCP performance metric. \"viewport\" and \"screen size\" are synonymous in this case. \"LCP element\" refers to the page element that was the largest content on the page.\n     */\n    recViewportLCP: 'Screen size can influence what the LCP element is. Ensure you are testing common viewport sizes.',\n    /**\n     * @description Text block explaining viewport size can affect layout shifts. \"viewport\" and \"screen size\" are synonymous in this case. \"layout shifts\" refer to page instability where content moving around can create a jarring experience.\n     */\n    recViewportCLS: 'Screen size can influence what layout shifts happen. Ensure you are testing common viewport sizes.',\n    /**\n     * @description Text block explaining how a user interacts with the page can cause different amounts of layout shifts. \"layout shifts\" refer to page instability where content moving around can create a jarring experience.\n     */\n    recJourneyCLS: 'How a user interacts with the page can influence layout shifts. Ensure you are testing common interactions like scrolling the page.',\n    /**\n     * @description Text block explaining how a user interacts with the page can affect interaction delays. \"interaction delay\" refers to the delay between an interaction and the page rendering new content.\n     */\n    recJourneyINP: 'How a user interacts with the page influences interaction delays. Ensure you are testing common interactions.',\n    /**\n     * @description Text block explaining how dynamic content can affect LCP. \"LCP\" is a performance metric measuring when the largest content was rendered on the page. \"LCP element\" refers to the page element that was the largest content on the page.\n     */\n    recDynamicContentLCP: 'The LCP element can vary between page loads if content is dynamic.',\n    /**\n     * @description Text block explaining how dynamic content can affect layout shifts. \"layout shifts\" refer to page instability where content moving around can create a jarring experience.\n     */\n    recDynamicContentCLS: 'Dynamic content can influence what layout shifts happen.',\n    /**\n     * @description Column header for table cell values representing the phase/component/stage/section of a larger duration.\n     */\n    phase: 'Phase',\n    /**\n     * @description Column header for table cell values representing a phase duration (in milliseconds) that was measured in the developers local environment.\n     */\n    duration: 'Local duration (ms)',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/MetricCard.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class MetricCard extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    constructor() {\n        super();\n        this.#render();\n    }\n    #tooltipEl;\n    #data = {\n        metric: 'LCP',\n    };\n    set data(data) {\n        this.#data = data;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [metricCardStyles, metricValueStyles];\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #hideTooltipOnEsc = (event) => {\n        if (Platform.KeyboardUtilities.isEscKey(event)) {\n            event.stopPropagation();\n            this.#hideTooltip();\n        }\n    };\n    #hideTooltipOnMouseLeave(event) {\n        const target = event.target;\n        if (target?.hasFocus()) {\n            return;\n        }\n        this.#hideTooltip();\n    }\n    #hideTooltipOnFocusOut(event) {\n        const target = event.target;\n        if (target?.hasFocus()) {\n            return;\n        }\n        const relatedTarget = event.relatedTarget;\n        if (relatedTarget instanceof Node && target.contains(relatedTarget)) {\n            // `focusout` bubbles so we should get another event once focus leaves `relatedTarget`\n            return;\n        }\n        this.#hideTooltip();\n    }\n    #hideTooltip() {\n        const tooltipEl = this.#tooltipEl;\n        if (!tooltipEl) {\n            return;\n        }\n        document.body.removeEventListener('keydown', this.#hideTooltipOnEsc);\n        tooltipEl.style.removeProperty('left');\n        tooltipEl.style.removeProperty('visibility');\n        tooltipEl.style.removeProperty('display');\n        tooltipEl.style.removeProperty('transition-delay');\n    }\n    #showTooltip(delayMs = 0) {\n        const tooltipEl = this.#tooltipEl;\n        if (!tooltipEl || tooltipEl.style.visibility || tooltipEl.style.display) {\n            return;\n        }\n        document.body.addEventListener('keydown', this.#hideTooltipOnEsc);\n        tooltipEl.style.display = 'block';\n        tooltipEl.style.transitionDelay = `${Math.round(delayMs)}ms`;\n        const container = this.#data.tooltipContainer;\n        if (!container) {\n            return;\n        }\n        const containerBox = container.getBoundingClientRect();\n        tooltipEl.style.setProperty('--tooltip-container-width', `${Math.round(containerBox.width)}px`);\n        requestAnimationFrame(() => {\n            let offset = 0;\n            const tooltipBox = tooltipEl.getBoundingClientRect();\n            const rightDiff = tooltipBox.right - containerBox.right;\n            const leftDiff = tooltipBox.left - containerBox.left;\n            if (leftDiff < 0) {\n                offset = Math.round(leftDiff);\n            }\n            else if (rightDiff > 0) {\n                offset = Math.round(rightDiff);\n            }\n            tooltipEl.style.left = `calc(50% - ${offset}px)`;\n            tooltipEl.style.visibility = 'visible';\n        });\n    }\n    #getCompareThreshold() {\n        switch (this.#data.metric) {\n            case 'LCP':\n                return 1000;\n            case 'CLS':\n                return 0.1;\n            case 'INP':\n                return 200;\n        }\n    }\n    #getTitle() {\n        switch (this.#data.metric) {\n            case 'LCP':\n                return i18n.i18n.lockedString('Largest Contentful Paint (LCP)');\n            case 'CLS':\n                return i18n.i18n.lockedString('Cumulative Layout Shift (CLS)');\n            case 'INP':\n                return i18n.i18n.lockedString('Interaction to Next Paint (INP)');\n        }\n    }\n    #getThresholds() {\n        switch (this.#data.metric) {\n            case 'LCP':\n                return LCP_THRESHOLDS;\n            case 'CLS':\n                return CLS_THRESHOLDS;\n            case 'INP':\n                return INP_THRESHOLDS;\n        }\n    }\n    #getFormatFn() {\n        switch (this.#data.metric) {\n            case 'LCP':\n                return v => {\n                    const micro = (v * 1000);\n                    return i18n.TimeUtilities.formatMicroSecondsAsSeconds(micro);\n                };\n            case 'CLS':\n                return v => v === 0 ? '0' : v.toFixed(2);\n            case 'INP':\n                return v => i18n.TimeUtilities.preciseMillisToString(v);\n        }\n    }\n    #getLocalValue() {\n        const { localValue } = this.#data;\n        if (localValue === undefined) {\n            return;\n        }\n        return localValue;\n    }\n    #getFieldValue() {\n        let { fieldValue } = this.#data;\n        if (fieldValue === undefined) {\n            return;\n        }\n        if (typeof fieldValue === 'string') {\n            fieldValue = Number(fieldValue);\n        }\n        if (!Number.isFinite(fieldValue)) {\n            return;\n        }\n        return fieldValue;\n    }\n    /**\n     * Returns if the local value is better/worse/similar compared to field.\n     */\n    #getCompareRating() {\n        const localValue = this.#getLocalValue();\n        const fieldValue = this.#getFieldValue();\n        if (localValue === undefined || fieldValue === undefined) {\n            return;\n        }\n        const thresholds = this.#getThresholds();\n        const localRating = rateMetric(localValue, thresholds);\n        const fieldRating = rateMetric(fieldValue, thresholds);\n        // It's not worth highlighting a significant difference when both #s\n        // are rated \"good\"\n        if (localRating === 'good' && fieldRating === 'good') {\n            return 'similar';\n        }\n        const compareThreshold = this.#getCompareThreshold();\n        if (localValue - fieldValue > compareThreshold) {\n            return 'worse';\n        }\n        if (fieldValue - localValue > compareThreshold) {\n            return 'better';\n        }\n        return 'similar';\n    }\n    #renderCompareString() {\n        const localValue = this.#getLocalValue();\n        if (localValue === undefined) {\n            if (this.#data.metric === 'INP') {\n                return html `\n          <div class=\"compare-text\">${i18nString(UIStrings.interactToMeasure)}</div>\n        `;\n            }\n            return LitHtml.nothing;\n        }\n        const compare = this.#getCompareRating();\n        const rating = rateMetric(localValue, this.#getThresholds());\n        const valueEl = renderMetricValue(this.#getMetricValueLogContext(true), localValue, this.#getThresholds(), this.#getFormatFn(), { dim: true });\n        // clang-format off\n        return html `\n      <div class=\"compare-text\">\n        ${renderCompareText({\n            metric: i18n.i18n.lockedString(this.#data.metric),\n            rating,\n            compare,\n            localValue: valueEl,\n        })}\n      </div>\n    `;\n        // clang-format on\n    }\n    #renderEnvironmentRecommendations() {\n        const compare = this.#getCompareRating();\n        if (!compare || compare === 'similar') {\n            return LitHtml.nothing;\n        }\n        const recs = [];\n        const metric = this.#data.metric;\n        // Recommend using throttling\n        if (metric === 'LCP' && compare === 'better') {\n            recs.push(i18nString(UIStrings.recThrottlingLCP));\n        }\n        else if (metric === 'INP' && compare === 'better') {\n            recs.push(i18nString(UIStrings.recThrottlingINP));\n        }\n        // Recommend trying new viewport sizes\n        if (metric === 'LCP') {\n            recs.push(i18nString(UIStrings.recViewportLCP));\n        }\n        else if (metric === 'CLS') {\n            recs.push(i18nString(UIStrings.recViewportCLS));\n        }\n        // Recommend trying new user journeys\n        if (metric === 'CLS') {\n            recs.push(i18nString(UIStrings.recJourneyCLS));\n        }\n        else if (metric === 'INP') {\n            recs.push(i18nString(UIStrings.recJourneyINP));\n        }\n        // Recommend accounting for dynamic content\n        if (metric === 'LCP') {\n            recs.push(i18nString(UIStrings.recDynamicContentLCP));\n        }\n        else if (metric === 'CLS') {\n            recs.push(i18nString(UIStrings.recDynamicContentCLS));\n        }\n        if (!recs.length) {\n            return LitHtml.nothing;\n        }\n        return html `\n      <details class=\"environment-recs\">\n        <summary>${i18nString(UIStrings.considerTesting)}</summary>\n        <ul class=\"environment-recs-list\">${recs.map(rec => html `<li>${rec}</li>`)}</ul>\n      </details>\n    `;\n    }\n    #getMetricValueLogContext(isLocal) {\n        return `timeline.landing.${isLocal ? 'local' : 'field'}-${this.#data.metric.toLowerCase()}`;\n    }\n    #renderDetailedCompareString() {\n        const localValue = this.#getLocalValue();\n        if (localValue === undefined) {\n            if (this.#data.metric === 'INP') {\n                return html `\n          <div class=\"detailed-compare-text\">${i18nString(UIStrings.interactToMeasure)}</div>\n        `;\n            }\n            return LitHtml.nothing;\n        }\n        const localRating = rateMetric(localValue, this.#getThresholds());\n        const fieldValue = this.#getFieldValue();\n        const fieldRating = fieldValue !== undefined ? rateMetric(fieldValue, this.#getThresholds()) : undefined;\n        const localValueEl = renderMetricValue(this.#getMetricValueLogContext(true), localValue, this.#getThresholds(), this.#getFormatFn(), { dim: true });\n        const fieldValueEl = renderMetricValue(this.#getMetricValueLogContext(false), fieldValue, this.#getThresholds(), this.#getFormatFn(), { dim: true });\n        // clang-format off\n        return html `\n      <div class=\"detailed-compare-text\">${renderDetailedCompareText({\n            metric: i18n.i18n.lockedString(this.#data.metric),\n            localRating,\n            fieldRating,\n            localValue: localValueEl,\n            fieldValue: fieldValueEl,\n            percent: this.#getPercentLabelForRating(localRating),\n        })}</div>\n    `;\n        // clang-format on\n    }\n    #bucketIndexForRating(rating) {\n        switch (rating) {\n            case 'good':\n                return 0;\n            case 'needs-improvement':\n                return 1;\n            case 'poor':\n                return 2;\n        }\n    }\n    #getBarWidthForRating(rating) {\n        const histogram = this.#data.histogram;\n        const density = histogram?.[this.#bucketIndexForRating(rating)].density || 0;\n        const percent = Math.round(density * 100);\n        return `${percent}%`;\n    }\n    #getPercentLabelForRating(rating) {\n        const histogram = this.#data.histogram;\n        if (histogram === undefined) {\n            return '-';\n        }\n        // A missing density value should be interpreted as 0%\n        const density = histogram[this.#bucketIndexForRating(rating)].density || 0;\n        const percent = Math.round(density * 100);\n        return i18nString(UIStrings.percentage, { PH1: percent });\n    }\n    #renderFieldHistogram() {\n        const fieldEnabled = CrUXManager.CrUXManager.instance().getConfigSetting().get().enabled;\n        const format = this.#getFormatFn();\n        const thresholds = this.#getThresholds();\n        // clang-format off\n        const goodLabel = html `\n      <div class=\"bucket-label\">\n        <span>${i18nString(UIStrings.good)}</span>\n        <span class=\"bucket-range\">${i18nString(UIStrings.leqRange, { PH1: format(thresholds[0]) })}</span>\n      </div>\n    `;\n        const needsImprovementLabel = html `\n      <div class=\"bucket-label\">\n        <span>${i18nString(UIStrings.needsImprovement)}</span>\n        <span class=\"bucket-range\">${i18nString(UIStrings.betweenRange, { PH1: format(thresholds[0]), PH2: format(thresholds[1]) })}</span>\n      </div>\n    `;\n        const poorLabel = html `\n      <div class=\"bucket-label\">\n        <span>${i18nString(UIStrings.poor)}</span>\n        <span class=\"bucket-range\">${i18nString(UIStrings.gtRange, { PH1: format(thresholds[1]) })}</span>\n      </div>\n    `;\n        // clang-format on\n        if (!fieldEnabled) {\n            return html `\n        <div class=\"bucket-summaries\">\n          ${goodLabel}\n          ${needsImprovementLabel}\n          ${poorLabel}\n        </div>\n      `;\n        }\n        // clang-format off\n        return html `\n      <div class=\"bucket-summaries histogram\">\n        ${goodLabel}\n        <div class=\"histogram-bar good-bg\" style=\"width: ${this.#getBarWidthForRating('good')}\"></div>\n        <div class=\"histogram-percent\">${this.#getPercentLabelForRating('good')}</div>\n        ${needsImprovementLabel}\n        <div class=\"histogram-bar needs-improvement-bg\" style=\"width: ${this.#getBarWidthForRating('needs-improvement')}\"></div>\n        <div class=\"histogram-percent\">${this.#getPercentLabelForRating('needs-improvement')}</div>\n        ${poorLabel}\n        <div class=\"histogram-bar poor-bg\" style=\"width: ${this.#getBarWidthForRating('poor')}\"></div>\n        <div class=\"histogram-percent\">${this.#getPercentLabelForRating('poor')}</div>\n      </div>\n    `;\n        // clang-format on\n    }\n    #renderPhaseTable() {\n        const localValue = this.#getLocalValue();\n        const phases = this.#data.phases;\n        if (!phases || !localValue) {\n            return LitHtml.nothing;\n        }\n        return html `\n      <hr class=\"divider\">\n      <div class=\"phase-table\" role=\"table\">\n        <div class=\"phase-table-row phase-table-header-row\" role=\"row\">\n          <div role=\"columnheader\">${i18nString(UIStrings.phase)}</div>\n          <div role=\"columnheader\">${i18nString(UIStrings.duration)}</div>\n        </div>\n        ${phases.map(phase => html `\n          <div class=\"phase-table-row\" role=\"row\">\n            <div role=\"cell\">${phase[0]}</div>\n            <div role=\"cell\">${Math.round(phase[1])}</div>\n          </div>\n        `)}\n      </div>\n    `;\n    }\n    #render = () => {\n        const fieldEnabled = CrUXManager.CrUXManager.instance().getConfigSetting().get().enabled;\n        // clang-format off\n        const output = html `\n      <div class=\"metric-card\">\n        <h3 class=\"title\">\n          ${this.#getTitle()}\n        </h3>\n        <div tabindex=\"0\" class=\"metric-values-section\"\n          @mouseenter=${() => this.#showTooltip(500)}\n          @mouseleave=${this.#hideTooltipOnMouseLeave}\n          @focusin=${this.#showTooltip}\n          @focusout=${this.#hideTooltipOnFocusOut}\n          aria-describedby=\"tooltip\"\n        >\n          <div class=\"metric-source-block\">\n            <div class=\"metric-source-value\" id=\"local-value\">${renderMetricValue(this.#getMetricValueLogContext(true), this.#getLocalValue(), this.#getThresholds(), this.#getFormatFn())}</div>\n            ${fieldEnabled ? html `<div class=\"metric-source-label\">${i18nString(UIStrings.localValue)}</div>` : nothing}\n          </div>\n          ${fieldEnabled ? html `\n            <div class=\"metric-source-block\">\n              <div class=\"metric-source-value\" id=\"field-value\">${renderMetricValue(this.#getMetricValueLogContext(false), this.#getFieldValue(), this.#getThresholds(), this.#getFormatFn())}</div>\n              <div class=\"metric-source-label\">${i18nString(UIStrings.field75thPercentile)}</div>\n            </div>\n          ` : nothing}\n          <div\n            id=\"tooltip\"\n            class=\"tooltip\"\n            role=\"tooltip\"\n            aria-label=${i18nString(UIStrings.viewCardDetails)}\n            on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n            this.#tooltipEl = node;\n        })}\n          >\n            ${this.#renderDetailedCompareString()}\n            <hr class=\"divider\">\n            ${this.#renderFieldHistogram()}\n            ${this.#renderPhaseTable()}\n          </div>\n        </div>\n        ${fieldEnabled ? html `<hr class=\"divider\">` : nothing}\n        ${this.#renderCompareString()}\n        ${this.#renderEnvironmentRecommendations()}\n        <slot name=\"extra-info\"></slot>\n      </div>\n    `;\n        LitHtml.render(output, this.#shadow, { host: this });\n    };\n}\ncustomElements.define('devtools-metric-card', MetricCard);\n//# sourceMappingURL=MetricCard.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.container {\n  /* stylelint-disable-next-line property-no-unknown */\n  container-type: inline-size;\n  height: 100%;\n  font-size: var(--sys-typescale-body4-size);\n  line-height: var(--sys-typescale-body4-line-height);\n  font-weight: var(--ref-typeface-weight-regular);\n  user-select: text;\n}\n\n.live-metrics-view {\n  --min-main-area-size: 60%;\n\n  background-color: var(--sys-color-cdt-base-container);\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: 100%;\n}\n\n.live-metrics,\n.next-steps {\n  padding: 16px;\n  height: 100%;\n  overflow-y: auto;\n  box-sizing: border-box;\n}\n\n.live-metrics {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.next-steps {\n  flex: 0 0 336px;\n  box-sizing: border-box;\n  border: none;\n  border-left: 1px solid var(--sys-color-divider);\n}\n\n/* stylelint-disable-next-line at-rule-no-unknown */\n@container (max-width: 650px) {\n  .live-metrics-view {\n    flex-direction: column;\n  }\n\n  .next-steps {\n    flex-basis: 40%;\n    border: none;\n    border-top: 1px solid var(--sys-color-divider);\n  }\n}\n\n.metric-cards {\n  display: grid;\n  gap: 16px;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  width: 100%;\n}\n\n.section-title {\n  font-size: var(--sys-typescale-headline4-size);\n  line-height: var(--sys-typescale-headline4-line-height);\n  font-weight: var(--ref-typeface-weight-medium);\n  margin: 0;\n  margin-bottom: 10px;\n}\n\n.settings-card {\n  border-radius: var(--sys-shape-corner-small);\n  padding: 14px 16px 16px;\n  background-color: var(--sys-color-surface3);\n  margin-bottom: 16px;\n}\n\n.record-action-card {\n  border-radius: var(--sys-shape-corner-small);\n  padding: 12px 16px 12px 12px;\n  background-color: var(--sys-color-surface3);\n  margin-bottom: 16px;\n}\n\n.card-title {\n  font-size: var(--sys-typescale-headline5-size);\n  line-height: var(--sys-typescale-headline5-line-height);\n  font-weight: var(--ref-typeface-weight-medium);\n  margin: 0;\n}\n\n.settings-card .card-title {\n  margin-bottom: 4px;\n}\n\n.device-toolbar-description {\n  margin-bottom: 12px;\n  display: flex;\n}\n\n.network-cache-setting {\n  display: inline-block;\n  max-width: max-content;\n}\n\n.throttling-recommendation-value {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.related-info {\n  text-wrap: nowrap;\n  margin-top: 8px;\n  display: flex;\n}\n\n.related-info-label {\n  font-weight: var(--ref-typeface-weight-medium);\n  margin-right: 4px;\n}\n\n.related-info-link {\n  background-color: var(--sys-color-cdt-base-container);\n  border-radius: 2px;\n  padding: 0 2px;\n  min-width: 0;\n}\n\n.logs-section {\n  margin-top: 24px;\n  display: flex;\n  flex-direction: column;\n  flex: 1 0 300px;\n  overflow: auto;\n  max-height: max-content;\n\n  --app-color-toolbar-background: transparent;\n}\n\n.logs-section-header {\n  display: flex;\n  align-items: center;\n}\n\n.interactions-clear {\n  margin-left: 4px;\n  vertical-align: sub;\n}\n\n.log {\n  padding: 0;\n  margin: 0;\n  overflow: auto;\n}\n\n.log-item {\n  border: none;\n  border-bottom: 1px solid var(--sys-color-divider);\n\n  &.highlight {\n    animation: highlight-fadeout 2s;\n  }\n}\n\n.interaction {\n  --phase-table-margin: 120px;\n  --details-indicator-width: 18px;\n\n  summary {\n    display: flex;\n    align-items: center;\n    padding: 7px 0;\n\n    &::before {\n      content: \" \";\n      height: 14px;\n      width: var(--details-indicator-width);\n      mask-image: var(--image-file-triangle-right);\n      background-color: var(--icon-default);\n      flex-shrink: 0;\n    }\n  }\n\n  details[open] summary::before {\n    mask-image: var(--image-file-triangle-down);\n  }\n}\n\n.interaction-type {\n  font-weight: var(--ref-typeface-weight-medium);\n  width: calc(var(--phase-table-margin) - var(--details-indicator-width));\n  flex-shrink: 0;\n}\n\n.interaction-inp-chip {\n  background-color: var(--sys-color-yellow-bright);\n  color: var(--sys-color-on-yellow);\n  padding: 0 2px;\n}\n\n.interaction-node {\n  flex-grow: 1;\n  margin-right: 32px;\n  min-width: 0;\n}\n\n.interaction-info {\n  width: var(--sys-typescale-body4-line-height);\n  height: var(--sys-typescale-body4-line-height);\n  margin-right: 6px;\n}\n\n.interaction-duration {\n  text-align: end;\n  width: max-content;\n  flex-shrink: 0;\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.layout-shift {\n  display: flex;\n  align-items: flex-start;\n}\n\n.layout-shift-score {\n  margin-right: 16px;\n  padding: 7px 0;\n  width: 150px;\n  box-sizing: border-box;\n}\n\n.layout-shift-nodes {\n  flex: 1;\n  min-width: 0;\n}\n\n.layout-shift-node {\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding: 7px 0;\n\n  &:last-child {\n    border: none;\n  }\n}\n\n.record-action {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  gap: 8px;\n}\n\n.shortcut-label {\n  width: max-content;\n  flex-shrink: 0;\n}\n\n.field-data-option {\n  margin: 8px 0;\n  max-width: 100%;\n}\n\n.field-setup-buttons {\n  margin-top: 14px;\n}\n\n.field-data-message {\n  margin-bottom: 12px;\n}\n\n.collection-period-range {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\nx-link { /* stylelint-disable-line selector-type-no-unknown */\n  color: var(--sys-color-primary);\n  text-decoration-line: underline;\n}\n\n.data-descriptions {\n  margin-top: 10px;\n  padding-left: 12px;\n  border-left: 1px solid var(--sys-color-divider);\n}\n\n.environment-option {\n  display: flex;\n  align-items: center;\n  margin-top: 8px;\n}\n\n.setting-hint {\n  margin-left: 6px;\n  vertical-align: bottom;\n  height: 18px;\n  width: 18px;\n}\n\n.environment-recs-title {\n  margin-top: 12px;\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.environment-recs-list {\n  margin: 0;\n  padding-left: 20px;\n}\n\n.environment-rec {\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.link-to-log {\n  padding: unset;\n  background: unset;\n  border: unset;\n  font: inherit;\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n@keyframes highlight-fadeout {\n  from {\n    background-color: var(--sys-color-yellow-container);\n  }\n\n  to {\n    background-color: transparent;\n  }\n}\n\n.phase-table {\n  border-top: 1px solid var(--sys-color-divider);\n  padding: 7px 0;\n  margin-left: var(--phase-table-margin);\n}\n\n.phase-table-row {\n  display: flex;\n  justify-content: space-between;\n}\n\n.phase-table-header-row {\n  font-weight: var(--ref-typeface-weight-medium);\n  margin-bottom: 4px;\n}\n\n/*# sourceURL=liveMetricsView.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/icon_button/icon_button.js';\nimport './CPUThrottlingSelector.js';\nimport './FieldSettingsDialog.js';\nimport './NetworkThrottlingSelector.js';\nimport '../../../ui/components/menus/menus.js';\nimport './MetricCard.js';\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as CrUXManager from '../../../models/crux-manager/crux-manager.js';\nimport * as EmulationModel from '../../../models/emulation/emulation.js';\nimport * as LiveMetrics from '../../../models/live-metrics/live-metrics.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LegacyWrapper from '../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../../mobile_throttling/mobile_throttling.js';\nimport liveMetricsViewStyles from './liveMetricsView.css.js';\nimport metricValueStyles from './metricValueStyles.css.js';\nimport { CLS_THRESHOLDS, INP_THRESHOLDS, renderMetricValue } from './Utils.js';\nconst { html, nothing, Directives } = LitHtml;\nconst { until } = Directives;\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\nconst DEVICE_OPTION_LIST = ['AUTO', ...CrUXManager.DEVICE_SCOPE_LIST];\nconst RTT_COMPARISON_THRESHOLD = 200;\nconst RTT_MINIMUM = 60;\nconst UIStrings = {\n    /**\n     * @description Title of a view that shows performance metrics from the local environment and field metrics collected from real users in the field.\n     */\n    localAndFieldMetrics: 'Local and field metrics',\n    /**\n     * @description Title of a view that shows performance metrics from the local environment.\n     */\n    localMetrics: 'Local metrics',\n    /**\n     * @description Accessible label for a section that logs user interactions and layout shifts. A layout shift is an event that shifts content in the layout of the page causing a jarring experience for the user.\n     */\n    eventLogs: 'Interaction and layout shift logs section',\n    /**\n     * @description Title of a section that lists user interactions.\n     */\n    interactions: 'Interactions',\n    /**\n     * @description Title of a section that lists layout shifts. A layout shift is an event that shifts content in the layout of the page causing a jarring experience for the user.\n     */\n    layoutShifts: 'Layout shifts',\n    /**\n     * @description Title of a sidebar section that shows options for the user to take after using the main view.\n     */\n    nextSteps: 'Next steps',\n    /**\n     * @description Title of a section that shows options for how real user data in the field should be fetched.\n     */\n    fieldData: 'Field data',\n    /**\n     * @description Title of a section that shows settings to control the developers local testing environment.\n     */\n    environmentSettings: 'Environment settings',\n    /**\n     * @description Label for an select box that selects which device type field data be shown for (e.g. desktop/mobile/all devices/etc).\n     * @example {Mobile} PH1\n     */\n    showFieldDataForDevice: 'Show field data for device type: {PH1}',\n    /**\n     * @description Text indicating that there is not enough data to report real user statistics.\n     */\n    notEnoughData: 'Not enough data',\n    /**\n     * @description Label for a text block that describes the network connections of real users.\n     * @example {75th percentile is similar to Slow 4G throttling} PH1\n     */\n    network: 'Network: {PH1}',\n    /**\n     * @description Label for an select box that selects which device type field data be shown for (e.g. desktop/mobile/all devices/etc).\n     * @example {Mobile} PH1\n     */\n    device: 'Device: {PH1}',\n    /**\n     * @description Label for an option to select all device form factors.\n     */\n    allDevices: 'All devices',\n    /**\n     * @description Label for an option to select the desktop form factor.\n     */\n    desktop: 'Desktop',\n    /**\n     * @description Label for an option to select the mobile form factor.\n     */\n    mobile: 'Mobile',\n    /**\n     * @description Label for an option to select the tablet form factor.\n     */\n    tablet: 'Tablet',\n    /**\n     * @description Label for an option to to automatically select the form factor. The automatic selection will be displayed in PH1.\n     * @example {Desktop} PH1\n     */\n    auto: 'Auto ({PH1})',\n    /**\n     * @description Label for an option that is loading.\n     * @example {Desktop} PH1\n     */\n    loadingOption: '{PH1} - Loading…',\n    /**\n     * @description Label for an option that does not have enough data and the user should ignore.\n     * @example {Desktop} PH1\n     */\n    needsDataOption: '{PH1} - No data',\n    /**\n     * @description Label for an option that selects the page's specific URL as opposed to it's entire origin/domain.\n     */\n    urlOption: 'URL',\n    /**\n     * @description Label for an option that selects the page's entire origin/domain as opposed to it's specific URL.\n     */\n    originOption: 'Origin',\n    /**\n     * @description Label for an option that selects the page's specific URL as opposed to it's entire origin/domain.\n     * @example {https://example.com/} PH1\n     */\n    urlOptionWithKey: 'URL: {PH1}',\n    /**\n     * @description Label for an option that selects the page's entire origin/domain as opposed to it's specific URL.\n     * @example {https://example.com} PH1\n     */\n    originOptionWithKey: 'Origin: {PH1}',\n    /**\n     * @description Label for an combo-box that indicates if field data should be taken from the page's URL or it's origin/domain.\n     * @example {Origin: https://example.com} PH1\n     */\n    showFieldDataForPage: 'Show field data for {PH1}',\n    /**\n     * @description Tooltip text explaining that real user connections are similar to a test environment with no throttling. \"throttling\" is when the network is intentionally slowed down to simulate a slower connection.\n     */\n    tryDisablingThrottling: '75th percentile is too fast to simulate with throttling',\n    /**\n     * @description Tooltip text explaining that real user connections are similar to a specif network throttling setup. \"throttling\" is when the network is intentionally slowed down to simulate a slower connection.\n     * @example {Slow 4G} PH1\n     */\n    tryUsingThrottling: '75th percentile is similar to {PH1} throttling',\n    /**\n     * @description Text block listing what percentage of real users are on different device form factors.\n     * @example {60%} PH1\n     * @example {30%} PH2\n     */\n    percentDevices: '{PH1}% mobile, {PH2}% desktop',\n    /**\n     * @description Text block explaining how to simulate different mobile and desktop devices. The placeholder at the end will be a link with the text \"simulate different devices\" translated separately.\n     * @example {simulate different devices} PH1\n     */\n    useDeviceToolbar: 'Use the device toolbar to {PH1}.',\n    /**\n     * @description Text for a link that is inserted inside a larger text block that explains how to simulate different mobile and desktop devices.\n     */\n    simulateDifferentDevices: 'simulate different devices',\n    /**\n     * @description Tooltip text that explains how disabling the network cache can simulate the network connections of users that are visiting a page for the first time.\n     */\n    networkCacheExplanation: 'Disabling the network cache will simulate a network experience similar to a first time visitor.',\n    /**\n     * @description Text label for a checkbox that controls if the network cache is disabled.\n     */\n    disableNetworkCache: 'Disable network cache',\n    /**\n     * @description Text label for a link to the Largest Contentful Paint (LCP) related page element. This element represents the largest content on the page. \"LCP\" should not be translated.\n     */\n    lcpElement: 'LCP element',\n    /**\n     * @description Text label for a button that reveals the user interaction associated with the Interaction to Next Paint (INP) performance metric. \"INP\" should not be translated.\n     */\n    inpInteractionLink: 'INP interaction',\n    /**\n     * @description Text label for a button that reveals the cluster of layout shift events that affected the page content the most. A cluster is a group of layout shift events that occur in quick succession.\n     */\n    worstCluster: 'Worst cluster',\n    /**\n     * @description [ICU Syntax] Text content of a button that reveals the cluster of layout shift events that affected the page content the most. A layout shift is an event that shifts content in the layout of the page causing a jarring experience for the user. This text will indicate how many shifts were in the cluster.\n     * @example {3} shiftCount\n     */\n    numShifts: `{shiftCount, plural,\n    =1 {{shiftCount} shift}\n    other {{shiftCount} shifts}\n  }`,\n    /**\n     * @description Label for a a range of dates that represents the period of time a set of field data is collected from.\n     * @example {Oct 1, 2024 - Nov 1, 2024} PH1\n     */\n    collectionPeriod: 'Collection period: {PH1}',\n    /**\n     * @description Text showing a range of dates meant to represent a period of time.\n     * @example {Oct 1, 2024} PH1\n     * @example {Nov 1, 2024} PH2\n     */\n    dateRange: '{PH1} - {PH2}',\n    /**\n     * @description Text block telling the user to see how performance metrics measured on their local computer compare to data collected from real users. PH1 will be a link to more information about the Chrome UX Report and the link text will be untranslated because it is a product name.\n     * @example {Chrome UX Report} PH1\n     */\n    seeHowYourLocalMetricsCompare: 'See how your local metrics compare to real user data in the {PH1}.',\n    /**\n     * @description Text block explaining that local metrics are collected from the local environment used to load the page being tested. PH1 will be a link with text that will be translated separately.\n     * @example {local metrics} PH1\n     */\n    theLocalMetricsAre: 'The {PH1} are captured from the current page using your network connection and device.',\n    /**\n     * @description Link text that is inserted in another translated text block that describes performance metrics measured in the developers local environment.\n     */\n    localMetricsLink: 'local metrics',\n    /**\n     * @description Text block explaining that field metrics are measured by real users using many different connections and hardware over a 28 period. PH1 will be a link with text that will be translated separately.\n     * @example {field data} PH1\n     */\n    theFieldMetricsAre: 'The {PH1} is measured by real users using many different network connections and devices.',\n    /**\n     * @description Link text that is inserted in another translated text block that describes performance data measured by real users in the field.\n     */\n    fieldDataLink: 'field data',\n    /**\n     * @description Tooltip text explaining that this user interaction was ignored when calculating the Interaction to Next Paint (INP) metric because the interaction delay fell beyond the 98th percentile of interaction delays on this page. \"INP\" is an acronym and should not be translated.\n     */\n    interactionExcluded: 'INP is calculated using the 98th percentile of interaction delays, so some interaction delays may be larger than the INP value.',\n    /**\n     * @description Tooltip for a button that will remove everything from the currently selected log.\n     */\n    clearCurrentLog: 'Clear the current log',\n    /**\n     * @description Title for a section that contains more information about real user environments. This message is meant to prompt the user to understand the conditions experienced by real users.\n     */\n    realUserEnvironments: 'Real user environments',\n    /**\n     * @description Title for a page load phase that measures the time between when the page load starts and the time when the first byte of the initial document is downloaded.\n     */\n    timeToFirstByte: 'Time to first byte',\n    /**\n     * @description Title for a page load phase that measures the time between when the first byte of the initial document is downloaded and when the request for the largest image content starts.\n     */\n    resourceLoadDelay: 'Resource load delay',\n    /**\n     * @description Title for a page load phase that measures the time between when the request for the largest image content starts and when it finishes.\n     */\n    resourceLoadDuration: 'Resource load duration',\n    /**\n     * @description Title for a page load phase that measures the time between when the request for the largest image content finishes and when the largest image element is rendered on the page.\n     */\n    elementRenderDelay: 'Element render delay',\n    /**\n     * @description Title for a phase during a user interaction that measures the time between when the interaction starts and when the browser starts running interaction handlers.\n     */\n    inputDelay: 'Input delay',\n    /**\n     * @description Title for a phase during a user interaction that measures the time between when the browser starts running interaction handlers and when the browser finishes running interaction handlers.\n     */\n    processingDuration: 'Processing duration',\n    /**\n     * @description Title for a phase during a user interaction that measures the time between when the browser finishes running interaction handlers and when the browser renders the next visual frame that shows the result of the interaction.\n     */\n    presentationDelay: 'Presentation delay',\n    /**\n     * @description Tooltip text for a status chip in a list of user interactions that indicates if the associated interaction is the interaction used in the Interaction to Next Paint (INP) performance metric because it's interaction delay is at the 98th percentile.\n     */\n    inpInteraction: 'The INP interaction is at the 98th percentile of interaction delays.',\n    /**\n     * @description Tooltip text for a button that reveals the user interaction associated with the Interaction to Next Paint (INP) performance metric.\n     */\n    showInpInteraction: 'Go to the INP interaction.',\n    /**\n     * @description Tooltip text for a button that reveals the cluster of layout shift events that affected the page content the most. A layout shift is an event that shifts content in the layout of the page causing a jarring experience for the user. A cluster is a group of layout shift events that occur in quick succession.\n     */\n    showClsCluster: 'Go to worst layout shift cluster.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/LiveMetricsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class LiveMetricsView extends LegacyWrapper.LegacyWrapper.WrappableComponent {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #lcpValue;\n    #clsValue;\n    #inpValue;\n    #interactions = new Map();\n    #layoutShifts = [];\n    #cruxPageResult;\n    #fieldDeviceOption = 'AUTO';\n    #fieldPageScope = 'url';\n    #toggleRecordAction;\n    #recordReloadAction;\n    #logsEl;\n    #tooltipContainerEl;\n    #interactionsListEl;\n    #layoutShiftsListEl;\n    #listIsScrolling = false;\n    constructor() {\n        super();\n        this.#toggleRecordAction = UI.ActionRegistry.ActionRegistry.instance().getAction('timeline.toggle-recording');\n        this.#recordReloadAction = UI.ActionRegistry.ActionRegistry.instance().getAction('timeline.record-reload');\n    }\n    #onMetricStatus(event) {\n        this.#lcpValue = event.data.lcp;\n        this.#clsValue = event.data.cls;\n        this.#inpValue = event.data.inp;\n        const hasNewLS = this.#layoutShifts.length < event.data.layoutShifts.length;\n        this.#layoutShifts = [...event.data.layoutShifts];\n        const hasNewInteraction = this.#interactions.size < event.data.interactions.size;\n        this.#interactions = new Map(event.data.interactions);\n        const renderPromise = ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n        if (hasNewInteraction && this.#interactionsListEl) {\n            this.#keepScrolledToBottom(renderPromise, this.#interactionsListEl);\n        }\n        if (hasNewLS && this.#layoutShiftsListEl) {\n            this.#keepScrolledToBottom(renderPromise, this.#layoutShiftsListEl);\n        }\n    }\n    #keepScrolledToBottom(renderPromise, listEl) {\n        if (!listEl.checkVisibility()) {\n            return;\n        }\n        const isAtBottom = Math.abs(listEl.scrollHeight - listEl.clientHeight - listEl.scrollTop) <= 1;\n        // We shouldn't scroll to the bottom if the list wasn't already at the bottom.\n        // However, if a new item appears while the animation for a previous item is still going,\n        // then we should \"finish\" the scroll by sending another scroll command even if the scroll position\n        // the element hasn't scrolled all the way to the bottom yet.\n        if (!isAtBottom && !this.#listIsScrolling) {\n            return;\n        }\n        void renderPromise.then(() => {\n            requestAnimationFrame(() => {\n                this.#listIsScrolling = true;\n                listEl.addEventListener('scrollend', () => {\n                    this.#listIsScrolling = false;\n                }, { once: true });\n                listEl.scrollTo({ top: listEl.scrollHeight, behavior: 'smooth' });\n            });\n        });\n    }\n    #onFieldDataChanged(event) {\n        this.#cruxPageResult = event.data;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #onEmulationChanged() {\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    async #refreshFieldDataForCurrentPage() {\n        this.#cruxPageResult = await CrUXManager.CrUXManager.instance().getFieldDataForCurrentPage();\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #getSelectedFieldResponse() {\n        const deviceScope = this.#fieldDeviceOption === 'AUTO' ? this.#getAutoDeviceScope() : this.#fieldDeviceOption;\n        return this.#cruxPageResult?.[`${this.#fieldPageScope}-${deviceScope}`];\n    }\n    #getFieldMetricData(fieldMetric) {\n        return this.#getSelectedFieldResponse()?.record.metrics[fieldMetric];\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [liveMetricsViewStyles, metricValueStyles];\n        const liveMetrics = LiveMetrics.LiveMetrics.instance();\n        liveMetrics.addEventListener(\"status\" /* LiveMetrics.Events.STATUS */, this.#onMetricStatus, this);\n        const cruxManager = CrUXManager.CrUXManager.instance();\n        cruxManager.addEventListener(\"field-data-changed\" /* CrUXManager.Events.FIELD_DATA_CHANGED */, this.#onFieldDataChanged, this);\n        const emulationModel = this.#deviceModeModel();\n        emulationModel?.addEventListener(\"Updated\" /* EmulationModel.DeviceModeModel.Events.UPDATED */, this.#onEmulationChanged, this);\n        if (cruxManager.getConfigSetting().get().enabled) {\n            void this.#refreshFieldDataForCurrentPage();\n        }\n        this.#lcpValue = liveMetrics.lcpValue;\n        this.#clsValue = liveMetrics.clsValue;\n        this.#inpValue = liveMetrics.inpValue;\n        this.#interactions = liveMetrics.interactions;\n        this.#layoutShifts = liveMetrics.layoutShifts;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #deviceModeModel() {\n        // This is wrapped in a try/catch because in some DevTools entry points\n        // (such as worker_app.ts) the Emulation panel is not included and as such\n        // the below code fails; it tries to instantiate the model which requires\n        // reading the value of a setting which has not been registered.\n        // In this case, we fallback to 'ALL'. See crbug.com/361515458 for an\n        // example bug that this resolves.\n        try {\n            return EmulationModel.DeviceModeModel.DeviceModeModel.instance();\n        }\n        catch {\n            return null;\n        }\n    }\n    disconnectedCallback() {\n        LiveMetrics.LiveMetrics.instance().removeEventListener(\"status\" /* LiveMetrics.Events.STATUS */, this.#onMetricStatus, this);\n        const cruxManager = CrUXManager.CrUXManager.instance();\n        cruxManager.removeEventListener(\"field-data-changed\" /* CrUXManager.Events.FIELD_DATA_CHANGED */, this.#onFieldDataChanged, this);\n        this.#deviceModeModel()?.removeEventListener(\"Updated\" /* EmulationModel.DeviceModeModel.Events.UPDATED */, this.#onEmulationChanged, this);\n    }\n    #renderLcpCard() {\n        const fieldData = this.#getFieldMetricData('largest_contentful_paint');\n        const node = this.#lcpValue?.node;\n        const phases = this.#lcpValue?.phases;\n        // clang-format off\n        return html `\n      <devtools-metric-card .data=${{\n            metric: 'LCP',\n            localValue: this.#lcpValue?.value,\n            fieldValue: fieldData?.percentiles?.p75,\n            histogram: fieldData?.histogram,\n            tooltipContainer: this.#tooltipContainerEl,\n            phases: phases && [\n                [i18nString(UIStrings.timeToFirstByte), phases.timeToFirstByte],\n                [i18nString(UIStrings.resourceLoadDelay), phases.resourceLoadDelay],\n                [i18nString(UIStrings.resourceLoadDuration), phases.resourceLoadTime],\n                [i18nString(UIStrings.elementRenderDelay), phases.elementRenderDelay],\n            ],\n        }}>\n        ${node ? html `\n            <div class=\"related-info\" slot=\"extra-info\">\n              <span class=\"related-info-label\">${i18nString(UIStrings.lcpElement)}</span>\n              <span class=\"related-info-link\">${until(Common.Linkifier.Linkifier.linkify(node))}</span>\n            </div>\n          `\n            : nothing}\n      </devtools-metric-card>\n    `;\n        // clang-format on\n    }\n    #renderClsCard() {\n        const fieldData = this.#getFieldMetricData('cumulative_layout_shift');\n        const clusterIds = new Set(this.#clsValue?.clusterShiftIds || []);\n        const clusterIsVisible = clusterIds.size > 0 && this.#layoutShifts.some(layoutShift => clusterIds.has(layoutShift.uniqueLayoutShiftId));\n        // clang-format off\n        return html `\n      <devtools-metric-card .data=${{\n            metric: 'CLS',\n            localValue: this.#clsValue?.value,\n            fieldValue: fieldData?.percentiles?.p75,\n            histogram: fieldData?.histogram,\n            tooltipContainer: this.#tooltipContainerEl,\n        }}>\n        ${clusterIsVisible ? html `\n          <div class=\"related-info\" slot=\"extra-info\">\n            <span class=\"related-info-label\">${i18nString(UIStrings.worstCluster)}</span>\n            <button\n              class=\"link-to-log\"\n              title=${i18nString(UIStrings.showClsCluster)}\n              @click=${() => this.#revealLayoutShiftCluster(clusterIds)}\n              jslog=${VisualLogging.action('timeline.landing.show-cls-cluster').track({ click: true })}\n            >${i18nString(UIStrings.numShifts, { shiftCount: clusterIds.size })}</button>\n          </div>\n        ` : nothing}\n      </devtools-metric-card>\n    `;\n        // clang-format on\n    }\n    #renderInpCard() {\n        const fieldData = this.#getFieldMetricData('interaction_to_next_paint');\n        const phases = this.#inpValue?.phases;\n        const interaction = this.#inpValue && this.#interactions.get(this.#inpValue.interactionId);\n        // clang-format off\n        return html `\n      <devtools-metric-card .data=${{\n            metric: 'INP',\n            localValue: this.#inpValue?.value,\n            fieldValue: fieldData?.percentiles?.p75,\n            histogram: fieldData?.histogram,\n            tooltipContainer: this.#tooltipContainerEl,\n            phases: phases && [\n                [i18nString(UIStrings.inputDelay), phases.inputDelay],\n                [i18nString(UIStrings.processingDuration), phases.processingDuration],\n                [i18nString(UIStrings.presentationDelay), phases.presentationDelay],\n            ],\n        }}>\n        ${interaction ? html `\n          <div class=\"related-info\" slot=\"extra-info\">\n            <span class=\"related-info-label\">${i18nString(UIStrings.inpInteractionLink)}</span>\n            <button\n              class=\"link-to-log\"\n              title=${i18nString(UIStrings.showInpInteraction)}\n              @click=${() => this.#revealInteraction(interaction)}\n              jslog=${VisualLogging.action('timeline.landing.show-inp-interaction').track({ click: true })}\n            >${interaction.interactionType}</button>\n          </div>\n        ` : nothing}\n      </devtools-metric-card>\n    `;\n        // clang-format on\n    }\n    #renderRecordAction(action) {\n        function onClick() {\n            void action.execute();\n        }\n        // clang-format off\n        return html `\n      <div class=\"record-action\">\n        <devtools-button @click=${onClick} .data=${{\n            variant: \"text\" /* Buttons.Button.Variant.TEXT */,\n            size: \"REGULAR\" /* Buttons.Button.Size.REGULAR */,\n            iconName: action.icon(),\n            title: action.title(),\n            jslogContext: action.id(),\n        }}>\n          ${action.title()}\n        </devtools-button>\n        <span class=\"shortcut-label\">${UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutTitleForAction(action.id())}</span>\n      </div>\n    `;\n        // clang-format on\n    }\n    #getNetworkRec() {\n        const response = this.#getFieldMetricData('round_trip_time');\n        if (!response?.percentiles) {\n            return null;\n        }\n        const rtt = Number(response.percentiles.p75);\n        if (!Number.isFinite(rtt)) {\n            return null;\n        }\n        if (rtt < RTT_MINIMUM) {\n            return i18nString(UIStrings.tryDisablingThrottling);\n        }\n        let closestPreset = null;\n        let smallestDiff = Infinity;\n        for (const preset of MobileThrottling.ThrottlingPresets.ThrottlingPresets.networkPresets) {\n            const { targetLatency } = preset;\n            if (!targetLatency) {\n                continue;\n            }\n            const diff = Math.abs(targetLatency - rtt);\n            if (diff > RTT_COMPARISON_THRESHOLD) {\n                continue;\n            }\n            if (smallestDiff < diff) {\n                continue;\n            }\n            closestPreset = preset;\n            smallestDiff = diff;\n        }\n        if (!closestPreset) {\n            return null;\n        }\n        const title = typeof closestPreset.title === 'function' ? closestPreset.title() : closestPreset.title;\n        return i18nString(UIStrings.tryUsingThrottling, { PH1: title });\n    }\n    #getDeviceRec() {\n        // `form_factors` metric is only populated if CrUX data is fetched for all devices.\n        const fractions = this.#cruxPageResult?.[`${this.#fieldPageScope}-ALL`]?.record.metrics.form_factors?.fractions;\n        if (!fractions) {\n            return null;\n        }\n        return i18nString(UIStrings.percentDevices, {\n            PH1: Math.round(fractions.phone * 100),\n            PH2: Math.round(fractions.desktop * 100),\n        });\n    }\n    #renderRecordingSettings() {\n        const fieldEnabled = CrUXManager.CrUXManager.instance().getConfigSetting().get().enabled;\n        const deviceLinkEl = UI.XLink.XLink.create('https://developer.chrome.com/docs/devtools/device-mode', i18nString(UIStrings.simulateDifferentDevices));\n        const deviceMessage = i18n.i18n.getFormatLocalizedString(str_, UIStrings.useDeviceToolbar, { PH1: deviceLinkEl });\n        const deviceRecEl = document.createElement('span');\n        deviceRecEl.classList.add('environment-rec');\n        deviceRecEl.textContent = this.#getDeviceRec() || i18nString(UIStrings.notEnoughData);\n        const networkRecEl = document.createElement('span');\n        networkRecEl.classList.add('environment-rec');\n        networkRecEl.textContent = this.#getNetworkRec() || i18nString(UIStrings.notEnoughData);\n        // clang-format off\n        return html `\n      <h3 class=\"card-title\">${i18nString(UIStrings.environmentSettings)}</h3>\n      <div class=\"device-toolbar-description\">${deviceMessage}</div>\n      ${fieldEnabled ? html `\n        <div class=\"environment-recs-title\">${i18nString(UIStrings.realUserEnvironments)}</div>\n        <ul class=\"environment-recs-list\">\n          <li>${i18n.i18n.getFormatLocalizedString(str_, UIStrings.device, { PH1: deviceRecEl })}</li>\n          <li>${i18n.i18n.getFormatLocalizedString(str_, UIStrings.network, { PH1: networkRecEl })}</li>\n        </ul>\n      ` : nothing}\n      <div class=\"environment-option\">\n        <devtools-cpu-throttling-selector></devtools-cpu-throttling-selector>\n      </div>\n      <div class=\"environment-option\">\n        <devtools-network-throttling-selector></devtools-network-throttling-selector>\n      </div>\n      <div class=\"environment-option\">\n        <setting-checkbox\n          class=\"network-cache-setting\"\n          .data=${{\n            setting: Common.Settings.Settings.instance().moduleSetting('cache-disabled'),\n            textOverride: i18nString(UIStrings.disableNetworkCache),\n        }}\n        ></setting-checkbox>\n        <devtools-icon\n          class=\"setting-hint\"\n          name=\"help\"\n          title=${i18nString(UIStrings.networkCacheExplanation)}\n        ></devtools-icon>\n        </div>\n    `;\n        // clang-format on\n    }\n    #getPageScopeLabel(pageScope) {\n        const key = this.#cruxPageResult?.[`${pageScope}-ALL`]?.record.key[pageScope];\n        if (key) {\n            return pageScope === 'url' ? i18nString(UIStrings.urlOptionWithKey, { PH1: key }) :\n                i18nString(UIStrings.originOptionWithKey, { PH1: key });\n        }\n        const baseLabel = pageScope === 'url' ? i18nString(UIStrings.urlOption) : i18nString(UIStrings.originOption);\n        return i18nString(UIStrings.needsDataOption, { PH1: baseLabel });\n    }\n    #onPageScopeMenuItemSelected(event) {\n        if (event.itemValue === 'url') {\n            this.#fieldPageScope = 'url';\n        }\n        else {\n            this.#fieldPageScope = 'origin';\n        }\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #renderPageScopeSetting() {\n        if (!CrUXManager.CrUXManager.instance().getConfigSetting().get().enabled) {\n            return LitHtml.nothing;\n        }\n        const urlLabel = this.#getPageScopeLabel('url');\n        const originLabel = this.#getPageScopeLabel('origin');\n        const buttonTitle = this.#fieldPageScope === 'url' ? urlLabel : originLabel;\n        const accessibleTitle = i18nString(UIStrings.showFieldDataForPage, { PH1: buttonTitle });\n        // If there is no data at all we should force users to switch pages or reconfigure CrUX.\n        const shouldDisable = !this.#cruxPageResult?.['url-ALL'] && !this.#cruxPageResult?.['origin-ALL'];\n        return html `\n      <devtools-select-menu\n        id=\"page-scope-select\"\n        class=\"field-data-option\"\n        @selectmenuselected=${this.#onPageScopeMenuItemSelected}\n        .showDivider=${true}\n        .showArrow=${true}\n        .sideButton=${false}\n        .showSelectedItem=${true}\n        .showConnector=${false}\n        .buttonTitle=${buttonTitle}\n        .disabled=${shouldDisable}\n        title=${accessibleTitle}\n      >\n        <devtools-menu-item\n          .value=${'url'}\n          .selected=${this.#fieldPageScope === 'url'}\n        >\n          ${urlLabel}\n        </devtools-menu-item>\n        <devtools-menu-item\n          .value=${'origin'}\n          .selected=${this.#fieldPageScope === 'origin'}\n        >\n          ${originLabel}\n        </devtools-menu-item>\n      </devtools-select-menu>\n    `;\n    }\n    #getDeviceScopeDisplayName(deviceScope) {\n        switch (deviceScope) {\n            case 'ALL':\n                return i18nString(UIStrings.allDevices);\n            case 'DESKTOP':\n                return i18nString(UIStrings.desktop);\n            case 'PHONE':\n                return i18nString(UIStrings.mobile);\n            case 'TABLET':\n                return i18nString(UIStrings.tablet);\n        }\n    }\n    #getAutoDeviceScope() {\n        const emulationModel = this.#deviceModeModel();\n        if (emulationModel === null) {\n            return 'ALL';\n        }\n        if (emulationModel.isMobile()) {\n            if (this.#cruxPageResult?.[`${this.#fieldPageScope}-PHONE`]) {\n                return 'PHONE';\n            }\n            return 'ALL';\n        }\n        if (this.#cruxPageResult?.[`${this.#fieldPageScope}-DESKTOP`]) {\n            return 'DESKTOP';\n        }\n        return 'ALL';\n    }\n    #getLabelForDeviceOption(deviceOption) {\n        const deviceScope = deviceOption === 'AUTO' ? this.#getAutoDeviceScope() : deviceOption;\n        const deviceScopeLabel = this.#getDeviceScopeDisplayName(deviceScope);\n        const baseLabel = deviceOption === 'AUTO' ? i18nString(UIStrings.auto, { PH1: deviceScopeLabel }) : deviceScopeLabel;\n        if (!this.#cruxPageResult) {\n            return i18nString(UIStrings.loadingOption, { PH1: baseLabel });\n        }\n        const result = this.#cruxPageResult[`${this.#fieldPageScope}-${deviceScope}`];\n        if (!result) {\n            return i18nString(UIStrings.needsDataOption, { PH1: baseLabel });\n        }\n        return baseLabel;\n    }\n    #onDeviceOptionMenuItemSelected(event) {\n        this.#fieldDeviceOption = event.itemValue;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #renderDeviceScopeSetting() {\n        if (!CrUXManager.CrUXManager.instance().getConfigSetting().get().enabled) {\n            return LitHtml.nothing;\n        }\n        // If there is no data at all we should force users to try adjusting the page scope\n        // before coming back to this option.\n        const shouldDisable = !this.#cruxPageResult?.[`${this.#fieldPageScope}-ALL`];\n        const currentDeviceLabel = this.#getLabelForDeviceOption(this.#fieldDeviceOption);\n        // clang-format off\n        return html `\n      <devtools-select-menu\n        id=\"device-scope-select\"\n        class=\"field-data-option\"\n        @selectmenuselected=${this.#onDeviceOptionMenuItemSelected}\n        .showDivider=${true}\n        .showArrow=${true}\n        .sideButton=${false}\n        .showSelectedItem=${true}\n        .showConnector=${false}\n        .buttonTitle=${i18nString(UIStrings.device, { PH1: currentDeviceLabel })}\n        .disabled=${shouldDisable}\n        title=${i18nString(UIStrings.showFieldDataForDevice, { PH1: currentDeviceLabel })}\n      >\n        ${DEVICE_OPTION_LIST.map(deviceOption => {\n            return html `\n            <devtools-menu-item\n              .value=${deviceOption}\n              .selected=${this.#fieldDeviceOption === deviceOption}\n            >\n              ${this.#getLabelForDeviceOption(deviceOption)}\n            </devtools-menu-item>\n          `;\n        })}\n      </devtools-select-menu>\n    `;\n        // clang-format on\n    }\n    #getCollectionPeriodRange() {\n        const selectedResponse = this.#getSelectedFieldResponse();\n        if (!selectedResponse) {\n            return null;\n        }\n        const { firstDate, lastDate } = selectedResponse.record.collectionPeriod;\n        const formattedFirstDate = new Date(firstDate.year, \n        // CrUX month is 1-indexed but `Date` month is 0-indexed\n        firstDate.month - 1, firstDate.day);\n        const formattedLastDate = new Date(lastDate.year, \n        // CrUX month is 1-indexed but `Date` month is 0-indexed\n        lastDate.month - 1, lastDate.day);\n        const options = {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n        };\n        return i18nString(UIStrings.dateRange, {\n            PH1: formattedFirstDate.toLocaleDateString(undefined, options),\n            PH2: formattedLastDate.toLocaleDateString(undefined, options),\n        });\n    }\n    #renderCollectionPeriod() {\n        const range = this.#getCollectionPeriodRange();\n        const dateEl = document.createElement('span');\n        dateEl.classList.add('collection-period-range');\n        dateEl.textContent = range || i18nString(UIStrings.notEnoughData);\n        const message = i18n.i18n.getFormatLocalizedString(str_, UIStrings.collectionPeriod, {\n            PH1: dateEl,\n        });\n        return html `\n      <div class=\"field-data-message\">${message}</div>\n    `;\n    }\n    #renderFieldDataMessage() {\n        if (CrUXManager.CrUXManager.instance().getConfigSetting().get().enabled) {\n            return this.#renderCollectionPeriod();\n        }\n        const linkEl = UI.XLink.XLink.create('https://developer.chrome.com/docs/crux', i18n.i18n.lockedString('Chrome UX Report'));\n        const messageEl = i18n.i18n.getFormatLocalizedString(str_, UIStrings.seeHowYourLocalMetricsCompare, { PH1: linkEl });\n        return html `\n      <div class=\"field-data-message\">${messageEl}</div>\n    `;\n    }\n    #renderDataDescriptions() {\n        const fieldEnabled = CrUXManager.CrUXManager.instance().getConfigSetting().get().enabled;\n        const localLink = UI.XLink.XLink.create('https://goo.gle/perf-local-metrics', i18nString(UIStrings.localMetricsLink));\n        const localEl = i18n.i18n.getFormatLocalizedString(str_, UIStrings.theLocalMetricsAre, { PH1: localLink });\n        const fieldLink = UI.XLink.XLink.create('https://goo.gle/perf-field-data', i18nString(UIStrings.fieldDataLink));\n        const fieldEl = i18n.i18n.getFormatLocalizedString(str_, UIStrings.theFieldMetricsAre, { PH1: fieldLink });\n        return html `\n      <div class=\"data-descriptions\">\n        <div>${localEl}</div>\n        ${fieldEnabled ? html `<div>${fieldEl}</div>` : nothing}\n      </div>\n    `;\n    }\n    #renderLogSection() {\n        // clang-format off\n        return html `\n      <section class=\"logs-section\" aria-label=${i18nString(UIStrings.eventLogs)}>\n        <devtools-live-metrics-logs\n          on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n            this.#logsEl = node;\n        })}\n        >\n          ${this.#renderInteractionsLog()}\n          ${this.#renderLayoutShiftsLog()}\n        </devtools-live-metrics-logs>\n      </section>\n    `;\n        // clang-format on\n    }\n    async #revealInteraction(interaction) {\n        const interactionEl = this.#shadow.getElementById(interaction.interactionId);\n        if (!interactionEl || !this.#logsEl) {\n            return;\n        }\n        const success = this.#logsEl.selectTab('interactions');\n        if (!success) {\n            return;\n        }\n        await coordinator.write(() => {\n            interactionEl.scrollIntoView({\n                block: 'center',\n            });\n            interactionEl.focus();\n            UI.UIUtils.runCSSAnimationOnce(interactionEl, 'highlight');\n        });\n    }\n    #renderInteractionsLog() {\n        if (!this.#interactions.size) {\n            return LitHtml.nothing;\n        }\n        // clang-format off\n        return html `\n      <ol class=\"log\"\n        slot=\"interactions-log-content\"\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n            this.#interactionsListEl = node;\n        })}\n      >\n        ${this.#interactions.values().map(interaction => {\n            const metricValue = renderMetricValue('timeline.landing.interaction-event-timing', interaction.duration, INP_THRESHOLDS, v => i18n.TimeUtilities.preciseMillisToString(v), { dim: true });\n            const isP98Excluded = this.#inpValue && this.#inpValue.value < interaction.duration;\n            const isInp = this.#inpValue?.interactionId === interaction.interactionId;\n            return html `\n            <li id=${interaction.interactionId} class=\"log-item interaction\" tabindex=\"-1\">\n              <details>\n                <summary>\n                  <span class=\"interaction-type\">\n                    ${interaction.interactionType}\n                    ${isInp ?\n                html `<span class=\"interaction-inp-chip\" title=${i18nString(UIStrings.inpInteraction)}>INP</span>`\n                : nothing}\n                  </span>\n                  <span class=\"interaction-node\">${interaction.node && until(Common.Linkifier.Linkifier.linkify(interaction.node))}</span>\n                  ${isP98Excluded ? html `<devtools-icon\n                    class=\"interaction-info\"\n                    name=\"info\"\n                    title=${i18nString(UIStrings.interactionExcluded)}\n                  ></devtools-icon>` : nothing}\n                  <span class=\"interaction-duration\">${metricValue}</span>\n                </summary>\n                <div class=\"phase-table\" role=\"table\">\n                  <div class=\"phase-table-row phase-table-header-row\" role=\"row\">\n                    <div role=\"columnheader\">Phase</div>\n                    <div role=\"columnheader\">Local time (ms)</div>\n                  </div>\n                  <div class=\"phase-table-row\" role=\"row\">\n                    <div role=\"cell\">${i18nString(UIStrings.inputDelay)}</div>\n                    <div role=\"cell\">${Math.round(interaction.phases.inputDelay)}</div>\n                  </div>\n                  <div class=\"phase-table-row\" role=\"row\">\n                    <div role=\"cell\">${i18nString(UIStrings.processingDuration)}</div>\n                    <div role=\"cell\">${Math.round(interaction.phases.processingDuration)}</div>\n                  </div>\n                  <div class=\"phase-table-row\" role=\"row\">\n                    <div role=\"cell\">${i18nString(UIStrings.presentationDelay)}</div>\n                    <div role=\"cell\">${Math.round(interaction.phases.presentationDelay)}</div>\n                  </div>\n                </div>\n              </details>\n            </li>\n          `;\n        })}\n      </ol>\n    `;\n        // clang-format on\n    }\n    async #revealLayoutShiftCluster(clusterIds) {\n        if (!this.#logsEl) {\n            return;\n        }\n        const layoutShiftEls = [];\n        for (const shiftId of clusterIds) {\n            const layoutShiftEl = this.#shadow.getElementById(shiftId);\n            if (layoutShiftEl) {\n                layoutShiftEls.push(layoutShiftEl);\n            }\n        }\n        if (!layoutShiftEls.length) {\n            return;\n        }\n        const success = this.#logsEl.selectTab('layout-shifts');\n        if (!success) {\n            return;\n        }\n        await coordinator.write(() => {\n            layoutShiftEls[0].scrollIntoView({\n                block: 'start',\n            });\n            layoutShiftEls[0].focus();\n            for (const layoutShiftEl of layoutShiftEls) {\n                UI.UIUtils.runCSSAnimationOnce(layoutShiftEl, 'highlight');\n            }\n        });\n    }\n    #renderLayoutShiftsLog() {\n        if (!this.#layoutShifts.length) {\n            return LitHtml.nothing;\n        }\n        // clang-format off\n        return html `\n      <ol class=\"log\"\n        slot=\"layout-shifts-log-content\"\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n            this.#layoutShiftsListEl = node;\n        })}\n      >\n        ${this.#layoutShifts.map(layoutShift => {\n            const metricValue = renderMetricValue('timeline.landing.layout-shift-event-score', layoutShift.score, CLS_THRESHOLDS, \n            // CLS value is 2 decimal places, but individual shift scores tend to be much smaller\n            // so we expand the precision here.\n            v => v.toFixed(4), { dim: true });\n            return html `\n            <li id=${layoutShift.uniqueLayoutShiftId} class=\"log-item layout-shift\" tabindex=\"-1\">\n              <div class=\"layout-shift-score\">Layout shift score: ${metricValue}</div>\n              <div class=\"layout-shift-nodes\">\n                ${layoutShift.affectedNodes.map(({ node }) => html `\n                  <div class=\"layout-shift-node\">${until(Common.Linkifier.Linkifier.linkify(node))}</div>\n                `)}\n              </div>\n            </li>\n          `;\n        })}\n      </ol>\n    `;\n        // clang-format on\n    }\n    #render = () => {\n        const fieldEnabled = CrUXManager.CrUXManager.instance().getConfigSetting().get().enabled;\n        const liveMetricsTitle = fieldEnabled ? i18nString(UIStrings.localAndFieldMetrics) : i18nString(UIStrings.localMetrics);\n        // clang-format off\n        const output = html `\n      <div class=\"container\">\n        <div class=\"live-metrics-view\">\n          <main class=\"live-metrics\"\n          >\n            <h2 class=\"section-title\">${liveMetricsTitle}</h2>\n            <div class=\"metric-cards\"\n              on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n            this.#tooltipContainerEl = node;\n        })}\n            >\n              <div id=\"lcp\">\n                ${this.#renderLcpCard()}\n              </div>\n              <div id=\"cls\">\n                ${this.#renderClsCard()}\n              </div>\n              <div id=\"inp\">\n                ${this.#renderInpCard()}\n              </div>\n            </div>\n            ${this.#renderDataDescriptions()}\n            ${this.#renderLogSection()}\n          </main>\n          <aside class=\"next-steps\" aria-labelledby=\"next-steps-section-title\">\n            <h2 id=\"next-steps-section-title\" class=\"section-title\">${i18nString(UIStrings.nextSteps)}</h2>\n            <div id=\"field-setup\" class=\"settings-card\">\n              <h3 class=\"card-title\">${i18nString(UIStrings.fieldData)}</h3>\n              ${this.#renderFieldDataMessage()}\n              ${this.#renderPageScopeSetting()}\n              ${this.#renderDeviceScopeSetting()}\n              <div class=\"field-setup-buttons\">\n                <devtools-field-settings-dialog></devtools-field-settings-dialog>\n              </div>\n            </div>\n            <div id=\"recording-settings\" class=\"settings-card\">\n              ${this.#renderRecordingSettings()}\n            </div>\n            <div id=\"record\" class=\"record-action-card\">\n              ${this.#renderRecordAction(this.#toggleRecordAction)}\n            </div>\n            <div id=\"record-page-load\" class=\"record-action-card\">\n              ${this.#renderRecordAction(this.#recordReloadAction)}\n            </div>\n          </aside>\n        </div>\n      </div>\n    `;\n        LitHtml.render(output, this.#shadow, { host: this });\n    };\n}\nclass LiveMetricsLogs extends UI.Widget.WidgetElement {\n    #tabbedPane;\n    constructor() {\n        super();\n        this.style.display = 'contents';\n    }\n    /**\n     * Returns `true` if selecting the tab was successful.\n     */\n    selectTab(tabId) {\n        if (!this.#tabbedPane) {\n            return false;\n        }\n        return this.#tabbedPane.selectTab(tabId);\n    }\n    #clearCurrentLog() {\n        const liveMetrics = LiveMetrics.LiveMetrics.instance();\n        switch (this.#tabbedPane?.selectedTabId) {\n            case 'interactions':\n                liveMetrics.clearInteractions();\n                break;\n            case 'layout-shifts':\n                liveMetrics.clearLayoutShifts();\n                break;\n        }\n    }\n    createWidget() {\n        // We need a generic widget with a shadow DOM as the container widget so that we can take advantage\n        // of web component slots. Passing `this` into the container widget will make `this` the root element\n        // of that widget.\n        //\n        // Any children of the root element `this` will be matched to the slots defined within the container\n        // widget's shadow DOM.\n        const containerWidget = new UI.Widget.Widget(true, undefined, this);\n        containerWidget.contentElement.style.display = 'contents';\n        this.#tabbedPane = new UI.TabbedPane.TabbedPane();\n        // Taking advantage of web component slots allows us to render updates in the lit templates defined in the\n        // main component. This should be more performant and doesn't require us to inject live metrics styles twice.\n        const interactionsSlot = document.createElement('slot');\n        interactionsSlot.name = 'interactions-log-content';\n        const interactionsTab = UI.Widget.Widget.getOrCreateWidget(interactionsSlot);\n        this.#tabbedPane.appendTab('interactions', i18nString(UIStrings.interactions), interactionsTab, undefined, undefined, undefined, undefined, undefined, 'timeline.landing.interactions-log');\n        const layoutShiftsSlot = document.createElement('slot');\n        layoutShiftsSlot.name = 'layout-shifts-log-content';\n        const layoutShiftsTab = UI.Widget.Widget.getOrCreateWidget(layoutShiftsSlot);\n        this.#tabbedPane.appendTab('layout-shifts', i18nString(UIStrings.layoutShifts), layoutShiftsTab, undefined, undefined, undefined, undefined, undefined, 'timeline.landing.layout-shifts-log');\n        const clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearCurrentLog), 'clear', undefined, 'timeline.landing.clear-log');\n        clearButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.#clearCurrentLog, this);\n        this.#tabbedPane.rightToolbar().appendToolbarItem(clearButton);\n        this.#tabbedPane.show(containerWidget.contentElement);\n        return containerWidget;\n    }\n}\ncustomElements.define('devtools-live-metrics-view', LiveMetricsView);\ncustomElements.define('devtools-live-metrics-logs', LiveMetricsLogs);\n//# sourceMappingURL=LiveMetricsView.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (c) 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.network-request-details-title {\n  font-size: 13px;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n}\n\n.network-request-details-title > div {\n  box-sizing: border-box;\n  width: 12px;\n  height: 12px;\n  border: 1px solid var(--sys-color-divider);\n  display: inline-block;\n  margin-right: 4px;\n}\n\n.network-request-details-cols {\n  display: flex;\n}\n\n:host {\n  border-bottom: 1px solid var(--sys-color-divider);\n  display: block;\n  padding-bottom: 5px;\n}\n\n.network-request-details-col {\n  flex: 1;\n}\n\n.network-request-details-row {\n  padding: 0 10px;\n  min-height: 20px;\n}\n\n.title {\n  color: var(--sys-color-token-subtle);\n  overflow: hidden;\n  padding-right: 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.value {\n  display: inline-block;\n  user-select: text;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  padding: 0 3px;\n}\n\n.devtools-link,\n.timeline-link {\n  color: var(--text-link);\n  text-decoration: underline;\n  outline-offset: 2px;\n  padding: 0;\n  text-align: left;\n\n  .elements-disclosure & {\n    color: var(--text-link);\n  }\n\n  devtools-icon {\n    vertical-align: baseline;\n    color: var(--sys-color-primary);\n  }\n\n  :focus .selected & devtools-icon {\n    color: var(--sys-color-tonal-container);\n  }\n\n  &:focus-visible {\n    outline-width: unset;\n  }\n\n  &.invalid-link {\n    color: var(--text-disabled);\n    text-decoration: none;\n  }\n\n  &:not(.devtools-link-prevent-click, .invalid-link) {\n    cursor: pointer;\n  }\n\n  @media (forced-colors: active) {\n    &:not(.devtools-link-prevent-click) {\n      forced-color-adjust: none;\n      color: linktext;\n    }\n\n    &:focus-visible {\n      background: Highlight;\n      color: HighlightText;\n    }\n  }\n}\n\n.text-button.link-style,\n.text-button.link-style:hover,\n.text-button.link-style:active {\n  background: none;\n  border: none;\n  font: inherit;\n}\n\n.timing-rows {\n  width: fit-content;\n}\n\n/*# sourceURL=networkRequestDetails.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (c) 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.bold {\n  font-weight: bold;\n}\n\n.url {\n  margin-left: 15px;\n  margin-right: 5px;\n}\n\n.url--host {\n  color: var(--sys-color-token-subtle);\n}\n\n.priority-row {\n  margin-left: 15px;\n}\n\n.network-category-chip {\n  box-sizing: border-box;\n  width: 10px;\n  height: 10px;\n  border: 1px solid var(--sys-color-divider);\n  display: inline-block;\n  margin-right: 4px;\n}\n\ndevtools-icon.priority {\n  height: 13px;\n  width: 13px;\n  color: var(--sys-color-on-surface-subtle);\n}\n\n.render-blocking {\n  margin-left: 15px;\n  color: var(--sys-color-error);\n}\n\n.divider {\n  border-top: 1px solid var(--sys-color-divider);\n  margin: 5px 0;\n}\n\n.timings-row {\n  align-self: start;\n  display: flex;\n  align-items: center;\n  width: 100%;\n}\n\n.indicator {\n  display: inline-block;\n  width: 10px;\n  height: 4px;\n  margin-right: 5px;\n  border: 1px solid var(--sys-color-on-surface-subtle);\n}\n\n.whisker-left {\n  align-self: center;\n  display: inline-flex;\n  width: 10px;\n  height: 6px;\n  margin-right: 5px;\n  border-left: 1px solid var(--sys-color-on-surface-subtle);\n}\n\n.whisker-right {\n  align-self: center;\n  display: inline-flex;\n  width: 10px;\n  height: 6px;\n  margin-right: 5px;\n  border-right: 1px solid var(--sys-color-on-surface-subtle);\n}\n\n.horizontal {\n  background-color: var(--sys-color-on-surface-subtle);\n  height: 1px;\n  width: 10px;\n  align-self: center;\n}\n\n.time {\n  /* Push the time to right. */\n  margin-left: auto;\n  display: inline-block;\n  padding-left: 10px;\n}\n\n.timings-row--duration {\n  .indicator {\n    border-color: transparent;\n  }\n\n  .time {\n    font-weight: var(--ref-typeface-weight-medium);\n  }\n}\n\n/*# sourceURL=networkRequestTooltip.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/icon_button/icon_button.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as PerfUI from '../../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport networkRequestTooltipStyles from './networkRequestTooltip.css.js';\nimport { colorForNetworkRequest, networkResourceCategory } from './Utils.js';\nconst { html } = LitHtml;\nconst MAX_URL_LENGTH = 60;\nconst UIStrings = {\n    /**\n     *@description Text that refers to the priority of network request\n     */\n    priority: 'Priority',\n    /**\n     *@description Text for the duration of a network request\n     */\n    duration: 'Duration',\n    /**\n     *@description Text that refers to the queueing and connecting time of a network request\n     */\n    queuingAndConnecting: 'Queuing and connecting',\n    /**\n     *@description Text that refers to the request sent and waiting time of a network request\n     */\n    requestSentAndWaiting: 'Request sent and waiting',\n    /**\n     *@description Text that refers to the content downloading time of a network request\n     */\n    contentDownloading: 'Content downloading',\n    /**\n     *@description Text that refers to the waiting on main thread time of a network request\n     */\n    waitingOnMainThread: 'Waiting on main thread',\n    /**\n     *@description Text that refers to a network request is render blocking\n     */\n    renderBlocking: 'Render blocking',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/NetworkRequestTooltip.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class NetworkRequestTooltip extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #networkRequest;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [networkRequestTooltipStyles];\n        this.#render();\n    }\n    set networkRequest(networkRequest) {\n        if (this.#networkRequest === networkRequest) {\n            return;\n        }\n        this.#networkRequest = networkRequest;\n        this.#render();\n    }\n    static renderPriorityValue(networkRequest) {\n        if (networkRequest.args.data.priority === networkRequest.args.data.initialPriority) {\n            return html `${PerfUI.NetworkPriorities.uiLabelForNetworkPriority(networkRequest.args.data.priority)}`;\n        }\n        return html `${PerfUI.NetworkPriorities.uiLabelForNetworkPriority(networkRequest.args.data.initialPriority)}\n        <devtools-icon name=${'arrow-forward'} class=\"priority\"></devtools-icon>\n        ${PerfUI.NetworkPriorities.uiLabelForNetworkPriority(networkRequest.args.data.priority)}`;\n    }\n    static renderTimings(networkRequest) {\n        const syntheticData = networkRequest.args.data.syntheticData;\n        const queueing = (syntheticData.sendStartTime - networkRequest.ts);\n        const requestPlusWaiting = (syntheticData.downloadStart - syntheticData.sendStartTime);\n        const download = (syntheticData.finishTime - syntheticData.downloadStart);\n        const waitingOnMainThread = (networkRequest.ts + networkRequest.dur - syntheticData.finishTime);\n        const color = colorForNetworkRequest(networkRequest);\n        const styleForWaiting = {\n            backgroundColor: `color-mix(in srgb, ${color}, hsla(0, 100%, 100%, 0.8))`,\n        };\n        const styleForDownloading = {\n            backgroundColor: color,\n        };\n        // The outside spans are transparent with a border on the outside edge.\n        // The inside spans are 1px tall rectangles, vertically centered, with background color.\n        //                   |\n        //                   |----\n        //   whisker-left->  |  ^ horizontal\n        const leftWhisker = html `<span class=\"whisker-left\"> <span class=\"horizontal\"></span> </span>`;\n        const rightWhisker = html `<span class=\"whisker-right\"> <span class=\"horizontal\"></span> </span>`;\n        return html `\n      <div class=\"timings-row timings-row--duration\">\n        <span class=\"indicator\"></span>\n        ${i18nString(UIStrings.duration)}\n         <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(networkRequest.dur)}</span>\n      </div>\n      <div class=\"timings-row\">\n        ${leftWhisker}\n        ${i18nString(UIStrings.queuingAndConnecting)}\n        <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(queueing)}</span>\n      </div>\n      <div class=\"timings-row\">\n        <span class=\"indicator\" style=${LitHtml.Directives.styleMap(styleForWaiting)}></span>\n        ${i18nString(UIStrings.requestSentAndWaiting)}\n        <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(requestPlusWaiting)}</span>\n      </div>\n      <div class=\"timings-row\">\n        <span class=\"indicator\" style=${LitHtml.Directives.styleMap(styleForDownloading)}></span>\n        ${i18nString(UIStrings.contentDownloading)}\n        <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(download)}</span>\n      </div>\n      <div class=\"timings-row\">\n        ${rightWhisker}\n        ${i18nString(UIStrings.waitingOnMainThread)}\n        <span class=\"time\">${i18n.TimeUtilities.formatMicroSecondsTime(waitingOnMainThread)}</span>\n      </div>\n    `;\n    }\n    #render() {\n        if (!this.#networkRequest) {\n            return;\n        }\n        const chipStyle = {\n            backgroundColor: `${colorForNetworkRequest(this.#networkRequest)}`,\n        };\n        const url = new URL(this.#networkRequest.args.data.url);\n        // clang-format off\n        const output = html `\n      <div class=\"performance-card\">\n        <div class=\"url\">${Platform.StringUtilities.trimMiddle(url.href.replace(url.origin, ''), MAX_URL_LENGTH)}</div>\n        <div class=\"url url--host\">${url.origin.replace('https://', '')}</div>\n\n        <div class=\"divider\"></div>\n        <div class=\"network-category\"><span class=\"network-category-chip\" style=${LitHtml.Directives.styleMap(chipStyle)}></span>${networkResourceCategory(this.#networkRequest)}</div>\n        <div class=\"priority-row\">${i18nString(UIStrings.priority)}: ${NetworkRequestTooltip.renderPriorityValue(this.#networkRequest)}</div>\n        ${Trace.Helpers.Network.isSyntheticNetworkRequestEventRenderBlocking(this.#networkRequest) ?\n            html `<div class=\"render-blocking\"> ${i18nString(UIStrings.renderBlocking)} </div>` : LitHtml.nothing}\n        <div class=\"divider\"></div>\n\n        ${NetworkRequestTooltip.renderTimings(this.#networkRequest)}\n      </div>\n    `;\n        // clang-format on\n        LitHtml.render(output, this.#shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-network-request-tooltip', NetworkRequestTooltip);\n//# sourceMappingURL=NetworkRequestTooltip.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/request_link_icon/request_link_icon.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Helpers from '../../../models/trace/helpers/helpers.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as LegacyComponents from '../../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as TimelineUtils from '../utils/utils.js';\nimport NetworkRequestDetailsStyles from './networkRequestDetails.css.js';\nimport networkRequestTooltipStyles from './networkRequestTooltip.css.js';\nimport { NetworkRequestTooltip } from './NetworkRequestTooltip.js';\nimport { colorForNetworkRequest } from './Utils.js';\nconst { html } = LitHtml;\nconst MAX_URL_LENGTH = 100;\nconst UIStrings = {\n    /**\n     *@description Text that refers to the network request method\n     */\n    requestMethod: 'Request method',\n    /**\n     *@description Text to show the priority of an item\n     */\n    priority: 'Priority',\n    /**\n     *@description Text used when referring to the data sent in a network request that is encoded as a particular file format.\n     */\n    encodedData: 'Encoded data',\n    /**\n     *@description Text used to refer to the data sent in a network request that has been decoded.\n     */\n    decodedBody: 'Decoded body',\n    /**\n     *@description Text in Timeline indicating that input has happened recently\n     */\n    yes: 'Yes',\n    /**\n     *@description Text in Timeline indicating that input has not happened recently\n     */\n    no: 'No',\n    /**\n     *@description Text for previewing items\n     */\n    preview: 'Preview',\n    /**\n     *@description Text to indicate to the user they are viewing an event representing a network request.\n     */\n    networkRequest: 'Network request',\n    /**\n     *@description Text for the data source of a network request.\n     */\n    fromCache: 'From cache',\n    /**\n     *@description Text used to show the mime-type of the data transferred with a network request (e.g. \"application/json\").\n     */\n    mimeType: 'MIME type',\n    /**\n     *@description Text used to show the user that a request was served from the browser's in-memory cache.\n     */\n    FromMemoryCache: ' (from memory cache)',\n    /**\n     *@description Text used to show the user that a request was served from the browser's file cache.\n     */\n    FromCache: ' (from cache)',\n    /**\n     *@description Label for a network request indicating that it was a HTTP2 server push instead of a regular network request, in the Performance panel\n     */\n    FromPush: ' (from push)',\n    /**\n     *@description Text used to show a user that a request was served from an installed, active service worker.\n     */\n    FromServiceWorker: ' (from `service worker`)',\n    /**\n     *@description Text for the event initiated by another one\n     */\n    initiatedBy: 'Initiated by',\n    /**\n     *@description Text that refers to if the network request is blocking\n     */\n    blocking: 'Blocking',\n    /**\n     *@description Text that refers to if the network request is in-body parser render blocking\n     */\n    inBodyParserBlocking: 'In-body parser blocking',\n    /**\n     *@description Text that refers to if the network request is render blocking\n     */\n    renderBlocking: 'Render blocking',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/NetworkRequestDetails.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class NetworkRequestDetails extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #networkRequest = null;\n    #maybeTarget = null;\n    #requestPreviewElements = new WeakMap();\n    #linkifier;\n    #parsedTrace = null;\n    constructor(linkifier) {\n        super();\n        this.#linkifier = linkifier;\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [NetworkRequestDetailsStyles, networkRequestTooltipStyles];\n    }\n    async setData(parsedTrace, networkRequest, maybeTarget) {\n        if (this.#networkRequest === networkRequest && parsedTrace === this.#parsedTrace) {\n            return;\n        }\n        this.#parsedTrace = parsedTrace;\n        this.#networkRequest = networkRequest;\n        this.#maybeTarget = maybeTarget;\n        await this.#render();\n    }\n    #renderTitle() {\n        if (!this.#networkRequest) {\n            return null;\n        }\n        const style = {\n            backgroundColor: `${colorForNetworkRequest(this.#networkRequest)}`,\n        };\n        return html `\n      <div class=\"network-request-details-title\">\n        <div style=${LitHtml.Directives.styleMap(style)}></div>\n        ${i18nString(UIStrings.networkRequest)}\n      </div>\n    `;\n    }\n    #renderRow(title, value) {\n        if (!value) {\n            return null;\n        }\n        return html `\n      <div class=\"network-request-details-row\"><div class=\"title\">${title}</div><div class=\"value\">${value}</div></div>\n    `;\n    }\n    #renderURL() {\n        if (!this.#networkRequest) {\n            return null;\n        }\n        const options = {\n            tabStop: true,\n            showColumnNumber: false,\n            inlineFrameIndex: 0,\n            maxLength: MAX_URL_LENGTH,\n        };\n        const linkifiedURL = LegacyComponents.Linkifier.Linkifier.linkifyURL(this.#networkRequest.args.data.url, options);\n        const networkRequest = TimelineUtils.NetworkRequest.getNetworkRequest(this.#networkRequest);\n        if (networkRequest) {\n            linkifiedURL.addEventListener('contextmenu', (event) => {\n                if (!this.#networkRequest) {\n                    return;\n                }\n                // Add a wrapper class here.\n                // The main reason is the `Reveal in Network panel` option is handled by the context menu provider, which will\n                // add this option for all supporting types. And there are a lot of context menu providers that support\n                // `SDK.NetworkRequest.NetworkRequest`, for example `Override content` by PersistenceActions, but we so far just\n                // want the one to reveal in network panel, so add a new class which will only be supported by Network panel.\n                // Also we want to have a different behavior(select the network request) from the\n                // `SDK.NetworkRequest.NetworkRequest` (highlight the network request once).\n                const contextMenu = new UI.ContextMenu.ContextMenu(event, { useSoftMenu: true });\n                contextMenu.appendApplicableItems(new TimelineUtils.NetworkRequest.TimelineNetworkRequest(networkRequest));\n                void contextMenu.show();\n            });\n            // clang-format off\n            const urlElement = html `\n        ${linkifiedURL}\n        <devtools-request-link-icon\n          .data=${{ request: networkRequest }} >\n        </devtools-request-link-icon>\n      `;\n            // clang-format on\n            return html `<div class=\"network-request-details-row\">${urlElement}</div>`;\n        }\n        return html `<div class=\"network-request-details-row\">${linkifiedURL}</div>`;\n    }\n    #renderFromCache() {\n        if (!this.#networkRequest) {\n            return null;\n        }\n        const cached = this.#networkRequest.args.data.syntheticData.isMemoryCached ||\n            this.#networkRequest.args.data.syntheticData.isDiskCached;\n        return this.#renderRow(i18nString(UIStrings.fromCache), cached ? i18nString(UIStrings.yes) : i18nString(UIStrings.no));\n    }\n    #renderEncodedDataLength() {\n        if (!this.#networkRequest) {\n            return null;\n        }\n        let lengthText = '';\n        if (this.#networkRequest.args.data.syntheticData.isMemoryCached) {\n            lengthText += i18nString(UIStrings.FromMemoryCache);\n        }\n        else if (this.#networkRequest.args.data.syntheticData.isDiskCached) {\n            lengthText += i18nString(UIStrings.FromCache);\n        }\n        else if (this.#networkRequest.args.data.timing?.pushStart) {\n            lengthText += i18nString(UIStrings.FromPush);\n        }\n        if (this.#networkRequest.args.data.fromServiceWorker) {\n            lengthText += i18nString(UIStrings.FromServiceWorker);\n        }\n        if (this.#networkRequest.args.data.encodedDataLength || !lengthText) {\n            lengthText =\n                `${Platform.NumberUtilities.bytesToString(this.#networkRequest.args.data.encodedDataLength)}${lengthText}`;\n        }\n        return this.#renderRow(i18nString(UIStrings.encodedData), lengthText);\n    }\n    #renderInitiatedBy() {\n        if (!this.#networkRequest) {\n            return null;\n        }\n        const hasStackTrace = Trace.Helpers.Trace.stackTraceForEvent(this.#networkRequest) !== null;\n        // If we have a stack trace, that is the most reliable way to get the initiator data and display a link to the source.\n        if (hasStackTrace) {\n            const topFrame = Trace.Helpers.Trace.getZeroIndexedStackTraceForEvent(this.#networkRequest)?.at(0) ?? null;\n            if (topFrame) {\n                const link = this.#linkifier.maybeLinkifyConsoleCallFrame(this.#maybeTarget, topFrame, { tabStop: true, inlineFrameIndex: 0, showColumnNumber: true });\n                if (link) {\n                    return this.#renderRow(i18nString(UIStrings.initiatedBy), link);\n                }\n            }\n        }\n        // If we do not, we can see if the network handler found an initiator and try to link by URL\n        const initiator = this.#parsedTrace?.NetworkRequests.eventToInitiator.get(this.#networkRequest);\n        if (initiator) {\n            const link = this.#linkifier.maybeLinkifyScriptLocation(this.#maybeTarget, null, // this would be the scriptId, but we don't have one. The linkifier will fallback to using the URL.\n            initiator.args.data.url, undefined);\n            if (link) {\n                return this.#renderRow(i18nString(UIStrings.initiatedBy), link);\n            }\n        }\n        return null;\n    }\n    #renderBlockingRow() {\n        if (!this.#networkRequest || !Helpers.Network.isSyntheticNetworkRequestEventRenderBlocking(this.#networkRequest)) {\n            return null;\n        }\n        let renderBlockingText;\n        switch (this.#networkRequest.args.data.renderBlocking) {\n            case 'blocking':\n                renderBlockingText = UIStrings.renderBlocking;\n                break;\n            case 'in_body_parser_blocking':\n                renderBlockingText = UIStrings.inBodyParserBlocking;\n                break;\n            default:\n                // Shouldn't fall to this block, if so, this network request is not render blocking, so return null.\n                return null;\n        }\n        return this.#renderRow(i18nString(UIStrings.blocking), renderBlockingText);\n    }\n    async #renderPreviewElement() {\n        if (!this.#networkRequest) {\n            return null;\n        }\n        if (!this.#requestPreviewElements.get(this.#networkRequest) && this.#networkRequest.args.data.url &&\n            this.#maybeTarget) {\n            const previewElement = await LegacyComponents.ImagePreview.ImagePreview.build(this.#maybeTarget, this.#networkRequest.args.data.url, false, {\n                imageAltText: LegacyComponents.ImagePreview.ImagePreview.defaultAltTextForImageURL(this.#networkRequest.args.data.url),\n                precomputedFeatures: undefined,\n                align: \"start\" /* LegacyComponents.ImagePreview.Align.START */,\n            });\n            this.#requestPreviewElements.set(this.#networkRequest, previewElement);\n        }\n        const requestPreviewElement = this.#requestPreviewElements.get(this.#networkRequest);\n        if (requestPreviewElement) {\n            return this.#renderRow(i18nString(UIStrings.preview), requestPreviewElement);\n        }\n        return null;\n    }\n    async #render() {\n        if (!this.#networkRequest) {\n            return;\n        }\n        const networkData = this.#networkRequest.args.data;\n        // clang-format off\n        const output = html `\n      ${this.#renderTitle()}\n      ${this.#renderURL()}\n      <div class=\"network-request-details-cols\">\n        <div class=\"network-request-details-col\">\n          ${this.#renderRow(i18nString(UIStrings.requestMethod), networkData.requestMethod)}\n          ${this.#renderRow(i18nString(UIStrings.priority), NetworkRequestTooltip.renderPriorityValue(this.#networkRequest))}\n          ${this.#renderRow(i18nString(UIStrings.mimeType), networkData.mimeType)}\n          ${this.#renderEncodedDataLength()}\n          ${this.#renderRow(i18nString(UIStrings.decodedBody), Platform.NumberUtilities.bytesToString(this.#networkRequest.args.data.decodedBodyLength))}\n          ${this.#renderBlockingRow()}\n          ${this.#renderFromCache()}\n        </div>\n        <div class=\"network-request-details-col\">\n          <div class=\"timing-rows\">\n            ${NetworkRequestTooltip.renderTimings(this.#networkRequest)}\n          </div>\n        </div>\n      </div>\n      ${this.#renderInitiatedBy()}\n      ${await this.#renderPreviewElement()}\n    `; // The last items are outside the 2 column layout because InitiatedBy can be very wide\n        // clang-format on\n        LitHtml.render(output, this.#shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-network-request-details', NetworkRequestDetails);\n//# sourceMappingURL=NetworkRequestDetails.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n  padding: var(--sys-size-4);\n}\n\nul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--sys-size-5);\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.insight-chip button {\n  background: none;\n  user-select: none;\n  font: var(--sys-typescale-body4-regular);\n  border: var(--sys-size-1) solid var(--sys-color-primary);\n  border-radius: var(--sys-shape-corner-extra-small);\n  display: flex;\n  margin-top: var(--sys-size-4);\n  padding: var(--sys-size-2) var(--sys-size-4) var(--sys-size-2) var(--sys-size-4);\n  width: max-content;\n  white-space: pre;\n\n  .keyword {\n    color: var(--sys-color-primary);\n    padding-right: var(--sys-size-3);\n  }\n}\n\n.insight-chip button:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n  cursor: pointer;\n  transition: opacity 0.2s ease;\n}\n\n/*# sourceURL=relatedInsightChips.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport styles from './relatedInsightChips.css.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description prefix shown next to related insight chips\n     */\n    insightKeyword: 'Insight',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/RelatedInsightChips.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class RelatedInsightChips extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #boundRender = this.#render.bind(this);\n    #data = { eventToRelatedInsightsMap: new Map(), activeEvent: null };\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [styles];\n        this.#render();\n    }\n    set activeEvent(event) {\n        if (event === this.#data.activeEvent) {\n            return;\n        }\n        this.#data.activeEvent = event;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    set eventToRelatedInsightsMap(map) {\n        this.#data.eventToRelatedInsightsMap = map;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    #insightClick(insight) {\n        return (event) => {\n            event.preventDefault();\n            insight.activateInsight();\n        };\n    }\n    #render() {\n        const { activeEvent, eventToRelatedInsightsMap } = this.#data;\n        const relatedInsights = activeEvent ? eventToRelatedInsightsMap.get(activeEvent) ?? [] : [];\n        if (!activeEvent || eventToRelatedInsightsMap.size === 0 || relatedInsights.length === 0) {\n            LitHtml.render(html ``, this.#shadow, { host: this });\n            return;\n        }\n        const insightChips = relatedInsights.map(insight => {\n            // clang-format off\n            return html `\n      <li class=\"insight-chip\">\n        <button type=\"button\" @click=${this.#insightClick(insight)}>\n          <span class=\"keyword\">${i18nString(UIStrings.insightKeyword)}</span>\n          <span class=\"insight-label\">${insight.insightLabel}</span>\n        </button>\n      </li>\n      `;\n            // clang-format on\n        });\n        // clang-format off\n        LitHtml.render(html `<ul>${insightChips}</ul>`, this.#shadow, { host: this });\n        // clang-format on\n    }\n}\ncustomElements.define('devtools-related-insight-chips', RelatedInsightChips);\n//# sourceMappingURL=RelatedInsightChips.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n  height: 100%;\n}\n\n.annotations {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  padding: 0;\n}\n\n.visibility-setting {\n  margin-top: auto;\n}\n\n.annotation-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 10px;\n\n  .delete-button {\n    visibility: hidden;\n    border: none;\n    background: none;\n  }\n\n  &:hover,\n  &:focus-within {\n    background-color: var(--sys-color-neutral-container);\n\n    button.delete-button {\n      visibility: visible;\n    }\n  }\n}\n\n.annotation {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  word-break: break-word;\n  padding: var(--sys-size-8) 0;\n  gap: 6px;\n}\n\n.annotation-identifier {\n  padding: 4px 8px;\n  border-radius: 10px;\n  font-weight: bold;\n\n  &.time-range {\n    background-color: var(--app-color-performance-sidebar-time-range);\n    color: var(--app-color-performance-sidebar-label-text-light);\n  }\n}\n\n.entries-link {\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 2px;\n  align-items: center;\n}\n\n.label {\n  font-size: larger;\n}\n\n.annotation-tutorial-container {\n  padding: 10px;\n}\n\n.tutorial-card {\n  display: block;\n  position: relative;\n  margin: 10px 0;\n  padding: 10px;\n  border-radius: var(--sys-shape-corner-extra-small);\n  overflow: hidden;\n  border: 1px solid var(--sys-color-divider);\n  background-color: var(--sys-color-base);\n}\n\n.tutorial-image {\n  display: flex;\n  justify-content: center;\n\n  & > img {\n    max-width: 100%;\n    height: auto;\n  }\n}\n\n.tutorial-title,\n.tutorial-description {\n  margin: 5px 0;\n}\n\n/*# sourceURL=sidebarAnnotationsTab.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as TraceBounds from '../../../services/trace_bounds/trace_bounds.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as ThemeSupport from '../../../ui/legacy/theme_support/theme_support.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport { nameForEntry } from './EntryName.js';\nimport { RemoveAnnotation, RevealAnnotation } from './Sidebar.js';\nimport sidebarAnnotationsTabStyles from './sidebarAnnotationsTab.css.js';\nconst { html } = LitHtml;\nconst diagramImageUrl = new URL('../../../Images/performance-panel-diagram.svg', import.meta.url).toString();\nconst entryLabelImageUrl = new URL('../../../Images/performance-panel-entry-label.svg', import.meta.url).toString();\nconst timeRangeImageUrl = new URL('../../../Images/performance-panel-time-range.svg', import.meta.url).toString();\nconst deleteAnnotationImageUrl = new URL('../../../Images/performance-panel-delete-annotation.svg', import.meta.url).toString();\nconst UIStrings = {\n    /**\n     * @description Title for entry label.\n     */\n    annotationGetStarted: 'Annotate a trace for yourself and others',\n    /**\n     * @description Title for entry label.\n     */\n    entryLabelTutorialTitle: 'Label an item',\n    /**\n     * @description Text for how to create an entry label.\n     */\n    entryLabelTutorialDescription: 'Double-click on an item and type to create an item label.',\n    /**\n     * @description  Title for diagram.\n     */\n    entryLinkTutorialTitle: 'Connect two items',\n    /**\n     * @description Text for how to create a diagram between entries.\n     */\n    entryLinkTutorialDescription: 'Double-click on an item, click on the adjacent rightward arrow, then select the destination item.',\n    /**\n     * @description  Title for time range.\n     */\n    timeRangeTutorialTitle: 'Define a time range',\n    /**\n     * @description Text for how to create a time range selection and add note.\n     */\n    timeRangeTutorialDescription: 'Shift-drag in the flamechart then type to create a time range annotation.',\n    /**\n     * @description  Title for deleting annotations.\n     */\n    deleteAnnotationTutorialTitle: 'Delete an annotation',\n    /**\n     * @description Text for how to access an annotation delete function.\n     */\n    deleteAnnotationTutorialDescription: 'Hover over the list in the sidebar with Annotations tab selected to access the delete function.',\n    /**\n     * @description Text used to describe the delete button to screen readers.\n     * @example {\"A paint event annotated with the text hello world\"} PH1\n     **/\n    deleteButton: 'Delete annotation: {PH1}',\n    /**\n     * @description label used to describe an annotation on an entry\n     *@example {Paint} PH1\n     *@example {\"Hello world\"} PH2\n     */\n    entryLabelDescriptionLabel: 'A \"{PH1}\" event annotated with the text \"{PH2}\"',\n    /**\n     * @description label used to describe a time range annotation\n     *@example {2.5 milliseconds} PH1\n     *@example {13.5 milliseconds} PH2\n     */\n    timeRangeDescriptionLabel: 'A time range starting at {PH1} and ending at {PH2}',\n    /**\n     * @description label used to describe a link from one entry to another.\n     *@example {Paint} PH1\n     *@example {Recalculate styles} PH2\n     */\n    entryLinkDescriptionLabel: 'A link between a \"{PH1}\" event and a \"{PH2}\" event',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/SidebarAnnotationsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class SidebarAnnotationsTab extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #boundRender = this.#render.bind(this);\n    #annotations = [];\n    // A map with annotated entries and the colours that are used to display them in the FlameChart.\n    // We need this map to display the entries in the sidebar with the same colours.\n    #annotationEntryToColorMap = new Map();\n    #annotationsHiddenSetting;\n    constructor() {\n        super();\n        this.#annotationsHiddenSetting = Common.Settings.Settings.instance().moduleSetting('annotations-hidden');\n    }\n    set annotations(annotations) {\n        this.#annotations = this.#processAnnotationsList(annotations);\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    set annotationEntryToColorMap(annotationEntryToColorMap) {\n        this.#annotationEntryToColorMap = annotationEntryToColorMap;\n    }\n    #processAnnotationsList(annotations) {\n        // When an entry is double-clicked, we create two annotations (a label and an entries connection) for the user to choose from.\n        // The one not selected is deleted when the user makes their selection.\n        // To avoid excessive activity in the sidebar (adding and removing annotations), only show one 'not started' annotation associated with an entry.\n        //\n        // If we encounter an annotation for an entry that hasn't started creation, add that entry to the 'entriesWithNotStartedAnnotation'\n        // set. This allows us to filter out any subsequent not started annotations for the same entry.\n        const entriesWithNotStartedAnnotation = new Set();\n        const processedAnnotations = annotations.filter(annotation => {\n            if (this.#isAnnotationCreationStarted(annotation)) {\n                return true;\n            }\n            if (annotation.type === 'ENTRIES_LINK' || annotation.type === 'ENTRY_LABEL') {\n                const annotationEntry = annotation.type === 'ENTRIES_LINK' ? annotation.entryFrom : annotation.entry;\n                if (entriesWithNotStartedAnnotation.has(annotationEntry)) {\n                    return false;\n                }\n                entriesWithNotStartedAnnotation.add(annotationEntry);\n            }\n            return true;\n        });\n        // Sort annotations by timestamp.\n        processedAnnotations.sort((firstAnnotation, secondAnnotation) => this.#getAnnotationTimestamp(firstAnnotation) - this.#getAnnotationTimestamp(secondAnnotation));\n        return processedAnnotations;\n    }\n    #getAnnotationTimestamp(annotation) {\n        switch (annotation.type) {\n            case 'ENTRY_LABEL': {\n                return annotation.entry.ts;\n            }\n            case 'ENTRIES_LINK': {\n                return annotation.entryFrom.ts;\n            }\n            case 'TIME_RANGE': {\n                return annotation.bounds.min;\n            }\n            default: {\n                Platform.assertNever(annotation, `Invalid annotation type ${annotation}`);\n            }\n        }\n    }\n    #isAnnotationCreationStarted(annotation) {\n        // Consider the annotation not started if:\n        // ENTRY_LABEL - label is empty\n        // ENTRIES_LINK - the connection annotation does not have the 'to' entry\n        // TIME_RANGE - range is over zero\n        switch (annotation.type) {\n            case 'ENTRY_LABEL': {\n                return annotation.label.length > 0;\n            }\n            case 'ENTRIES_LINK': {\n                return Boolean(annotation.entryTo);\n            }\n            case 'TIME_RANGE': {\n                return annotation.bounds.range > 0;\n            }\n        }\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [sidebarAnnotationsTabStyles];\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    #renderEntryToIdentifier(annotation) {\n        if (annotation.entryTo) {\n            const entryToName = nameForEntry(annotation.entryTo);\n            const toBackgroundColor = this.#annotationEntryToColorMap.get(annotation.entryTo) ?? '';\n            const toTextColor = findTextColorForContrast(toBackgroundColor);\n            const styleForToAnnotationIdentifier = {\n                backgroundColor: toBackgroundColor,\n                color: toTextColor,\n            };\n            // clang-format off\n            return html `\n        <span class=\"annotation-identifier\" style=${LitHtml.Directives.styleMap(styleForToAnnotationIdentifier)}>\n          ${entryToName}\n        </span>`;\n            // clang-format on\n        }\n        return LitHtml.nothing;\n    }\n    /**\n     * Renders the Annotation 'identifier' or 'name' in the annotations list.\n     * This is the text rendered before the annotation label that we use to indentify the annotation.\n     *\n     * Annotations identifiers for different annotations:\n     * Entry label -> Entry name\n     * Labelled range -> Start to End Range of the label in ms\n     * Connected entries -> Connected entries names\n     *\n     * All identifiers have a different colour background.\n     */\n    #renderAnnotationIdentifier(annotation) {\n        switch (annotation.type) {\n            case 'ENTRY_LABEL': {\n                const entryName = nameForEntry(annotation.entry);\n                const backgroundColor = this.#annotationEntryToColorMap.get(annotation.entry) ?? '';\n                const color = findTextColorForContrast(backgroundColor);\n                const styleForAnnotationIdentifier = {\n                    backgroundColor,\n                    color,\n                };\n                return html `\n              <span class=\"annotation-identifier\" style=${LitHtml.Directives.styleMap(styleForAnnotationIdentifier)}>\n                ${entryName}\n              </span>\n        `;\n            }\n            case 'TIME_RANGE': {\n                const minTraceBoundsMilli = TraceBounds.TraceBounds.BoundsManager.instance().state()?.milli.entireTraceBounds.min ?? 0;\n                const timeRangeStartInMs = Math.round(Trace.Helpers.Timing.microSecondsToMilliseconds(annotation.bounds.min) - minTraceBoundsMilli);\n                const timeRangeEndInMs = Math.round(Trace.Helpers.Timing.microSecondsToMilliseconds(annotation.bounds.max) - minTraceBoundsMilli);\n                return html `\n              <span class=\"annotation-identifier time-range\">\n                ${timeRangeStartInMs} - ${timeRangeEndInMs} ms\n              </span>\n        `;\n            }\n            case 'ENTRIES_LINK': {\n                const entryFromName = nameForEntry(annotation.entryFrom);\n                const fromBackgroundColor = this.#annotationEntryToColorMap.get(annotation.entryFrom) ?? '';\n                const fromTextColor = findTextColorForContrast(fromBackgroundColor);\n                const styleForFromAnnotationIdentifier = {\n                    backgroundColor: fromBackgroundColor,\n                    color: fromTextColor,\n                };\n                // clang-format off\n                return html `\n          <div class=\"entries-link\">\n            <span class=\"annotation-identifier\" style=${LitHtml.Directives.styleMap(styleForFromAnnotationIdentifier)}>\n              ${entryFromName}\n            </span>\n            <devtools-icon class=\"inline-icon\" .data=${{\n                    iconName: 'arrow-forward',\n                    color: 'var(--icon-default)',\n                    width: '18px',\n                    height: '18px',\n                }}>\n            </devtools-icon>\n            ${this.#renderEntryToIdentifier(annotation)}\n          </div>\n      `;\n                // clang-format on\n            }\n            default:\n                Platform.assertNever(annotation, 'Unsupported annotation type');\n        }\n    }\n    #revealAnnotation(annotation) {\n        this.dispatchEvent(new RevealAnnotation(annotation));\n    }\n    #renderTutorialCard() {\n        return html `\n      <div class=\"annotation-tutorial-container\">\n      ${i18nString(UIStrings.annotationGetStarted)}\n        <div class=\"tutorial-card\">\n          <div class=\"tutorial-image\"> <img src=${entryLabelImageUrl}></img></div>\n          <div class=\"tutorial-title\">${i18nString(UIStrings.entryLabelTutorialTitle)}</div>\n          <div class=\"tutorial-description\">${i18nString(UIStrings.entryLabelTutorialDescription)}</div>\n        </div>\n        <div class=\"tutorial-card\">\n          <div class=\"tutorial-image\"> <img src=${diagramImageUrl}></img></div>\n          <div class=\"tutorial-title\">${i18nString(UIStrings.entryLinkTutorialTitle)}</div>\n          <div class=\"tutorial-description\">${i18nString(UIStrings.entryLinkTutorialDescription)}</div>\n        </div>\n        <div class=\"tutorial-card\">\n          <div class=\"tutorial-image\"> <img src=${timeRangeImageUrl}></img></div>\n          <div class=\"tutorial-title\">${i18nString(UIStrings.timeRangeTutorialTitle)}</div>\n          <div class=\"tutorial-description\">${i18nString(UIStrings.timeRangeTutorialDescription)}</div>\n        </div>\n        <div class=\"tutorial-card\">\n          <div class=\"tutorial-image\"> <img src=${deleteAnnotationImageUrl}></img></div>\n          <div class=\"tutorial-title\">${i18nString(UIStrings.deleteAnnotationTutorialTitle)}</div>\n          <div class=\"tutorial-description\">${i18nString(UIStrings.deleteAnnotationTutorialDescription)}</div>\n        </div>\n      </div>\n    `;\n    }\n    #jslogForAnnotation(annotation) {\n        switch (annotation.type) {\n            case 'ENTRY_LABEL':\n                return 'entry-label';\n            case 'TIME_RANGE':\n                return 'time-range';\n            case 'ENTRIES_LINK':\n                return 'entries-link';\n            default:\n                Platform.assertNever(annotation, 'unknown annotation type');\n        }\n    }\n    #render() {\n        // clang-format off\n        LitHtml.render(html `\n        <span class=\"annotations\">\n          ${this.#annotations.length === 0 ?\n            this.#renderTutorialCard() :\n            html `\n              ${this.#annotations.map(annotation => {\n                const label = detailedAriaDescriptionForAnnotation(annotation);\n                return html `\n                  <div class=\"annotation-container\"\n                    @click=${() => this.#revealAnnotation(annotation)}\n                    aria-label=${label}\n                    tabindex=\"0\"\n                    jslog=${VisualLogging.item(`timeline.annotation-sidebar.annotation-${this.#jslogForAnnotation(annotation)}`).track({ click: true })}\n                  >\n                    <div class=\"annotation\">\n                      ${this.#renderAnnotationIdentifier(annotation)}\n                      <span class=\"label\">\n                        ${(annotation.type === 'ENTRY_LABEL' || annotation.type === 'TIME_RANGE') ? annotation.label : ''}\n                      </span>\n                    </div>\n                    <button class=\"delete-button\" aria-label=${i18nString(UIStrings.deleteButton, { PH1: label })} @click=${(event) => {\n                    // Stop propagation to not zoom into the annotation when\n                    // the delete button is clicked\n                    event.stopPropagation();\n                    this.dispatchEvent(new RemoveAnnotation(annotation));\n                }} jslog=${VisualLogging.action('timeline.annotation-sidebar.delete').track({ click: true })}>\n                      <devtools-icon\n                        class=\"bin-icon\"\n                        .data=${{\n                    iconName: 'bin',\n                    color: 'var(--icon-default)',\n                    width: '20px',\n                    height: '20px',\n                }}\n                      ></devtools-icon>\n                    </button>\n                  </div>`;\n            })}\n              <setting-checkbox class=\"visibility-setting\" .data=${{\n                setting: this.#annotationsHiddenSetting,\n                textOverride: 'Hide annotations',\n            }}>\n              </setting-checkbox>`}\n      </span>`, this.#shadow, { host: this });\n        // clang-format on\n    }\n}\ncustomElements.define('devtools-performance-sidebar-annotations', SidebarAnnotationsTab);\nfunction detailedAriaDescriptionForAnnotation(annotation) {\n    switch (annotation.type) {\n        case 'ENTRY_LABEL': {\n            const name = nameForEntry(annotation.entry);\n            return i18nString(UIStrings.entryLabelDescriptionLabel, {\n                PH1: name,\n                PH2: annotation.label,\n            });\n        }\n        case 'TIME_RANGE': {\n            const from = i18n.TimeUtilities.formatMicroSecondsAsMillisFixedExpanded(annotation.bounds.min);\n            const to = i18n.TimeUtilities.formatMicroSecondsAsMillisFixedExpanded(annotation.bounds.max);\n            return i18nString(UIStrings.timeRangeDescriptionLabel, {\n                PH1: from,\n                PH2: to,\n            });\n        }\n        case 'ENTRIES_LINK': {\n            if (!annotation.entryTo) {\n                // Only label it if it is completed.\n                return '';\n            }\n            const nameFrom = nameForEntry(annotation.entryFrom);\n            const nameTo = nameForEntry(annotation.entryTo);\n            return i18nString(UIStrings.entryLinkDescriptionLabel, {\n                PH1: nameFrom,\n                PH2: nameTo,\n            });\n        }\n        default:\n            Platform.assertNever(annotation, 'Unsupported annotation');\n    }\n}\nfunction findTextColorForContrast(bgColorText) {\n    const bgColor = Common.Color.parse(bgColorText)?.asLegacyColor();\n    // Let's default to black text, since the entries' titles are black in the flamechart.\n    const darkColorToken = '--app-color-performance-sidebar-label-text-dark';\n    const darkColorText = Common.Color.parse(ThemeSupport.ThemeSupport.instance().getComputedValue(darkColorToken))?.asLegacyColor();\n    if (!bgColor || !darkColorText) {\n        // This part of code shouldn't be reachable unless background color is invalid or something wrong with the color\n        // parsing. If so let's fall back to the dark color,\n        return `var(${darkColorToken})`;\n    }\n    const contrastRatio = Common.ColorUtils.contrastRatio(bgColor.rgba(), darkColorText.rgba());\n    return contrastRatio >= 4.5 ? `var(${darkColorToken})` : 'var(--app-color-performance-sidebar-label-text-light)';\n}\n//# sourceMappingURL=SidebarAnnotationsTab.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: block;\n  padding: 5px 10px;\n}\n\n.metrics-row {\n  display: flex;\n  flex-direction: row;\n}\n\n.metric {\n  flex: 1;\n  user-select: text;\n  cursor: pointer;\n  /* metric container is a button for a11y reasons, so remove default styles\n   * */\n  background: none;\n  border: none;\n  padding: 0;\n  display: block;\n  text-align: left;\n}\n\n.metric-value {\n  font-size: var(--sys-size-11);\n}\n\n.metric-value-bad {\n  color: var(--app-color-performance-bad);\n}\n\n.metric-value-ok {\n  color: var(--app-color-performance-ok);\n}\n\n.metric-value-good {\n  color: var(--app-color-performance-good);\n}\n\n.metric-score-unclassified {\n  color: var(--sys-color-token-subtle);\n}\n\n.metric-label {\n  font: var(--sys-typescale-body4-medium);\n}\n\n.number-with-unit {\n  white-space: nowrap;\n\n  .unit {\n    font-size: 14px;\n    padding: 0 1px;\n  }\n}\n\n/*# sourceURL=sidebarSingleInsightSet.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as Insights from './insights/insights.js';\nimport styles from './sidebarSingleInsightSet.css.js';\nimport { NumberWithUnit } from './Utils.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description title used for a metric value to tell the user about its score classification\n     *@example {INP} PH1\n     *@example {1.2s} PH2\n     *@example {poor} PH3\n     */\n    metricScore: '{PH1}: {PH2} {PH3} score',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/SidebarSingleInsightSet.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * These are WIP Insights that are only shown if the user has turned on the\n * \"enable experimental performance insights\" experiment. This is used to enable\n * us to ship incrementally without turning insights on by default for all\n * users. */\nconst EXPERIMENTAL_INSIGHTS = new Set([\n    Insights.FontDisplay.FontDisplay,\n]);\n/**\n * Every insight (INCLUDING experimental ones)\n * The order of this array is the order the insights will be shown in the sidebar.\n * TODO(crbug.com/368135130): sort this in a smart way!\n */\nconst ALL_INSIGHTS = [\n    Insights.InteractionToNextPaint.InteractionToNextPaint,\n    Insights.LCPPhases.LCPPhases,\n    Insights.LCPDiscovery.LCPDiscovery,\n    Insights.CLSCulprits.CLSCulprits,\n    Insights.RenderBlocking.RenderBlockingRequests,\n    Insights.DocumentLatency.DocumentLatency,\n    Insights.FontDisplay.FontDisplay,\n    Insights.Viewport.Viewport,\n    Insights.ThirdParties.ThirdParties,\n    Insights.SlowCSSSelector.SlowCSSSelector,\n];\nexport class SidebarSingleInsightSet extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #renderBound = this.#render.bind(this);\n    #data = {\n        parsedTrace: null,\n        insights: null,\n        insightSetKey: null,\n        activeCategory: Insights.Types.Category.ALL,\n        activeInsight: null,\n    };\n    set data(data) {\n        this.#data = data;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [styles];\n        this.#render();\n    }\n    #metricIsVisible(label) {\n        if (this.#data.activeCategory === Insights.Types.Category.ALL) {\n            return true;\n        }\n        return label === this.#data.activeCategory;\n    }\n    #onClickMetric(traceEvent) {\n        this.dispatchEvent(new Insights.EventRef.EventReferenceClick(traceEvent));\n    }\n    #renderMetricValue(label, value, classification, eventToSelectOnClick) {\n        const valueText = typeof value === 'string' ? value : value.text;\n        const valueDisplay = typeof value === 'string' ? value : value.element;\n        // NOTE: it is deliberate to use the same value for the title and\n        // aria-label; the aria-label is used to give more context to\n        // screen-readers, and the title is to aid users who may not know what\n        // the red/orange/green classification is, or those who are unable to\n        // easily distinguish the visual colour differences.\n        // clang-format off\n        const title = i18nString(UIStrings.metricScore, { PH1: label, PH2: valueText, PH3: classification });\n        return this.#metricIsVisible(label) ? html `\n      <button class=\"metric\"\n        @click=${eventToSelectOnClick ? this.#onClickMetric.bind(this, eventToSelectOnClick) : null}\n        title=${title}\n        aria-label=${title}\n      >\n        <div class=\"metric-value metric-value-${classification}\">${valueDisplay}</div>\n        <div class=\"metric-label\">${label}</div>\n      </button>\n    ` : LitHtml.nothing;\n        // clang-format on\n    }\n    #getINP(insightSetKey) {\n        const insight = Trace.Insights.Common.getInsight('InteractionToNextPaint', this.#data.insights, insightSetKey);\n        if (!insight?.longestInteractionEvent?.dur) {\n            return null;\n        }\n        const value = insight.longestInteractionEvent.dur;\n        return { value, event: insight.longestInteractionEvent };\n    }\n    #getLCP(insightSetKey) {\n        const insight = Trace.Insights.Common.getInsight('LargestContentfulPaint', this.#data.insights, insightSetKey);\n        if (!insight || !insight.lcpMs || !insight.lcpEvent) {\n            return null;\n        }\n        const value = Trace.Helpers.Timing.millisecondsToMicroseconds(insight.lcpMs);\n        return { value, event: insight.lcpEvent };\n    }\n    #getCLS(insightSetKey) {\n        const insight = Trace.Insights.Common.getInsight('CumulativeLayoutShift', this.#data.insights, insightSetKey);\n        if (!insight) {\n            // Unlike the other metrics, there is still a value for this metric even with no data.\n            // This means this view will always display a CLS score.\n            return { value: 0, worstShiftEvent: null };\n        }\n        // TODO(cjamcl): the CLS insight should be doing this for us.\n        let maxScore = 0;\n        let worstCluster;\n        for (const cluster of insight.clusters) {\n            if (cluster.clusterCumulativeScore > maxScore) {\n                maxScore = cluster.clusterCumulativeScore;\n                worstCluster = cluster;\n            }\n        }\n        return { value: maxScore, worstShiftEvent: worstCluster?.worstShiftEvent ?? null };\n    }\n    #renderMetrics(insightSetKey) {\n        const lcp = this.#getLCP(insightSetKey);\n        const cls = this.#getCLS(insightSetKey);\n        const inp = this.#getINP(insightSetKey);\n        return html `\n    <div class=\"metrics-row\">\n    ${lcp ? this.#renderMetricValue('LCP', NumberWithUnit.formatMicroSecondsAsSeconds(lcp.value), Trace.Handlers.ModelHandlers.PageLoadMetrics.scoreClassificationForLargestContentfulPaint(lcp.value), lcp.event ?? null) :\n            LitHtml.nothing}\n    ${inp ? this.#renderMetricValue('INP', NumberWithUnit.formatMicroSecondsAsMillisFixed(inp.value), Trace.Handlers.ModelHandlers.UserInteractions.scoreClassificationForInteractionToNextPaint(inp.value), inp.event) :\n            LitHtml.nothing}\n    ${this.#renderMetricValue('CLS', cls.value ? cls.value.toFixed(2) : '0', Trace.Handlers.ModelHandlers.LayoutShifts.scoreClassificationForLayoutShift(cls.value), cls.worstShiftEvent)}\n    </div>\n    `;\n    }\n    #insightsForRendering() {\n        const includeExperimental = Root.Runtime.experiments.isEnabled(\"timeline-experimental-insights\" /* Root.Runtime.ExperimentName.TIMELINE_EXPERIMENTAL_INSIGHTS */);\n        if (includeExperimental) {\n            return ALL_INSIGHTS;\n        }\n        return ALL_INSIGHTS.filter(insight => !EXPERIMENTAL_INSIGHTS.has(insight));\n    }\n    #renderInsights(insights, parsedTrace, insightSetKey) {\n        const insightComponents = this.#insightsForRendering();\n        // clang-format off\n        return html `${insightComponents.map(component => {\n            return html `<div data-single-insight-wrapper>\n        <${component.litTagName}\n          .insights=${insights}\n          .parsedTrace=${parsedTrace}\n          .insightSetKey=${insightSetKey}\n          .activeInsight=${this.#data.activeInsight}\n          .activeCategory=${this.#data.activeCategory}>\n        </${component.litTagName}>\n      </div>`;\n        })}`;\n        // clang-format on\n    }\n    #render() {\n        const { parsedTrace, insights, insightSetKey, } = this.#data;\n        if (!parsedTrace || !insights || !insightSetKey) {\n            LitHtml.render(html ``, this.#shadow, { host: this });\n            return;\n        }\n        // clang-format off\n        LitHtml.render(html `\n      <div class=\"navigation\">\n        ${this.#renderMetrics(insightSetKey)}\n        ${this.#renderInsights(insights, parsedTrace, insightSetKey)}\n        </div>\n      `, this.#shadow, { host: this });\n        // clang-format on\n    }\n}\ncustomElements.define('devtools-performance-sidebar-single-navigation', SidebarSingleInsightSet);\n//# sourceMappingURL=SidebarSingleInsightSet.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: flex;\n  flex-flow: column nowrap;\n  flex-grow: 1;\n}\n\n.insight-sets-wrapper {\n  display: flex;\n  flex-flow: column nowrap;\n  flex-grow: 1; /* so it fills the available vertical height in the sidebar */\n\n  details {\n    flex-grow: 0;\n  }\n\n  details[open] {\n    flex-grow: 1;\n    border-bottom: 1px solid var(--sys-color-divider);\n  }\n\n  summary {\n    background-color: var(--sys-color-surface2);\n    border-bottom: 1px solid var(--sys-color-divider);\n    overflow: hidden;\n    padding: 2px 5px;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    font: var(--sys-typescale-body4-medium);\n    display: flex;\n    align-items: center;\n\n    &:focus {\n      background-color: var(--sys-color-tonal-container);\n    }\n\n    &::marker {\n      color: var(--sys-color-on-surface-subtle);\n      font-size: 11px;\n      line-height: 1;\n    }\n\n    /* make sure the first summary has a top border */\n    details:first-child & {\n      border-top: 1px solid var(--sys-color-divider);\n    }\n    }\n  }\n\n.zoom-button {\n  margin-left: auto;\n}\n\n.zoom-icon {\n  visibility: hidden;\n\n  &.active devtools-button {\n    visibility: visible;\n  }\n}\n\n.dropdown-icon {\n  &.active devtools-button {\n    transform: rotate(90deg);\n  }\n}\n\n.feedback-wrapper {\n  position: relative;\n  padding: var(--sys-size-6);\n\n  .tooltip {\n    visibility: hidden;\n    transition-property: visibility;\n    position: absolute;\n    bottom: 35px; /* height of button + a little extra padding */\n    width: 90%;\n    max-width: 300px;\n    left: var(--sys-size-6);\n    z-index: 1;\n    box-sizing: border-box;\n    padding: var(--sys-size-5) var(--sys-size-6);\n    border-radius: var(--sys-shape-corner-small);\n    background-color: var(--sys-color-cdt-base-container);\n    box-shadow: var(--drop-shadow-depth-3);\n  }\n\n  devtools-button:hover + .tooltip {\n    visibility: visible;\n  }\n}\n\n/*# sourceURL=sidebarInsightsTab.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport './SidebarSingleInsightSet.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as Utils from '../utils/utils.js';\nimport * as Insights from './insights/insights.js';\nimport styles from './sidebarInsightsTab.css.js';\nconst { html } = LitHtml;\nconst FEEDBACK_URL = 'https://crbug.com/371170842';\nconst UIStrings = {\n    /**\n     *@description text show in feedback button\n     */\n    feedbackButton: 'Feedback',\n    /**\n     *@description text show in feedback tooltip\n     */\n    feedbackTooltip: 'Insights is an experimental feature. Your feedback will help us improve it.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/SidebarInsightsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class SidebarInsightsTab extends HTMLElement {\n    #boundRender = this.#render.bind(this);\n    #shadow = this.attachShadow({ mode: 'open' });\n    #parsedTrace = null;\n    #insights = null;\n    #activeInsight = null;\n    #selectedCategory = Insights.Types.Category.ALL;\n    /**\n     * When a trace has sets of insights, we show an accordion with each\n     * set within. A set can be specific to a single navigation, or include the\n     * beginning of the trace up to the first navigation.\n     * You can only have one of these open at any time, and we track it via this ID.\n     */\n    #insightSetKey = null;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [styles];\n    }\n    // TODO(paulirish): add back a disconnectedCallback() to avoid memory leaks that doesn't cause b/372943062\n    set parsedTrace(data) {\n        if (data === this.#parsedTrace) {\n            return;\n        }\n        this.#parsedTrace = data;\n        this.#insightSetKey = null;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    set insights(data) {\n        if (data === this.#insights) {\n            return;\n        }\n        this.#insights = data;\n        this.#insightSetKey = null;\n        if (!this.#insights || !this.#parsedTrace) {\n            return;\n        }\n        // Select by default the first non-trivial insight set:\n        // - greater than 5s in duration\n        // - or, has a navigation\n        // In practice this means selecting either the first or the second insight set.\n        const trivialThreshold = Trace.Helpers.Timing.millisecondsToMicroseconds(Trace.Types.Timing.MilliSeconds(5000));\n        const insightSets = [...this.#insights.values()];\n        this.#insightSetKey =\n            insightSets.find(insightSet => insightSet.navigation || insightSet.bounds.range > trivialThreshold)?.id\n                // If everything is \"trivial\", just select the first one.\n                ?? insightSets[0]?.id ?? null;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    set activeInsight(active) {\n        if (active === this.#activeInsight) {\n            return;\n        }\n        this.#activeInsight = active;\n        // Only update the insightSetKey if there is an active insight. Otherwise, closing an insight\n        // would also collapse the insight set. Usually the proper insight set is already set because\n        // the user has it open already in order for this setter to be called, but insights can also\n        // be activated by clicking on a insight chip in the Summary panel, which may require opening\n        // a different insight set.\n        if (this.#activeInsight) {\n            this.#insightSetKey = this.#activeInsight.insightSetKey;\n        }\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    #insightSetToggled(id) {\n        this.#insightSetKey = this.#insightSetKey === id ? null : id;\n        // Update the active insight set.\n        if (this.#insightSetKey !== this.#activeInsight?.insightSetKey) {\n            this.dispatchEvent(new Insights.SidebarInsight.InsightDeactivated());\n        }\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    #insightSetHovered(id) {\n        const data = this.#insights?.get(id);\n        data && this.dispatchEvent(new Insights.SidebarInsight.InsightSetHovered(data.bounds));\n    }\n    #insightSetUnhovered() {\n        this.dispatchEvent(new Insights.SidebarInsight.InsightSetHovered());\n    }\n    #onFeedbackClick() {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(FEEDBACK_URL);\n    }\n    #onZoomClick(event, id) {\n        event.stopPropagation();\n        const data = this.#insights?.get(id);\n        if (!data) {\n            return;\n        }\n        this.dispatchEvent(new Insights.SidebarInsight.InsightSetZoom(data.bounds));\n    }\n    #renderZoomButton(insightSetToggled) {\n        const classes = LitHtml.Directives.classMap({\n            'zoom-icon': true,\n            active: insightSetToggled,\n        });\n        // clang-format off\n        return html `\n    <div class=${classes}>\n        <devtools-button .data=${{\n            variant: \"icon\" /* Buttons.Button.Variant.ICON */,\n            iconName: 'center-focus-weak',\n            size: \"SMALL\" /* Buttons.Button.Size.SMALL */,\n        }}\n      ></devtools-button></div>`;\n        // clang-format on\n    }\n    #renderDropdownIcon(insightSetToggled) {\n        const containerClasses = LitHtml.Directives.classMap({\n            'dropdown-icon': true,\n            active: insightSetToggled,\n        });\n        // clang-format off\n        return html `\n      <div class=${containerClasses}>\n        <devtools-button .data=${{\n            variant: \"icon\" /* Buttons.Button.Variant.ICON */,\n            iconName: 'chevron-right',\n            size: \"SMALL\" /* Buttons.Button.Size.SMALL */,\n        }}\n      ></devtools-button></div>\n    `;\n        // clang-format on\n    }\n    #render() {\n        if (!this.#parsedTrace || !this.#insights) {\n            LitHtml.render(LitHtml.nothing, this.#shadow, { host: this });\n            return;\n        }\n        const hasMultipleInsightSets = this.#insights.size > 1;\n        const labels = Utils.Helpers.createUrlLabels([...this.#insights.values()].map(({ url }) => url));\n        const contents = \n        // clang-format off\n        html `\n      <div class=\"insight-sets-wrapper\">\n        ${[...this.#insights.values()].map(({ id, url }, index) => {\n            const data = {\n                parsedTrace: this.#parsedTrace,\n                insights: this.#insights,\n                insightSetKey: id,\n                activeCategory: this.#selectedCategory,\n                activeInsight: this.#activeInsight,\n            };\n            const contents = html `\n            <devtools-performance-sidebar-single-navigation\n              .data=${data}>\n            </devtools-performance-sidebar-single-navigation>\n          `;\n            if (hasMultipleInsightSets) {\n                return html `<details\n              ?open=${id === this.#insightSetKey}\n            >\n              <summary\n                @click=${() => this.#insightSetToggled(id)}\n                @mouseenter=${() => this.#insightSetHovered(id)}\n                @mouseleave=${() => this.#insightSetUnhovered()}\n                title=${url.href}>\n                ${this.#renderDropdownIcon(id === this.#insightSetKey)}\n                <span>${labels[index]}</span>\n                <span class='zoom-button' @click=${(event) => this.#onZoomClick(event, id)}>${this.#renderZoomButton(id === this.#insightSetKey)}</span>\n              </summary>\n              ${contents}\n            </details>`;\n            }\n            return contents;\n        })}\n      </div>\n\n      <div class=\"feedback-wrapper\">\n        <devtools-button .variant=${\"outlined\" /* Buttons.Button.Variant.OUTLINED */} .iconName=${'experiment'} @click=${this.#onFeedbackClick}>\n          ${i18nString(UIStrings.feedbackButton)}\n        </devtools-button>\n\n        <p class=\"tooltip\">${i18nString(UIStrings.feedbackTooltip)}</p>\n      </div>\n    `;\n        // clang-format on\n        // Insight components contain state, so to prevent insights from previous trace loads breaking things we use the parsedTrace\n        // as a render key.\n        // Note: newer Lit has `keyed`, but we don't have that, so we do it manually. https://lit.dev/docs/templates/directives/#keyed\n        const result = LitHtml.Directives.repeat([contents], () => this.#parsedTrace, template => template);\n        LitHtml.render(result, this.#shadow, { host: this });\n    }\n}\ncustomElements.define('devtools-performance-sidebar-insights', SidebarInsightsTab);\n//# sourceMappingURL=SidebarInsightsTab.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../core/common/common.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as Adorners from '../../../ui/components/adorners/adorners.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport { SidebarAnnotationsTab } from './SidebarAnnotationsTab.js';\nimport { SidebarInsightsTab } from './SidebarInsightsTab.js';\nexport class RemoveAnnotation extends Event {\n    removedAnnotation;\n    static eventName = 'removeannotation';\n    constructor(removedAnnotation) {\n        super(RemoveAnnotation.eventName, { bubbles: true, composed: true });\n        this.removedAnnotation = removedAnnotation;\n    }\n}\nexport class RevealAnnotation extends Event {\n    annotation;\n    static eventName = 'revealannotation';\n    constructor(annotation) {\n        super(RevealAnnotation.eventName, { bubbles: true, composed: true });\n        this.annotation = annotation;\n    }\n}\nexport const DEFAULT_SIDEBAR_TAB = \"insights\" /* SidebarTabs.INSIGHTS */;\nexport const DEFAULT_SIDEBAR_WIDTH_PX = 240;\nconst MIN_SIDEBAR_WIDTH_PX = 170;\nexport class SidebarWidget extends UI.Widget.VBox {\n    #tabbedPane = new UI.TabbedPane.TabbedPane();\n    #insightsView = new InsightsView();\n    #annotationsView = new AnnotationsView();\n    #annotationCount = 0;\n    /**\n     * Track if the user has opened the sidebar before. We do this so that the\n     * very first time they record/import a trace after the sidebar ships, we can\n     * automatically pop it open to aid discovery. But, after that, the sidebar\n     * visibility will be persisted based on if the user opens or closes it - the\n     * SplitWidget tracks its state in its own setting.\n     */\n    #userHasOpenedSidebarOnce = Common.Settings.Settings.instance().createSetting('timeline-user-has-opened-sidebar-once', false);\n    userHasOpenedSidebarOnce() {\n        return this.#userHasOpenedSidebarOnce.get();\n    }\n    constructor() {\n        super();\n        this.setMinimumSize(MIN_SIDEBAR_WIDTH_PX, 0);\n        if (Root.Runtime.experiments.isEnabled(\"timeline-rpp-sidebar\" /* Root.Runtime.ExperimentName.TIMELINE_INSIGHTS */)) {\n            this.#tabbedPane.appendTab(\"insights\" /* SidebarTabs.INSIGHTS */, 'Insights', this.#insightsView, undefined, undefined, false, false, 0, 'timeline.insights-tab');\n        }\n        if (Root.Runtime.experiments.isEnabled(\"perf-panel-annotations\" /* Root.Runtime.ExperimentName.TIMELINE_ANNOTATIONS */)) {\n            this.#tabbedPane.appendTab(\"annotations\" /* SidebarTabs.ANNOTATIONS */, 'Annotations', this.#annotationsView, undefined, undefined, false, false, 1, 'timeline.annotations-tab');\n        }\n        // Default the selected tab to Insights. In wasShown() we will change this\n        // if this is a trace that has no insights.\n        this.#tabbedPane.selectTab(\"insights\" /* SidebarTabs.INSIGHTS */);\n    }\n    wasShown() {\n        this.#userHasOpenedSidebarOnce.set(true);\n        this.#tabbedPane.show(this.element);\n        this.#updateAnnotationsCountBadge();\n        // Swap to the Annotations tab if:\n        // 1. Insights is currently selected.\n        // 2. The Insights tab is disabled (which means we have no insights for this trace)\n        // 3. The annotations tab exists (we can remove this check once annotations\n        //    are non-experimental)\n        if (this.#tabbedPane.selectedTabId === \"insights\" /* SidebarTabs.INSIGHTS */ &&\n            this.#tabbedPane.tabIsDisabled(\"insights\" /* SidebarTabs.INSIGHTS */) && this.#tabbedPane.hasTab(\"annotations\" /* SidebarTabs.ANNOTATIONS */)) {\n            this.#tabbedPane.selectTab(\"annotations\" /* SidebarTabs.ANNOTATIONS */);\n        }\n    }\n    setAnnotations(updatedAnnotations, annotationEntryToColorMap) {\n        this.#annotationsView.setAnnotations(updatedAnnotations, annotationEntryToColorMap);\n        this.#annotationCount = updatedAnnotations.length;\n        this.#updateAnnotationsCountBadge();\n    }\n    #updateAnnotationsCountBadge() {\n        let countAdorner = null;\n        if (this.#annotationCount > 0) {\n            countAdorner = new Adorners.Adorner.Adorner();\n            const countSpan = document.createElement('span');\n            countSpan.textContent = this.#annotationCount.toString();\n            countAdorner.data = {\n                name: 'countWrapper',\n                content: countSpan,\n            };\n            countAdorner.classList.add('annotations-count');\n        }\n        this.#tabbedPane.setSuffixElement('annotations', countAdorner);\n    }\n    setParsedTrace(parsedTrace) {\n        this.#insightsView.setParsedTrace(parsedTrace);\n    }\n    setInsights(insights) {\n        this.#insightsView.setInsights(insights);\n        this.#tabbedPane.setTabEnabled(\"insights\" /* SidebarTabs.INSIGHTS */, insights !== null);\n    }\n    setActiveInsight(activeInsight) {\n        this.#insightsView.setActiveInsight(activeInsight);\n        if (activeInsight) {\n            this.#tabbedPane.selectTab(\"insights\" /* SidebarTabs.INSIGHTS */);\n        }\n    }\n}\nclass InsightsView extends UI.Widget.VBox {\n    #component = new SidebarInsightsTab();\n    constructor() {\n        super();\n        this.element.classList.add('sidebar-insights');\n        this.element.appendChild(this.#component);\n    }\n    setParsedTrace(data) {\n        this.#component.parsedTrace = data;\n    }\n    setInsights(data) {\n        this.#component.insights = data;\n    }\n    setActiveInsight(active) {\n        this.#component.activeInsight = active;\n    }\n}\nclass AnnotationsView extends UI.Widget.VBox {\n    #component = new SidebarAnnotationsTab();\n    constructor() {\n        super();\n        this.element.classList.add('sidebar-annotations');\n        this.element.appendChild(this.#component);\n    }\n    setAnnotations(annotations, annotationEntryToColorMap) {\n        // The component will only re-render when set the annotations, so we should\n        // set the `annotationEntryToColorMap` first.\n        this.#component.annotationEntryToColorMap = annotationEntryToColorMap;\n        this.#component.annotations = annotations;\n    }\n}\n//# sourceMappingURL=Sidebar.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as TimelineComponents from './components/components.js';\nconst UIStrings = {\n    /**\n     *@description text used to announce to a screen reader that they have entered the mode to edit the label\n     */\n    srEnterLabelEditMode: 'Editing the annotation label text',\n    /**\n     *@description text used to announce to a screen reader that the entry label text has been updated\n     *@example {Hello world} PH1\n     */\n    srLabelTextUpdated: 'Label updated to {PH1}',\n    /**\n     *@description text used to announce to a screen reader that the bounds of a time range annotation have been upodated\n     *@example {13ms} PH1\n     *@example {20ms} PH2\n     */\n    srTimeRangeBoundsUpdated: 'Time range updated, starting at {PH1} and ending at {PH2}',\n    /**\n     *@description label for a time range overlay\n     */\n    timeRange: 'time range',\n    /**\n     *@description label for a entry label overlay\n     */\n    entryLabel: 'entry label',\n    /**\n     *@description label for a connected entries overlay\n     */\n    entriesLink: 'connected entries',\n    /**\n     *@description screen reader text to announce that an annotation has been removed\n     *@example {Entry Label} PH1\n     */\n    srAnnotationRemoved: 'The {PH1} annotation has been removed',\n    /**\n     *@description screen reader text to announce that an annotation has been added\n     *@example {Entry Label} PH1\n     */\n    srAnnotationAdded: 'The {PH1} annotation has been added',\n    /**\n     *@description screen reader text to announce the two events that the connected entries annotation links to\n     *@example {Paint} PH1\n     *@example {Function call} PH2\n     */\n    srEntriesLinked: 'The connected entries annotation now links from {PH1} to {PH2}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/AnnotationHelpers.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport function getAnnotationEntries(annotation) {\n    const entries = [];\n    switch (annotation.type) {\n        case 'ENTRY_LABEL':\n            entries.push(annotation.entry);\n            break;\n        case 'TIME_RANGE':\n            break;\n        case 'ENTRIES_LINK':\n            entries.push(annotation.entryFrom);\n            if (annotation.entryTo) {\n                entries.push(annotation.entryTo);\n            }\n            break;\n        default:\n            Platform.assertNever(annotation, 'Unsupported annotation type');\n    }\n    return entries;\n}\n/**\n * Gets a trace window that contains the given annotation. May return `null`\n * if there is no valid window (an ENTRIES_LINK without a `to` entry for\n * example.)\n */\nexport function getAnnotationWindow(annotation) {\n    let annotationWindow = null;\n    const minVisibleEntryDuration = Trace.Types.Timing.MilliSeconds(1);\n    switch (annotation.type) {\n        case 'ENTRY_LABEL': {\n            const eventDuration = annotation.entry.dur ?? Trace.Helpers.Timing.millisecondsToMicroseconds(minVisibleEntryDuration);\n            annotationWindow = Trace.Helpers.Timing.traceWindowFromMicroSeconds(annotation.entry.ts, Trace.Types.Timing.MicroSeconds(annotation.entry.ts + eventDuration));\n            break;\n        }\n        case 'TIME_RANGE': {\n            annotationWindow = annotation.bounds;\n            break;\n        }\n        case 'ENTRIES_LINK': {\n            // If entryTo does not exist, the annotation is in the process of being created.\n            // Do not allow to zoom into it in this case.\n            if (!annotation.entryTo) {\n                break;\n            }\n            const fromEventDuration = (annotation.entryFrom.dur) ?? minVisibleEntryDuration;\n            const toEventDuration = annotation.entryTo.dur ?? minVisibleEntryDuration;\n            // To choose window max, check which entry ends later\n            const fromEntryEndTS = (annotation.entryFrom.ts + fromEventDuration);\n            const toEntryEndTS = (annotation.entryTo.ts + toEventDuration);\n            const maxTimestamp = Math.max(fromEntryEndTS, toEntryEndTS);\n            annotationWindow = Trace.Helpers.Timing.traceWindowFromMicroSeconds(annotation.entryFrom.ts, Trace.Types.Timing.MicroSeconds(maxTimestamp));\n            break;\n        }\n        default:\n            Platform.assertNever(annotation, 'Unsupported annotation type');\n    }\n    return annotationWindow;\n}\nexport function isTimeRangeLabel(overlay) {\n    return overlay.type === 'TIME_RANGE';\n}\nexport function isEntriesLink(overlay) {\n    return overlay.type === 'ENTRIES_LINK';\n}\nexport function isEntryLabel(overlay) {\n    return overlay.type === 'ENTRY_LABEL';\n}\nfunction labelForOverlay(overlay) {\n    if (isTimeRangeLabel(overlay) || isEntryLabel(overlay)) {\n        return overlay.label;\n    }\n    return null;\n}\nexport function ariaDescriptionForOverlay(overlay) {\n    if (isTimeRangeLabel(overlay)) {\n        return i18nString(UIStrings.timeRange);\n    }\n    if (isEntriesLink(overlay)) {\n        return i18nString(UIStrings.entriesLink);\n    }\n    if (isEntryLabel(overlay)) {\n        return i18nString(UIStrings.entryLabel);\n    }\n    // Not an annotation overlay: ignore.\n    return null;\n}\nexport function ariaAnnouncementForModifiedEvent(event) {\n    const { overlay, action } = event;\n    switch (action) {\n        case 'Remove': {\n            const text = ariaDescriptionForOverlay(overlay);\n            if (text) {\n                return (i18nString(UIStrings.srAnnotationRemoved, { PH1: text }));\n            }\n            break;\n        }\n        case 'Add': {\n            const text = ariaDescriptionForOverlay(overlay);\n            if (text) {\n                return (i18nString(UIStrings.srAnnotationAdded, { PH1: text }));\n            }\n            break;\n        }\n        case 'UpdateLabel': {\n            const label = labelForOverlay(overlay);\n            if (label) {\n                return i18nString(UIStrings.srLabelTextUpdated, { PH1: label });\n            }\n            break;\n        }\n        case 'UpdateTimeRange': {\n            if (overlay.type !== 'TIME_RANGE') {\n                return '';\n            }\n            const traceBounds = TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.entireTraceBounds;\n            if (!traceBounds) {\n                return '';\n            }\n            const { min, max } = overlay.bounds;\n            const minText = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(Trace.Types.Timing.MicroSeconds(min - traceBounds.min));\n            const maxText = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(Trace.Types.Timing.MicroSeconds(max - traceBounds.min));\n            return i18nString(UIStrings.srTimeRangeBoundsUpdated, {\n                PH1: minText,\n                PH2: maxText,\n            });\n        }\n        case 'UpdateLinkToEntry': {\n            if (isEntriesLink(overlay) && overlay.entryFrom && overlay.entryTo) {\n                const from = TimelineComponents.EntryName.nameForEntry(overlay.entryFrom);\n                const to = TimelineComponents.EntryName.nameForEntry(overlay.entryTo);\n                return (i18nString(UIStrings.srEntriesLinked, { PH1: from, PH2: to }));\n            }\n            break;\n        }\n        case 'EnterLabelEditState': {\n            return (i18nString(UIStrings.srEnterLabelEditMode));\n        }\n        default:\n            Platform.assertNever(action, 'Unsupported action for AnnotationModifiedEvent');\n    }\n    return null;\n}\n//# sourceMappingURL=AnnotationHelpers.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nexport class TraceLoadEvent extends Event {\n    duration;\n    static eventName = 'traceload';\n    constructor(duration) {\n        super(TraceLoadEvent.eventName, { bubbles: true, composed: true });\n        this.duration = duration;\n    }\n}\n//# sourceMappingURL=BenchmarkEvents.js.map","// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../../core/sdk/sdk.js';\nexport class CLSRect {\n    x;\n    y;\n    width;\n    height;\n    color;\n    outlineColor;\n    constructor([x, y, width, height]) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.color = { r: 238, g: 111, b: 99, a: 0.4 };\n        this.outlineColor = { r: 238, g: 111, b: 99, a: 0.7 };\n    }\n}\nlet linkifierInstance;\nexport class Linkifier {\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!linkifierInstance || forceNew) {\n            linkifierInstance = new Linkifier();\n        }\n        return linkifierInstance;\n    }\n    linkify(object, _options) {\n        const link = document.createElement('span');\n        const rect = object;\n        const { x, y, width, height } = rect;\n        link.textContent = `Location: [${x},${y}], Size: [${width}x${height}]`;\n        link.addEventListener('mouseover', () => SDK.OverlayModel.OverlayModel.highlightRect(rect));\n        link.addEventListener('mouseleave', () => SDK.OverlayModel.OverlayModel.clearHighlight());\n        return link;\n    }\n}\n//# sourceMappingURL=CLSLinkifier.js.map","let instance = null;\n/** Singleton class that contains the set of active filters for the given trace\n * file.\n */\nexport class ActiveFilters {\n    static instance(opts = { forceNew: null }) {\n        const forceNew = Boolean(opts.forceNew);\n        if (!instance || forceNew) {\n            instance = new ActiveFilters();\n        }\n        return instance;\n    }\n    static removeInstance() {\n        instance = null;\n    }\n    #activeFilters = [];\n    activeFilters() {\n        return this.#activeFilters;\n    }\n    setFilters(newFilters) {\n        this.#activeFilters = newFilters;\n    }\n    isVisible(event) {\n        return this.#activeFilters.every(f => f.accept(event));\n    }\n}\n//# sourceMappingURL=ActiveFilters.js.map","export const SHOULD_SHOW_EASTER_EGG = false;","let instance = null;\n/**\n * In multiple places we need to know if the trace we are working on is fresh\n * or not. We cannot store that data in the trace file's metadata (otherwise a\n * loaded trace file could claim to be fresh), so we store it here. When a new trace\n * is loaded, we set this flag accordingly.\n **/\nexport class Tracker {\n    #freshRecordings = new WeakSet();\n    static instance(opts = { forceNew: false }) {\n        if (!instance || opts.forceNew) {\n            instance = new Tracker();\n        }\n        return instance;\n    }\n    registerFreshRecording(data) {\n        this.#freshRecordings.add(data);\n    }\n    recordingIsFresh(data) {\n        return this.#freshRecordings.has(data);\n    }\n}\n//# sourceMappingURL=FreshRecording.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.content {\n  margin-left: 5px;\n}\n\n.history-dropdown-button {\n  width: 160px;\n  height: 26px;\n  text-align: left;\n  display: flex;\n  border: 1px solid transparent;\n}\n\n.history-dropdown-button[disabled] {\n  opacity: 50%;\n  border: 1px solid transparent;\n}\n\n.history-dropdown-button > .content {\n  padding-right: 5px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex: 1 1;\n  min-width: 35px;\n\n  &::after {\n    float: right;\n    user-select: none;\n    mask-image: var(--image-file-triangle-down);\n    width: 14px;\n    height: 14px;\n    content: \"\";\n    position: absolute;\n    background-color: var(--icon-default);\n    right: -3px;\n  }\n}\n\n.history-dropdown-button:focus-visible::before {\n  content: \"\";\n  position: absolute;\n  top: 2px;\n  left: 0;\n  right: 0;\n  bottom: 2px;\n  border-radius: 2px;\n  background: var(--divider-line);\n}\n\n@media (forced-colors: active) {\n  .history-dropdown-button[disabled] {\n    opacity: 100%;\n  }\n\n  .history-dropdown-button > .content::after {\n    background-color: ButtonText;\n  }\n\n  .history-dropdown-button[disabled] > .content::after {\n    background-color: GrayText;\n  }\n}\n\n/*# sourceURL=historyToolbarButton.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Menus from '../../ui/components/menus/menus.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nconst UIStrings = {\n    /**\n     *@description Text to show an item is empty\n     */\n    empty: '(empty)',\n    /**\n     *@description Text in isolate selector in Performance panel\n     */\n    selectJavascriptVmInstance: 'Select JavaScript VM instance',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/IsolateSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class IsolateSelector extends UI.Toolbar.ToolbarItem {\n    menu;\n    options;\n    items;\n    itemByIsolate = new Map();\n    constructor() {\n        const menu = new Menus.SelectMenu.SelectMenu();\n        super(menu);\n        this.menu = menu;\n        menu.buttonTitle = i18nString(UIStrings.selectJavascriptVmInstance);\n        menu.showArrow = true;\n        menu.style.whiteSpace = 'normal';\n        menu.addEventListener('selectmenuselected', this.#onSelectMenuSelected.bind(this));\n        SDK.IsolateManager.IsolateManager.instance().observeIsolates(this);\n        SDK.TargetManager.TargetManager.instance().addEventListener(\"NameChanged\" /* SDK.TargetManager.Events.NAME_CHANGED */, this.targetChanged, this);\n        SDK.TargetManager.TargetManager.instance().addEventListener(\"InspectedURLChanged\" /* SDK.TargetManager.Events.INSPECTED_URL_CHANGED */, this.targetChanged, this);\n    }\n    #updateIsolateItem(isolate, itemForIsolate) {\n        const modelCountByName = new Map();\n        for (const model of isolate.models()) {\n            const target = model.target();\n            const name = SDK.TargetManager.TargetManager.instance().rootTarget() !== target ? target.name() : '';\n            const parsedURL = new Common.ParsedURL.ParsedURL(target.inspectedURL());\n            const domain = parsedURL.isValid ? parsedURL.domain() : '';\n            const title = target.decorateLabel(domain && name ? `${domain}: ${name}` : name || domain || i18nString(UIStrings.empty));\n            modelCountByName.set(title, (modelCountByName.get(title) || 0) + 1);\n        }\n        itemForIsolate.removeChildren();\n        for (const [name, count] of modelCountByName) {\n            const modelTitle = count > 1 ? `${name} (${count})` : name;\n            const modelItem = itemForIsolate.createChild('div');\n            modelItem.textContent = modelTitle;\n        }\n    }\n    #onSelectMenuSelected(event) {\n        this.itemByIsolate.forEach((item, isolate) => {\n            item.selected = item.value === event.itemValue;\n            if (item.selected) {\n                // Get the first 29 characters to show in the menu, because the full title is too long and the menu's space is\n                // limited.\n                // Chose 29 because it is the length of the placeholder string \"Select JavaScript VM instance\".\n                const selectedIsolateTitle = item.textContent?.slice(0, 29);\n                this.menu.buttonTitle = selectedIsolateTitle || i18nString(UIStrings.empty);\n                const model = isolate.runtimeModel();\n                UI.Context.Context.instance().setFlavor(SDK.CPUProfilerModel.CPUProfilerModel, model && model.target().model(SDK.CPUProfilerModel.CPUProfilerModel));\n            }\n        });\n    }\n    isolateAdded(isolate) {\n        const isolateItem = new Menus.Menu.MenuItem();\n        this.menu.appendChild(isolateItem);\n        isolateItem.value = isolate.id();\n        this.itemByIsolate.set(isolate, isolateItem);\n        this.#updateIsolateItem(isolate, isolateItem);\n    }\n    isolateRemoved(isolate) {\n        const isolateItem = this.itemByIsolate.get(isolate);\n        if (isolateItem) {\n            if (isolateItem.selected) {\n                this.menu.buttonTitle = i18nString(UIStrings.selectJavascriptVmInstance);\n                UI.Context.Context.instance().setFlavor(SDK.CPUProfilerModel.CPUProfilerModel, null);\n            }\n            this.menu.removeChild(isolateItem);\n        }\n    }\n    isolateChanged(isolate) {\n        const isolateItem = this.itemByIsolate.get(isolate);\n        if (isolateItem) {\n            this.#updateIsolateItem(isolate, isolateItem);\n        }\n    }\n    targetChanged(event) {\n        const target = event.data;\n        const model = target.model(SDK.RuntimeModel.RuntimeModel);\n        if (!model) {\n            return;\n        }\n        const isolate = SDK.IsolateManager.IsolateManager.instance().isolateByModel(model);\n        if (isolate) {\n            this.isolateChanged(isolate);\n        }\n    }\n}\n//# sourceMappingURL=IsolateSelector.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport { entryIsVisibleInTimeline, } from './CompatibilityTracksAppender.js';\n/**\n * This class can take in a thread that has been generated by the\n * RendererHandler and apply certain actions to it in order to modify what is\n * shown to the user. These actions can be automatically applied by DevTools or\n * applied by the user.\n *\n * Once actions are applied, the invisibleEntries() method will return the\n * entries that are invisible, and this is the list of entries that should be\n * removed before rendering the resulting thread on the timeline.\n */\nexport class EntriesFilter {\n    // Maps from an individual TraceEvent entry to its representation as a\n    // RendererEntryNode. We need this so we can then parse the tree structure\n    // generated by the RendererHandler.\n    #entryToNode;\n    // Track the set of invisible entries.\n    #invisibleEntries = [];\n    // List of entries whose children are hidden. This list is used to\n    // keep track of entries that should be identified in the UI as \"expandable\",\n    // since they can be clicked to reveal their hidden children.\n    #expandableEntries = [];\n    // Cache for descendants of entry that have already been gathered. The descendants\n    // will never change so we can avoid running the potentially expensive search again.\n    #entryToDescendantsMap = new Map();\n    constructor(entryToNodeMap) {\n        this.#entryToNode = entryToNodeMap;\n    }\n    /**\n     * Checks which actions can be applied on an entry. This allows us to only show possible actions in the Context Menu.\n     * For example, if an entry has no children, COLLAPSE_FUNCTION will not change the FlameChart, therefore there is no need to show this action as an option.\n     */\n    findPossibleActions(entry) {\n        const entryNode = this.#entryToNode.get(entry);\n        if (!entryNode) {\n            // Invalid node was given, return no possible actions.\n            return {\n                [\"MERGE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.MERGE_FUNCTION */]: false,\n                [\"COLLAPSE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_FUNCTION */]: false,\n                [\"COLLAPSE_REPEATING_DESCENDANTS\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_REPEATING_DESCENDANTS */]: false,\n                [\"RESET_CHILDREN\" /* PerfUI.FlameChart.FilterAction.RESET_CHILDREN */]: false,\n                [\"UNDO_ALL_ACTIONS\" /* PerfUI.FlameChart.FilterAction.UNDO_ALL_ACTIONS */]: false,\n            };\n        }\n        const entryParent = entryNode.parent;\n        const allVisibleDescendants = this.#findAllDescendantsOfNode(entryNode).filter(descendant => !this.#invisibleEntries.includes(descendant));\n        const allVisibleRepeatingDescendants = this.#findAllRepeatingDescendantsOfNext(entryNode).filter(descendant => !this.#invisibleEntries.includes(descendant));\n        const allInVisibleDescendants = this.#findAllDescendantsOfNode(entryNode).filter(descendant => this.#invisibleEntries.includes(descendant));\n        // If there are children to hide, indicate action as possible\n        const possibleActions = {\n            [\"MERGE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.MERGE_FUNCTION */]: entryParent !== null,\n            [\"COLLAPSE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_FUNCTION */]: allVisibleDescendants.length > 0,\n            [\"COLLAPSE_REPEATING_DESCENDANTS\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_REPEATING_DESCENDANTS */]: allVisibleRepeatingDescendants.length > 0,\n            [\"RESET_CHILDREN\" /* PerfUI.FlameChart.FilterAction.RESET_CHILDREN */]: allInVisibleDescendants.length > 0,\n            [\"UNDO_ALL_ACTIONS\" /* PerfUI.FlameChart.FilterAction.UNDO_ALL_ACTIONS */]: this.#invisibleEntries.length > 0,\n        };\n        return possibleActions;\n    }\n    /**\n     * Returns the trace entry tree for the specified event, simplified for input to AI Assistance.\n     * The tree is rooted at the top-level task that contains the event, with the node for specified event marked as selected.\n     */\n    getTraceEntryTreeForAI(entry) {\n        const entryNode = this.#entryToNode.get(entry);\n        if (!entryNode) {\n            return null;\n        }\n        return Trace.Helpers.TreeHelpers.TraceEntryNodeForAI.fromSelectedEntryNode(entryNode);\n    }\n    /**\n     * Returns the amount of entry descendants that belong to the hidden entries array.\n     * */\n    findHiddenDescendantsAmount(entry) {\n        const entryNode = this.#entryToNode.get(entry);\n        if (!entryNode) {\n            return 0;\n        }\n        const allDescendants = this.#findAllDescendantsOfNode(entryNode);\n        return allDescendants.filter(descendant => this.invisibleEntries().includes(descendant)).length;\n    }\n    /**\n     * Returns the set of entries that are invisible given the set of applied actions.\n     */\n    invisibleEntries() {\n        return this.#invisibleEntries;\n    }\n    /**\n     * Sets hidden and expandable. Called when a trace with modifications is loaded and some entries are set as hidden and expandable.\n     * Both arrays are set together because if there is one, the other must be present too.\n     */\n    setHiddenAndExpandableEntries(invisibleEntries, expandableEntries) {\n        this.#invisibleEntries.push(...invisibleEntries);\n        this.#expandableEntries.push(...expandableEntries);\n    }\n    entryIsInvisible(entry) {\n        return this.#invisibleEntries.includes(entry);\n    }\n    /**\n     * Returns the array of entries that have a sign indicating that entries below are hidden,\n     * and so that they can be \"expanded\" to reveal their hidden children.\n     */\n    expandableEntries() {\n        return this.#expandableEntries;\n    }\n    /**\n     * Applies an action to hide entries or removes entries\n     * from hidden entries array depending on the action.\n     */\n    applyFilterAction(action) {\n        // We apply new user action to the set of all entries, and mark\n        // any that should be hidden by adding them to this set.\n        // Another approach would be to use splice() to remove items from the\n        // array, but doing this would be a mutation of the arry for every hidden\n        // event. Instead, we add entries to this set and return it as an array at the end.\n        const entriesToHide = new Set();\n        switch (action.type) {\n            case \"MERGE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.MERGE_FUNCTION */: {\n                // The entry that was clicked on is merged into its parent. All its\n                // children remain visible, so we just have to hide the entry that was\n                // selected.\n                entriesToHide.add(action.entry);\n                // If parent node exists, add it to expandableEntries, so it would be possible to uncollapse its children.\n                const actionNode = this.#entryToNode.get(action.entry) || null;\n                const parentNode = actionNode && this.#firstVisibleParentNodeForEntryNode(actionNode);\n                if (parentNode) {\n                    this.#addExpandableEntry(parentNode.entry);\n                }\n                break;\n            }\n            case \"COLLAPSE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_FUNCTION */: {\n                // The entry itself remains visible, but all of its descendants are hidden.\n                const entryNode = this.#entryToNode.get(action.entry);\n                if (!entryNode) {\n                    // Invalid node was given, just ignore and move on.\n                    break;\n                }\n                const allDescendants = this.#findAllDescendantsOfNode(entryNode);\n                allDescendants.forEach(descendant => entriesToHide.add(descendant));\n                this.#addExpandableEntry(action.entry);\n                break;\n            }\n            case \"COLLAPSE_REPEATING_DESCENDANTS\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_REPEATING_DESCENDANTS */: {\n                const entryNode = this.#entryToNode.get(action.entry);\n                if (!entryNode) {\n                    // Invalid node was given, just ignore and move on.\n                    break;\n                }\n                const allRepeatingDescendants = this.#findAllRepeatingDescendantsOfNext(entryNode);\n                allRepeatingDescendants.forEach(descendant => entriesToHide.add(descendant));\n                if (entriesToHide.size > 0) {\n                    this.#addExpandableEntry(action.entry);\n                }\n                break;\n            }\n            case \"UNDO_ALL_ACTIONS\" /* PerfUI.FlameChart.FilterAction.UNDO_ALL_ACTIONS */: {\n                this.#invisibleEntries = [];\n                this.#expandableEntries = [];\n                break;\n            }\n            case \"RESET_CHILDREN\" /* PerfUI.FlameChart.FilterAction.RESET_CHILDREN */: {\n                this.#makeEntryChildrenVisible(action.entry);\n                break;\n            }\n            default:\n                Platform.assertNever(action.type, `Unknown EntriesFilter action: ${action.type}`);\n        }\n        this.#invisibleEntries.push(...entriesToHide);\n        return this.#invisibleEntries;\n    }\n    /**\n     * Add an entry to the array of entries that have a sign indicating that entries below are hidden.\n     * Also, remove all of the child entries of the new expandable entry from the expandable array. Do that because\n     * to draw the initiator from the closest visible entry, we need to get the closest entry that is\n     * marked as expandable and we do not want to get some that are hidden.\n     */\n    #addExpandableEntry(entry) {\n        this.#expandableEntries.push(entry);\n        const entryNode = this.#entryToNode.get(entry);\n        if (!entryNode) {\n            // Invalid node was given, just ignore and move on.\n            return;\n        }\n        const allDescendants = this.#findAllDescendantsOfNode(entryNode);\n        if (allDescendants.length > 0) {\n            this.#expandableEntries = this.#expandableEntries.filter(entry => {\n                return !allDescendants.includes(entry);\n            });\n        }\n    }\n    firstVisibleParentEntryForEntry(entry) {\n        const node = this.#entryToNode.get(entry);\n        if (!node) {\n            return null;\n        }\n        const parent = this.#firstVisibleParentNodeForEntryNode(node);\n        return parent ? parent.entry : null;\n    }\n    // The direct parent might be hidden by other actions, therefore we look for the next visible parent.\n    #firstVisibleParentNodeForEntryNode(node) {\n        let parent = node.parent;\n        while ((parent && this.#invisibleEntries.includes(parent.entry)) ||\n            (parent && !entryIsVisibleInTimeline(parent.entry))) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    #findAllDescendantsOfNode(root) {\n        const cachedDescendants = this.#entryToDescendantsMap.get(root);\n        if (cachedDescendants) {\n            return cachedDescendants;\n        }\n        const descendants = [];\n        // Walk through all the descendants, starting at the root node.\n        const children = [...root.children];\n        while (children.length > 0) {\n            const childNode = children.shift();\n            if (childNode) {\n                descendants.push(childNode.entry);\n                const childNodeCachedDescendants = this.#entryToDescendantsMap.get(childNode);\n                // If the descendants of a child are cached, get them from the cache instead of iterating through them again\n                if (childNodeCachedDescendants) {\n                    descendants.push(...childNodeCachedDescendants);\n                }\n                else {\n                    children.push(...childNode.children);\n                }\n            }\n        }\n        this.#entryToDescendantsMap.set(root, descendants);\n        return descendants;\n    }\n    #findAllRepeatingDescendantsOfNext(root) {\n        // Walk through all the ancestors, starting at the root node.\n        const children = [...root.children];\n        const repeatingNodes = [];\n        const rootIsProfileCall = Trace.Types.Events.isProfileCall(root.entry);\n        while (children.length > 0) {\n            const childNode = children.shift();\n            if (childNode) {\n                const childIsProfileCall = Trace.Types.Events.isProfileCall(childNode.entry);\n                if ( /* Handle SyntheticProfileCalls */rootIsProfileCall && childIsProfileCall) {\n                    const rootNodeEntry = root.entry;\n                    const childNodeEntry = childNode.entry;\n                    if (Trace.Helpers.SamplesIntegrator.SamplesIntegrator.framesAreEqual(rootNodeEntry.callFrame, childNodeEntry.callFrame)) {\n                        repeatingNodes.push(childNode.entry);\n                    }\n                } /* Handle Renderer events */\n                else if (!rootIsProfileCall && !childIsProfileCall) {\n                    if (root.entry.name === childNode.entry.name) {\n                        repeatingNodes.push(childNode.entry);\n                    }\n                }\n                children.push(...childNode.children);\n            }\n        }\n        return repeatingNodes;\n    }\n    /**\n     * If an entry was selected from a link instead of clicking on it,\n     * it might be in the invisible entries array.\n     * If it is, reveal it by resetting clidren the closest expandable entry,\n     */\n    revealEntry(entry) {\n        const entryNode = this.#entryToNode.get(entry);\n        if (!entryNode) {\n            // Invalid node was given, just ignore and move on.\n            return;\n        }\n        let closestExpandableParent = entryNode;\n        while (closestExpandableParent.parent && !this.#expandableEntries.includes(closestExpandableParent.entry)) {\n            closestExpandableParent = closestExpandableParent.parent;\n        }\n        this.#makeEntryChildrenVisible(closestExpandableParent.entry);\n    }\n    /**\n     * Removes all of the entry children from the\n     * invisible entries array to make them visible.\n     */\n    #makeEntryChildrenVisible(entry) {\n        const entryNode = this.#entryToNode.get(entry);\n        if (!entryNode) {\n            // Invalid node was given, just ignore and move on.\n            return;\n        }\n        const descendants = this.#findAllDescendantsOfNode(entryNode);\n        /**\n         * Filter out all descendant of the node\n         * from the invisible entries list.\n         */\n        this.#invisibleEntries = this.#invisibleEntries.filter(entry => {\n            if (descendants.includes(entry)) {\n                return false;\n            }\n            return true;\n        });\n        /**\n         * Filter out all descentants and entry from expandable entries\n         * list to not show that some entries below those are hidden.\n         */\n        this.#expandableEntries = this.#expandableEntries.filter(iterEntry => {\n            if (descendants.includes(iterEntry) || iterEntry === entry) {\n                return false;\n            }\n            return true;\n        });\n    }\n    isEntryExpandable(event) {\n        return this.#expandableEntries.includes(event);\n    }\n}\n//# sourceMappingURL=EntriesFilter.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Trace from '../../models/trace/trace.js';\nexport class EventsSerializer {\n    #modifiedProfileCallByKey = new Map();\n    keyForEvent(event) {\n        if (Trace.Types.Events.isProfileCall(event)) {\n            return `${\"p\" /* Trace.Types.File.EventKeyType.PROFILE_CALL */}-${event.pid}-${event.tid}-${Trace.Types.Events.SampleIndex(event.sampleIndex)}-${event.nodeId}`;\n        }\n        if (Trace.Types.Events.isLegacyTimelineFrame(event)) {\n            return `${\"l\" /* Trace.Types.File.EventKeyType.LEGACY_TIMELINE_FRAME */}-${event.index}`;\n        }\n        const rawEvents = Trace.Helpers.SyntheticEvents.SyntheticEventsManager.getActiveManager().getRawTraceEvents();\n        const key = Trace.Types.Events.isSyntheticBased(event) ?\n            `${\"s\" /* Trace.Types.File.EventKeyType.SYNTHETIC_EVENT */}-${rawEvents.indexOf(event.rawSourceEvent)}` :\n            `${\"r\" /* Trace.Types.File.EventKeyType.RAW_EVENT */}-${rawEvents.indexOf(event)}`;\n        if (key.length < 3) {\n            return null;\n        }\n        return key;\n    }\n    eventForKey(key, parsedTrace) {\n        const eventValues = Trace.Types.File.traceEventKeyToValues(key);\n        if (EventsSerializer.isProfileCallKey(eventValues)) {\n            return this.#getModifiedProfileCallByKeyValues(eventValues, parsedTrace);\n        }\n        if (EventsSerializer.isLegacyTimelineFrameKey(eventValues)) {\n            const event = parsedTrace.Frames.frames.at(eventValues.rawIndex);\n            if (!event) {\n                throw new Error(`Could not find frame with index ${eventValues.rawIndex}`);\n            }\n            return event;\n        }\n        if (EventsSerializer.isSyntheticEventKey(eventValues)) {\n            const syntheticEvents = Trace.Helpers.SyntheticEvents.SyntheticEventsManager.getActiveManager().getSyntheticTraces();\n            const syntheticEvent = syntheticEvents.at(eventValues.rawIndex);\n            if (!syntheticEvent) {\n                throw new Error(`Attempted to get a synthetic event from an unknown raw event index: ${eventValues.rawIndex}`);\n            }\n            return syntheticEvent;\n        }\n        if (EventsSerializer.isRawEventKey(eventValues)) {\n            const rawEvents = Trace.Helpers.SyntheticEvents.SyntheticEventsManager.getActiveManager().getRawTraceEvents();\n            return rawEvents[eventValues.rawIndex];\n        }\n        throw new Error(`Unknown trace event serializable key values: ${eventValues.join('-')}`);\n    }\n    static isProfileCallKey(key) {\n        return key.type === \"p\" /* Trace.Types.File.EventKeyType.PROFILE_CALL */;\n    }\n    static isLegacyTimelineFrameKey(key) {\n        return key.type === \"l\" /* Trace.Types.File.EventKeyType.LEGACY_TIMELINE_FRAME */;\n    }\n    static isRawEventKey(key) {\n        return key.type === \"r\" /* Trace.Types.File.EventKeyType.RAW_EVENT */;\n    }\n    static isSyntheticEventKey(key) {\n        return key.type === \"s\" /* Trace.Types.File.EventKeyType.SYNTHETIC_EVENT */;\n    }\n    #getModifiedProfileCallByKeyValues(key, parsedTrace) {\n        const cacheResult = this.#modifiedProfileCallByKey.get(key);\n        if (cacheResult) {\n            return cacheResult;\n        }\n        const profileCallsInThread = parsedTrace.Renderer.processes.get(key.processID)?.threads.get(key.threadID)?.profileCalls;\n        if (!profileCallsInThread) {\n            throw new Error(`Unknown profile call serializable key: ${(key)}`);\n        }\n        const match = profileCallsInThread?.find(e => {\n            return e.sampleIndex === key.sampleIndex && e.nodeId === key.protocol;\n        });\n        if (!match) {\n            throw new Error(`Unknown profile call serializable key: ${(JSON.stringify(key))}`);\n        }\n        // Cache to avoid looking up in subsequent calls.\n        this.#modifiedProfileCallByKey.set(key, match);\n        return match;\n    }\n}\n//# sourceMappingURL=EventsSerializer.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TimelineComponents from '../../panels/timeline/components/components.js';\nimport * as AnnotationHelpers from './AnnotationHelpers.js';\nimport { EntriesFilter } from './EntriesFilter.js';\nimport { EventsSerializer } from './EventsSerializer.js';\nconst modificationsManagerByTraceIndex = [];\nlet activeManager;\n// Event dispatched after an annotation was added, removed or updated.\n// The event argument is the Overlay that needs to be created,removed\n// or updated by `Overlays.ts` and the action that needs to be applied to it.\nexport class AnnotationModifiedEvent extends Event {\n    overlay;\n    action;\n    static eventName = 'annotationmodifiedevent';\n    constructor(overlay, action) {\n        super(AnnotationModifiedEvent.eventName);\n        this.overlay = overlay;\n        this.action = action;\n    }\n}\nexport class ModificationsManager extends EventTarget {\n    #entriesFilter;\n    #timelineBreadcrumbs;\n    #modifications = null;\n    #parsedTrace;\n    #eventsSerializer;\n    #overlayForAnnotation;\n    #annotationsHiddenSetting;\n    /**\n     * Gets the ModificationsManager instance corresponding to a trace\n     * given its index used in Model#traces. If no index is passed gets\n     * the manager instance for the last trace. If no instance is found,\n     * throws.\n     */\n    static activeManager() {\n        return activeManager;\n    }\n    static reset() {\n        modificationsManagerByTraceIndex.length = 0;\n        activeManager = null;\n    }\n    /**\n     * Initializes a ModificationsManager instance for a parsed trace or changes the active manager for an existing one.\n     * This needs to be called if and a trace has been parsed or switched to.\n     */\n    static initAndActivateModificationsManager(traceModel, traceIndex) {\n        // If a manager for a given index has already been created, active it.\n        if (modificationsManagerByTraceIndex[traceIndex]) {\n            if (activeManager === modificationsManagerByTraceIndex[traceIndex]) {\n                return activeManager;\n            }\n            activeManager = modificationsManagerByTraceIndex[traceIndex];\n            ModificationsManager.activeManager()?.applyModificationsIfPresent();\n        }\n        const parsedTrace = traceModel.parsedTrace(traceIndex);\n        if (!parsedTrace) {\n            throw new Error('ModificationsManager was initialized without a corresponding trace data');\n        }\n        const traceBounds = parsedTrace.Meta.traceBounds;\n        const traceEvents = traceModel.rawTraceEvents(traceIndex);\n        if (!traceEvents) {\n            throw new Error('ModificationsManager was initialized without a corresponding raw trace events array');\n        }\n        const syntheticEventsManager = traceModel.syntheticTraceEventsManager(traceIndex);\n        if (!syntheticEventsManager) {\n            throw new Error('ModificationsManager was initialized without a corresponding SyntheticEventsManager');\n        }\n        const metadata = traceModel.metadata(traceIndex);\n        const newModificationsManager = new ModificationsManager({\n            parsedTrace,\n            traceBounds,\n            rawTraceEvents: traceEvents,\n            modifications: metadata?.modifications,\n            syntheticEvents: syntheticEventsManager.getSyntheticTraces(),\n        });\n        modificationsManagerByTraceIndex[traceIndex] = newModificationsManager;\n        activeManager = newModificationsManager;\n        ModificationsManager.activeManager()?.applyModificationsIfPresent();\n        return this.activeManager();\n    }\n    constructor({ parsedTrace, traceBounds, modifications }) {\n        super();\n        const entryToNodeMap = new Map([...parsedTrace.Samples.entryToNode, ...parsedTrace.Renderer.entryToNode]);\n        this.#entriesFilter = new EntriesFilter(entryToNodeMap);\n        // Create first breadcrumb from the initial full window\n        this.#timelineBreadcrumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(traceBounds);\n        this.#modifications = modifications || null;\n        this.#parsedTrace = parsedTrace;\n        this.#eventsSerializer = new EventsSerializer();\n        // This method is also called in SidebarAnnotationsTab, but calling this multiple times doesn't recreate the setting.\n        // Instead, after the second call, the cached setting is returned.\n        this.#annotationsHiddenSetting = Common.Settings.Settings.instance().moduleSetting('annotations-hidden');\n        // TODO: Assign annotations loaded from the trace file\n        this.#overlayForAnnotation = new Map();\n    }\n    getEntriesFilter() {\n        return this.#entriesFilter;\n    }\n    getTimelineBreadcrumbs() {\n        return this.#timelineBreadcrumbs;\n    }\n    deleteEmptyRangeAnnotations() {\n        for (const annotation of this.#overlayForAnnotation.keys()) {\n            if (annotation.type === 'TIME_RANGE' && annotation.label.length === 0) {\n                this.removeAnnotation(annotation);\n            }\n        }\n    }\n    createAnnotation(newAnnotation, loadedFromFile = false) {\n        // If a label already exists on an entry and a user is trying to create a new one, start editing an existing label instead.\n        if (newAnnotation.type === 'ENTRY_LABEL') {\n            const overlay = this.#findLabelOverlayForEntry(newAnnotation.entry);\n            if (overlay) {\n                this.dispatchEvent(new AnnotationModifiedEvent(overlay, 'EnterLabelEditState'));\n                return;\n            }\n        }\n        // If the new annotation created was not loaded from the file, set the annotations visibility setting to true. That way we make sure\n        // the annotations are on when a new one is created.\n        if (!loadedFromFile) {\n            // Time range annotation could also be used to check the length of a selection in the timeline. Therefore, only set the annotations\n            // hidden to true if annotations label is added. This is done in OverlaysImpl.\n            if (newAnnotation.type !== 'TIME_RANGE') {\n                this.#annotationsHiddenSetting.set(false);\n            }\n        }\n        const newOverlay = this.#createOverlayFromAnnotation(newAnnotation);\n        this.#overlayForAnnotation.set(newAnnotation, newOverlay);\n        this.dispatchEvent(new AnnotationModifiedEvent(newOverlay, 'Add'));\n    }\n    annotationsForEntry(entry) {\n        const annotationsForEntry = [];\n        for (const [annotation] of this.#overlayForAnnotation.entries()) {\n            if (annotation.type === 'ENTRY_LABEL' && annotation.entry === entry) {\n                annotationsForEntry.push(annotation);\n            }\n            else if (annotation.type === 'ENTRIES_LINK' && (annotation.entryFrom === entry || annotation.entryTo === entry)) {\n                annotationsForEntry.push(annotation);\n            }\n        }\n        return annotationsForEntry;\n    }\n    // Deletes all annotations associated with an entry\n    deleteEntryAnnotations(entry) {\n        const annotationsForEntry = this.annotationsForEntry(entry);\n        annotationsForEntry.forEach(annotation => {\n            this.removeAnnotation(annotation);\n        });\n    }\n    linkAnnotationBetweenEntriesExists(entryFrom, entryTo) {\n        for (const annotation of this.#overlayForAnnotation.keys()) {\n            if (annotation.type === 'ENTRIES_LINK' &&\n                ((annotation.entryFrom === entryFrom && annotation.entryTo === entryTo) ||\n                    (annotation.entryFrom === entryTo && annotation.entryTo === entryFrom))) {\n                return true;\n            }\n        }\n        return false;\n    }\n    #findLabelOverlayForEntry(entry) {\n        for (const [annotation, overlay] of this.#overlayForAnnotation.entries()) {\n            if (annotation.type === 'ENTRY_LABEL' && annotation.entry === entry) {\n                return overlay;\n            }\n        }\n        return null;\n    }\n    #createOverlayFromAnnotation(annotation) {\n        switch (annotation.type) {\n            case 'ENTRY_LABEL':\n                return {\n                    type: 'ENTRY_LABEL',\n                    entry: annotation.entry,\n                    label: annotation.label,\n                };\n            case 'TIME_RANGE':\n                return {\n                    type: 'TIME_RANGE',\n                    label: annotation.label,\n                    showDuration: true,\n                    bounds: annotation.bounds,\n                };\n            case 'ENTRIES_LINK':\n                return {\n                    type: 'ENTRIES_LINK',\n                    state: annotation.state,\n                    entryFrom: annotation.entryFrom,\n                    entryTo: annotation.entryTo,\n                };\n            default:\n                Platform.assertNever(annotation, 'Overlay for provided annotation cannot be created');\n        }\n    }\n    removeAnnotation(removedAnnotation) {\n        const overlayToRemove = this.#overlayForAnnotation.get(removedAnnotation);\n        if (!overlayToRemove) {\n            console.warn('Overlay for deleted Annotation does not exist', removedAnnotation);\n            return;\n        }\n        this.#overlayForAnnotation.delete(removedAnnotation);\n        this.dispatchEvent(new AnnotationModifiedEvent(overlayToRemove, 'Remove'));\n    }\n    removeAnnotationOverlay(removedOverlay) {\n        const annotationForRemovedOverlay = this.getAnnotationByOverlay(removedOverlay);\n        if (!annotationForRemovedOverlay) {\n            console.warn('Annotation for deleted Overlay does not exist', removedOverlay);\n            return;\n        }\n        this.removeAnnotation(annotationForRemovedOverlay);\n    }\n    updateAnnotation(updatedAnnotation) {\n        const overlay = this.#overlayForAnnotation.get(updatedAnnotation);\n        if (overlay && AnnotationHelpers.isTimeRangeLabel(overlay) &&\n            Trace.Types.File.isTimeRangeAnnotation(updatedAnnotation)) {\n            overlay.label = updatedAnnotation.label;\n            overlay.bounds = updatedAnnotation.bounds;\n            this.dispatchEvent(new AnnotationModifiedEvent(overlay, 'UpdateTimeRange'));\n        }\n        else if (overlay && AnnotationHelpers.isEntriesLink(overlay) &&\n            Trace.Types.File.isEntriesLinkAnnotation(updatedAnnotation)) {\n            overlay.state = updatedAnnotation.state;\n            overlay.entryFrom = updatedAnnotation.entryFrom;\n            overlay.entryTo = updatedAnnotation.entryTo;\n            this.dispatchEvent(new AnnotationModifiedEvent(overlay, 'UpdateLinkToEntry'));\n        }\n        else {\n            console.error('Annotation could not be updated');\n        }\n    }\n    updateAnnotationOverlay(updatedOverlay) {\n        const annotationForUpdatedOverlay = this.getAnnotationByOverlay(updatedOverlay);\n        if (!annotationForUpdatedOverlay) {\n            console.warn('Annotation for updated Overlay does not exist');\n            return;\n        }\n        if ((updatedOverlay.type === 'ENTRY_LABEL' && annotationForUpdatedOverlay.type === 'ENTRY_LABEL') ||\n            (updatedOverlay.type === 'TIME_RANGE' && annotationForUpdatedOverlay.type === 'TIME_RANGE')) {\n            this.#annotationsHiddenSetting.set(false);\n            annotationForUpdatedOverlay.label = updatedOverlay.label;\n            this.dispatchEvent(new AnnotationModifiedEvent(updatedOverlay, 'UpdateLabel'));\n        }\n        if ((updatedOverlay.type === 'ENTRIES_LINK' && annotationForUpdatedOverlay.type === 'ENTRIES_LINK')) {\n            this.#annotationsHiddenSetting.set(false);\n            annotationForUpdatedOverlay.state = updatedOverlay.state;\n        }\n    }\n    getAnnotationByOverlay(overlay) {\n        for (const [annotation, currOverlay] of this.#overlayForAnnotation.entries()) {\n            if (currOverlay === overlay) {\n                return annotation;\n            }\n        }\n        return null;\n    }\n    getAnnotations() {\n        return [...this.#overlayForAnnotation.keys()];\n    }\n    getOverlays() {\n        return [...this.#overlayForAnnotation.values()];\n    }\n    /**\n     * Builds all modifications into a serializable object written into\n     * the 'modifications' trace file metadata field.\n     */\n    toJSON() {\n        const hiddenEntries = this.#entriesFilter.invisibleEntries()\n            .map(entry => this.#eventsSerializer.keyForEvent(entry))\n            .filter(entry => entry !== null);\n        const expandableEntries = this.#entriesFilter.expandableEntries()\n            .map(entry => this.#eventsSerializer.keyForEvent(entry))\n            .filter(entry => entry !== null);\n        this.#modifications = {\n            entriesModifications: {\n                hiddenEntries,\n                expandableEntries,\n            },\n            initialBreadcrumb: this.#timelineBreadcrumbs.initialBreadcrumb,\n            annotations: this.#annotationsJSON(),\n        };\n        return this.#modifications;\n    }\n    #annotationsJSON() {\n        const annotations = this.getAnnotations();\n        const entryLabelsSerialized = [];\n        const labelledTimeRangesSerialized = [];\n        const linksBetweenEntriesSerialized = [];\n        for (let i = 0; i < annotations.length; i++) {\n            const currAnnotation = annotations[i];\n            if (Trace.Types.File.isEntryLabelAnnotation(currAnnotation)) {\n                const serializedEvent = this.#eventsSerializer.keyForEvent(currAnnotation.entry);\n                if (serializedEvent) {\n                    entryLabelsSerialized.push({\n                        entry: serializedEvent,\n                        label: currAnnotation.label,\n                    });\n                }\n            }\n            else if (Trace.Types.File.isTimeRangeAnnotation(currAnnotation)) {\n                labelledTimeRangesSerialized.push({\n                    bounds: currAnnotation.bounds,\n                    label: currAnnotation.label,\n                });\n            }\n            else if (Trace.Types.File.isEntriesLinkAnnotation(currAnnotation)) {\n                // Only save the links between entries that are fully created and have the entry that it is pointing to set\n                if (currAnnotation.entryTo) {\n                    const serializedFromEvent = this.#eventsSerializer.keyForEvent(currAnnotation.entryFrom);\n                    const serializedToEvent = this.#eventsSerializer.keyForEvent(currAnnotation.entryTo);\n                    if (serializedFromEvent && serializedToEvent) {\n                        linksBetweenEntriesSerialized.push({\n                            entryFrom: serializedFromEvent,\n                            entryTo: serializedToEvent,\n                        });\n                    }\n                }\n            }\n        }\n        return {\n            entryLabels: entryLabelsSerialized,\n            labelledTimeRanges: labelledTimeRangesSerialized,\n            linksBetweenEntries: linksBetweenEntriesSerialized,\n        };\n    }\n    applyModificationsIfPresent() {\n        if (!this.#modifications || !this.#modifications.annotations) {\n            return;\n        }\n        const hiddenEntries = this.#modifications.entriesModifications.hiddenEntries;\n        const expandableEntries = this.#modifications.entriesModifications.expandableEntries;\n        this.#timelineBreadcrumbs.setInitialBreadcrumbFromLoadedModifications(this.#modifications.initialBreadcrumb);\n        this.#applyEntriesFilterModifications(hiddenEntries, expandableEntries);\n        this.#applyStoredAnnotations(this.#modifications.annotations);\n    }\n    #applyStoredAnnotations(annotations) {\n        try {\n            // Assign annotations to an empty array if they don't exist to not\n            // break the traces that were saved before those annotations were implemented\n            const entryLabels = annotations.entryLabels ?? [];\n            entryLabels.forEach(entryLabel => {\n                this.createAnnotation({\n                    type: 'ENTRY_LABEL',\n                    entry: this.#eventsSerializer.eventForKey(entryLabel.entry, this.#parsedTrace),\n                    label: entryLabel.label,\n                }, true);\n            });\n            const timeRanges = annotations.labelledTimeRanges ?? [];\n            timeRanges.forEach(timeRange => {\n                this.createAnnotation({\n                    type: 'TIME_RANGE',\n                    bounds: timeRange.bounds,\n                    label: timeRange.label,\n                }, true);\n            });\n            const linksBetweenEntries = annotations.linksBetweenEntries ?? [];\n            linksBetweenEntries.forEach(linkBetweenEntries => {\n                this.createAnnotation({\n                    type: 'ENTRIES_LINK',\n                    state: \"connected\" /* Trace.Types.File.EntriesLinkState.CONNECTED */,\n                    entryFrom: this.#eventsSerializer.eventForKey(linkBetweenEntries.entryFrom, this.#parsedTrace),\n                    entryTo: this.#eventsSerializer.eventForKey(linkBetweenEntries.entryTo, this.#parsedTrace),\n                }, true);\n            });\n        }\n        catch (err) {\n            // This function is wrapped in a try/catch just in case we get any incoming\n            // trace files with broken event keys. Shouldn't happen of course, but if\n            // it does, we can discard all the data and then continue loading the\n            // trace, rather than have the panel entirely break. This also prevents any\n            // issue where we accidentally break the event serializer and break people\n            // loading traces; let's at least make sure they can load the panel, even\n            // if their annotations are gone.\n            console.warn('Failed to apply stored annotations', err);\n        }\n    }\n    #applyEntriesFilterModifications(hiddenEntriesKeys, expandableEntriesKeys) {\n        try {\n            const hiddenEntries = hiddenEntriesKeys.map(key => this.#eventsSerializer.eventForKey(key, this.#parsedTrace));\n            const expandableEntries = expandableEntriesKeys.map(key => this.#eventsSerializer.eventForKey(key, this.#parsedTrace));\n            this.#entriesFilter.setHiddenAndExpandableEntries(hiddenEntries, expandableEntries);\n        }\n        catch (err) {\n            console.warn('Failed to apply entriesFilter modifications', err);\n            // If there was some invalid data, let's just back out and clear it\n            // entirely. This is better than applying a subset of all the hidden\n            // entries, which could cause an odd state in the flamechart.\n            this.#entriesFilter.setHiddenAndExpandableEntries([], []);\n        }\n    }\n}\n//# sourceMappingURL=ModificationsManager.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.connectorContainer {\n  display: flex;\n  width: 100%;\n  height: 100%;\n}\n\n.entry-wrapper {\n  pointer-events: none;\n  position: absolute;\n  display: block;\n  border: 2px solid var(--color-text-primary);\n  box-sizing: border-box;\n\n  &.cut-off-top {\n    border-top: none;\n  }\n\n  &.cut-off-bottom {\n    border-bottom: none;\n  }\n\n  &.cut-off-right {\n    border-right: none;\n  }\n\n  &.cut-off-left {\n    border-left: none;\n  }\n}\n\n.entry-is-not-source {\n  border: 2px dashed var(--color-text-primary);\n}\n\n.create-link-icon {\n  pointer-events: auto;\n  cursor: pointer;\n  color: var(--sys-color-on-surface);\n  width: 16px;\n  height: 16px;\n  position: absolute;\n}\n\n/*# sourceURL=entriesLinkOverlay.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../../ui/components/icon_button/icon_button.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Trace from '../../../../models/trace/trace.js';\nimport * as ThemeSupport from '../../../../ui/legacy/theme_support/theme_support.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\nconst UIStrings = {\n    /**\n     *@description Accessible label used to explain to a user that they are viewing an arrow representing a link between two entries.\n     */\n    diagram: 'Links bteween entries',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/overlays/components/EntriesLinkOverlay.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nimport styles from './entriesLinkOverlay.css.js';\nconst { html } = LitHtml;\nexport class EntryLinkStartCreating extends Event {\n    static eventName = 'entrylinkstartcreating';\n    constructor() {\n        super(EntryLinkStartCreating.eventName, { bubbles: true, composed: true });\n    }\n}\nexport class EntriesLinkOverlay extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #coordinateFrom;\n    #fromEntryDimentions;\n    #coordinateTo;\n    #toEntryDimentions = null;\n    #connectorLineContainer = null;\n    #connector = null;\n    #entryFromWrapper = null;\n    #entryToWrapper = null;\n    #entryFromConnector = null;\n    #entryToConnector = null;\n    #entryFromVisible = true;\n    #entryToVisible = true;\n    #canvasRect = null;\n    // These flags let us know if the entry we are drawing from/to are the\n    // originals, or if they are the parent, which can happen if an entry is\n    // collapsed. We care about this because if the entry is not the source, we\n    // draw the border as dashed, not solid.\n    #fromEntryIsSource = true;\n    #toEntryIsSource = true;\n    #arrowHidden = false;\n    #linkState;\n    constructor(initialFromEntryCoordinateAndDimentions, linkCreationNotStartedState) {\n        super();\n        this.#render();\n        this.#coordinateFrom = { x: initialFromEntryCoordinateAndDimentions.x, y: initialFromEntryCoordinateAndDimentions.y };\n        this.#fromEntryDimentions = {\n            width: initialFromEntryCoordinateAndDimentions.width,\n            height: initialFromEntryCoordinateAndDimentions.height,\n        };\n        this.#coordinateTo = { x: initialFromEntryCoordinateAndDimentions.x, y: initialFromEntryCoordinateAndDimentions.y };\n        this.#connectorLineContainer = this.#shadow.querySelector('.connectorContainer') ?? null;\n        this.#connector = this.#connectorLineContainer?.querySelector('line') ?? null;\n        this.#entryFromWrapper = this.#shadow.querySelector('.from-highlight-wrapper') ?? null;\n        this.#entryToWrapper = this.#shadow.querySelector('.to-highlight-wrapper') ?? null;\n        this.#entryFromConnector = this.#connectorLineContainer?.querySelector('.entryFromConnector') ?? null;\n        this.#entryToConnector = this.#connectorLineContainer?.querySelector('.entryToConnector') ?? null;\n        this.#linkState = linkCreationNotStartedState;\n        this.#render();\n    }\n    set canvasRect(rect) {\n        if (rect === null) {\n            return;\n        }\n        if (this.#canvasRect && this.#canvasRect.width === rect.width && this.#canvasRect.height === rect.height) {\n            return;\n        }\n        this.#canvasRect = rect;\n        this.#render();\n    }\n    entryFromWrapper() {\n        return this.#entryFromWrapper;\n    }\n    entryToWrapper() {\n        return this.#entryToWrapper;\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [styles];\n    }\n    /**\n     * If one entry that is linked is in a collapsed track, we show the outlines\n     * but hide only the arrow.\n     */\n    set hideArrow(shouldHide) {\n        this.#arrowHidden = shouldHide;\n        if (this.#connector) {\n            this.#connector.style.display = shouldHide ? 'none' : 'block';\n        }\n    }\n    set fromEntryCoordinateAndDimentions(fromEntryParams) {\n        this.#coordinateFrom = { x: fromEntryParams.x, y: fromEntryParams.y };\n        this.#fromEntryDimentions = { width: fromEntryParams.length, height: fromEntryParams.height };\n        this.#updateCreateLinkBox();\n        this.#redrawConnectionArrow();\n    }\n    set entriesVisibility(entriesVisibility) {\n        this.#entryFromVisible = entriesVisibility.fromEntryVisibility;\n        this.#entryToVisible = entriesVisibility.toEntryVisibility;\n    }\n    // The arrow might be pointing either to an entry or an empty space.\n    // If the dimensions are not passed, it is pointing at an empty space.\n    set toEntryCoordinateAndDimentions(toEntryParams) {\n        this.#coordinateTo = { x: toEntryParams.x, y: toEntryParams.y };\n        if (toEntryParams.length && toEntryParams.height) {\n            this.#toEntryDimentions = { width: toEntryParams.length, height: toEntryParams.height };\n        }\n        else {\n            this.#toEntryDimentions = null;\n        }\n        this.#updateCreateLinkBox();\n        this.#redrawConnectionArrow();\n    }\n    set fromEntryIsSource(x) {\n        if (x === this.#fromEntryIsSource) {\n            return;\n        }\n        this.#fromEntryIsSource = x;\n        this.#render();\n    }\n    set toEntryIsSource(x) {\n        if (x === this.#toEntryIsSource) {\n            return;\n        }\n        this.#toEntryIsSource = x;\n        this.#render();\n    }\n    #redrawConnectionArrow() {\n        if (!this.#connector || !this.#entryFromWrapper || !this.#entryToWrapper || !this.#entryFromConnector ||\n            !this.#entryToConnector) {\n            console.error('`connector` element is missing.');\n            return;\n        }\n        if (this.#linkState === \"creation_not_started\" /* Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED */) {\n            this.#entryFromConnector.setAttribute('visibility', 'hidden');\n            this.#entryToConnector.setAttribute('visibility', 'hidden');\n            return;\n        }\n        // If the user is zoomed out, the connector circles can be as large as the\n        // event itself. So if the rectangle for this entry is too small, we\n        // don't draw the circles.\n        const minWidthToDrawConnectorCircles = 8;\n        // We do not draw the connectors if the entry is not visible, or if the\n        // entry we are connecting to isn't the actual source entry.\n        // We also don't draw them if an entry is completely hidden, in which case\n        // we aren't drawing the arrows, so it doesn't make sense to draw the\n        // connectors.\n        const drawFromEntryConnectorCircle = this.#entryFromVisible && !this.#arrowHidden && this.#fromEntryIsSource &&\n            this.#fromEntryDimentions.width >= minWidthToDrawConnectorCircles;\n        const widthOfToEntry = this.#toEntryDimentions?.width ?? 0;\n        const drawToEntryConnectorCircle = !this.#arrowHidden && this.#entryToVisible && this.#toEntryIsSource &&\n            widthOfToEntry >= minWidthToDrawConnectorCircles && !this.#arrowHidden;\n        this.#entryFromConnector.setAttribute('visibility', drawFromEntryConnectorCircle ? 'visible' : 'hidden');\n        this.#entryToConnector.setAttribute('visibility', drawToEntryConnectorCircle ? 'visible' : 'hidden');\n        // If the entry is visible, the entry arrow starts from the end on the X axis and middle of the Y axis.\n        // If not, draw it to the same y point without the entry height offset and the box around the entry.\n        // This way it will be attached to the track edge.\n        if (this.#entryFromVisible) {\n            const halfEntryHeight = this.#fromEntryDimentions.height / 2;\n            const endConnectionPointX = String(this.#coordinateFrom.x + this.#fromEntryDimentions.width);\n            const endConnectionPointY = String(this.#coordinateFrom.y + halfEntryHeight);\n            this.#connector.setAttribute('x1', endConnectionPointX);\n            this.#connector.setAttribute('y1', endConnectionPointY);\n            this.#entryFromConnector.setAttribute('cx', endConnectionPointX);\n            this.#entryFromConnector.setAttribute('cy', endConnectionPointY);\n            this.#entryFromWrapper.style.visibility = 'visible';\n        }\n        else {\n            this.#connector.setAttribute('x1', (this.#coordinateFrom.x + this.#fromEntryDimentions.width).toString());\n            this.#connector.setAttribute('y1', this.#coordinateFrom.y.toString());\n            this.#entryFromWrapper.style.visibility = 'hidden';\n        }\n        // If the arrow is pointing to the entry, point it to the middle of the entry.\n        // Otherwise, the arrow is following the mouse so we assign it to the provided coordinates.\n        if (this.#toEntryDimentions && this.#entryToVisible) {\n            const connectionPointX = String(this.#coordinateTo.x);\n            const connectionPointY = String(this.#coordinateTo.y + this.#toEntryDimentions.height / 2);\n            this.#connector.setAttribute('x2', connectionPointX);\n            this.#connector.setAttribute('y2', connectionPointY);\n            this.#entryToConnector.setAttribute('cx', connectionPointX);\n            this.#entryToConnector.setAttribute('cy', connectionPointY);\n            this.#entryToWrapper.style.visibility = 'visible';\n        }\n        else {\n            this.#entryToWrapper.style.visibility = 'hidden';\n            this.#connector.setAttribute('x2', this.#coordinateTo.x.toString());\n            this.#connector.setAttribute('y2', this.#coordinateTo.y.toString());\n        }\n        this.#connector.setAttribute('stroke-width', '2');\n        if (this.#toEntryDimentions && this.#entryFromVisible && !this.#entryToVisible) {\n            this.#connector.setAttribute('stroke', 'url(#fromVisibleLineGradient)');\n        }\n        else if (this.#toEntryDimentions && this.#entryToVisible && !this.#entryFromVisible) {\n            this.#connector.setAttribute('stroke', 'url(#toVisibleLineGradient)');\n        }\n        else {\n            const arrowColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-text-primary');\n            this.#connector.setAttribute('stroke', arrowColor);\n        }\n        this.#render();\n    }\n    /*\n     * When only one entry from the connection is visible, the connection\n     * line becomes a gradient from the visible entry to the edge of\n     * the screen towards the entry that is not visible.\n     *\n     * To achieve this, we need to calculate what percentage of the\n     * visible screen the connection is currently occupying and apply\n     * that gradient to the visible connection part.\n     */\n    #partlyVisibleConnectionLinePercentage() {\n        if (!this.#canvasRect) {\n            return 100;\n        }\n        const lineLength = this.#coordinateTo.x - (this.#coordinateFrom.x + this.#fromEntryDimentions.width);\n        let visibleLineLength = 0;\n        // If the visible entry is the 'From' entry, find the length of the visible arrow by\n        // substracting the point where the arrow starts from the whole canvas length.\n        // If the 'to' entry is visible, the coordinate of the entry will be equal to\n        // the visible arrow length.\n        if (this.#entryFromVisible && !this.#entryToVisible) {\n            visibleLineLength = this.#canvasRect.width - (this.#coordinateFrom.x + this.#fromEntryDimentions.width);\n        }\n        else if (!this.#entryFromVisible && this.#entryToVisible) {\n            visibleLineLength = this.#coordinateTo.x;\n        }\n        const visibleLineFromTotalPercentage = (visibleLineLength * 100) / lineLength;\n        return (visibleLineFromTotalPercentage < 100) ? visibleLineFromTotalPercentage : 100;\n    }\n    #updateCreateLinkBox() {\n        const createLinkBox = this.#shadow.querySelector('.create-link-box');\n        const createLinkIcon = createLinkBox?.querySelector('.create-link-icon') ?? null;\n        if (!createLinkBox || !createLinkIcon) {\n            console.error('creating element is missing.');\n            return;\n        }\n        if (this.#linkState !== \"creation_not_started\" /* Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED */) {\n            createLinkIcon.style.display = 'none';\n            return;\n        }\n        createLinkIcon.style.left = `${this.#coordinateFrom.x + this.#fromEntryDimentions.width}px`;\n        createLinkIcon.style.top = `${this.#coordinateFrom.y}px`;\n    }\n    #startCreatingConnection() {\n        this.#linkState = \"pending_to_event\" /* Trace.Types.File.EntriesLinkState.PENDING_TO_EVENT */;\n        this.dispatchEvent(new EntryLinkStartCreating());\n    }\n    /*\n    The entries link overlay is an arrow connecting 2 entries.\n    The Entries are drawn by Flamechart and this Overlay is only drawing the arrow between them.\n     _________\n    |__entry__|\\\n                \\\n                 \\          <-- arrow connecting the sides of entries drawn by this overlay\n                  \\   ________________\n                   ➘ |_____entry______|\n    */\n    #render() {\n        const arrowColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-text-primary');\n        // clang-format off\n        LitHtml.render(html `\n          <svg class=\"connectorContainer\" width=\"100%\" height=\"100%\" role=\"region\" aria-label=${i18nString(UIStrings.diagram)}>\n            <defs>\n              <linearGradient\n                id=\"fromVisibleLineGradient\"\n                x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop\n                  offset=\"0%\"\n                  stop-color=${arrowColor}\n                  stop-opacity=\"1\" />\n                <stop\n                  offset=\"${this.#partlyVisibleConnectionLinePercentage()}%\"\n                  stop-color=${arrowColor}\n                  stop-opacity=\"0\" />\n              </linearGradient>\n\n              <linearGradient\n                id=\"toVisibleLineGradient\"\n                x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                <stop\n                  offset=\"${100 - this.#partlyVisibleConnectionLinePercentage()}%\"\n                  stop-color=${arrowColor}\n                  stop-opacity=\"0\" />\n                <stop\n                  offset=\"100%\"\n                  stop-color=${arrowColor}\n                  stop-opacity=\"1\" />\n              </linearGradient>\n              <marker\n                id=\"arrow\"\n                orient=\"auto\"\n                markerWidth=\"3\"\n                markerHeight=\"4\"\n                fill-opacity=\"1\"\n                refX=\"4\"\n                refY=\"2\"\n                visibility=${this.#entryToVisible || !this.#toEntryDimentions ? 'visible' : 'hidden'}>\n                <path d=\"M0,0 V4 L4,2 Z\" fill=${arrowColor} />\n              </marker>\n            </defs>\n            <line\n              marker-end=\"url(#arrow)\"\n              stroke-dasharray=${!this.#fromEntryIsSource || !this.#toEntryIsSource ? DASHED_STROKE_AMOUNT : 'none'}\n              visibility=${!this.#entryFromVisible && !this.#entryToVisible ? 'hidden' : 'visible'}\n              />\n            <circle class=\"entryFromConnector\" fill=\"none\" stroke=${arrowColor} stroke-width=${CONNECTOR_CIRCLE_STROKE_WIDTH} r=${CONNECTOR_CIRCLE_RADIUS} />\n            <circle class=\"entryToConnector\" fill=\"none\" stroke=${arrowColor} stroke-width=${CONNECTOR_CIRCLE_STROKE_WIDTH} r=${CONNECTOR_CIRCLE_RADIUS} />\n          </svg>\n          <div class=\"entry-wrapper from-highlight-wrapper ${this.#fromEntryIsSource ? '' : 'entry-is-not-source'}\"></div>\n          <div class=\"entry-wrapper to-highlight-wrapper ${this.#toEntryIsSource ? '' : 'entry-is-not-source'}\"></div>\n          <div class=\"create-link-box ${this.#linkState ? 'visible' : 'hidden'}\">\n            <devtools-icon\n              class='create-link-icon'\n              jslog=${VisualLogging.action('timeline.annotations.create-entry-link').track({ click: true })}\n              @click=${this.#startCreatingConnection}\n              name='arrow-right-circle'>\n            </devtools-icon>\n          </div>\n        `, this.#shadow, { host: this });\n        // clang-format on\n    }\n}\nconst CONNECTOR_CIRCLE_RADIUS = 2;\nconst CONNECTOR_CIRCLE_STROKE_WIDTH = 1;\n// Defines the gap in the border when we are drawing a dashed outline.\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray\nconst DASHED_STROKE_AMOUNT = 4;\ncustomElements.define('devtools-entries-link-overlay', EntriesLinkOverlay);\n//# sourceMappingURL=EntriesLinkOverlay.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.label-parts-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.input-field {\n  background-color: var(--color-background-inverted);\n  color: var(--color-background);\n  pointer-events: auto;\n  border-radius: var(--sys-shape-corner-extra-small);\n  white-space: nowrap;\n  padding: var(--sys-size-3) var(--sys-size-4);\n  font-family: var(--default-font-family);\n  font-size: var(--sys-typescale-body2-size);\n  font-weight: var(--ref-typeface-weight-medium);\n}\n\n.input-field:focus {\n  background-color: var(--color-background);\n  color: var(--color-background-inverted);\n  outline: 2px solid var(--color-background-inverted);\n}\n\n.connectorContainer {\n  overflow: visible;\n}\n\n.entry-highlight-wrapper {\n  box-sizing: border-box;\n  border: 2px solid var(--sys-color-on-surface);\n\n  &.cut-off-top {\n    border-top: none;\n  }\n\n  &.cut-off-bottom {\n    border-bottom: none;\n  }\n\n  &.cut-off-right {\n    border-right: none;\n  }\n\n  &.cut-off-left {\n    border-left: none;\n  }\n}\n\n/*# sourceURL=entryLabelOverlay.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as ComponentHelpers from '../../../../ui/components/helpers/helpers.js';\nimport * as ThemeSupport from '../../../../ui/legacy/theme_support/theme_support.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\nimport styles from './entryLabelOverlay.css.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     * @description Accessible label used to explain to a user that they are viewing an entry label.\n     */\n    entryLabel: 'Entry label',\n    /**\n     *@description Accessible label used to prompt the user to input text into the field.\n     */\n    inputTextPrompt: 'Enter an annotation label',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/overlays/components/EntryLabelOverlay.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class EmptyEntryLabelRemoveEvent extends Event {\n    static eventName = 'emptyentrylabelremoveevent';\n    constructor() {\n        super(EmptyEntryLabelRemoveEvent.eventName);\n    }\n}\nexport class EntryLabelChangeEvent extends Event {\n    newLabel;\n    static eventName = 'entrylabelchangeevent';\n    constructor(newLabel) {\n        super(EntryLabelChangeEvent.eventName);\n        this.newLabel = newLabel;\n    }\n}\nexport class EntryLabelOverlay extends HTMLElement {\n    // The label is angled on the left from the centre of the entry it belongs to.\n    // `LABEL_AND_CONNECTOR_SHIFT_LENGTH` specifies how many pixels to the left it is shifted.\n    static LABEL_AND_CONNECTOR_SHIFT_LENGTH = 8;\n    // Length of the line that connects the label to the entry.\n    static LABEL_CONNECTOR_HEIGHT = 7;\n    static LABEL_HEIGHT = 17;\n    static LABEL_PADDING = 4;\n    static LABEL_AND_CONNECTOR_HEIGHT = EntryLabelOverlay.LABEL_HEIGHT + EntryLabelOverlay.LABEL_PADDING * 2 + EntryLabelOverlay.LABEL_CONNECTOR_HEIGHT;\n    // Set the max label length to avoid labels that could signicantly increase the file size.\n    static MAX_LABEL_LENGTH = 100;\n    #shadow = this.attachShadow({ mode: 'open' });\n    #boundRender = this.#render.bind(this);\n    // Once a label is bound for deletion, we remove it from the DOM via events\n    // that are dispatched. But in the meantime the blur event of the input box\n    // can fire, and that triggers a second removal. So we set this flag after\n    // the first removal to avoid a duplicate event firing which is a no-op but\n    // causes errors when we try to delete an already deleted annotation.\n    #isPendingRemoval = false;\n    // The label is set to editable when it is double clicked. If the user clicks away from the label box\n    // element, the lable is set to not editable until it double clicked.s\n    #isLabelEditable = true;\n    #entryLabelVisibleHeight = null;\n    #labelPartsWrapper = null;\n    #entryHighlightWrapper = null;\n    #inputField = null;\n    #connectorLineContainer = null;\n    #label;\n    #shouldDrawBelowEntry;\n    /**\n     * The entry label overlay consists of 3 parts - the label part with the label string inside,\n     * the line connecting the label to the entry, and a black box around an entry to highlight the entry with a label.\n     * ________\n     * |_label__|                <-- label part with the label string inside\n     *     \\\n     *      \\                   <-- line connecting the label to the entry with a circle at the end\n     *       \\\n     * _______◯_________\n     * |_____entry______|         <--- box around an entry\n     *\n     * `drawLabel` method below draws the first part.\n     * `drawConnector` method below draws the second part - the connector line with a circle and the svg container for them.\n     * `drawEntryHighlightWrapper` draws the third part.\n     * We only rerender the first part if the label changes and the third part if the size of the entry changes.\n     * The connector and circle shapes never change so we only draw the second part when the component is created.\n     *\n     * Otherwise, the entry label overlay object only gets repositioned.\n     */\n    constructor(label, shouldDrawBelowEntry = false) {\n        super();\n        this.#render();\n        this.#shouldDrawBelowEntry = shouldDrawBelowEntry;\n        this.#labelPartsWrapper = this.#shadow.querySelector('.label-parts-wrapper');\n        this.#inputField = this.#labelPartsWrapper?.querySelector('.input-field') ?? null;\n        this.#connectorLineContainer = this.#labelPartsWrapper?.querySelector('.connectorContainer') ?? null;\n        this.#entryHighlightWrapper =\n            this.#labelPartsWrapper?.querySelector('.entry-highlight-wrapper') ?? null;\n        this.#label = label;\n        this.#drawLabel(label);\n        // If the label is not empty, it was loaded from the trace file.\n        // In that case, do not auto-focus it as if the user were creating it for the first time\n        if (label !== '') {\n            this.setLabelEditabilityAndRemoveEmptyLabel(false);\n        }\n        const ariaLabel = label === '' ? i18nString(UIStrings.inputTextPrompt) : label;\n        this.#inputField?.setAttribute('aria-label', ariaLabel);\n        this.#drawConnector();\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [styles];\n    }\n    entryHighlightWrapper() {\n        return this.#entryHighlightWrapper;\n    }\n    #handleLabelInputKeyUp() {\n        // If the label changed on key up, dispatch label changed event.\n        const labelBoxTextContent = this.#inputField?.textContent?.trim() ?? '';\n        if (labelBoxTextContent !== this.#label) {\n            this.#label = labelBoxTextContent;\n            this.dispatchEvent(new EntryLabelChangeEvent(this.#label));\n        }\n        this.#inputField?.setAttribute('aria-label', labelBoxTextContent);\n    }\n    #handleLabelInputKeyDown(event) {\n        if (!this.#inputField) {\n            return false;\n        }\n        const allowedKeysAfterReachingLenLimit = [\n            'Backspace',\n            'Delete',\n            'ArrowLeft',\n            'ArrowRight',\n        ];\n        // We do not want to create multi-line labels.\n        // Therefore, if the new key is `Enter` key, treat it\n        // as the end of the label input and blur the input field.\n        if (event.key === 'Enter' || event.key === 'Escape') {\n            // Note that we do not stop the event propagating here; this is on\n            // purpose because we need it to bubble up into TimelineFlameChartView's\n            // handler. That updates the state and deals with the keydown.\n            this.#inputField.dispatchEvent(new FocusEvent('blur', { bubbles: true }));\n            return false;\n        }\n        // If the max limit is not reached, return true\n        if (this.#inputField.textContent !== null &&\n            this.#inputField.textContent.length <= EntryLabelOverlay.MAX_LABEL_LENGTH) {\n            return true;\n        }\n        if (allowedKeysAfterReachingLenLimit.includes(event.key)) {\n            return true;\n        }\n        if (event.key.length === 1 && event.ctrlKey /* Ctrl + A for selecting all */) {\n            return true;\n        }\n        event.preventDefault();\n        return false;\n    }\n    #handleLabelInputPaste(event) {\n        event.preventDefault();\n        const clipboardData = event.clipboardData;\n        if (!clipboardData || !this.#inputField) {\n            return;\n        }\n        const pastedText = clipboardData.getData('text');\n        const newText = this.#inputField.textContent + pastedText;\n        const trimmedText = newText.slice(0, EntryLabelOverlay.MAX_LABEL_LENGTH + 1);\n        this.#inputField.textContent = trimmedText;\n        // Reset the selection to the end\n        const selection = window.getSelection();\n        const range = document.createRange();\n        range.selectNodeContents(this.#inputField);\n        range.collapse(false);\n        selection?.removeAllRanges();\n        selection?.addRange(range);\n    }\n    set entryLabelVisibleHeight(entryLabelVisibleHeight) {\n        if (entryLabelVisibleHeight === this.#entryLabelVisibleHeight) {\n            // Even the position is not changed, the theme color might change, so we need to redraw the connector here.\n            this.#drawConnector();\n            return;\n        }\n        this.#entryLabelVisibleHeight = entryLabelVisibleHeight;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n        // If the label is editable, focus cursor on it.\n        // This method needs to be called after rendering the wrapper because it is the last label overlay element to render.\n        // By doing this, the cursor focuses when the label is created.\n        if (this.#isLabelEditable) {\n            this.#focusInputBox();\n        }\n        // The label and connector can move depending on the height of the entry\n        this.#drawLabel();\n        this.#drawConnector();\n    }\n    #drawConnector() {\n        if (!this.#connectorLineContainer) {\n            console.error('`connectorLineContainer` element is missing.');\n            return;\n        }\n        if (this.#shouldDrawBelowEntry && this.#entryLabelVisibleHeight) {\n            const translation = this.#entryLabelVisibleHeight + EntryLabelOverlay.LABEL_CONNECTOR_HEIGHT;\n            this.#connectorLineContainer.style.transform = `translateY(${translation}px) rotate(180deg)`;\n        }\n        const connector = this.#connectorLineContainer.querySelector('line');\n        const circle = this.#connectorLineContainer.querySelector('circle');\n        if (!connector || !circle) {\n            console.error('Some entry label elements are missing.');\n            return;\n        }\n        // PART 2: draw the connector from label to the entry\n        // Set the width of the canvas that draws the connector to be equal to the length of the shift multiplied by two.\n        // That way, we can draw the connector from its corner to its middle. Since all elements are alligned in the middle, the connector\n        // will end in the middle of the entry.\n        this.#connectorLineContainer.setAttribute('width', (EntryLabelOverlay.LABEL_AND_CONNECTOR_SHIFT_LENGTH * 2).toString());\n        this.#connectorLineContainer.setAttribute('height', EntryLabelOverlay.LABEL_CONNECTOR_HEIGHT.toString());\n        // Start drawing the top right corner.\n        connector.setAttribute('x1', '0');\n        connector.setAttribute('y1', '0');\n        // Finish drawing in middle of the connector container.\n        connector.setAttribute('x2', EntryLabelOverlay.LABEL_AND_CONNECTOR_SHIFT_LENGTH.toString());\n        connector.setAttribute('y2', EntryLabelOverlay.LABEL_CONNECTOR_HEIGHT.toString());\n        const connectorColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--color-text-primary');\n        connector.setAttribute('stroke', connectorColor);\n        connector.setAttribute('stroke-width', '2');\n        // Draw the circle at the bottom of the connector\n        circle.setAttribute('cx', EntryLabelOverlay.LABEL_AND_CONNECTOR_SHIFT_LENGTH.toString());\n        circle.setAttribute('cy', EntryLabelOverlay.LABEL_CONNECTOR_HEIGHT.toString());\n        circle.setAttribute('r', '3');\n        circle.setAttribute('fill', connectorColor);\n    }\n    #drawLabel(initialLabel) {\n        if (!this.#inputField) {\n            console.error('`labelBox`element is missing.');\n            return;\n        }\n        if (typeof initialLabel === 'string') {\n            this.#inputField.innerText = initialLabel;\n        }\n        let xTranslation = null;\n        let yTranslation = null;\n        // PART 1: draw the label box\n        if (this.#shouldDrawBelowEntry) {\n            // Label is drawn below and slightly to the right.\n            xTranslation = EntryLabelOverlay.LABEL_AND_CONNECTOR_SHIFT_LENGTH;\n        }\n        else {\n            // If the label is drawn above, the connector goes up and to the left, so\n            // we pull the label back slightly to align it nicely.\n            xTranslation = EntryLabelOverlay.LABEL_AND_CONNECTOR_SHIFT_LENGTH * -1;\n        }\n        if (this.#shouldDrawBelowEntry && this.#entryLabelVisibleHeight) {\n            // Move the label down from above the entry to below it. The label is positioned by default quite far above the entry, hence why we add:\n            // 1. the height of the entry + of the label (inc its padding)\n            // 2. the height of the connector (*2), so we have room to draw it\n            const verticalTransform = this.#entryLabelVisibleHeight + EntryLabelOverlay.LABEL_HEIGHT +\n                EntryLabelOverlay.LABEL_PADDING * 2 + EntryLabelOverlay.LABEL_CONNECTOR_HEIGHT * 2;\n            yTranslation = verticalTransform;\n        }\n        let transformString = '';\n        if (xTranslation) {\n            transformString += `translateX(${xTranslation}px) `;\n        }\n        if (yTranslation) {\n            transformString += `translateY(${yTranslation}px)`;\n        }\n        if (transformString.length) {\n            this.#inputField.style.transform = transformString;\n        }\n    }\n    #focusInputBox() {\n        if (!this.#inputField) {\n            console.error('`labelBox` element is missing.');\n            return;\n        }\n        this.#inputField.focus();\n    }\n    setLabelEditabilityAndRemoveEmptyLabel(editable) {\n        this.#isLabelEditable = editable;\n        this.#render();\n        // If the label is editable, focus cursor on it\n        if (editable) {\n            this.#focusInputBox();\n        }\n        // On MacOS when clearing the input box it is left with a new line, so we\n        // trim the string to remove any accidental trailing whitespace.\n        const newLabelText = this.#inputField?.textContent?.trim() ?? '';\n        // If the label is empty when it is being navigated away from, dispatch an event to remove this entry overlay\n        if (!editable && newLabelText.length === 0 && !this.#isPendingRemoval) {\n            this.#isPendingRemoval = true;\n            this.dispatchEvent(new EmptyEntryLabelRemoveEvent());\n        }\n    }\n    #render() {\n        // clang-format off\n        LitHtml.render(html `\n        <span class=\"label-parts-wrapper\" role=\"region\" aria-label=${i18nString(UIStrings.entryLabel)}>\n          <span\n            class=\"input-field\"\n            role=\"textbox\"\n            @dblclick=${() => this.setLabelEditabilityAndRemoveEmptyLabel(true)}\n            @blur=${() => this.setLabelEditabilityAndRemoveEmptyLabel(false)}\n            @keydown=${this.#handleLabelInputKeyDown}\n            @paste=${this.#handleLabelInputPaste}\n            @keyup=${this.#handleLabelInputKeyUp}\n            contenteditable=${this.#isLabelEditable ? 'plaintext-only' : false}\n            jslog=${VisualLogging.textField('timeline.annotations.entry-label-input').track({ keydown: true, click: true })}\n          ></span>\n          <svg class=\"connectorContainer\">\n            <line/>\n            <circle/>\n          </svg>\n          <div class=\"entry-highlight-wrapper\"></div>\n        </span>`, this.#shadow, { host: this });\n        // clang-format on\n    }\n}\ncustomElements.define('devtools-entry-label-overlay', EntryLabelOverlay);\n//# sourceMappingURL=EntryLabelOverlay.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: flex;\n  overflow: hidden;\n  flex-direction: column;\n  justify-content: flex-end;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  padding-bottom: 5px;\n  background: linear-gradient(180deg, rgb(255 125 210 / 0%) 0%, rgb(255 125 210 / 15%) 85%); /* stylelint-disable-line plugin/use_theme_colors */\n  border-color: var(--ref-palette-pink55);\n  border-width: 0 1px 5px;\n  border-style: solid;\n  pointer-events: none;\n}\n\n.range-container {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n  box-sizing: border-box;\n  pointer-events: all;\n  user-select: none;\n  color: var(--sys-color-pink);\n\n  &.labelHidden {\n    /* Have to use this not display: none so it maintains its width */\n    user-select: none;\n    pointer-events: none;\n    visibility: hidden;\n  }\n\n  &.offScreenLeft {\n    align-items: flex-start;\n    text-align: left;\n  }\n\n  &.offScreenRight {\n    align-items: flex-end;\n    text-align: right;\n  }\n}\n\n.label-text {\n  /*\n  * The width priority is min-width > max-width > width\n  * When the range itself is smaller that 70px, expand 100% to fill the whole width.\n  * When the range is wider, only expand the textfield to over 70px\n  * if it's needed to fit the label text.\n  */\n  width: 100%;\n  max-width: 70px;\n  min-width: fit-content;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  word-break: break-word;\n  margin-bottom: 3px;\n  display: -webkit-box;\n  white-space: break-spaces;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n.label-text[contenteditable=\"true\"] {\n  outline: none;\n  box-shadow: 0 0 0 1px var(--ref-palette-pink55);\n}\n\n/*# sourceURL=timeRangeOverlay.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\nimport styles from './timeRangeOverlay.css.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description Accessible label used to explain to a user that they are viewing an entry label.\n     */\n    timeRange: 'Time range',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/overlays/components/TimeRangeOverlay.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimeRangeLabelChangeEvent extends Event {\n    newLabel;\n    static eventName = 'timerangelabelchange';\n    constructor(newLabel) {\n        super(TimeRangeLabelChangeEvent.eventName);\n        this.newLabel = newLabel;\n    }\n}\nexport class TimeRangeRemoveEvent extends Event {\n    static eventName = 'timerangeremoveevent';\n    constructor() {\n        super(TimeRangeRemoveEvent.eventName);\n    }\n}\nexport class TimeRangeOverlay extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #duration = null;\n    #canvasRect = null;\n    #label;\n    // The label is set to editable and in focus anytime the label is empty and when the label it is double clicked.\n    // If the user clicks away from the selected range element and the label is not empty, the lable is set to not editable until it is double clicked.\n    #isLabelEditable = true;\n    #rangeContainer = null;\n    #labelBox = null;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [styles];\n    }\n    constructor(initialLabel) {\n        super();\n        this.#render();\n        this.#rangeContainer = this.#shadow.querySelector('.range-container');\n        this.#labelBox = this.#rangeContainer?.querySelector('.label-text') ?? null;\n        this.#label = initialLabel;\n        if (!this.#labelBox) {\n            console.error('`labelBox` element is missing.');\n            return;\n        }\n        this.#labelBox.innerText = initialLabel;\n        if (initialLabel) {\n            this.#labelBox?.setAttribute('aria-label', initialLabel);\n            // To construct a time range with a predefined label, it must have been\n            // loaded from the trace file. In this case we do not want it to default\n            // to editable.\n            this.#setLabelEditability(false);\n        }\n    }\n    set canvasRect(rect) {\n        if (rect === null) {\n            return;\n        }\n        if (this.#canvasRect && this.#canvasRect.width === rect.width && this.#canvasRect.height === rect.height) {\n            return;\n        }\n        this.#canvasRect = rect;\n        this.#render();\n    }\n    set duration(duration) {\n        if (duration === this.#duration) {\n            return;\n        }\n        this.#duration = duration;\n        this.#render();\n    }\n    /**\n     * This calculates how much of the time range is in the user's view. This is\n     * used to determine how much of the label can fit into the view, and if we\n     * should even show the label.\n     */\n    #visibleOverlayWidth(overlayRect) {\n        if (!this.#canvasRect) {\n            return 0;\n        }\n        const { x: overlayStartX, width } = overlayRect;\n        const overlayEndX = overlayStartX + width;\n        const canvasStartX = this.#canvasRect.x;\n        const canvasEndX = this.#canvasRect.x + this.#canvasRect.width;\n        const leftVisible = Math.max(canvasStartX, overlayStartX);\n        const rightVisible = Math.min(canvasEndX, overlayEndX);\n        return rightVisible - leftVisible;\n    }\n    /**\n     * We use this method after the overlay has been positioned in order to move\n     * the label as required to keep it on screen.\n     * If the label is off to the left or right, we fix it to that corner and\n     * align the text so the label is visible as long as possible.\n     */\n    updateLabelPositioning() {\n        if (!this.#rangeContainer) {\n            return;\n        }\n        if (!this.#canvasRect || !this.#labelBox) {\n            return;\n        }\n        // On the RHS of the panel a scrollbar can be shown which means the canvas\n        // has a 9px gap on the right hand edge. We use this value when calculating\n        // values and label positioning from the left hand side in order to be\n        // consistent on both edges of the UI.\n        const paddingForScrollbar = 9;\n        const overlayRect = this.getBoundingClientRect();\n        const labelFocused = this.#shadow.activeElement === this.#labelBox;\n        const labelRect = this.#rangeContainer.getBoundingClientRect();\n        const visibleOverlayWidth = this.#visibleOverlayWidth(overlayRect) - paddingForScrollbar;\n        const durationBox = this.#rangeContainer.querySelector('.duration') ?? null;\n        const durationBoxLength = durationBox?.getBoundingClientRect().width;\n        if (!durationBoxLength) {\n            return;\n        }\n        const overlayTooNarrow = visibleOverlayWidth <= durationBoxLength;\n        // We do not hide the label if:\n        // 1. it is focused (user is typing into it)\n        // 2. it is empty - this means it's a new label and we need to let the user type into it!\n        // 3. it is too narrow - narrower than the duration length\n        const hideLabel = overlayTooNarrow && !labelFocused && this.#label.length > 0;\n        this.#rangeContainer.classList.toggle('labelHidden', hideLabel);\n        if (hideLabel) {\n            // Label is invisible, no need to do all the layout.\n            return;\n        }\n        // Check if label is off the LHS of the screen.\n        const labelLeftMarginToCenter = (overlayRect.width - labelRect.width) / 2;\n        const newLabelX = overlayRect.x + labelLeftMarginToCenter;\n        const labelOffLeftOfScreen = newLabelX < this.#canvasRect.x;\n        this.#rangeContainer.classList.toggle('offScreenLeft', labelOffLeftOfScreen);\n        // Check if label is off the RHS of the screen\n        const rightBound = this.#canvasRect.x + this.#canvasRect.width;\n        // The label's right hand edge is the gap from the left of the range to the\n        // label, and then the width of the label.\n        const labelRightEdge = overlayRect.x + labelLeftMarginToCenter + labelRect.width;\n        const labelOffRightOfScreen = labelRightEdge > rightBound;\n        this.#rangeContainer.classList.toggle('offScreenRight', labelOffRightOfScreen);\n        if (labelOffLeftOfScreen) {\n            // If the label is off the left of the screen, we adjust by the\n            // difference between the X that represents the start of the cavnas, and\n            // the X that represents the start of the overlay.\n            // We then take the absolute value of this - because if the canvas starts\n            // at 0, and the overlay is -200px, we have to adjust the label by +200.\n            // Add on 9 pixels to pad from the left; this is the width of the sidebar\n            // on the RHS so we match it so the label is equally padded on either\n            // side.\n            this.#rangeContainer.style.marginLeft = `${Math.abs(this.#canvasRect.x - overlayRect.x) + paddingForScrollbar}px`;\n        }\n        else if (labelOffRightOfScreen) {\n            // If the label is off the right of the screen, we adjust by adding the\n            // right margin equal to the difference between the right edge of the\n            // overlay and the right edge of the canvas.\n            this.#rangeContainer.style.marginRight = `${overlayRect.right - this.#canvasRect.right + paddingForScrollbar}px`;\n        }\n        else {\n            // Keep the label central.\n            this.#rangeContainer.style.margin = '0px';\n        }\n        // If the text is empty, set the label editibility to true.\n        // Only allow to remove the focus and save the range as annotation if the label is not empty.\n        if (this.#labelBox?.innerText === '') {\n            this.#setLabelEditability(true);\n        }\n    }\n    #focusInputBox() {\n        if (!this.#labelBox) {\n            console.error('`labelBox` element is missing.');\n            return;\n        }\n        this.#labelBox.focus();\n    }\n    #setLabelEditability(editable) {\n        // Always keep focus on the label input field if the label is empty.\n        // TODO: Do not remove a range that is being navigated away from if the label is not empty\n        if (this.#labelBox?.innerText === '') {\n            this.#focusInputBox();\n            return;\n        }\n        this.#isLabelEditable = editable;\n        this.#render();\n        // If the label is editable, focus cursor on it\n        if (editable) {\n            this.#focusInputBox();\n        }\n    }\n    #handleLabelInputKeyUp() {\n        // If the label changed on key up, dispatch label changed event\n        const labelBoxTextContent = this.#labelBox?.textContent ?? '';\n        if (labelBoxTextContent !== this.#label) {\n            this.#label = labelBoxTextContent;\n            this.dispatchEvent(new TimeRangeLabelChangeEvent(this.#label));\n            this.#labelBox?.setAttribute('aria-label', labelBoxTextContent);\n        }\n    }\n    #handleLabelInputKeyDown(event) {\n        // If the new key is `Enter` or `Escape` key, treat it\n        // as the end of the label input and blur the input field.\n        // If the text field is empty when `Enter` or `Escape` are pressed,\n        // dispatch an event to remove the time range.\n        if (event.key === 'Enter' || event.key === 'Escape') {\n            // In DevTools, the `Escape` button will by default toggle the console\n            // drawer, which we don't want here, so we need to call\n            // `stopPropagation()`.\n            event.stopPropagation();\n            if (this.#label === '') {\n                this.dispatchEvent(new TimeRangeRemoveEvent());\n            }\n            this.#labelBox?.blur();\n            return false;\n        }\n        return true;\n    }\n    #render() {\n        const durationText = this.#duration ? i18n.TimeUtilities.formatMicroSecondsTime(this.#duration) : '';\n        // clang-format off\n        LitHtml.render(html `\n          <span class=\"range-container\" role=\"region\" aria-label=${i18nString(UIStrings.timeRange)}>\n            <span\n             class=\"label-text\"\n             role=\"textbox\"\n             @focusout=${() => this.#setLabelEditability(false)}\n             @dblclick=${() => this.#setLabelEditability(true)}\n             @keydown=${this.#handleLabelInputKeyDown}\n             @keyup=${this.#handleLabelInputKeyUp}\n             contenteditable=${this.#isLabelEditable ? 'plaintext-only' : false}\n             jslog=${VisualLogging.textField('timeline.annotations.time-range-label-input').track({ keydown: true, click: true })}\n            ></span>\n            <span class=\"duration\">${durationText}</span>\n          </span>\n          `, this.#shadow, { host: this });\n        // clang-format on\n        // Now we have rendered, we need to re-run the code to tweak the margin &\n        // positioning of the label.\n        this.updateLabelPositioning();\n    }\n}\ncustomElements.define('devtools-time-range-overlay', TimeRangeOverlay);\n//# sourceMappingURL=TimeRangeOverlay.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.timespan-breakdown-overlay-section {\n  border: solid;\n  border-color: var(--sys-color-on-surface);\n  border-width: 4px 1px 0;\n  align-content: flex-start;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  background-image: linear-gradient(180deg, var(--sys-color-on-primary), transparent);\n  height: 90%;\n  box-sizing: border-box;\n  padding-top: var(--sys-size-2);\n\n  :host(.is-below) & {\n    border-top-width: 0;\n    border-bottom-width: 4px;\n    align-content: flex-end; /* anchor the text at the bottom */\n    padding-bottom: var(--sys-size-2);\n    padding-top: 0;\n\n    /* re-order so the timestamp is below label */\n    .timespan-breakdown-overlay-label {\n      display: flex;\n      flex-direction: column-reverse;\n    }\n  }\n}\n\n:host {\n  display: flex;\n  overflow: hidden;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: flex-end;\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  max-height: 100px;\n\n  /* Ensure that the first & last sections always have the left/right border */\n  /* (disable stylelint because we need the !important to override border\n   * styles below + keeping them here is clearer to read) */\n  .timespan-breakdown-overlay-section:first-child {\n    border-left-width: 1px !important; /* stylelint-disable-line declaration-no-important */\n  }\n\n  .timespan-breakdown-overlay-section:last-child {\n    border-right-width: 1px !important; /* stylelint-disable-line declaration-no-important */\n  }\n}\n\n:host(.is-below) {\n  align-items: flex-start;\n}\n\n/* Depending on if the number of sections is odd or even, we alternate the\n * heights of the even/odd sections. We do this to ensure that the first item\n * is never a \"high\" item, because that looks a bit clunky. */\n:host(.odd-number-of-sections) {\n  .timespan-breakdown-overlay-section:nth-child(even) {\n    height: 100%;\n  }\n\n  .timespan-breakdown-overlay-section:nth-child(odd) {\n    border-left-width: 0;\n    border-right-width: 0;\n  }\n}\n\n:host(.even-number-of-sections) {\n  .timespan-breakdown-overlay-section:nth-child(odd) {\n    height: 100%;\n  }\n\n  .timespan-breakdown-overlay-section:nth-child(even) {\n    border-left-width: 0;\n    border-right-width: 0;\n  }\n}\n\n.timespan-breakdown-overlay-label {\n  font-family: var(--default-font-family);\n  font-size: var(--sys-typescale-body2-size);\n  line-height: var(--sys-typescale-body4-line-height);\n  font-weight: var(--ref-typeface-weight-medium);\n  color: var(--sys-color-on-surface);\n  text-align: center;\n  box-sizing: border-box;\n  width: max-content;\n  padding: 0 3px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-wrap: nowrap;\n\n  .duration-text {\n    font-size: var(--sys-typescale-body4-size);\n    text-overflow: ellipsis;\n    overflow: hidden;\n    text-wrap: nowrap;\n    display: block;\n  }\n\n  .discovery-time-ms {\n    font-weight: var(--ref-typeface-weight-bold);\n  }\n\n  &.labelHidden {\n    /* Have to use this not display: none so it maintains its width */\n    user-select: none;\n    pointer-events: none;\n    visibility: hidden;\n  }\n\n  &.labelTruncated {\n    /* This means the label will show the text that fits with an ellipsis for\n     * the overflow */\n    max-width: 100%;\n  }\n\n  &.offScreenLeft {\n    text-align: left;\n  }\n\n  &.offScreenRight {\n    text-align: right;\n  }\n}\n\n/*# sourceURL=timespanBreakdownOverlay.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport styles from './timespanBreakdownOverlay.css.js';\nconst { html } = LitHtml;\nexport class TimespanBreakdownOverlay extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #canvasRect = null;\n    #sections = null;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [styles];\n    }\n    set isBelowEntry(isBelow) {\n        this.classList.toggle('is-below', isBelow);\n    }\n    set canvasRect(rect) {\n        if (this.#canvasRect && rect && this.#canvasRect.width === rect.width && this.#canvasRect.height === rect.height) {\n            return;\n        }\n        this.#canvasRect = rect;\n        this.#render();\n    }\n    set sections(sections) {\n        if (sections === this.#sections) {\n            return;\n        }\n        this.#sections = sections;\n        this.#render();\n    }\n    /**\n     * We use this method after the overlay has been positioned in order to move\n     * the section label as required to keep it on screen.\n     * If the label is off to the left or right, we fix it to that corner and\n     * align the text so the label is visible as long as possible.\n     */\n    checkSectionLabelPositioning() {\n        const sections = this.#shadow.querySelectorAll('.timespan-breakdown-overlay-section');\n        if (!sections) {\n            return;\n        }\n        if (!this.#canvasRect) {\n            return;\n        }\n        // On the RHS of the panel a scrollbar can be shown which means the canvas\n        // has a 9px gap on the right hand edge. We use this value when calculating\n        // values and label positioning from the left hand side in order to be\n        // consistent on both edges of the UI.\n        const paddingForScrollbar = 9;\n        // Fetch the rects for each section and label now, rather than in the loop,\n        // to avoid causing a bunch of recalcStyles\n        const sectionLayoutData = new Map();\n        for (const section of sections) {\n            const label = section.querySelector('.timespan-breakdown-overlay-label');\n            if (!label) {\n                continue;\n            }\n            const sectionRect = section.getBoundingClientRect();\n            const labelRect = label.getBoundingClientRect();\n            sectionLayoutData.set(section, { sectionRect, labelRect, label });\n        }\n        const minSectionWidthToShowAnyLabel = 30;\n        // Align the labels for all the breakdown sections.\n        for (const section of sections) {\n            const layoutData = sectionLayoutData.get(section);\n            if (!layoutData) {\n                break;\n            }\n            const { labelRect, sectionRect, label } = layoutData;\n            const labelHidden = sectionRect.width < minSectionWidthToShowAnyLabel;\n            // Subtract 5 from the section width to allow a tiny bit of padding.\n            const labelTruncated = sectionRect.width - 5 <= labelRect.width;\n            // We differentiate between hidden + truncated; if it is truncated we\n            // will show the text with ellipsis for overflow, but if the section is\n            // really small we just hide the label entirely.\n            label.classList.toggle('labelHidden', labelHidden);\n            label.classList.toggle('labelTruncated', labelTruncated);\n            if (labelHidden || labelTruncated) {\n                // Label is hidden or doesn't fully fit, so we don't need to do the\n                // logic to left/right align if it needs it.\n                continue;\n            }\n            // Check if label is off the LHS of the screen.\n            const labelLeftMarginToCenter = (sectionRect.width - labelRect.width) / 2;\n            const newLabelX = sectionRect.x + labelLeftMarginToCenter;\n            const labelOffLeftOfScreen = newLabelX < this.#canvasRect.x;\n            label.classList.toggle('offScreenLeft', labelOffLeftOfScreen);\n            // Check if label is off the RHS of the screen\n            const rightBound = this.#canvasRect.x + this.#canvasRect.width;\n            // The label's right hand edge is the gap from the left of the range to the\n            // label, and then the width of the label.\n            const labelRightEdge = sectionRect.x + labelLeftMarginToCenter + labelRect.width;\n            const labelOffRightOfScreen = labelRightEdge > rightBound;\n            label.classList.toggle('offScreenRight', labelOffRightOfScreen);\n            if (labelOffLeftOfScreen) {\n                // If the label is off the left of the screen, we adjust by the\n                // difference between the X that represents the start of the cavnas, and\n                // the X that represents the start of the overlay.\n                // We then take the absolute value of this - because if the canvas starts\n                // at 0, and the overlay is -200px, we have to adjust the label by +200.\n                // Add on 9 pixels to pad from the left; this is the width of the sidebar\n                // on the RHS so we match it so the label is equally padded on either\n                // side.\n                label.style.marginLeft = `${Math.abs(this.#canvasRect.x - sectionRect.x) + paddingForScrollbar}px`;\n            }\n            else if (labelOffRightOfScreen) {\n                // To calculate how far left to push the label, we take the right hand\n                // bound (the canvas width and subtract the label's width).\n                // Finally, we subtract the X position of the overlay (if the overlay is\n                // 200px within the view, we don't need to push the label that 200px too\n                // otherwise it will be off-screen)\n                const leftMargin = rightBound - labelRect.width - sectionRect.x;\n                label.style.marginLeft = `${leftMargin}px`;\n            }\n            else {\n                // Keep the label central.\n                label.style.marginLeft = `${labelLeftMarginToCenter}px`;\n            }\n        }\n    }\n    renderedSections() {\n        return Array.from(this.#shadow.querySelectorAll('.timespan-breakdown-overlay-section'));\n    }\n    #renderSection(section) {\n        // clang-format off\n        return html `\n      <div class=\"timespan-breakdown-overlay-section\">\n        <div class=\"timespan-breakdown-overlay-label\">\n        ${section.showDuration ?\n            html `\n            <span class=\"duration-text\">${i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(section.bounds.range)}</span>\n          ` : LitHtml.nothing}\n          <span class=\"section-label-text\">\n            ${section.label}\n          </span>\n        </div>\n      </div>`;\n        // clang-format on\n    }\n    #render() {\n        if (this.#sections) {\n            this.classList.toggle('odd-number-of-sections', this.#sections.length % 2 === 1);\n            this.classList.toggle('even-number-of-sections', this.#sections.length % 2 === 0);\n        }\n        LitHtml.render(html `${this.#sections?.map(this.#renderSection)}`, this.#shadow, { host: this });\n        this.checkSectionLabelPositioning();\n    }\n}\ncustomElements.define('devtools-timespan-breakdown-overlay', TimespanBreakdownOverlay);\n//# sourceMappingURL=TimespanBreakdownOverlay.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../core/common/common.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Trace from '../../../models/trace/trace.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Components from './components/components.js';\n/**\n * Below the network track there is a resize bar the user can click and drag.\n */\nconst NETWORK_RESIZE_ELEM_HEIGHT_PX = 8;\n/**\n * Given a list of overlays, this method will calculate the smallest possible\n * trace window that will contain all of the overlays.\n * `overlays` is expected to be non-empty.\n */\nexport function traceWindowContainingOverlays(overlays) {\n    let minTime = Trace.Types.Timing.MicroSeconds(Number.POSITIVE_INFINITY);\n    let maxTime = Trace.Types.Timing.MicroSeconds(Number.NEGATIVE_INFINITY);\n    for (const overlay of overlays) {\n        const windowForOverlay = traceWindowForOverlay(overlay);\n        if (windowForOverlay.min < minTime) {\n            minTime = windowForOverlay.min;\n        }\n        if (windowForOverlay.max > maxTime) {\n            maxTime = windowForOverlay.max;\n        }\n    }\n    return Trace.Helpers.Timing.traceWindowFromMicroSeconds(minTime, maxTime);\n}\nfunction traceWindowForOverlay(overlay) {\n    const overlayMinBounds = [];\n    const overlayMaxBounds = [];\n    switch (overlay.type) {\n        case 'ENTRY_SELECTED': {\n            const timings = timingsForOverlayEntry(overlay.entry);\n            overlayMinBounds.push(timings.startTime);\n            overlayMaxBounds.push(timings.endTime);\n            break;\n        }\n        case 'ENTRY_OUTLINE': {\n            const timings = timingsForOverlayEntry(overlay.entry);\n            overlayMinBounds.push(timings.startTime);\n            overlayMaxBounds.push(timings.endTime);\n            break;\n        }\n        case 'TIME_RANGE': {\n            overlayMinBounds.push(overlay.bounds.min);\n            overlayMaxBounds.push(overlay.bounds.max);\n            break;\n        }\n        case 'ENTRY_LABEL': {\n            const timings = timingsForOverlayEntry(overlay.entry);\n            overlayMinBounds.push(timings.startTime);\n            overlayMaxBounds.push(timings.endTime);\n            break;\n        }\n        case 'ENTRIES_LINK': {\n            const timingsFrom = timingsForOverlayEntry(overlay.entryFrom);\n            overlayMinBounds.push(timingsFrom.startTime);\n            if (overlay.entryTo) {\n                const timingsTo = timingsForOverlayEntry(overlay.entryTo);\n                // No need to push the startTime; it must be larger than the entryFrom start time.\n                overlayMaxBounds.push(timingsTo.endTime);\n            }\n            else {\n                // Only use the end time if we have no entryTo; otherwise the entryTo\n                // endTime is guaranteed to be larger than the entryFrom endTime.\n                overlayMaxBounds.push(timingsFrom.endTime);\n            }\n            break;\n        }\n        case 'TIMESPAN_BREAKDOWN': {\n            if (overlay.entry) {\n                const timings = timingsForOverlayEntry(overlay.entry);\n                overlayMinBounds.push(timings.startTime);\n                overlayMaxBounds.push(timings.endTime);\n            }\n            for (const section of overlay.sections) {\n                overlayMinBounds.push(section.bounds.min);\n                overlayMaxBounds.push(section.bounds.max);\n            }\n            break;\n        }\n        case 'CURSOR_TIMESTAMP_MARKER': {\n            overlayMinBounds.push(overlay.timestamp);\n            break;\n        }\n        case 'CANDY_STRIPED_TIME_RANGE': {\n            const timings = timingsForOverlayEntry(overlay.entry);\n            overlayMinBounds.push(timings.startTime);\n            overlayMaxBounds.push(timings.endTime);\n            overlayMinBounds.push(overlay.bounds.min);\n            overlayMaxBounds.push(overlay.bounds.max);\n            break;\n        }\n        default:\n            Platform.TypeScriptUtilities.assertNever(overlay, `Unexpected overlay ${overlay}`);\n    }\n    const min = Trace.Types.Timing.MicroSeconds(Math.min(...overlayMinBounds));\n    const max = Trace.Types.Timing.MicroSeconds(Math.max(...overlayMaxBounds));\n    return Trace.Helpers.Timing.traceWindowFromMicroSeconds(min, max);\n}\n/**\n * Get a list of entries for a given overlay.\n */\nexport function entriesForOverlay(overlay) {\n    const entries = [];\n    switch (overlay.type) {\n        case 'ENTRY_SELECTED': {\n            entries.push(overlay.entry);\n            break;\n        }\n        case 'ENTRY_OUTLINE': {\n            entries.push(overlay.entry);\n            break;\n        }\n        case 'TIME_RANGE': {\n            // Time ranges are not associated with entries.\n            break;\n        }\n        case 'ENTRY_LABEL': {\n            entries.push(overlay.entry);\n            break;\n        }\n        case 'ENTRIES_LINK': {\n            entries.push(overlay.entryFrom);\n            if (overlay.entryTo) {\n                entries.push(overlay.entryTo);\n            }\n            break;\n        }\n        case 'TIMESPAN_BREAKDOWN': {\n            if (overlay.entry) {\n                entries.push(overlay.entry);\n            }\n            break;\n        }\n        case 'CURSOR_TIMESTAMP_MARKER': {\n            break;\n        }\n        case 'CANDY_STRIPED_TIME_RANGE': {\n            entries.push(overlay.entry);\n            break;\n        }\n        default:\n            Platform.assertNever(overlay, `Unknown overlay type ${JSON.stringify(overlay)}`);\n    }\n    return entries;\n}\nexport function chartForEntry(entry) {\n    if (Trace.Types.Events.isNetworkTrackEntry(entry)) {\n        return 'network';\n    }\n    return 'main';\n}\nexport function overlayIsSingleton(overlay) {\n    return overlay.type === 'CURSOR_TIMESTAMP_MARKER' || overlay.type === 'ENTRY_SELECTED';\n}\nexport class AnnotationOverlayActionEvent extends Event {\n    overlay;\n    action;\n    static eventName = 'annotationoverlayactionsevent';\n    constructor(overlay, action) {\n        super(AnnotationOverlayActionEvent.eventName);\n        this.overlay = overlay;\n        this.action = action;\n    }\n}\n/**\n * This class manages all the overlays that get drawn onto the performance\n * timeline. Overlays are DOM and are drawn above the network and main flame\n * chart.\n *\n * For more documentation, see `timeline/README.md` which has a section on overlays.\n */\nexport class Overlays extends EventTarget {\n    /**\n     * The list of active overlays. Overlays can't be marked as visible or\n     * hidden; every overlay in this list is rendered.\n     * We track each overlay against the HTML Element we have rendered. This is\n     * because on first render of a new overlay, we create it, but then on\n     * subsequent renders we do not destroy and recreate it, instead we update it\n     * based on the new position of the timeline.\n     */\n    #overlaysToElements = new Map();\n    // When the Entries Link Annotation is created, the arrow needs to follow the mouse.\n    // Update the mouse coordinates while it is being created.\n    #lastMouseOffsetX = null;\n    #lastMouseOffsetY = null;\n    // `entriesLinkInProgress` is the entries link Overlay that has not yet been fully created\n    // and only has the entry that the link starts from set.\n    // We save it as a separate variable because when the second entry of the link is not chosen yet,\n    // the arrow follows the mouse. To achieve that, update the coordinates of `entriesLinkInProgress`\n    // on mousemove. There can only be one link in the process on being created so the mousemove\n    // only needs to update `entriesLinkInProgress` link overlay.\n    #entriesLinkInProgress;\n    #dimensions = {\n        trace: {\n            visibleWindow: null,\n        },\n        charts: {\n            main: null,\n            network: null,\n        },\n    };\n    /**\n     * To calculate the Y pixel value for an event we need access to the chart\n     * and data provider in order to find out what level the event is on, and from\n     * there calculate the pixel value for that level.\n     */\n    #charts;\n    /**\n     * The Overlays class will take each overlay, generate its HTML, and add it\n     * to the container. This container is provided for us when the class is\n     * created so we can manage its contents as overlays come and go.\n     */\n    #overlaysContainer;\n    // Setting that specififed if the annotations overlays need to be visible.\n    // It is switched on/off from the annotations tab in the sidebar.\n    #annotationsHiddenSetting;\n    /**\n     * The OverlaysManager sometimes needs to find out if an entry is visible or\n     * not, and if not, why not - for example, if the user has collapsed its\n     * parent. We define these query functions that must be supplied in order to\n     * answer these questions.\n     */\n    #queries;\n    constructor(init) {\n        super();\n        this.#overlaysContainer = init.container;\n        this.#charts = init.charts;\n        this.#queries = init.entryQueries;\n        this.#entriesLinkInProgress = null;\n        this.#annotationsHiddenSetting = Common.Settings.Settings.instance().moduleSetting('annotations-hidden');\n        this.#annotationsHiddenSetting.addChangeListener(this.update.bind(this));\n        // HTMLElements of both Flamecharts. They are used to get the mouse position over the Flamecharts.\n        init.flameChartsContainers.main.addEventListener('mousemove', event => this.#updateMouseCoordinatesProgressEntriesLink.bind(this)(event, 'main'));\n        init.flameChartsContainers.network.addEventListener('mousemove', event => this.#updateMouseCoordinatesProgressEntriesLink.bind(this)(event, 'network'));\n    }\n    // Mousemove event listener to get mouse coordinates and update them for the entries link that is being created.\n    //\n    // The 'mousemove' event is attached to `flameChartsContainers` instead of `overlaysContainer`\n    // because `overlaysContainer` doesn't have events to enable the interaction with the\n    // Flamecharts beneath it.\n    #updateMouseCoordinatesProgressEntriesLink(event, chart) {\n        const mouseEvent = event;\n        this.#lastMouseOffsetX = mouseEvent.offsetX;\n        this.#lastMouseOffsetY = mouseEvent.offsetY;\n        if (this.#entriesLinkInProgress?.state !== \"pending_to_event\" /* Trace.Types.File.EntriesLinkState.PENDING_TO_EVENT */) {\n            return;\n        }\n        // The Overlays layer coordinates cover both Network and Main Charts, while the mousemove\n        // coordinates are received from the charts individually and start from 0 for each chart.\n        //\n        // To make it work on the overlays, we need to know which chart the entry belongs to and,\n        // if it is on the main chart, add the height of the Network chart to get correct Entry\n        // coordinates on the Overlays layer.\n        const networkHeight = this.#dimensions.charts.network?.heightPixels ?? 0;\n        const linkInProgressElement = this.#overlaysToElements.get(this.#entriesLinkInProgress);\n        if (linkInProgressElement) {\n            const component = linkInProgressElement.querySelector('devtools-entries-link-overlay');\n            const yCoordinate = mouseEvent.offsetY + ((chart === 'main') ? networkHeight : 0);\n            component.toEntryCoordinateAndDimentions = { x: mouseEvent.offsetX, y: yCoordinate };\n        }\n    }\n    /**\n     * Add a new overlay to the view.\n     */\n    add(newOverlay) {\n        if (this.#overlaysToElements.has(newOverlay)) {\n            return newOverlay;\n        }\n        /**\n         * If the overlay type is a singleton, and we already have one, we update\n         * the existing one, rather than create a new one. This ensures you can only\n         * ever have one instance of the overlay type.\n         */\n        const existing = this.overlaysOfType(newOverlay.type);\n        if (overlayIsSingleton(newOverlay) && existing[0]) {\n            this.updateExisting(existing[0], newOverlay);\n            return existing[0];\n        }\n        // By setting the value to null, we ensure that on the next render that the\n        // overlay will have a new HTML element created for it.\n        this.#overlaysToElements.set(newOverlay, null);\n        return newOverlay;\n    }\n    /**\n     * Update an existing overlay without destroying and recreating its\n     * associated DOM.\n     *\n     * This is useful if you need to rapidly update an overlay's data - e.g.\n     * dragging to create time ranges - without the thrashing of destroying the\n     * old overlay and re-creating the new one.\n     */\n    updateExisting(existingOverlay, newData) {\n        if (!this.#overlaysToElements.has(existingOverlay)) {\n            console.error('Trying to update an overlay that does not exist.');\n            return;\n        }\n        for (const [key, value] of Object.entries(newData)) {\n            // newData is of type Partial<T>, so each key must exist in T, but\n            // Object.entries doesn't carry that information.\n            const k = key;\n            existingOverlay[k] = value;\n        }\n    }\n    enterLabelEditMode(overlay) {\n        // Entry edit state can be triggered from outside the label component by clicking on the\n        // Entry that already has a label. Instead of creating a new label, set the existing entry\n        // label into an editable state.\n        const element = this.#overlaysToElements.get(overlay);\n        const component = element?.querySelector('devtools-entry-label-overlay');\n        if (component) {\n            component.setLabelEditabilityAndRemoveEmptyLabel(true);\n        }\n    }\n    /**\n     * @returns the list of overlays associated with a given entry.\n     */\n    overlaysForEntry(entry) {\n        const matches = [];\n        for (const [overlay] of this.#overlaysToElements) {\n            if ('entry' in overlay && overlay.entry === entry) {\n                matches.push(overlay);\n            }\n        }\n        return matches;\n    }\n    /**\n     * Removes any active overlays that match the provided type.\n     * @returns the number of overlays that were removed.\n     */\n    removeOverlaysOfType(type) {\n        const overlaysToRemove = Array.from(this.#overlaysToElements.keys()).filter(overlay => {\n            return overlay.type === type;\n        });\n        for (const overlay of overlaysToRemove) {\n            this.remove(overlay);\n        }\n        return overlaysToRemove.length;\n    }\n    /**\n     * @returns all overlays that match the provided type.\n     */\n    overlaysOfType(type) {\n        const matches = [];\n        function overlayIsOfType(overlay) {\n            return overlay.type === type;\n        }\n        for (const [overlay] of this.#overlaysToElements) {\n            if (overlayIsOfType(overlay)) {\n                matches.push(overlay);\n            }\n        }\n        return matches;\n    }\n    /**\n     * Removes the provided overlay from the list of overlays and destroys any\n     * DOM associated with it.\n     */\n    remove(overlay) {\n        const htmlElement = this.#overlaysToElements.get(overlay);\n        if (htmlElement && this.#overlaysContainer) {\n            this.#overlaysContainer.removeChild(htmlElement);\n        }\n        this.#overlaysToElements.delete(overlay);\n    }\n    /**\n     * Update the dimenions of a chart.\n     * IMPORTANT: this does not trigger a re-draw. You must call the render() method manually.\n     */\n    updateChartDimensions(chart, dimensions) {\n        this.#dimensions.charts[chart] = dimensions;\n    }\n    /**\n     * Update the visible window of the UI.\n     * IMPORTANT: this does not trigger a re-draw. You must call the render() method manually.\n     */\n    updateVisibleWindow(visibleWindow) {\n        this.#dimensions.trace.visibleWindow = visibleWindow;\n    }\n    /**\n     * Clears all overlays and all data. Call this when the trace is changing\n     * (e.g. the user has imported/recorded a new trace) and we need to start from\n     * scratch and remove all overlays relating to the preivous trace.\n     */\n    reset() {\n        if (this.#overlaysContainer) {\n            this.#overlaysContainer.innerHTML = '';\n        }\n        this.#overlaysToElements.clear();\n        // Clear out dimensions from the old Flame Charts.\n        this.#dimensions.trace.visibleWindow = null;\n        this.#dimensions.charts.main = null;\n        this.#dimensions.charts.network = null;\n    }\n    /**\n     * Updates the Overlays UI: new overlays will be rendered onto the view, and\n     * existing overlays will have their positions changed to ensure they are\n     * rendered in the right place.\n     */\n    async update() {\n        const timeRangeOverlays = [];\n        for (const [overlay, existingElement] of this.#overlaysToElements) {\n            const element = existingElement || this.#createElementForNewOverlay(overlay);\n            if (!existingElement) {\n                // This is a new overlay, so we have to store the element and add it to the DOM.\n                this.#overlaysToElements.set(overlay, element);\n                this.#overlaysContainer.appendChild(element);\n            }\n            // A chance to update the overlay before we re-position it. If an\n            // overlay's data changed, this is where we can pass that data into the\n            // overlay's component so it has the latest data.\n            this.#updateOverlayBeforePositioning(overlay, element);\n            // Now we position the overlay on the timeline.\n            this.#positionOverlay(overlay, element);\n            // And now we give every overlay a chance to react to its new position,\n            // if it needs to\n            this.#updateOverlayAfterPositioning(overlay, element);\n            if (overlay.type === 'TIME_RANGE') {\n                timeRangeOverlays.push(overlay);\n            }\n        }\n        if (timeRangeOverlays.length > 1) { // If there are 0 or 1 overlays, they can't overlap\n            this.#positionOverlappingTimeRangeLabels(timeRangeOverlays);\n        }\n    }\n    /**\n     * If any time-range overlays overlap, we try to adjust their horizontal\n     * position in order to make sure you can distinguish them and that the labels\n     * do not entirely overlap.\n     * This is very much minimal best effort, and does not guarantee that all\n     * labels will remain readable.\n     */\n    #positionOverlappingTimeRangeLabels(overlays) {\n        const overlaysSorted = overlays.toSorted((o1, o2) => {\n            return o1.bounds.min - o2.bounds.min;\n        });\n        // Track the overlays which overlap other overlays.\n        // This isn't bi-directional: if we find that O2 overlaps O1, we will\n        // store O1 => [O2]. We will not then also store O2 => [O1], because we\n        // only need to deal with the overlap once.\n        const overlapsByOverlay = new Map();\n        for (let i = 0; i < overlaysSorted.length; i++) {\n            const current = overlaysSorted[i];\n            const overlaps = [];\n            // Walk through subsequent overlays and find stop when you find the next one that does not overlap.\n            for (let j = i + 1; j < overlaysSorted.length; j++) {\n                const next = overlaysSorted[j];\n                const currentAndNextOverlap = Trace.Helpers.Timing.boundsIncludeTimeRange({\n                    bounds: current.bounds,\n                    timeRange: next.bounds,\n                });\n                if (currentAndNextOverlap) {\n                    overlaps.push(next);\n                }\n                else {\n                    // Overlays are sorted by time, if this one does not overlap, the next one will not, so we can break.\n                    break;\n                }\n            }\n            overlapsByOverlay.set(current, overlaps);\n        }\n        for (const [firstOverlay, overlappingOverlays] of overlapsByOverlay) {\n            const element = this.#overlaysToElements.get(firstOverlay);\n            if (!element) {\n                continue;\n            }\n            // If the first overlay is adjusted, we can start back from 0 again\n            // rather than continually increment up.\n            let firstIndexForOverlapClass = 1;\n            if (element.getAttribute('class')?.includes('overlap-')) {\n                firstIndexForOverlapClass = 0;\n            }\n            overlappingOverlays.forEach(overlay => {\n                const element = this.#overlaysToElements.get(overlay);\n                element?.classList.add(`overlap-${firstIndexForOverlapClass++}`);\n            });\n        }\n    }\n    #positionOverlay(overlay, element) {\n        const annotationsAreHidden = this.#annotationsHiddenSetting.get();\n        switch (overlay.type) {\n            case 'ENTRY_SELECTED': {\n                const isVisible = this.entryIsVisibleOnChart(overlay.entry);\n                this.#setOverlayElementVisibility(element, isVisible);\n                if (isVisible) {\n                    this.#positionEntryBorderOutlineType(overlay.entry, element);\n                }\n                break;\n            }\n            case 'ENTRY_OUTLINE': {\n                const selectedOverlay = this.overlaysOfType('ENTRY_SELECTED')?.at(0);\n                // Check if this entry has also been selected by the user. If it has,\n                // do not show the outline, but only show the selected outline.\n                const outlinedEntryIsSelected = Boolean(selectedOverlay && selectedOverlay.entry === overlay.entry);\n                if (!outlinedEntryIsSelected && this.entryIsVisibleOnChart(overlay.entry)) {\n                    this.#setOverlayElementVisibility(element, true);\n                    this.#positionEntryBorderOutlineType(overlay.entry, element);\n                }\n                else {\n                    this.#setOverlayElementVisibility(element, false);\n                }\n                break;\n            }\n            case 'TIME_RANGE': {\n                // The time range annotation can also be used to measure a selection in the timeline and is not saved if no label is added.\n                // Therefore, we only care about the annotation hidden setting if the time range has a label.\n                if (overlay.label.length) {\n                    this.#setOverlayElementVisibility(element, !annotationsAreHidden);\n                }\n                this.#positionTimeRangeOverlay(overlay, element);\n                break;\n            }\n            case 'ENTRY_LABEL': {\n                const entryVisible = this.entryIsVisibleOnChart(overlay.entry);\n                this.#setOverlayElementVisibility(element, entryVisible && !annotationsAreHidden);\n                if (entryVisible) {\n                    const entryLabelVisibleHeight = this.#positionEntryLabelOverlay(overlay, element);\n                    const component = element.querySelector('devtools-entry-label-overlay');\n                    if (component && entryLabelVisibleHeight) {\n                        component.entryLabelVisibleHeight = entryLabelVisibleHeight;\n                    }\n                }\n                break;\n            }\n            case 'ENTRIES_LINK': {\n                // The exact entries that are linked to could be collapsed in a flame\n                // chart, so we figure out the best visible entry pairs to draw\n                // between.\n                const entriesToConnect = this.#calculateFromAndToForEntriesLink(overlay);\n                const isVisible = entriesToConnect !== null && !annotationsAreHidden;\n                this.#setOverlayElementVisibility(element, isVisible);\n                if (isVisible) {\n                    this.#positionEntriesLinkOverlay(overlay, element, entriesToConnect);\n                }\n                break;\n            }\n            case 'TIMESPAN_BREAKDOWN': {\n                this.#positionTimespanBreakdownOverlay(overlay, element);\n                // TODO: Have the timespan squeeze instead.\n                if (overlay.entry) {\n                    const { visibleWindow } = this.#dimensions.trace;\n                    const isVisible = Boolean(visibleWindow && this.#entryIsVerticallyVisibleOnChart(overlay.entry) &&\n                        Trace.Helpers.Timing.boundsIncludeTimeRange({\n                            bounds: visibleWindow,\n                            timeRange: overlay.sections[0].bounds,\n                        }));\n                    this.#setOverlayElementVisibility(element, isVisible);\n                }\n                break;\n            }\n            case 'CURSOR_TIMESTAMP_MARKER': {\n                const { visibleWindow } = this.#dimensions.trace;\n                // Only update the position if the timestamp of this marker is within\n                // the visible bounds.\n                const isVisible = Boolean(visibleWindow && Trace.Helpers.Timing.timestampIsInBounds(visibleWindow, overlay.timestamp));\n                this.#setOverlayElementVisibility(element, isVisible);\n                if (isVisible) {\n                    this.#positionTimestampMarker(overlay, element);\n                }\n                break;\n            }\n            case 'CANDY_STRIPED_TIME_RANGE': {\n                const { visibleWindow } = this.#dimensions.trace;\n                // If the bounds of this overlay are not within the visible bounds, we\n                // can skip updating its position and just hide it.\n                const isVisible = Boolean(visibleWindow && this.#entryIsVerticallyVisibleOnChart(overlay.entry) &&\n                    Trace.Helpers.Timing.boundsIncludeTimeRange({\n                        bounds: visibleWindow,\n                        timeRange: overlay.bounds,\n                    }));\n                this.#setOverlayElementVisibility(element, isVisible);\n                if (isVisible) {\n                    this.#positionCandyStripedTimeRange(overlay, element);\n                }\n                break;\n            }\n            default: {\n                Platform.TypeScriptUtilities.assertNever(overlay, `Unknown overlay: ${JSON.stringify(overlay)}`);\n            }\n        }\n    }\n    #positionTimestampMarker(overlay, element) {\n        // Because we are adjusting the x position, we can use either chart here.\n        const x = this.#xPixelForMicroSeconds('main', overlay.timestamp);\n        element.style.left = `${x}px`;\n    }\n    #positionTimespanBreakdownOverlay(overlay, element) {\n        if (overlay.sections.length === 0) {\n            return;\n        }\n        const component = element.querySelector('devtools-timespan-breakdown-overlay');\n        const elementSections = component?.renderedSections() ?? [];\n        // Handle horizontal positioning.\n        const leftEdgePixel = this.#xPixelForMicroSeconds('main', overlay.sections[0].bounds.min);\n        const rightEdgePixel = this.#xPixelForMicroSeconds('main', overlay.sections[overlay.sections.length - 1].bounds.max);\n        if (leftEdgePixel === null || rightEdgePixel === null) {\n            return;\n        }\n        const rangeWidth = rightEdgePixel - leftEdgePixel;\n        element.style.left = `${leftEdgePixel}px`;\n        element.style.width = `${rangeWidth}px`;\n        if (elementSections.length === 0) {\n            return;\n        }\n        let count = 0;\n        for (const section of overlay.sections) {\n            const leftPixel = this.#xPixelForMicroSeconds('main', section.bounds.min);\n            const rightPixel = this.#xPixelForMicroSeconds('main', section.bounds.max);\n            if (leftPixel === null || rightPixel === null) {\n                return;\n            }\n            const rangeWidth = rightPixel - leftPixel;\n            const sectionElement = elementSections[count];\n            sectionElement.style.left = `${leftPixel}px`;\n            sectionElement.style.width = `${rangeWidth}px`;\n            count++;\n        }\n        // Handle vertical positioning based on the entry's vertical position.\n        if (overlay.entry && (overlay.renderLocation === 'BELOW_EVENT' || overlay.renderLocation === 'ABOVE_EVENT')) {\n            // Max height for the overlay box when attached to an entry.\n            const MAX_BOX_HEIGHT = 50;\n            element.style.maxHeight = `${MAX_BOX_HEIGHT}px`;\n            const y = this.yPixelForEventOnChart(overlay.entry);\n            if (y === null) {\n                return;\n            }\n            const eventHeight = this.pixelHeightForEventOnChart(overlay.entry);\n            if (eventHeight === null) {\n                return;\n            }\n            if (overlay.renderLocation === 'BELOW_EVENT') {\n                const top = y + eventHeight;\n                element.style.top = `${top}px`;\n            }\n            else {\n                // Some padding so the box hovers just on top.\n                const PADDING = 7;\n                // Where the timespan breakdown should sit. Slightly on top of the entry.\n                const bottom = y - PADDING;\n                // Available space between the bottom of the overlay and top of the chart.\n                const minSpace = Math.max(bottom, 0);\n                // Contrain height to available space.\n                const height = Math.min(MAX_BOX_HEIGHT, minSpace);\n                const top = bottom - height;\n                element.style.top = `${top}px`;\n            }\n        }\n    }\n    /**\n     * Positions the arrow between two entries. Takes in the entriesToConnect\n     * because if one of the original entries is hidden in a collapsed main thread\n     * icicle, we use its parent to connect to.\n     */\n    #positionEntriesLinkOverlay(overlay, element, entriesToConnect) {\n        const component = element.querySelector('devtools-entries-link-overlay');\n        if (component) {\n            const fromEntryInCollapsedTrack = this.#entryIsInCollapsedTrack(entriesToConnect.entryFrom);\n            const toEntryInCollapsedTrack = entriesToConnect.entryTo && this.#entryIsInCollapsedTrack(entriesToConnect.entryTo);\n            const bothEntriesInCollapsedTrack = Boolean(fromEntryInCollapsedTrack && toEntryInCollapsedTrack);\n            // If both entries are in collapsed tracks, we hide the overlay completely.\n            if (bothEntriesInCollapsedTrack) {\n                this.#setOverlayElementVisibility(element, false);\n                return;\n            }\n            // If either entry (but not both) is in a track that the user has collapsed, we do not\n            // show the connection at all, but we still show the borders around\n            // the entry. So in this case we mark the overlay as visible, but\n            // tell it to not draw the arrow.\n            const hideArrow = Boolean(fromEntryInCollapsedTrack || toEntryInCollapsedTrack);\n            component.hideArrow = hideArrow;\n            const { entryFrom, entryTo, entryFromIsSource, entryToIsSource } = entriesToConnect;\n            const entryFromWrapper = component.entryFromWrapper();\n            // Should not happen, the 'from' wrapper should always exist. Something went wrong, return in this case.\n            if (!entryFromWrapper) {\n                return;\n            }\n            const fromEntryParams = this.#positionEntryBorderOutlineType(entriesToConnect.entryFrom, entryFromWrapper);\n            if (!fromEntryParams) {\n                // Something went wrong, we should always have parameters for the 'from' entry\n                return;\n            }\n            const { entryHeight: fromEntryHeight, entryWidth: fromEntryWidth, cutOffHeight: fromCutOffHeight = 0, x: fromEntryX, y: fromEntryY, } = fromEntryParams;\n            const entryFromVisibility = this.entryIsVisibleOnChart(entryFrom) && !fromEntryInCollapsedTrack;\n            const entryToVisibility = entryTo ? this.entryIsVisibleOnChart(entryTo) && !toEntryInCollapsedTrack : false;\n            // If `fromEntry` is not visible and the link creation is not started yet, meaning that\n            // only the button to create the link is displayed, delete the whole overlay.\n            if (!entryFromVisibility && overlay.state === \"creation_not_started\" /* Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED */) {\n                this.dispatchEvent(new AnnotationOverlayActionEvent(overlay, 'Remove'));\n            }\n            // If the 'from' entry is visible, set the entry Y as an arrow start coordinate. Ff not, get the canvas edge coordinate to for the arrow to start from.\n            const yPixelForFromArrow = (entryFromVisibility ? fromEntryY : this.#yCoordinateForNotVisibleEntry(entryFrom)) ?? 0;\n            component.fromEntryIsSource = entryFromIsSource;\n            component.toEntryIsSource = entryToIsSource;\n            component.entriesVisibility = {\n                fromEntryVisibility: entryFromVisibility,\n                toEntryVisibility: entryToVisibility,\n            };\n            component.fromEntryCoordinateAndDimentions =\n                { x: fromEntryX, y: yPixelForFromArrow, length: fromEntryWidth, height: fromEntryHeight - fromCutOffHeight };\n            // If entryTo exists, pass the coordinates and dimentions of the entry that the arrow snaps to.\n            // If it does not, the event tracking mouse coordinates updates 'to coordinates' so the arrow follows the mouse instead.\n            const entryToWrapper = component.entryToWrapper();\n            if (entryTo && entryToWrapper) {\n                const toEntryParams = this.#positionEntryBorderOutlineType(entryTo, entryToWrapper);\n                if (!toEntryParams) {\n                    // Something went wrong, we should have those parameters if 'to' entry exists\n                    return;\n                }\n                const { entryHeight: toEntryHeight, entryWidth: toEntryWidth, cutOffHeight: toCutOffHeight = 0, x: toEntryX, y: toEntryY, } = toEntryParams;\n                // If the 'to' entry is visible, set the entry Y as an arrow coordinate to point to. If not, get the canvas edge coordate to point the arrow to.\n                const yPixelForToArrow = this.entryIsVisibleOnChart(entryTo) ? toEntryY : this.#yCoordinateForNotVisibleEntry(entryTo) ?? 0;\n                component.toEntryCoordinateAndDimentions = {\n                    x: toEntryX,\n                    y: yPixelForToArrow,\n                    length: toEntryWidth,\n                    height: toEntryHeight - toCutOffHeight,\n                };\n            }\n            else if (this.#lastMouseOffsetX && this.#lastMouseOffsetY) {\n                // The second coordinate for in progress link gets updated on mousemove\n                this.#entriesLinkInProgress = overlay;\n            }\n        }\n    }\n    /**\n     *  Return Y coordinate for an arrow connecting 2 entries to attach to if the entry is not visible.\n     *  For example, if the entry is scrolled up from the visible area , return the y index of the edge of the track:\n     *  --\n     * |  | - entry off the visible chart\n     *  --\n     *\n     * --Y---------------  -- Y is the returned coordinate that the arrow should point to\n     *\n     * flamechart data     -- visible flamechart data between the 2 lines\n     * ------------------\n     *\n     * On the contrary, if the entry is scrolled off the bottom, get the coordinate of the top of the visible canvas.\n     */\n    #yCoordinateForNotVisibleEntry(entry) {\n        const chartName = chartForEntry(entry);\n        const y = this.yPixelForEventOnChart(entry);\n        if (y === null) {\n            return 0;\n        }\n        if (chartName === 'main') {\n            if (!this.#dimensions.charts.main?.heightPixels) {\n                // Shouldn't happen, but if the main chart has no height, nothing on it is visible.\n                return 0;\n            }\n            const yWithoutNetwork = y - this.networkChartOffsetHeight();\n            // Check if the y position is less than 0. If it, the entry is off the top of the track canvas.\n            // In that case, return the height of network track, which is also the top of main track.\n            if (yWithoutNetwork < 0) {\n                return this.networkChartOffsetHeight();\n            }\n        }\n        if (chartName === 'network') {\n            if (!this.#dimensions.charts.network) {\n                return 0;\n            }\n            // The event is off the bottom of the network chart. In this case return the bottom of the network chart.\n            if (y > this.#dimensions.charts.network.heightPixels) {\n                return this.#dimensions.charts.network.heightPixels;\n            }\n        }\n        // In other cases, return the y of the entry\n        return y;\n    }\n    #positionTimeRangeOverlay(overlay, element) {\n        // Time ranges span both charts, it doesn't matter which one we pass here.\n        // It's used to get the width of the container, and both charts have the\n        // same width.\n        const leftEdgePixel = this.#xPixelForMicroSeconds('main', overlay.bounds.min);\n        const rightEdgePixel = this.#xPixelForMicroSeconds('main', overlay.bounds.max);\n        if (leftEdgePixel === null || rightEdgePixel === null) {\n            return;\n        }\n        const rangeWidth = rightEdgePixel - leftEdgePixel;\n        element.style.left = `${leftEdgePixel}px`;\n        element.style.width = `${rangeWidth}px`;\n    }\n    /**\n     * Positions an EntryLabel overlay\n     * @param overlay - the EntrySelected overlay that we need to position.\n     * @param element - the DOM element representing the overlay\n     */\n    #positionEntryLabelOverlay(overlay, element) {\n        // Because the entry outline is a common Overlay pattern, get the wrapper of the entry\n        // that comes with the EntryLabel Overlay and pass it into the `positionEntryBorderOutlineType`\n        // to draw and position it. The other parts of EntryLabel are drawn by the `EntryLabelOverlay` class.\n        const component = element.querySelector('devtools-entry-label-overlay');\n        if (!component) {\n            return null;\n        }\n        const entryWrapper = component.entryHighlightWrapper();\n        if (!entryWrapper) {\n            return null;\n        }\n        const { entryHeight, entryWidth, cutOffHeight = 0, x, y } = this.#positionEntryBorderOutlineType(overlay.entry, entryWrapper) || {};\n        if (!entryHeight || !entryWidth || x === null || !y) {\n            return null;\n        }\n        // Position the start of label overlay at the start of the entry + length of connector + legth of the label element\n        element.style.top = `${y - Components.EntryLabelOverlay.EntryLabelOverlay.LABEL_AND_CONNECTOR_HEIGHT}px`;\n        element.style.left = `${x}px`;\n        element.style.width = `${entryWidth}px`;\n        return entryHeight - cutOffHeight;\n    }\n    #positionCandyStripedTimeRange(overlay, element) {\n        const chartName = chartForEntry(overlay.entry);\n        const startX = this.#xPixelForMicroSeconds(chartName, overlay.bounds.min);\n        const endX = this.#xPixelForMicroSeconds(chartName, overlay.bounds.max);\n        if (startX === null || endX === null) {\n            return;\n        }\n        const widthPixels = endX - startX;\n        // The entry selected overlay is always at least 2px wide.\n        const finalWidth = Math.max(2, widthPixels);\n        element.style.width = `${finalWidth}px`;\n        element.style.left = `${startX}px`;\n        let y = this.yPixelForEventOnChart(overlay.entry);\n        if (y === null) {\n            return;\n        }\n        const totalHeight = this.pixelHeightForEventOnChart(overlay.entry) ?? 0;\n        // We might modify the height we use when drawing the overlay, hence copying the totalHeight.\n        let height = totalHeight;\n        if (height === null) {\n            return;\n        }\n        // If the event is on the main chart, we need to adjust its selected border\n        // if the event is cut off the top of the screen, because we need to ensure\n        // that it does not overlap the resize element. Unfortunately we cannot\n        // z-index our way out of this, so instead we calculate if the event is cut\n        // off, and if it is, we draw the partial selected outline and do not draw\n        // the top border, making it appear like it is going behind the resizer.\n        // We don't need to worry about it going off the bottom, because in that\n        // case we don't draw the overlay anyway.\n        if (chartName === 'main') {\n            const chartTopPadding = this.networkChartOffsetHeight();\n            // We now calculate the available height: if the entry is cut off we don't\n            // show the border for the part that is cut off.\n            const cutOffTop = y < chartTopPadding;\n            height = cutOffTop ? Math.abs(y + height - chartTopPadding) : height;\n            element.classList.toggle('cut-off-top', cutOffTop);\n            if (cutOffTop) {\n                // Adjust the y position: we need to move it down from the top Y\n                // position to the Y position of the first visible pixel. The\n                // adjustment is totalHeight - height because if the totalHeight is 17,\n                // and the visibleHeight is 5, we need to draw the overay at 17-5=12px\n                // vertically from the top of the event.\n                y = y + totalHeight - height;\n            }\n        }\n        else {\n            // If the event is on the network chart, we use the same logic as above\n            // for the main chart, but to check if the event is cut off the bottom of\n            // the network track and only part of the overlay is visible.\n            // We don't need to worry about the event going off the top of the panel\n            // as we can show the full overlay and it gets cut off by the minimap UI.\n            const networkHeight = this.#dimensions.charts.network?.heightPixels ?? 0;\n            const lastVisibleY = y + totalHeight;\n            const cutOffBottom = lastVisibleY > networkHeight;\n            const cutOffTop = y > networkHeight;\n            element.classList.toggle('cut-off-top', cutOffTop);\n            element.classList.toggle('cut-off-bottom', cutOffBottom);\n            if (cutOffBottom) {\n                // Adjust the height of the overlay to be the amount of visible pixels.\n                height = networkHeight - y;\n            }\n        }\n        element.style.height = `${height}px`;\n        element.style.top = `${y}px`;\n    }\n    /**\n     * Draw and position borders around an entry. Multiple overlays either fully consist\n     * of a border around an entry of have an entry border as a part of the overlay.\n     * Positions an EntrySelected or EntryOutline overlay and a part of the EntryLabel.\n     * @param overlay - the EntrySelected/EntryOutline/EntryLabel overlay that we need to position.\n     * @param element - the DOM element representing the overlay\n     */\n    #positionEntryBorderOutlineType(entry, element) {\n        const chartName = chartForEntry(entry);\n        let x = this.xPixelForEventStartOnChart(entry);\n        let y = this.yPixelForEventOnChart(entry);\n        const chartWidth = (chartName === 'main') ? this.#dimensions.charts.main?.widthPixels :\n            this.#dimensions.charts.network?.widthPixels;\n        if (x === null || y === null || !chartWidth) {\n            return null;\n        }\n        const { endTime } = timingsForOverlayEntry(entry);\n        const endX = this.#xPixelForMicroSeconds(chartName, endTime);\n        if (endX === null) {\n            return null;\n        }\n        const totalHeight = this.pixelHeightForEventOnChart(entry) ?? 0;\n        // We might modify the height we use when drawing the overlay, hence copying the totalHeight.\n        let height = totalHeight;\n        if (height === null) {\n            return null;\n        }\n        // The width of the overlay is by default the width of the entry. However\n        // we modify that for instant events like LCP markers, and also ensure a\n        // minimum width.\n        let widthPixels = endX - x;\n        const provider = chartName === 'main' ? this.#charts.mainProvider : this.#charts.networkProvider;\n        const chart = chartName === 'main' ? this.#charts.mainChart : this.#charts.networkChart;\n        const index = provider.indexForEvent?.(entry);\n        const customPos = chart.getCustomDrawnPositionForEntryIndex(index ?? -1);\n        if (customPos) {\n            // Some events like markers and layout shifts define their exact coordinates explicitly.\n            // If this is one of those events we should change the overlay coordinates to match.\n            x = customPos.x;\n            widthPixels = customPos.width;\n        }\n        // Calculate the visible overlay width by substracting the entry width that is outside of the flamechart width\n        const cutOffRight = (x + widthPixels > chartWidth) ? (x + widthPixels) - chartWidth : null;\n        const cutOffLeft = (x < 0) ? Math.abs(x) : null;\n        element.classList.toggle('cut-off-right', cutOffRight !== null);\n        if (cutOffRight) {\n            widthPixels = widthPixels - cutOffRight;\n        }\n        if (cutOffLeft) {\n            // If the entry is cut off from the left, move its beginning to the left most part of the flamechart\n            x = 0;\n            widthPixels = widthPixels - cutOffLeft;\n        }\n        // The entry selected overlay is always at least 2px wide.\n        const finalWidth = Math.max(2, widthPixels);\n        element.style.width = `${finalWidth}px`;\n        // If the event is on the main chart, we need to adjust its selected border\n        // if the event is cut off the top of the screen, because we need to ensure\n        // that it does not overlap the resize element. Unfortunately we cannot\n        // z-index our way out of this, so instead we calculate if the event is cut\n        // off, and if it is, we draw the partial selected outline and do not draw\n        // the top border, making it appear like it is going behind the resizer.\n        // We don't need to worry about it going off the bottom, because in that\n        // case we don't draw the overlay anyway.\n        if (chartName === 'main') {\n            const chartTopPadding = this.networkChartOffsetHeight();\n            // We now calculate the available height: if the entry is cut off we don't\n            // show the border for the part that is cut off.\n            const cutOffTop = y < chartTopPadding;\n            height = cutOffTop ? Math.abs(y + height - chartTopPadding) : height;\n            element.classList.toggle('cut-off-top', cutOffTop);\n            if (cutOffTop) {\n                // Adjust the y position: we need to move it down from the top Y\n                // position to the Y position of the first visible pixel. The\n                // adjustment is totalHeight - height because if the totalHeight is 17,\n                // and the visibleHeight is 5, we need to draw the overay at 17-5=12px\n                // vertically from the top of the event.\n                y = y + totalHeight - height;\n            }\n        }\n        else {\n            // If the event is on the network chart, we use the same logic as above\n            // for the main chart, but to check if the event is cut off the bottom of\n            // the network track and only part of the overlay is visible.\n            // We don't need to worry about the even going off the top of the panel\n            // as we can show the full overlay and it gets cut off by the minimap UI.\n            const networkHeight = this.#dimensions.charts.network?.heightPixels ?? 0;\n            const lastVisibleY = y + totalHeight;\n            const cutOffBottom = lastVisibleY > networkHeight;\n            element.classList.toggle('cut-off-bottom', cutOffBottom);\n            if (cutOffBottom) {\n                // Adjust the height of the overlay to be the amount of visible pixels.\n                height = networkHeight - y;\n            }\n        }\n        element.style.height = `${height}px`;\n        element.style.top = `${y}px`;\n        element.style.left = `${x}px`;\n        return { entryHeight: totalHeight, entryWidth: finalWidth, cutOffHeight: totalHeight - height, x, y };\n    }\n    /**\n     * We draw an arrow between connected entries but this can get complicated\n     * depending on if the entries are visible or not. For example, the user might\n     * draw a connection to an entry in the main thread but then collapse the\n     * parent of that entry. In this case the entry we want to draw to is the\n     * first visible parent of that entry rather than the (invisible) entry.\n     */\n    #calculateFromAndToForEntriesLink(overlay) {\n        if (!overlay.entryTo) {\n            // This case is where the user has clicked on the first entry and needs\n            // to pick a second. In this case they can only pick from visible\n            // entries, so we don't need to do any checks and can just return.\n            return {\n                entryFrom: overlay.entryFrom,\n                entryTo: overlay.entryTo,\n                entryFromIsSource: true,\n                entryToIsSource: true,\n            };\n        }\n        let entryFrom = overlay.entryFrom;\n        let entryTo = overlay.entryTo ?? null;\n        if (this.#queries.isEntryCollapsedByUser(overlay.entryFrom)) {\n            entryFrom = this.#queries.firstVisibleParentForEntry(overlay.entryFrom);\n        }\n        if (overlay.entryTo && this.#queries.isEntryCollapsedByUser(overlay.entryTo)) {\n            entryTo = this.#queries.firstVisibleParentForEntry(overlay.entryTo);\n        }\n        if (entryFrom === null || entryTo === null) {\n            // We cannot draw this overlay; so return null;\n            // The only valid case of entryTo being null/undefined has been dealt\n            // with already at the start of this function.\n            return null;\n        }\n        return {\n            entryFrom,\n            entryFromIsSource: entryFrom === overlay.entryFrom,\n            entryTo,\n            entryToIsSource: entryTo === overlay.entryTo,\n        };\n    }\n    #createElementForNewOverlay(overlay) {\n        const div = document.createElement('div');\n        div.classList.add('overlay-item', `overlay-type-${overlay.type}`);\n        const jslogContext = jsLogContext(overlay);\n        if (jslogContext) {\n            div.setAttribute('jslog', `${VisualLogging.item(jslogContext)}`);\n        }\n        switch (overlay.type) {\n            case 'ENTRY_LABEL': {\n                const shouldDrawLabelBelowEntry = Trace.Types.Events.isLegacyTimelineFrame(overlay.entry);\n                const component = new Components.EntryLabelOverlay.EntryLabelOverlay(overlay.label, shouldDrawLabelBelowEntry);\n                component.addEventListener(Components.EntryLabelOverlay.EmptyEntryLabelRemoveEvent.eventName, () => {\n                    this.dispatchEvent(new AnnotationOverlayActionEvent(overlay, 'Remove'));\n                });\n                component.addEventListener(Components.EntryLabelOverlay.EntryLabelChangeEvent.eventName, event => {\n                    const newLabel = event.newLabel;\n                    overlay.label = newLabel;\n                    this.dispatchEvent(new AnnotationOverlayActionEvent(overlay, 'Update'));\n                });\n                div.appendChild(component);\n                return div;\n            }\n            case 'ENTRIES_LINK': {\n                const entries = this.#calculateFromAndToForEntriesLink(overlay);\n                if (entries === null) {\n                    // For some reason, we don't have two entries we can draw between\n                    // (can happen if the user has collapsed an icicle in the flame\n                    // chart, or a track), so just draw an empty div.\n                    return div;\n                }\n                const entryEndX = this.xPixelForEventEndOnChart(entries.entryFrom) ?? 0;\n                const entryStartX = this.xPixelForEventEndOnChart(entries.entryFrom) ?? 0;\n                const entryStartY = (this.yPixelForEventOnChart(entries.entryFrom) ?? 0);\n                const entryWidth = entryEndX - entryStartX;\n                const entryHeight = this.pixelHeightForEventOnChart(entries.entryFrom) ?? 0;\n                const component = new Components.EntriesLinkOverlay.EntriesLinkOverlay({ x: entryEndX, y: entryStartY, width: entryWidth, height: entryHeight }, overlay.state);\n                component.addEventListener(Components.EntriesLinkOverlay.EntryLinkStartCreating.eventName, () => {\n                    overlay.state = \"pending_to_event\" /* Trace.Types.File.EntriesLinkState.PENDING_TO_EVENT */;\n                    this.dispatchEvent(new AnnotationOverlayActionEvent(overlay, 'Update'));\n                });\n                div.appendChild(component);\n                return div;\n            }\n            case 'ENTRY_OUTLINE': {\n                div.classList.add(`outline-reason-${overlay.outlineReason}`);\n                return div;\n            }\n            case 'TIME_RANGE': {\n                const component = new Components.TimeRangeOverlay.TimeRangeOverlay(overlay.label);\n                component.duration = overlay.showDuration ? overlay.bounds.range : null;\n                component.canvasRect = this.#charts.mainChart.canvasBoundingClientRect();\n                component.addEventListener(Components.TimeRangeOverlay.TimeRangeLabelChangeEvent.eventName, event => {\n                    const newLabel = event.newLabel;\n                    overlay.label = newLabel;\n                    this.dispatchEvent(new AnnotationOverlayActionEvent(overlay, 'Update'));\n                });\n                component.addEventListener(Components.TimeRangeOverlay.TimeRangeRemoveEvent.eventName, () => {\n                    this.dispatchEvent(new AnnotationOverlayActionEvent(overlay, 'Remove'));\n                });\n                div.appendChild(component);\n                return div;\n            }\n            case 'TIMESPAN_BREAKDOWN': {\n                const component = new Components.TimespanBreakdownOverlay.TimespanBreakdownOverlay();\n                component.sections = overlay.sections;\n                component.canvasRect = this.#charts.mainChart.canvasBoundingClientRect();\n                component.isBelowEntry = overlay.renderLocation === 'BELOW_EVENT';\n                div.appendChild(component);\n                return div;\n            }\n            default: {\n                return div;\n            }\n        }\n    }\n    /**\n     * Some overlays store data in their components that needs to be updated\n     * before we position an overlay. Else, we might position an overlay based on\n     * stale data. This method is used to update an overlay BEFORE it is then\n     * positioned onto the canvas. It is the right place to ensure an overlay has\n     * the latest data it needs.\n     */\n    #updateOverlayBeforePositioning(overlay, element) {\n        switch (overlay.type) {\n            case 'ENTRY_SELECTED':\n                break;\n            case 'TIME_RANGE': {\n                const component = element.querySelector('devtools-time-range-overlay');\n                if (component) {\n                    component.duration = overlay.showDuration ? overlay.bounds.range : null;\n                    component.canvasRect = this.#charts.mainChart.canvasBoundingClientRect();\n                }\n                break;\n            }\n            case 'ENTRY_LABEL':\n            case 'ENTRY_OUTLINE':\n            case 'ENTRIES_LINK': {\n                const component = element.querySelector('devtools-entries-link-overlay');\n                if (component) {\n                    component.canvasRect = this.#charts.mainChart.canvasBoundingClientRect();\n                }\n                break;\n            }\n            case 'TIMESPAN_BREAKDOWN': {\n                const component = element.querySelector('devtools-timespan-breakdown-overlay');\n                if (component) {\n                    component.sections = overlay.sections;\n                    component.canvasRect = this.#charts.mainChart.canvasBoundingClientRect();\n                }\n                break;\n            }\n            case 'CURSOR_TIMESTAMP_MARKER':\n                break;\n            case 'CANDY_STRIPED_TIME_RANGE':\n                break;\n            default:\n                Platform.TypeScriptUtilities.assertNever(overlay, `Unexpected overlay ${overlay}`);\n        }\n    }\n    /**\n     * Some overlays have custom logic within them to manage visibility of\n     * labels/etc that can be impacted if the positioning or size of the overlay\n     * has changed. This method can be used to run code after an overlay has\n     * been updated + repositioned on the timeline.\n     */\n    #updateOverlayAfterPositioning(overlay, element) {\n        switch (overlay.type) {\n            case 'ENTRY_SELECTED':\n                break;\n            case 'TIME_RANGE': {\n                const component = element.querySelector('devtools-time-range-overlay');\n                component?.updateLabelPositioning();\n                break;\n            }\n            case 'ENTRY_LABEL':\n                break;\n            case 'ENTRY_OUTLINE':\n                break;\n            case 'ENTRIES_LINK':\n                break;\n            case 'TIMESPAN_BREAKDOWN': {\n                const component = element.querySelector('devtools-timespan-breakdown-overlay');\n                component?.checkSectionLabelPositioning();\n                break;\n            }\n            case 'CURSOR_TIMESTAMP_MARKER':\n                break;\n            case 'CANDY_STRIPED_TIME_RANGE':\n                break;\n            default:\n                Platform.TypeScriptUtilities.assertNever(overlay, `Unexpected overlay ${overlay}`);\n        }\n    }\n    /**\n     * @returns true if the entry is visible on chart, which means that both\n     * horizontally and vertically it is at least partially in view.\n     */\n    entryIsVisibleOnChart(entry) {\n        const verticallyVisible = this.#entryIsVerticallyVisibleOnChart(entry);\n        const horiziontallyVisible = this.#entryIsHorizontallyVisibleOnChart(entry);\n        return verticallyVisible && horiziontallyVisible;\n    }\n    /**\n     * Calculates if an entry is visible horizontally. This is easy because we\n     * don't have to consider any pixels and can instead check that its start and\n     * end times intersect with the visible window.\n     */\n    #entryIsHorizontallyVisibleOnChart(entry) {\n        if (this.#dimensions.trace.visibleWindow === null) {\n            return false;\n        }\n        const { startTime, endTime } = timingsForOverlayEntry(entry);\n        const entryTimeRange = Trace.Helpers.Timing.traceWindowFromMicroSeconds(startTime, endTime);\n        return Trace.Helpers.Timing.boundsIncludeTimeRange({\n            bounds: this.#dimensions.trace.visibleWindow,\n            timeRange: entryTimeRange,\n        });\n    }\n    #entryIsInCollapsedTrack(entry) {\n        const chartName = chartForEntry(entry);\n        const provider = chartName === 'main' ? this.#charts.mainProvider : this.#charts.networkProvider;\n        const entryIndex = provider.indexForEvent?.(entry) ?? null;\n        if (entryIndex === null) {\n            return false;\n        }\n        const group = provider.groupForEvent?.(entryIndex) ?? null;\n        if (!group) {\n            return false;\n        }\n        return Boolean(group.expanded) === false;\n    }\n    /**\n     * Calculate if an entry is visible vertically on the chart. A bit fiddly as\n     * we have to figure out its pixel offset and go on that. Unlike horizontal\n     * visibility, we can't work soley from its microsecond values.\n     */\n    #entryIsVerticallyVisibleOnChart(entry) {\n        const chartName = chartForEntry(entry);\n        const y = this.yPixelForEventOnChart(entry);\n        if (y === null) {\n            return false;\n        }\n        const eventHeight = this.pixelHeightForEventOnChart(entry);\n        if (!eventHeight) {\n            return false;\n        }\n        if (chartName === 'main') {\n            if (!this.#dimensions.charts.main?.heightPixels) {\n                // Shouldn't happen, but if the main chart has no height, nothing on it is visible.\n                return false;\n            }\n            // The yPixelForEventOnChart method returns the y pixel including an adjustment for the network track.\n            // To see if an entry on the main flame chart is visible, we can check\n            // its y value without the network track adjustment. If it is < 0, then\n            // it's off the top of the screen.\n            //\n            const yWithoutNetwork = y - this.networkChartOffsetHeight();\n            // Check if the y position + the height is less than 0. We add height so\n            // that we correctly consider an event only partially scrolled off to be\n            // visible.\n            if (yWithoutNetwork + eventHeight < 0) {\n                return false;\n            }\n            if (yWithoutNetwork > this.#dimensions.charts.main.heightPixels) {\n                // The event is off the bottom of the screen.\n                return false;\n            }\n        }\n        if (chartName === 'network') {\n            if (!this.#dimensions.charts.network) {\n                // The network chart can be hidden if there are no requests in the trace.\n                return false;\n            }\n            if (y <= -14) {\n                // Weird value, but the network chart has the header row with\n                // timestamps on it: events stay visible behind those timestamps, so we\n                // want any overlays to treat themselves as visible too.\n                return false;\n            }\n            if (y > this.#dimensions.charts.network.heightPixels) {\n                // The event is off the bottom of the network chart.\n                return false;\n            }\n        }\n        // If we got here, none of the conditions to mark an event as invisible got\n        // triggered, so the event must be visible.\n        return true;\n    }\n    /**\n     * Calculate the X pixel position for an event start on the timeline.\n     * @param chartName - the chart that the event is on. It is expected that both\n     * charts have the same width so this doesn't make a difference - but it might\n     * in the future if the UI changes, hence asking for it.\n     *\n     * @param event - the trace event you want to get the pixel position of\n     */\n    xPixelForEventStartOnChart(event) {\n        const chartName = chartForEntry(event);\n        const { startTime } = timingsForOverlayEntry(event);\n        return this.#xPixelForMicroSeconds(chartName, startTime);\n    }\n    /**\n     * Calculate the X pixel position for an event end on the timeline.\n     * @param chartName - the chart that the event is on. It is expected that both\n     * charts have the same width so this doesn't make a difference - but it might\n     * in the future if the UI changes, hence asking for it.\n     *\n     * @param event - the trace event you want to get the pixel position of\n     */\n    xPixelForEventEndOnChart(event) {\n        const chartName = chartForEntry(event);\n        const { endTime } = timingsForOverlayEntry(event);\n        return this.#xPixelForMicroSeconds(chartName, endTime);\n    }\n    /**\n     * Calculate the xPixel for a given timestamp. To do this we calculate how\n     * far in microseconds from the left of the visible window an event is, and\n     * divide that by the total time span. This gives us a fraction representing\n     * how far along the timeline the event is. We can then multiply that by the\n     * width of the canvas to get its pixel position.\n     */\n    #xPixelForMicroSeconds(chart, timestamp) {\n        if (this.#dimensions.trace.visibleWindow === null) {\n            console.error('Cannot calculate xPixel without visible trace window.');\n            return null;\n        }\n        const canvasWidthPixels = this.#dimensions.charts[chart]?.widthPixels ?? null;\n        if (canvasWidthPixels === null) {\n            console.error(`Cannot calculate xPixel without ${chart} dimensions.`);\n            return null;\n        }\n        const timeFromLeft = timestamp - this.#dimensions.trace.visibleWindow.min;\n        const totalTimeSpan = this.#dimensions.trace.visibleWindow.range;\n        return Math.floor(timeFromLeft / totalTimeSpan * canvasWidthPixels);\n    }\n    /**\n     * Calculate the Y pixel position for the event on the timeline relative to\n     * the entire window.\n     * This means if the event is in the main flame chart and below the network,\n     * we add the height of the network chart to the Y value to position it\n     * correctly.\n     * This can return null if any data was missing, or if the event is not\n     * visible (if the level it's on is hidden because the track is collapsed,\n     * for example)\n     */\n    yPixelForEventOnChart(event) {\n        const chartName = chartForEntry(event);\n        const chart = chartName === 'main' ? this.#charts.mainChart : this.#charts.networkChart;\n        const provider = chartName === 'main' ? this.#charts.mainProvider : this.#charts.networkProvider;\n        const indexForEntry = provider.indexForEvent?.(event);\n        if (typeof indexForEntry !== 'number') {\n            return null;\n        }\n        const timelineData = provider.timelineData();\n        if (timelineData === null) {\n            return null;\n        }\n        const level = timelineData.entryLevels.at(indexForEntry);\n        if (typeof level === 'undefined') {\n            return null;\n        }\n        if (!chart.levelIsVisible(level)) {\n            return null;\n        }\n        const pixelOffsetForLevel = chart.levelToOffset(level);\n        // Now we have the offset for the level, we need to adjust it by the user's scroll offset.\n        let pixelAdjustedForScroll = pixelOffsetForLevel - (this.#dimensions.charts[chartName]?.scrollOffsetPixels ?? 0);\n        // Now if the event is in the main chart, we need to pad its Y position\n        // down by the height of the network chart + the network resize element.\n        if (chartName === 'main') {\n            pixelAdjustedForScroll += this.networkChartOffsetHeight();\n        }\n        return pixelAdjustedForScroll;\n    }\n    /**\n     * Calculate the height of the event on the timeline.\n     */\n    pixelHeightForEventOnChart(event) {\n        const chartName = chartForEntry(event);\n        const chart = chartName === 'main' ? this.#charts.mainChart : this.#charts.networkChart;\n        const provider = chartName === 'main' ? this.#charts.mainProvider : this.#charts.networkProvider;\n        const indexForEntry = provider.indexForEvent?.(event);\n        if (typeof indexForEntry !== 'number') {\n            return null;\n        }\n        const timelineData = provider.timelineData();\n        if (timelineData === null) {\n            return null;\n        }\n        const level = timelineData.entryLevels.at(indexForEntry);\n        if (typeof level === 'undefined') {\n            return null;\n        }\n        return chart.levelHeight(level);\n    }\n    /**\n     * Calculate the height of the network chart. If the network chart has\n     * height, we also allow for the size of the resize handle shown between the\n     * two charts.\n     *\n     * Note that it is possible for the chart to have 0 height if the user is\n     * looking at a trace with no network requests.\n     */\n    networkChartOffsetHeight() {\n        if (this.#dimensions.charts.network === null) {\n            return 0;\n        }\n        if (this.#dimensions.charts.network.heightPixels === 0) {\n            return 0;\n        }\n        // At this point we know the network track exists and has height. But we\n        // need to check if it is collapsed, because if it is collapsed there is no\n        // resizer shown.\n        if (this.#dimensions.charts.network.allGroupsCollapsed) {\n            return this.#dimensions.charts.network.heightPixels;\n        }\n        return this.#dimensions.charts.network.heightPixels + NETWORK_RESIZE_ELEM_HEIGHT_PX;\n    }\n    /**\n     * Hides or shows an element. We used to use visibility rather than display,\n     * but a child of an element with visibility: hidden may still be visible if\n     * its own `display` property is set.\n     */\n    #setOverlayElementVisibility(element, isVisible) {\n        element.style.display = isVisible ? 'block' : 'none';\n    }\n}\n/**\n * Because entries can be a TimelineFrame, which is not a trace event, this\n * helper exists to return a consistent set of timings regardless of the type\n * of entry.\n */\nexport function timingsForOverlayEntry(entry) {\n    if (Trace.Types.Events.isLegacyTimelineFrame(entry)) {\n        return {\n            startTime: entry.startTime,\n            endTime: entry.endTime,\n            duration: entry.duration,\n        };\n    }\n    return Trace.Helpers.Timing.eventTimingsMicroSeconds(entry);\n}\n/**\n * Defines if the overlay container `div` should have a jslog context attached.\n * Note that despite some of the overlays being used currently exclusively\n * for annotations, we log here with `overlays` to be generic as overlays can\n * be used for insights, annotations or in the future, who knows...\n */\nexport function jsLogContext(overlay) {\n    switch (overlay.type) {\n        case 'ENTRY_SELECTED': {\n            // No jslog for this; it would be very noisy and not very useful.\n            return null;\n        }\n        case 'ENTRY_OUTLINE': {\n            return `timeline.overlays.entry-outline-${Platform.StringUtilities.toKebabCase(overlay.outlineReason)}`;\n        }\n        case 'ENTRY_LABEL': {\n            return 'timeline.overlays.entry-label';\n        }\n        case 'ENTRIES_LINK': {\n            // do not log impressions for incomplete entry links\n            if (overlay.state !== \"connected\" /* Trace.Types.File.EntriesLinkState.CONNECTED */) {\n                return null;\n            }\n            return 'timeline.overlays.entries-link';\n        }\n        case 'TIME_RANGE': {\n            return 'timeline.overlays.time-range';\n        }\n        case 'TIMESPAN_BREAKDOWN': {\n            return 'timeline.overlays.timespan-breakdown';\n        }\n        case 'CURSOR_TIMESTAMP_MARKER': {\n            return 'timeline.overlays.cursor-timestamp-marker';\n        }\n        case 'CANDY_STRIPED_TIME_RANGE': {\n            return 'timeline.overlays.candy-striped-time-range';\n        }\n        default:\n            Platform.assertNever(overlay, 'Unknown overlay type');\n    }\n}\n//# sourceMappingURL=OverlaysImpl.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/**\n * Generates a JSON representation of an array of objects with the objects\n * printed one per line for improved readability (but not *too* verbose).\n */\nexport function* arrayOfObjectsJsonGenerator(arrayOfObjects) {\n    const ITEMS_PER_ITERATION = 10_000;\n    // Stringify and emit items separately to avoid a giant string in memory.\n    yield '[\\n';\n    if (arrayOfObjects.length > 0) {\n        const itemsIterator = arrayOfObjects[Symbol.iterator]();\n        // Emit first item manually to avoid a trailing comma.\n        const firstItem = itemsIterator.next().value;\n        yield `  ${JSON.stringify(firstItem)}`;\n        let itemsRemaining = ITEMS_PER_ITERATION;\n        let itemsJSON = '';\n        for (const item of itemsIterator) {\n            itemsJSON += `,\\n  ${JSON.stringify(item)}`;\n            itemsRemaining--;\n            if (itemsRemaining === 0) {\n                yield itemsJSON;\n                itemsRemaining = ITEMS_PER_ITERATION;\n                itemsJSON = '';\n            }\n        }\n        yield itemsJSON;\n    }\n    yield '\\n]';\n}\n/**\n * Generates a JSON representation of the TraceObject file line-by-line for a nicer printed\n * version with one trace event per line.\n */\nexport function* traceJsonGenerator(traceEvents, metadata) {\n    yield `{\"metadata\": ${JSON.stringify(metadata || {}, null, 2)}`;\n    yield ',\\n\"traceEvents\": ';\n    yield* arrayOfObjectsJsonGenerator(traceEvents);\n    yield '}\\n';\n}\n/**\n * Generates a JSON representation of CPU profile.\n */\nexport function cpuprofileJsonGenerator(cpuprofile) {\n    return JSON.stringify(cpuprofile);\n}\n//# sourceMappingURL=SaveFileFormatter.js.map","// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Extensions from '../../models/extensions/extensions.js';\nimport * as LiveMetrics from '../../models/live-metrics/live-metrics.js';\nimport * as Trace from '../../models/trace/trace.js';\nconst UIStrings = {\n    /**\n     *@description Text in Timeline Controller of the Performance panel indicating that the Performance Panel cannot\n     * record a performance trace because the type of target (where possible types are page, service worker and shared\n     * worker) doesn't support it.\n     */\n    tracingNotSupported: 'Performance trace recording not supported for this type of target',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineController.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineController {\n    primaryPageTarget;\n    rootTarget;\n    tracingManager;\n    #collectedEvents = [];\n    #recordingStartTime = null;\n    client;\n    tracingCompletePromise = null;\n    /**\n     * We always need to profile against the DevTools root target, which is\n     * the target that DevTools is attached to.\n     *\n     * In most cases, this will be the tab that DevTools is inspecting.\n     * Now pre-rendering is active, tabs can have multiple pages - only one\n     * of which the user is being shown. This is the \"primary page\" and hence\n     * why in code we have \"primaryPageTarget\". When there's a prerendered\n     * page in a background, tab target would have multiple subtargets, one\n     * of them being primaryPageTarget.\n     *\n     * The problems with using primary page target for tracing are:\n     * 1. Performance trace doesn't include information from the other pages on\n     *    the tab which is probably not what the user wants as it does not\n     *    reflect reality.\n     * 2. Capturing trace never finishes after prerendering activation as\n     *    we've started on one target and ending on another one, and\n     *    tracingComplete event never gets processed.\n     *\n     * However, when we want to look at the URL of the current page, we need\n     * to use the primaryPageTarget to ensure we get the URL of the tab and\n     * the tab's page that is being shown to the user. This is because the tab\n     * target (which is what rootTarget is) only exposes the Target and Tracing\n     * domains. We need the Page target to navigate as it implements the Page\n     * domain. That is why here we have to store both.\n     **/\n    constructor(rootTarget, primaryPageTarget, client) {\n        this.primaryPageTarget = primaryPageTarget;\n        this.rootTarget = rootTarget;\n        // Ensure the tracing manager is the one for the Root Target, NOT the\n        // primaryPageTarget, as that is the one we have to invoke tracing against.\n        this.tracingManager = rootTarget.model(Trace.TracingManager.TracingManager);\n        this.client = client;\n    }\n    async dispose() {\n        if (this.tracingManager) {\n            await this.tracingManager.reset();\n        }\n    }\n    async startRecording(options) {\n        function disabledByDefault(category) {\n            return 'disabled-by-default-' + category;\n        }\n        // The following categories are also used in other tools, but this panel\n        // offers the possibility of turning them off (see below).\n        // 'disabled-by-default-devtools.screenshot'\n        //   └ default: on, option: captureFilmStrip\n        // 'disabled-by-default-devtools.timeline.invalidationTracking'\n        //   └ default: off, experiment: timelineInvalidationTracking\n        // 'disabled-by-default-v8.cpu_profiler'\n        //   └ default: on, option: enableJSSampling\n        const categoriesArray = [\n            Root.Runtime.experiments.isEnabled('timeline-show-all-events') ? '*' : '-*',\n            Trace.Types.Events.Categories.Console,\n            Trace.Types.Events.Categories.Loading,\n            Trace.Types.Events.Categories.UserTiming,\n            'devtools.timeline',\n            disabledByDefault('devtools.timeline'),\n            disabledByDefault('devtools.timeline.frame'),\n            disabledByDefault('devtools.timeline.stack'),\n            disabledByDefault('v8.compile'),\n            disabledByDefault('v8.cpu_profiler.hires'),\n            disabledByDefault('lighthouse'),\n            'v8.execute',\n            'v8',\n            'cppgc',\n            'navigation,rail',\n        ];\n        if (Root.Runtime.experiments.isEnabled('timeline-v8-runtime-call-stats') && options.enableJSSampling) {\n            categoriesArray.push(disabledByDefault('v8.runtime_stats_sampling'));\n        }\n        if (options.enableJSSampling) {\n            categoriesArray.push(disabledByDefault('v8.cpu_profiler'));\n        }\n        if (Root.Runtime.experiments.isEnabled('timeline-invalidation-tracking')) {\n            categoriesArray.push(disabledByDefault('devtools.timeline.invalidationTracking'));\n        }\n        if (options.capturePictures) {\n            categoriesArray.push(disabledByDefault('devtools.timeline.layers'), disabledByDefault('devtools.timeline.picture'), disabledByDefault('blink.graphics_context_annotations'));\n        }\n        if (options.captureFilmStrip) {\n            categoriesArray.push(disabledByDefault('devtools.screenshot'));\n        }\n        if (options.captureSelectorStats) {\n            categoriesArray.push(disabledByDefault('blink.debug'));\n        }\n        if (Root.Runtime.experiments.isEnabled('timeline-enhanced-traces')) {\n            categoriesArray.push(disabledByDefault('devtools.target-rundown'));\n            categoriesArray.push(disabledByDefault('devtools.v8-source-rundown'));\n        }\n        if (Root.Runtime.experiments.isEnabled('timeline-compiled-sources')) {\n            categoriesArray.push(disabledByDefault('devtools.v8-source-rundown-sources'));\n        }\n        await LiveMetrics.LiveMetrics.instance().disable();\n        this.#recordingStartTime = Date.now();\n        const response = await this.startRecordingWithCategories(categoriesArray.join(','));\n        if (response.getError()) {\n            await SDK.TargetManager.TargetManager.instance().resumeAllTargets();\n        }\n        return response;\n    }\n    async stopRecording() {\n        if (this.tracingManager) {\n            this.tracingManager.stop();\n        }\n        this.client.loadingStarted();\n        await this.waitForTracingToStop();\n        await this.allSourcesFinished();\n        await LiveMetrics.LiveMetrics.instance().enable();\n    }\n    async waitForTracingToStop() {\n        if (this.tracingManager) {\n            await this.tracingCompletePromise?.promise;\n        }\n    }\n    async startRecordingWithCategories(categories) {\n        if (!this.tracingManager) {\n            throw new Error(i18nString(UIStrings.tracingNotSupported));\n        }\n        // There might be a significant delay in the beginning of timeline recording\n        // caused by starting CPU profiler, that needs to traverse JS heap to collect\n        // all the functions data.\n        await SDK.TargetManager.TargetManager.instance().suspendAllTargets('performance-timeline');\n        this.tracingCompletePromise = Promise.withResolvers();\n        const response = await this.tracingManager.start(this, categories, '');\n        await this.warmupJsProfiler();\n        Extensions.ExtensionServer.ExtensionServer.instance().profilingStarted();\n        return response;\n    }\n    // CPUProfiler::StartProfiling has a non-trivial cost and we'd prefer it not happen within an\n    // interaction as that complicates debugging interaction latency.\n    // To trigger the StartProfiling interrupt and get the warmup cost out of the way, we send a\n    // very soft invocation to V8.https://crbug.com/1358602\n    async warmupJsProfiler() {\n        // primaryPageTarget has RuntimeModel whereas rootTarget (Tab) does not.\n        const runtimeModel = this.primaryPageTarget.model(SDK.RuntimeModel.RuntimeModel);\n        if (!runtimeModel) {\n            return;\n        }\n        await runtimeModel.agent.invoke_evaluate({\n            expression: '(async function(){ await 1; })()',\n            throwOnSideEffect: true,\n        });\n    }\n    traceEventsCollected(events) {\n        this.#collectedEvents.push(...events);\n    }\n    tracingComplete() {\n        if (!this.tracingCompletePromise) {\n            return;\n        }\n        this.tracingCompletePromise.resolve(undefined);\n        this.tracingCompletePromise = null;\n    }\n    async allSourcesFinished() {\n        // TODO(crbug.com/366072294): Report the progress of this resumption, as it can be lengthy on heavy pages.\n        await SDK.TargetManager.TargetManager.instance().resumeAllTargets();\n        Extensions.ExtensionServer.ExtensionServer.instance().profilingStopped();\n        this.client.processingStarted();\n        await this.client.loadingComplete(this.#collectedEvents, /* exclusiveFilter= */ null, /* isCpuProfile= */ false, this.#recordingStartTime, \n        /* metadata= */ null);\n        this.client.loadingCompleteForTest();\n    }\n    tracingBufferUsage(usage) {\n        this.client.recordingProgress(usage);\n    }\n    eventsRetrievalProgress(progress) {\n        this.client.loadingProgress(progress);\n    }\n}\n//# sourceMappingURL=TimelineController.js.map","/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nconst UIStrings = {\n    /**\n     *@description Text for a heap profile type\n     */\n    jsHeap: 'JS heap',\n    /**\n     *@description Text for documents, a type of resources\n     */\n    documents: 'Documents',\n    /**\n     *@description Text in Counters Graph of the Performance panel\n     */\n    nodes: 'Nodes',\n    /**\n     *@description Text in Counters Graph of the Performance panel\n     */\n    listeners: 'Listeners',\n    /**\n     *@description Text in Counters Graph of the Performance panel\n     */\n    gpuMemory: 'GPU memory',\n    /**\n     *@description Range text content in Counters Graph of the Performance panel\n     *@example {2} PH1\n     *@example {10} PH2\n     */\n    ss: '[{PH1} – {PH2}]',\n    /**\n     * @description text shown when no counter events are found and the graph is empty\n     */\n    noEventsFound: 'No memory usage data found within selected events.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/CountersGraph.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class CountersGraph extends UI.Widget.VBox {\n    delegate;\n    calculator;\n    header;\n    toolbar;\n    graphsContainer;\n    canvasContainer;\n    canvas;\n    timelineGrid;\n    counters;\n    counterUI;\n    countersByName;\n    gpuMemoryCounter;\n    #events = null;\n    currentValuesBar;\n    markerXPosition;\n    #onTraceBoundsChangeBound = this.#onTraceBoundsChange.bind(this);\n    #noEventsFoundMessage = document.createElement('div');\n    #showNoEventsMessage = false;\n    constructor(delegate) {\n        super();\n        this.element.id = 'memory-graphs-container';\n        this.delegate = delegate;\n        this.calculator = new Calculator();\n        // Create selectors\n        this.header = new UI.Widget.HBox();\n        this.header.element.classList.add('timeline-memory-header');\n        this.header.show(this.element);\n        this.toolbar = new UI.Toolbar.Toolbar('timeline-memory-toolbar');\n        this.header.element.appendChild(this.toolbar.element);\n        this.graphsContainer = new UI.Widget.VBox();\n        this.graphsContainer.show(this.element);\n        const canvasWidget = new UI.Widget.VBoxWithResizeCallback(this.resize.bind(this));\n        canvasWidget.show(this.graphsContainer.element);\n        this.createCurrentValuesBar();\n        this.canvasContainer = canvasWidget.element;\n        this.canvasContainer.id = 'memory-graphs-canvas-container';\n        this.canvas = document.createElement('canvas');\n        this.canvasContainer.appendChild(this.canvas);\n        this.canvas.id = 'memory-counters-graph';\n        const noEventsFound = document.createElement('p');\n        noEventsFound.innerText = i18nString(UIStrings.noEventsFound);\n        this.#noEventsFoundMessage.classList.add('no-events-found');\n        this.#noEventsFoundMessage.setAttribute('hidden', 'hidden');\n        this.#noEventsFoundMessage.appendChild(noEventsFound);\n        this.canvasContainer.appendChild(this.#noEventsFoundMessage);\n        this.canvasContainer.addEventListener('mouseover', this.onMouseMove.bind(this), true);\n        this.canvasContainer.addEventListener('mousemove', this.onMouseMove.bind(this), true);\n        this.canvasContainer.addEventListener('mouseleave', this.onMouseLeave.bind(this), true);\n        this.canvasContainer.addEventListener('click', this.onClick.bind(this), true);\n        // We create extra timeline grid here to reuse its event dividers.\n        this.timelineGrid = new PerfUI.TimelineGrid.TimelineGrid();\n        this.canvasContainer.appendChild(this.timelineGrid.dividersElement);\n        this.counters = [];\n        this.counterUI = [];\n        this.countersByName = new Map();\n        this.countersByName.set('jsHeapSizeUsed', this.createCounter(i18nString(UIStrings.jsHeap), 'js-heap-size-used', 'hsl(220, 90%, 43%)', Platform.NumberUtilities.bytesToString));\n        this.countersByName.set('documents', this.createCounter(i18nString(UIStrings.documents), 'documents', 'hsl(0, 90%, 43%)'));\n        this.countersByName.set('nodes', this.createCounter(i18nString(UIStrings.nodes), 'nodes', 'hsl(120, 90%, 43%)'));\n        this.countersByName.set('jsEventListeners', this.createCounter(i18nString(UIStrings.listeners), 'js-event-listeners', 'hsl(38, 90%, 43%)'));\n        this.gpuMemoryCounter = this.createCounter(i18nString(UIStrings.gpuMemory), 'gpu-memory-used-kb', 'hsl(300, 90%, 43%)', Platform.NumberUtilities.bytesToString);\n        this.countersByName.set('gpuMemoryUsedKB', this.gpuMemoryCounter);\n        TraceBounds.TraceBounds.onChange(this.#onTraceBoundsChangeBound);\n    }\n    #onTraceBoundsChange(event) {\n        if (event.updateType === 'RESET' || event.updateType === 'VISIBLE_WINDOW') {\n            const newWindow = event.state.milli.timelineTraceWindow;\n            this.calculator.setWindow(newWindow.min, newWindow.max);\n            this.#scheduleRefresh();\n        }\n    }\n    setModel(parsedTrace, events) {\n        this.#events = events;\n        if (!events || !parsedTrace) {\n            return;\n        }\n        const minTime = Trace.Helpers.Timing.traceWindowMilliSeconds(parsedTrace.Meta.traceBounds).min;\n        this.calculator.setZeroTime(minTime);\n        for (let i = 0; i < this.counters.length; ++i) {\n            this.counters[i].reset();\n            this.counterUI[i].reset();\n        }\n        this.#scheduleRefresh();\n        let counterEventsFound = 0;\n        for (let i = 0; i < events.length; ++i) {\n            const event = events[i];\n            if (!Trace.Types.Events.isUpdateCounters(event)) {\n                continue;\n            }\n            counterEventsFound++;\n            const counters = event.args.data;\n            if (!counters) {\n                return;\n            }\n            for (const name in counters) {\n                const counter = this.countersByName.get(name);\n                if (counter) {\n                    const { startTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n                    counter.appendSample(startTime, counters[name]);\n                }\n            }\n            if (typeof counters.gpuMemoryLimitKB !== 'undefined') {\n                this.gpuMemoryCounter.setLimit(counters.gpuMemoryLimitKB);\n            }\n        }\n        this.#showNoEventsMessage = counterEventsFound === 0;\n    }\n    createCurrentValuesBar() {\n        this.currentValuesBar = this.graphsContainer.element.createChild('div');\n        this.currentValuesBar.id = 'counter-values-bar';\n    }\n    createCounter(uiName, settingsKey, color, formatter) {\n        const counter = new Counter();\n        this.counters.push(counter);\n        this.counterUI.push(new CounterUI(this, uiName, settingsKey, color, counter, formatter));\n        return counter;\n    }\n    resizerElement() {\n        return this.header.element;\n    }\n    resize() {\n        const parentElement = this.canvas.parentElement;\n        this.canvas.width = parentElement.clientWidth * window.devicePixelRatio;\n        this.canvas.height = parentElement.clientHeight * window.devicePixelRatio;\n        this.calculator.setDisplayWidth(this.canvas.width);\n        this.refresh();\n    }\n    #scheduleRefresh() {\n        UI.UIUtils.invokeOnceAfterBatchUpdate(this, this.refresh);\n    }\n    draw() {\n        this.clear();\n        if (this.#showNoEventsMessage) {\n            this.#noEventsFoundMessage.removeAttribute('hidden');\n        }\n        else {\n            this.#noEventsFoundMessage.setAttribute('hidden', 'hidden');\n        }\n        for (const counter of this.counters) {\n            counter.calculateVisibleIndexes(this.calculator);\n            counter.calculateXValues(this.canvas.width);\n        }\n        for (const counterUI of this.counterUI) {\n            counterUI.drawGraph(this.canvas);\n        }\n    }\n    onClick(event) {\n        const x = event.x - this.canvasContainer.getBoundingClientRect().left;\n        let minDistance = Infinity;\n        let bestTime;\n        for (const counterUI of this.counterUI) {\n            if (!counterUI.counter.times.length) {\n                continue;\n            }\n            const index = counterUI.recordIndexAt(x);\n            const distance = Math.abs(x * window.devicePixelRatio - counterUI.counter.x[index]);\n            if (distance < minDistance) {\n                minDistance = distance;\n                bestTime = counterUI.counter.times[index];\n            }\n        }\n        if (bestTime !== undefined && this.#events) {\n            this.delegate.selectEntryAtTime(this.#events, bestTime);\n        }\n    }\n    onMouseLeave(_event) {\n        delete this.markerXPosition;\n        this.clearCurrentValueAndMarker();\n    }\n    clearCurrentValueAndMarker() {\n        for (let i = 0; i < this.counterUI.length; i++) {\n            this.counterUI[i].clearCurrentValueAndMarker();\n        }\n    }\n    onMouseMove(event) {\n        const x = event.x - this.canvasContainer.getBoundingClientRect().left;\n        this.markerXPosition = x;\n        this.refreshCurrentValues();\n    }\n    refreshCurrentValues() {\n        if (this.markerXPosition === undefined) {\n            return;\n        }\n        for (let i = 0; i < this.counterUI.length; ++i) {\n            this.counterUI[i].updateCurrentValue(this.markerXPosition);\n        }\n    }\n    refresh() {\n        this.timelineGrid.updateDividers(this.calculator);\n        this.draw();\n        this.refreshCurrentValues();\n    }\n    clear() {\n        const ctx = this.canvas.getContext('2d');\n        if (!ctx) {\n            throw new Error('Unable to get canvas context');\n        }\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    }\n}\nexport class Counter {\n    times;\n    values;\n    x;\n    minimumIndex;\n    maximumIndex;\n    maxTime;\n    minTime;\n    limitValue;\n    constructor() {\n        this.times = [];\n        this.values = [];\n        this.x = [];\n        this.minimumIndex = 0;\n        this.maximumIndex = 0;\n        this.maxTime = 0;\n        this.minTime = 0;\n    }\n    appendSample(time, value) {\n        if (this.values.length && this.values[this.values.length - 1] === value) {\n            return;\n        }\n        this.times.push(time);\n        this.values.push(value);\n    }\n    reset() {\n        this.times = [];\n        this.values = [];\n    }\n    setLimit(value) {\n        this.limitValue = value;\n    }\n    calculateBounds() {\n        let maxValue;\n        let minValue;\n        for (let i = this.minimumIndex; i <= this.maximumIndex; i++) {\n            const value = this.values[i];\n            if (minValue === undefined || value < minValue) {\n                minValue = value;\n            }\n            if (maxValue === undefined || value > maxValue) {\n                maxValue = value;\n            }\n        }\n        minValue = minValue || 0;\n        maxValue = maxValue || 1;\n        if (this.limitValue) {\n            if (maxValue > this.limitValue * 0.5) {\n                maxValue = Math.max(maxValue, this.limitValue);\n            }\n            minValue = Math.min(minValue, this.limitValue);\n        }\n        return { min: minValue, max: maxValue };\n    }\n    calculateVisibleIndexes(calculator) {\n        const start = calculator.minimumBoundary();\n        const end = calculator.maximumBoundary();\n        // Maximum index of element whose time <= start.\n        this.minimumIndex = Platform.NumberUtilities.clamp(Platform.ArrayUtilities.upperBound(this.times, start, Platform.ArrayUtilities.DEFAULT_COMPARATOR) - 1, 0, this.times.length - 1);\n        // Minimum index of element whose time >= end.\n        this.maximumIndex = Platform.NumberUtilities.clamp(Platform.ArrayUtilities.lowerBound(this.times, end, Platform.ArrayUtilities.DEFAULT_COMPARATOR), 0, this.times.length - 1);\n        // Current window bounds.\n        this.minTime = start;\n        this.maxTime = end;\n    }\n    calculateXValues(width) {\n        if (!this.values.length) {\n            return;\n        }\n        const xFactor = width / (this.maxTime - this.minTime);\n        this.x = new Array(this.values.length);\n        for (let i = this.minimumIndex + 1; i <= this.maximumIndex; i++) {\n            this.x[i] = xFactor * (this.times[i] - this.minTime);\n        }\n    }\n}\nexport class CounterUI {\n    countersPane;\n    counter;\n    formatter;\n    setting;\n    filter;\n    range;\n    value;\n    graphColor;\n    limitColor;\n    graphYValues;\n    verticalPadding;\n    currentValueLabel;\n    marker;\n    constructor(countersPane, title, settingsKey, graphColor, counter, formatter) {\n        this.countersPane = countersPane;\n        this.counter = counter;\n        this.formatter = formatter || Platform.NumberUtilities.withThousandsSeparator;\n        this.setting = Common.Settings.Settings.instance().createSetting('timeline-counters-graph-' + settingsKey, true);\n        this.setting.setTitle(title);\n        this.filter = new UI.Toolbar.ToolbarSettingCheckbox(this.setting, title);\n        this.filter.inputElement.classList.add('-theme-preserve-input');\n        const parsedColor = Common.Color.parse(graphColor);\n        if (parsedColor) {\n            const colorWithAlpha = parsedColor.setAlpha(0.5).asString(\"rgba\" /* Common.Color.Format.RGBA */);\n            const htmlElement = this.filter.element;\n            if (colorWithAlpha) {\n                htmlElement.style.backgroundColor = colorWithAlpha;\n            }\n            htmlElement.style.borderColor = 'transparent';\n        }\n        this.filter.inputElement.addEventListener('click', this.toggleCounterGraph.bind(this));\n        countersPane.toolbar.appendToolbarItem(this.filter);\n        this.range = this.filter.element.createChild('span', 'range');\n        this.value = countersPane.currentValuesBar.createChild('span', 'memory-counter-value');\n        this.value.style.color = graphColor;\n        this.graphColor = graphColor;\n        if (parsedColor) {\n            this.limitColor = parsedColor.setAlpha(0.3).asString(\"rgba\" /* Common.Color.Format.RGBA */);\n        }\n        this.graphYValues = [];\n        this.verticalPadding = 10;\n        this.currentValueLabel = title;\n        this.marker = countersPane.canvasContainer.createChild('div', 'memory-counter-marker');\n        this.marker.style.backgroundColor = graphColor;\n        this.clearCurrentValueAndMarker();\n    }\n    reset() {\n        this.range.textContent = '';\n    }\n    setRange(minValue, maxValue) {\n        const min = this.formatter(minValue);\n        const max = this.formatter(maxValue);\n        this.range.textContent = i18nString(UIStrings.ss, { PH1: min, PH2: max });\n    }\n    toggleCounterGraph() {\n        this.value.classList.toggle('hidden', !this.filter.checked());\n        this.countersPane.refresh();\n    }\n    recordIndexAt(x) {\n        return Platform.ArrayUtilities.upperBound(this.counter.x, x * window.devicePixelRatio, Platform.ArrayUtilities.DEFAULT_COMPARATOR, this.counter.minimumIndex + 1, this.counter.maximumIndex + 1) -\n            1;\n    }\n    updateCurrentValue(x) {\n        if (!this.visible() || !this.counter.values.length || !this.counter.x) {\n            return;\n        }\n        const index = this.recordIndexAt(x);\n        const value = Platform.NumberUtilities.withThousandsSeparator(this.counter.values[index]);\n        this.value.textContent = `${this.currentValueLabel}: ${value}`;\n        const y = this.graphYValues[index] / window.devicePixelRatio;\n        this.marker.style.left = x + 'px';\n        this.marker.style.top = y + 'px';\n        this.marker.classList.remove('hidden');\n    }\n    clearCurrentValueAndMarker() {\n        this.value.textContent = '';\n        this.marker.classList.add('hidden');\n    }\n    drawGraph(canvas) {\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n            throw new Error('Unable to get canvas context');\n        }\n        const width = canvas.width;\n        const height = canvas.height - 2 * this.verticalPadding;\n        if (height <= 0) {\n            this.graphYValues = [];\n            return;\n        }\n        const originY = this.verticalPadding;\n        const counter = this.counter;\n        const values = counter.values;\n        if (!values.length) {\n            return;\n        }\n        const bounds = counter.calculateBounds();\n        const minValue = bounds.min;\n        const maxValue = bounds.max;\n        this.setRange(minValue, maxValue);\n        if (!this.visible()) {\n            return;\n        }\n        const yValues = this.graphYValues;\n        const maxYRange = maxValue - minValue;\n        const yFactor = maxYRange ? height / (maxYRange) : 1;\n        ctx.save();\n        ctx.lineWidth = window.devicePixelRatio;\n        if (ctx.lineWidth % 2) {\n            ctx.translate(0.5, 0.5);\n        }\n        ctx.beginPath();\n        let value = values[counter.minimumIndex];\n        let currentY = Math.round(originY + height - (value - minValue) * yFactor);\n        ctx.moveTo(0, currentY);\n        let i = counter.minimumIndex;\n        for (; i <= counter.maximumIndex; i++) {\n            const x = Math.round(counter.x[i]);\n            ctx.lineTo(x, currentY);\n            const currentValue = values[i];\n            if (typeof currentValue !== 'undefined') {\n                value = currentValue;\n            }\n            currentY = Math.round(originY + height - (value - minValue) * yFactor);\n            ctx.lineTo(x, currentY);\n            yValues[i] = currentY;\n        }\n        yValues.length = i;\n        ctx.lineTo(width, currentY);\n        ctx.strokeStyle = this.graphColor;\n        ctx.stroke();\n        if (counter.limitValue) {\n            const limitLineY = Math.round(originY + height - (counter.limitValue - minValue) * yFactor);\n            ctx.moveTo(0, limitLineY);\n            ctx.lineTo(width, limitLineY);\n            if (this.limitColor) {\n                ctx.strokeStyle = this.limitColor;\n            }\n            ctx.stroke();\n        }\n        ctx.closePath();\n        ctx.restore();\n    }\n    visible() {\n        return this.filter.checked();\n    }\n}\nexport class Calculator {\n    minimumBoundaryInternal;\n    maximumBoundaryInternal;\n    workingArea;\n    zeroTimeInternal;\n    constructor() {\n        this.minimumBoundaryInternal = 0;\n        this.maximumBoundaryInternal = 0;\n        this.workingArea = 0;\n        this.zeroTimeInternal = 0;\n    }\n    setZeroTime(time) {\n        this.zeroTimeInternal = time;\n    }\n    computePosition(time) {\n        return (time - this.minimumBoundaryInternal) / this.boundarySpan() * this.workingArea;\n    }\n    setWindow(minimumBoundary, maximumBoundary) {\n        this.minimumBoundaryInternal = minimumBoundary;\n        this.maximumBoundaryInternal = maximumBoundary;\n    }\n    setDisplayWidth(clientWidth) {\n        this.workingArea = clientWidth;\n    }\n    formatValue(value, precision) {\n        return i18n.TimeUtilities.preciseMillisToString(value - this.zeroTime(), precision);\n    }\n    maximumBoundary() {\n        return this.maximumBoundaryInternal;\n    }\n    minimumBoundary() {\n        return this.minimumBoundaryInternal;\n    }\n    zeroTime() {\n        return this.zeroTimeInternal;\n    }\n    boundarySpan() {\n        return this.maximumBoundaryInternal - this.minimumBoundaryInternal;\n    }\n}\n//# sourceMappingURL=CountersGraph.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../../core/sdk/sdk.js';\n/**\n * If the event's thread was identified as belonging to a worker, this will\n * return the target representing that worker. Otherwise, we return the primary\n * page's target.\n **/\nexport function targetForEvent(parsedTrace, event) {\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    const workerId = parsedTrace.Workers.workerIdByThread.get(event.tid);\n    if (workerId) {\n        return targetManager.targetById(workerId);\n    }\n    return targetManager.primaryPageTarget();\n}\n//# sourceMappingURL=TargetForEvent.js.map","// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Trace from '../trace/trace.js';\nconst UIStrings = {\n    /**\n     *@description Text for the name of a thread of the page\n     *@example {1} PH1\n     */\n    threadS: 'Thread {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/timeline_model/TimelineJSProfile.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineJSProfileProcessor {\n    static isNativeRuntimeFrame(frame) {\n        return frame.url === 'native V8Runtime';\n    }\n    static nativeGroup(nativeName) {\n        if (nativeName.startsWith('Parse')) {\n            return \"Parse\" /* TimelineJSProfileProcessor.NativeGroups.PARSE */;\n        }\n        if (nativeName.startsWith('Compile') || nativeName.startsWith('Recompile')) {\n            return \"Compile\" /* TimelineJSProfileProcessor.NativeGroups.COMPILE */;\n        }\n        return null;\n    }\n    static createFakeTraceFromCpuProfile(profile, tid) {\n        const events = [];\n        const threadName = i18nString(UIStrings.threadS, { PH1: tid });\n        appendEvent('TracingStartedInPage', { data: { sessionId: '1' } }, 0, 0, \"M\" /* Trace.Types.Events.Phase.METADATA */);\n        appendEvent(\"thread_name\" /* Trace.Types.Events.Name.THREAD_NAME */, { name: threadName }, 0, 0, \"M\" /* Trace.Types.Events.Phase.METADATA */, '__metadata');\n        if (!profile) {\n            return events;\n        }\n        // Append a root to show the start time of the profile (which is earlier than first sample), so the Performance\n        // panel won't truncate this time period.\n        // 'JSRoot' doesn't exist in the new engine and is not the name of an actual trace event, but changing it might break other trace processing tools that rely on this, so we stick with this name.\n        // TODO(crbug.com/341234884): consider removing this or clarify why it's required.\n        appendEvent('JSRoot', {}, profile.startTime, profile.endTime - profile.startTime, \"X\" /* Trace.Types.Events.Phase.COMPLETE */, 'toplevel');\n        // TODO: create a `Profile` event instead, as `cpuProfile` is legacy\n        appendEvent('CpuProfile', { data: { cpuProfile: profile } }, profile.endTime, 0, \"X\" /* Trace.Types.Events.Phase.COMPLETE */);\n        return events;\n        function appendEvent(name, args, ts, dur, ph, cat) {\n            const event = {\n                cat: cat || 'disabled-by-default-devtools.timeline',\n                name,\n                ph: ph || \"X\" /* Trace.Types.Events.Phase.COMPLETE */,\n                pid: Trace.Types.Events.ProcessID(1),\n                tid,\n                ts: Trace.Types.Timing.MicroSeconds(ts),\n                args,\n            };\n            if (dur) {\n                event.dur = Trace.Types.Timing.MicroSeconds(dur);\n            }\n            events.push(event);\n            return event;\n        }\n    }\n}\n//# sourceMappingURL=TimelineJSProfile.js.map","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Trace from '../../models/trace/trace.js';\nexport class TimelineModelFilter {\n}\nexport class TimelineVisibleEventsFilter extends TimelineModelFilter {\n    visibleTypes;\n    constructor(visibleTypes) {\n        super();\n        this.visibleTypes = new Set(visibleTypes);\n    }\n    accept(event) {\n        if (Trace.Types.Extensions.isSyntheticExtensionEntry(event)) {\n            return true;\n        }\n        return this.visibleTypes.has(TimelineVisibleEventsFilter.eventType(event));\n    }\n    static eventType(event) {\n        // Any blink.console category events are treated as ConsoleTime events\n        if (Trace.Helpers.Trace.eventHasCategory(event, 'blink.console')) {\n            return \"ConsoleTime\" /* Trace.Types.Events.Name.CONSOLE_TIME */;\n        }\n        // Any blink.user_timing egory events are treated as UserTiming events\n        if (Trace.Helpers.Trace.eventHasCategory(event, 'blink.user_timing')) {\n            return \"UserTiming\" /* Trace.Types.Events.Name.USER_TIMING */;\n        }\n        return event.name;\n    }\n}\nexport class TimelineInvisibleEventsFilter extends TimelineModelFilter {\n    #invisibleTypes;\n    constructor(invisibleTypes) {\n        super();\n        this.#invisibleTypes = new Set(invisibleTypes);\n    }\n    accept(event) {\n        return !this.#invisibleTypes.has(TimelineVisibleEventsFilter.eventType(event));\n    }\n}\nexport class ExclusiveNameFilter extends TimelineModelFilter {\n    #excludeNames;\n    constructor(excludeNames) {\n        super();\n        this.#excludeNames = new Set(excludeNames);\n    }\n    accept(event) {\n        return !this.#excludeNames.has(event.name);\n    }\n}\n//# sourceMappingURL=TimelineModelFilter.js.map","// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Trace from '../../models/trace/trace.js';\nimport { TimelineJSProfileProcessor } from './TimelineJSProfile.js';\nexport class Node {\n    totalTime;\n    selfTime;\n    id;\n    event;\n    parent;\n    groupId;\n    isGroupNodeInternal;\n    depth;\n    constructor(id, event) {\n        this.totalTime = 0;\n        this.selfTime = 0;\n        this.id = id;\n        this.event = event;\n        this.groupId = '';\n        this.isGroupNodeInternal = false;\n        this.depth = 0;\n    }\n    isGroupNode() {\n        return this.isGroupNodeInternal;\n    }\n    hasChildren() {\n        throw 'Not implemented';\n    }\n    setHasChildren(_value) {\n        throw 'Not implemented';\n    }\n    /**\n     * Returns the direct descendants of this node.\n     * @returns a map with ordered <nodeId, Node> tuples.\n     */\n    children() {\n        throw 'Not implemented';\n    }\n    searchTree(matchFunction, results) {\n        results = results || [];\n        if (this.event && matchFunction(this.event)) {\n            results.push(this);\n        }\n        for (const child of this.children().values()) {\n            child.searchTree(matchFunction, results);\n        }\n        return results;\n    }\n}\nexport class TopDownNode extends Node {\n    root;\n    hasChildrenInternal;\n    childrenInternal;\n    parent;\n    constructor(id, event, parent) {\n        super(id, event);\n        this.root = parent && parent.root;\n        this.hasChildrenInternal = false;\n        this.childrenInternal = null;\n        this.parent = parent;\n    }\n    hasChildren() {\n        return this.hasChildrenInternal;\n    }\n    setHasChildren(value) {\n        this.hasChildrenInternal = value;\n    }\n    children() {\n        return this.childrenInternal || this.buildChildren();\n    }\n    buildChildren() {\n        // Tracks the ancestor path of this node, includes the current node.\n        const path = [];\n        for (let node = this; node.parent && !node.isGroupNode(); node = node.parent) {\n            path.push(node);\n        }\n        path.reverse();\n        const children = new Map();\n        const self = this;\n        const root = this.root;\n        if (!root) {\n            this.childrenInternal = children;\n            return this.childrenInternal;\n        }\n        const startTime = root.startTime;\n        const endTime = root.endTime;\n        const instantEventCallback = root.doNotAggregate ? onInstantEvent : undefined;\n        const eventIdCallback = root.doNotAggregate ? undefined : generateEventID;\n        const eventGroupIdCallback = root.getEventGroupIdCallback();\n        let depth = 0;\n        // The amount of ancestors found to match this node's ancestors\n        // during the event tree walk.\n        let matchedDepth = 0;\n        let currentDirectChild = null;\n        // Walk on the full event tree to find this node's children.\n        Trace.Helpers.Trace.forEachEvent(root.events, {\n            onStartEvent,\n            onEndEvent,\n            onInstantEvent: instantEventCallback,\n            startTime: Trace.Helpers.Timing.millisecondsToMicroseconds(startTime),\n            endTime: Trace.Helpers.Timing.millisecondsToMicroseconds(endTime),\n            eventFilter: root.filter,\n            ignoreAsyncEvents: false,\n        });\n        function onStartEvent(e) {\n            const { startTime: currentStartTime, endTime: currentEndTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(e);\n            ++depth;\n            if (depth > path.length + 2) {\n                return;\n            }\n            if (!matchPath(e)) {\n                return;\n            }\n            const actualEndTime = currentEndTime !== undefined ? Math.min(currentEndTime, endTime) : endTime;\n            const duration = actualEndTime - Math.max(startTime, currentStartTime);\n            if (duration < 0) {\n                console.error('Negative event duration');\n            }\n            processEvent(e, duration);\n        }\n        function onInstantEvent(e) {\n            ++depth;\n            if (matchedDepth === path.length && depth <= path.length + 2) {\n                processEvent(e, 0);\n            }\n            --depth;\n        }\n        /**\n         * Creates a child node.\n         */\n        function processEvent(e, duration) {\n            if (depth === path.length + 2) {\n                if (!currentDirectChild) {\n                    return;\n                }\n                currentDirectChild.setHasChildren(true);\n                currentDirectChild.selfTime -= duration;\n                return;\n            }\n            let id;\n            let groupId = '';\n            if (!eventIdCallback) {\n                id = Symbol('uniqueId');\n            }\n            else {\n                id = eventIdCallback(e);\n                groupId = eventGroupIdCallback ? eventGroupIdCallback(e) : '';\n                if (groupId) {\n                    id += '/' + groupId;\n                }\n            }\n            let node = children.get(id);\n            if (!node) {\n                node = new TopDownNode(id, e, self);\n                node.groupId = groupId;\n                children.set(id, node);\n            }\n            node.selfTime += duration;\n            node.totalTime += duration;\n            currentDirectChild = node;\n        }\n        /**\n         * Checks if the path of ancestors of an event matches the path of\n         * ancestors of the current node. In other words, checks if an event\n         * is a child of this node. As the check is done, the partial result\n         * is cached on `matchedDepth`, for future checks.\n         */\n        function matchPath(e) {\n            const { endTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(e);\n            if (matchedDepth === path.length) {\n                return true;\n            }\n            if (matchedDepth !== depth - 1) {\n                return false;\n            }\n            if (!endTime) {\n                return false;\n            }\n            if (!eventIdCallback) {\n                if (e === path[matchedDepth].event) {\n                    ++matchedDepth;\n                }\n                return false;\n            }\n            let id = eventIdCallback(e);\n            const groupId = eventGroupIdCallback ? eventGroupIdCallback(e) : '';\n            if (groupId) {\n                id += '/' + groupId;\n            }\n            if (id === path[matchedDepth].id) {\n                ++matchedDepth;\n            }\n            return false;\n        }\n        function onEndEvent() {\n            --depth;\n            if (matchedDepth > depth) {\n                matchedDepth = depth;\n            }\n        }\n        this.childrenInternal = children;\n        return children;\n    }\n    getRoot() {\n        return this.root;\n    }\n}\nexport class TopDownRootNode extends TopDownNode {\n    filter;\n    events;\n    startTime;\n    endTime;\n    eventGroupIdCallback;\n    doNotAggregate;\n    totalTime;\n    selfTime;\n    constructor(events, filters, startTime, endTime, doNotAggregate, eventGroupIdCallback) {\n        super('', null, null);\n        this.root = this;\n        this.events = events;\n        this.filter = (e) => filters.every(f => f.accept(e));\n        this.startTime = startTime;\n        this.endTime = endTime;\n        this.eventGroupIdCallback = eventGroupIdCallback;\n        this.doNotAggregate = doNotAggregate;\n        this.totalTime = endTime - startTime;\n        this.selfTime = this.totalTime;\n    }\n    children() {\n        return this.childrenInternal || this.grouppedTopNodes();\n    }\n    grouppedTopNodes() {\n        const flatNodes = super.children();\n        for (const node of flatNodes.values()) {\n            this.selfTime -= node.totalTime;\n        }\n        if (!this.eventGroupIdCallback) {\n            return flatNodes;\n        }\n        const groupNodes = new Map();\n        for (const node of flatNodes.values()) {\n            if (!node.event) {\n                continue;\n            }\n            const groupId = this.eventGroupIdCallback(node.event);\n            let groupNode = groupNodes.get(groupId);\n            if (!groupNode) {\n                groupNode = new GroupNode(groupId, this, node.event);\n                groupNodes.set(groupId, groupNode);\n            }\n            groupNode.addChild(node, node.selfTime, node.totalTime);\n        }\n        this.childrenInternal = groupNodes;\n        return groupNodes;\n    }\n    getEventGroupIdCallback() {\n        return this.eventGroupIdCallback;\n    }\n}\nexport class BottomUpRootNode extends Node {\n    childrenInternal;\n    events;\n    textFilter;\n    filter;\n    startTime;\n    endTime;\n    eventGroupIdCallback;\n    totalTime;\n    constructor(events, textFilter, filters, startTime, endTime, eventGroupIdCallback) {\n        super('', null);\n        this.childrenInternal = null;\n        this.events = events;\n        this.textFilter = textFilter;\n        this.filter = (e) => filters.every(f => f.accept(e));\n        this.startTime = startTime;\n        this.endTime = endTime;\n        this.eventGroupIdCallback = eventGroupIdCallback;\n        this.totalTime = endTime - startTime;\n    }\n    hasChildren() {\n        return true;\n    }\n    filterChildren(children) {\n        for (const [id, child] of children) {\n            // to provide better context to user only filter first (top) level.\n            if (child.event && child.depth <= 1 && !this.textFilter.accept(child.event)) {\n                children.delete(id);\n            }\n        }\n        return children;\n    }\n    children() {\n        if (!this.childrenInternal) {\n            this.childrenInternal = this.filterChildren(this.grouppedTopNodes());\n        }\n        return this.childrenInternal;\n    }\n    ungrouppedTopNodes() {\n        const root = this;\n        const startTime = this.startTime;\n        const endTime = this.endTime;\n        const nodeById = new Map();\n        const selfTimeStack = [endTime - startTime];\n        const firstNodeStack = [];\n        const totalTimeById = new Map();\n        Trace.Helpers.Trace.forEachEvent(this.events, {\n            onStartEvent,\n            onEndEvent,\n            startTime: Trace.Helpers.Timing.millisecondsToMicroseconds(this.startTime),\n            endTime: Trace.Helpers.Timing.millisecondsToMicroseconds(this.endTime),\n            eventFilter: this.filter,\n            ignoreAsyncEvents: false,\n        });\n        function onStartEvent(e) {\n            const { startTime: currentStartTime, endTime: currentEndTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(e);\n            const actualEndTime = currentEndTime !== undefined ? Math.min(currentEndTime, endTime) : endTime;\n            const duration = actualEndTime - Math.max(currentStartTime, startTime);\n            selfTimeStack[selfTimeStack.length - 1] -= duration;\n            selfTimeStack.push(duration);\n            const id = generateEventID(e);\n            const noNodeOnStack = !totalTimeById.has(id);\n            if (noNodeOnStack) {\n                totalTimeById.set(id, duration);\n            }\n            firstNodeStack.push(noNodeOnStack);\n        }\n        function onEndEvent(event) {\n            const id = generateEventID(event);\n            let node = nodeById.get(id);\n            if (!node) {\n                node = new BottomUpNode(root, id, event, false, root);\n                nodeById.set(id, node);\n            }\n            node.selfTime += selfTimeStack.pop() || 0;\n            if (firstNodeStack.pop()) {\n                node.totalTime += totalTimeById.get(id) || 0;\n                totalTimeById.delete(id);\n            }\n            if (firstNodeStack.length) {\n                node.setHasChildren(true);\n            }\n        }\n        this.selfTime = selfTimeStack.pop() || 0;\n        for (const pair of nodeById) {\n            if (pair[1].selfTime <= 0) {\n                nodeById.delete(pair[0]);\n            }\n        }\n        return nodeById;\n    }\n    grouppedTopNodes() {\n        const flatNodes = this.ungrouppedTopNodes();\n        if (!this.eventGroupIdCallback) {\n            return flatNodes;\n        }\n        const groupNodes = new Map();\n        for (const node of flatNodes.values()) {\n            if (!node.event) {\n                continue;\n            }\n            const groupId = this.eventGroupIdCallback(node.event);\n            let groupNode = groupNodes.get(groupId);\n            if (!groupNode) {\n                groupNode = new GroupNode(groupId, this, node.event);\n                groupNodes.set(groupId, groupNode);\n            }\n            groupNode.addChild(node, node.selfTime, node.selfTime);\n        }\n        return groupNodes;\n    }\n}\nexport class GroupNode extends Node {\n    childrenInternal;\n    isGroupNodeInternal;\n    constructor(id, parent, event) {\n        super(id, event);\n        this.childrenInternal = new Map();\n        this.parent = parent;\n        this.isGroupNodeInternal = true;\n    }\n    addChild(child, selfTime, totalTime) {\n        this.childrenInternal.set(child.id, child);\n        this.selfTime += selfTime;\n        this.totalTime += totalTime;\n        child.parent = this;\n    }\n    hasChildren() {\n        return true;\n    }\n    children() {\n        return this.childrenInternal;\n    }\n}\nexport class BottomUpNode extends Node {\n    parent;\n    root;\n    depth;\n    cachedChildren;\n    hasChildrenInternal;\n    constructor(root, id, event, hasChildren, parent) {\n        super(id, event);\n        this.parent = parent;\n        this.root = root;\n        this.depth = (parent.depth || 0) + 1;\n        this.cachedChildren = null;\n        this.hasChildrenInternal = hasChildren;\n    }\n    hasChildren() {\n        return this.hasChildrenInternal;\n    }\n    setHasChildren(value) {\n        this.hasChildrenInternal = value;\n    }\n    children() {\n        if (this.cachedChildren) {\n            return this.cachedChildren;\n        }\n        const selfTimeStack = [0];\n        const eventIdStack = [];\n        const eventStack = [];\n        const nodeById = new Map();\n        const startTime = this.root.startTime;\n        const endTime = this.root.endTime;\n        let lastTimeMarker = startTime;\n        const self = this;\n        Trace.Helpers.Trace.forEachEvent(this.root.events, {\n            onStartEvent,\n            onEndEvent,\n            startTime: Trace.Helpers.Timing.millisecondsToMicroseconds(startTime),\n            endTime: Trace.Helpers.Timing.millisecondsToMicroseconds(endTime),\n            eventFilter: this.root.filter,\n            ignoreAsyncEvents: false,\n        });\n        function onStartEvent(e) {\n            const { startTime: currentStartTime, endTime: currentEndTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(e);\n            const actualEndTime = currentEndTime !== undefined ? Math.min(currentEndTime, endTime) : endTime;\n            const duration = actualEndTime - Math.max(currentStartTime, startTime);\n            if (duration < 0) {\n                console.assert(false, 'Negative duration of an event');\n            }\n            selfTimeStack[selfTimeStack.length - 1] -= duration;\n            selfTimeStack.push(duration);\n            const id = generateEventID(e);\n            eventIdStack.push(id);\n            eventStack.push(e);\n        }\n        function onEndEvent(e) {\n            const { startTime: currentStartTime, endTime: currentEndTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(e);\n            const selfTime = selfTimeStack.pop();\n            const id = eventIdStack.pop();\n            eventStack.pop();\n            let node;\n            for (node = self; node.depth > 1; node = node.parent) {\n                if (node.id !== eventIdStack[eventIdStack.length + 1 - node.depth]) {\n                    return;\n                }\n            }\n            if (node.id !== id || eventIdStack.length < self.depth) {\n                return;\n            }\n            const childId = eventIdStack[eventIdStack.length - self.depth];\n            node = nodeById.get(childId);\n            if (!node) {\n                const event = eventStack[eventStack.length - self.depth];\n                const hasChildren = eventStack.length > self.depth;\n                node = new BottomUpNode(self.root, childId, event, hasChildren, self);\n                nodeById.set(childId, node);\n            }\n            const actualEndTime = currentEndTime !== undefined ? Math.min(currentEndTime, endTime) : endTime;\n            const totalTime = actualEndTime - Math.max(currentStartTime, lastTimeMarker);\n            node.selfTime += selfTime || 0;\n            node.totalTime += totalTime;\n            lastTimeMarker = actualEndTime;\n        }\n        this.cachedChildren = this.root.filterChildren(nodeById);\n        return this.cachedChildren;\n    }\n    searchTree(matchFunction, results) {\n        results = results || [];\n        if (this.event && matchFunction(this.event)) {\n            results.push(this);\n        }\n        return results;\n    }\n}\nexport function eventStackFrame(event) {\n    if (Trace.Types.Events.isProfileCall(event)) {\n        return event.callFrame;\n    }\n    const topFrame = event.args?.data?.stackTrace?.[0];\n    if (!topFrame) {\n        return null;\n    }\n    return { ...topFrame, scriptId: String(topFrame.scriptId) };\n}\nexport function generateEventID(event) {\n    if (Trace.Types.Events.isProfileCall(event)) {\n        const name = TimelineJSProfileProcessor.isNativeRuntimeFrame(event.callFrame) ?\n            TimelineJSProfileProcessor.nativeGroup(event.callFrame.functionName) :\n            event.callFrame.functionName;\n        const location = event.callFrame.scriptId || event.callFrame.url || '';\n        return `f:${name}@${location}`;\n    }\n    if (Trace.Types.Events.isTimeStamp(event)) {\n        return `${event.name}:${event.args.data.message}`;\n    }\n    return event.name;\n}\n//# sourceMappingURL=TimelineProfileTree.js.map","// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/* eslint-disable @typescript-eslint/naming-convention */\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nexport class TracingLayerTree extends SDK.LayerTreeBase.LayerTreeBase {\n    tileById;\n    paintProfilerModel;\n    constructor(target) {\n        super(target);\n        this.tileById = new Map();\n        this.paintProfilerModel = target && target.model(SDK.PaintProfiler.PaintProfilerModel);\n    }\n    async setLayers(root, layers, paints) {\n        const idsToResolve = new Set();\n        if (root) {\n            // This is a legacy code path for compatibility, as cc is removing\n            // layer tree hierarchy, this code will eventually be removed.\n            this.extractNodeIdsToResolve(idsToResolve, {}, root);\n        }\n        else if (layers) {\n            for (let i = 0; i < layers.length; ++i) {\n                this.extractNodeIdsToResolve(idsToResolve, {}, layers[i]);\n            }\n        }\n        await this.resolveBackendNodeIds(idsToResolve);\n        const oldLayersById = this.layersById;\n        this.layersById = new Map();\n        this.setContentRoot(null);\n        if (root) {\n            const convertedLayers = this.innerSetLayers(oldLayersById, root);\n            this.setRoot(convertedLayers);\n        }\n        else if (layers) {\n            const processedLayers = layers.map(this.innerSetLayers.bind(this, oldLayersById));\n            const contentRoot = this.contentRoot();\n            if (!contentRoot) {\n                throw new Error('Content root is not set.');\n            }\n            this.setRoot(contentRoot);\n            for (let i = 0; i < processedLayers.length; ++i) {\n                if (processedLayers[i].id() !== contentRoot.id()) {\n                    contentRoot.addChild(processedLayers[i]);\n                }\n            }\n        }\n        this.setPaints(paints);\n    }\n    setTiles(tiles) {\n        this.tileById = new Map();\n        for (const tile of tiles) {\n            this.tileById.set(tile.id, tile);\n        }\n    }\n    pictureForRasterTile(tileId) {\n        const tile = this.tileById.get('cc::Tile/' + tileId);\n        if (!tile) {\n            Common.Console.Console.instance().error(`Tile ${tileId} is missing`);\n            return Promise.resolve(null);\n        }\n        const layer = this.layerById(tile.layer_id);\n        if (!layer) {\n            Common.Console.Console.instance().error(`Layer ${tile.layer_id} for tile ${tileId} is not found`);\n            return Promise.resolve(null);\n        }\n        return layer.pictureForRect(tile.content_rect);\n    }\n    setPaints(paints) {\n        for (let i = 0; i < paints.length; ++i) {\n            const layer = this.layersById.get(paints[i].layerId());\n            if (layer) {\n                layer.addPaintEvent(paints[i]);\n            }\n        }\n    }\n    innerSetLayers(oldLayersById, payload) {\n        let layer = oldLayersById.get(payload.layer_id);\n        if (layer) {\n            layer.reset(payload);\n        }\n        else {\n            layer = new TracingLayer(this.paintProfilerModel, payload);\n        }\n        this.layersById.set(payload.layer_id, layer);\n        if (payload.owner_node) {\n            layer.setNode(this.backendNodeIdToNode().get(payload.owner_node) || null);\n        }\n        if (!this.contentRoot() && layer.drawsContent()) {\n            this.setContentRoot(layer);\n        }\n        for (let i = 0; payload.children && i < payload.children.length; ++i) {\n            layer.addChild(this.innerSetLayers(oldLayersById, payload.children[i]));\n        }\n        return layer;\n    }\n    extractNodeIdsToResolve(nodeIdsToResolve, seenNodeIds, payload) {\n        const backendNodeId = payload.owner_node;\n        if (backendNodeId && !this.backendNodeIdToNode().has(backendNodeId)) {\n            nodeIdsToResolve.add(backendNodeId);\n        }\n        for (let i = 0; payload.children && i < payload.children.length; ++i) {\n            this.extractNodeIdsToResolve(nodeIdsToResolve, seenNodeIds, payload.children[i]);\n        }\n    }\n}\nexport class TracingFrameLayerTree {\n    #target;\n    #snapshot;\n    #paints = [];\n    constructor(target, data) {\n        this.#target = target;\n        this.#snapshot = data.entry;\n        this.#paints = data.paints;\n    }\n    async layerTreePromise() {\n        const data = this.#snapshot.args.snapshot;\n        const viewport = data['device_viewport_size'];\n        const tiles = data['active_tiles'];\n        const rootLayer = data['active_tree']['root_layer'];\n        const layers = data['active_tree']['layers'];\n        const layerTree = new TracingLayerTree(this.#target);\n        layerTree.setViewportSize(viewport);\n        layerTree.setTiles(tiles);\n        await layerTree.setLayers(rootLayer, layers, this.#paints || []);\n        return layerTree;\n    }\n    paints() {\n        return this.#paints;\n    }\n}\nexport class TracingLayer {\n    parentLayerId;\n    parentInternal;\n    layerId;\n    nodeInternal;\n    offsetXInternal;\n    offsetYInternal;\n    widthInternal;\n    heightInternal;\n    childrenInternal;\n    quadInternal;\n    scrollRectsInternal;\n    gpuMemoryUsageInternal;\n    paints;\n    compositingReasons;\n    compositingReasonIds;\n    drawsContentInternal;\n    paintProfilerModel;\n    constructor(paintProfilerModel, payload) {\n        this.parentLayerId = null;\n        this.parentInternal = null;\n        this.layerId = '';\n        this.nodeInternal = null;\n        this.offsetXInternal = -1;\n        this.offsetYInternal = -1;\n        this.widthInternal = -1;\n        this.heightInternal = -1;\n        this.childrenInternal = [];\n        this.quadInternal = [];\n        this.scrollRectsInternal = [];\n        this.gpuMemoryUsageInternal = -1;\n        this.paints = [];\n        this.compositingReasons = [];\n        this.compositingReasonIds = [];\n        this.drawsContentInternal = false;\n        this.paintProfilerModel = paintProfilerModel;\n        this.reset(payload);\n    }\n    reset(payload) {\n        this.nodeInternal = null;\n        this.layerId = String(payload.layer_id);\n        this.offsetXInternal = payload.position[0];\n        this.offsetYInternal = payload.position[1];\n        this.widthInternal = payload.bounds.width;\n        this.heightInternal = payload.bounds.height;\n        this.childrenInternal = [];\n        this.parentLayerId = null;\n        this.parentInternal = null;\n        this.quadInternal = payload.layer_quad || [];\n        this.createScrollRects(payload);\n        this.compositingReasons = payload.compositing_reasons || [];\n        this.compositingReasonIds = payload.compositing_reason_ids || [];\n        this.drawsContentInternal = Boolean(payload.draws_content);\n        this.gpuMemoryUsageInternal = payload.gpu_memory_usage;\n        this.paints = [];\n    }\n    id() {\n        return this.layerId;\n    }\n    parentId() {\n        return this.parentLayerId;\n    }\n    parent() {\n        return this.parentInternal;\n    }\n    isRoot() {\n        return !this.parentId();\n    }\n    children() {\n        return this.childrenInternal;\n    }\n    addChild(childParam) {\n        const child = childParam;\n        if (child.parentInternal) {\n            console.assert(false, 'Child already has a parent');\n        }\n        this.childrenInternal.push(child);\n        child.parentInternal = this;\n        child.parentLayerId = this.layerId;\n    }\n    setNode(node) {\n        this.nodeInternal = node;\n    }\n    node() {\n        return this.nodeInternal;\n    }\n    nodeForSelfOrAncestor() {\n        let layer = this;\n        for (; layer; layer = layer.parent()) {\n            if (layer.node()) {\n                return layer.node();\n            }\n        }\n        return null;\n    }\n    offsetX() {\n        return this.offsetXInternal;\n    }\n    offsetY() {\n        return this.offsetYInternal;\n    }\n    width() {\n        return this.widthInternal;\n    }\n    height() {\n        return this.heightInternal;\n    }\n    transform() {\n        return null;\n    }\n    quad() {\n        return this.quadInternal;\n    }\n    anchorPoint() {\n        return [0.5, 0.5, 0];\n    }\n    invisible() {\n        return false;\n    }\n    paintCount() {\n        return 0;\n    }\n    lastPaintRect() {\n        return null;\n    }\n    scrollRects() {\n        return this.scrollRectsInternal;\n    }\n    stickyPositionConstraint() {\n        // TODO(smcgruer): Provide sticky layer information in traces.\n        return null;\n    }\n    gpuMemoryUsage() {\n        return this.gpuMemoryUsageInternal;\n    }\n    snapshots() {\n        return this.paints.map(async (paint) => {\n            if (!this.paintProfilerModel) {\n                return null;\n            }\n            const snapshot = await getPaintProfilerSnapshot(this.paintProfilerModel, paint);\n            if (!snapshot) {\n                return null;\n            }\n            const rect = { x: snapshot.rect[0], y: snapshot.rect[1], width: snapshot.rect[2], height: snapshot.rect[3] };\n            return { rect, snapshot: snapshot.snapshot };\n        });\n    }\n    async pictureForRect(targetRect) {\n        return Promise.all(this.paints.map(paint => paint.picture())).then(pictures => {\n            const filteredPictures = pictures.filter(picture => picture && rectsOverlap(picture.rect, targetRect));\n            const fragments = filteredPictures.map(picture => ({ x: picture.rect[0], y: picture.rect[1], picture: picture.serializedPicture }));\n            if (!fragments.length || !this.paintProfilerModel) {\n                return null;\n            }\n            const x0 = fragments.reduce((min, item) => Math.min(min, item.x), Infinity);\n            const y0 = fragments.reduce((min, item) => Math.min(min, item.y), Infinity);\n            // Rect is in layer content coordinates, make it relative to picture by offsetting to the top left corner.\n            const rect = { x: targetRect[0] - x0, y: targetRect[1] - y0, width: targetRect[2], height: targetRect[3] };\n            return this.paintProfilerModel.loadSnapshotFromFragments(fragments).then(snapshot => snapshot ? { rect, snapshot } : null);\n        });\n        function segmentsOverlap(a1, a2, b1, b2) {\n            console.assert(a1 <= a2 && b1 <= b2, 'segments should be specified as ordered pairs');\n            return a2 > b1 && a1 < b2;\n        }\n        function rectsOverlap(a, b) {\n            return segmentsOverlap(a[0], a[0] + a[2], b[0], b[0] + b[2]) &&\n                segmentsOverlap(a[1], a[1] + a[3], b[1], b[1] + b[3]);\n        }\n    }\n    scrollRectsFromParams(params, type) {\n        return { rect: { x: params[0], y: params[1], width: params[2], height: params[3] }, type };\n    }\n    createScrollRects(payload) {\n        const nonPayloadScrollRects = [];\n        if (payload.non_fast_scrollable_region) {\n            nonPayloadScrollRects.push(this.scrollRectsFromParams(payload.non_fast_scrollable_region, 'NonFastScrollable'));\n        }\n        if (payload.touch_event_handler_region) {\n            nonPayloadScrollRects.push(this.scrollRectsFromParams(payload.touch_event_handler_region, \"TouchEventHandler\" /* Protocol.LayerTree.ScrollRectType.TouchEventHandler */));\n        }\n        if (payload.wheel_event_handler_region) {\n            nonPayloadScrollRects.push(this.scrollRectsFromParams(payload.wheel_event_handler_region, \"WheelEventHandler\" /* Protocol.LayerTree.ScrollRectType.WheelEventHandler */));\n        }\n        if (payload.scroll_event_handler_region) {\n            nonPayloadScrollRects.push(this.scrollRectsFromParams(payload.scroll_event_handler_region, \"RepaintsOnScroll\" /* Protocol.LayerTree.ScrollRectType.RepaintsOnScroll */));\n        }\n        // SDK.LayerBaseTree.Layer.ScrollRectType and Protocol.LayerTree.ScrollRectType are the\n        // same type, but we need to use the indirection of the nonPayloadScrollRects since\n        // the ScrollRectType is defined as a string in SDK.LayerBaseTree.Layer.ScrollRectType.\n        this.scrollRectsInternal = nonPayloadScrollRects;\n    }\n    addPaintEvent(paint) {\n        this.paints.push(paint);\n    }\n    requestCompositingReasons() {\n        return Promise.resolve(this.compositingReasons);\n    }\n    requestCompositingReasonIds() {\n        return Promise.resolve(this.compositingReasonIds);\n    }\n    drawsContent() {\n        return this.drawsContentInternal;\n    }\n}\nasync function getPaintProfilerSnapshot(paintProfilerModel, paint) {\n    const picture = paint.picture();\n    if (!picture || !paintProfilerModel) {\n        return null;\n    }\n    const snapshot = await paintProfilerModel.loadSnapshot(picture.serializedPicture);\n    return snapshot ? { rect: picture.rect, snapshot } : null;\n}\n//# sourceMappingURL=TracingLayerTree.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as ThemeSupport from '../../../ui/legacy/theme_support/theme_support.js';\nexport function extensionEntryColor(event) {\n    const color = event.args.color;\n    // Use a default value for when the color of the extension entry\n    // was not passed or was set an unknown value.\n    let themeColor = '--ref-palette-primary70';\n    switch (color) {\n        case 'primary':\n            themeColor = '--ref-palette-primary70';\n            break;\n        case 'primary-light':\n            themeColor = '--ref-palette-primary80';\n            break;\n        case 'primary-dark':\n            themeColor = '--ref-palette-primary60';\n            break;\n        case 'secondary':\n            themeColor = '--ref-palette-purple80';\n            break;\n        case 'secondary-light':\n            themeColor = '--ref-palette-purple90';\n            break;\n        case 'secondary-dark':\n            themeColor = '--ref-palette-purple70';\n            break;\n        case 'tertiary':\n            themeColor = '--ref-palette-tertiary70';\n            break;\n        case 'tertiary-light':\n            themeColor = '--ref-palette-tertiary80';\n            break;\n        case 'tertiary-dark':\n            themeColor = '--ref-palette-tertiary60';\n            break;\n        case 'warning':\n            themeColor = '--ref-palette-yellow70';\n            break;\n        case 'error':\n            themeColor = '--ref-palette-error60';\n            break;\n    }\n    return ThemeSupport.ThemeSupport.instance().getComputedValue(themeColor);\n}\n//# sourceMappingURL=ExtensionUI.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Trace from '../../models/trace/trace.js';\nconst SelectionRangeSymbol = Symbol('SelectionRange');\nexport class TimelineSelection {\n    startTime;\n    endTime;\n    object;\n    constructor(startTime, endTime, object) {\n        this.startTime = startTime;\n        this.endTime = endTime;\n        this.object = object;\n    }\n    static isLegacyTimelineFrame(object) {\n        return typeof object !== 'symbol' && Trace.Types.Events.isLegacyTimelineFrame(object);\n    }\n    static fromFrame(frame) {\n        return new TimelineSelection(Trace.Helpers.Timing.microSecondsToMilliseconds(frame.startTime), Trace.Helpers.Timing.microSecondsToMilliseconds(frame.endTime), frame);\n    }\n    static isSyntheticNetworkRequestDetailsEventSelection(object) {\n        if (TimelineSelection.isLegacyTimelineFrame(object) || TimelineSelection.isRangeSelection(object)) {\n            return false;\n        }\n        // At this point we know the selection is a raw trace event, so we just\n        // need to check it's the right type of raw event.\n        return Trace.Types.Events.isSyntheticNetworkRequest(object);\n    }\n    static isNetworkEventSelection(object) {\n        if (TimelineSelection.isLegacyTimelineFrame(object) || TimelineSelection.isRangeSelection(object)) {\n            return false;\n        }\n        // At this point we know the selection is a raw trace event, so we just\n        // need to check it's the right type of raw event.\n        return Trace.Types.Events.isNetworkTrackEntry(object);\n    }\n    static isTraceEventSelection(object) {\n        // Trace events are just raw objects, so now we have to confirm it is a trace event by ruling everything else out.\n        if (TimelineSelection.isLegacyTimelineFrame(object) || TimelineSelection.isRangeSelection(object)) {\n            return false;\n        }\n        // Although Network Requests are trace events, in TimelineSelection we\n        // treat Network requests distinctly\n        if (Trace.Types.Events.isSyntheticNetworkRequest(object)) {\n            return false;\n        }\n        return true;\n    }\n    static fromTraceEvent(event) {\n        const { startTime, endTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n        return new TimelineSelection(startTime, Trace.Types.Timing.MilliSeconds(endTime || (startTime + 1)), event);\n    }\n    static isRangeSelection(object) {\n        return object === SelectionRangeSymbol;\n    }\n    static fromRange(startTime, endTime) {\n        return new TimelineSelection(Trace.Types.Timing.MilliSeconds(startTime), Trace.Types.Timing.MilliSeconds(endTime), SelectionRangeSymbol);\n    }\n}\n//# sourceMappingURL=TimelineSelection.js.map","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n * Copyright (C) 2012 Intel Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as CodeHighlighter from '../../ui/components/code_highlighter/code_highlighter.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport codeHighlighterStyles from '../../ui/components/code_highlighter/codeHighlighter.css.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport imagePreviewStyles from '../../ui/legacy/components/utils/imagePreview.css.js';\nimport * as LegacyComponents from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport { CLSRect } from './CLSLinkifier.js';\nimport * as TimelineComponents from './components/components.js';\nimport * as Extensions from './extensions/extensions.js';\nimport { Tracker } from './FreshRecording.js';\nimport { ModificationsManager } from './ModificationsManager.js';\nimport { targetForEvent } from './TargetForEvent.js';\nimport { TimelinePanel } from './TimelinePanel.js';\nimport { TimelineSelection } from './TimelineSelection.js';\nimport * as Utils from './utils/utils.js';\nconst UIStrings = {\n    /**\n     *@description Text that only contain a placeholder\n     *@example {100ms (at 200ms)} PH1\n     */\n    emptyPlaceholder: '{PH1}', // eslint-disable-line rulesdir/l10n_no_locked_or_placeholder_only_phrase\n    /**\n     *@description Text for timestamps of items\n     */\n    timestamp: 'Timestamp',\n    /**\n     *@description Text shown next to the interaction event's ID in the detail view.\n     */\n    interactionID: 'ID',\n    /**\n     *@description Text shown next to the interaction event's input delay time in the detail view.\n     */\n    inputDelay: 'Input delay',\n    /**\n     *@description Text shown next to the interaction event's thread processing duration in the detail view.\n     */\n    processingDuration: 'Processing duration',\n    /**\n     *@description Text shown next to the interaction event's presentation delay time in the detail view.\n     */\n    presentationDelay: 'Presentation delay',\n    /**\n     *@description Text shown when the user has selected an event that represents script compiliation.\n     */\n    compile: 'Compile',\n    /**\n     *@description Text shown when the user selects an event that represents script parsing.\n     */\n    parse: 'Parse',\n    /**\n     *@description Text with two placeholders separated by a colon\n     *@example {Node removed} PH1\n     *@example {div#id1} PH2\n     */\n    sS: '{PH1}: {PH2}',\n    /**\n     *@description Details text used to show the amount of data collected.\n     *@example {30 MB} PH1\n     */\n    sCollected: '{PH1} collected',\n    /**\n     *@description Text used to show a URL to a script and the relevant line numbers.\n     *@example {https://example.com/foo.js} PH1\n     *@example {2} PH2\n     *@example {4} PH3\n     */\n    sSs: '{PH1} [{PH2}…{PH3}]',\n    /**\n     *@description Text used to show a URL to a script and the starting line\n     *             number - used when there is no end line number available.\n     *@example {https://example.com/foo.js} PH1\n     *@example {2} PH2\n     */\n    sSSquareBrackets: '{PH1} [{PH2}…]',\n    /**\n     *@description Text that is usually a hyperlink to more documentation\n     */\n    learnMore: 'Learn more',\n    /**\n     *@description Text referring to the status of the browser's compilation cache.\n     */\n    compilationCacheStatus: 'Compilation cache status',\n    /**\n     *@description Text referring to the size of the browser's compiliation cache.\n     */\n    compilationCacheSize: 'Compilation cache size',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel. \"Compilation\n     * cache\" refers to the code cache described at\n     * https://v8.dev/blog/code-caching-for-devs . This label is followed by the\n     * type of code cache data used, either \"normal\" or \"full\" as described in the\n     * linked article.\n     */\n    compilationCacheKind: 'Compilation cache kind',\n    /**\n     *@description Text used to inform the user that the script they are looking\n     *             at was loaded from the browser's cache.\n     */\n    scriptLoadedFromCache: 'script loaded from cache',\n    /**\n     *@description Text to inform the user that the script they are looking at\n     *             was unable to be loaded from the browser's cache.\n     */\n    failedToLoadScriptFromCache: 'failed to load script from cache',\n    /**\n     *@description Text to inform the user that the script they are looking at was not eligible to be loaded from the browser's cache.\n     */\n    scriptNotEligibleToBeLoadedFromCache: 'script not eligible',\n    /**\n     *@description Text for the total time of something\n     */\n    totalTime: 'Total time',\n    /**\n     *@description Time of a single activity, as opposed to the total time\n     */\n    selfTime: 'Self time',\n    /**\n     *@description Label in the summary view in the Performance panel for a number which indicates how much managed memory has been reclaimed by performing Garbage Collection\n     */\n    collected: 'Collected',\n    /**\n     *@description Text for a programming function\n     */\n    function: 'Function',\n    /**\n     *@description Text for referring to the ID of a timer.\n     */\n    timerId: 'Timer ID',\n    /**\n     *@description Text for referring to a timer that has timed-out and therefore is being removed.\n     */\n    timeout: 'Timeout',\n    /**\n     *@description Text used to indicate that a timer is repeating (e.g. every X seconds) rather than a one off.\n     */\n    repeats: 'Repeats',\n    /**\n     *@description Text for referring to the ID of a callback function installed by an event.\n     */\n    callbackId: 'Callback ID',\n    /**\n     *@description Text for a module, the programming concept\n     */\n    module: 'Module',\n    /**\n     *@description Label for a group of JavaScript files\n     */\n    script: 'Script',\n    /**\n     *@description Text used to tell a user that a compilation trace event was streamed.\n     */\n    streamed: 'Streamed',\n    /**\n     *@description Text to indicate if a compilation event was eager.\n     */\n    eagerCompile: 'Compiling all functions eagerly',\n    /**\n     *@description Text to refer to the URL associated with a given event.\n     */\n    url: 'Url',\n    /**\n     *@description Text to indicate to the user the size of the cache (as a filesize - e.g. 5mb).\n     */\n    producedCacheSize: 'Produced cache size',\n    /**\n     *@description Text to indicate to the user the amount of the cache (as a filesize - e.g. 5mb) that has been used.\n     */\n    consumedCacheSize: 'Consumed cache size',\n    /**\n     *@description Title for a group of cities\n     */\n    location: 'Location',\n    /**\n     *@description Text used to show a coordinate pair (e.g. (3, 2)).\n     *@example {2} PH1\n     *@example {2} PH2\n     */\n    sSCurlyBrackets: '({PH1}, {PH2})',\n    /**\n     *@description Text used to indicate to the user they are looking at the physical dimensions of a shape that was drawn by the browser.\n     */\n    dimensions: 'Dimensions',\n    /**\n     *@description Text used to show the user the dimensions of a shape and indicate its area (e.g. 3x2).\n     *@example {2} PH1\n     *@example {2} PH2\n     */\n    sSDimensions: '{PH1} × {PH2}',\n    /**\n     *@description Related node label in Timeline UIUtils of the Performance panel\n     */\n    layerRoot: 'Layer root',\n    /**\n     *@description Related node label in Timeline UIUtils of the Performance panel\n     */\n    ownerElement: 'Owner element',\n    /**\n     *@description Text used to show the user the URL of the image they are viewing.\n     */\n    imageUrl: 'Image URL',\n    /**\n     *@description Text used to show the user that the URL they are viewing is loading a CSS stylesheet.\n     */\n    stylesheetUrl: 'Stylesheet URL',\n    /**\n     *@description Text used next to a number to show the user how many elements were affected.\n     */\n    elementsAffected: 'Elements affected',\n    /**\n     *@description Text used next to a number to show the user how many nodes required the browser to update and re-layout the page.\n     */\n    nodesThatNeedLayout: 'Nodes that need layout',\n    /**\n     *@description Text used to show the amount in a subset - e.g. \"2 of 10\".\n     *@example {2} PH1\n     *@example {10} PH2\n     */\n    sOfS: '{PH1} of {PH2}',\n    /**\n     *@description Related node label in Timeline UIUtils of the Performance panel\n     */\n    layoutRoot: 'Layout root',\n    /**\n     *@description Text used when viewing an event that can have a custom message attached.\n     */\n    message: 'Message',\n    /**\n     *@description Text used to tell the user they are viewing an event that has a function embedded in it, which is referred to as the \"callback function\".\n     */\n    callbackFunction: 'Callback function',\n    /**\n     *@description Text used to show the relevant range of a file - e.g. \"lines 2-10\".\n     */\n    range: 'Range',\n    /**\n     *@description Text used to refer to the amount of time some event or code was given to complete within.\n     */\n    allottedTime: 'Allotted time',\n    /**\n     *@description Text used to tell a user that a particular event or function was automatically run by a timeout.\n     */\n    invokedByTimeout: 'Invoked by timeout',\n    /**\n     *@description Text that refers to some types\n     */\n    type: 'Type',\n    /**\n     *@description Text for the size of something\n     */\n    size: 'Size',\n    /**\n     *@description Text for the details of something\n     */\n    details: 'Details',\n    /**\n     *@description Title in Timeline for Cumulative Layout Shifts\n     */\n    cumulativeLayoutShifts: 'Cumulative Layout Shifts',\n    /**\n     *@description Text for the link to the evolved CLS website\n     */\n    evolvedClsLink: 'evolved',\n    /**\n     *@description Warning in Timeline that CLS can cause a poor user experience. It contains a link to inform developers about the recent changes to how CLS is measured. The new CLS metric is said to have evolved from the previous version.\n     *@example {Link to web.dev/metrics} PH1\n     *@example {Link to web.dev/evolving-cls which will always have the text 'evolved'} PH2\n     */\n    sCLSInformation: '{PH1} can result in poor user experiences. It has recently {PH2}.',\n    /**\n     *@description Text to indicate an item is a warning\n     */\n    warning: 'Warning',\n    /**\n     *@description Title for the Timeline CLS Score\n     */\n    score: 'Score',\n    /**\n     *@description Text in Timeline for the cumulative CLS score\n     */\n    cumulativeScore: 'Cumulative score',\n    /**\n     *@description Text in Timeline for the current CLS score\n     */\n    currentClusterScore: 'Current cluster score',\n    /**\n     *@description Text in Timeline for the current CLS cluster\n     */\n    currentClusterId: 'Current cluster ID',\n    /**\n     *@description Text in Timeline for whether input happened recently\n     */\n    hadRecentInput: 'Had recent input',\n    /**\n     *@description Text in Timeline indicating that input has happened recently\n     */\n    yes: 'Yes',\n    /**\n     *@description Text in Timeline indicating that input has not happened recently\n     */\n    no: 'No',\n    /**\n     *@description Label for Cumulative Layout records, indicating where they moved from\n     */\n    movedFrom: 'Moved from',\n    /**\n     *@description Label for Cumulative Layout records, indicating where they moved to\n     */\n    movedTo: 'Moved to',\n    /**\n     *@description Text that indicates a particular HTML element or node is related to what the user is viewing.\n     */\n    relatedNode: 'Related node',\n    /**\n     *@description Text for previewing items\n     */\n    preview: 'Preview',\n    /**\n     *@description Text used to refer to the total time summed up across multiple events.\n     */\n    aggregatedTime: 'Aggregated time',\n    /**\n     *@description Text for the duration of something\n     */\n    duration: 'Duration',\n    /**\n     *@description Text for the stack trace of the initiator of something. The Initiator is the event or factor that directly triggered or precipitated a subsequent action.\n     */\n    initiatorStackTrace: 'Initiator stack trace',\n    /**\n     *@description Text for the event initiated by another one\n     */\n    initiatedBy: 'Initiated by',\n    /**\n     *@description Text for the event that is an initiator for another one\n     */\n    initiatorFor: 'Initiator for',\n    /**\n     *@description Text for the underlying data behing a specific flamechart selection. Trace events are the browser instrumentation that are emitted as JSON objects.\n     */\n    traceEvent: 'Trace event',\n    /**\n     *@description Call site stack label in Timeline UIUtils of the Performance panel\n     */\n    timerInstalled: 'Timer installed',\n    /**\n     *@description Call site stack label in Timeline UIUtils of the Performance panel\n     */\n    animationFrameRequested: 'Animation frame requested',\n    /**\n     *@description Call site stack label in Timeline UIUtils of the Performance panel\n     */\n    idleCallbackRequested: 'Idle callback requested',\n    /**\n     *@description Stack label in Timeline UIUtils of the Performance panel\n     */\n    recalculationForced: 'Recalculation forced',\n    /**\n     *@description Call site stack label in Timeline UIUtils of the Performance panel\n     */\n    firstLayoutInvalidation: 'First layout invalidation',\n    /**\n     *@description Stack label in Timeline UIUtils of the Performance panel\n     */\n    layoutForced: 'Layout forced',\n    /**\n     *@description Label in front of CSS property (eg `opacity`) being animated or a CSS animation name (eg `layer-4-fade-in-out`)\n     */\n    animating: 'Animating',\n    /**\n     *@description Label in front of reasons why a CSS animation wasn't composited (aka hardware accelerated)\n     */\n    compositingFailed: 'Compositing failed',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to accelerated animations being disabled. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedAcceleratedAnimationsDisabled: 'Accelerated animations disabled',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to DevTools suppressing the effect. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedEffectSuppressedByDevtools: 'Effect suppressed by DevTools ',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to the animation or effect being invalid. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedInvalidAnimationOrEffect: 'Invalid animation or effect',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to an effect having unsupported timing parameters. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedEffectHasUnsupportedTimingParams: 'Effect has unsupported timing parameters',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to an effect having a composite mode which is not `replace`. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedEffectHasNonReplaceCompositeMode: 'Effect has composite mode other than \"replace\"',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to the target being in an invalid compositing state. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedTargetHasInvalidCompositingState: 'Target has invalid compositing state',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to another animation on the same target being incompatible. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedTargetHasIncompatibleAnimations: 'Target has another animation which is incompatible',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to the target having a CSS offset. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedTargetHasCSSOffset: 'Target has CSS offset',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to the animation affecting non-CSS properties. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedAnimationAffectsNonCSSProperties: 'Animation affects non-CSS properties',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to the transform-related property not being able to be animated on the target. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedTransformRelatedPropertyCannotBeAcceleratedOnTarget: 'Transform-related property cannot be accelerated on target',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to a `transform` property being dependent on the size of the element itself. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedTransformDependsBoxSize: 'Transform-related property depends on box size',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to a `filter` property possibly moving pixels. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedFilterRelatedPropertyMayMovePixels: 'Filter-related property may move pixels',\n    /**\n     * @description [ICU Syntax] Descriptive reason for why a user-provided animation failed to be optimized by the browser due to the animated CSS property not being supported on the compositor. Shown in a table with a list of other potential failure reasons.\n     * @example {height, width} properties\n     */\n    compositingFailedUnsupportedCSSProperty: `{propertyCount, plural,\n    =1 {Unsupported CSS property: {properties}}\n    other {Unsupported CSS properties: {properties}}\n  }`,\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to mixing keyframe value types. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedMixedKeyframeValueTypes: 'Mixed keyframe value types',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to the timeline source being in an invalid compositing state. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedTimelineSourceHasInvalidCompositingState: 'Timeline source has invalid compositing state',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to the animation having no visible change. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedAnimationHasNoVisibleChange: 'Animation has no visible change',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to an effect affecting an important property. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedAffectsImportantProperty: 'Effect affects a property with !important',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to the SVG target having an independent transfrom property. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedSVGTargetHasIndependentTransformProperty: 'SVG target has independent transform property',\n    /** Descriptive reason for why a user-provided animation failed to be optimized by the browser due to an unknown reason. Shown in a table with a list of other potential failure reasons.  */\n    compositingFailedUnknownReason: 'Unknown Reason',\n    /**\n     *@description Text for the execution stack trace\n     */\n    stackTrace: 'Stack trace',\n    /**\n     *@description Text used to show any invalidations for a particular event that caused the browser to have to do more work to update the page.\n     * @example {2} PH1\n     */\n    invalidations: 'Invalidations ({PH1} total)',\n    /**\n     * @description Text in Timeline UIUtils of the Performance panel. Phrase is followed by a number of milliseconds.\n     * Some events or tasks might have been only started, but have not ended yet. Such events or tasks are considered\n     * \"pending\".\n     */\n    pendingFor: 'Pending for',\n    /**\n     *@description Noun label for a stack trace which indicates the first time some condition was invalidated.\n     */\n    firstInvalidated: 'First invalidated',\n    /**\n     *@description Title of the paint profiler, old name of the performance pane\n     */\n    paintProfiler: 'Paint profiler',\n    /**\n     *@description Text in Timeline Flame Chart View of the Performance panel\n     *@example {Frame} PH1\n     *@example {10ms} PH2\n     */\n    sAtS: '{PH1} at {PH2}',\n    /**\n     *@description Text used next to a time to indicate that the particular event took that much time itself. In context this might look like \"3ms blink.console (self)\"\n     *@example {blink.console} PH1\n     */\n    sSelf: '{PH1} (self)',\n    /**\n     *@description Text used next to a time to indicate that the event's children took that much time. In context this might look like \"3ms blink.console (children)\"\n     *@example {blink.console} PH1\n     */\n    sChildren: '{PH1} (children)',\n    /**\n     *@description Text used to show the user how much time the browser spent on rendering (drawing the page onto the screen).\n     */\n    timeSpentInRendering: 'Time spent in rendering',\n    /**\n     *@description Text for a rendering frame\n     */\n    frame: 'Frame',\n    /**\n     *@description Text used to refer to the duration of an event at a given offset - e.g. \"2ms at 10ms\" which can be read as \"2ms starting after 10ms\".\n     *@example {10ms} PH1\n     *@example {10ms} PH2\n     */\n    sAtSParentheses: '{PH1} (at {PH2})',\n    /**\n     *@description Text of a DOM element in Timeline UIUtils of the Performance panel\n     */\n    UnknownNode: '[ unknown node ]',\n    /**\n     *@description Text used to refer to a particular element and the file it was referred to in.\n     *@example {node} PH1\n     *@example {app.js} PH2\n     */\n    invalidationWithCallFrame: '{PH1} at {PH2}',\n    /**\n     *@description Text indicating that something is outside of the Performace Panel Timeline Minimap range\n     */\n    outsideBreadcrumbRange: '(outside of the breadcrumb range)',\n    /**\n     *@description Text indicating that something is hidden from the Performace Panel Timeline\n     */\n    entryIsHidden: '(entry is hidden)',\n    /**\n     * @description Title of a row in the details view for a `Recalculate Styles` event that contains more info about selector stats tracing.\n     */\n    selectorStatsTitle: 'Selector stats',\n    /**\n     * @description Info text that explains to the user how to enable selector stats tracing.\n     * @example {Setting Name} PH1\n     */\n    sSelectorStatsInfo: 'Select \"{PH1}\" to collect detailed CSS selector matching statistics.',\n    /**\n     * @description Label for a description text of a metric.\n     */\n    description: 'Description',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineUIUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet eventDispatchDesciptors;\nlet colorGenerator;\nexport class TimelineUIUtils {\n    static frameDisplayName(frame) {\n        if (!TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor.isNativeRuntimeFrame(frame)) {\n            return UI.UIUtils.beautifyFunctionName(frame.functionName);\n        }\n        const nativeGroup = TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor.nativeGroup(frame.functionName);\n        switch (nativeGroup) {\n            case \"Compile\" /* TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor.NativeGroups.COMPILE */:\n                return i18nString(UIStrings.compile);\n            case \"Parse\" /* TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor.NativeGroups.PARSE */:\n                return i18nString(UIStrings.parse);\n        }\n        return frame.functionName;\n    }\n    static testContentMatching(traceEvent, regExp, parsedTrace) {\n        const title = TimelineUIUtils.eventStyle(traceEvent).title;\n        const tokens = [title];\n        if (Trace.Types.Events.isProfileCall(traceEvent)) {\n            // In the future this case will not be possible - wherever we call this\n            // function we will be able to pass in the data from the new engine. But\n            // currently this is called in a variety of places including from the\n            // legacy model which does not have a reference to the new engine's data.\n            // So if we are missing the data, we just fallback to the name from the\n            // callFrame.\n            if (!parsedTrace || !parsedTrace.Samples) {\n                tokens.push(traceEvent.callFrame.functionName);\n            }\n            else {\n                tokens.push(Trace.Handlers.ModelHandlers.Samples.getProfileCallFunctionName(parsedTrace.Samples, traceEvent));\n            }\n        }\n        if (parsedTrace) {\n            const url = Trace.Extras.URLForEntry.getNonResolved(parsedTrace, traceEvent);\n            if (url) {\n                tokens.push(url);\n            }\n        }\n        // This works for both legacy and new engine events.\n        appendObjectProperties(traceEvent.args, 2);\n        const result = tokens.join('|').match(regExp);\n        return result ? result.length > 0 : false;\n        function appendObjectProperties(object, depth) {\n            if (!depth) {\n                return;\n            }\n            for (const key in object) {\n                const value = object[key];\n                if (typeof value === 'string') {\n                    tokens.push(value);\n                }\n                else if (typeof value === 'number') {\n                    tokens.push(String(value));\n                }\n                else if (typeof value === 'object' && value !== null) {\n                    appendObjectProperties(value, depth - 1);\n                }\n            }\n        }\n    }\n    static eventStyle(event) {\n        if (Trace.Types.Events.isProfileCall(event) && event.callFrame.functionName === '(idle)') {\n            return new TimelineComponents.EntryStyles.TimelineRecordStyle(event.name, TimelineComponents.EntryStyles.getCategoryStyles().idle);\n        }\n        if (event.cat === Trace.Types.Events.Categories.Console || event.cat === Trace.Types.Events.Categories.UserTiming) {\n            return new TimelineComponents.EntryStyles.TimelineRecordStyle(event.name, TimelineComponents.EntryStyles.getCategoryStyles()['scripting']);\n        }\n        return TimelineComponents.EntryStyles.getEventStyle(event.name) ??\n            new TimelineComponents.EntryStyles.TimelineRecordStyle(event.name, TimelineComponents.EntryStyles.getCategoryStyles().other);\n    }\n    static eventColor(event) {\n        if (Trace.Types.Events.isProfileCall(event)) {\n            const frame = event.callFrame;\n            if (TimelineUIUtils.isUserFrame(frame)) {\n                return TimelineUIUtils.colorForId(frame.url);\n            }\n        }\n        if (Trace.Types.Extensions.isSyntheticExtensionEntry(event)) {\n            return Extensions.ExtensionUI.extensionEntryColor(event);\n        }\n        let parsedColor = TimelineUIUtils.eventStyle(event).category.getComputedColorValue();\n        // This event is considered idle time but still rendered as a scripting event here\n        // to connect the StreamingCompileScriptParsing events it belongs to.\n        if (event.name === \"v8.parseOnBackgroundWaiting\" /* Trace.Types.Events.Name.STREAMING_COMPILE_SCRIPT_WAITING */) {\n            parsedColor = TimelineComponents.EntryStyles.getCategoryStyles().scripting.getComputedColorValue();\n            if (!parsedColor) {\n                throw new Error('Unable to parse color from getCategoryStyles().scripting.color');\n            }\n        }\n        return parsedColor;\n    }\n    static eventTitle(event) {\n        // Profile call events do not have a args.data property, thus, we\n        // need to check for profile calls in the beginning of this\n        // function.\n        if (Trace.Types.Events.isProfileCall(event)) {\n            const maybeResolvedData = Utils.SourceMapsResolver.SourceMapsResolver.resolvedCodeLocationForEntry(event);\n            const displayName = maybeResolvedData?.name || TimelineUIUtils.frameDisplayName(event.callFrame);\n            return displayName;\n        }\n        if (event.name === 'EventTiming' && Trace.Types.Events.isSyntheticInteraction(event)) {\n            // TODO(crbug.com/365047728): replace this entire method with this call.\n            return TimelineComponents.EntryName.nameForEntry(event);\n        }\n        const title = TimelineUIUtils.eventStyle(event).title;\n        if (Trace.Helpers.Trace.eventHasCategory(event, Trace.Types.Events.Categories.Console)) {\n            return title;\n        }\n        if (Trace.Types.Events.isTimeStamp(event)) {\n            return i18nString(UIStrings.sS, { PH1: title, PH2: event.args.data.message });\n        }\n        if (Trace.Types.Events.isAnimation(event) && event.args.data.name) {\n            return i18nString(UIStrings.sS, { PH1: title, PH2: event.args.data.name });\n        }\n        if (Trace.Types.Events.isDispatch(event)) {\n            return i18nString(UIStrings.sS, { PH1: title, PH2: event.args.data.type });\n        }\n        return title;\n    }\n    static isUserFrame(frame) {\n        return frame.scriptId !== '0' && !(frame.url && frame.url.startsWith('native '));\n    }\n    static async buildDetailsTextForTraceEvent(event, parsedTrace) {\n        let detailsText;\n        // TODO(40287735): update this code with type-safe data checks.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const unsafeEventArgs = event.args;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const unsafeEventData = event.args?.data;\n        switch (event.name) {\n            case \"GCEvent\" /* Trace.Types.Events.Name.GC */:\n            case \"MajorGC\" /* Trace.Types.Events.Name.MAJOR_GC */:\n            case \"MinorGC\" /* Trace.Types.Events.Name.MINOR_GC */: {\n                const delta = unsafeEventArgs['usedHeapSizeBefore'] - unsafeEventArgs['usedHeapSizeAfter'];\n                detailsText = i18nString(UIStrings.sCollected, { PH1: Platform.NumberUtilities.bytesToString(delta) });\n                break;\n            }\n            case \"FunctionCall\" /* Trace.Types.Events.Name.FUNCTION_CALL */: {\n                const { lineNumber, columnNumber } = Trace.Helpers.Trace.getZeroIndexedLineAndColumnForEvent(event);\n                if (lineNumber !== undefined && columnNumber !== undefined) {\n                    detailsText = unsafeEventData.url + ':' + (lineNumber + 1) + ':' + (columnNumber + 1);\n                }\n                break;\n            }\n            case \"EventDispatch\" /* Trace.Types.Events.Name.EVENT_DISPATCH */:\n                detailsText = unsafeEventData ? unsafeEventData['type'] : null;\n                break;\n            case \"Paint\" /* Trace.Types.Events.Name.PAINT */: {\n                const width = TimelineUIUtils.quadWidth(unsafeEventData.clip);\n                const height = TimelineUIUtils.quadHeight(unsafeEventData.clip);\n                if (width && height) {\n                    detailsText = i18nString(UIStrings.sSDimensions, { PH1: width, PH2: height });\n                }\n                break;\n            }\n            case \"ParseHTML\" /* Trace.Types.Events.Name.PARSE_HTML */: {\n                const startLine = unsafeEventArgs['beginData']['startLine'];\n                const endLine = unsafeEventArgs['endData'] && unsafeEventArgs['endData']['endLine'];\n                const url = Bindings.ResourceUtils.displayNameForURL(unsafeEventArgs['beginData']['url']);\n                if (endLine >= 0) {\n                    detailsText = i18nString(UIStrings.sSs, { PH1: url, PH2: startLine + 1, PH3: endLine + 1 });\n                }\n                else {\n                    detailsText = i18nString(UIStrings.sSSquareBrackets, { PH1: url, PH2: startLine + 1 });\n                }\n                break;\n            }\n            case \"V8.CompileModule\" /* Trace.Types.Events.Name.COMPILE_MODULE */:\n            case \"v8.produceModuleCache\" /* Trace.Types.Events.Name.CACHE_MODULE */:\n                detailsText = Bindings.ResourceUtils.displayNameForURL(unsafeEventArgs['fileName']);\n                break;\n            case \"V8.CompileScript\" /* Trace.Types.Events.Name.COMPILE_SCRIPT */:\n            case \"v8.produceCache\" /* Trace.Types.Events.Name.CACHE_SCRIPT */:\n            case \"EvaluateScript\" /* Trace.Types.Events.Name.EVALUATE_SCRIPT */: {\n                const { lineNumber } = Trace.Helpers.Trace.getZeroIndexedLineAndColumnForEvent(event);\n                const url = unsafeEventData && unsafeEventData['url'];\n                if (url) {\n                    detailsText = Bindings.ResourceUtils.displayNameForURL(url) + ':' + ((lineNumber || 0) + 1);\n                }\n                break;\n            }\n            case \"v8.wasm.compiledModule\" /* Trace.Types.Events.Name.WASM_COMPILED_MODULE */:\n            case \"v8.wasm.moduleCacheHit\" /* Trace.Types.Events.Name.WASM_MODULE_CACHE_HIT */: {\n                const url = unsafeEventArgs['url'];\n                if (url) {\n                    detailsText = Bindings.ResourceUtils.displayNameForURL(url);\n                }\n                break;\n            }\n            case \"v8.parseOnBackground\" /* Trace.Types.Events.Name.STREAMING_COMPILE_SCRIPT */:\n            case \"v8.deserializeOnBackground\" /* Trace.Types.Events.Name.BACKGROUND_DESERIALIZE */:\n            case \"XHRReadyStateChange\" /* Trace.Types.Events.Name.XHR_READY_STATE_CHANGED */:\n            case \"XHRLoad\" /* Trace.Types.Events.Name.XHR_LOAD */: {\n                const url = unsafeEventData['url'];\n                if (url) {\n                    detailsText = Bindings.ResourceUtils.displayNameForURL(url);\n                }\n                break;\n            }\n            case \"TimeStamp\" /* Trace.Types.Events.Name.TIME_STAMP */:\n                detailsText = unsafeEventData['message'];\n                break;\n            case \"WebSocketCreate\" /* Trace.Types.Events.Name.WEB_SOCKET_CREATE */:\n            case \"WebSocketSendHandshakeRequest\" /* Trace.Types.Events.Name.WEB_SOCKET_SEND_HANDSHAKE_REQUEST */:\n            case \"WebSocketReceiveHandshakeResponse\" /* Trace.Types.Events.Name.WEB_SOCKET_RECEIVE_HANDSHAKE_REQUEST */:\n            case \"WebSocketSend\" /* Trace.Types.Events.Name.WEB_SOCKET_SEND */:\n            case \"WebSocketReceive\" /* Trace.Types.Events.Name.WEB_SOCKET_RECEIVE */:\n            case \"WebSocketDestroy\" /* Trace.Types.Events.Name.WEB_SOCKET_DESTROY */:\n            case \"ResourceWillSendRequest\" /* Trace.Types.Events.Name.RESOURCE_WILL_SEND_REQUEST */:\n            case \"ResourceSendRequest\" /* Trace.Types.Events.Name.RESOURCE_SEND_REQUEST */:\n            case \"ResourceReceivedData\" /* Trace.Types.Events.Name.RESOURCE_RECEIVE_DATA */:\n            case \"ResourceReceiveResponse\" /* Trace.Types.Events.Name.RESOURCE_RECEIVE_RESPONSE */:\n            case \"ResourceFinish\" /* Trace.Types.Events.Name.RESOURCE_FINISH */:\n            case \"PaintImage\" /* Trace.Types.Events.Name.PAINT_IMAGE */:\n            case \"Decode Image\" /* Trace.Types.Events.Name.DECODE_IMAGE */:\n            case \"Decode LazyPixelRef\" /* Trace.Types.Events.Name.DECODE_LAZY_PIXEL_REF */: {\n                const url = Trace.Extras.URLForEntry.getNonResolved(parsedTrace, event);\n                if (url) {\n                    detailsText = Bindings.ResourceUtils.displayNameForURL(url);\n                }\n                break;\n            }\n            case \"EmbedderCallback\" /* Trace.Types.Events.Name.EMBEDDER_CALLBACK */:\n                detailsText = unsafeEventData['callbackName'];\n                break;\n            case \"AsyncTask\" /* Trace.Types.Events.Name.ASYNC_TASK */:\n                detailsText = unsafeEventData ? unsafeEventData['name'] : null;\n                break;\n            default:\n                if (Trace.Helpers.Trace.eventHasCategory(event, Trace.Types.Events.Categories.Console)) {\n                    detailsText = null;\n                }\n                else {\n                    detailsText = linkifyTopCallFrameAsText();\n                }\n                break;\n        }\n        return detailsText;\n        function linkifyTopCallFrameAsText() {\n            const frame = Trace.Helpers.Trace.getZeroIndexedStackTraceForEvent(event)?.at(0) ?? null;\n            if (!frame) {\n                return null;\n            }\n            return frame.url + ':' + (frame.lineNumber + 1) + ':' + (frame.columnNumber + 1);\n        }\n    }\n    static async buildDetailsNodeForTraceEvent(event, target, linkifier, isFreshRecording = false, parsedTrace) {\n        let details = null;\n        let detailsText;\n        // TODO(40287735): update this code with type-safe data checks.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const unsafeEventArgs = event.args;\n        // TODO(40287735): update this code with type-safe data checks.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const unsafeEventData = event.args?.data;\n        switch (event.name) {\n            case \"GCEvent\" /* Trace.Types.Events.Name.GC */:\n            case \"MajorGC\" /* Trace.Types.Events.Name.MAJOR_GC */:\n            case \"MinorGC\" /* Trace.Types.Events.Name.MINOR_GC */:\n            case \"EventDispatch\" /* Trace.Types.Events.Name.EVENT_DISPATCH */:\n            case \"Paint\" /* Trace.Types.Events.Name.PAINT */:\n            case \"Animation\" /* Trace.Types.Events.Name.ANIMATION */:\n            case \"EmbedderCallback\" /* Trace.Types.Events.Name.EMBEDDER_CALLBACK */:\n            case \"ParseHTML\" /* Trace.Types.Events.Name.PARSE_HTML */:\n            case \"v8.wasm.streamFromResponseCallback\" /* Trace.Types.Events.Name.WASM_STREAM_FROM_RESPONSE_CALLBACK */:\n            case \"v8.wasm.compiledModule\" /* Trace.Types.Events.Name.WASM_COMPILED_MODULE */:\n            case \"v8.wasm.moduleCacheHit\" /* Trace.Types.Events.Name.WASM_MODULE_CACHE_HIT */:\n            case \"v8.wasm.cachedModule\" /* Trace.Types.Events.Name.WASM_CACHED_MODULE */:\n            case \"v8.wasm.moduleCacheInvalid\" /* Trace.Types.Events.Name.WASM_MODULE_CACHE_INVALID */:\n            case \"WebSocketCreate\" /* Trace.Types.Events.Name.WEB_SOCKET_CREATE */:\n            case \"WebSocketSendHandshakeRequest\" /* Trace.Types.Events.Name.WEB_SOCKET_SEND_HANDSHAKE_REQUEST */:\n            case \"WebSocketReceiveHandshakeResponse\" /* Trace.Types.Events.Name.WEB_SOCKET_RECEIVE_HANDSHAKE_REQUEST */:\n            case \"WebSocketSend\" /* Trace.Types.Events.Name.WEB_SOCKET_SEND */:\n            case \"WebSocketReceive\" /* Trace.Types.Events.Name.WEB_SOCKET_RECEIVE */:\n            case \"WebSocketDestroy\" /* Trace.Types.Events.Name.WEB_SOCKET_DESTROY */: {\n                detailsText = await TimelineUIUtils.buildDetailsTextForTraceEvent(event, parsedTrace);\n                break;\n            }\n            case \"PaintImage\" /* Trace.Types.Events.Name.PAINT_IMAGE */:\n            case \"Decode Image\" /* Trace.Types.Events.Name.DECODE_IMAGE */:\n            case \"Decode LazyPixelRef\" /* Trace.Types.Events.Name.DECODE_LAZY_PIXEL_REF */:\n            case \"XHRReadyStateChange\" /* Trace.Types.Events.Name.XHR_READY_STATE_CHANGED */:\n            case \"XHRLoad\" /* Trace.Types.Events.Name.XHR_LOAD */:\n            case \"ResourceWillSendRequest\" /* Trace.Types.Events.Name.RESOURCE_WILL_SEND_REQUEST */:\n            case \"ResourceSendRequest\" /* Trace.Types.Events.Name.RESOURCE_SEND_REQUEST */:\n            case \"ResourceReceivedData\" /* Trace.Types.Events.Name.RESOURCE_RECEIVE_DATA */:\n            case \"ResourceReceiveResponse\" /* Trace.Types.Events.Name.RESOURCE_RECEIVE_RESPONSE */:\n            case \"ResourceFinish\" /* Trace.Types.Events.Name.RESOURCE_FINISH */: {\n                const url = Trace.Extras.URLForEntry.getNonResolved(parsedTrace, event);\n                if (url) {\n                    const options = {\n                        tabStop: true,\n                        showColumnNumber: false,\n                        inlineFrameIndex: 0,\n                    };\n                    details = LegacyComponents.Linkifier.Linkifier.linkifyURL(url, options);\n                }\n                break;\n            }\n            case \"FunctionCall\" /* Trace.Types.Events.Name.FUNCTION_CALL */: {\n                details = document.createElement('span');\n                // FunctionCall events have an args.data that could be a CallFrame, if all the details are present, so we check for that.\n                if (Trace.Types.Events.isFunctionCall(event) && event.args.data &&\n                    Trace.Types.Events.objectIsCallFrame(event.args.data)) {\n                    UI.UIUtils.createTextChild(details, TimelineUIUtils.frameDisplayName({ ...event.args.data, scriptId: String(event.args.data.scriptId) }));\n                }\n                const { lineNumber, columnNumber } = Trace.Helpers.Trace.getZeroIndexedLineAndColumnForEvent(event);\n                const location = this.linkifyLocation({\n                    scriptId: unsafeEventData['scriptId'],\n                    url: unsafeEventData['url'],\n                    lineNumber: lineNumber || 0,\n                    columnNumber,\n                    target,\n                    isFreshRecording,\n                    linkifier,\n                });\n                if (location) {\n                    UI.UIUtils.createTextChild(details, ' @ ');\n                    details.appendChild(location);\n                }\n                break;\n            }\n            case \"V8.CompileModule\" /* Trace.Types.Events.Name.COMPILE_MODULE */:\n            case \"v8.produceModuleCache\" /* Trace.Types.Events.Name.CACHE_MODULE */: {\n                details = this.linkifyLocation({\n                    scriptId: null,\n                    url: unsafeEventArgs['fileName'],\n                    lineNumber: 0,\n                    columnNumber: 0,\n                    target,\n                    isFreshRecording,\n                    linkifier,\n                });\n                break;\n            }\n            case \"V8.CompileScript\" /* Trace.Types.Events.Name.COMPILE_SCRIPT */:\n            case \"v8.produceCache\" /* Trace.Types.Events.Name.CACHE_SCRIPT */:\n            case \"EvaluateScript\" /* Trace.Types.Events.Name.EVALUATE_SCRIPT */: {\n                const url = unsafeEventData['url'];\n                if (url) {\n                    const { lineNumber } = Trace.Helpers.Trace.getZeroIndexedLineAndColumnForEvent(event);\n                    details = this.linkifyLocation({\n                        scriptId: null,\n                        url,\n                        lineNumber: lineNumber || 0,\n                        columnNumber: 0,\n                        target,\n                        isFreshRecording,\n                        linkifier,\n                    });\n                }\n                break;\n            }\n            case \"v8.deserializeOnBackground\" /* Trace.Types.Events.Name.BACKGROUND_DESERIALIZE */:\n            case \"v8.parseOnBackground\" /* Trace.Types.Events.Name.STREAMING_COMPILE_SCRIPT */: {\n                const url = unsafeEventData['url'];\n                if (url) {\n                    details = this.linkifyLocation({ scriptId: null, url, lineNumber: 0, columnNumber: 0, target, isFreshRecording, linkifier });\n                }\n                break;\n            }\n            case \"ProfileCall\" /* Trace.Types.Events.Name.PROFILE_CALL */: {\n                details = document.createElement('span');\n                // This check is only added for convenience with the type checker.\n                if (!Trace.Types.Events.isProfileCall(event)) {\n                    break;\n                }\n                const maybeResolvedData = Utils.SourceMapsResolver.SourceMapsResolver.resolvedCodeLocationForEntry(event);\n                const functionName = maybeResolvedData?.name || TimelineUIUtils.frameDisplayName(event.callFrame);\n                UI.UIUtils.createTextChild(details, functionName);\n                const location = this.linkifyLocation({\n                    scriptId: event.callFrame['scriptId'],\n                    url: event.callFrame['url'],\n                    lineNumber: event.callFrame['lineNumber'],\n                    columnNumber: event.callFrame['columnNumber'],\n                    target,\n                    isFreshRecording,\n                    linkifier,\n                });\n                if (location) {\n                    UI.UIUtils.createTextChild(details, ' @ ');\n                    details.appendChild(location);\n                }\n                break;\n            }\n            default: {\n                /**\n                 * Some events have a stack trace which is extracted by default at @see TimelineUIUtils.generateCauses\n                 * thus, we prevent extracting the stack trace again here.\n                 */\n                if (Trace.Helpers.Trace.eventHasCategory(event, Trace.Types.Events.Categories.Console) ||\n                    Trace.Types.Events.isUserTiming(event) || Trace.Types.Extensions.isSyntheticExtensionEntry(event)) {\n                    detailsText = null;\n                }\n                else {\n                    details = this.linkifyTopCallFrame(event, target, linkifier, isFreshRecording) ?? null;\n                }\n                break;\n            }\n        }\n        if (!details && detailsText) {\n            details = document.createTextNode(detailsText);\n        }\n        return details;\n    }\n    static linkifyLocation(linkifyOptions) {\n        const { scriptId, url, lineNumber, columnNumber, isFreshRecording, linkifier, target } = linkifyOptions;\n        const options = {\n            lineNumber,\n            columnNumber,\n            showColumnNumber: true,\n            inlineFrameIndex: 0,\n            className: 'timeline-details',\n            tabStop: true,\n        };\n        if (isFreshRecording) {\n            return linkifier.linkifyScriptLocation(target, scriptId, url, lineNumber, options);\n        }\n        return LegacyComponents.Linkifier.Linkifier.linkifyURL(url, options);\n    }\n    static linkifyTopCallFrame(event, target, linkifier, isFreshRecording = false) {\n        let frame = Trace.Helpers.Trace.getZeroIndexedStackTraceForEvent(event)?.[0];\n        if (Trace.Types.Events.isProfileCall(event)) {\n            frame = event.callFrame;\n        }\n        if (!frame) {\n            return null;\n        }\n        const options = {\n            className: 'timeline-details',\n            tabStop: true,\n            inlineFrameIndex: 0,\n            showColumnNumber: true,\n            columnNumber: frame.columnNumber,\n            lineNumber: frame.lineNumber,\n        };\n        if (isFreshRecording) {\n            return linkifier.maybeLinkifyConsoleCallFrame(target, frame, { showColumnNumber: true, inlineFrameIndex: 0 });\n        }\n        return LegacyComponents.Linkifier.Linkifier.linkifyURL(frame.url, options);\n    }\n    static buildDetailsNodeForMarkerEvents(event) {\n        let link = 'https://web.dev/user-centric-performance-metrics/';\n        let name = 'page performance metrics';\n        switch (event.name) {\n            case \"largestContentfulPaint::Candidate\" /* Trace.Types.Events.Name.MARK_LCP_CANDIDATE */:\n                link = 'https://web.dev/lcp/';\n                name = 'largest contentful paint';\n                break;\n            case \"firstContentfulPaint\" /* Trace.Types.Events.Name.MARK_FCP */:\n                link = 'https://web.dev/first-contentful-paint/';\n                name = 'first contentful paint';\n                break;\n            default:\n                break;\n        }\n        const html = UI.Fragment.html `<div>${UI.XLink.XLink.create(link, i18nString(UIStrings.learnMore), undefined, undefined, 'learn-more')} about ${name}.</div>`;\n        return html;\n    }\n    static buildConsumeCacheDetails(eventData, contentHelper) {\n        if (typeof eventData.consumedCacheSize === 'number') {\n            contentHelper.appendTextRow(i18nString(UIStrings.compilationCacheStatus), i18nString(UIStrings.scriptLoadedFromCache));\n            contentHelper.appendTextRow(i18nString(UIStrings.compilationCacheSize), Platform.NumberUtilities.bytesToString(eventData.consumedCacheSize));\n            const cacheKind = eventData.cacheKind;\n            if (cacheKind) {\n                contentHelper.appendTextRow(i18nString(UIStrings.compilationCacheKind), cacheKind);\n            }\n        }\n        else if ('cacheRejected' in eventData && eventData['cacheRejected']) {\n            // Version mismatch or similar.\n            contentHelper.appendTextRow(i18nString(UIStrings.compilationCacheStatus), i18nString(UIStrings.failedToLoadScriptFromCache));\n        }\n        else {\n            contentHelper.appendTextRow(i18nString(UIStrings.compilationCacheStatus), i18nString(UIStrings.scriptNotEligibleToBeLoadedFromCache));\n        }\n    }\n    static async buildTraceEventDetails(parsedTrace, event, linkifier, detailed) {\n        const maybeTarget = targetForEvent(parsedTrace, event);\n        const { duration } = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n        const selfTime = getEventSelfTime(event, parsedTrace);\n        const relatedNodesMap = await Trace.Extras.FetchNodes.extractRelatedDOMNodesFromEvent(parsedTrace, event);\n        if (maybeTarget) {\n            // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n            if (typeof event[previewElementSymbol] === 'undefined') {\n                let previewElement = null;\n                const url = Trace.Extras.URLForEntry.getNonResolved(parsedTrace, event);\n                if (url) {\n                    previewElement = await LegacyComponents.ImagePreview.ImagePreview.build(maybeTarget, url, false, {\n                        imageAltText: LegacyComponents.ImagePreview.ImagePreview.defaultAltTextForImageURL(url),\n                        precomputedFeatures: undefined,\n                        align: \"start\" /* LegacyComponents.ImagePreview.Align.START */,\n                    });\n                }\n                else if (Trace.Types.Events.isPaint(event)) {\n                    previewElement = await TimelineUIUtils.buildPicturePreviewContent(parsedTrace, event, maybeTarget);\n                }\n                // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n                event[previewElementSymbol] = previewElement;\n            }\n        }\n        if (Trace.Types.Events.isSyntheticLayoutShift(event)) {\n            // Ensure that there are no pie charts or extended info for layout shifts.\n            detailed = false;\n        }\n        // This message may vary per event.name;\n        let relatedNodeLabel;\n        const contentHelper = new TimelineDetailsContentHelper(targetForEvent(parsedTrace, event), linkifier);\n        const defaultColorForEvent = this.eventColor(event);\n        const isMarker = parsedTrace && isMarkerEvent(parsedTrace, event);\n        const color = isMarker ? TimelineUIUtils.markerStyleForEvent(event).color : defaultColorForEvent;\n        contentHelper.addSection(TimelineUIUtils.eventTitle(event), color);\n        // TODO: as part of the removal of the old engine, produce a typesafe way\n        // to look up args and data for events.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const unsafeEventArgs = event.args;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const unsafeEventData = event.args?.data;\n        const initiator = parsedTrace.Initiators.eventToInitiator.get(event) ?? null;\n        const initiatorFor = parsedTrace.Initiators.initiatorToEvents.get(event) ?? null;\n        let url = null;\n        if (parsedTrace) {\n            const warnings = TimelineComponents.DetailsView.buildWarningElementsForEvent(event, parsedTrace);\n            for (const warning of warnings) {\n                contentHelper.appendElementRow(i18nString(UIStrings.warning), warning, true);\n            }\n        }\n        // Add timestamp to user timings.\n        if (Trace.Helpers.Trace.eventHasCategory(event, Trace.Types.Events.Categories.UserTiming)) {\n            const adjustedEventTimeStamp = timeStampForEventAdjustedForClosestNavigationIfPossible(event, parsedTrace);\n            contentHelper.appendTextRow(i18nString(UIStrings.timestamp), i18n.TimeUtilities.preciseMillisToString(adjustedEventTimeStamp, 1));\n        }\n        // Only show total time and self time for events with non-zero durations.\n        if (detailed && !Number.isNaN(duration || 0) && duration !== 0) {\n            contentHelper.appendTextRow(i18nString(UIStrings.totalTime), i18n.TimeUtilities.millisToString(duration || 0, true));\n            contentHelper.appendTextRow(i18nString(UIStrings.selfTime), i18n.TimeUtilities.millisToString(selfTime, true));\n        }\n        if (Trace.Types.Events.isPerformanceMark(event) && event.args.data?.detail) {\n            const detailContainer = TimelineUIUtils.renderObjectJson(JSON.parse(event.args.data?.detail));\n            contentHelper.appendElementRow(i18nString(UIStrings.details), detailContainer);\n        }\n        if (Trace.Types.Events.isSyntheticUserTiming(event) && event.args?.data?.beginEvent.args.detail) {\n            const detailContainer = TimelineUIUtils.renderObjectJson(JSON.parse(event.args?.data?.beginEvent.args.detail));\n            contentHelper.appendElementRow(i18nString(UIStrings.details), detailContainer);\n        }\n        if (parsedTrace.Meta.traceIsGeneric) {\n            TimelineUIUtils.renderEventJson(event, contentHelper);\n            return contentHelper.fragment;\n        }\n        if (Trace.Types.Events.isV8Compile(event)) {\n            url = event.args.data?.url;\n            if (url) {\n                const { lineNumber, columnNumber } = Trace.Helpers.Trace.getZeroIndexedLineAndColumnForEvent(event);\n                contentHelper.appendLocationRow(i18nString(UIStrings.script), url, lineNumber || 0, columnNumber);\n            }\n            const isEager = Boolean(event.args.data?.eager);\n            if (isEager) {\n                contentHelper.appendTextRow(i18nString(UIStrings.eagerCompile), true);\n            }\n            const isStreamed = Boolean(event.args.data?.streamed);\n            contentHelper.appendTextRow(i18nString(UIStrings.streamed), isStreamed + (isStreamed ? '' : `: ${event.args.data?.notStreamedReason || ''}`));\n            if (event.args.data) {\n                TimelineUIUtils.buildConsumeCacheDetails(event.args.data, contentHelper);\n            }\n        }\n        if (Trace.Types.Extensions.isSyntheticExtensionEntry(event)) {\n            for (const [key, value] of event.args.properties || []) {\n                contentHelper.appendTextRow(key, value);\n            }\n        }\n        if (Trace.Types.Events.isSyntheticServerTiming(event) && event.args.data.desc) {\n            contentHelper.appendTextRow(i18nString(UIStrings.description), event.args.data.desc);\n        }\n        const isFreshRecording = Boolean(parsedTrace && Tracker.instance().recordingIsFresh(parsedTrace));\n        switch (event.name) {\n            case \"GCEvent\" /* Trace.Types.Events.Name.GC */:\n            case \"MajorGC\" /* Trace.Types.Events.Name.MAJOR_GC */:\n            case \"MinorGC\" /* Trace.Types.Events.Name.MINOR_GC */: {\n                const delta = unsafeEventArgs['usedHeapSizeBefore'] - unsafeEventArgs['usedHeapSizeAfter'];\n                contentHelper.appendTextRow(i18nString(UIStrings.collected), Platform.NumberUtilities.bytesToString(delta));\n                break;\n            }\n            case \"ProfileCall\" /* Trace.Types.Events.Name.PROFILE_CALL */:\n            case \"FunctionCall\" /* Trace.Types.Events.Name.FUNCTION_CALL */: {\n                const detailsNode = await TimelineUIUtils.buildDetailsNodeForTraceEvent(event, targetForEvent(parsedTrace, event), linkifier, isFreshRecording, parsedTrace);\n                if (detailsNode) {\n                    contentHelper.appendElementRow(i18nString(UIStrings.function), detailsNode);\n                }\n                break;\n            }\n            case \"TimerFire\" /* Trace.Types.Events.Name.TIMER_FIRE */:\n            case \"TimerInstall\" /* Trace.Types.Events.Name.TIMER_INSTALL */:\n            case \"TimerRemove\" /* Trace.Types.Events.Name.TIMER_REMOVE */: {\n                contentHelper.appendTextRow(i18nString(UIStrings.timerId), unsafeEventData.timerId);\n                if (event.name === \"TimerInstall\" /* Trace.Types.Events.Name.TIMER_INSTALL */) {\n                    contentHelper.appendTextRow(i18nString(UIStrings.timeout), i18n.TimeUtilities.millisToString(unsafeEventData['timeout']));\n                    contentHelper.appendTextRow(i18nString(UIStrings.repeats), !unsafeEventData['singleShot']);\n                }\n                break;\n            }\n            case \"FireAnimationFrame\" /* Trace.Types.Events.Name.FIRE_ANIMATION_FRAME */: {\n                contentHelper.appendTextRow(i18nString(UIStrings.callbackId), unsafeEventData['id']);\n                break;\n            }\n            case \"V8.CompileModule\" /* Trace.Types.Events.Name.COMPILE_MODULE */: {\n                contentHelper.appendLocationRow(i18nString(UIStrings.module), unsafeEventArgs['fileName'], 0);\n                break;\n            }\n            case \"V8.CompileScript\" /* Trace.Types.Events.Name.COMPILE_SCRIPT */: {\n                // This case is handled above\n                break;\n            }\n            case \"v8.produceModuleCache\" /* Trace.Types.Events.Name.CACHE_MODULE */: {\n                url = unsafeEventData && unsafeEventData['url'];\n                contentHelper.appendTextRow(i18nString(UIStrings.compilationCacheSize), Platform.NumberUtilities.bytesToString(unsafeEventData['producedCacheSize']));\n                break;\n            }\n            case \"v8.produceCache\" /* Trace.Types.Events.Name.CACHE_SCRIPT */: {\n                url = unsafeEventData && unsafeEventData['url'];\n                if (url) {\n                    const { lineNumber, columnNumber } = Trace.Helpers.Trace.getZeroIndexedLineAndColumnForEvent(event);\n                    contentHelper.appendLocationRow(i18nString(UIStrings.script), url, lineNumber || 0, columnNumber);\n                }\n                contentHelper.appendTextRow(i18nString(UIStrings.compilationCacheSize), Platform.NumberUtilities.bytesToString(unsafeEventData['producedCacheSize']));\n                break;\n            }\n            case \"EvaluateScript\" /* Trace.Types.Events.Name.EVALUATE_SCRIPT */: {\n                url = unsafeEventData && unsafeEventData['url'];\n                if (url) {\n                    const { lineNumber, columnNumber } = Trace.Helpers.Trace.getZeroIndexedLineAndColumnForEvent(event);\n                    contentHelper.appendLocationRow(i18nString(UIStrings.script), url, lineNumber || 0, columnNumber);\n                }\n                break;\n            }\n            case \"v8.wasm.streamFromResponseCallback\" /* Trace.Types.Events.Name.WASM_STREAM_FROM_RESPONSE_CALLBACK */:\n            case \"v8.wasm.compiledModule\" /* Trace.Types.Events.Name.WASM_COMPILED_MODULE */:\n            case \"v8.wasm.cachedModule\" /* Trace.Types.Events.Name.WASM_CACHED_MODULE */:\n            case \"v8.wasm.moduleCacheHit\" /* Trace.Types.Events.Name.WASM_MODULE_CACHE_HIT */:\n            case \"v8.wasm.moduleCacheInvalid\" /* Trace.Types.Events.Name.WASM_MODULE_CACHE_INVALID */: {\n                if (unsafeEventData) {\n                    url = unsafeEventArgs['url'];\n                    if (url) {\n                        contentHelper.appendTextRow(i18nString(UIStrings.url), url);\n                    }\n                    const producedCachedSize = unsafeEventArgs['producedCachedSize'];\n                    if (producedCachedSize) {\n                        contentHelper.appendTextRow(i18nString(UIStrings.producedCacheSize), producedCachedSize);\n                    }\n                    const consumedCachedSize = unsafeEventArgs['consumedCachedSize'];\n                    if (consumedCachedSize) {\n                        contentHelper.appendTextRow(i18nString(UIStrings.consumedCacheSize), consumedCachedSize);\n                    }\n                }\n                break;\n            }\n            // @ts-ignore Fall-through intended.\n            case \"Paint\" /* Trace.Types.Events.Name.PAINT */: {\n                const clip = unsafeEventData['clip'];\n                contentHelper.appendTextRow(i18nString(UIStrings.location), i18nString(UIStrings.sSCurlyBrackets, { PH1: clip[0], PH2: clip[1] }));\n                const clipWidth = TimelineUIUtils.quadWidth(clip);\n                const clipHeight = TimelineUIUtils.quadHeight(clip);\n                contentHelper.appendTextRow(i18nString(UIStrings.dimensions), i18nString(UIStrings.sSDimensions, { PH1: clipWidth, PH2: clipHeight }));\n            }\n            case \"PaintSetup\" /* Trace.Types.Events.Name.PAINT_SETUP */:\n            case \"Rasterize\" /* Trace.Types.Events.Name.RASTERIZE */:\n            case \"ScrollLayer\" /* Trace.Types.Events.Name.SCROLL_LAYER */: {\n                relatedNodeLabel = i18nString(UIStrings.layerRoot);\n                break;\n            }\n            case \"PaintImage\" /* Trace.Types.Events.Name.PAINT_IMAGE */:\n            case \"Decode LazyPixelRef\" /* Trace.Types.Events.Name.DECODE_LAZY_PIXEL_REF */:\n            case \"Decode Image\" /* Trace.Types.Events.Name.DECODE_IMAGE */:\n            case \"Draw LazyPixelRef\" /* Trace.Types.Events.Name.DRAW_LAZY_PIXEL_REF */: {\n                relatedNodeLabel = i18nString(UIStrings.ownerElement);\n                url = Trace.Extras.URLForEntry.getNonResolved(parsedTrace, event);\n                if (url) {\n                    const options = {\n                        tabStop: true,\n                        showColumnNumber: false,\n                        inlineFrameIndex: 0,\n                    };\n                    contentHelper.appendElementRow(i18nString(UIStrings.imageUrl), LegacyComponents.Linkifier.Linkifier.linkifyURL(url, options));\n                }\n                break;\n            }\n            case \"ParseAuthorStyleSheet\" /* Trace.Types.Events.Name.PARSE_AUTHOR_STYLE_SHEET */: {\n                url = unsafeEventData['styleSheetUrl'];\n                if (url) {\n                    const options = {\n                        tabStop: true,\n                        showColumnNumber: false,\n                        inlineFrameIndex: 0,\n                    };\n                    contentHelper.appendElementRow(i18nString(UIStrings.stylesheetUrl), LegacyComponents.Linkifier.Linkifier.linkifyURL(url, options));\n                }\n                break;\n            }\n            case \"UpdateLayoutTree\" /* Trace.Types.Events.Name.UPDATE_LAYOUT_TREE */: {\n                contentHelper.appendTextRow(i18nString(UIStrings.elementsAffected), unsafeEventArgs['elementCount']);\n                const selectorStatsSetting = Common.Settings.Settings.instance().createSetting('timeline-capture-selector-stats', false);\n                if (!selectorStatsSetting.get()) {\n                    const note = document.createElement('span');\n                    note.textContent = i18nString(UIStrings.sSelectorStatsInfo, { PH1: selectorStatsSetting.title() });\n                    contentHelper.appendElementRow(i18nString(UIStrings.selectorStatsTitle), note);\n                }\n                break;\n            }\n            case \"Layout\" /* Trace.Types.Events.Name.LAYOUT */: {\n                const beginData = unsafeEventArgs['beginData'];\n                contentHelper.appendTextRow(i18nString(UIStrings.nodesThatNeedLayout), i18nString(UIStrings.sOfS, { PH1: beginData['dirtyObjects'], PH2: beginData['totalObjects'] }));\n                relatedNodeLabel = i18nString(UIStrings.layoutRoot);\n                break;\n            }\n            case \"ConsoleTime\" /* Trace.Types.Events.Name.CONSOLE_TIME */: {\n                contentHelper.appendTextRow(i18nString(UIStrings.message), event.name);\n                break;\n            }\n            case \"WebSocketCreate\" /* Trace.Types.Events.Name.WEB_SOCKET_CREATE */:\n            case \"WebSocketSendHandshakeRequest\" /* Trace.Types.Events.Name.WEB_SOCKET_SEND_HANDSHAKE_REQUEST */:\n            case \"WebSocketReceiveHandshakeResponse\" /* Trace.Types.Events.Name.WEB_SOCKET_RECEIVE_HANDSHAKE_REQUEST */:\n            case \"WebSocketSend\" /* Trace.Types.Events.Name.WEB_SOCKET_SEND */:\n            case \"WebSocketReceive\" /* Trace.Types.Events.Name.WEB_SOCKET_RECEIVE */:\n            case \"WebSocketDestroy\" /* Trace.Types.Events.Name.WEB_SOCKET_DESTROY */: {\n                if (Trace.Types.Events.isWebSocketTraceEvent(event)) {\n                    const rows = TimelineComponents.DetailsView.buildRowsForWebSocketEvent(event, parsedTrace);\n                    for (const { key, value } of rows) {\n                        contentHelper.appendTextRow(key, value);\n                    }\n                }\n                break;\n            }\n            case \"EmbedderCallback\" /* Trace.Types.Events.Name.EMBEDDER_CALLBACK */: {\n                contentHelper.appendTextRow(i18nString(UIStrings.callbackFunction), unsafeEventData['callbackName']);\n                break;\n            }\n            case \"Animation\" /* Trace.Types.Events.Name.ANIMATION */: {\n                if (!Trace.Types.Events.isSyntheticAnimation(event)) {\n                    break;\n                }\n                const { displayName, nodeName } = event.args.data.beginEvent.args.data;\n                displayName && contentHelper.appendTextRow(i18nString(UIStrings.animating), displayName);\n                // If relatedNodes is empty (maybe saved trace), then print the text description of the DOM node.\n                if (!relatedNodesMap?.size && nodeName) {\n                    contentHelper.appendTextRow(i18nString(UIStrings.relatedNode), nodeName);\n                }\n                const CLSInsight = Trace.Insights.InsightRunners.CumulativeLayoutShift;\n                const failures = CLSInsight.getNonCompositedFailure(event);\n                if (!failures.length) {\n                    break;\n                }\n                const failureReasons = new Set(failures.map(f => f.failureReasons).flat().filter(Boolean));\n                const unsupportedProperties = new Set(failures.map(f => f.unsupportedProperties).flat().filter(Boolean));\n                // The failureReasons can be empty when Blink added a new failure reason that is\n                // not supported by DevTools yet\n                if (failureReasons.size === 0) {\n                    contentHelper.appendElementRow(i18nString(UIStrings.compositingFailed), i18nString(UIStrings.compositingFailedUnknownReason), true);\n                }\n                else {\n                    for (const reason of failureReasons) {\n                        let str;\n                        switch (reason) {\n                            case \"ACCELERATED_ANIMATIONS_DISABLED\" /* CLSInsight.AnimationFailureReasons.ACCELERATED_ANIMATIONS_DISABLED */:\n                                str = i18nString(UIStrings.compositingFailedAcceleratedAnimationsDisabled);\n                                break;\n                            case \"EFFECT_SUPPRESSED_BY_DEVTOOLS\" /* CLSInsight.AnimationFailureReasons.EFFECT_SUPPRESSED_BY_DEVTOOLS */:\n                                str = i18nString(UIStrings.compositingFailedEffectSuppressedByDevtools);\n                                break;\n                            case \"INVALID_ANIMATION_OR_EFFECT\" /* CLSInsight.AnimationFailureReasons.INVALID_ANIMATION_OR_EFFECT */:\n                                str = i18nString(UIStrings.compositingFailedInvalidAnimationOrEffect);\n                                break;\n                            case \"EFFECT_HAS_UNSUPPORTED_TIMING_PARAMS\" /* CLSInsight.AnimationFailureReasons.EFFECT_HAS_UNSUPPORTED_TIMING_PARAMS */:\n                                str = i18nString(UIStrings.compositingFailedEffectHasUnsupportedTimingParams);\n                                break;\n                            case \"EFFECT_HAS_NON_REPLACE_COMPOSITE_MODE\" /* CLSInsight.AnimationFailureReasons.EFFECT_HAS_NON_REPLACE_COMPOSITE_MODE */:\n                                str = i18nString(UIStrings.compositingFailedEffectHasNonReplaceCompositeMode);\n                                break;\n                            case \"TARGET_HAS_INVALID_COMPOSITING_STATE\" /* CLSInsight.AnimationFailureReasons.TARGET_HAS_INVALID_COMPOSITING_STATE */:\n                                str = i18nString(UIStrings.compositingFailedTargetHasInvalidCompositingState);\n                                break;\n                            case \"TARGET_HAS_INCOMPATIBLE_ANIMATIONS\" /* CLSInsight.AnimationFailureReasons.TARGET_HAS_INCOMPATIBLE_ANIMATIONS */:\n                                str = i18nString(UIStrings.compositingFailedTargetHasIncompatibleAnimations);\n                                break;\n                            case \"TARGET_HAS_CSS_OFFSET\" /* CLSInsight.AnimationFailureReasons.TARGET_HAS_CSS_OFFSET */:\n                                str = i18nString(UIStrings.compositingFailedTargetHasCSSOffset);\n                                break;\n                            case \"ANIMATION_AFFECTS_NON_CSS_PROPERTIES\" /* CLSInsight.AnimationFailureReasons.ANIMATION_AFFECTS_NON_CSS_PROPERTIES */:\n                                str = i18nString(UIStrings.compositingFailedAnimationAffectsNonCSSProperties);\n                                break;\n                            case \"TRANSFORM_RELATED_PROPERTY_CANNOT_BE_ACCELERATED_ON_TARGET\" /* CLSInsight.AnimationFailureReasons.TRANSFORM_RELATED_PROPERTY_CANNOT_BE_ACCELERATED_ON_TARGET */:\n                                str = i18nString(UIStrings.compositingFailedTransformRelatedPropertyCannotBeAcceleratedOnTarget);\n                                break;\n                            case \"TRANSFROM_BOX_SIZE_DEPENDENT\" /* CLSInsight.AnimationFailureReasons.TRANSFROM_BOX_SIZE_DEPENDENT */:\n                                str = i18nString(UIStrings.compositingFailedTransformDependsBoxSize);\n                                break;\n                            case \"FILTER_RELATED_PROPERTY_MAY_MOVE_PIXELS\" /* CLSInsight.AnimationFailureReasons.FILTER_RELATED_PROPERTY_MAY_MOVE_PIXELS */:\n                                str = i18nString(UIStrings.compositingFailedFilterRelatedPropertyMayMovePixels);\n                                break;\n                            case \"UNSUPPORTED_CSS_PROPERTY\" /* CLSInsight.AnimationFailureReasons.UNSUPPORTED_CSS_PROPERTY */:\n                                str = i18nString(UIStrings.compositingFailedUnsupportedCSSProperty, {\n                                    propertyCount: unsupportedProperties.size,\n                                    properties: new Intl.ListFormat(undefined, { style: 'short', type: 'conjunction' })\n                                        .format(unsupportedProperties),\n                                });\n                                break;\n                            case \"MIXED_KEYFRAME_VALUE_TYPES\" /* CLSInsight.AnimationFailureReasons.MIXED_KEYFRAME_VALUE_TYPES */:\n                                str = i18nString(UIStrings.compositingFailedMixedKeyframeValueTypes);\n                                break;\n                            case \"TIMELINE_SOURCE_HAS_INVALID_COMPOSITING_STATE\" /* CLSInsight.AnimationFailureReasons.TIMELINE_SOURCE_HAS_INVALID_COMPOSITING_STATE */:\n                                str = i18nString(UIStrings.compositingFailedTimelineSourceHasInvalidCompositingState);\n                                break;\n                            case \"ANIMATION_HAS_NO_VISIBLE_CHANGE\" /* CLSInsight.AnimationFailureReasons.ANIMATION_HAS_NO_VISIBLE_CHANGE */:\n                                str = i18nString(UIStrings.compositingFailedAnimationHasNoVisibleChange);\n                                break;\n                            case \"AFFECTS_IMPORTANT_PROPERTY\" /* CLSInsight.AnimationFailureReasons.AFFECTS_IMPORTANT_PROPERTY */:\n                                str = i18nString(UIStrings.compositingFailedAffectsImportantProperty);\n                                break;\n                            case \"SVG_TARGET_HAS_INDEPENDENT_TRANSFORM_PROPERTY\" /* CLSInsight.AnimationFailureReasons.SVG_TARGET_HAS_INDEPENDENT_TRANSFORM_PROPERTY */:\n                                str = i18nString(UIStrings.compositingFailedSVGTargetHasIndependentTransformProperty);\n                                break;\n                            default:\n                                // We should never actually end up here, as adding a new AnimationFailureReason\n                                // should also require adding a UIString that describes it\n                                str = i18nString(UIStrings.compositingFailedUnknownReason);\n                                break;\n                        }\n                        str && contentHelper.appendElementRow(i18nString(UIStrings.compositingFailed), str, true);\n                    }\n                }\n                break;\n            }\n            case \"ParseHTML\" /* Trace.Types.Events.Name.PARSE_HTML */: {\n                const beginData = unsafeEventArgs['beginData'];\n                const startLine = beginData['startLine'] - 1;\n                const endLine = unsafeEventArgs['endData'] ? unsafeEventArgs['endData']['endLine'] - 1 : undefined;\n                url = beginData['url'];\n                if (url) {\n                    contentHelper.appendLocationRange(i18nString(UIStrings.range), url, startLine, endLine);\n                }\n                break;\n            }\n            // @ts-ignore Fall-through intended.\n            case \"FireIdleCallback\" /* Trace.Types.Events.Name.FIRE_IDLE_CALLBACK */: {\n                contentHelper.appendTextRow(i18nString(UIStrings.allottedTime), i18n.TimeUtilities.millisToString(unsafeEventData['allottedMilliseconds']));\n                contentHelper.appendTextRow(i18nString(UIStrings.invokedByTimeout), unsafeEventData['timedOut']);\n            }\n            case \"RequestIdleCallback\" /* Trace.Types.Events.Name.REQUEST_IDLE_CALLBACK */:\n            case \"CancelIdleCallback\" /* Trace.Types.Events.Name.CANCEL_IDLE_CALLBACK */: {\n                contentHelper.appendTextRow(i18nString(UIStrings.callbackId), unsafeEventData['id']);\n                break;\n            }\n            case \"EventDispatch\" /* Trace.Types.Events.Name.EVENT_DISPATCH */: {\n                contentHelper.appendTextRow(i18nString(UIStrings.type), unsafeEventData['type']);\n                break;\n            }\n            // @ts-ignore Fall-through intended.\n            case \"largestContentfulPaint::Candidate\" /* Trace.Types.Events.Name.MARK_LCP_CANDIDATE */: {\n                contentHelper.appendTextRow(i18nString(UIStrings.type), String(unsafeEventData['type']));\n                contentHelper.appendTextRow(i18nString(UIStrings.size), String(unsafeEventData['size']));\n            }\n            case \"firstPaint\" /* Trace.Types.Events.Name.MARK_FIRST_PAINT */:\n            case \"firstContentfulPaint\" /* Trace.Types.Events.Name.MARK_FCP */:\n            case \"MarkLoad\" /* Trace.Types.Events.Name.MARK_LOAD */:\n            case \"MarkDOMContent\" /* Trace.Types.Events.Name.MARK_DOM_CONTENT */: {\n                const adjustedEventTimeStamp = timeStampForEventAdjustedForClosestNavigationIfPossible(event, parsedTrace);\n                contentHelper.appendTextRow(i18nString(UIStrings.timestamp), i18n.TimeUtilities.preciseMillisToString(adjustedEventTimeStamp, 1));\n                if (Trace.Types.Events.isMarkerEvent(event)) {\n                    contentHelper.appendElementRow(i18nString(UIStrings.details), TimelineUIUtils.buildDetailsNodeForMarkerEvents(event));\n                }\n                break;\n            }\n            case \"EventTiming\" /* Trace.Types.Events.Name.EVENT_TIMING */: {\n                const detailsNode = await TimelineUIUtils.buildDetailsNodeForTraceEvent(event, targetForEvent(parsedTrace, event), linkifier, isFreshRecording, parsedTrace);\n                if (detailsNode) {\n                    contentHelper.appendElementRow(i18nString(UIStrings.details), detailsNode);\n                }\n                if (Trace.Types.Events.isSyntheticInteraction(event)) {\n                    const inputDelay = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(event.inputDelay);\n                    const mainThreadTime = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(event.mainThreadHandling);\n                    const presentationDelay = i18n.TimeUtilities.formatMicroSecondsAsMillisFixed(event.presentationDelay);\n                    contentHelper.appendTextRow(i18nString(UIStrings.interactionID), event.interactionId);\n                    contentHelper.appendTextRow(i18nString(UIStrings.inputDelay), inputDelay);\n                    contentHelper.appendTextRow(i18nString(UIStrings.processingDuration), mainThreadTime);\n                    contentHelper.appendTextRow(i18nString(UIStrings.presentationDelay), presentationDelay);\n                }\n                break;\n            }\n            case \"LayoutShift\" /* Trace.Types.Events.Name.LAYOUT_SHIFT */: {\n                if (!Trace.Types.Events.isSyntheticLayoutShift(event)) {\n                    console.error('Unexpected type for LayoutShift event');\n                    break;\n                }\n                const layoutShift = event;\n                const layoutShiftEventData = layoutShift.args.data;\n                const warning = document.createElement('span');\n                const clsLink = UI.XLink.XLink.create('https://web.dev/cls/', i18nString(UIStrings.cumulativeLayoutShifts), undefined, undefined, 'cumulative-layout-shifts');\n                const evolvedClsLink = UI.XLink.XLink.create('https://web.dev/evolving-cls/', i18nString(UIStrings.evolvedClsLink), undefined, undefined, 'evolved-cls');\n                warning.appendChild(i18n.i18n.getFormatLocalizedString(str_, UIStrings.sCLSInformation, { PH1: clsLink, PH2: evolvedClsLink }));\n                contentHelper.appendElementRow(i18nString(UIStrings.warning), warning, true);\n                if (!layoutShiftEventData) {\n                    break;\n                }\n                contentHelper.appendTextRow(i18nString(UIStrings.score), layoutShiftEventData.weighted_score_delta.toPrecision(4));\n                contentHelper.appendTextRow(i18nString(UIStrings.cumulativeScore), layoutShiftEventData['cumulative_score'].toPrecision(4));\n                contentHelper.appendTextRow(i18nString(UIStrings.currentClusterId), layoutShift.parsedData.sessionWindowData.id);\n                contentHelper.appendTextRow(i18nString(UIStrings.currentClusterScore), layoutShift.parsedData.sessionWindowData.cumulativeWindowScore.toPrecision(4));\n                contentHelper.appendTextRow(i18nString(UIStrings.hadRecentInput), unsafeEventData['had_recent_input'] ? i18nString(UIStrings.yes) : i18nString(UIStrings.no));\n                for (const impactedNode of unsafeEventData['impacted_nodes']) {\n                    const oldRect = new CLSRect(impactedNode['old_rect']);\n                    const newRect = new CLSRect(impactedNode['new_rect']);\n                    const linkedOldRect = await Common.Linkifier.Linkifier.linkify(oldRect);\n                    const linkedNewRect = await Common.Linkifier.Linkifier.linkify(newRect);\n                    contentHelper.appendElementRow(i18nString(UIStrings.movedFrom), linkedOldRect);\n                    contentHelper.appendElementRow(i18nString(UIStrings.movedTo), linkedNewRect);\n                }\n                break;\n            }\n            default: {\n                const detailsNode = await TimelineUIUtils.buildDetailsNodeForTraceEvent(event, targetForEvent(parsedTrace, event), linkifier, isFreshRecording, parsedTrace);\n                if (detailsNode) {\n                    contentHelper.appendElementRow(i18nString(UIStrings.details), detailsNode);\n                }\n                break;\n            }\n        }\n        const relatedNodes = relatedNodesMap?.values() || [];\n        for (const relatedNode of relatedNodes) {\n            if (relatedNode) {\n                const nodeSpan = await Common.Linkifier.Linkifier.linkify(relatedNode);\n                contentHelper.appendElementRow(relatedNodeLabel || i18nString(UIStrings.relatedNode), nodeSpan);\n            }\n        }\n        // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n        if (event[previewElementSymbol]) {\n            contentHelper.addSection(i18nString(UIStrings.preview));\n            // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n            contentHelper.appendElementRow('', event[previewElementSymbol]);\n        }\n        const stackTrace = Trace.Helpers.Trace.getZeroIndexedStackTraceForEvent(event);\n        if (initiator || initiatorFor || stackTrace || parsedTrace?.Invalidations.invalidationsForEvent.get(event)) {\n            await TimelineUIUtils.generateCauses(event, contentHelper, parsedTrace);\n        }\n        if (Root.Runtime.experiments.isEnabled(\"timeline-debug-mode\" /* Root.Runtime.ExperimentName.TIMELINE_DEBUG_MODE */)) {\n            TimelineUIUtils.renderEventJson(event, contentHelper);\n        }\n        const stats = {};\n        const showPieChart = detailed && parsedTrace && TimelineUIUtils.aggregatedStatsForTraceEvent(stats, parsedTrace, event);\n        if (showPieChart) {\n            contentHelper.addSection(i18nString(UIStrings.aggregatedTime));\n            const pieChart = TimelineUIUtils.generatePieChart(stats, TimelineUIUtils.eventStyle(event).category, selfTime);\n            contentHelper.appendElementRow('', pieChart);\n        }\n        return contentHelper.fragment;\n    }\n    static statsForTimeRange(events, startTime, endTime) {\n        if (!events.length) {\n            return { idle: endTime - startTime };\n        }\n        buildRangeStatsCacheIfNeeded(events);\n        const aggregatedStats = subtractStats(aggregatedStatsAtTime(endTime), aggregatedStatsAtTime(startTime));\n        const aggregatedTotal = Object.values(aggregatedStats).reduce((a, b) => a + b, 0);\n        aggregatedStats['idle'] = Math.max(0, endTime - startTime - aggregatedTotal);\n        return aggregatedStats;\n        function aggregatedStatsAtTime(time) {\n            const stats = {};\n            // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n            const cache = events[categoryBreakdownCacheSymbol];\n            for (const category in cache) {\n                const categoryCache = cache[category];\n                const index = Platform.ArrayUtilities.upperBound(categoryCache.time, time, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n                let value;\n                if (index === 0) {\n                    value = 0;\n                }\n                else if (index === categoryCache.time.length) {\n                    value = categoryCache.value[categoryCache.value.length - 1];\n                }\n                else {\n                    const t0 = categoryCache.time[index - 1];\n                    const t1 = categoryCache.time[index];\n                    const v0 = categoryCache.value[index - 1];\n                    const v1 = categoryCache.value[index];\n                    value = v0 + (v1 - v0) * (time - t0) / (t1 - t0);\n                }\n                stats[category] = value;\n            }\n            return stats;\n        }\n        function subtractStats(a, b) {\n            const result = Object.assign({}, a);\n            for (const key in b) {\n                result[key] -= b[key];\n            }\n            return result;\n        }\n        function buildRangeStatsCacheIfNeeded(events) {\n            // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n            if (events[categoryBreakdownCacheSymbol]) {\n                return;\n            }\n            // aggeregatedStats is a map by categories. For each category there's an array\n            // containing sorted time points which records accumulated value of the category.\n            const aggregatedStats = {};\n            const categoryStack = [];\n            let lastTime = 0;\n            Trace.Helpers.Trace.forEachEvent(events, {\n                onStartEvent,\n                onEndEvent,\n            });\n            function updateCategory(category, time) {\n                let statsArrays = aggregatedStats[category];\n                if (!statsArrays) {\n                    statsArrays = { time: [], value: [] };\n                    aggregatedStats[category] = statsArrays;\n                }\n                if (statsArrays.time.length && statsArrays.time[statsArrays.time.length - 1] === time || lastTime > time) {\n                    return;\n                }\n                const lastValue = statsArrays.value.length > 0 ? statsArrays.value[statsArrays.value.length - 1] : 0;\n                statsArrays.value.push(lastValue + time - lastTime);\n                statsArrays.time.push(time);\n            }\n            function categoryChange(from, to, time) {\n                if (from) {\n                    updateCategory(from, time);\n                }\n                lastTime = time;\n                if (to) {\n                    updateCategory(to, time);\n                }\n            }\n            function onStartEvent(e) {\n                const { startTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(e);\n                const category = TimelineComponents.EntryStyles.getEventStyle(e.name)?.category.name ||\n                    TimelineComponents.EntryStyles.getCategoryStyles().other.name;\n                const parentCategory = categoryStack.length ? categoryStack[categoryStack.length - 1] : null;\n                if (category !== parentCategory) {\n                    categoryChange(parentCategory || null, category, startTime);\n                }\n                categoryStack.push(category);\n            }\n            function onEndEvent(e) {\n                const { endTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(e);\n                const category = categoryStack.pop();\n                const parentCategory = categoryStack.length ? categoryStack[categoryStack.length - 1] : null;\n                if (category !== parentCategory) {\n                    categoryChange(category || null, parentCategory || null, endTime || 0);\n                }\n            }\n            const obj = events;\n            // @ts-ignore TODO(crbug.com/1011811): Remove symbol usage.\n            obj[categoryBreakdownCacheSymbol] = aggregatedStats;\n        }\n    }\n    static renderEventJson(event, contentHelper) {\n        contentHelper.addSection(i18nString(UIStrings.traceEvent));\n        const eventWithArgsFirst = {\n            ...{ args: event.args },\n            ...event,\n        };\n        const highlightContainer = TimelineUIUtils.renderObjectJson(eventWithArgsFirst);\n        contentHelper.appendElementRow('', highlightContainer);\n    }\n    static renderObjectJson(obj) {\n        const indentLength = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get().length;\n        // Elide if the data is huge. Then remove the initial new-line for a denser UI\n        const eventStr = JSON.stringify(obj, null, indentLength).slice(0, 10_000).replace(/{\\n  /, '{ ');\n        // Use CodeHighlighter for syntax highlighting.\n        const highlightContainer = document.createElement('div');\n        const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(highlightContainer, { cssFile: [codeHighlighterStyles] });\n        const elem = shadowRoot.createChild('div');\n        elem.classList.add('monospace', 'source-code');\n        elem.textContent = eventStr;\n        void CodeHighlighter.CodeHighlighter.highlightNode(elem, 'text/javascript');\n        return highlightContainer;\n    }\n    static stackTraceFromCallFrames(callFrames) {\n        return { callFrames };\n    }\n    static async generateCauses(event, contentHelper, parsedTrace) {\n        const { startTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n        let initiatorStackLabel = i18nString(UIStrings.initiatorStackTrace);\n        let stackLabel = i18nString(UIStrings.stackTrace);\n        switch (event.name) {\n            case \"TimerFire\" /* Trace.Types.Events.Name.TIMER_FIRE */:\n                initiatorStackLabel = i18nString(UIStrings.timerInstalled);\n                break;\n            case \"FireAnimationFrame\" /* Trace.Types.Events.Name.FIRE_ANIMATION_FRAME */:\n                initiatorStackLabel = i18nString(UIStrings.animationFrameRequested);\n                break;\n            case \"FireIdleCallback\" /* Trace.Types.Events.Name.FIRE_IDLE_CALLBACK */:\n                initiatorStackLabel = i18nString(UIStrings.idleCallbackRequested);\n                break;\n            case \"UpdateLayoutTree\" /* Trace.Types.Events.Name.UPDATE_LAYOUT_TREE */:\n                initiatorStackLabel = i18nString(UIStrings.firstInvalidated);\n                stackLabel = i18nString(UIStrings.recalculationForced);\n                break;\n            case \"Layout\" /* Trace.Types.Events.Name.LAYOUT */:\n                initiatorStackLabel = i18nString(UIStrings.firstLayoutInvalidation);\n                stackLabel = i18nString(UIStrings.layoutForced);\n                break;\n        }\n        const stackTrace = Trace.Helpers.Trace.getZeroIndexedStackTraceForEvent(event);\n        if (stackTrace && stackTrace.length) {\n            contentHelper.addSection(stackLabel);\n            contentHelper.createChildStackTraceElement(TimelineUIUtils.stackTraceFromCallFrames(stackTrace));\n        }\n        const initiator = parsedTrace.Initiators.eventToInitiator.get(event);\n        const initiatorFor = parsedTrace.Initiators.initiatorToEvents.get(event);\n        const invalidations = parsedTrace.Invalidations.invalidationsForEvent.get(event);\n        if (initiator) {\n            // If we have an initiator for the event, we can show its stack trace, a link to reveal the initiator,\n            // and the time since the initiator (Pending For).\n            const stackTrace = Trace.Helpers.Trace.getZeroIndexedStackTraceForEvent(initiator);\n            if (stackTrace) {\n                contentHelper.addSection(initiatorStackLabel);\n                contentHelper.createChildStackTraceElement(TimelineUIUtils.stackTraceFromCallFrames(stackTrace.map(frame => {\n                    return {\n                        ...frame,\n                        scriptId: String(frame.scriptId),\n                    };\n                })));\n            }\n            const link = this.createEntryLink(initiator);\n            contentHelper.appendElementRow(i18nString(UIStrings.initiatedBy), link);\n            const { startTime: initiatorStartTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(initiator);\n            const delay = startTime - initiatorStartTime;\n            contentHelper.appendTextRow(i18nString(UIStrings.pendingFor), i18n.TimeUtilities.preciseMillisToString(delay, 1));\n        }\n        if (initiatorFor) {\n            // If the event is an initiator for some entries, add links to reveal them.\n            const links = document.createElement('div');\n            initiatorFor.map((initiator, i) => {\n                links.appendChild(this.createEntryLink(initiator));\n                // Add space between each link if it's not last\n                if (i < initiatorFor.length - 1) {\n                    links.append(' ');\n                }\n            });\n            contentHelper.appendElementRow(UIStrings.initiatorFor, links);\n        }\n        if (invalidations && invalidations.length) {\n            const totalInvalidations = parsedTrace.Invalidations.invalidationCountForEvent.get(event) ??\n                0; // Won't be 0, but saves us dealing with undefined.\n            contentHelper.addSection(i18nString(UIStrings.invalidations, { PH1: totalInvalidations }));\n            await TimelineUIUtils.generateInvalidationsList(invalidations, contentHelper);\n        }\n    }\n    static createEntryLink(entry) {\n        const link = document.createElement('span');\n        const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n        if (!traceBoundsState) {\n            console.error('Tried to link to an entry without any traceBoundsState. This should never happen.');\n            return link;\n        }\n        // Check is the entry is outside of the current breadcrumb. If it is, don't create a link to navigate to it because there is no way to navigate outside breadcrumb without removing it. Instead, just display the name and \"outside breadcrumb\" text\n        // Consider entry outside breadcrumb only if it is fully outside. If a part of it is visible, we can still select it.\n        const isEntryOutsideBreadcrumb = traceBoundsState.micro.minimapTraceBounds.min > entry.ts + (entry.dur || 0) ||\n            traceBoundsState.micro.minimapTraceBounds.max < entry.ts;\n        // Check if it is in the hidden array\n        const isEntryHidden = ModificationsManager.activeManager()?.getEntriesFilter().entryIsInvisible(entry);\n        if (!isEntryOutsideBreadcrumb) {\n            link.classList.add('timeline-link');\n            UI.ARIAUtils.markAsLink(link);\n            link.tabIndex = 0;\n            link.addEventListener('click', () => {\n                TimelinePanel.instance().select(TimelineSelection.fromTraceEvent((entry)));\n            });\n            link.addEventListener('keydown', event => {\n                if (event.key === 'Enter') {\n                    TimelinePanel.instance().select(TimelineSelection.fromTraceEvent((entry)));\n                    event.consume(true);\n                }\n            });\n        }\n        if (isEntryHidden) {\n            link.textContent = this.eventTitle(entry) + ' ' + i18nString(UIStrings.entryIsHidden);\n        }\n        else if (isEntryOutsideBreadcrumb) {\n            link.textContent = this.eventTitle(entry) + ' ' + i18nString(UIStrings.outsideBreadcrumbRange);\n        }\n        else {\n            link.textContent = this.eventTitle(entry);\n        }\n        return link;\n    }\n    static async generateInvalidationsList(invalidations, contentHelper) {\n        const { groupedByReason, backendNodeIds } = TimelineComponents.DetailsView.generateInvalidationsList(invalidations);\n        let relatedNodesMap = null;\n        const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n        const domModel = target?.model(SDK.DOMModel.DOMModel);\n        if (domModel) {\n            relatedNodesMap = await domModel.pushNodesByBackendIdsToFrontend(backendNodeIds);\n        }\n        Object.keys(groupedByReason).forEach(reason => {\n            TimelineUIUtils.generateInvalidationsForReason(reason, groupedByReason[reason], relatedNodesMap, contentHelper);\n        });\n    }\n    static generateInvalidationsForReason(reason, invalidations, relatedNodesMap, contentHelper) {\n        function createLinkForInvalidationNode(invalidation) {\n            const node = (invalidation.args.data.nodeId && relatedNodesMap) ?\n                relatedNodesMap.get(invalidation.args.data.nodeId) :\n                null;\n            if (node) {\n                const nodeSpan = document.createElement('span');\n                void Common.Linkifier.Linkifier.linkify(node).then(link => nodeSpan.appendChild(link));\n                return nodeSpan;\n            }\n            if (invalidation.args.data.nodeName) {\n                const nodeSpan = document.createElement('span');\n                nodeSpan.textContent = invalidation.args.data.nodeName;\n                return nodeSpan;\n            }\n            const nodeSpan = document.createElement('span');\n            UI.UIUtils.createTextChild(nodeSpan, i18nString(UIStrings.UnknownNode));\n            return nodeSpan;\n        }\n        const generatedItems = new Set();\n        for (const invalidation of invalidations) {\n            const stackTrace = Trace.Helpers.Trace.getZeroIndexedStackTraceForEvent(invalidation);\n            let scriptLink = null;\n            const callFrame = stackTrace?.at(0);\n            if (callFrame) {\n                scriptLink = contentHelper.linkifier()?.maybeLinkifyScriptLocation(SDK.TargetManager.TargetManager.instance().rootTarget(), callFrame.scriptId, callFrame.url, callFrame.lineNumber) ||\n                    null;\n            }\n            const niceNodeLink = createLinkForInvalidationNode(invalidation);\n            const text = scriptLink ?\n                i18n.i18n.getFormatLocalizedString(str_, UIStrings.invalidationWithCallFrame, { PH1: niceNodeLink, PH2: scriptLink }) :\n                niceNodeLink;\n            // Sometimes we can get different Invalidation events which cause\n            // the same text for the same element for the same reason to be\n            // generated. Rather than show the user duplicates, if we have\n            // generated text that looks identical to this before, we will\n            // bail.\n            const generatedText = (typeof text === 'string' ? text : text.innerText);\n            if (generatedItems.has(generatedText)) {\n                continue;\n            }\n            generatedItems.add(generatedText);\n            contentHelper.appendElementRow(reason, text);\n        }\n    }\n    static aggregatedStatsForTraceEvent(total, parsedTrace, event) {\n        const events = parsedTrace.Renderer?.allTraceEntries || [];\n        const { startTime, endTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n        function eventComparator(startTime, e) {\n            const { startTime: eventStartTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(e);\n            return startTime - eventStartTime;\n        }\n        const index = Platform.ArrayUtilities.binaryIndexOf(events, startTime, eventComparator);\n        // Not a main thread event?\n        if (index < 0) {\n            return false;\n        }\n        let hasChildren = false;\n        if (endTime) {\n            for (let i = index; i < events.length; i++) {\n                const nextEvent = events[i];\n                const { startTime: nextEventStartTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(nextEvent);\n                if (nextEventStartTime >= endTime) {\n                    break;\n                }\n                const nextEventSelfTime = getEventSelfTime(nextEvent, parsedTrace);\n                if (!nextEventSelfTime) {\n                    continue;\n                }\n                if (nextEvent.tid !== event.tid) {\n                    continue;\n                }\n                if (i > index) {\n                    hasChildren = true;\n                }\n                const categoryName = TimelineUIUtils.eventStyle(nextEvent).category.name;\n                total[categoryName] = (total[categoryName] || 0) + nextEventSelfTime;\n            }\n        }\n        if (Trace.Types.Events.isPhaseAsync(event.ph)) {\n            if (endTime) {\n                let aggregatedTotal = 0;\n                for (const categoryName in total) {\n                    aggregatedTotal += total[categoryName];\n                }\n                total['idle'] = Math.max(0, endTime - startTime - aggregatedTotal);\n            }\n            return false;\n        }\n        return hasChildren;\n    }\n    static async buildPicturePreviewContent(parsedTrace, event, target) {\n        const snapshotEvent = parsedTrace.LayerTree.paintsToSnapshots.get(event);\n        if (!snapshotEvent) {\n            return null;\n        }\n        const paintProfilerModel = target.model(SDK.PaintProfiler.PaintProfilerModel);\n        if (!paintProfilerModel) {\n            return null;\n        }\n        const snapshot = await paintProfilerModel.loadSnapshot(snapshotEvent.args.snapshot.skp64);\n        if (!snapshot) {\n            return null;\n        }\n        const snapshotWithRect = {\n            snapshot,\n            rect: snapshotEvent.args.snapshot.params?.layer_rect,\n        };\n        if (!snapshotWithRect) {\n            return null;\n        }\n        const imageURLPromise = snapshotWithRect.snapshot.replay();\n        snapshotWithRect.snapshot.release();\n        const imageURL = await imageURLPromise;\n        if (!imageURL) {\n            return null;\n        }\n        const stylesContainer = document.createElement('div');\n        const shadowRoot = stylesContainer.attachShadow({ mode: 'open' });\n        shadowRoot.adoptedStyleSheets = [imagePreviewStyles];\n        const container = shadowRoot.createChild('div');\n        container.classList.add('image-preview-container', 'vbox', 'link');\n        const img = container.createChild('img');\n        img.src = imageURL;\n        img.alt = LegacyComponents.ImagePreview.ImagePreview.defaultAltTextForImageURL(imageURL);\n        const paintProfilerButton = container.createChild('a');\n        paintProfilerButton.textContent = i18nString(UIStrings.paintProfiler);\n        UI.ARIAUtils.markAsLink(container);\n        container.tabIndex = 0;\n        container.addEventListener('click', () => TimelinePanel.instance().select(TimelineSelection.fromTraceEvent(event)), false);\n        container.addEventListener('keydown', keyEvent => {\n            if (keyEvent.key === 'Enter') {\n                TimelinePanel.instance().select(TimelineSelection.fromTraceEvent(event));\n                keyEvent.consume(true);\n            }\n        });\n        return stylesContainer;\n    }\n    static createEventDivider(event, zeroTime) {\n        const eventDivider = document.createElement('div');\n        eventDivider.classList.add('resources-event-divider');\n        const { startTime: eventStartTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n        const startTime = i18n.TimeUtilities.millisToString(eventStartTime - zeroTime);\n        UI.Tooltip.Tooltip.install(eventDivider, i18nString(UIStrings.sAtS, { PH1: TimelineUIUtils.eventTitle(event), PH2: startTime }));\n        const style = TimelineUIUtils.markerStyleForEvent(event);\n        if (style.tall) {\n            eventDivider.style.backgroundColor = style.color;\n        }\n        return eventDivider;\n    }\n    static visibleEventsFilter() {\n        return new TimelineModel.TimelineModelFilter.TimelineVisibleEventsFilter(TimelineComponents.EntryStyles.visibleTypes());\n    }\n    // Included only for layout tests.\n    // TODO(crbug.com/1386091): Fix/port layout tests and remove.\n    static categories() {\n        return TimelineComponents.EntryStyles.getCategoryStyles();\n    }\n    static generatePieChart(aggregatedStats, selfCategory, selfTime) {\n        let total = 0;\n        for (const categoryName in aggregatedStats) {\n            total += aggregatedStats[categoryName];\n        }\n        const element = document.createElement('div');\n        element.classList.add('timeline-details-view-pie-chart-wrapper');\n        element.classList.add('hbox');\n        const pieChart = new PerfUI.PieChart.PieChart();\n        const slices = [];\n        function appendLegendRow(name, title, value, color) {\n            if (!value) {\n                return;\n            }\n            slices.push({ value, color, title });\n        }\n        // In case of self time, first add self, then children of the same category.\n        if (selfCategory) {\n            if (selfTime) {\n                appendLegendRow(selfCategory.name, i18nString(UIStrings.sSelf, { PH1: selfCategory.title }), selfTime, selfCategory.getCSSValue());\n            }\n            // Children of the same category.\n            const categoryTime = aggregatedStats[selfCategory.name];\n            const value = categoryTime - (selfTime || 0);\n            if (value > 0) {\n                appendLegendRow(selfCategory.name, i18nString(UIStrings.sChildren, { PH1: selfCategory.title }), value, selfCategory.getCSSValue());\n            }\n        }\n        // Add other categories.\n        for (const categoryName in TimelineComponents.EntryStyles.getCategoryStyles()) {\n            const category = TimelineComponents.EntryStyles\n                .getCategoryStyles()[categoryName];\n            if (categoryName === selfCategory?.name) {\n                // Do not add an entry for this event's self category because 2\n                // entries for it where added just before this for loop (for\n                // self and children times).\n                continue;\n            }\n            appendLegendRow(category.name, category.title, aggregatedStats[category.name], category.getCSSValue());\n        }\n        pieChart.data = {\n            chartName: i18nString(UIStrings.timeSpentInRendering),\n            size: 110,\n            formatter: (value) => i18n.TimeUtilities.preciseMillisToString(value),\n            showLegend: true,\n            total,\n            slices,\n        };\n        const pieChartContainer = element.createChild('div', 'vbox');\n        pieChartContainer.appendChild(pieChart);\n        return element;\n    }\n    static generateDetailsContentForFrame(frame, filmStrip, filmStripFrame) {\n        const contentHelper = new TimelineDetailsContentHelper(null, null);\n        contentHelper.addSection(i18nString(UIStrings.frame));\n        const duration = TimelineUIUtils.frameDuration(frame);\n        contentHelper.appendElementRow(i18nString(UIStrings.duration), duration);\n        if (filmStrip && filmStripFrame) {\n            const filmStripPreview = document.createElement('div');\n            filmStripPreview.classList.add('timeline-filmstrip-preview');\n            // TODO(paulirish): Adopt Util.ImageCache\n            void UI.UIUtils.loadImage(filmStripFrame.screenshotEvent.args.dataUri)\n                .then(image => image && filmStripPreview.appendChild(image));\n            contentHelper.appendElementRow('', filmStripPreview);\n            filmStripPreview.addEventListener('click', frameClicked.bind(null, filmStrip, filmStripFrame), false);\n        }\n        function frameClicked(filmStrip, filmStripFrame) {\n            PerfUI.FilmStripView.Dialog.fromFilmStrip(filmStrip, filmStripFrame.index);\n        }\n        return contentHelper.fragment;\n    }\n    static frameDuration(frame) {\n        const offsetMilli = Trace.Helpers.Timing.microSecondsToMilliseconds(frame.startTimeOffset);\n        const durationMilli = Trace.Helpers.Timing.microSecondsToMilliseconds(Trace.Types.Timing.MicroSeconds(frame.endTime - frame.startTime));\n        const durationText = i18nString(UIStrings.sAtSParentheses, {\n            PH1: i18n.TimeUtilities.millisToString(durationMilli, true),\n            PH2: i18n.TimeUtilities.millisToString(offsetMilli, true),\n        });\n        return i18n.i18n.getFormatLocalizedString(str_, UIStrings.emptyPlaceholder, { PH1: durationText });\n    }\n    static quadWidth(quad) {\n        return Math.round(Math.sqrt(Math.pow(quad[0] - quad[2], 2) + Math.pow(quad[1] - quad[3], 2)));\n    }\n    static quadHeight(quad) {\n        return Math.round(Math.sqrt(Math.pow(quad[0] - quad[6], 2) + Math.pow(quad[1] - quad[7], 2)));\n    }\n    static eventDispatchDesciptors() {\n        if (eventDispatchDesciptors) {\n            return eventDispatchDesciptors;\n        }\n        const lightOrange = 'hsl(40,100%,80%)';\n        const orange = 'hsl(40,100%,50%)';\n        const green = 'hsl(90,100%,40%)';\n        const purple = 'hsl(256,100%,75%)';\n        eventDispatchDesciptors = [\n            new EventDispatchTypeDescriptor(1, lightOrange, ['mousemove', 'mouseenter', 'mouseleave', 'mouseout', 'mouseover']),\n            new EventDispatchTypeDescriptor(1, lightOrange, ['pointerover', 'pointerout', 'pointerenter', 'pointerleave', 'pointermove']),\n            new EventDispatchTypeDescriptor(2, green, ['wheel']),\n            new EventDispatchTypeDescriptor(3, orange, ['click', 'mousedown', 'mouseup']),\n            new EventDispatchTypeDescriptor(3, orange, ['touchstart', 'touchend', 'touchmove', 'touchcancel']),\n            new EventDispatchTypeDescriptor(3, orange, ['pointerdown', 'pointerup', 'pointercancel', 'gotpointercapture', 'lostpointercapture']),\n            new EventDispatchTypeDescriptor(3, purple, ['keydown', 'keyup', 'keypress']),\n        ];\n        return eventDispatchDesciptors;\n    }\n    static markerStyleForEvent(event) {\n        const tallMarkerDashStyle = [6, 4];\n        const title = TimelineUIUtils.eventTitle(event);\n        if (event.name !== \"navigationStart\" /* Trace.Types.Events.Name.NAVIGATION_START */ &&\n            Trace.Helpers.Trace.eventHasCategory(event, Trace.Types.Events.Categories.Console) ||\n            Trace.Helpers.Trace.eventHasCategory(event, Trace.Types.Events.Categories.UserTiming)) {\n            return {\n                title,\n                dashStyle: tallMarkerDashStyle,\n                lineWidth: 0.5,\n                color: Trace.Helpers.Trace.eventHasCategory(event, Trace.Types.Events.Categories.Console) ? 'purple' : 'orange',\n                tall: false,\n                lowPriority: false,\n            };\n        }\n        let tall = false;\n        let color = 'grey';\n        switch (event.name) {\n            case \"navigationStart\" /* Trace.Types.Events.Name.NAVIGATION_START */:\n                color = '#FF9800';\n                tall = true;\n                break;\n            case \"FrameStartedLoading\" /* Trace.Types.Events.Name.FRAME_STARTED_LOADING */:\n                color = 'green';\n                tall = true;\n                break;\n            case \"MarkDOMContent\" /* Trace.Types.Events.Name.MARK_DOM_CONTENT */:\n                color = '#0867CB';\n                tall = true;\n                break;\n            case \"MarkLoad\" /* Trace.Types.Events.Name.MARK_LOAD */:\n                color = '#B31412';\n                tall = true;\n                break;\n            case \"firstPaint\" /* Trace.Types.Events.Name.MARK_FIRST_PAINT */:\n                color = '#228847';\n                tall = true;\n                break;\n            case \"firstContentfulPaint\" /* Trace.Types.Events.Name.MARK_FCP */:\n                color = '#1A6937';\n                tall = true;\n                break;\n            case \"largestContentfulPaint::Candidate\" /* Trace.Types.Events.Name.MARK_LCP_CANDIDATE */:\n                color = '#1A3422';\n                tall = true;\n                break;\n            case \"TimeStamp\" /* Trace.Types.Events.Name.TIME_STAMP */:\n                color = 'orange';\n                break;\n        }\n        return {\n            title,\n            dashStyle: tallMarkerDashStyle,\n            lineWidth: 0.5,\n            color,\n            tall,\n            lowPriority: false,\n        };\n    }\n    static colorForId(id) {\n        if (!colorGenerator) {\n            colorGenerator =\n                new Common.Color.Generator({ min: 30, max: 330, count: undefined }, { min: 50, max: 80, count: 3 }, 85);\n            colorGenerator.setColorForID('', '#f2ecdc');\n        }\n        return colorGenerator.colorForID(id);\n    }\n    static displayNameForFrame(frame, trimAt = 80) {\n        const url = frame.url;\n        return Common.ParsedURL.schemeIs(url, 'about:') ? `\"${Platform.StringUtilities.trimMiddle(frame.name, trimAt)}\"` :\n            frame.url.slice(0, trimAt);\n    }\n}\nexport const aggregatedStatsKey = Symbol('aggregatedStats');\nexport const previewElementSymbol = Symbol('previewElement');\nexport class EventDispatchTypeDescriptor {\n    priority;\n    color;\n    eventTypes;\n    constructor(priority, color, eventTypes) {\n        this.priority = priority;\n        this.color = color;\n        this.eventTypes = eventTypes;\n    }\n}\nexport class TimelineDetailsContentHelper {\n    fragment;\n    linkifierInternal;\n    target;\n    element;\n    tableElement;\n    constructor(target, linkifier) {\n        this.fragment = document.createDocumentFragment();\n        this.linkifierInternal = linkifier;\n        this.target = target;\n        this.element = document.createElement('div');\n        this.element.classList.add('timeline-details-view-block');\n        this.tableElement = this.element.createChild('div', 'vbox timeline-details-chip-body');\n        this.fragment.appendChild(this.element);\n    }\n    addSection(title, swatchColor) {\n        if (!this.tableElement.hasChildNodes()) {\n            this.element.removeChildren();\n        }\n        else {\n            this.element = document.createElement('div');\n            this.element.classList.add('timeline-details-view-block');\n            this.fragment.appendChild(this.element);\n        }\n        if (title) {\n            const titleElement = this.element.createChild('div', 'timeline-details-chip-title');\n            if (swatchColor) {\n                titleElement.createChild('div').style.backgroundColor = swatchColor;\n            }\n            UI.UIUtils.createTextChild(titleElement, title);\n        }\n        this.tableElement = this.element.createChild('div', 'vbox timeline-details-chip-body');\n        this.fragment.appendChild(this.element);\n    }\n    linkifier() {\n        return this.linkifierInternal;\n    }\n    appendTextRow(title, value) {\n        const rowElement = this.tableElement.createChild('div', 'timeline-details-view-row');\n        rowElement.createChild('div', 'timeline-details-view-row-title').textContent = title;\n        rowElement.createChild('div', 'timeline-details-view-row-value').textContent = value.toString();\n    }\n    appendElementRow(title, content, isWarning, isStacked) {\n        const rowElement = this.tableElement.createChild('div', 'timeline-details-view-row');\n        rowElement.setAttribute('data-row-title', title);\n        if (isWarning) {\n            rowElement.classList.add('timeline-details-warning');\n        }\n        if (isStacked) {\n            rowElement.classList.add('timeline-details-stack-values');\n        }\n        const titleElement = rowElement.createChild('div', 'timeline-details-view-row-title');\n        titleElement.textContent = title;\n        const valueElement = rowElement.createChild('div', 'timeline-details-view-row-value');\n        if (content instanceof Node) {\n            valueElement.appendChild(content);\n        }\n        else {\n            UI.UIUtils.createTextChild(valueElement, content || '');\n        }\n    }\n    appendLocationRow(title, url, startLine, startColumn) {\n        if (!this.linkifierInternal) {\n            return;\n        }\n        const options = {\n            tabStop: true,\n            columnNumber: startColumn,\n            showColumnNumber: true,\n            inlineFrameIndex: 0,\n        };\n        const link = this.linkifierInternal.maybeLinkifyScriptLocation(this.target, null, url, startLine, options);\n        if (!link) {\n            return;\n        }\n        this.appendElementRow(title, link);\n    }\n    appendLocationRange(title, url, startLine, endLine) {\n        if (!this.linkifierInternal || !this.target) {\n            return;\n        }\n        const locationContent = document.createElement('span');\n        const link = this.linkifierInternal.maybeLinkifyScriptLocation(this.target, null, url, startLine, { tabStop: true, inlineFrameIndex: 0 });\n        if (!link) {\n            return;\n        }\n        locationContent.appendChild(link);\n        UI.UIUtils.createTextChild(locationContent, Platform.StringUtilities.sprintf(' [%s…%s]', startLine + 1, (endLine || 0) + 1 || ''));\n        this.appendElementRow(title, locationContent);\n    }\n    createChildStackTraceElement(stackTrace) {\n        if (!this.linkifierInternal) {\n            return;\n        }\n        const stackTraceElement = this.tableElement.createChild('div', 'timeline-details-view-row timeline-details-stack-values');\n        const callFrameContents = LegacyComponents.JSPresentationUtils.buildStackTracePreviewContents(this.target, this.linkifierInternal, { stackTrace, tabStops: true, showColumnNumber: true });\n        stackTraceElement.appendChild(callFrameContents.element);\n    }\n}\nexport const categoryBreakdownCacheSymbol = Symbol('categoryBreakdownCache');\n/**\n * Given a particular event, this method can adjust its timestamp by\n * substracting the timestamp of the previous navigation. This helps in cases\n * where the user has navigated multiple times in the trace, so that we can show\n * the LCP (for example) relative to the last navigation.\n **/\nexport function timeStampForEventAdjustedForClosestNavigationIfPossible(event, parsedTrace) {\n    if (!parsedTrace) {\n        const { startTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n        return startTime;\n    }\n    const time = Trace.Helpers.Timing.timeStampForEventAdjustedByClosestNavigation(event, parsedTrace.Meta.traceBounds, parsedTrace.Meta.navigationsByNavigationId, parsedTrace.Meta.navigationsByFrameId);\n    return Trace.Helpers.Timing.microSecondsToMilliseconds(time);\n}\n/**\n * Determines if an event is potentially a marker event. A marker event here\n * is a single moment in time that we want to highlight on the timeline, such as\n * the LCP time. This method does not filter out events: for example, it treats\n * every LCP Candidate event as a potential marker event.\n **/\nexport function isMarkerEvent(parsedTrace, event) {\n    const { Name } = Trace.Types.Events;\n    if (event.name === \"TimeStamp\" /* Name.TIME_STAMP */) {\n        return true;\n    }\n    if (Trace.Types.Events.isFirstContentfulPaint(event) || Trace.Types.Events.isFirstPaint(event)) {\n        return event.args.frame === parsedTrace.Meta.mainFrameId;\n    }\n    if (Trace.Types.Events.isMarkDOMContent(event) || Trace.Types.Events.isMarkLoad(event) ||\n        Trace.Types.Events.isLargestContentfulPaintCandidate(event)) {\n        // isOutermostMainFrame was added in 2022, so we fallback to isMainFrame\n        // for older traces.\n        if (!event.args.data) {\n            return false;\n        }\n        const { isOutermostMainFrame, isMainFrame } = event.args.data;\n        if (typeof isOutermostMainFrame !== 'undefined') {\n            // If isOutermostMainFrame is defined we want to use that and not\n            // fallback to isMainFrame, even if isOutermostMainFrame is false. Hence\n            // this check.\n            return isOutermostMainFrame;\n        }\n        return Boolean(isMainFrame);\n    }\n    return false;\n}\nfunction getEventSelfTime(event, parsedTrace) {\n    const mapToUse = Trace.Types.Extensions.isSyntheticExtensionEntry(event) ?\n        parsedTrace.ExtensionTraceData.entryToNode :\n        parsedTrace.Renderer.entryToNode;\n    const selfTime = mapToUse.get(event)?.selfTime;\n    return selfTime ? Trace.Helpers.Timing.microSecondsToMilliseconds(selfTime) : Trace.Types.Timing.MilliSeconds(0);\n}\n//# sourceMappingURL=TimelineUIUtils.js.map","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport { TimelineUIUtils } from './TimelineUIUtils.js';\nexport class IsLong extends TimelineModel.TimelineModelFilter.TimelineModelFilter {\n    #minimumRecordDurationMilli = Trace.Types.Timing.MilliSeconds(0);\n    constructor() {\n        super();\n    }\n    setMinimumRecordDuration(value) {\n        this.#minimumRecordDurationMilli = value;\n    }\n    accept(event) {\n        const { duration } = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n        return duration >= this.#minimumRecordDurationMilli;\n    }\n}\nexport class Category extends TimelineModel.TimelineModelFilter.TimelineModelFilter {\n    constructor() {\n        super();\n    }\n    accept(event) {\n        return !TimelineUIUtils.eventStyle(event).category.hidden;\n    }\n}\nexport class TimelineRegExp extends TimelineModel.TimelineModelFilter.TimelineModelFilter {\n    regExpInternal;\n    constructor(regExp) {\n        super();\n        this.setRegExp(regExp || null);\n    }\n    setRegExp(regExp) {\n        this.regExpInternal = regExp;\n    }\n    regExp() {\n        return this.regExpInternal;\n    }\n    accept(event, parsedTrace) {\n        return !this.regExpInternal || TimelineUIUtils.testContentMatching(event, this.regExpInternal, parsedTrace);\n    }\n}\n//# sourceMappingURL=TimelineFilters.js.map","// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as ThirdPartyWeb from '../../third_party/third-party-web/third-party-web.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { ActiveFilters } from './ActiveFilters.js';\nimport * as TimelineComponents from './components/components.js';\nimport * as Extensions from './extensions/extensions.js';\nimport { Tracker } from './FreshRecording.js';\nimport { targetForEvent } from './TargetForEvent.js';\nimport { TimelineRegExp } from './TimelineFilters.js';\nimport { TimelineUIUtils } from './TimelineUIUtils.js';\nconst UIStrings = {\n    /**\n     *@description Text for the performance of something\n     */\n    performance: 'Performance',\n    /**\n     *@description Time of a single activity, as opposed to the total time\n     */\n    selfTime: 'Self time',\n    /**\n     *@description Text for the total time of something\n     */\n    totalTime: 'Total time',\n    /**\n     *@description Text in Timeline Tree View of the Performance panel\n     */\n    activity: 'Activity',\n    /**\n     *@description Text of a DOM element in Timeline Tree View of the Performance panel\n     */\n    selectItemForDetails: 'Select item for details.',\n    /**\n     *@description Time in miliseconds\n     *@example {30.1} PH1\n     */\n    fms: '{PH1} ms',\n    /**\n     *@description Number followed by percent sign\n     *@example {20} PH1\n     */\n    percentPlaceholder: '{PH1} %',\n    /**\n     *@description Text in Timeline Tree View of the Performance panel\n     */\n    chromeExtensionsOverhead: '[`Chrome` extensions overhead]',\n    /**\n     * @description Text in Timeline Tree View of the Performance panel. The text is presented\n     * when developers investigate the performance of a page. 'V8 Runtime' labels the time\n     * spent in (i.e. runtime) the V8 JavaScript engine.\n     */\n    vRuntime: '[`V8` Runtime]',\n    /**\n     *@description Text in Timeline Tree View of the Performance panel\n     */\n    unattributed: '[unattributed]',\n    /**\n     *@description Text that refers to one or a group of webpages\n     */\n    page: 'Page',\n    /**\n     *@description Text in Timeline Tree View of the Performance panel\n     */\n    noGrouping: 'No grouping',\n    /**\n     *@description Text in Timeline Tree View of the Performance panel\n     */\n    groupByActivity: 'Group by activity',\n    /**\n     *@description Text in Timeline Tree View of the Performance panel\n     */\n    groupByCategory: 'Group by category',\n    /**\n     *@description Text in Timeline Tree View of the Performance panel\n     */\n    groupByDomain: 'Group by domain',\n    /**\n     *@description Text in Timeline Tree View of the Performance panel\n     */\n    groupByFrame: 'Group by frame',\n    /**\n     *@description Text in Timeline Tree View of the Performance panel\n     */\n    groupBySubdomain: 'Group by subdomain',\n    /**\n     *@description Text in Timeline Tree View of the Performance panel\n     */\n    groupByUrl: 'Group by URL',\n    /**\n     *@description Text in Timeline Tree View of the Performance panel\n     */\n    groupByThirdParties: 'Group by Third Parties',\n    /**\n     *@description Aria-label for grouping combo box in Timeline Details View\n     */\n    groupBy: 'Group by',\n    /**\n     * @description Title of the sidebar pane in the Performance panel which shows the stack (call\n     * stack) where the program spent the most time (out of all the call stacks) while executing.\n     */\n    heaviestStack: 'Heaviest stack',\n    /**\n     * @description Tooltip for the the Heaviest stack sidebar toggle in the Timeline Tree View of the\n     * Performance panel. Command to open/show the sidebar.\n     */\n    showHeaviestStack: 'Show heaviest stack',\n    /**\n     * @description Tooltip for the the Heaviest stack sidebar toggle in the Timeline Tree View of the\n     * Performance panel. Command to close/hide the sidebar.\n     */\n    hideHeaviestStack: 'Hide heaviest stack',\n    /**\n     * @description Screen reader announcement when the heaviest stack sidebar is shown in the Performance panel.\n     */\n    heaviestStackShown: 'Heaviest stack sidebar shown',\n    /**\n     * @description Screen reader announcement when the heaviest stack sidebar is hidden in the Performance panel.\n     */\n    heaviestStackHidden: 'Heaviest stack sidebar hidden',\n    /**\n     *@description Data grid name for Timeline Stack data grids\n     */\n    timelineStack: 'Timeline stack',\n    /**\n    /*@description Text to search by matching case of the input button\n     */\n    matchCase: 'Match case',\n    /**\n     *@description Text for searching with regular expression button\n     */\n    useRegularExpression: 'Use regular expression',\n    /**\n     * @description Text for Match whole word button\n     */\n    matchWholeWord: 'Match whole word',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineTreeView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineTreeView extends UI.Widget.VBox {\n    #selectedEvents;\n    searchResults;\n    linkifier;\n    dataGrid;\n    lastHoveredProfileNode;\n    textFilterInternal;\n    taskFilter;\n    startTime;\n    endTime;\n    splitWidget;\n    detailsView;\n    searchableView;\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    currentThreadSetting;\n    lastSelectedNodeInternal;\n    root;\n    currentResult;\n    textFilterUI;\n    caseSensitiveButton;\n    regexButton;\n    matchWholeWord;\n    #parsedTrace = null;\n    constructor() {\n        super();\n        this.#selectedEvents = null;\n        this.element.classList.add('timeline-tree-view');\n        this.searchResults = [];\n    }\n    #eventNameForSorting(event) {\n        const name = TimelineUIUtils.eventTitle(event) || event.name;\n        if (!this.#parsedTrace) {\n            return name;\n        }\n        return name + ':@' + Trace.Extras.URLForEntry.getNonResolved(this.#parsedTrace, event);\n    }\n    setSearchableView(searchableView) {\n        this.searchableView = searchableView;\n    }\n    setModelWithEvents(selectedEvents, parsedTrace = null) {\n        this.#parsedTrace = parsedTrace;\n        this.#selectedEvents = selectedEvents;\n    }\n    parsedTrace() {\n        return this.#parsedTrace;\n    }\n    init() {\n        this.linkifier = new Components.Linkifier.Linkifier();\n        this.taskFilter = new TimelineModel.TimelineModelFilter.ExclusiveNameFilter([\n            \"RunTask\" /* Trace.Types.Events.Name.RUN_TASK */,\n        ]);\n        this.textFilterInternal = new TimelineRegExp();\n        this.currentThreadSetting = Common.Settings.Settings.instance().createSetting('timeline-tree-current-thread', 0);\n        this.currentThreadSetting.addChangeListener(this.refreshTree, this);\n        const columns = [];\n        this.populateColumns(columns);\n        this.splitWidget = new UI.SplitWidget.SplitWidget(true, true, 'timeline-tree-view-details-split-widget');\n        const mainView = new UI.Widget.VBox();\n        const toolbar = new UI.Toolbar.Toolbar('', mainView.element);\n        toolbar.element.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n        toolbar.makeWrappable(true);\n        this.populateToolbar(toolbar);\n        this.dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n            displayName: i18nString(UIStrings.performance),\n            columns,\n            refreshCallback: undefined,\n            editCallback: undefined,\n            deleteCallback: undefined,\n        });\n        this.dataGrid.addEventListener(\"SortingChanged\" /* DataGrid.DataGrid.Events.SORTING_CHANGED */, this.sortingChanged, this);\n        this.dataGrid.element.addEventListener('mousemove', this.onMouseMove.bind(this), true);\n        this.dataGrid.setResizeMethod(\"last\" /* DataGrid.DataGrid.ResizeMethod.LAST */);\n        this.dataGrid.setRowContextMenuCallback(this.onContextMenu.bind(this));\n        this.dataGrid.asWidget().show(mainView.element);\n        this.dataGrid.addEventListener(\"SelectedNode\" /* DataGrid.DataGrid.Events.SELECTED_NODE */, this.updateDetailsForSelection, this);\n        this.detailsView = new UI.Widget.VBox();\n        this.detailsView.element.classList.add('timeline-details-view', 'timeline-details-view-body');\n        this.splitWidget.setMainWidget(mainView);\n        this.splitWidget.setSidebarWidget(this.detailsView);\n        this.splitWidget.hideSidebar();\n        this.splitWidget.show(this.element);\n        this.splitWidget.addEventListener(\"ShowModeChanged\" /* UI.SplitWidget.Events.SHOW_MODE_CHANGED */, this.onShowModeChanged, this);\n        this.lastSelectedNodeInternal;\n    }\n    lastSelectedNode() {\n        return this.lastSelectedNodeInternal;\n    }\n    updateContents(selection) {\n        this.setRange(selection.startTime, selection.endTime);\n    }\n    setRange(startTime, endTime) {\n        this.startTime = startTime;\n        this.endTime = endTime;\n        this.refreshTree();\n    }\n    filters() {\n        return [this.taskFilter, this.textFilterInternal, ...(ActiveFilters.instance().activeFilters())];\n    }\n    filtersWithoutTextFilter() {\n        return [this.taskFilter, ...(ActiveFilters.instance().activeFilters())];\n    }\n    textFilter() {\n        return this.textFilterInternal;\n    }\n    exposePercentages() {\n        return false;\n    }\n    populateToolbar(toolbar) {\n        this.caseSensitiveButton =\n            new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.matchCase), 'match-case', undefined, 'match-case');\n        this.caseSensitiveButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, () => {\n            this.#filterChanged();\n        }, this);\n        toolbar.appendToolbarItem(this.caseSensitiveButton);\n        this.regexButton = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.useRegularExpression), 'regular-expression', undefined, 'regular-expression');\n        this.regexButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, () => {\n            this.#filterChanged();\n        }, this);\n        toolbar.appendToolbarItem(this.regexButton);\n        this.matchWholeWord = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.matchWholeWord), 'match-whole-word', undefined, 'match-whole-word');\n        this.matchWholeWord.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, () => {\n            this.#filterChanged();\n        }, this);\n        toolbar.appendToolbarItem(this.matchWholeWord);\n        const textFilterUI = new UI.Toolbar.ToolbarFilter();\n        this.textFilterUI = textFilterUI;\n        textFilterUI.addEventListener(\"TextChanged\" /* UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED */, this.#filterChanged, this);\n        toolbar.appendToolbarItem(textFilterUI);\n    }\n    selectedEvents() {\n        // TODO: can we make this type readonly?\n        return this.#selectedEvents || [];\n    }\n    onHover(_node) {\n    }\n    appendContextMenuItems(_contextMenu, _node) {\n    }\n    selectProfileNode(treeNode, suppressSelectedEvent) {\n        const pathToRoot = [];\n        let node = treeNode;\n        for (; node; node = node.parent) {\n            pathToRoot.push(node);\n        }\n        for (let i = pathToRoot.length - 1; i > 0; --i) {\n            const gridNode = this.dataGridNodeForTreeNode(pathToRoot[i]);\n            if (gridNode && gridNode.dataGrid) {\n                gridNode.expand();\n            }\n        }\n        const gridNode = this.dataGridNodeForTreeNode(treeNode);\n        if (gridNode && gridNode.dataGrid) {\n            gridNode.reveal();\n            gridNode.select(suppressSelectedEvent);\n        }\n    }\n    refreshTree() {\n        if (!this.element.parentElement) {\n            // This function can be called in different views (Bottom-Up and\n            // Call Tree) by the same single event whenever the group-by\n            // dropdown changes value. Thus, we bail out whenever the view is\n            // not visible, which we know if the related element is detached\n            // from the document.\n            return;\n        }\n        this.linkifier.reset();\n        this.dataGrid.rootNode().removeChildren();\n        if (!this.#parsedTrace) {\n            this.updateDetailsForSelection();\n            return;\n        }\n        this.root = this.buildTree();\n        const children = this.root.children();\n        let maxSelfTime = 0;\n        let maxTotalTime = 0;\n        const totalUsedTime = this.root.totalTime - this.root.selfTime;\n        for (const child of children.values()) {\n            maxSelfTime = Math.max(maxSelfTime, child.selfTime);\n            maxTotalTime = Math.max(maxTotalTime, child.totalTime);\n        }\n        for (const child of children.values()) {\n            // Exclude the idle time off the total calculation.\n            const gridNode = new TreeGridNode(child, totalUsedTime, maxSelfTime, maxTotalTime, this);\n            this.dataGrid.insertChild(gridNode);\n        }\n        this.sortingChanged();\n        this.updateDetailsForSelection();\n        if (this.searchableView) {\n            this.searchableView.refreshSearch();\n        }\n        const rootNode = this.dataGrid.rootNode();\n        if (rootNode.children.length > 0) {\n            rootNode.children[0].select(/* supressSelectedEvent */ true);\n        }\n    }\n    buildTree() {\n        throw new Error('Not Implemented');\n    }\n    buildTopDownTree(doNotAggregate, groupIdCallback) {\n        return new TimelineModel.TimelineProfileTree.TopDownRootNode(this.selectedEvents(), this.filters(), this.startTime, this.endTime, doNotAggregate, groupIdCallback);\n    }\n    populateColumns(columns) {\n        columns.push({ id: 'self', title: i18nString(UIStrings.selfTime), width: '120px', fixedWidth: true, sortable: true });\n        columns.push({ id: 'total', title: i18nString(UIStrings.totalTime), width: '120px', fixedWidth: true, sortable: true });\n        columns.push({ id: 'activity', title: i18nString(UIStrings.activity), disclosure: true, sortable: true });\n    }\n    sortingChanged() {\n        const columnId = this.dataGrid.sortColumnId();\n        if (!columnId) {\n            return;\n        }\n        let sortFunction;\n        const compareNameSortFn = (a, b) => {\n            const nodeA = a;\n            const nodeB = b;\n            const eventA = nodeA.profileNode.event;\n            const eventB = nodeB.profileNode.event;\n            // Should not happen, but guard against the nodes not having events.\n            if (!eventA || !eventB) {\n                return 0;\n            }\n            if (!this.#parsedTrace) {\n                return 0;\n            }\n            const nameA = this.#eventNameForSorting(eventA);\n            const nameB = this.#eventNameForSorting(eventB);\n            return nameA.localeCompare(nameB);\n        };\n        switch (columnId) {\n            case 'start-time':\n                sortFunction = compareStartTime;\n                break;\n            case 'self':\n                sortFunction = compareSelfTime;\n                break;\n            case 'total':\n                sortFunction = compareTotalTime;\n                break;\n            case 'activity':\n                sortFunction = compareNameSortFn;\n                break;\n            default:\n                console.assert(false, 'Unknown sort field: ' + columnId);\n                return;\n        }\n        this.dataGrid.sortNodes(sortFunction, !this.dataGrid.isSortOrderAscending());\n        function compareSelfTime(a, b) {\n            const nodeA = a;\n            const nodeB = b;\n            return nodeA.profileNode.selfTime - nodeB.profileNode.selfTime;\n        }\n        function compareStartTime(a, b) {\n            const nodeA = a;\n            const nodeB = b;\n            const eventA = nodeA.profileNode.event;\n            const eventB = nodeB.profileNode.event;\n            // Should not happen, but guard against the nodes not having events.\n            if (!eventA || !eventB) {\n                return 0;\n            }\n            return eventA.ts - eventB.ts;\n        }\n        function compareTotalTime(a, b) {\n            const nodeA = a;\n            const nodeB = b;\n            return nodeA.profileNode.totalTime - nodeB.profileNode.totalTime;\n        }\n    }\n    #filterChanged() {\n        const searchQuery = this.textFilterUI && this.textFilterUI.value();\n        const caseSensitive = this.caseSensitiveButton !== undefined && this.caseSensitiveButton.isToggled();\n        const isRegex = this.regexButton !== undefined && this.regexButton.isToggled();\n        const matchWholeWord = this.matchWholeWord !== undefined && this.matchWholeWord.isToggled();\n        this.textFilterInternal.setRegExp(searchQuery ? Platform.StringUtilities.createSearchRegex(searchQuery, caseSensitive, isRegex, matchWholeWord) :\n            null);\n        this.refreshTree();\n    }\n    onShowModeChanged() {\n        if (this.splitWidget.showMode() === \"OnlyMain\" /* UI.SplitWidget.ShowMode.ONLY_MAIN */) {\n            return;\n        }\n        this.lastSelectedNodeInternal = undefined;\n        this.updateDetailsForSelection();\n    }\n    updateDetailsForSelection() {\n        const selectedNode = this.dataGrid.selectedNode ? this.dataGrid.selectedNode.profileNode : null;\n        if (selectedNode === this.lastSelectedNodeInternal) {\n            return;\n        }\n        this.lastSelectedNodeInternal = selectedNode;\n        if (this.splitWidget.showMode() === \"OnlyMain\" /* UI.SplitWidget.ShowMode.ONLY_MAIN */) {\n            return;\n        }\n        this.detailsView.detachChildWidgets();\n        this.detailsView.element.removeChildren();\n        if (selectedNode && this.showDetailsForNode(selectedNode)) {\n            return;\n        }\n        const banner = this.detailsView.element.createChild('div', 'full-widget-dimmed-banner');\n        UI.UIUtils.createTextChild(banner, i18nString(UIStrings.selectItemForDetails));\n    }\n    showDetailsForNode(_node) {\n        return false;\n    }\n    onMouseMove(event) {\n        const gridNode = event.target && (event.target instanceof Node) ?\n            (this.dataGrid.dataGridNodeFromNode(event.target)) :\n            null;\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // @ts-expect-error\n        const profileNode = gridNode && gridNode._profileNode;\n        if (profileNode === this.lastHoveredProfileNode) {\n            return;\n        }\n        this.lastHoveredProfileNode = profileNode;\n        this.onHover(profileNode);\n    }\n    onContextMenu(contextMenu, eventGridNode) {\n        const gridNode = eventGridNode;\n        if (gridNode.linkElement) {\n            contextMenu.appendApplicableItems(gridNode.linkElement);\n        }\n        const profileNode = gridNode.profileNode;\n        if (profileNode) {\n            this.appendContextMenuItems(contextMenu, profileNode);\n        }\n    }\n    dataGridNodeForTreeNode(treeNode) {\n        return profileNodeToTreeGridNode.get(treeNode) || null;\n    }\n    // UI.SearchableView.Searchable implementation\n    onSearchCanceled() {\n        this.searchResults = [];\n        this.currentResult = 0;\n    }\n    performSearch(searchConfig, _shouldJump, _jumpBackwards) {\n        this.searchResults = [];\n        this.currentResult = 0;\n        if (!this.root) {\n            return;\n        }\n        const searchRegex = searchConfig.toSearchRegex();\n        this.searchResults = this.root.searchTree(event => TimelineUIUtils.testContentMatching(event, searchRegex.regex, this.#parsedTrace || undefined));\n        this.searchableView.updateSearchMatchesCount(this.searchResults.length);\n    }\n    jumpToNextSearchResult() {\n        if (!this.searchResults.length || this.currentResult === undefined) {\n            return;\n        }\n        this.selectProfileNode(this.searchResults[this.currentResult], false);\n        this.currentResult = Platform.NumberUtilities.mod(this.currentResult + 1, this.searchResults.length);\n    }\n    jumpToPreviousSearchResult() {\n        if (!this.searchResults.length || this.currentResult === undefined) {\n            return;\n        }\n        this.selectProfileNode(this.searchResults[this.currentResult], false);\n        this.currentResult = Platform.NumberUtilities.mod(this.currentResult - 1, this.searchResults.length);\n    }\n    supportsCaseSensitiveSearch() {\n        return true;\n    }\n    supportsRegexSearch() {\n        return true;\n    }\n}\nexport class GridNode extends DataGrid.SortableDataGrid.SortableDataGridNode {\n    populated;\n    profileNode;\n    treeView;\n    grandTotalTime;\n    maxSelfTime;\n    maxTotalTime;\n    linkElement;\n    constructor(profileNode, grandTotalTime, maxSelfTime, maxTotalTime, treeView) {\n        super(null, false);\n        this.populated = false;\n        this.profileNode = profileNode;\n        this.treeView = treeView;\n        this.grandTotalTime = grandTotalTime;\n        this.maxSelfTime = maxSelfTime;\n        this.maxTotalTime = maxTotalTime;\n        this.linkElement = null;\n    }\n    createCell(columnId) {\n        if (columnId === 'activity') {\n            return this.createNameCell(columnId);\n        }\n        return this.createValueCell(columnId) || super.createCell(columnId);\n    }\n    createNameCell(columnId) {\n        const cell = this.createTD(columnId);\n        const container = cell.createChild('div', 'name-container');\n        const iconContainer = container.createChild('div', 'activity-icon-container');\n        const icon = iconContainer.createChild('div', 'activity-icon');\n        const name = container.createChild('div', 'activity-name');\n        const event = this.profileNode.event;\n        if (this.profileNode.isGroupNode()) {\n            const treeView = this.treeView;\n            const info = treeView.displayInfoForGroupNode(this.profileNode);\n            name.textContent = info.name;\n            icon.style.backgroundColor = info.color;\n            if (info.icon) {\n                iconContainer.insertBefore(info.icon, icon);\n            }\n        }\n        else if (event) {\n            name.textContent = TimelineUIUtils.eventTitle(event);\n            const parsedTrace = this.treeView.parsedTrace();\n            const target = parsedTrace ? targetForEvent(parsedTrace, event) : null;\n            const linkifier = this.treeView.linkifier;\n            const isFreshRecording = Boolean(parsedTrace && Tracker.instance().recordingIsFresh(parsedTrace));\n            this.linkElement = TimelineUIUtils.linkifyTopCallFrame(event, target, linkifier, isFreshRecording);\n            if (this.linkElement) {\n                container.createChild('div', 'activity-link').appendChild(this.linkElement);\n            }\n            const eventStyle = TimelineUIUtils.eventStyle(event);\n            const eventCategory = eventStyle.category;\n            UI.ARIAUtils.setLabel(icon, eventCategory.title);\n            icon.style.backgroundColor = eventCategory.getComputedColorValue();\n            if (Trace.Types.Extensions.isSyntheticExtensionEntry(event)) {\n                icon.style.backgroundColor = Extensions.ExtensionUI.extensionEntryColor(event);\n            }\n        }\n        return cell;\n    }\n    createValueCell(columnId) {\n        if (columnId !== 'self' && columnId !== 'total' && columnId !== 'start-time') {\n            return null;\n        }\n        let showPercents = false;\n        let value;\n        let maxTime;\n        let event;\n        switch (columnId) {\n            case 'start-time':\n                {\n                    event = this.profileNode.event;\n                    const parsedTrace = this.treeView.parsedTrace();\n                    if (!parsedTrace) {\n                        throw new Error('Unable to load trace data for tree view');\n                    }\n                    const timings = event && Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n                    const startTime = timings?.startTime ?? 0;\n                    value = startTime - Trace.Helpers.Timing.microSecondsToMilliseconds(parsedTrace.Meta.traceBounds.min);\n                }\n                break;\n            case 'self':\n                value = this.profileNode.selfTime;\n                maxTime = this.maxSelfTime;\n                showPercents = true;\n                break;\n            case 'total':\n                value = this.profileNode.totalTime;\n                maxTime = this.maxTotalTime;\n                showPercents = true;\n                break;\n            default:\n                return null;\n        }\n        const cell = this.createTD(columnId);\n        cell.className = 'numeric-column';\n        cell.setAttribute('title', i18nString(UIStrings.fms, { PH1: value.toFixed(4) }));\n        const textDiv = cell.createChild('div');\n        textDiv.createChild('span').textContent = i18nString(UIStrings.fms, { PH1: value.toFixed(1) });\n        if (showPercents && this.treeView.exposePercentages()) {\n            textDiv.createChild('span', 'percent-column').textContent =\n                i18nString(UIStrings.percentPlaceholder, { PH1: (value / this.grandTotalTime * 100).toFixed(1) });\n        }\n        if (maxTime) {\n            textDiv.classList.add('background-percent-bar');\n            cell.createChild('div', 'background-bar-container').createChild('div', 'background-bar').style.width =\n                (value * 100 / maxTime).toFixed(1) + '%';\n        }\n        return cell;\n    }\n}\nexport class TreeGridNode extends GridNode {\n    constructor(profileNode, grandTotalTime, maxSelfTime, maxTotalTime, treeView) {\n        super(profileNode, grandTotalTime, maxSelfTime, maxTotalTime, treeView);\n        this.setHasChildren(this.profileNode.hasChildren());\n        profileNodeToTreeGridNode.set(profileNode, this);\n    }\n    populate() {\n        if (this.populated) {\n            return;\n        }\n        this.populated = true;\n        if (!this.profileNode.children) {\n            return;\n        }\n        for (const node of this.profileNode.children().values()) {\n            const gridNode = new TreeGridNode(node, this.grandTotalTime, this.maxSelfTime, this.maxTotalTime, this.treeView);\n            this.insertChildOrdered(gridNode);\n        }\n    }\n}\nconst profileNodeToTreeGridNode = new WeakMap();\nexport class AggregatedTimelineTreeView extends TimelineTreeView {\n    groupBySetting;\n    stackView;\n    executionContextNamesByOrigin = new Map();\n    constructor() {\n        super();\n        this.groupBySetting = Common.Settings.Settings.instance().createSetting('timeline-tree-group-by', AggregatedTimelineTreeView.GroupBy.None);\n        this.groupBySetting.addChangeListener(this.refreshTree.bind(this));\n        this.init();\n        this.stackView = new TimelineStackView(this);\n        this.stackView.addEventListener(\"SelectionChanged\" /* TimelineStackView.Events.SELECTION_CHANGED */, this.onStackViewSelectionChanged, this);\n    }\n    setGroupBySettingForTests(groupBy) {\n        this.groupBySetting.set(groupBy);\n    }\n    updateContents(selection) {\n        this.updateExtensionResolver();\n        super.updateContents(selection);\n        const rootNode = this.dataGrid.rootNode();\n        if (rootNode.children.length) {\n            rootNode.children[0].select(/* suppressSelectedEvent */ true);\n        }\n    }\n    updateExtensionResolver() {\n        this.executionContextNamesByOrigin = new Map();\n        for (const runtimeModel of SDK.TargetManager.TargetManager.instance().models(SDK.RuntimeModel.RuntimeModel)) {\n            for (const context of runtimeModel.executionContexts()) {\n                this.executionContextNamesByOrigin.set(context.origin, context.name);\n            }\n        }\n    }\n    beautifyDomainName(name) {\n        if (AggregatedTimelineTreeView.isExtensionInternalURL(name)) {\n            name = i18nString(UIStrings.chromeExtensionsOverhead);\n        }\n        else if (AggregatedTimelineTreeView.isV8NativeURL(name)) {\n            name = i18nString(UIStrings.vRuntime);\n        }\n        else if (name.startsWith('chrome-extension')) {\n            name = this.executionContextNamesByOrigin.get(name) || name;\n        }\n        return name;\n    }\n    displayInfoForGroupNode(node) {\n        const categories = TimelineComponents.EntryStyles.getCategoryStyles();\n        const color = node.id && node.event ? TimelineUIUtils.eventColor(node.event) : categories['other'].color;\n        const unattributed = i18nString(UIStrings.unattributed);\n        const id = typeof node.id === 'symbol' ? undefined : node.id;\n        switch (this.groupBySetting.get()) {\n            case AggregatedTimelineTreeView.GroupBy.Category: {\n                const idIsValid = id && TimelineComponents.EntryStyles.stringIsEventCategory(id);\n                const category = idIsValid ? categories[id] || categories['other'] : { title: unattributed, color: unattributed };\n                return { name: category.title, color: category.color, icon: undefined };\n            }\n            case AggregatedTimelineTreeView.GroupBy.Domain:\n            case AggregatedTimelineTreeView.GroupBy.Subdomain:\n            case AggregatedTimelineTreeView.GroupBy.ThirdParties: {\n                const domainName = id ? this.beautifyDomainName(id) : undefined;\n                return { name: domainName || unattributed, color, icon: undefined };\n            }\n            case AggregatedTimelineTreeView.GroupBy.EventName: {\n                if (!node.event) {\n                    throw new Error('Unable to find event for group by operation');\n                }\n                const name = TimelineUIUtils.eventTitle(node.event);\n                return {\n                    name,\n                    color,\n                    icon: undefined,\n                };\n            }\n            case AggregatedTimelineTreeView.GroupBy.URL:\n                break;\n            case AggregatedTimelineTreeView.GroupBy.Frame: {\n                const frame = id ? this.parsedTrace()?.PageFrames.frames.get(id) : undefined;\n                const frameName = frame ? TimelineUIUtils.displayNameForFrame(frame) : i18nString(UIStrings.page);\n                return { name: frameName, color, icon: undefined };\n            }\n            default:\n                console.assert(false, 'Unexpected grouping type');\n        }\n        return { name: id || unattributed, color, icon: undefined };\n    }\n    populateToolbar(toolbar) {\n        super.populateToolbar(toolbar);\n        const groupBy = AggregatedTimelineTreeView.GroupBy;\n        const options = [\n            { label: i18nString(UIStrings.noGrouping), value: groupBy.None },\n            { label: i18nString(UIStrings.groupByActivity), value: groupBy.EventName },\n            { label: i18nString(UIStrings.groupByCategory), value: groupBy.Category },\n            { label: i18nString(UIStrings.groupByDomain), value: groupBy.Domain },\n            { label: i18nString(UIStrings.groupByFrame), value: groupBy.Frame },\n            { label: i18nString(UIStrings.groupBySubdomain), value: groupBy.Subdomain },\n            { label: i18nString(UIStrings.groupByUrl), value: groupBy.URL },\n            { label: i18nString(UIStrings.groupByThirdParties), value: groupBy.ThirdParties },\n        ];\n        toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingComboBox(options, this.groupBySetting, i18nString(UIStrings.groupBy)));\n        toolbar.appendSpacer();\n        toolbar.appendToolbarItem(this.splitWidget.createShowHideSidebarButton(i18nString(UIStrings.showHeaviestStack), i18nString(UIStrings.hideHeaviestStack), i18nString(UIStrings.heaviestStackShown), i18nString(UIStrings.heaviestStackHidden)));\n    }\n    buildHeaviestStack(treeNode) {\n        console.assert(Boolean(treeNode.parent), 'Attempt to build stack for tree root');\n        let result = [];\n        // Do not add root to the stack, as it's the tree itself.\n        for (let node = treeNode; node && node.parent; node = node.parent) {\n            result.push(node);\n        }\n        result = result.reverse();\n        for (let node = treeNode; node && node.children() && node.children().size;) {\n            const children = Array.from(node.children().values());\n            node = children.reduce((a, b) => a.totalTime > b.totalTime ? a : b);\n            result.push(node);\n        }\n        return result;\n    }\n    exposePercentages() {\n        return true;\n    }\n    onStackViewSelectionChanged() {\n        const treeNode = this.stackView.selectedTreeNode();\n        if (treeNode) {\n            this.selectProfileNode(treeNode, true);\n        }\n    }\n    showDetailsForNode(node) {\n        const stack = this.buildHeaviestStack(node);\n        this.stackView.setStack(stack, node);\n        this.stackView.show(this.detailsView.element);\n        return true;\n    }\n    groupingFunction(groupBy) {\n        const GroupBy = AggregatedTimelineTreeView.GroupBy;\n        switch (groupBy) {\n            case GroupBy.None:\n                return null;\n            case GroupBy.EventName:\n                return (event) => TimelineUIUtils.eventStyle(event).title;\n            case GroupBy.Category:\n                return (event) => TimelineUIUtils.eventStyle(event).category.name;\n            case GroupBy.Subdomain:\n            case GroupBy.Domain:\n            case GroupBy.ThirdParties:\n                return this.domainByEvent.bind(this, groupBy);\n            case GroupBy.URL:\n                return (event) => {\n                    const parsedTrace = this.parsedTrace();\n                    return parsedTrace ? Trace.Extras.URLForEntry.getNonResolved(parsedTrace, event) ?? '' : '';\n                };\n            case GroupBy.Frame:\n                return (event) => {\n                    const frameId = Trace.Helpers.Trace.frameIDForEvent(event);\n                    return frameId || this.parsedTrace()?.Meta.mainFrameId || '';\n                };\n            default:\n                console.assert(false, `Unexpected aggregation setting: ${groupBy}`);\n                return null;\n        }\n    }\n    domainByEvent(groupBy, event) {\n        const parsedTrace = this.parsedTrace();\n        if (!parsedTrace) {\n            return '';\n        }\n        const url = Trace.Extras.URLForEntry.getNonResolved(parsedTrace, event);\n        if (!url) {\n            return '';\n        }\n        if (AggregatedTimelineTreeView.isExtensionInternalURL(url)) {\n            return AggregatedTimelineTreeView.extensionInternalPrefix;\n        }\n        if (AggregatedTimelineTreeView.isV8NativeURL(url)) {\n            return AggregatedTimelineTreeView.v8NativePrefix;\n        }\n        const parsedURL = Common.ParsedURL.ParsedURL.fromString(url);\n        if (!parsedURL) {\n            return '';\n        }\n        if (parsedURL.scheme === 'chrome-extension') {\n            return parsedURL.scheme + '://' + parsedURL.host;\n        }\n        if (groupBy === AggregatedTimelineTreeView.GroupBy.ThirdParties) {\n            const entity = ThirdPartyWeb.ThirdPartyWeb.getEntity(url);\n            if (!entity) {\n                return parsedURL.host;\n            }\n            return entity.name;\n        }\n        if (groupBy === AggregatedTimelineTreeView.GroupBy.Subdomain) {\n            return parsedURL.host;\n        }\n        if (/^[.0-9]+$/.test(parsedURL.host)) {\n            return parsedURL.host;\n        }\n        const domainMatch = /([^.]*\\.)?[^.]*$/.exec(parsedURL.host);\n        return domainMatch && domainMatch[0] || '';\n    }\n    static isExtensionInternalURL(url) {\n        return url.startsWith(AggregatedTimelineTreeView.extensionInternalPrefix);\n    }\n    static isV8NativeURL(url) {\n        return url.startsWith(AggregatedTimelineTreeView.v8NativePrefix);\n    }\n    static extensionInternalPrefix = 'extensions::';\n    static v8NativePrefix = 'native ';\n}\n(function (AggregatedTimelineTreeView) {\n    let GroupBy;\n    (function (GroupBy) {\n        /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n        GroupBy[\"None\"] = \"None\";\n        GroupBy[\"EventName\"] = \"EventName\";\n        GroupBy[\"Category\"] = \"Category\";\n        GroupBy[\"Domain\"] = \"Domain\";\n        GroupBy[\"Subdomain\"] = \"Subdomain\";\n        GroupBy[\"URL\"] = \"URL\";\n        GroupBy[\"Frame\"] = \"Frame\";\n        GroupBy[\"ThirdParties\"] = \"ThirdParties\";\n        /* eslint-enable @typescript-eslint/naming-convention */\n    })(GroupBy = AggregatedTimelineTreeView.GroupBy || (AggregatedTimelineTreeView.GroupBy = {}));\n})(AggregatedTimelineTreeView || (AggregatedTimelineTreeView = {}));\nexport class CallTreeTimelineTreeView extends AggregatedTimelineTreeView {\n    constructor() {\n        super();\n        this.element.setAttribute('jslog', `${VisualLogging.pane('call-tree').track({ resize: true })}`);\n        this.dataGrid.markColumnAsSortedBy('total', DataGrid.DataGrid.Order.Descending);\n    }\n    buildTree() {\n        const grouping = this.groupBySetting.get();\n        return this.buildTopDownTree(false, this.groupingFunction(grouping));\n    }\n}\nexport class BottomUpTimelineTreeView extends AggregatedTimelineTreeView {\n    constructor() {\n        super();\n        this.element.setAttribute('jslog', `${VisualLogging.pane('bottom-up').track({ resize: true })}`);\n        this.dataGrid.markColumnAsSortedBy('self', DataGrid.DataGrid.Order.Descending);\n    }\n    buildTree() {\n        return new TimelineModel.TimelineProfileTree.BottomUpRootNode(this.selectedEvents(), this.textFilter(), this.filtersWithoutTextFilter(), this.startTime, this.endTime, this.groupingFunction(this.groupBySetting.get()));\n    }\n}\nexport class TimelineStackView extends Common.ObjectWrapper.eventMixin(UI.Widget.VBox) {\n    treeView;\n    dataGrid;\n    constructor(treeView) {\n        super();\n        const header = this.element.createChild('div', 'timeline-stack-view-header');\n        header.textContent = i18nString(UIStrings.heaviestStack);\n        this.treeView = treeView;\n        const columns = [\n            { id: 'total', title: i18nString(UIStrings.totalTime), fixedWidth: true, width: '110px' },\n            { id: 'activity', title: i18nString(UIStrings.activity) },\n        ];\n        this.dataGrid = new DataGrid.ViewportDataGrid.ViewportDataGrid({\n            displayName: i18nString(UIStrings.timelineStack),\n            columns,\n            deleteCallback: undefined,\n            editCallback: undefined,\n            refreshCallback: undefined,\n        });\n        this.dataGrid.setResizeMethod(\"last\" /* DataGrid.DataGrid.ResizeMethod.LAST */);\n        this.dataGrid.addEventListener(\"SelectedNode\" /* DataGrid.DataGrid.Events.SELECTED_NODE */, this.onSelectionChanged, this);\n        this.dataGrid.asWidget().show(this.element);\n    }\n    setStack(stack, selectedNode) {\n        const rootNode = this.dataGrid.rootNode();\n        rootNode.removeChildren();\n        let nodeToReveal = null;\n        const totalTime = Math.max.apply(Math, stack.map(node => node.totalTime));\n        for (const node of stack) {\n            const gridNode = new GridNode(node, totalTime, totalTime, totalTime, this.treeView);\n            rootNode.appendChild(gridNode);\n            if (node === selectedNode) {\n                nodeToReveal = gridNode;\n            }\n        }\n        if (nodeToReveal) {\n            nodeToReveal.revealAndSelect();\n        }\n    }\n    selectedTreeNode() {\n        const selectedNode = this.dataGrid.selectedNode;\n        return selectedNode && selectedNode.profileNode;\n    }\n    onSelectionChanged() {\n        this.dispatchEventToListeners(\"SelectionChanged\" /* TimelineStackView.Events.SELECTION_CHANGED */);\n    }\n}\n//# sourceMappingURL=TimelineTreeView.js.map","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as Components from './components/components.js';\nimport { Category, IsLong } from './TimelineFilters.js';\nimport { TimelineSelection } from './TimelineSelection.js';\nimport { TimelineTreeView } from './TimelineTreeView.js';\nimport { TimelineUIUtils } from './TimelineUIUtils.js';\nconst UIStrings = {\n    /**\n     *@description Text for the start time of an activity\n     */\n    startTime: 'Start time',\n    /**\n     *@description Screen reader label for a select box that filters the Performance panel Event Log by duration.\n     */\n    durationFilter: 'Duration filter',\n    /**\n     *@description Text in Events Timeline Tree View of the Performance panel\n     *@example {2} PH1\n     */\n    Dms: '{PH1} ms',\n    /**\n     *@description Text for everything\n     */\n    all: 'All',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/EventsTimelineTreeView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class EventsTimelineTreeView extends TimelineTreeView {\n    filtersControl;\n    delegate;\n    currentTree;\n    constructor(delegate) {\n        super();\n        this.element.setAttribute('jslog', `${VisualLogging.pane('event-log').track({ resize: true })}`);\n        this.filtersControl = new Filters();\n        this.filtersControl.addEventListener(\"FilterChanged\" /* Events.FILTER_CHANGED */, this.onFilterChanged, this);\n        this.init();\n        this.delegate = delegate;\n        this.dataGrid.markColumnAsSortedBy('start-time', DataGrid.DataGrid.Order.Ascending);\n        this.splitWidget.showBoth();\n    }\n    filters() {\n        return [...super.filters(), ...this.filtersControl.filters()];\n    }\n    updateContents(selection) {\n        super.updateContents(selection);\n        if (TimelineSelection.isTraceEventSelection(selection.object)) {\n            this.selectEvent(selection.object, true);\n        }\n    }\n    buildTree() {\n        this.currentTree = this.buildTopDownTree(true, null);\n        return this.currentTree;\n    }\n    onFilterChanged() {\n        const lastSelectedNode = this.lastSelectedNode();\n        const selectedEvent = lastSelectedNode && lastSelectedNode.event;\n        this.refreshTree();\n        if (selectedEvent) {\n            this.selectEvent(selectedEvent, false);\n        }\n    }\n    findNodeWithEvent(event) {\n        if (event.name === \"RunTask\" /* Trace.Types.Events.Name.RUN_TASK */) {\n            // No node is ever created for the top level RunTask event, so\n            // bail out preemptively\n            return null;\n        }\n        const iterators = [this.currentTree.children().values()];\n        while (iterators.length) {\n            const { done, value: child } = iterators[iterators.length - 1].next();\n            if (done) {\n                iterators.pop();\n                continue;\n            }\n            if (child.event === event) {\n                return child;\n            }\n            iterators.push(child.children().values());\n        }\n        return null;\n    }\n    selectEvent(event, expand) {\n        const node = this.findNodeWithEvent(event);\n        if (!node) {\n            return;\n        }\n        this.selectProfileNode(node, false);\n        if (expand) {\n            const dataGridNode = this.dataGridNodeForTreeNode(node);\n            if (dataGridNode) {\n                dataGridNode.expand();\n            }\n        }\n    }\n    populateColumns(columns) {\n        columns.push({\n            id: 'start-time',\n            title: i18nString(UIStrings.startTime),\n            width: '80px',\n            fixedWidth: true,\n            sortable: true,\n        });\n        super.populateColumns(columns);\n        columns.filter(c => c.fixedWidth).forEach(c => {\n            c.width = '80px';\n        });\n    }\n    populateToolbar(toolbar) {\n        super.populateToolbar(toolbar);\n        this.filtersControl.populateToolbar(toolbar);\n    }\n    showDetailsForNode(node) {\n        const parsedTrace = this.parsedTrace();\n        if (!parsedTrace) {\n            return false;\n        }\n        const traceEvent = node.event;\n        if (!traceEvent) {\n            return false;\n        }\n        void TimelineUIUtils.buildTraceEventDetails(parsedTrace, traceEvent, this.linkifier, false)\n            .then(fragment => this.detailsView.element.appendChild(fragment));\n        return true;\n    }\n    onHover(node) {\n        this.delegate.highlightEvent(node && node.event);\n    }\n}\nexport class Filters extends Common.ObjectWrapper.ObjectWrapper {\n    categoryFilter;\n    durationFilter;\n    filtersInternal;\n    constructor() {\n        super();\n        this.categoryFilter = new Category();\n        this.durationFilter = new IsLong();\n        this.filtersInternal = [this.categoryFilter, this.durationFilter];\n    }\n    filters() {\n        return this.filtersInternal;\n    }\n    populateToolbar(toolbar) {\n        const durationFilterUI = new UI.Toolbar.ToolbarComboBox(durationFilterChanged.bind(this), i18nString(UIStrings.durationFilter), undefined, 'duration');\n        for (const durationMs of Filters.durationFilterPresetsMs) {\n            durationFilterUI.addOption(durationFilterUI.createOption(durationMs ? `≥ ${i18nString(UIStrings.Dms, { PH1: durationMs })}` : i18nString(UIStrings.all), String(durationMs)));\n        }\n        toolbar.appendToolbarItem(durationFilterUI);\n        const categoryFiltersUI = new Map();\n        const categories = Components.EntryStyles.getCategoryStyles();\n        for (const categoryName in categories) {\n            const category = categories[categoryName];\n            if (!category.visible) {\n                continue;\n            }\n            const checkbox = new UI.Toolbar.ToolbarCheckbox(category.title, undefined, categoriesFilterChanged.bind(this, categoryName), categoryName);\n            checkbox.setChecked(true);\n            checkbox.inputElement.style.backgroundColor = category.color;\n            categoryFiltersUI.set(category.name, checkbox);\n            toolbar.appendToolbarItem(checkbox);\n        }\n        function durationFilterChanged() {\n            const duration = durationFilterUI.selectedOption().value;\n            const minimumRecordDuration = parseInt(duration, 10);\n            this.durationFilter.setMinimumRecordDuration(Trace.Types.Timing.MilliSeconds(minimumRecordDuration));\n            this.notifyFiltersChanged();\n        }\n        function categoriesFilterChanged(name) {\n            const categories = Components.EntryStyles.getCategoryStyles();\n            const checkBox = categoryFiltersUI.get(name);\n            categories[name].hidden = !checkBox || !checkBox.checked();\n            this.notifyFiltersChanged();\n        }\n    }\n    notifyFiltersChanged() {\n        this.dispatchEventToListeners(\"FilterChanged\" /* Events.FILTER_CHANGED */);\n    }\n    static durationFilterPresetsMs = [0, 1, 15];\n}\n//# sourceMappingURL=EventsTimelineTreeView.js.map","// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LayerViewer from '../layer_viewer/layer_viewer.js';\nexport class TimelineLayersView extends UI.SplitWidget.SplitWidget {\n    showPaintProfilerCallback;\n    rightSplitWidget;\n    layerViewHost;\n    layers3DView;\n    frameLayerTree;\n    updateWhenVisible;\n    constructor(showPaintProfilerCallback) {\n        super(true, false, 'timeline-layers-view');\n        this.showPaintProfilerCallback = showPaintProfilerCallback;\n        this.element.classList.add('timeline-layers-view');\n        this.rightSplitWidget = new UI.SplitWidget.SplitWidget(true, true, 'timeline-layers-view-details');\n        this.rightSplitWidget.element.classList.add('timeline-layers-view-properties');\n        this.setMainWidget(this.rightSplitWidget);\n        const vbox = new UI.Widget.VBox();\n        this.setSidebarWidget(vbox);\n        this.layerViewHost = new LayerViewer.LayerViewHost.LayerViewHost();\n        const layerTreeOutline = new LayerViewer.LayerTreeOutline.LayerTreeOutline(this.layerViewHost);\n        vbox.element.appendChild(layerTreeOutline.element);\n        this.layers3DView = new LayerViewer.Layers3DView.Layers3DView(this.layerViewHost);\n        this.layers3DView.addEventListener(\"PaintProfilerRequested\" /* LayerViewer.Layers3DView.Events.PAINT_PROFILER_REQUESTED */, this.onPaintProfilerRequested, this);\n        this.rightSplitWidget.setMainWidget(this.layers3DView);\n        const layerDetailsView = new LayerViewer.LayerDetailsView.LayerDetailsView(this.layerViewHost);\n        this.rightSplitWidget.setSidebarWidget(layerDetailsView);\n        layerDetailsView.addEventListener(\"PaintProfilerRequested\" /* LayerViewer.LayerDetailsView.Events.PAINT_PROFILER_REQUESTED */, this.onPaintProfilerRequested, this);\n    }\n    showLayerTree(frameLayerTree) {\n        this.frameLayerTree = frameLayerTree;\n        if (this.isShowing()) {\n            this.update();\n        }\n        else {\n            this.updateWhenVisible = true;\n        }\n    }\n    wasShown() {\n        if (this.updateWhenVisible) {\n            this.updateWhenVisible = false;\n            this.update();\n        }\n    }\n    async onPaintProfilerRequested(event) {\n        const selection = event.data;\n        const snapshotWithRect = await this.layers3DView.snapshotForSelection(selection);\n        if (snapshotWithRect) {\n            this.showPaintProfilerCallback(snapshotWithRect.snapshot);\n        }\n    }\n    update() {\n        if (this.frameLayerTree) {\n            void this.frameLayerTree.layerTreePromise().then(layerTree => this.layerViewHost.setLayerTree(layerTree));\n        }\n    }\n}\n//# sourceMappingURL=TimelineLayersView.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.paint-profiler-image-view {\n  overflow: hidden;\n}\n\n.paint-profiler-image-view .paint-profiler-image-container {\n  transform-origin: 0 0;\n}\n\n.paint-profiler-image-view .paint-profiler-image-container div {\n  border-color: 1px solid var(--sys-color-divider);\n  border-style: solid;\n  z-index: 100;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n.paint-profiler-image-view img {\n  border: solid 1px var(--sys-color-inverse-surface);\n}\n\n/*# sourceURL=timelinePaintProfiler.css */\n`);\n\nexport default styles;\n","// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LayerViewer from '../layer_viewer/layer_viewer.js';\nimport timelinePaintProfilerStyles from './timelinePaintProfiler.css.js';\nexport class TimelinePaintProfilerView extends UI.SplitWidget.SplitWidget {\n    logAndImageSplitWidget;\n    imageView;\n    paintProfilerView;\n    logTreeView;\n    needsUpdateWhenVisible;\n    pendingSnapshot;\n    event;\n    paintProfilerModel;\n    lastLoadedSnapshot;\n    #parsedTrace;\n    constructor(parsedTrace) {\n        super(false, false);\n        this.element.classList.add('timeline-paint-profiler-view');\n        this.setSidebarSize(60);\n        this.setResizable(false);\n        this.#parsedTrace = parsedTrace;\n        this.logAndImageSplitWidget = new UI.SplitWidget.SplitWidget(true, false);\n        this.logAndImageSplitWidget.element.classList.add('timeline-paint-profiler-log-split');\n        this.setMainWidget(this.logAndImageSplitWidget);\n        this.imageView = new TimelinePaintImageView();\n        this.logAndImageSplitWidget.setMainWidget(this.imageView);\n        this.paintProfilerView =\n            new LayerViewer.PaintProfilerView.PaintProfilerView(this.imageView.showImage.bind(this.imageView));\n        this.paintProfilerView.addEventListener(\"WindowChanged\" /* LayerViewer.PaintProfilerView.Events.WINDOW_CHANGED */, this.onWindowChanged, this);\n        this.setSidebarWidget(this.paintProfilerView);\n        this.logTreeView = new LayerViewer.PaintProfilerView.PaintProfilerCommandLogView();\n        this.logAndImageSplitWidget.setSidebarWidget(this.logTreeView);\n        this.needsUpdateWhenVisible = false;\n        this.pendingSnapshot = null;\n        this.event = null;\n        this.paintProfilerModel = null;\n        this.lastLoadedSnapshot = null;\n    }\n    wasShown() {\n        super.wasShown();\n        if (this.needsUpdateWhenVisible) {\n            this.needsUpdateWhenVisible = false;\n            this.update();\n        }\n    }\n    setSnapshot(snapshot) {\n        this.releaseSnapshot();\n        this.pendingSnapshot = snapshot;\n        this.event = null;\n        this.updateWhenVisible();\n    }\n    #rasterEventHasTile(event) {\n        const data = event.args.tileData;\n        if (!data) {\n            return false;\n        }\n        const frame = this.#parsedTrace.Frames.framesById[data.sourceFrameNumber];\n        if (!frame || !frame.layerTree) {\n            return false;\n        }\n        return true;\n    }\n    setEvent(paintProfilerModel, event) {\n        this.releaseSnapshot();\n        this.paintProfilerModel = paintProfilerModel;\n        this.pendingSnapshot = null;\n        this.event = event;\n        this.updateWhenVisible();\n        if (Trace.Types.Events.isPaint(event)) {\n            const snapshot = this.#parsedTrace.LayerTree.paintsToSnapshots.get(event);\n            return Boolean(snapshot);\n        }\n        if (Trace.Types.Events.isRasterTask(event)) {\n            return this.#rasterEventHasTile(event);\n        }\n        return false;\n    }\n    updateWhenVisible() {\n        if (this.isShowing()) {\n            this.update();\n        }\n        else {\n            this.needsUpdateWhenVisible = true;\n        }\n    }\n    async #rasterTilePromise(rasterEvent) {\n        const data = rasterEvent.args.tileData;\n        if (!data) {\n            return null;\n        }\n        if (!data.tileId.id_ref) {\n            return null;\n        }\n        const target = SDK.TargetManager.TargetManager.instance().rootTarget();\n        if (!target) {\n            return null;\n        }\n        const frame = this.#parsedTrace.Frames.framesById[data.sourceFrameNumber];\n        if (!frame || !frame.layerTree) {\n            return null;\n        }\n        const layerTree = new TimelineModel.TracingLayerTree.TracingFrameLayerTree(target, frame.layerTree);\n        const tracingLayerTree = await layerTree.layerTreePromise();\n        return tracingLayerTree ? tracingLayerTree.pictureForRasterTile(data.tileId.id_ref) : null;\n    }\n    update() {\n        this.logTreeView.setCommandLog([]);\n        void this.paintProfilerView.setSnapshotAndLog(null, [], null);\n        let snapshotPromise;\n        if (this.pendingSnapshot) {\n            snapshotPromise = Promise.resolve({ rect: null, snapshot: this.pendingSnapshot });\n        }\n        else if (this.event && this.paintProfilerModel && Trace.Types.Events.isPaint(this.event)) {\n            // When we process events (TimelineModel#processEvent) and find a\n            // snapshot event, we look for the last paint that occurred and link the\n            // snapshot to that paint event. That is why here if the event is a Paint\n            // event, we look to see if it has had a matching picture event set for\n            // it.\n            const snapshotEvent = this.#parsedTrace.LayerTree.paintsToSnapshots.get(this.event);\n            if (snapshotEvent) {\n                const encodedData = snapshotEvent.args.snapshot.skp64;\n                snapshotPromise = this.paintProfilerModel.loadSnapshot(encodedData).then(snapshot => {\n                    return snapshot && { rect: null, snapshot };\n                });\n            }\n            else {\n                snapshotPromise = Promise.resolve(null);\n            }\n        }\n        else if (this.event && Trace.Types.Events.isRasterTask(this.event)) {\n            snapshotPromise = this.#rasterTilePromise(this.event);\n        }\n        else {\n            console.assert(false, 'Unexpected event type or no snapshot');\n            return;\n        }\n        void snapshotPromise.then(snapshotWithRect => {\n            this.releaseSnapshot();\n            if (!snapshotWithRect) {\n                this.imageView.showImage();\n                return;\n            }\n            const snapshot = snapshotWithRect.snapshot;\n            this.lastLoadedSnapshot = snapshot;\n            this.imageView.setMask(snapshotWithRect.rect);\n            void snapshot.commandLog().then(log => onCommandLogDone.call(this, snapshot, snapshotWithRect.rect, log || []));\n        });\n        function onCommandLogDone(snapshot, clipRect, log) {\n            this.logTreeView.setCommandLog(log || []);\n            void this.paintProfilerView.setSnapshotAndLog(snapshot, log || [], clipRect);\n        }\n    }\n    releaseSnapshot() {\n        if (!this.lastLoadedSnapshot) {\n            return;\n        }\n        this.lastLoadedSnapshot.release();\n        this.lastLoadedSnapshot = null;\n    }\n    onWindowChanged() {\n        this.logTreeView.updateWindow(this.paintProfilerView.selectionWindow());\n    }\n}\nexport class TimelinePaintImageView extends UI.Widget.Widget {\n    imageContainer;\n    imageElement;\n    maskElement;\n    transformController;\n    maskRectangle;\n    constructor() {\n        super(true);\n        this.contentElement.classList.add('fill', 'paint-profiler-image-view');\n        this.imageContainer = this.contentElement.createChild('div', 'paint-profiler-image-container');\n        this.imageElement = this.imageContainer.createChild('img');\n        this.maskElement = this.imageContainer.createChild('div');\n        this.imageElement.addEventListener('load', this.updateImagePosition.bind(this), false);\n        this.transformController =\n            new LayerViewer.TransformController.TransformController(this.contentElement, true);\n        this.transformController.addEventListener(\"TransformChanged\" /* LayerViewer.TransformController.Events.TRANSFORM_CHANGED */, this.updateImagePosition, this);\n    }\n    onResize() {\n        if (this.imageElement.src) {\n            this.updateImagePosition();\n        }\n    }\n    updateImagePosition() {\n        const width = this.imageElement.naturalWidth;\n        const height = this.imageElement.naturalHeight;\n        const clientWidth = this.contentElement.clientWidth;\n        const clientHeight = this.contentElement.clientHeight;\n        const paddingFraction = 0.1;\n        const paddingX = clientWidth * paddingFraction;\n        const paddingY = clientHeight * paddingFraction;\n        const scaleX = (clientWidth - paddingX) / width;\n        const scaleY = (clientHeight - paddingY) / height;\n        const scale = Math.min(scaleX, scaleY);\n        if (this.maskRectangle) {\n            const style = this.maskElement.style;\n            style.width = width + 'px';\n            style.height = height + 'px';\n            style.borderLeftWidth = this.maskRectangle.x + 'px';\n            style.borderTopWidth = this.maskRectangle.y + 'px';\n            style.borderRightWidth = (width - this.maskRectangle.x - this.maskRectangle.width) + 'px';\n            style.borderBottomWidth = (height - this.maskRectangle.y - this.maskRectangle.height) + 'px';\n        }\n        this.transformController.setScaleConstraints(0.5, 10 / scale);\n        let matrix = new WebKitCSSMatrix()\n            .scale(this.transformController.scale(), this.transformController.scale())\n            .translate(clientWidth / 2, clientHeight / 2)\n            .scale(scale, scale)\n            .translate(-width / 2, -height / 2);\n        const bounds = UI.Geometry.boundsForTransformedPoints(matrix, [0, 0, 0, width, height, 0]);\n        this.transformController.clampOffsets(paddingX - bounds.maxX, clientWidth - paddingX - bounds.minX, paddingY - bounds.maxY, clientHeight - paddingY - bounds.minY);\n        matrix = new WebKitCSSMatrix()\n            .translate(this.transformController.offsetX(), this.transformController.offsetY())\n            .multiply(matrix);\n        this.imageContainer.style.webkitTransform = matrix.toString();\n    }\n    showImage(imageURL) {\n        this.imageContainer.classList.toggle('hidden', !imageURL);\n        if (imageURL) {\n            this.imageElement.src = imageURL;\n        }\n    }\n    setMask(maskRectangle) {\n        this.maskRectangle = maskRectangle;\n        this.maskElement.classList.toggle('hidden', !maskRectangle);\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([timelinePaintProfilerStyles]);\n    }\n}\n//# sourceMappingURL=TimelinePaintProfilerView.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../ui/components/linkifier/linkifier.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as DataGrid from '../../ui/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description Label for selector stats data table\n     */\n    selectorStats: 'Selector stats',\n    /**\n     *@description Column name and time unit for elapsed time spent computing a style rule\n     */\n    elapsed: 'Elapsed (ms)',\n    /**\n     *@description Column name and percentage of slow mach non-matches computing a style rule\n     */\n    rejectPercentage: '% of slow-path non-matches',\n    /**\n     *@description Tooltip description '% of slow-path non-matches'\n     */\n    rejectPercentageExplanation: 'The percentage of non-matching nodes (Match Attempts - Match Count) that couldn\\'t be quickly ruled out by the bloom filter due to high selector complexity. Lower is better.',\n    /**\n     *@description Column name for count of elements that the engine attempted to match against a style rule\n     */\n    matchAttempts: 'Match attempts',\n    /**\n     *@description Column name for count of elements that matched a style rule\n     */\n    matchCount: 'Match count',\n    /**\n     *@description Column name for a style rule's CSS selector text\n     */\n    selector: 'Selector',\n    /**\n     *@description Column name for a style rule's CSS selector text\n     */\n    styleSheetId: 'Style Sheet',\n    /**\n     *@description A context menu item in data grids to copy entire table to clipboard\n     */\n    copyTable: 'Copy table',\n    /**\n     *@description A cell value displayed in table when no source file can be traced via css style\n     */\n    unableToLink: 'Unable to link',\n    /**\n     *@description Tooltip for the cell that no source file can be traced via style sheet id\n     *@example {style-sheet-4} PH1\n     */\n    unableToLinkViaStyleSheetId: 'Unable to link via {PH1}',\n    /**\n     *@description Text for announcing that the entire table was copied to clipboard\n     */\n    tableCopiedToClipboard: 'Table copied to clipboard',\n    /**\n     *@description Text shown as the \"Selectelector\" cell value for one row of the Selector Stats table, however this particular row is the totals. While normally the Selector cell is values like \"div.container\", the parenthesis can denote this description is not an actual selector, but a general row description.\n     */\n    totalForAllSelectors: '(Totals for all selectors)',\n    /**\n     *@description Text for showing the location of a selector in the style sheet\n     *@example {256} PH1\n     *@example {14} PH2\n     */\n    lineNumber: 'Line {PH1}:{PH2}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineSelectorStatsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst SelectorTimingsKey = Trace.Types.Events.SelectorTimingsKey;\nexport class TimelineSelectorStatsView extends UI.Widget.VBox {\n    #datagrid;\n    #selectorLocations;\n    #parsedTrace = null;\n    /**\n     * We store the last event (or array of events) that we renderered. We do\n     * this because as the user zooms around the panel this view is updated,\n     * however if the set of events that are populating the view is the same as it\n     * was the last time, we can bail without doing any re-rendering work.\n     * If the user views a single event, this will be set to that single event, but if they are viewing a range of events, this will be set to an array.\n     * If it's null, that means we have not rendered yet.\n     */\n    #lastStatsSourceEventOrEvents = null;\n    constructor(parsedTrace) {\n        super();\n        this.#datagrid = new DataGrid.DataGridController.DataGridController();\n        this.element.setAttribute('jslog', `${VisualLogging.pane('selector-stats').track({ resize: true })}`);\n        this.#selectorLocations = new Map();\n        this.#parsedTrace = parsedTrace;\n        this.#datagrid.data = {\n            label: i18nString(UIStrings.selectorStats),\n            showScrollbar: true,\n            autoScrollToBottom: false,\n            initialSort: {\n                columnId: SelectorTimingsKey.Elapsed,\n                direction: \"DESC\" /* DataGrid.DataGridUtils.SortDirection.DESC */,\n            },\n            columns: [\n                {\n                    id: SelectorTimingsKey.Elapsed,\n                    title: i18nString(UIStrings.elapsed),\n                    sortable: true,\n                    widthWeighting: 1,\n                    visible: true,\n                    hideable: true,\n                    styles: {\n                        'text-align': 'right',\n                    },\n                },\n                {\n                    id: SelectorTimingsKey.MatchAttempts,\n                    title: i18nString(UIStrings.matchAttempts),\n                    sortable: true,\n                    widthWeighting: 1,\n                    visible: true,\n                    hideable: true,\n                    styles: {\n                        'text-align': 'right',\n                    },\n                },\n                {\n                    id: SelectorTimingsKey.MatchCount,\n                    title: i18nString(UIStrings.matchCount),\n                    sortable: true,\n                    widthWeighting: 1,\n                    visible: true,\n                    hideable: true,\n                    styles: {\n                        'text-align': 'right',\n                    },\n                },\n                {\n                    id: SelectorTimingsKey.RejectPercentage,\n                    title: i18nString(UIStrings.rejectPercentage),\n                    titleElement: html `<span title=${i18nString(UIStrings.rejectPercentageExplanation)}>${i18nString(UIStrings.rejectPercentage)}</span>`,\n                    sortable: true,\n                    widthWeighting: 1,\n                    visible: true,\n                    hideable: true,\n                    styles: {\n                        'text-align': 'right',\n                    },\n                },\n                {\n                    id: SelectorTimingsKey.Selector,\n                    title: i18nString(UIStrings.selector),\n                    sortable: true,\n                    widthWeighting: 3,\n                    visible: true,\n                    hideable: true,\n                },\n                {\n                    id: SelectorTimingsKey.StyleSheetId,\n                    title: i18nString(UIStrings.styleSheetId),\n                    sortable: true,\n                    widthWeighting: 1.5,\n                    visible: true,\n                    hideable: true,\n                },\n            ],\n            rows: [],\n            contextMenus: {\n                bodyRow: (menu, columns, row, rows) => {\n                    menu.defaultSection().appendItem(i18nString(UIStrings.copyTable), () => {\n                        const tableData = [];\n                        const columnName = columns.map(col => col.title);\n                        tableData.push(columnName.join('\\t'));\n                        for (const rowData of rows) {\n                            const cellsValue = rowData.cells;\n                            const rowValue = cellsValue.map(cell => {\n                                if (cell.columnId === SelectorTimingsKey.StyleSheetId) {\n                                    // Export link via raw StyleSheetId data\n                                    const defaultLinkValue = i18nString(UIStrings.unableToLink);\n                                    let linkData = '';\n                                    const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n                                    const cssModel = target?.model(SDK.CSSModel.CSSModel);\n                                    if (cssModel) {\n                                        const styleSheetHeader = cssModel.styleSheetHeaderForId(cell.value);\n                                        if (styleSheetHeader) {\n                                            linkData = styleSheetHeader.resourceURL().toString();\n                                        }\n                                    }\n                                    return linkData ? linkData.toString() : defaultLinkValue;\n                                }\n                                return String(cell.value);\n                            });\n                            tableData.push(rowValue.join('\\t'));\n                        }\n                        const data = tableData.join('\\n');\n                        void navigator.clipboard.writeText(data);\n                        UI.ARIAUtils.alert(i18nString(UIStrings.tableCopiedToClipboard));\n                    });\n                },\n            },\n        };\n        this.contentElement.appendChild(this.#datagrid);\n    }\n    setEvent(event) {\n        if (!this.#parsedTrace) {\n            return false;\n        }\n        if (this.#lastStatsSourceEventOrEvents === event) {\n            // The event that is populating the selector stats table has not changed,\n            // so no need to do any work because the data will be the same.\n            return false;\n        }\n        this.#lastStatsSourceEventOrEvents = event;\n        const selectorStats = this.#parsedTrace.SelectorStats.dataForUpdateLayoutEvent.get(event);\n        if (!selectorStats) {\n            this.#datagrid.data = { ...this.#datagrid.data, rows: [] };\n            return false;\n        }\n        const timings = selectorStats.timings;\n        void this.createRowsForTable(timings).then(rows => {\n            this.#datagrid.data = { ...this.#datagrid.data, rows };\n        });\n        return true;\n    }\n    setAggregatedEvents(events) {\n        const timings = [];\n        const selectorMap = new Map();\n        if (!this.#parsedTrace) {\n            return;\n        }\n        const sums = {\n            [SelectorTimingsKey.Elapsed]: 0,\n            [SelectorTimingsKey.MatchAttempts]: 0,\n            [SelectorTimingsKey.MatchCount]: 0,\n            [SelectorTimingsKey.FastRejectCount]: 0,\n        };\n        // Now we want to check if the set of events we have been given matches the\n        // set of events we last rendered. We can't just compare the arrays because\n        // they will be different events, so instead for each event in the new\n        // array we see if it has a match in the old set of events at the same\n        // index.\n        if (Array.isArray(this.#lastStatsSourceEventOrEvents)) {\n            if (this.#lastStatsSourceEventOrEvents.length === events.length && events.every((event, index) => {\n                // This is true due to the isArray check, but without this cast TS\n                // would want us to repeat the isArray() check inside this callback,\n                // but we want to avoid that extra work.\n                const previousEvents = this.#lastStatsSourceEventOrEvents;\n                return event === previousEvents[index];\n            })) {\n                return;\n            }\n        }\n        this.#lastStatsSourceEventOrEvents = events;\n        for (let i = 0; i < events.length; i++) {\n            const event = events[i];\n            const selectorStats = event ? this.#parsedTrace.SelectorStats.dataForUpdateLayoutEvent.get(event) : undefined;\n            if (!selectorStats) {\n                continue;\n            }\n            else {\n                const data = selectorStats.timings;\n                for (const timing of data) {\n                    const key = timing[SelectorTimingsKey.Selector] + '_' + timing[SelectorTimingsKey.StyleSheetId];\n                    const findTiming = selectorMap.get(key);\n                    if (findTiming !== undefined) {\n                        findTiming[SelectorTimingsKey.Elapsed] += timing[SelectorTimingsKey.Elapsed];\n                        findTiming[SelectorTimingsKey.FastRejectCount] += timing[SelectorTimingsKey.FastRejectCount];\n                        findTiming[SelectorTimingsKey.MatchAttempts] += timing[SelectorTimingsKey.MatchAttempts];\n                        findTiming[SelectorTimingsKey.MatchCount] += timing[SelectorTimingsKey.MatchCount];\n                    }\n                    else {\n                        selectorMap.set(key, structuredClone(timing));\n                    }\n                    // Keep track of the total times for a sum row.\n                    sums[SelectorTimingsKey.Elapsed] += timing[SelectorTimingsKey.Elapsed];\n                    sums[SelectorTimingsKey.MatchAttempts] += timing[SelectorTimingsKey.MatchAttempts];\n                    sums[SelectorTimingsKey.MatchCount] += timing[SelectorTimingsKey.MatchCount];\n                    sums[SelectorTimingsKey.FastRejectCount] += timing[SelectorTimingsKey.FastRejectCount];\n                }\n            }\n        }\n        if (selectorMap.size > 0) {\n            selectorMap.forEach(timing => {\n                timings.push(timing);\n            });\n            selectorMap.clear();\n        }\n        else {\n            this.#datagrid.data = { ...this.#datagrid.data, rows: [] };\n            return;\n        }\n        // Add the sum row.\n        timings.unshift({\n            [SelectorTimingsKey.Elapsed]: sums[SelectorTimingsKey.Elapsed],\n            [SelectorTimingsKey.FastRejectCount]: sums[SelectorTimingsKey.FastRejectCount],\n            [SelectorTimingsKey.MatchAttempts]: sums[SelectorTimingsKey.MatchAttempts],\n            [SelectorTimingsKey.MatchCount]: sums[SelectorTimingsKey.MatchCount],\n            [SelectorTimingsKey.Selector]: i18nString(UIStrings.totalForAllSelectors),\n            [SelectorTimingsKey.StyleSheetId]: 'n/a',\n        });\n        void this.createRowsForTable(timings).then(rows => {\n            this.#datagrid.data = { ...this.#datagrid.data, rows };\n        });\n    }\n    async createRowsForTable(timings) {\n        async function toSourceFileLocation(cssModel, styleSheetId, selectorText, selectorLocations) {\n            if (!cssModel) {\n                return undefined;\n            }\n            const styleSheetHeader = cssModel.styleSheetHeaderForId(styleSheetId);\n            if (!styleSheetHeader || !styleSheetHeader.resourceURL()) {\n                return undefined;\n            }\n            // get the locations from cache if available\n            const key = JSON.stringify({ selectorText, styleSheetId });\n            let ranges = selectorLocations.get(key);\n            if (!ranges) {\n                const result = await cssModel.agent.invoke_getLocationForSelector({ styleSheetId, selectorText });\n                if (result.getError() || !result.ranges) {\n                    return undefined;\n                }\n                ranges = result.ranges;\n                selectorLocations.set(key, ranges);\n            }\n            const linkData = ranges.map(range => {\n                return {\n                    url: styleSheetHeader.resourceURL(),\n                    lineNumber: range.startLine,\n                    columnNumber: range.startColumn,\n                    linkText: i18nString(UIStrings.lineNumber, { PH1: range.startLine + 1, PH2: range.startColumn + 1 }),\n                    title: `${styleSheetHeader.id} line ${range.startLine + 1}:${range.startColumn + 1}`,\n                };\n            });\n            return linkData;\n        }\n        const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n        const cssModel = target?.model(SDK.CSSModel.CSSModel);\n        if (!cssModel) {\n            return [];\n        }\n        const rows = await Promise.all(timings.map(async (x) => {\n            const styleSheetId = x[SelectorTimingsKey.StyleSheetId];\n            const selectorText = x[SelectorTimingsKey.Selector].trim();\n            const elapsedTimeInMs = x[SelectorTimingsKey.Elapsed] / 1000.0;\n            const nonMatches = x[SelectorTimingsKey.MatchAttempts] - x[SelectorTimingsKey.MatchCount];\n            const rejectPercentage = (nonMatches ? x[SelectorTimingsKey.FastRejectCount] / nonMatches : 1) * 100;\n            const locations = styleSheetId === 'n/a' ?\n                null :\n                await toSourceFileLocation(cssModel, styleSheetId, selectorText, this.#selectorLocations);\n            return {\n                cells: [\n                    {\n                        columnId: SelectorTimingsKey.Elapsed,\n                        value: elapsedTimeInMs,\n                        renderer() {\n                            return html `${elapsedTimeInMs.toFixed(3)}`;\n                        },\n                    },\n                    { columnId: SelectorTimingsKey.MatchAttempts, value: x[SelectorTimingsKey.MatchAttempts] },\n                    { columnId: SelectorTimingsKey.MatchCount, value: x[SelectorTimingsKey.MatchCount] },\n                    {\n                        columnId: SelectorTimingsKey.RejectPercentage,\n                        value: rejectPercentage,\n                        renderer() {\n                            return html `${rejectPercentage.toFixed(1)}`;\n                        },\n                    },\n                    {\n                        columnId: SelectorTimingsKey.Selector,\n                        title: x[SelectorTimingsKey.Selector],\n                        value: x[SelectorTimingsKey.Selector],\n                    },\n                    {\n                        columnId: SelectorTimingsKey.StyleSheetId,\n                        value: x[SelectorTimingsKey.StyleSheetId],\n                        renderer() {\n                            if (locations === null) {\n                                return html `<span></span>`;\n                            }\n                            if (locations === undefined) {\n                                return html `<span title=${i18nString(UIStrings.unableToLinkViaStyleSheetId, {\n                                    PH1: x[SelectorTimingsKey.StyleSheetId],\n                                })} aria-label=${i18nString(UIStrings.unableToLinkViaStyleSheetId, {\n                                    PH1: x[SelectorTimingsKey.StyleSheetId],\n                                })}>${i18nString(UIStrings.unableToLink)}</span>`;\n                            }\n                            return html `\n              ${locations.map((location, itemIndex) => {\n                                const divider = itemIndex !== locations.length - 1 ? ', ' : '';\n                                return html `<devtools-linkifier .data=${location}></devtools-linkifier>${divider}`;\n                            })}\n              `;\n                        },\n                    },\n                ],\n            };\n        }));\n        return rows;\n    }\n}\n//# sourceMappingURL=TimelineSelectorStatsView.js.map","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as TimelineComponents from './components/components.js';\nimport { EventsTimelineTreeView } from './EventsTimelineTreeView.js';\nimport { Tracker } from './FreshRecording.js';\nimport { targetForEvent } from './TargetForEvent.js';\nimport { TimelineLayersView } from './TimelineLayersView.js';\nimport { TimelinePaintProfilerView } from './TimelinePaintProfilerView.js';\nimport { TimelineSelection } from './TimelineSelection.js';\nimport { TimelineSelectorStatsView } from './TimelineSelectorStatsView.js';\nimport { BottomUpTimelineTreeView, CallTreeTimelineTreeView } from './TimelineTreeView.js';\nimport { TimelineDetailsContentHelper, TimelineUIUtils } from './TimelineUIUtils.js';\nconst UIStrings = {\n    /**\n     *@description Text for the summary view\n     */\n    summary: 'Summary',\n    /**\n     *@description Text in Timeline Details View of the Performance panel\n     */\n    bottomup: 'Bottom-up',\n    /**\n     *@description Text in Timeline Details View of the Performance panel\n     */\n    callTree: 'Call tree',\n    /**\n     *@description Text in Timeline Details View of the Performance panel\n     */\n    eventLog: 'Event log',\n    /**\n     *@description Title of the paint profiler, old name of the performance pane\n     */\n    paintProfiler: 'Paint profiler',\n    /**\n     *@description Title of the Layers tool\n     */\n    layers: 'Layers',\n    /**\n     *@description Text in Timeline Details View of the Performance panel\n     *@example {1ms} PH1\n     *@example {10ms} PH2\n     */\n    rangeSS: 'Range:  {PH1} – {PH2}',\n    /**\n     *@description Title of the selector stats tab\n     */\n    selectorStats: 'Selector stats',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineDetailsView extends UI.Widget.VBox {\n    detailsLinkifier;\n    tabbedPane;\n    defaultDetailsWidget;\n    defaultDetailsContentElement;\n    rangeDetailViews;\n    #selectedEvents;\n    lazyPaintProfilerView;\n    lazyLayersView;\n    preferredTabId;\n    selection;\n    updateContentsScheduled;\n    lazySelectorStatsView;\n    #parsedTrace = null;\n    #traceInsightsSets = null;\n    /* eslint-disable-next-line no-unused-private-class-members */\n    #eventToRelatedInsightsMap = null;\n    #filmStrip = null;\n    #networkRequestDetails;\n    #layoutShiftDetails;\n    #onTraceBoundsChangeBound = this.#onTraceBoundsChange.bind(this);\n    #relatedInsightChips = new TimelineComponents.RelatedInsightChips.RelatedInsightChips();\n    constructor(delegate) {\n        super();\n        this.element.classList.add('timeline-details');\n        this.detailsLinkifier = new Components.Linkifier.Linkifier();\n        this.tabbedPane = new UI.TabbedPane.TabbedPane();\n        this.tabbedPane.show(this.element);\n        this.tabbedPane.headerElement().setAttribute('jslog', `${VisualLogging.toolbar('sidebar').track({ keydown: 'ArrowUp|ArrowLeft|ArrowDown|ArrowRight|Enter|Space' })}`);\n        this.defaultDetailsWidget = new UI.Widget.VBox();\n        this.defaultDetailsWidget.element.classList.add('timeline-details-view');\n        this.defaultDetailsWidget.element.setAttribute('jslog', `${VisualLogging.pane('details').track({ resize: true })}`);\n        this.defaultDetailsContentElement =\n            this.defaultDetailsWidget.element.createChild('div', 'timeline-details-view-body vbox');\n        this.appendTab(Tab.Details, i18nString(UIStrings.summary), this.defaultDetailsWidget);\n        this.setPreferredTab(Tab.Details);\n        this.rangeDetailViews = new Map();\n        this.updateContentsScheduled = false;\n        const bottomUpView = new BottomUpTimelineTreeView();\n        this.appendTab(Tab.BottomUp, i18nString(UIStrings.bottomup), bottomUpView);\n        this.rangeDetailViews.set(Tab.BottomUp, bottomUpView);\n        const callTreeView = new CallTreeTimelineTreeView();\n        this.appendTab(Tab.CallTree, i18nString(UIStrings.callTree), callTreeView);\n        this.rangeDetailViews.set(Tab.CallTree, callTreeView);\n        const eventsView = new EventsTimelineTreeView(delegate);\n        this.appendTab(Tab.EventLog, i18nString(UIStrings.eventLog), eventsView);\n        this.rangeDetailViews.set(Tab.EventLog, eventsView);\n        this.#networkRequestDetails =\n            new TimelineComponents.NetworkRequestDetails.NetworkRequestDetails(this.detailsLinkifier);\n        this.#layoutShiftDetails = new TimelineComponents.LayoutShiftDetails.LayoutShiftDetails();\n        this.tabbedPane.addEventListener(UI.TabbedPane.Events.TabSelected, this.tabSelected, this);\n        TraceBounds.TraceBounds.onChange(this.#onTraceBoundsChangeBound);\n        this.lazySelectorStatsView = null;\n    }\n    selectorStatsView() {\n        if (this.lazySelectorStatsView) {\n            return this.lazySelectorStatsView;\n        }\n        this.lazySelectorStatsView = new TimelineSelectorStatsView(this.#parsedTrace);\n        return this.lazySelectorStatsView;\n    }\n    getDetailsContentElementForTest() {\n        return this.defaultDetailsContentElement;\n    }\n    async #onTraceBoundsChange(event) {\n        if (event.updateType === 'MINIMAP_BOUNDS') {\n            // If new minimap bounds are set, we might need to update the selected entry summary because\n            // the links to other entries (ex. initiator) might be outside of the new breadcrumb.\n            if (this.selection) {\n                await this.setSelection(this.selection);\n            }\n        }\n        if (event.updateType === 'RESET' || event.updateType === 'VISIBLE_WINDOW') {\n            // If the update type was a changing of the minimap bounds, we do not\n            // need to redraw.\n            if (!this.selection) {\n                this.scheduleUpdateContentsFromWindow();\n            }\n        }\n    }\n    async setModel(data) {\n        if (this.#parsedTrace !== data.parsedTrace) {\n            // Clear the selector stats view, so the next time the user views it we\n            // reconstruct it with the new trace data.\n            this.lazySelectorStatsView = null;\n            this.#parsedTrace = data.parsedTrace;\n        }\n        if (data.parsedTrace) {\n            this.#filmStrip = Trace.Extras.FilmStrip.fromParsedTrace(data.parsedTrace);\n        }\n        this.#selectedEvents = data.selectedEvents;\n        this.#traceInsightsSets = data.traceInsightsSets;\n        this.#eventToRelatedInsightsMap = data.eventToRelatedInsightsMap;\n        if (data.eventToRelatedInsightsMap) {\n            this.#relatedInsightChips.eventToRelatedInsightsMap = data.eventToRelatedInsightsMap;\n        }\n        this.tabbedPane.closeTabs([Tab.PaintProfiler, Tab.LayerViewer], false);\n        for (const view of this.rangeDetailViews.values()) {\n            view.setModelWithEvents(data.selectedEvents, data.parsedTrace);\n        }\n        this.lazyPaintProfilerView = null;\n        this.lazyLayersView = null;\n        await this.setSelection(null);\n    }\n    setContent(node) {\n        const allTabs = this.tabbedPane.otherTabs(Tab.Details);\n        for (let i = 0; i < allTabs.length; ++i) {\n            if (!this.rangeDetailViews.has(allTabs[i])) {\n                this.tabbedPane.closeTab(allTabs[i]);\n            }\n        }\n        this.defaultDetailsContentElement.removeChildren();\n        this.defaultDetailsContentElement.appendChild(node);\n        if (this.#relatedInsightChips) {\n            this.defaultDetailsContentElement.appendChild(this.#relatedInsightChips);\n        }\n    }\n    updateContents() {\n        const view = this.rangeDetailViews.get(this.tabbedPane.selectedTabId || '');\n        if (view) {\n            const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n            if (!traceBoundsState) {\n                return;\n            }\n            const visibleWindow = traceBoundsState.milli.timelineTraceWindow;\n            view.updateContents(this.selection || TimelineSelection.fromRange(visibleWindow.min, visibleWindow.max));\n        }\n    }\n    appendTab(id, tabTitle, view, isCloseable) {\n        this.tabbedPane.appendTab(id, tabTitle, view, undefined, undefined, isCloseable);\n        if (this.preferredTabId !== this.tabbedPane.selectedTabId) {\n            this.tabbedPane.selectTab(id);\n        }\n    }\n    headerElement() {\n        return this.tabbedPane.headerElement();\n    }\n    setPreferredTab(tabId) {\n        this.preferredTabId = tabId;\n    }\n    /**\n     * This forces a recalculation and rerendering of the timings\n     * breakdown of a track.\n     * User actions like zooming or scrolling can trigger many updates in\n     * short time windows, so we debounce the calls in those cases. Single\n     * sporadic calls (like selecting a new track) don't need to be\n     * debounced. The forceImmediateUpdate param configures the debouncing\n     * behaviour.\n     */\n    scheduleUpdateContentsFromWindow(forceImmediateUpdate = false) {\n        if (!this.#parsedTrace) {\n            this.setContent(UI.Fragment.html `<div/>`);\n            return;\n        }\n        if (forceImmediateUpdate) {\n            this.updateContentsFromWindow();\n            return;\n        }\n        // Debounce this update as it's not critical.\n        if (!this.updateContentsScheduled) {\n            this.updateContentsScheduled = true;\n            setTimeout(() => {\n                this.updateContentsScheduled = false;\n                this.updateContentsFromWindow();\n            }, 100);\n        }\n    }\n    updateContentsFromWindow() {\n        const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n        if (!traceBoundsState) {\n            return;\n        }\n        const visibleWindow = traceBoundsState.milli.timelineTraceWindow;\n        this.updateSelectedRangeStats(visibleWindow.min, visibleWindow.max);\n        this.updateContents();\n    }\n    #getFilmStripFrame(frame) {\n        if (!this.#filmStrip) {\n            return null;\n        }\n        const screenshotTime = (frame.idle ? frame.startTime : frame.endTime);\n        const filmStripFrame = Trace.Extras.FilmStrip.frameClosestToTimestamp(this.#filmStrip, screenshotTime);\n        if (!filmStripFrame) {\n            return null;\n        }\n        const frameTimeMilliSeconds = Trace.Helpers.Timing.microSecondsToMilliseconds(filmStripFrame.screenshotEvent.ts);\n        return frameTimeMilliSeconds - frame.endTime < 10 ? filmStripFrame : null;\n    }\n    async setSelection(selection) {\n        if (!this.#parsedTrace) {\n            // You can't make a selection if we have no trace data.\n            return;\n        }\n        this.detailsLinkifier.reset();\n        this.selection = selection;\n        this.#relatedInsightChips.activeEvent = null;\n        if (!this.selection) {\n            // Update instantly using forceImmediateUpdate, since we are only\n            // making a single call and don't need to debounce.\n            this.scheduleUpdateContentsFromWindow(/* forceImmediateUpdate */ true);\n            return;\n        }\n        const selectionObject = this.selection.object;\n        if (TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selectionObject)) {\n            const networkRequest = selectionObject;\n            const maybeTarget = targetForEvent(this.#parsedTrace, networkRequest);\n            await this.#networkRequestDetails.setData(this.#parsedTrace, networkRequest, maybeTarget);\n            this.#relatedInsightChips.activeEvent = networkRequest;\n            if (this.#eventToRelatedInsightsMap) {\n                this.#relatedInsightChips.eventToRelatedInsightsMap = this.#eventToRelatedInsightsMap;\n            }\n            this.setContent(this.#networkRequestDetails);\n        }\n        else if (TimelineSelection.isTraceEventSelection(selectionObject)) {\n            const event = selectionObject;\n            this.#relatedInsightChips.activeEvent = event;\n            if (this.#eventToRelatedInsightsMap) {\n                this.#relatedInsightChips.eventToRelatedInsightsMap = this.#eventToRelatedInsightsMap;\n            }\n            if (Root.Runtime.experiments.isEnabled(\"timeline-rpp-sidebar\" /* Root.Runtime.ExperimentName.TIMELINE_INSIGHTS */) &&\n                (Trace.Types.Events.isSyntheticLayoutShift(event) ||\n                    Trace.Types.Events.isSyntheticLayoutShiftCluster(event))) {\n                const isFreshRecording = Boolean(this.#parsedTrace && Tracker.instance().recordingIsFresh(this.#parsedTrace));\n                this.#layoutShiftDetails.setData(event, this.#traceInsightsSets, this.#parsedTrace, isFreshRecording);\n                this.setContent(this.#layoutShiftDetails);\n            }\n            else {\n                const traceEventDetails = await TimelineUIUtils.buildTraceEventDetails(this.#parsedTrace, event, this.detailsLinkifier, true);\n                this.appendDetailsTabsForTraceEventAndShowDetails(event, traceEventDetails);\n            }\n        }\n        else if (TimelineSelection.isLegacyTimelineFrame(selectionObject)) {\n            const frame = selectionObject;\n            const matchedFilmStripFrame = this.#getFilmStripFrame(frame);\n            this.setContent(TimelineUIUtils.generateDetailsContentForFrame(frame, this.#filmStrip, matchedFilmStripFrame));\n            const target = SDK.TargetManager.TargetManager.instance().rootTarget();\n            if (frame.layerTree && target) {\n                const layerTreeForFrame = new TimelineModel.TracingLayerTree.TracingFrameLayerTree(target, frame.layerTree);\n                const layersView = this.layersView();\n                layersView.showLayerTree(layerTreeForFrame);\n                if (!this.tabbedPane.hasTab(Tab.LayerViewer)) {\n                    this.appendTab(Tab.LayerViewer, i18nString(UIStrings.layers), layersView);\n                }\n            }\n        }\n        else if (TimelineSelection.isRangeSelection(selectionObject)) {\n            this.updateSelectedRangeStats(this.selection.startTime, this.selection.endTime);\n        }\n        this.updateContents();\n    }\n    tabSelected(event) {\n        if (!event.data.isUserGesture) {\n            return;\n        }\n        this.setPreferredTab(event.data.tabId);\n        this.updateContents();\n    }\n    layersView() {\n        if (this.lazyLayersView) {\n            return this.lazyLayersView;\n        }\n        this.lazyLayersView = new TimelineLayersView(this.showSnapshotInPaintProfiler.bind(this));\n        return this.lazyLayersView;\n    }\n    paintProfilerView() {\n        if (this.lazyPaintProfilerView) {\n            return this.lazyPaintProfilerView;\n        }\n        if (!this.#parsedTrace) {\n            return null;\n        }\n        this.lazyPaintProfilerView = new TimelinePaintProfilerView(this.#parsedTrace);\n        return this.lazyPaintProfilerView;\n    }\n    showSnapshotInPaintProfiler(snapshot) {\n        const paintProfilerView = this.paintProfilerView();\n        if (!paintProfilerView) {\n            return;\n        }\n        paintProfilerView.setSnapshot(snapshot);\n        if (!this.tabbedPane.hasTab(Tab.PaintProfiler)) {\n            this.appendTab(Tab.PaintProfiler, i18nString(UIStrings.paintProfiler), paintProfilerView, true);\n        }\n        this.tabbedPane.selectTab(Tab.PaintProfiler, true);\n    }\n    showSelectorStatsForIndividualEvent(event) {\n        this.showAggregatedSelectorStats([event]);\n    }\n    showAggregatedSelectorStats(events) {\n        const selectorStatsView = this.selectorStatsView();\n        selectorStatsView.setAggregatedEvents(events);\n        if (!this.tabbedPane.hasTab(Tab.SelectorStats)) {\n            this.appendTab(Tab.SelectorStats, i18nString(UIStrings.selectorStats), selectorStatsView);\n        }\n    }\n    appendDetailsTabsForTraceEventAndShowDetails(event, content) {\n        this.setContent(content);\n        if (Trace.Types.Events.isPaint(event) || Trace.Types.Events.isRasterTask(event)) {\n            this.showEventInPaintProfiler(event);\n        }\n        if (Trace.Types.Events.isUpdateLayoutTree(event)) {\n            this.showSelectorStatsForIndividualEvent(event);\n        }\n    }\n    showEventInPaintProfiler(event) {\n        const paintProfilerModel = SDK.TargetManager.TargetManager.instance().models(SDK.PaintProfiler.PaintProfilerModel)[0];\n        if (!paintProfilerModel) {\n            return;\n        }\n        const paintProfilerView = this.paintProfilerView();\n        if (!paintProfilerView) {\n            return;\n        }\n        const hasProfileData = paintProfilerView.setEvent(paintProfilerModel, event);\n        if (!hasProfileData) {\n            return;\n        }\n        if (this.tabbedPane.hasTab(Tab.PaintProfiler)) {\n            return;\n        }\n        this.appendTab(Tab.PaintProfiler, i18nString(UIStrings.paintProfiler), paintProfilerView);\n    }\n    updateSelectedRangeStats(startTime, endTime) {\n        if (!this.#selectedEvents || !this.#parsedTrace) {\n            return;\n        }\n        const minBoundsMilli = Trace.Helpers.Timing.traceWindowMilliSeconds(this.#parsedTrace.Meta.traceBounds).min;\n        const aggregatedStats = TimelineUIUtils.statsForTimeRange(this.#selectedEvents, startTime, endTime);\n        const startOffset = startTime - minBoundsMilli;\n        const endOffset = endTime - minBoundsMilli;\n        const contentHelper = new TimelineDetailsContentHelper(null, null);\n        contentHelper.addSection(i18nString(UIStrings.rangeSS, { PH1: i18n.TimeUtilities.millisToString(startOffset), PH2: i18n.TimeUtilities.millisToString(endOffset) }));\n        const pieChart = TimelineUIUtils.generatePieChart(aggregatedStats);\n        contentHelper.appendElementRow('', pieChart);\n        this.setContent(contentHelper.fragment);\n        // Find all recalculate style events data from range\n        const isSelectorStatsEnabled = Common.Settings.Settings.instance().createSetting('timeline-capture-selector-stats', false).get();\n        if (this.#selectedEvents && isSelectorStatsEnabled) {\n            const eventsInRange = Trace.Helpers.Trace.findUpdateLayoutTreeEvents(this.#selectedEvents, Trace.Helpers.Timing.millisecondsToMicroseconds(startTime), Trace.Helpers.Timing.millisecondsToMicroseconds(endTime));\n            if (eventsInRange.length > 0) {\n                this.showAggregatedSelectorStats(eventsInRange);\n            }\n        }\n    }\n}\nexport var Tab;\n(function (Tab) {\n    /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n    Tab[\"Details\"] = \"details\";\n    Tab[\"EventLog\"] = \"event-log\";\n    Tab[\"CallTree\"] = \"call-tree\";\n    Tab[\"BottomUp\"] = \"bottom-up\";\n    Tab[\"PaintProfiler\"] = \"paint-profiler\";\n    Tab[\"LayerViewer\"] = \"layer-viewer\";\n    Tab[\"SelectorStats\"] = \"selector-stats\";\n    /* eslint-enable @typescript-eslint/naming-convention */\n})(Tab || (Tab = {}));\n//# sourceMappingURL=TimelineDetailsView.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/**\n * Given an event that the user has selected, this function returns all the\n * data of events and their initiators that need to be drawn on the flamechart.\n * The reason that this can return multiple InitiatorEntry objects is because we draw the\n * entire chain: for each, we see if it had an initiator, and\n * work backwards to draw each one, as well as the events initiated directly by the entry.\n */\nexport function initiatorsDataToDraw(parsedTrace, selectedEvent, hiddenEntries, expandableEntries) {\n    const initiatorsData = [\n        ...findInitiatorDataPredecessors(parsedTrace, selectedEvent, parsedTrace.Initiators.eventToInitiator),\n        ...findInitiatorDataDirectSuccessors(selectedEvent, parsedTrace.Initiators.initiatorToEvents),\n    ];\n    // For each InitiatorData, call a function that makes sure that neither the initiator or initiated entry is hidden.\n    // If they are, it will reassign the event or initiator to the closest ancestor.\n    initiatorsData.forEach(initiatorData => getClosestVisibleInitiatorEntriesAncestors(initiatorData, expandableEntries, hiddenEntries, parsedTrace));\n    return initiatorsData;\n}\nexport function initiatorsDataToDrawForNetwork(parsedTrace, selectedEvent) {\n    return findInitiatorDataPredecessors(parsedTrace, selectedEvent, parsedTrace.NetworkRequests.eventToInitiator);\n}\nfunction findInitiatorDataPredecessors(parsedTrace, selectedEvent, eventToInitiator) {\n    const initiatorsData = [];\n    let currentEvent = selectedEvent;\n    const visited = new Set();\n    visited.add(currentEvent);\n    // Build event initiator data up to the selected one\n    while (currentEvent) {\n        const currentInitiator = eventToInitiator.get(currentEvent);\n        if (currentInitiator) {\n            if (visited.has(currentInitiator)) {\n                break;\n            }\n            // Store the current initiator data, and then set the initiator to\n            // be the current event, so we work back through the\n            // trace and find the initiator of the initiator, and so\n            // on...\n            initiatorsData.push({ event: currentEvent, initiator: currentInitiator });\n            currentEvent = currentInitiator;\n            visited.add(currentEvent);\n            continue;\n        }\n        const nodeForCurrentEvent = parsedTrace.Renderer.entryToNode.get(currentEvent);\n        if (!nodeForCurrentEvent) {\n            // Should not happen - if it does something odd is going\n            // on so let's give up.\n            currentEvent = null;\n            break;\n        }\n        // Go up to the parent, and loop again.\n        currentEvent = nodeForCurrentEvent.parent?.entry || null;\n    }\n    return initiatorsData;\n}\nfunction findInitiatorDataDirectSuccessors(selectedEvent, initiatorToEvents) {\n    const initiatorsData = [];\n    // Add all of the initiated events to the initiatorsData array.\n    const eventsInitiatedByCurrent = initiatorToEvents.get(selectedEvent);\n    if (eventsInitiatedByCurrent) {\n        eventsInitiatedByCurrent.forEach(event => {\n            initiatorsData.push({ event, initiator: selectedEvent });\n        });\n    }\n    return initiatorsData;\n}\n/**\n * Given an InitiatorData object that contains an initiator and event, this function returns\n * the closest visible ancestors. We need to apply this to each initiatorData because\n * the actual initiator or initiated event might be hidden form the flame chart.\n * If neither entry is hidden, this function returns the initial initiatorData object.\n */\nfunction getClosestVisibleInitiatorEntriesAncestors(initiatorData, expandableEntries, hiddenEntries, parsedTrace) {\n    if (hiddenEntries.includes(initiatorData.event)) {\n        let nextParent = parsedTrace.Renderer.entryToNode.get(initiatorData.event)?.parent;\n        while (nextParent?.entry && !expandableEntries.includes(nextParent?.entry)) {\n            nextParent = nextParent.parent ?? undefined;\n        }\n        initiatorData.event = nextParent?.entry ?? initiatorData.event;\n        initiatorData.isEntryHidden = true;\n    }\n    if (hiddenEntries.includes(initiatorData.initiator)) {\n        let nextParent = parsedTrace.Renderer.entryToNode.get(initiatorData.initiator)?.parent;\n        while (nextParent?.entry && !expandableEntries.includes(nextParent?.entry)) {\n            nextParent = nextParent.parent ?? undefined;\n        }\n        initiatorData.initiator = nextParent?.entry ?? initiatorData.initiator;\n        initiatorData.isInitiatorHidden = true;\n    }\n    return initiatorData;\n}\n//# sourceMappingURL=Initiators.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport { addDecorationToEvent, buildGroupStyle, buildTrackHeader, getFormattedTime, } from './AppenderUtils.js';\nimport { entryIsVisibleInTimeline, } from './CompatibilityTracksAppender.js';\nimport * as Components from './components/components.js';\nimport * as ModificationsManager from './ModificationsManager.js';\nimport * as Utils from './utils/utils.js';\nconst UIStrings = {\n    /**\n     *@description Text shown for an entry in the flame chart that is ignored because it matches\n     * a predefined ignore list.\n     */\n    onIgnoreList: 'On ignore list',\n    /**\n     * @description Refers to the \"Main frame\", meaning the top level frame. See https://www.w3.org/TR/html401/present/frames.html\n     * @example{example.com} PH1\n     */\n    mainS: 'Main — {PH1}',\n    /**\n     * @description Refers to the main thread of execution of a program. See https://developer.mozilla.org/en-US/docs/Glossary/Main_thread\n     */\n    main: 'Main',\n    /**\n     * @description Refers to any frame in the page. See https://www.w3.org/TR/html401/present/frames.html\n     * @example {https://example.com} PH1\n     */\n    frameS: 'Frame — {PH1}',\n    /**\n     *@description A web worker in the page. See https://developer.mozilla.org/en-US/docs/Web/API/Worker\n     *@example {https://google.com} PH1\n     */\n    workerS: '`Worker` — {PH1}',\n    /**\n     *@description A web worker in the page. See https://developer.mozilla.org/en-US/docs/Web/API/Worker\n     *@example {FormatterWorker} PH1\n     *@example {https://google.com} PH2\n     */\n    workerSS: '`Worker`: {PH1} — {PH2}',\n    /**\n     *@description Label for a web worker exclusively allocated for a purpose.\n     */\n    dedicatedWorker: 'Dedicated `Worker`',\n    /**\n     *@description A generic name given for a thread running in the browser (sequence of programmed instructions).\n     * The placeholder is an enumeration given to the thread.\n     *@example {1} PH1\n     */\n    threadS: 'Thread {PH1}',\n    /**\n     *@description Rasterization in computer graphics.\n     */\n    raster: 'Raster',\n    /**\n     *@description Threads used for background tasks.\n     */\n    threadPool: 'Thread pool',\n    /**\n     *@description Name for a thread that rasterizes graphics in a website.\n     *@example {2} PH1\n     */\n    rasterizerThreadS: 'Rasterizer thread {PH1}',\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     *@example {2} PH1\n     */\n    threadPoolThreadS: 'Thread pool worker {PH1}',\n    /**\n     *@description Title of a bidder auction worklet with known URL in the timeline flame chart of the Performance panel\n     *@example {https://google.com} PH1\n     */\n    bidderWorkletS: 'Bidder Worklet — {PH1}',\n    /**\n     *@description Title of a bidder auction worklet in the timeline flame chart of the Performance panel with an unknown URL\n     */\n    bidderWorklet: 'Bidder Worklet',\n    /**\n     *@description Title of a seller auction worklet in the timeline flame chart of the Performance panel with an unknown URL\n     */\n    sellerWorklet: 'Seller Worklet',\n    /**\n     *@description Title of an auction worklet in the timeline flame chart of the Performance panel with an unknown URL\n     */\n    unknownWorklet: 'Auction Worklet',\n    /**\n     *@description Title of control thread of a service process for an auction worklet in the timeline flame chart of the Performance panel with an unknown URL\n     */\n    workletService: 'Auction Worklet service',\n    /**\n     *@description Title of a seller auction worklet with known URL in the timeline flame chart of the Performance panel\n     *@example {https://google.com} PH1\n     */\n    sellerWorkletS: 'Seller Worklet — {PH1}',\n    /**\n     *@description Title of an auction worklet with known URL in the timeline flame chart of the Performance panel\n     *@example {https://google.com} PH1\n     */\n    unknownWorkletS: 'Auction Worklet — {PH1}',\n    /**\n     *@description Title of control thread of a service process for an auction worklet with known URL in the timeline flame chart of the Performance panel\n     * @example {https://google.com} PH1\n     */\n    workletServiceS: 'Auction Worklet service — {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/ThreadAppender.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n// This appender is only triggered when the Renderer handler is run. At\n// the moment this only happens in the basic component server example.\n// In the future, once this appender fully supports the behaviour of the\n// old engine's thread/sync tracks we can always run it by enabling the\n// Renderer and Samples handler by default.\nexport class ThreadAppender {\n    appenderName = 'Thread';\n    #colorGenerator;\n    #compatibilityBuilder;\n    #parsedTrace;\n    #entries = [];\n    #tree;\n    #processId;\n    #threadId;\n    #threadDefaultName;\n    #expanded = false;\n    #headerAppended = false;\n    threadType = \"MAIN_THREAD\" /* Trace.Handlers.Threads.ThreadType.MAIN_THREAD */;\n    isOnMainFrame;\n    #showAllEventsEnabled = Root.Runtime.experiments.isEnabled('timeline-show-all-events');\n    #url = '';\n    #headerNestingLevel = null;\n    constructor(compatibilityBuilder, parsedTrace, processId, threadId, threadName, type) {\n        this.#compatibilityBuilder = compatibilityBuilder;\n        // TODO(crbug.com/1456706):\n        // The values for this color generator have been taken from the old\n        // engine to keep the colors the same after the migration. This\n        // generator is used here to create colors for js frames (profile\n        // calls) in the flamechart by hashing the script's url. We might\n        // need to reconsider this generator when migrating to GM3 colors.\n        this.#colorGenerator =\n            new Common.Color.Generator({ min: 30, max: 330, count: undefined }, { min: 50, max: 80, count: 3 }, 85);\n        // Add a default color for call frames with no url.\n        this.#colorGenerator.setColorForID('', '#f2ecdc');\n        this.#parsedTrace = parsedTrace;\n        this.#processId = processId;\n        this.#threadId = threadId;\n        // When loading a CPU profile, only CPU data will be available, thus\n        // we get the data from the SamplesHandler.\n        const entries = type === \"CPU_PROFILE\" /* Trace.Handlers.Threads.ThreadType.CPU_PROFILE */ ?\n            this.#parsedTrace.Samples?.profilesInProcess.get(processId)?.get(threadId)?.profileCalls :\n            this.#parsedTrace.Renderer?.processes.get(processId)?.threads?.get(threadId)?.entries;\n        const tree = type === \"CPU_PROFILE\" /* Trace.Handlers.Threads.ThreadType.CPU_PROFILE */ ?\n            this.#parsedTrace.Samples?.profilesInProcess.get(processId)?.get(threadId)?.profileTree :\n            this.#parsedTrace.Renderer?.processes.get(processId)?.threads?.get(threadId)?.tree;\n        if (!entries || !tree) {\n            throw new Error(`Could not find data for thread with id ${threadId} in process with id ${processId}`);\n        }\n        this.#entries = entries;\n        this.#tree = tree;\n        this.#threadDefaultName = threadName || i18nString(UIStrings.threadS, { PH1: threadId });\n        this.isOnMainFrame = Boolean(this.#parsedTrace.Renderer?.processes.get(processId)?.isOnMainFrame);\n        this.threadType = type;\n        // AuctionWorklets are threads, so we re-use this appender rather than\n        // duplicate it, but we change the name because we want to render these\n        // lower down than other threads.\n        if (this.#parsedTrace.AuctionWorklets.worklets.has(processId)) {\n            this.appenderName = 'Thread_AuctionWorklet';\n        }\n        this.#url = this.#parsedTrace.Renderer?.processes.get(this.#processId)?.url || '';\n    }\n    processId() {\n        return this.#processId;\n    }\n    threadId() {\n        return this.#threadId;\n    }\n    /**\n     * Appends into the flame chart data the data corresponding to the\n     * this thread.\n     * @param trackStartLevel the horizontal level of the flame chart events where\n     * the track's events will start being appended.\n     * @param expanded wether the track should be rendered expanded.\n     * @returns the first available level to append more data after having\n     * appended the track's events.\n     */\n    appendTrackAtLevel(trackStartLevel, expanded = false) {\n        if (this.#entries.length === 0) {\n            return trackStartLevel;\n        }\n        this.#expanded = expanded;\n        return this.#appendTreeAtLevel(trackStartLevel);\n    }\n    setHeaderNestingLevel(level) {\n        this.#headerNestingLevel = level;\n    }\n    /**\n     * Track header is appended only if there are events visible on it.\n     * Otherwise we don't append any track. So, instead of preemptively\n     * appending a track before appending its events, we only do so once\n     * we have detected that the track contains an event that is visible.\n     */\n    #ensureTrackHeaderAppended(trackStartLevel) {\n        if (this.#headerAppended) {\n            return;\n        }\n        if (this.threadType === \"RASTERIZER\" /* Trace.Handlers.Threads.ThreadType.RASTERIZER */ ||\n            this.threadType === \"THREAD_POOL\" /* Trace.Handlers.Threads.ThreadType.THREAD_POOL */) {\n            this.#appendGroupedTrackHeaderAndTitle(trackStartLevel, this.threadType);\n        }\n        else {\n            this.#appendTrackHeaderAtLevel(trackStartLevel);\n        }\n        this.#headerAppended = true;\n    }\n    setHeaderAppended(headerAppended) {\n        this.#headerAppended = headerAppended;\n    }\n    headerAppended() {\n        return this.#headerAppended;\n    }\n    /**\n     * Adds into the flame chart data the header corresponding to this\n     * thread. A header is added in the shape of a group in the flame\n     * chart data. A group has a predefined style and a reference to the\n     * definition of the legacy track (which should be removed in the\n     * future).\n     * @param currentLevel the flame chart level at which the header is\n     * appended.\n     */\n    #appendTrackHeaderAtLevel(currentLevel) {\n        const trackIsCollapsible = this.#entries.length > 0;\n        const style = buildGroupStyle({ shareHeaderLine: false, collapsible: trackIsCollapsible });\n        if (this.#headerNestingLevel !== null) {\n            style.nestingLevel = this.#headerNestingLevel;\n        }\n        const visualLoggingName = this.#visualLoggingNameForThread();\n        const group = buildTrackHeader(visualLoggingName, currentLevel, this.trackName(), style, /* selectable= */ true, this.#expanded, \n        /* showStackContextMenu= */ true);\n        this.#compatibilityBuilder.registerTrackForGroup(group, this);\n    }\n    #visualLoggingNameForThread() {\n        switch (this.threadType) {\n            case \"MAIN_THREAD\" /* Trace.Handlers.Threads.ThreadType.MAIN_THREAD */:\n                return this.isOnMainFrame ? \"thread.main\" /* VisualLoggingTrackName.THREAD_MAIN */ : \"thread.frame\" /* VisualLoggingTrackName.THREAD_FRAME */;\n            case \"WORKER\" /* Trace.Handlers.Threads.ThreadType.WORKER */:\n                return \"thread.worker\" /* VisualLoggingTrackName.THREAD_WORKER */;\n            case \"RASTERIZER\" /* Trace.Handlers.Threads.ThreadType.RASTERIZER */:\n                return \"thread.rasterizer\" /* VisualLoggingTrackName.THREAD_RASTERIZER */;\n            case \"AUCTION_WORKLET\" /* Trace.Handlers.Threads.ThreadType.AUCTION_WORKLET */:\n                return \"thread.auction-worklet\" /* VisualLoggingTrackName.THREAD_AUCTION_WORKLET */;\n            case \"OTHER\" /* Trace.Handlers.Threads.ThreadType.OTHER */:\n                return \"thread.other\" /* VisualLoggingTrackName.THREAD_OTHER */;\n            case \"CPU_PROFILE\" /* Trace.Handlers.Threads.ThreadType.CPU_PROFILE */:\n                return \"thread.cpu-profile\" /* VisualLoggingTrackName.THREAD_CPU_PROFILE */;\n            case \"THREAD_POOL\" /* Trace.Handlers.Threads.ThreadType.THREAD_POOL */:\n                return \"thread.pool\" /* VisualLoggingTrackName.THREAD_POOL */;\n            default:\n                return null;\n        }\n    }\n    /**\n     * Raster threads are rendered under a single header in the\n     * flamechart. However, each thread has a unique title which needs to\n     * be added to the flamechart data.\n     */\n    #appendGroupedTrackHeaderAndTitle(trackStartLevel, threadType) {\n        const currentTrackCount = this.#compatibilityBuilder.getCurrentTrackCountForThreadType(threadType);\n        if (currentTrackCount === 0) {\n            const trackIsCollapsible = this.#entries.length > 0;\n            const headerStyle = buildGroupStyle({ shareHeaderLine: false, collapsible: trackIsCollapsible });\n            // Don't set any jslogcontext (first argument) because this is a shared\n            // header group. Each child will have its context set.\n            const headerGroup = buildTrackHeader(null, trackStartLevel, this.trackName(), headerStyle, /* selectable= */ false, this.#expanded);\n            this.#compatibilityBuilder.getFlameChartTimelineData().groups.push(headerGroup);\n        }\n        // Nesting is set to 1 because the track is appended inside the\n        // header for all raster threads.\n        const titleStyle = buildGroupStyle({ padding: 2, nestingLevel: 1, collapsible: false });\n        const rasterizerTitle = this.threadType === \"RASTERIZER\" /* Trace.Handlers.Threads.ThreadType.RASTERIZER */ ?\n            i18nString(UIStrings.rasterizerThreadS, { PH1: currentTrackCount + 1 }) :\n            i18nString(UIStrings.threadPoolThreadS, { PH1: currentTrackCount + 1 });\n        const visualLoggingName = this.#visualLoggingNameForThread();\n        const titleGroup = buildTrackHeader(visualLoggingName, trackStartLevel, rasterizerTitle, titleStyle, /* selectable= */ true, this.#expanded);\n        this.#compatibilityBuilder.registerTrackForGroup(titleGroup, this);\n    }\n    trackName() {\n        let threadTypeLabel = null;\n        switch (this.threadType) {\n            case \"MAIN_THREAD\" /* Trace.Handlers.Threads.ThreadType.MAIN_THREAD */:\n                threadTypeLabel = this.isOnMainFrame ? i18nString(UIStrings.mainS, { PH1: this.#url }) :\n                    i18nString(UIStrings.frameS, { PH1: this.#url });\n                break;\n            case \"CPU_PROFILE\" /* Trace.Handlers.Threads.ThreadType.CPU_PROFILE */:\n                threadTypeLabel = i18nString(UIStrings.main);\n                break;\n            case \"WORKER\" /* Trace.Handlers.Threads.ThreadType.WORKER */:\n                threadTypeLabel = this.#buildNameForWorker();\n                break;\n            case \"RASTERIZER\" /* Trace.Handlers.Threads.ThreadType.RASTERIZER */:\n                threadTypeLabel = i18nString(UIStrings.raster);\n                break;\n            case \"THREAD_POOL\" /* Trace.Handlers.Threads.ThreadType.THREAD_POOL */:\n                threadTypeLabel = i18nString(UIStrings.threadPool);\n                break;\n            case \"OTHER\" /* Trace.Handlers.Threads.ThreadType.OTHER */:\n                break;\n            case \"AUCTION_WORKLET\" /* Trace.Handlers.Threads.ThreadType.AUCTION_WORKLET */:\n                threadTypeLabel = this.#buildNameForAuctionWorklet();\n                break;\n            default:\n                return Platform.assertNever(this.threadType, `Unknown thread type: ${this.threadType}`);\n        }\n        let suffix = '';\n        if (this.#parsedTrace.Meta.traceIsGeneric) {\n            suffix = suffix + ` (${this.threadId()})`;\n        }\n        return (threadTypeLabel || this.#threadDefaultName) + suffix;\n    }\n    getUrl() {\n        return this.#url;\n    }\n    getEntries() {\n        return this.#entries;\n    }\n    #buildNameForAuctionWorklet() {\n        const workletMetadataEvent = this.#parsedTrace.AuctionWorklets.worklets.get(this.#processId);\n        // We should always have this event - if we do not, we were instantiated with invalid data.\n        if (!workletMetadataEvent) {\n            return i18nString(UIStrings.unknownWorklet);\n        }\n        // Host could be empty - in which case we do not want to add it.\n        const host = workletMetadataEvent.host ? `https://${workletMetadataEvent.host}` : '';\n        const shouldAddHost = host.length > 0;\n        // For each Auction Worklet in a page there are two threads we care about on the same process.\n        // 1. The \"Worklet Service\" which is a generic helper service. This thread\n        // is always named \"auction_worklet.CrUtilityMain\".\n        //\n        // 2. The \"Seller/Bidder\" service. This thread is always named\n        // \"AuctionV8HelperThread\". The AuctionWorkets handler does the job of\n        // figuring this out for us - the metadata event it provides for each\n        // worklet process will have a `type` already set.\n        //\n        // Therefore, for this given thread, which we know is part of\n        // an AuctionWorklet process, we need to figure out if this thread is the\n        // generic service, or a seller/bidder worklet.\n        //\n        // Note that the worklet could also have the \"unknown\" type - this is not\n        // expected but implemented to prevent trace event changes causing DevTools\n        // to break with unknown worklet types.\n        const isUtilityThread = workletMetadataEvent.args.data.utilityThread.tid === this.#threadId;\n        const isBidderOrSeller = workletMetadataEvent.args.data.v8HelperThread.tid === this.#threadId;\n        if (isUtilityThread) {\n            return shouldAddHost ? i18nString(UIStrings.workletServiceS, { PH1: host }) : i18nString(UIStrings.workletService);\n        }\n        if (isBidderOrSeller) {\n            switch (workletMetadataEvent.type) {\n                case \"seller\" /* Trace.Types.Events.AuctionWorkletType.SELLER */:\n                    return shouldAddHost ? i18nString(UIStrings.sellerWorkletS, { PH1: host }) :\n                        i18nString(UIStrings.sellerWorklet);\n                case \"bidder\" /* Trace.Types.Events.AuctionWorkletType.BIDDER */:\n                    return shouldAddHost ? i18nString(UIStrings.bidderWorkletS, { PH1: host }) :\n                        i18nString(UIStrings.bidderWorklet);\n                case \"unknown\" /* Trace.Types.Events.AuctionWorkletType.UNKNOWN */:\n                    return shouldAddHost ? i18nString(UIStrings.unknownWorkletS, { PH1: host }) :\n                        i18nString(UIStrings.unknownWorklet);\n                default:\n                    Platform.assertNever(workletMetadataEvent.type, `Unexpected Auction Worklet Type ${workletMetadataEvent.type}`);\n            }\n        }\n        // We should never reach here, but just in case!\n        return shouldAddHost ? i18nString(UIStrings.unknownWorkletS, { PH1: host }) : i18nString(UIStrings.unknownWorklet);\n    }\n    #buildNameForWorker() {\n        const url = this.#parsedTrace.Renderer?.processes.get(this.#processId)?.url || '';\n        const workerId = this.#parsedTrace.Workers.workerIdByThread.get(this.#threadId);\n        const workerURL = workerId ? this.#parsedTrace.Workers.workerURLById.get(workerId) : url;\n        // Try to create a name using the worker url if present. If not, use a generic label.\n        let workerName = workerURL ? i18nString(UIStrings.workerS, { PH1: workerURL }) : i18nString(UIStrings.dedicatedWorker);\n        const workerTarget = workerId !== undefined && SDK.TargetManager.TargetManager.instance().targetById(workerId);\n        if (workerTarget) {\n            // Get the worker name from the target, which corresponds to the name\n            // assigned to the worker when it was constructed.\n            workerName = i18nString(UIStrings.workerSS, { PH1: workerTarget.name(), PH2: url });\n        }\n        return workerName;\n    }\n    /**\n     * Adds into the flame chart data the entries of this thread, which\n     * includes trace events and JS calls.\n     * @param currentLevel the flame chart level from which entries will\n     * be appended.\n     * @returns the next level after the last occupied by the appended\n     * entries (the first available level to append more data).\n     */\n    #appendTreeAtLevel(trackStartLevel) {\n        // We can not used the tree maxDepth in the tree from the\n        // RendererHandler because ignore listing and visibility of events\n        // alter the final depth of the flame chart.\n        return this.#appendNodesAtLevel(this.#tree.roots, trackStartLevel);\n    }\n    /**\n     * Traverses the trees formed by the provided nodes in breadth first\n     * fashion and appends each node's entry on each iteration. As each\n     * entry is handled, a check for the its visibility or if it's ignore\n     * listed is done before appending.\n     */\n    #appendNodesAtLevel(nodes, startingLevel, parentIsIgnoredListed = false) {\n        const invisibleEntries = ModificationsManager.ModificationsManager.activeManager()?.getEntriesFilter().invisibleEntries() ?? [];\n        let maxDepthInTree = startingLevel;\n        for (const node of nodes) {\n            let nextLevel = startingLevel;\n            const entry = node.entry;\n            const entryIsIgnoreListed = Utils.IgnoreList.isIgnoreListedEntry(entry);\n            // Events' visibility is determined from their predefined styles,\n            // which is something that's not available in the engine data.\n            // Thus it needs to be checked in the appenders, but preemptively\n            // checking if there are visible events and returning early if not\n            // is potentially expensive since, in theory, we would be adding\n            // another traversal to the entries array (which could grow\n            // large). To avoid the extra cost we  add the check in the\n            // traversal we already need to append events.\n            const entryIsVisible = !invisibleEntries.includes(entry) &&\n                (entryIsVisibleInTimeline(entry, this.#parsedTrace) || this.#showAllEventsEnabled);\n            // For ignore listing support, these two conditions need to be met\n            // to not append a profile call to the flame chart:\n            // 1. It is ignore listed\n            // 2. It is NOT the bottom-most call in an ignore listed stack (a\n            //    set of chained profile calls that belong to ignore listed\n            //    URLs).\n            // This means that all of the ignore listed calls are ignored (not\n            // appended), except if it is the bottom call of an ignored stack.\n            // This is becaue to represent ignore listed stack frames, we add\n            // a flame chart entry with the length and position of the bottom\n            // frame, which is distictively marked to denote an ignored listed\n            // stack.\n            const skipEventDueToIgnoreListing = entryIsIgnoreListed && parentIsIgnoredListed;\n            if (entryIsVisible && !skipEventDueToIgnoreListing) {\n                this.#appendEntryAtLevel(entry, startingLevel);\n                nextLevel++;\n            }\n            const depthInChildTree = this.#appendNodesAtLevel(node.children, nextLevel, entryIsIgnoreListed);\n            maxDepthInTree = Math.max(depthInChildTree, maxDepthInTree);\n        }\n        return maxDepthInTree;\n    }\n    #appendEntryAtLevel(entry, level) {\n        this.#ensureTrackHeaderAppended(level);\n        const index = this.#compatibilityBuilder.appendEventAtLevel(entry, level, this);\n        this.#addDecorationsToEntry(entry, index);\n    }\n    #addDecorationsToEntry(entry, index) {\n        const flameChartData = this.#compatibilityBuilder.getFlameChartTimelineData();\n        if (ModificationsManager.ModificationsManager.activeManager()?.getEntriesFilter().isEntryExpandable(entry)) {\n            addDecorationToEvent(flameChartData, index, { type: \"HIDDEN_DESCENDANTS_ARROW\" /* PerfUI.FlameChart.FlameChartDecorationType.HIDDEN_DESCENDANTS_ARROW */ });\n        }\n        const warnings = this.#parsedTrace.Warnings.perEvent.get(entry);\n        if (!warnings) {\n            return;\n        }\n        addDecorationToEvent(flameChartData, index, { type: \"WARNING_TRIANGLE\" /* PerfUI.FlameChart.FlameChartDecorationType.WARNING_TRIANGLE */ });\n        if (!warnings.includes('LONG_TASK')) {\n            return;\n        }\n        addDecorationToEvent(flameChartData, index, {\n            type: \"CANDY\" /* PerfUI.FlameChart.FlameChartDecorationType.CANDY */,\n            startAtTime: Trace.Handlers.ModelHandlers.Warnings.LONG_MAIN_THREAD_TASK_THRESHOLD,\n        });\n    }\n    /*\n      ------------------------------------------------------------------------------------\n       The following methods  are invoked by the flame chart renderer to query features about\n       events on rendering.\n      ------------------------------------------------------------------------------------\n    */\n    /**\n     * Gets the color an event added by this appender should be rendered with.\n     */\n    colorForEvent(event) {\n        if (this.#parsedTrace.Meta.traceIsGeneric) {\n            return event.name ? `hsl(${Platform.StringUtilities.hashCode(event.name) % 300 + 30}, 40%, 70%)` : '#ccc';\n        }\n        if (Trace.Types.Events.isProfileCall(event)) {\n            if (event.callFrame.functionName === '(idle)') {\n                return Components.EntryStyles.getCategoryStyles().idle.getComputedColorValue();\n            }\n            if (event.callFrame.scriptId === '0') {\n                // If we can not match this frame to a script, return the\n                // generic \"scripting\" color.\n                return Components.EntryStyles.getCategoryStyles().scripting.getComputedColorValue();\n            }\n            // Otherwise, return a color created based on its URL.\n            return this.#colorGenerator.colorForID(event.callFrame.url);\n        }\n        const defaultColor = Components.EntryStyles.getEventStyle(event.name)?.category.getComputedColorValue();\n        return defaultColor || Components.EntryStyles.getCategoryStyles().other.getComputedColorValue();\n    }\n    /**\n     * Gets the title an event added by this appender should be rendered with.\n     */\n    titleForEvent(entry) {\n        if (Utils.IgnoreList.isIgnoreListedEntry(entry)) {\n            return i18nString(UIStrings.onIgnoreList);\n        }\n        return Components.EntryName.nameForEntry(entry, this.#parsedTrace);\n    }\n    /**\n     * Returns the info shown when an event added by this appender\n     * is hovered in the timeline.\n     */\n    highlightedEntryInfo(event) {\n        let title = this.titleForEvent(event);\n        if (Trace.Types.Events.isParseHTML(event)) {\n            const startLine = event.args['beginData']['startLine'];\n            const endLine = event.args['endData'] && event.args['endData']['endLine'];\n            const eventURL = event.args['beginData']['url'];\n            const url = Bindings.ResourceUtils.displayNameForURL(eventURL);\n            const range = (endLine !== -1 || endLine === startLine) ? `${startLine}...${endLine}` : startLine;\n            title += ` - ${url} [${range}]`;\n        }\n        const selfTime = this.#parsedTrace.Renderer.entryToNode.get(event)?.selfTime;\n        return { title, formattedTime: getFormattedTime(event.dur, selfTime) };\n    }\n}\n//# sourceMappingURL=ThreadAppender.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (c) 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.timeline-flamechart-popover {\n  overflow: hidden;\n}\n\n.timeline-flamechart-popover devtools-interaction-breakdown {\n  margin-top: 10px;\n}\n\n.timeline-flamechart-popover span {\n  margin-right: 5px;\n}\n\n.timeline-flamechart-popover span.timeline-info-network-time {\n  color: var(--sys-color-primary);\n}\n\n.timeline-flamechart-popover span.timeline-info-time {\n  color: var(--sys-color-green);\n}\n\n.timeline-flamechart-popover span.timeline-info-warning {\n  color: var(--sys-color-error);\n}\n\n.timeline-flamechart-popover span.timeline-info-warning * {\n  color: inherit;\n}\n\n.layout-shift-viz {\n  position: relative;\n  margin: var(--sys-size-8) var(--sys-size-5);\n  outline: 1px solid var(--sys-color-divider);\n}\n\n.layout-shift-viz-rect {\n  outline: 1px solid color-mix(in sRGB, var(--color-background-inverted) 20%, var(--app-color-rendering));\n  background-color: color-mix(in sRGB, var(--color-background-inverted-opacity-0) 50%, var(--app-color-rendering-children));\n  position: absolute;\n  z-index: 100;\n}\n\n.layout-shift-viz > img {\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n\n/*# sourceURL=timelineFlamechartPopover.css */\n`);\n\nexport default styles;\n","/*\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport { CompatibilityTracksAppender } from './CompatibilityTracksAppender.js';\nimport { ExtensionDataGatherer } from './ExtensionDataGatherer.js';\nimport { initiatorsDataToDraw } from './Initiators.js';\nimport { ModificationsManager } from './ModificationsManager.js';\nimport { ThreadAppender } from './ThreadAppender.js';\nimport timelineFlamechartPopoverStyles from './timelineFlamechartPopover.css.js';\nimport { FlameChartStyle, Selection } from './TimelineFlameChartView.js';\nimport { TimelineSelection } from './TimelineSelection.js';\nimport * as Utils from './utils/utils.js';\nconst UIStrings = {\n    /**\n     *@description Text for rendering frames\n     */\n    frames: 'Frames',\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    idleFrame: 'Idle frame',\n    /**\n     *@description Text in Timeline Frame Chart Data Provider of the Performance panel\n     */\n    droppedFrame: 'Dropped frame',\n    /**\n     *@description Text in Timeline Frame Chart Data Provider of the Performance panel\n     */\n    partiallyPresentedFrame: 'Partially-presented frame',\n    /**\n     *@description Text for a rendering frame\n     */\n    frame: 'Frame',\n    /**\n     *@description Text for Hiding a function from the Flame Chart\n     */\n    hideFunction: 'Hide function',\n    /**\n     *@description Text for Hiding all children of a function from the Flame Chart\n     */\n    hideChildren: 'Hide children',\n    /**\n     *@description Text for Hiding all child entries that are identical to the selected entry from the Flame Chart\n     */\n    hideRepeatingChildren: 'Hide repeating children',\n    /**\n     *@description Text for remove script from ignore list from the Flame Chart\n     */\n    removeScriptFromIgnoreList: 'Remove script from ignore list',\n    /**\n     *@description Text for add script to ignore list from the Flame Chart\n     */\n    addScriptToIgnoreList: 'Add script to ignore list',\n    /**\n     *@description Text for an action that shows all of the hidden children of an entry\n     */\n    resetChildren: 'Reset children',\n    /**\n     *@description Text for an action that shows all of the hidden entries of the Flame Chart\n     */\n    resetTrace: 'Reset trace',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineFlameChartDataProvider.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineFlameChartDataProvider extends Common.ObjectWrapper.ObjectWrapper {\n    droppedFramePatternCanvas;\n    partialFramePatternCanvas;\n    timelineDataInternal;\n    currentLevel;\n    // The Performance and the Timeline models are expected to be\n    // deprecated in favor of using parsedTrace (new RPP engine) only\n    // as part of the work in crbug.com/1386091. For this reason they\n    // have the \"legacy\" prefix on their name.\n    compatibilityTracksAppender;\n    parsedTrace;\n    isCpuProfile = false;\n    minimumBoundaryInternal;\n    timeSpan;\n    headerLevel1;\n    headerLevel2;\n    staticHeader;\n    framesHeader;\n    screenshotsHeader;\n    // Contains all the entries that are DRAWN onto the track. Entries that have\n    // been hidden - either by a user action, or because they aren't visible at\n    // all - will not appear in this array and it will change per-render. For\n    // example, if a user collapses an icicle in the flamechart, those entries\n    // that are now hidden will no longer be in this array.\n    entryData = [];\n    entryTypeByLevel;\n    entryIndexToTitle;\n    lastInitiatorEntry;\n    lastInitiatorsData = [];\n    lastSelection;\n    #font;\n    #eventIndexByEvent = new WeakMap();\n    constructor() {\n        super();\n        this.reset();\n        this.#font = `${PerfUI.Font.DEFAULT_FONT_SIZE} ${PerfUI.Font.getFontFamilyForCanvas()}`;\n        this.droppedFramePatternCanvas = document.createElement('canvas');\n        this.partialFramePatternCanvas = document.createElement('canvas');\n        this.preparePatternCanvas();\n        this.timelineDataInternal = null;\n        this.currentLevel = 0;\n        this.compatibilityTracksAppender = null;\n        this.parsedTrace = null;\n        this.minimumBoundaryInternal = 0;\n        this.timeSpan = 0;\n        this.headerLevel1 = this.buildGroupStyle({ shareHeaderLine: false });\n        this.headerLevel2 = this.buildGroupStyle({ padding: 2, nestingLevel: 1, collapsible: false });\n        this.staticHeader = this.buildGroupStyle({ collapsible: false });\n        this.framesHeader = this.buildGroupStyle({ useFirstLineForOverview: true });\n        this.screenshotsHeader =\n            this.buildGroupStyle({ useFirstLineForOverview: true, nestingLevel: 1, collapsible: false, itemsHeight: 150 });\n        ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, () => {\n            const headers = [\n                this.headerLevel1,\n                this.headerLevel2,\n                this.staticHeader,\n                this.framesHeader,\n                this.screenshotsHeader,\n            ];\n            for (const header of headers) {\n                header.color = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-on-surface');\n                header.backgroundColor =\n                    ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container');\n            }\n        });\n        Utils.ImageCache.emitter.addEventListener('screenshot-loaded', () => this.dispatchEventToListeners(\"DataChanged\" /* Events.DATA_CHANGED */));\n    }\n    hasTrackConfigurationMode() {\n        return true;\n    }\n    getPossibleActions(entryIndex, groupIndex) {\n        const data = this.timelineData();\n        if (!data) {\n            return;\n        }\n        const group = data.groups.at(groupIndex);\n        // Early exit here if there is no group or:\n        // 1. The group is not expanded: it needs to be expanded to allow the\n        //    context menu actions to occur.\n        // 2. The group does not have the showStackContextMenu flag which indicates\n        //    that it does not show entries that support the stack actions.\n        if (!group || !group.expanded || !group.showStackContextMenu) {\n            return;\n        }\n        // Check which actions are possible on an entry.\n        // If an action would not change the entries (for example it has no children to collapse), we do not need to show it.\n        return this.findPossibleContextMenuActions(entryIndex);\n    }\n    customizedContextMenu(event, entryIndex, groupIndex) {\n        const possibleActions = this.getPossibleActions(entryIndex, groupIndex);\n        if (!possibleActions) {\n            return;\n        }\n        const contextMenu = new UI.ContextMenu.ContextMenu(event, { useSoftMenu: true });\n        if (UI.ActionRegistry.ActionRegistry.instance().hasAction('drjones.performance-panel-context')) {\n            const traceEntryNodeForAI = this.getTraceEntryTreeForAIFromEntryIndex(entryIndex);\n            UI.Context.Context.instance().setFlavor(Trace.Helpers.TreeHelpers.TraceEntryNodeForAI, traceEntryNodeForAI);\n            contextMenu.headerSection().appendAction('drjones.performance-panel-context');\n        }\n        const hideEntryOption = contextMenu.defaultSection().appendItem(i18nString(UIStrings.hideFunction), () => {\n            this.modifyTree(\"MERGE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.MERGE_FUNCTION */, entryIndex);\n        }, {\n            disabled: !possibleActions?.[\"MERGE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.MERGE_FUNCTION */],\n            jslogContext: 'hide-function',\n        });\n        hideEntryOption.setShortcut('H');\n        const hideChildrenOption = contextMenu.defaultSection().appendItem(i18nString(UIStrings.hideChildren), () => {\n            this.modifyTree(\"COLLAPSE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_FUNCTION */, entryIndex);\n        }, {\n            disabled: !possibleActions?.[\"COLLAPSE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_FUNCTION */],\n            jslogContext: 'hide-children',\n        });\n        hideChildrenOption.setShortcut('C');\n        const hideRepeatingChildrenOption = contextMenu.defaultSection().appendItem(i18nString(UIStrings.hideRepeatingChildren), () => {\n            this.modifyTree(\"COLLAPSE_REPEATING_DESCENDANTS\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_REPEATING_DESCENDANTS */, entryIndex);\n        }, {\n            disabled: !possibleActions?.[\"COLLAPSE_REPEATING_DESCENDANTS\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_REPEATING_DESCENDANTS */],\n            jslogContext: 'hide-repeating-children',\n        });\n        hideRepeatingChildrenOption.setShortcut('R');\n        const resetChildrenOption = contextMenu.defaultSection().appendItem(i18nString(UIStrings.resetChildren), () => {\n            this.modifyTree(\"RESET_CHILDREN\" /* PerfUI.FlameChart.FilterAction.RESET_CHILDREN */, entryIndex);\n        }, {\n            disabled: !possibleActions?.[\"RESET_CHILDREN\" /* PerfUI.FlameChart.FilterAction.RESET_CHILDREN */],\n            jslogContext: 'reset-children',\n        });\n        resetChildrenOption.setShortcut('U');\n        contextMenu.defaultSection().appendItem(i18nString(UIStrings.resetTrace), () => {\n            this.modifyTree(\"UNDO_ALL_ACTIONS\" /* PerfUI.FlameChart.FilterAction.UNDO_ALL_ACTIONS */, entryIndex);\n        }, {\n            disabled: !possibleActions?.[\"UNDO_ALL_ACTIONS\" /* PerfUI.FlameChart.FilterAction.UNDO_ALL_ACTIONS */],\n            jslogContext: 'reset-trace',\n        });\n        const entry = this.eventByIndex(entryIndex);\n        if (!entry || entry instanceof Trace.Handlers.ModelHandlers.Frames.TimelineFrame || !this.parsedTrace) {\n            return contextMenu;\n        }\n        const url = Utils.SourceMapsResolver.SourceMapsResolver.resolvedURLForEntry(this.parsedTrace, entry);\n        if (!url) {\n            return contextMenu;\n        }\n        if (Utils.IgnoreList.isIgnoreListedEntry(entry)) {\n            contextMenu.defaultSection().appendItem(i18nString(UIStrings.removeScriptFromIgnoreList), () => {\n                Bindings.IgnoreListManager.IgnoreListManager.instance().unIgnoreListURL(url);\n                this.dispatchEventToListeners(\"DataChanged\" /* Events.DATA_CHANGED */);\n            }, {\n                jslogContext: 'remove-from-ignore-list',\n            });\n        }\n        else {\n            contextMenu.defaultSection().appendItem(i18nString(UIStrings.addScriptToIgnoreList), () => {\n                Bindings.IgnoreListManager.IgnoreListManager.instance().ignoreListURL(url);\n                this.dispatchEventToListeners(\"DataChanged\" /* Events.DATA_CHANGED */);\n            }, {\n                jslogContext: 'add-to-ignore-list',\n            });\n        }\n        return contextMenu;\n    }\n    entryHasAnnotations(entryIndex) {\n        const event = this.eventByIndex(entryIndex);\n        if (!event) {\n            return false;\n        }\n        const annotations = ModificationsManager.activeManager()?.annotationsForEntry(event);\n        return annotations ? annotations.length > 0 : false;\n    }\n    deleteAnnotationsForEntry(entryIndex) {\n        const event = this.eventByIndex(entryIndex);\n        if (!event) {\n            return;\n        }\n        ModificationsManager.activeManager()?.deleteEntryAnnotations(event);\n    }\n    modifyTree(action, entryIndex) {\n        const entry = this.entryData[entryIndex];\n        ModificationsManager.activeManager()?.getEntriesFilter().applyFilterAction({ type: action, entry });\n        this.timelineData(true);\n        this.buildFlowForInitiator(entryIndex);\n        this.dispatchEventToListeners(\"DataChanged\" /* Events.DATA_CHANGED */);\n    }\n    getTraceEntryTreeForAIFromEntryIndex(entryIndex) {\n        const entry = this.entryData[entryIndex];\n        const manager = ModificationsManager.activeManager();\n        if (!manager) {\n            return null;\n        }\n        return manager.getEntriesFilter().getTraceEntryTreeForAI(entry);\n    }\n    findPossibleContextMenuActions(entryIndex) {\n        const entry = this.entryData[entryIndex];\n        return ModificationsManager.activeManager()?.getEntriesFilter().findPossibleActions(entry);\n    }\n    handleFlameChartTransformKeyboardEvent(event, entryIndex, groupIndex) {\n        const possibleActions = this.getPossibleActions(entryIndex, groupIndex);\n        if (!possibleActions) {\n            return;\n        }\n        let handled = false;\n        if (event.code === 'KeyH' && possibleActions[\"MERGE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.MERGE_FUNCTION */]) {\n            this.modifyTree(\"MERGE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.MERGE_FUNCTION */, entryIndex);\n            handled = true;\n        }\n        else if (event.code === 'KeyC' && possibleActions[\"COLLAPSE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_FUNCTION */]) {\n            this.modifyTree(\"COLLAPSE_FUNCTION\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_FUNCTION */, entryIndex);\n            handled = true;\n        }\n        else if (event.code === 'KeyR' && possibleActions[\"COLLAPSE_REPEATING_DESCENDANTS\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_REPEATING_DESCENDANTS */]) {\n            this.modifyTree(\"COLLAPSE_REPEATING_DESCENDANTS\" /* PerfUI.FlameChart.FilterAction.COLLAPSE_REPEATING_DESCENDANTS */, entryIndex);\n            handled = true;\n        }\n        else if (event.code === 'KeyU') {\n            this.modifyTree(\"RESET_CHILDREN\" /* PerfUI.FlameChart.FilterAction.RESET_CHILDREN */, entryIndex);\n            handled = true;\n        }\n        if (handled) {\n            event.consume(true);\n        }\n    }\n    buildGroupStyle(extra) {\n        const defaultGroupStyle = {\n            padding: 4,\n            height: 17,\n            collapsible: true,\n            color: ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-on-surface'),\n            backgroundColor: ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container'),\n            nestingLevel: 0,\n            shareHeaderLine: true,\n        };\n        return Object.assign(defaultGroupStyle, extra);\n    }\n    setModel(parsedTrace, isCpuProfile = false) {\n        this.reset();\n        this.parsedTrace = parsedTrace;\n        ExtensionDataGatherer.instance().modelChanged(parsedTrace);\n        this.isCpuProfile = isCpuProfile;\n        if (parsedTrace) {\n            const { traceBounds } = parsedTrace.Meta;\n            const minTime = Trace.Helpers.Timing.microSecondsToMilliseconds(traceBounds.min);\n            const maxTime = Trace.Helpers.Timing.microSecondsToMilliseconds(traceBounds.max);\n            this.minimumBoundaryInternal = minTime;\n            this.timeSpan = minTime === maxTime ? 1000 : maxTime - this.minimumBoundaryInternal;\n        }\n    }\n    /**\n     * Instances and caches a CompatibilityTracksAppender using the\n     * internal flame chart data and the trace parsed data coming from the\n     * trace engine.\n     * The model data must have been set to the data provider instance before\n     * attempting to instance the CompatibilityTracksAppender.\n     */\n    compatibilityTracksAppenderInstance(forceNew = false) {\n        if (!this.compatibilityTracksAppender || forceNew) {\n            if (!this.parsedTrace) {\n                throw new Error('Attempted to instantiate a CompatibilityTracksAppender without having set the trace parse data first.');\n            }\n            this.timelineDataInternal = this.#instantiateTimelineData();\n            this.compatibilityTracksAppender = new CompatibilityTracksAppender(this.timelineDataInternal, this.parsedTrace, this.entryData, this.entryTypeByLevel);\n        }\n        return this.compatibilityTracksAppender;\n    }\n    /**\n     * Returns the instance of the timeline flame chart data, without\n     * adding data to it. In case the timeline data hasn't been instanced\n     * creates a new instance and returns it.\n     */\n    #instantiateTimelineData() {\n        if (!this.timelineDataInternal) {\n            this.timelineDataInternal = PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n        }\n        return this.timelineDataInternal;\n    }\n    /**\n     * Builds the flame chart data using the track appenders\n     */\n    buildFromTrackAppenders(options) {\n        if (!this.compatibilityTracksAppender) {\n            return;\n        }\n        const appenders = this.compatibilityTracksAppender.allVisibleTrackAppenders();\n        for (const appender of appenders) {\n            const skipThreadAppenderByName = appender instanceof ThreadAppender && !appender.trackName().includes(options?.filterThreadsByName || '');\n            if (skipThreadAppenderByName) {\n                continue;\n            }\n            const expanded = Boolean(options?.expandedTracks?.has(appender.appenderName));\n            this.currentLevel = appender.appendTrackAtLevel(this.currentLevel, expanded);\n        }\n    }\n    groupTreeEvents(group) {\n        return this.compatibilityTracksAppender?.groupEventsForTreeView(group) ?? null;\n    }\n    mainFrameNavigationStartEvents() {\n        if (!this.parsedTrace) {\n            return [];\n        }\n        return this.parsedTrace.Meta.mainFrameNavigations;\n    }\n    entryTitle(entryIndex) {\n        const entryType = this.#entryTypeForIndex(entryIndex);\n        if (entryType === \"Screenshot\" /* EntryType.SCREENSHOT */) {\n            return '';\n        }\n        if (entryType === \"TrackAppender\" /* EntryType.TRACK_APPENDER */) {\n            const timelineData = this.timelineDataInternal;\n            const eventLevel = timelineData.entryLevels[entryIndex];\n            const event = this.entryData[entryIndex];\n            return this.compatibilityTracksAppender?.titleForEvent(event, eventLevel) || null;\n        }\n        let title = this.entryIndexToTitle[entryIndex];\n        if (!title) {\n            title = `Unexpected entryIndex ${entryIndex}`;\n            console.error(title);\n        }\n        return title;\n    }\n    textColor(index) {\n        const event = this.entryData[index];\n        if (!TimelineFlameChartDataProvider.timelineEntryIsTraceEvent(event)) {\n            return FlameChartStyle.textColor;\n        }\n        return Utils.IgnoreList.isIgnoreListedEntry(event) ? '#888' : FlameChartStyle.textColor;\n    }\n    entryFont(_index) {\n        return this.#font;\n    }\n    // resetCompatibilityTracksAppender boolean set to false does not recreate the thread appenders\n    reset(resetCompatibilityTracksAppender = true) {\n        this.currentLevel = 0;\n        this.entryData = [];\n        this.entryTypeByLevel = [];\n        this.entryIndexToTitle = [];\n        this.#eventIndexByEvent = new Map();\n        if (resetCompatibilityTracksAppender) {\n            this.compatibilityTracksAppender?.reset();\n            this.compatibilityTracksAppender = null;\n            this.timelineDataInternal = null;\n        }\n        else if (!resetCompatibilityTracksAppender && this.timelineDataInternal) {\n            this.compatibilityTracksAppender?.setFlameChartDataAndEntryData(this.timelineDataInternal, this.entryData, this.entryTypeByLevel);\n            this.compatibilityTracksAppender?.threadAppenders().forEach(threadAppender => threadAppender.setHeaderAppended(false));\n        }\n        ExtensionDataGatherer.removeInstance();\n    }\n    maxStackDepth() {\n        return this.currentLevel;\n    }\n    /**\n     * Builds the flame chart data using the tracks appender (which use\n     * the new trace engine) and the legacy code paths present in this\n     * file. The result built data is cached and returned.\n     */\n    timelineData(rebuild = false) {\n        if (this.timelineDataInternal && this.timelineDataInternal.entryLevels.length !== 0 && !rebuild) {\n            // The flame chart data is built already, so return the cached\n            // data.\n            return this.timelineDataInternal;\n        }\n        this.timelineDataInternal = PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n        if (rebuild) {\n            this.reset(/* resetCompatibilityTracksAppender= */ false);\n        }\n        this.currentLevel = 0;\n        if (this.parsedTrace) {\n            this.compatibilityTracksAppender = this.compatibilityTracksAppenderInstance();\n            if (this.parsedTrace.Meta.traceIsGeneric) {\n                this.#processGenericTrace();\n            }\n            else {\n                this.#processInspectorTrace();\n            }\n        }\n        return this.timelineDataInternal;\n    }\n    /**\n     * Register the groups (aka tracks) with the VisualElements framework so\n     * later on we can log when an entry inside this group is selected.\n     */\n    #processGenericTrace() {\n        if (!this.compatibilityTracksAppender) {\n            return;\n        }\n        const appendersByProcess = this.compatibilityTracksAppender.allThreadAppendersByProcess();\n        for (const [pid, threadAppenders] of appendersByProcess) {\n            const processGroupStyle = this.buildGroupStyle({ shareHeaderLine: false });\n            const processName = this.parsedTrace?.Meta.processNames.get(pid)?.args.name || 'Process';\n            this.appendHeader(`${processName} (${pid})`, processGroupStyle, true, false);\n            for (const appender of threadAppenders) {\n                appender.setHeaderNestingLevel(1);\n                this.currentLevel = appender.appendTrackAtLevel(this.currentLevel);\n            }\n        }\n    }\n    #processInspectorTrace() {\n        if (!this.isCpuProfile) {\n            // CPU Profiles do not have frames and screenshots.\n            this.#appendFramesAndScreenshotsTrack();\n        }\n        const weight = (track) => {\n            switch (track.appenderName) {\n                case 'Animations':\n                    return 0;\n                case 'Timings':\n                    return 1;\n                case 'Interactions':\n                    return 2;\n                case 'LayoutShifts':\n                    return 3;\n                case 'Extension':\n                    return 4;\n                case 'Thread':\n                    return 5;\n                case 'ServerTimings':\n                    return 6;\n                case 'GPU':\n                    return 7;\n                case 'Thread_AuctionWorklet':\n                    return 8;\n                default:\n                    return 9;\n            }\n        };\n        const allTrackAppenders = this.compatibilityTracksAppender ? this.compatibilityTracksAppender.allVisibleTrackAppenders() : [];\n        allTrackAppenders.sort((a, b) => weight(a) - weight(b));\n        for (const appender of allTrackAppenders) {\n            if (!this.parsedTrace) {\n                continue;\n            }\n            this.currentLevel = appender.appendTrackAtLevel(this.currentLevel);\n            // If there is not a selected group, we want to default to selecting the\n            // main thread track. Therefore in this check we look to see if the\n            // current appender is a ThreadAppender and represnets the Main Thread.\n            // If it is, we mark the group as selected.\n            if (this.timelineDataInternal && !this.timelineDataInternal.selectedGroup) {\n                if (appender instanceof ThreadAppender &&\n                    (appender.threadType === \"MAIN_THREAD\" /* Trace.Handlers.Threads.ThreadType.MAIN_THREAD */ ||\n                        appender.threadType === \"CPU_PROFILE\" /* Trace.Handlers.Threads.ThreadType.CPU_PROFILE */)) {\n                    const group = this.compatibilityTracksAppender?.groupForAppender(appender);\n                    if (group) {\n                        this.timelineDataInternal.selectedGroup = group;\n                    }\n                }\n            }\n        }\n        if (this.timelineDataInternal && this.timelineDataInternal.selectedGroup) {\n            this.timelineDataInternal.selectedGroup.expanded = true;\n        }\n    }\n    minimumBoundary() {\n        return this.minimumBoundaryInternal;\n    }\n    totalTime() {\n        return this.timeSpan;\n    }\n    static timelineEntryIsTraceEvent(entry) {\n        return entry instanceof Trace.Handlers.ModelHandlers.Frames.TimelineFrame === false;\n    }\n    search(visibleWindow, filter) {\n        const results = [];\n        this.timelineData();\n        for (let i = 0; i < this.entryData.length; ++i) {\n            const entry = this.entryData[i];\n            if (!entry) {\n                continue;\n            }\n            if (!TimelineFlameChartDataProvider.timelineEntryIsTraceEvent(entry)) {\n                // We only search for events, not for frames, hence this early exit.\n                continue;\n            }\n            if (Trace.Types.Events.isScreenshot(entry)) {\n                // Screenshots are represented as trace events, but you can't search for them, so skip.\n                continue;\n            }\n            if (!Trace.Helpers.Timing.eventIsInBounds(entry, visibleWindow)) {\n                continue;\n            }\n            if (filter.accept(entry, this.parsedTrace || undefined)) {\n                const startTimeMilli = Trace.Helpers.Timing.microSecondsToMilliseconds(entry.ts);\n                results.push({ index: i, startTimeMilli, provider: 'main' });\n            }\n        }\n        return results;\n    }\n    getEntryTypeForLevel(level) {\n        return this.entryTypeByLevel[level];\n    }\n    /**\n     * The frames and screenshots track is special cased because it is rendered\n     * differently to the rest of the tracks and not as a series of events. This\n     * is why it is not done via the appender system; we track frames &\n     * screenshots as a different EntryType to the TrackAppender entries,\n     * because then when it comes to drawing we can decorate them differently.\n     **/\n    #appendFramesAndScreenshotsTrack() {\n        if (!this.parsedTrace) {\n            return;\n        }\n        const filmStrip = Trace.Extras.FilmStrip.fromParsedTrace(this.parsedTrace);\n        const hasScreenshots = filmStrip.frames.length > 0;\n        this.framesHeader.collapsible = hasScreenshots;\n        const expanded = Root.Runtime.Runtime.queryParam('flamechart-force-expand') === 'frames';\n        this.appendHeader(i18nString(UIStrings.frames), this.framesHeader, false /* selectable */, expanded);\n        this.entryTypeByLevel[this.currentLevel] = \"Frame\" /* EntryType.FRAME */;\n        for (const frame of this.parsedTrace.Frames.frames) {\n            this.#appendNewEngineFrame(frame);\n        }\n        ++this.currentLevel;\n        if (!hasScreenshots) {\n            return;\n        }\n        this.#appendScreenshots(filmStrip);\n    }\n    #appendScreenshots(filmStrip) {\n        if (!this.timelineDataInternal || !this.parsedTrace) {\n            return;\n        }\n        this.appendHeader('', this.screenshotsHeader, false /* selectable */);\n        this.entryTypeByLevel[this.currentLevel] = \"Screenshot\" /* EntryType.SCREENSHOT */;\n        let prevTimestamp = undefined;\n        for (const filmStripFrame of filmStrip.frames) {\n            const screenshotTimeInMilliSeconds = Trace.Helpers.Timing.microSecondsToMilliseconds(filmStripFrame.screenshotEvent.ts);\n            this.entryData.push(filmStripFrame.screenshotEvent);\n            this.timelineDataInternal.entryLevels.push(this.currentLevel);\n            this.timelineDataInternal.entryStartTimes.push(screenshotTimeInMilliSeconds);\n            if (prevTimestamp) {\n                this.timelineDataInternal.entryTotalTimes.push(screenshotTimeInMilliSeconds - prevTimestamp);\n            }\n            prevTimestamp = screenshotTimeInMilliSeconds;\n        }\n        if (filmStrip.frames.length && prevTimestamp !== undefined) {\n            const maxRecordTimeMillis = Trace.Helpers.Timing.traceWindowMilliSeconds(this.parsedTrace.Meta.traceBounds).max;\n            // Set the total time of the final screenshot so it takes up the remainder of the trace.\n            this.timelineDataInternal.entryTotalTimes.push(maxRecordTimeMillis - prevTimestamp);\n        }\n        ++this.currentLevel;\n    }\n    #entryTypeForIndex(entryIndex) {\n        const level = this.timelineData().entryLevels[entryIndex];\n        return this.entryTypeByLevel[level];\n    }\n    prepareHighlightedEntryInfo(entryIndex) {\n        let time = '';\n        let title;\n        let warningElements = [];\n        let nameSpanTimelineInfoTime = 'timeline-info-time';\n        const additionalContent = [];\n        const entryType = this.#entryTypeForIndex(entryIndex);\n        if (entryType === \"TrackAppender\" /* EntryType.TRACK_APPENDER */) {\n            if (!this.compatibilityTracksAppender) {\n                return null;\n            }\n            const event = this.entryData[entryIndex];\n            const timelineData = this.timelineDataInternal;\n            const eventLevel = timelineData.entryLevels[entryIndex];\n            const highlightedEntryInfo = this.compatibilityTracksAppender.highlightedEntryInfo(event, eventLevel);\n            title = highlightedEntryInfo.title;\n            time = highlightedEntryInfo.formattedTime;\n            warningElements = highlightedEntryInfo.warningElements || warningElements;\n            if (highlightedEntryInfo.additionalElement) {\n                additionalContent.push(highlightedEntryInfo.additionalElement);\n            }\n        }\n        else if (entryType === \"Frame\" /* EntryType.FRAME */) {\n            const frame = this.entryData[entryIndex];\n            time =\n                i18n.TimeUtilities.preciseMillisToString(Trace.Helpers.Timing.microSecondsToMilliseconds(frame.duration), 1);\n            if (frame.idle) {\n                title = i18nString(UIStrings.idleFrame);\n            }\n            else if (frame.dropped) {\n                if (frame.isPartial) {\n                    title = i18nString(UIStrings.partiallyPresentedFrame);\n                }\n                else {\n                    title = i18nString(UIStrings.droppedFrame);\n                }\n                nameSpanTimelineInfoTime = 'timeline-info-warning';\n            }\n            else {\n                title = i18nString(UIStrings.frame);\n            }\n        }\n        else {\n            return null;\n        }\n        const element = document.createElement('div');\n        const root = UI.UIUtils.createShadowRootWithCoreStyles(element, {\n            cssFile: [timelineFlamechartPopoverStyles],\n            delegatesFocus: undefined,\n        });\n        const contents = root.createChild('div', 'timeline-flamechart-popover');\n        contents.createChild('span', nameSpanTimelineInfoTime).textContent = time;\n        contents.createChild('span', 'timeline-info-title').textContent = title;\n        if (warningElements) {\n            for (const warningElement of warningElements) {\n                warningElement.classList.add('timeline-info-warning');\n                contents.appendChild(warningElement);\n            }\n        }\n        for (const elem of additionalContent) {\n            contents.appendChild(elem);\n        }\n        return element;\n    }\n    prepareHighlightedHiddenEntriesArrowInfo(entryIndex) {\n        const element = document.createElement('div');\n        const root = UI.UIUtils.createShadowRootWithCoreStyles(element, {\n            cssFile: [timelineFlamechartPopoverStyles],\n            delegatesFocus: undefined,\n        });\n        const entry = this.entryData[entryIndex];\n        const hiddenEntriesAmount = ModificationsManager.activeManager()?.getEntriesFilter().findHiddenDescendantsAmount(entry);\n        if (!hiddenEntriesAmount) {\n            return null;\n        }\n        const contents = root.createChild('div', 'timeline-flamechart-popover');\n        contents.createChild('span', 'timeline-info-title').textContent = hiddenEntriesAmount + ' hidden';\n        return element;\n    }\n    getDrawOverride(entryIndex) {\n        const entryType = this.#entryTypeForIndex(entryIndex);\n        if (entryType !== \"TrackAppender\" /* EntryType.TRACK_APPENDER */) {\n            return;\n        }\n        const timelineData = this.timelineDataInternal;\n        const eventLevel = timelineData.entryLevels[entryIndex];\n        const event = this.entryData[entryIndex];\n        return this.compatibilityTracksAppender?.getDrawOverride(event, eventLevel);\n    }\n    #entryColorForFrame(entryIndex) {\n        const frame = this.entryData[entryIndex];\n        if (frame.idle) {\n            return 'white';\n        }\n        if (frame.dropped) {\n            if (frame.isPartial) {\n                // For partially presented frame boxes, paint a yellow background with\n                // a sparse white dashed-line pattern overlay.\n                return '#f0e442';\n            }\n            // For dropped frame boxes, paint a red background with a dense white\n            // solid-line pattern overlay.\n            return '#f08080';\n        }\n        return '#d7f0d1';\n    }\n    entryColor(entryIndex) {\n        const entryType = this.#entryTypeForIndex(entryIndex);\n        if (entryType === \"Frame\" /* EntryType.FRAME */) {\n            return this.#entryColorForFrame(entryIndex);\n        }\n        if (entryType === \"TrackAppender\" /* EntryType.TRACK_APPENDER */) {\n            const timelineData = this.timelineDataInternal;\n            const eventLevel = timelineData.entryLevels[entryIndex];\n            const event = this.entryData[entryIndex];\n            return this.compatibilityTracksAppender?.colorForEvent(event, eventLevel) || '';\n        }\n        return '';\n    }\n    preparePatternCanvas() {\n        // Set the candy stripe pattern to 17px so it repeats well.\n        const size = 17;\n        this.droppedFramePatternCanvas.width = size;\n        this.droppedFramePatternCanvas.height = size;\n        this.partialFramePatternCanvas.width = size;\n        this.partialFramePatternCanvas.height = size;\n        const ctx = this.droppedFramePatternCanvas.getContext('2d');\n        if (ctx) {\n            // Make a dense solid-line pattern.\n            ctx.translate(size * 0.5, size * 0.5);\n            ctx.rotate(Math.PI * 0.25);\n            ctx.translate(-size * 0.5, -size * 0.5);\n            ctx.fillStyle = 'rgb(255, 255, 255)';\n            for (let x = -size; x < size * 2; x += 3) {\n                ctx.fillRect(x, -size, 1, size * 3);\n            }\n        }\n        const ctx2 = this.partialFramePatternCanvas.getContext('2d');\n        if (ctx2) {\n            // Make a sparse dashed-line pattern.\n            ctx2.strokeStyle = 'rgb(255, 255, 255)';\n            ctx2.lineWidth = 2;\n            ctx2.beginPath();\n            ctx2.moveTo(17, 0);\n            ctx2.lineTo(10, 7);\n            ctx2.moveTo(8, 9);\n            ctx2.lineTo(2, 15);\n            ctx2.stroke();\n        }\n    }\n    drawFrame(entryIndex, context, text, barX, barY, barWidth, barHeight) {\n        const hPadding = 1;\n        const frame = this.entryData[entryIndex];\n        barX += hPadding;\n        barWidth -= 2 * hPadding;\n        context.fillStyle = this.entryColor(entryIndex);\n        if (frame.dropped) {\n            if (frame.isPartial) {\n                // For partially presented frame boxes, paint a yellow background with\n                // a sparse white dashed-line pattern overlay.\n                context.fillRect(barX, barY, barWidth, barHeight);\n                const overlay = context.createPattern(this.partialFramePatternCanvas, 'repeat');\n                context.fillStyle = overlay || context.fillStyle;\n            }\n            else {\n                // For dropped frame boxes, paint a red background with a dense white\n                // solid-line pattern overlay.\n                context.fillRect(barX, barY, barWidth, barHeight);\n                const overlay = context.createPattern(this.droppedFramePatternCanvas, 'repeat');\n                context.fillStyle = overlay || context.fillStyle;\n            }\n        }\n        context.fillRect(barX, barY, barWidth, barHeight);\n        const frameDurationText = i18n.TimeUtilities.preciseMillisToString(Trace.Helpers.Timing.microSecondsToMilliseconds(frame.duration), 1);\n        const textWidth = context.measureText(frameDurationText).width;\n        if (textWidth <= barWidth) {\n            context.fillStyle = this.textColor(entryIndex);\n            context.fillText(frameDurationText, barX + (barWidth - textWidth) / 2, barY + barHeight - 4);\n        }\n    }\n    async drawScreenshot(entryIndex, context, barX, barY, barWidth, barHeight) {\n        const screenshot = this.entryData[entryIndex];\n        const image = Utils.ImageCache.getOrQueue(screenshot);\n        if (!image) {\n            return;\n        }\n        const imageX = barX + 1;\n        const imageY = barY + 1;\n        const imageHeight = barHeight - 2;\n        const scale = imageHeight / image.naturalHeight;\n        const imageWidth = Math.floor(image.naturalWidth * scale);\n        context.save();\n        context.beginPath();\n        context.rect(barX, barY, barWidth, barHeight);\n        context.clip();\n        context.drawImage(image, imageX, imageY, imageWidth, imageHeight);\n        context.strokeStyle = '#ccc';\n        context.strokeRect(imageX - 0.5, imageY - 0.5, Math.min(barWidth - 1, imageWidth + 1), imageHeight);\n        context.restore();\n    }\n    decorateEntry(entryIndex, context, text, barX, barY, barWidth, barHeight, unclippedBarX, timeToPixelRatio) {\n        const entryType = this.#entryTypeForIndex(entryIndex);\n        if (entryType === \"Frame\" /* EntryType.FRAME */) {\n            this.drawFrame(entryIndex, context, text, barX, barY, barWidth, barHeight);\n            return true;\n        }\n        if (entryType === \"Screenshot\" /* EntryType.SCREENSHOT */) {\n            void this.drawScreenshot(entryIndex, context, barX, barY, barWidth, barHeight);\n            return true;\n        }\n        if (entryType === \"TrackAppender\" /* EntryType.TRACK_APPENDER */) {\n            const entry = this.entryData[entryIndex];\n            if (Trace.Types.Events.isSyntheticInteraction(entry)) {\n                this.#drawInteractionEventWithWhiskers(context, entryIndex, text, entry, barX, barY, unclippedBarX, barWidth, barHeight, timeToPixelRatio);\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Draws the left and right whiskers around an interaction in the timeline.\n     * @param context - the canvas that will be drawn onto\n     * @param entryIndex\n     * @param entryTitle - the title of the entry\n     * @param entry - the entry itself\n     * @param barX - the starting X pixel position of the bar representing this event. This is clipped: if the bar is off the left side of the screen, this value will be 0\n     * @param barY - the starting Y pixel position of the bar representing this event.\n     * @param unclippedBarXStartPixel - the starting X pixel position of the bar representing this event, not clipped. This means if the bar is off the left of the screen this will be a negative number.\n     * @param barWidth - the width of the full bar in pixels\n     * @param barHeight - the height of the full bar in pixels\n     * @param timeToPixelRatio - the ratio required to convert a millisecond time to a pixel value.\n     **/\n    #drawInteractionEventWithWhiskers(context, entryIndex, entryTitle, entry, barX, barY, unclippedBarXStartPixel, barWidth, barHeight, timeToPixelRatio) {\n        /**\n         * An interaction is drawn with whiskers as so:\n         * |----------[=======]-------------|\n         * => The left whisker is the event's start time (event.ts)\n         * => The box start is the event's processingStart time\n         * => The box end is the event's processingEnd time\n         * => The right whisker is the event's end time (event.ts + event.dur)\n         *\n         * When we draw the event in the InteractionsAppender, we draw a huge box\n         * that spans the entire of the above. So here we need to draw over the\n         * rectangle that is outside of {processingStart, processingEnd} and\n         * replace it with the whiskers.\n         * TODO(crbug.com/1495248): rework how we draw whiskers to avoid this inefficiency\n         */\n        const beginTime = Trace.Helpers.Timing.microSecondsToMilliseconds(entry.ts);\n        const entireBarEndXPixel = barX + barWidth;\n        function timeToPixel(time) {\n            const timeMilli = Trace.Helpers.Timing.microSecondsToMilliseconds(time);\n            return Math.floor(unclippedBarXStartPixel + (timeMilli - beginTime) * timeToPixelRatio);\n        }\n        context.save();\n        // Clear portions of initial rect to prepare for the ticks.\n        context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container');\n        let desiredBoxStartX = timeToPixel(entry.processingStart);\n        const desiredBoxEndX = timeToPixel(entry.processingEnd);\n        // If the entry has no processing duration, ensure the box is 1px wide so at least it is visible.\n        if (entry.processingEnd - entry.processingStart === 0) {\n            desiredBoxStartX -= 1;\n        }\n        context.fillRect(barX, barY - 0.5, desiredBoxStartX - barX, barHeight);\n        context.fillRect(desiredBoxEndX, barY - 0.5, entireBarEndXPixel - desiredBoxEndX, barHeight);\n        // Draws left and right whiskers\n        function drawTick(begin, end, y) {\n            const tickHeightPx = 6;\n            context.moveTo(begin, y - tickHeightPx / 2);\n            context.lineTo(begin, y + tickHeightPx / 2);\n            context.moveTo(begin, y);\n            context.lineTo(end, y);\n        }\n        // The left whisker starts at the enty timestamp, and continues until the start of the box (processingStart).\n        const leftWhiskerX = timeToPixel(entry.ts);\n        // The right whisker ends at (entry.ts + entry.dur). We draw the line from the end of the box (processingEnd).\n        const rightWhiskerX = timeToPixel(Trace.Types.Timing.MicroSeconds(entry.ts + entry.dur));\n        context.beginPath();\n        context.lineWidth = 1;\n        context.strokeStyle = '#ccc';\n        const lineY = Math.floor(barY + barHeight / 2) + 0.5;\n        const leftTick = leftWhiskerX + 0.5;\n        const rightTick = rightWhiskerX - 0.5;\n        drawTick(leftTick, desiredBoxStartX, lineY);\n        drawTick(rightTick, desiredBoxEndX, lineY);\n        context.stroke();\n        if (entryTitle) {\n            // BarX will be set to 0 if the start of the box if off the screen to the\n            // left. If this happens, the desiredBoxStartX will be negative. In that\n            // case, we fallback to the BarX. This ensures that even if the box\n            // starts off-screen, we draw the text at the first visible on screen\n            // pixels, so the user can still see the event's title.\n            const textStartX = desiredBoxStartX > 0 ? desiredBoxStartX : barX;\n            context.font = this.#font;\n            const textWidth = UI.UIUtils.measureTextWidth(context, entryTitle);\n            // These numbers are duplicated from FlameChart.ts.\n            const textPadding = 5;\n            const textBaseline = 5;\n            // Only draw the text if it can fit in the amount of box that is visible.\n            if (textWidth <= desiredBoxEndX - textStartX + textPadding) {\n                context.fillStyle = this.textColor(entryIndex);\n                context.fillText(entryTitle, textStartX + textPadding, barY + barHeight - textBaseline);\n            }\n        }\n        context.restore();\n    }\n    forceDecoration(entryIndex) {\n        const entryType = this.#entryTypeForIndex(entryIndex);\n        if (entryType === \"Frame\" /* EntryType.FRAME */) {\n            return true;\n        }\n        if (entryType === \"Screenshot\" /* EntryType.SCREENSHOT */) {\n            return true;\n        }\n        const event = this.entryData[entryIndex];\n        if (Trace.Types.Events.isSyntheticInteraction(event)) {\n            // We draw interactions with whiskers, which are done via the\n            // decorateEntry() method, hence we always want to force these to be\n            // decorated.\n            return true;\n        }\n        return Boolean(this.parsedTrace?.Warnings.perEvent.get(event));\n    }\n    appendHeader(title, style, selectable, expanded) {\n        const group = { startLevel: this.currentLevel, name: title, style, selectable, expanded };\n        this.timelineDataInternal.groups.push(group);\n        return group;\n    }\n    #appendNewEngineFrame(frame) {\n        const index = this.entryData.length;\n        this.entryData.push(frame);\n        const durationMilliseconds = Trace.Helpers.Timing.microSecondsToMilliseconds(frame.duration);\n        this.entryIndexToTitle[index] = i18n.TimeUtilities.millisToString(durationMilliseconds, true);\n        if (!this.timelineDataInternal) {\n            return;\n        }\n        this.timelineDataInternal.entryLevels[index] = this.currentLevel;\n        this.timelineDataInternal.entryTotalTimes[index] = durationMilliseconds;\n        this.timelineDataInternal.entryStartTimes[index] = Trace.Helpers.Timing.microSecondsToMilliseconds(frame.startTime);\n    }\n    createSelection(entryIndex) {\n        const entryType = this.#entryTypeForIndex(entryIndex);\n        let timelineSelection = null;\n        const entry = this.entryData[entryIndex];\n        if (entry && TimelineFlameChartDataProvider.timelineEntryIsTraceEvent(entry)) {\n            timelineSelection = TimelineSelection.fromTraceEvent(entry);\n        }\n        else if (entryType === \"Frame\" /* EntryType.FRAME */) {\n            timelineSelection = TimelineSelection.fromFrame(this.entryData[entryIndex]);\n        }\n        if (timelineSelection) {\n            this.lastSelection = new Selection(timelineSelection, entryIndex);\n        }\n        if (UI.ActionRegistry.ActionRegistry.instance().hasAction('drjones.performance-panel-context')) {\n            const traceEntryNodeForAI = this.getTraceEntryTreeForAIFromEntryIndex(entryIndex);\n            UI.Context.Context.instance().setFlavor(Trace.Helpers.TreeHelpers.TraceEntryNodeForAI, traceEntryNodeForAI);\n        }\n        return timelineSelection;\n    }\n    formatValue(value, precision) {\n        return i18n.TimeUtilities.preciseMillisToString(value, precision);\n    }\n    groupForEvent(entryIndex) {\n        if (!this.compatibilityTracksAppender) {\n            return null;\n        }\n        const level = this.timelineDataInternal?.entryLevels[entryIndex] ?? null;\n        if (level === null) {\n            return null;\n        }\n        const groupForLevel = this.compatibilityTracksAppender.groupForLevel(level);\n        if (!groupForLevel) {\n            return null;\n        }\n        return groupForLevel;\n    }\n    canJumpToEntry(_entryIndex) {\n        return false;\n    }\n    entryIndexForSelection(selection) {\n        if (!selection || TimelineSelection.isRangeSelection(selection.object) ||\n            TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selection.object)) {\n            return -1;\n        }\n        if (this.lastSelection && this.lastSelection.timelineSelection.object === selection.object) {\n            return this.lastSelection.entryIndex;\n        }\n        // If the index is -1 and the selection is a TraceEvent, it might be\n        // the case that this Entry is hidden by the Context Menu action.\n        // Try revealing the entry and getting the index again.\n        if (this.entryData.indexOf(selection.object) === -1 && TimelineSelection.isTraceEventSelection(selection.object)) {\n            if (this.timelineDataInternal?.selectedGroup) {\n                ModificationsManager.activeManager()?.getEntriesFilter().revealEntry(selection.object);\n                this.timelineData(true);\n            }\n        }\n        const index = this.entryData.indexOf(selection.object);\n        if (index !== -1) {\n            this.lastSelection = new Selection(selection, index);\n        }\n        return index;\n    }\n    /**\n     * Return the index for the given entry. Note that this method assumes that\n     * timelineData() has been generated. If it hasn't, this method will return\n     * null.\n     */\n    indexForEvent(targetEvent) {\n        // Gets the index for the given event by walking through the array of entryData.\n        // This may seem inefficient - but we have seen that by building up large\n        // maps keyed by trace events that this has a significant impact on the\n        // performance of the panel.\n        // Therefore, we strike a middle ground: look up the event the first time,\n        // but then cache the result.\n        const fromCache = this.#eventIndexByEvent.get(targetEvent);\n        if (typeof fromCache === 'number') {\n            return fromCache;\n        }\n        const index = this.entryData.indexOf(targetEvent);\n        const result = index > -1 ? index : null;\n        this.#eventIndexByEvent.set(targetEvent, result);\n        return result;\n    }\n    /**\n     * Build the data for initiators and initiated entries.\n     * @param entryIndex\n     * @returns if we should re-render the flame chart (canvas)\n     */\n    buildFlowForInitiator(entryIndex) {\n        if (!this.parsedTrace) {\n            return false;\n        }\n        if (!this.timelineDataInternal) {\n            return false;\n        }\n        if (this.lastInitiatorEntry === entryIndex) {\n            if (this.lastInitiatorsData) {\n                this.timelineDataInternal.initiatorsData = this.lastInitiatorsData;\n            }\n            return false;\n        }\n        if (!this.compatibilityTracksAppender) {\n            return false;\n        }\n        // Remove all previously assigned decorations indicating that the flow event entries are hidden\n        const previousInitiatorsDataLength = this.timelineDataInternal.initiatorsData.length;\n        // |entryIndex| equals -1 means there is no entry selected, just clear the\n        // initiator cache if there is any previous arrow and return true to\n        // re-render.\n        if (entryIndex === -1) {\n            this.lastInitiatorEntry = entryIndex;\n            if (previousInitiatorsDataLength === 0) {\n                // This means there is no arrow before, so we don't need to re-render.\n                return false;\n            }\n            // Reset to clear any previous arrows from the last event.\n            this.timelineDataInternal.resetFlowData();\n            return true;\n        }\n        const entryType = this.#entryTypeForIndex(entryIndex);\n        if (entryType !== \"TrackAppender\" /* EntryType.TRACK_APPENDER */) {\n            return false;\n        }\n        const event = this.entryData[entryIndex];\n        // Reset to clear any previous arrows from the last event.\n        this.timelineDataInternal.resetFlowData();\n        this.lastInitiatorEntry = entryIndex;\n        const hiddenEvents = ModificationsManager.activeManager()?.getEntriesFilter().invisibleEntries() ?? [];\n        const expandableEntries = ModificationsManager.activeManager()?.getEntriesFilter().expandableEntries() ?? [];\n        const initiatorsData = initiatorsDataToDraw(this.parsedTrace, event, hiddenEvents, expandableEntries);\n        // This means there is no change for arrows.\n        if (previousInitiatorsDataLength === 0 && initiatorsData.length === 0) {\n            return false;\n        }\n        for (const initiatorData of initiatorsData) {\n            const eventIndex = this.indexForEvent(initiatorData.event);\n            const initiatorIndex = this.indexForEvent(initiatorData.initiator);\n            if (eventIndex === null || initiatorIndex === null) {\n                continue;\n            }\n            this.timelineDataInternal.initiatorsData.push({\n                initiatorIndex,\n                eventIndex,\n                isInitiatorHidden: initiatorData.isInitiatorHidden,\n                isEntryHidden: initiatorData.isEntryHidden,\n            });\n        }\n        this.lastInitiatorsData = this.timelineDataInternal.initiatorsData;\n        return true;\n    }\n    eventByIndex(entryIndex) {\n        if (entryIndex < 0) {\n            return null;\n        }\n        const entryType = this.#entryTypeForIndex(entryIndex);\n        if (entryType === \"TrackAppender\" /* EntryType.TRACK_APPENDER */) {\n            return this.entryData[entryIndex];\n        }\n        if (entryType === \"Frame\" /* EntryType.FRAME */) {\n            return this.entryData[entryIndex];\n        }\n        return null;\n    }\n}\nexport const InstantEventVisibleDurationMs = Trace.Types.Timing.MilliSeconds(0.001);\n//# sourceMappingURL=TimelineFlameChartDataProvider.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport { addDecorationToEvent, buildGroupStyle, buildTrackHeader, getEventLevel, } from './AppenderUtils.js';\nimport * as Components from './components/components.js';\nimport { InstantEventVisibleDurationMs } from './TimelineFlameChartDataProvider.js';\nconst UIStrings = {\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    network: 'Network',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/NetworkTrackAppender.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class NetworkTrackAppender {\n    appenderName = 'Network';\n    #flameChartData;\n    webSocketIdToLevel = new Map();\n    #events = [];\n    #font;\n    #group;\n    constructor(flameChartData, events) {\n        this.#flameChartData = flameChartData;\n        this.#events = events;\n        this.#font = `${PerfUI.Font.DEFAULT_FONT_SIZE} ${PerfUI.Font.getFontFamilyForCanvas()}`;\n        ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, () => {\n            if (this.#group) {\n                // We only need to update the color here, because FlameChart will call `scheduleUpdate()` when theme is changed.\n                this.#group.style.color = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-on-surface');\n                this.#group.style.backgroundColor =\n                    ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container');\n            }\n        });\n    }\n    group() {\n        return this.#group;\n    }\n    font() {\n        return this.#font;\n    }\n    /**\n     * Appends into the flame chart data the data corresponding to the\n     * Network track.\n     * @param trackStartLevel the horizontal level of the flame chart events where\n     * the track's events will start being appended.\n     * @param expanded wether the track should be rendered expanded.\n     * @returns the first available level to append more data after having\n     * appended the track's events.\n     */\n    appendTrackAtLevel(trackStartLevel, expanded) {\n        if (this.#events.length === 0) {\n            return trackStartLevel;\n        }\n        this.#appendTrackHeaderAtLevel(trackStartLevel, expanded);\n        return this.#appendEventsAtLevel(this.#events, trackStartLevel);\n    }\n    /**\n     * Adds into the flame chart data the header corresponding to the\n     * Network track. A header is added in the shape of a group in the\n     * flame chart data. A group has a predefined style and a reference\n     * to the definition of the legacy track (which should be removed\n     * in the future).\n     * @param currentLevel the flame chart level at which the header is\n     * appended.\n     * @param expanded wether the track should be rendered expanded.\n     */\n    #appendTrackHeaderAtLevel(_currentLevel, expanded) {\n        const style = buildGroupStyle({\n            shareHeaderLine: false,\n            useFirstLineForOverview: false,\n            useDecoratorsForOverview: true,\n        });\n        this.#group = buildTrackHeader(\"network\" /* VisualLoggingTrackName.NETWORK */, 0, i18nString(UIStrings.network), style, /* selectable= */ true, expanded, \n        /* showStackContextMenu= */ false);\n        this.#flameChartData.groups.push(this.#group);\n    }\n    /**\n     * Adds into the flame chart data a list of trace events.\n     * @param events the trace events that will be appended to the flame chart.\n     * The events should be taken straight from the trace handlers. The handlers\n     * should sort the events by start time, and the parent event is before the\n     * child.\n     * @param trackStartLevel the flame chart level from which the events will\n     * be appended.\n     * @returns the next level after the last occupied by the appended these\n     * trace events (the first available level to append next track).\n     */\n    #appendEventsAtLevel(events, trackStartLevel) {\n        // Appending everything to the same level isn't \"correct\", but filterTimelineDataBetweenTimes() will handle that\n        // before anything is rendered.\n        for (let i = 0; i < events.length; ++i) {\n            const event = events[i];\n            this.#appendEventAtLevel(event, trackStartLevel);\n            // Decorate render blocking\n            if (Trace.Types.Events.isSyntheticNetworkRequest(event) &&\n                Trace.Helpers.Network.isSyntheticNetworkRequestEventRenderBlocking(event)) {\n                addDecorationToEvent(this.#flameChartData, i, {\n                    type: \"WARNING_TRIANGLE\" /* PerfUI.FlameChart.FlameChartDecorationType.WARNING_TRIANGLE */,\n                    customStartTime: event.args.data.syntheticData.sendStartTime,\n                    customEndTime: event.args.data.syntheticData.finishTime,\n                });\n            }\n        }\n        return this.relayoutEntriesWithinBounds(events, Trace.Types.Timing.MilliSeconds(-Infinity), Trace.Types.Timing.MilliSeconds(Infinity));\n    }\n    /**\n     * Adds an event to the flame chart data at a defined level.\n     * @param event the event to be appended,\n     * @param level the level to append the event,\n     * @returns the index of the event in all events to be rendered in the flamechart.\n     */\n    #appendEventAtLevel(event, level) {\n        const index = this.#flameChartData.entryLevels.length;\n        this.#flameChartData.entryLevels[index] = level;\n        this.#flameChartData.entryStartTimes[index] = Trace.Helpers.Timing.microSecondsToMilliseconds(event.ts);\n        const dur = event.dur || Trace.Helpers.Timing.millisecondsToMicroseconds(InstantEventVisibleDurationMs);\n        this.#flameChartData.entryTotalTimes[index] = Trace.Helpers.Timing.microSecondsToMilliseconds(dur);\n        return level;\n    }\n    /**\n     * Update the flame chart data.\n     * When users zoom in the flamechart, we only want to show them the network\n     * requests between minTime and maxTime. This function will append those\n     * invisible events to the last level, and hide them.\n     * @returns the number of levels used by this track\n     */\n    relayoutEntriesWithinBounds(events, minTime, maxTime) {\n        if (!this.#flameChartData || events.length === 0) {\n            return 0;\n        }\n        const lastTimestampByLevel = [];\n        this.webSocketIdToLevel = new Map();\n        let maxLevel = 0;\n        for (let i = 0; i < events.length; ++i) {\n            const event = events[i];\n            const beginTime = Trace.Helpers.Timing.microSecondsToMilliseconds(event.ts);\n            const dur = event.dur ? Trace.Helpers.Timing.microSecondsToMilliseconds(event.dur) : InstantEventVisibleDurationMs;\n            const endTime = beginTime + dur;\n            const isBetweenTimes = beginTime < maxTime && endTime > minTime;\n            // Exclude events outside the the specified timebounds\n            if (!isBetweenTimes) {\n                this.#flameChartData.entryLevels[i] = -1;\n                continue;\n            }\n            // Layout the entries by assigning levels.\n            let level;\n            if ('identifier' in event.args.data && Trace.Types.Events.isWebSocketEvent(event)) {\n                level = this.getWebSocketLevel(event, lastTimestampByLevel);\n            }\n            else {\n                level = getEventLevel(event, lastTimestampByLevel);\n            }\n            this.#flameChartData.entryLevels[i] = level;\n            maxLevel = Math.max(maxLevel, lastTimestampByLevel.length, level);\n        }\n        for (let i = 0; i < events.length; ++i) {\n            // -1 means this event is invisible.\n            if (this.#flameChartData.entryLevels[i] === -1) {\n                // The maxLevel is an invisible level.\n                this.#flameChartData.entryLevels[i] = maxLevel;\n            }\n        }\n        return maxLevel;\n    }\n    getWebSocketLevel(event, lastTimestampByLevel) {\n        const webSocketIdentifier = event.args.data.identifier;\n        let level;\n        if (this.webSocketIdToLevel.has(webSocketIdentifier)) {\n            // We're placing an instant event on top of its parent websocket\n            level = this.webSocketIdToLevel.get(webSocketIdentifier) || 0;\n        }\n        else {\n            // We're placing the parent websocket\n            level = getEventLevel(event, lastTimestampByLevel);\n            this.webSocketIdToLevel.set(webSocketIdentifier, level);\n        }\n        return level;\n    }\n    /*\n      ------------------------------------------------------------------------------------\n       The following methods  are invoked by the flame chart renderer to query features about\n       events on rendering.\n      ------------------------------------------------------------------------------------\n    */\n    /**\n     * Gets the color an event added by this appender should be rendered with.\n     */\n    colorForEvent(event) {\n        if (Trace.Types.Events.isSyntheticWebSocketConnection(event)) {\n            // the synthetic WebSocket events are not selectable, so we don't need to set the color.\n            return '';\n        }\n        if (Trace.Types.Events.isWebSocketTraceEvent(event)) {\n            return Components.Utils.colorForNetworkCategory(Components.Utils.NetworkCategory.JS);\n        }\n        if (!Trace.Types.Events.isSyntheticNetworkRequest(event)) {\n            throw new Error(`Unexpected Network Request: The event's type is '${event.name}'`);\n        }\n        return Components.Utils.colorForNetworkRequest(event);\n    }\n}\n//# sourceMappingURL=NetworkTrackAppender.js.map","// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport * as TimelineComponents from './components/components.js';\nimport { initiatorsDataToDrawForNetwork } from './Initiators.js';\nimport { ModificationsManager } from './ModificationsManager.js';\nimport { NetworkTrackAppender } from './NetworkTrackAppender.js';\nimport timelineFlamechartPopoverStyles from './timelineFlamechartPopover.css.js';\nimport { FlameChartStyle, Selection } from './TimelineFlameChartView.js';\nimport { TimelineSelection } from './TimelineSelection.js';\nimport * as TimelineUtils from './utils/utils.js';\nexport class TimelineFlameChartNetworkDataProvider {\n    #minimumBoundaryInternal;\n    #timeSpan;\n    #events;\n    #maxLevel;\n    #networkTrackAppender;\n    #timelineDataInternal;\n    #lastSelection;\n    #parsedTrace;\n    #eventIndexByEvent = new Map();\n    // -1 means no entry is selected.\n    #lastInitiatorEntry = -1;\n    #lastInitiatorsData = [];\n    constructor() {\n        this.#minimumBoundaryInternal = 0;\n        this.#timeSpan = 0;\n        this.#events = [];\n        this.#maxLevel = 0;\n        this.#networkTrackAppender = null;\n        this.#parsedTrace = null;\n    }\n    setModel(parsedTrace) {\n        this.#timelineDataInternal = null;\n        this.#events = [];\n        this.#parsedTrace = parsedTrace;\n        this.#eventIndexByEvent.clear();\n        if (this.#parsedTrace) {\n            this.setEvents(this.#parsedTrace);\n            this.#setTimingBoundsData(this.#parsedTrace);\n        }\n    }\n    setEvents(parsedTrace) {\n        if (parsedTrace.NetworkRequests.webSocket) {\n            parsedTrace.NetworkRequests.webSocket.forEach(webSocketData => {\n                if (webSocketData.syntheticConnection) {\n                    this.#events.push(webSocketData.syntheticConnection);\n                }\n                this.#events.push(...webSocketData.events);\n            });\n        }\n        if (parsedTrace.NetworkRequests.byTime) {\n            this.#events.push(...parsedTrace.NetworkRequests.byTime);\n        }\n    }\n    isEmpty() {\n        this.timelineData();\n        return !this.#events.length;\n    }\n    maxStackDepth() {\n        return this.#maxLevel;\n    }\n    hasTrackConfigurationMode() {\n        return false;\n    }\n    timelineData() {\n        if (this.#timelineDataInternal && this.#timelineDataInternal.entryLevels.length !== 0) {\n            // The flame chart data is built already, so return the cached data.\n            return this.#timelineDataInternal;\n        }\n        this.#timelineDataInternal = PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n        if (!this.#parsedTrace) {\n            return this.#timelineDataInternal;\n        }\n        if (!this.#events.length) {\n            this.setEvents(this.#parsedTrace);\n        }\n        this.#networkTrackAppender = new NetworkTrackAppender(this.#timelineDataInternal, this.#events);\n        this.#maxLevel = this.#networkTrackAppender.appendTrackAtLevel(0);\n        return this.#timelineDataInternal;\n    }\n    minimumBoundary() {\n        return this.#minimumBoundaryInternal;\n    }\n    totalTime() {\n        return this.#timeSpan;\n    }\n    setWindowTimes(startTime, endTime) {\n        this.#updateTimelineData(startTime, endTime);\n    }\n    createSelection(index) {\n        if (index === -1) {\n            return null;\n        }\n        const event = this.#events[index];\n        this.#lastSelection = new Selection(TimelineSelection.fromTraceEvent(event), index);\n        return this.#lastSelection.timelineSelection;\n    }\n    customizedContextMenu(event, eventIndex, _groupIndex) {\n        const networkRequest = this.eventByIndex(eventIndex);\n        if (!networkRequest || !Trace.Types.Events.isSyntheticNetworkRequest(networkRequest)) {\n            return;\n        }\n        const timelineNetworkRequest = TimelineUtils.NetworkRequest.createTimelineNetworkRequest(networkRequest);\n        const contextMenu = new UI.ContextMenu.ContextMenu(event, { useSoftMenu: true });\n        contextMenu.appendApplicableItems(timelineNetworkRequest);\n        return contextMenu;\n    }\n    indexForEvent(event) {\n        // In the NetworkDataProvider we will never be dealing with frames, but we need to satisfy the interface for a DataProvider.\n        if (event instanceof Trace.Handlers.ModelHandlers.Frames.TimelineFrame) {\n            return null;\n        }\n        if (!Trace.Types.Events.isNetworkTrackEntry(event)) {\n            return null;\n        }\n        const fromCache = this.#eventIndexByEvent.get(event);\n        // Cached value might be null, which is OK.\n        if (fromCache !== undefined) {\n            return fromCache;\n        }\n        const index = this.#events.indexOf(event);\n        const result = index > -1 ? index : null;\n        this.#eventIndexByEvent.set(event, result);\n        return result;\n    }\n    eventByIndex(entryIndex) {\n        return this.#events.at(entryIndex) ?? null;\n    }\n    entryHasAnnotations(entryIndex) {\n        const event = this.eventByIndex(entryIndex);\n        if (!event) {\n            return false;\n        }\n        const entryAnnotations = ModificationsManager.activeManager()?.annotationsForEntry(event);\n        return entryAnnotations !== undefined && entryAnnotations.length > 0;\n    }\n    deleteAnnotationsForEntry(entryIndex) {\n        const event = this.eventByIndex(entryIndex);\n        if (!event) {\n            return;\n        }\n        ModificationsManager.activeManager()?.deleteEntryAnnotations(event);\n    }\n    entryIndexForSelection(selection) {\n        if (!selection) {\n            return -1;\n        }\n        if (this.#lastSelection && this.#lastSelection.timelineSelection.object === selection.object) {\n            return this.#lastSelection.entryIndex;\n        }\n        if (!TimelineSelection.isNetworkEventSelection(selection.object)) {\n            return -1;\n        }\n        const index = this.#events.indexOf(selection.object);\n        if (index !== -1) {\n            this.#lastSelection = new Selection(TimelineSelection.fromTraceEvent(selection.object), index);\n        }\n        return index;\n    }\n    groupForEvent(_entryIndex) {\n        // Because the network track only contains one group, we don't actually\n        // need to do any lookups here.\n        const group = this.#networkTrackAppender?.group() ?? null;\n        return group;\n    }\n    entryColor(index) {\n        if (!this.#networkTrackAppender) {\n            throw new Error('networkTrackAppender should not be empty');\n        }\n        return this.#networkTrackAppender.colorForEvent(this.#events[index]);\n    }\n    textColor(_index) {\n        return FlameChartStyle.textColor;\n    }\n    entryTitle(index) {\n        const event = this.#events[index];\n        return TimelineComponents.EntryName.nameForEntry(event);\n    }\n    entryFont(_index) {\n        return this.#networkTrackAppender?.font() || null;\n    }\n    /**\n     * Returns the pixels needed to decorate the event.\n     * The pixels compare to the start of the earliest event of the request.\n     *\n     * Request.beginTime(), which is used in FlameChart to calculate the unclippedBarX\n     * v\n     *    |----------------[ (URL text)    waiting time   |   request  ]--------|\n     *    ^start           ^sendStart                     ^headersEnd  ^Finish  ^end\n     * @param request\n     * @param unclippedBarX The start pixel of the request. It is calculated with request.beginTime() in FlameChart.\n     * @param timeToPixelRatio\n     * @returns the pixels to draw waiting time and left and right whiskers and url text\n     */\n    getDecorationPixels(event, unclippedBarX, timeToPixelRatio) {\n        const beginTime = Trace.Helpers.Timing.microSecondsToMilliseconds(event.ts);\n        const timeToPixel = (time) => unclippedBarX + (time - beginTime) * timeToPixelRatio;\n        const startTime = Trace.Helpers.Timing.microSecondsToMilliseconds(event.ts);\n        const endTime = Trace.Helpers.Timing.microSecondsToMilliseconds((event.ts + event.dur));\n        const sendStartTime = Trace.Helpers.Timing.microSecondsToMilliseconds(event.args.data.syntheticData.sendStartTime);\n        const headersEndTime = Trace.Helpers.Timing.microSecondsToMilliseconds(event.args.data.syntheticData.downloadStart);\n        const sendStart = Math.max(timeToPixel(sendStartTime), unclippedBarX);\n        const headersEnd = Math.max(timeToPixel(headersEndTime), sendStart);\n        const finish = Math.max(timeToPixel(Trace.Helpers.Timing.microSecondsToMilliseconds(event.args.data.syntheticData.finishTime)), headersEnd);\n        const start = timeToPixel(startTime);\n        const end = Math.max(timeToPixel(endTime), finish);\n        return { sendStart, headersEnd, finish, start, end };\n    }\n    /**\n     * Decorates the entry depends on the type of the event:\n     * @param index\n     * @param context\n     * @param barX The x pixel of the visible part request\n     * @param barY The y pixel of the visible part request\n     * @param barWidth The width of the visible part request\n     * @param barHeight The height of the visible part request\n     * @param unclippedBarX The start pixel of the request compare to the visible area. It is calculated with request.beginTime() in FlameChart.\n     * @param timeToPixelRatio\n     * @returns if the entry needs to be decorate, which is alway true if the request has \"timing\" field\n     */\n    decorateEntry(index, context, _text, barX, barY, barWidth, barHeight, unclippedBarX, timeToPixelRatio) {\n        const event = this.#events[index];\n        if (Trace.Types.Events.isSyntheticWebSocketConnection(event)) {\n            return this.#decorateSyntheticWebSocketConnection(index, context, barY, barHeight, unclippedBarX, timeToPixelRatio);\n        }\n        if (!Trace.Types.Events.isSyntheticNetworkRequest(event)) {\n            return false;\n        }\n        return this.#decorateNetworkRequest(index, context, _text, barX, barY, barWidth, barHeight, unclippedBarX, timeToPixelRatio);\n    }\n    /**\n     * Decorates the Network Request entry with the following steps:\n     *   Draw a waiting time between |sendStart| and |headersEnd|\n     *     By adding a extra transparent white layer\n     *   Draw a whisk between |start| and |sendStart|\n     *   Draw a whisk between |finish| and |end|\n     *     By draw another layer of background color to \"clear\" the area\n     *     Then draw the whisk\n     *   Draw the URL after the |sendStart|\n     *\n     *   |----------------[ (URL text)    waiting time   |   request  ]--------|\n     *   ^start           ^sendStart                     ^headersEnd  ^Finish  ^end\n     * */\n    #decorateNetworkRequest(index, context, _text, barX, barY, barWidth, barHeight, unclippedBarX, timeToPixelRatio) {\n        const event = this.#events[index];\n        if (!Trace.Types.Events.isSyntheticNetworkRequest(event)) {\n            return false;\n        }\n        const { sendStart, headersEnd, finish, start, end } = this.getDecorationPixels(event, unclippedBarX, timeToPixelRatio);\n        // Draw waiting time.\n        context.fillStyle = 'hsla(0, 100%, 100%, 0.8)';\n        context.fillRect(sendStart + 0.5, barY + 0.5, headersEnd - sendStart - 0.5, barHeight - 2);\n        // Clear portions of initial rect to prepare for the ticks.\n        context.fillStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container');\n        context.fillRect(barX, barY - 0.5, sendStart - barX, barHeight);\n        context.fillRect(finish, barY - 0.5, barX + barWidth - finish, barHeight);\n        // Draws left and right whiskers\n        function drawTick(begin, end, y) {\n            const /** @const */ tickHeightPx = 6;\n            context.moveTo(begin, y - tickHeightPx / 2);\n            context.lineTo(begin, y + tickHeightPx / 2);\n            context.moveTo(begin, y);\n            context.lineTo(end, y);\n        }\n        context.beginPath();\n        context.lineWidth = 1;\n        context.strokeStyle = '#ccc';\n        const lineY = Math.floor(barY + barHeight / 2) + 0.5;\n        const leftTick = start + 0.5;\n        const rightTick = end - 0.5;\n        drawTick(leftTick, sendStart, lineY);\n        drawTick(rightTick, finish, lineY);\n        context.stroke();\n        // Draw request URL as text\n        const textStart = Math.max(sendStart, 0);\n        const textWidth = finish - textStart;\n        const /** @const */ minTextWidthPx = 20;\n        if (textWidth >= minTextWidthPx) {\n            let title = this.entryTitle(index) || '';\n            if (event.args.data.fromServiceWorker) {\n                title = '⚙ ' + title;\n            }\n            if (title) {\n                const /** @const */ textPadding = 4;\n                const /** @const */ textBaseline = 5;\n                const textBaseHeight = barHeight - textBaseline;\n                const trimmedText = UI.UIUtils.trimTextEnd(context, title, textWidth - 2 * textPadding);\n                context.fillStyle = '#333';\n                context.fillText(trimmedText, textStart + textPadding, barY + textBaseHeight);\n            }\n        }\n        return true;\n    }\n    /**\n     * Decorates the synthetic websocket event entry with a whisk from the start to the end.\n     *   ------------------------\n     *   ^start                 ^end\n     * */\n    #decorateSyntheticWebSocketConnection(index, context, barY, barHeight, unclippedBarX, timeToPixelRatio) {\n        context.save();\n        const event = this.#events[index];\n        const beginTime = Trace.Helpers.Timing.microSecondsToMilliseconds(event.ts);\n        const timeToPixel = (time) => Math.floor(unclippedBarX + (time - beginTime) * timeToPixelRatio);\n        const endTime = Trace.Helpers.Timing.microSecondsToMilliseconds((event.ts + event.dur));\n        const start = timeToPixel(beginTime) + 0.5;\n        const end = timeToPixel(endTime) - 0.5;\n        context.strokeStyle = ThemeSupport.ThemeSupport.instance().getComputedValue('--app-color-rendering');\n        const lineY = Math.floor(barY + barHeight / 2) + 0.5;\n        context.setLineDash([3, 2]);\n        context.moveTo(start, lineY - 1);\n        context.lineTo(end, lineY - 1);\n        context.moveTo(start, lineY + 1);\n        context.lineTo(end, lineY + 1);\n        context.stroke();\n        context.restore();\n        return true;\n    }\n    forceDecoration(_index) {\n        return true;\n    }\n    /**\n     *In the FlameChart.ts, when filtering through the events for a level, it starts\n     * from the last event of that level and stops when it hit an event that has start\n     * time greater than the filtering window.\n     * For example, in this websocket level we have A(socket event), B, C, D. If C\n     * event has start time greater than the window, the rest of the events (A and B)\n     * wont be drawn. So if this level is the force Drawable level, we wont stop at\n     * event C and will include the socket event A.\n     * */\n    forceDrawableLevel(levelIndex) {\n        return this.#networkTrackAppender?.webSocketIdToLevel.has(levelIndex) || false;\n    }\n    prepareHighlightedEntryInfo(index) {\n        const event = this.#events[index];\n        if (Trace.Types.Events.isSyntheticNetworkRequest(event)) {\n            const element = document.createElement('div');\n            const root = UI.UIUtils.createShadowRootWithCoreStyles(element, {\n                cssFile: [timelineFlamechartPopoverStyles],\n                delegatesFocus: undefined,\n            });\n            const contents = root.createChild('div', 'timeline-flamechart-popover');\n            const infoElement = new TimelineComponents.NetworkRequestTooltip.NetworkRequestTooltip();\n            infoElement.networkRequest = event;\n            contents.appendChild(infoElement);\n            return element;\n        }\n        return null;\n    }\n    /**\n     * Sets the minimum time and total time span of a trace using the\n     * new engine data.\n     */\n    #setTimingBoundsData(newParsedTrace) {\n        const { traceBounds } = newParsedTrace.Meta;\n        const minTime = Trace.Helpers.Timing.microSecondsToMilliseconds(traceBounds.min);\n        const maxTime = Trace.Helpers.Timing.microSecondsToMilliseconds(traceBounds.max);\n        this.#minimumBoundaryInternal = minTime;\n        this.#timeSpan = minTime === maxTime ? 1000 : maxTime - this.#minimumBoundaryInternal;\n    }\n    /**\n     * When users zoom in the flamechart, we only want to show them the network\n     * requests between startTime and endTime. This function will call the\n     * trackAppender to update the timeline data, and then force to create a new\n     * PerfUI.FlameChart.FlameChartTimelineData instance to force the flamechart\n     * to re-render.\n     */\n    #updateTimelineData(startTime, endTime) {\n        if (!this.#networkTrackAppender || !this.#timelineDataInternal) {\n            return;\n        }\n        this.#maxLevel = this.#networkTrackAppender.relayoutEntriesWithinBounds(this.#events, startTime, endTime);\n        // TODO(crbug.com/1459225): Remove this recreating code.\n        // Force to create a new PerfUI.FlameChart.FlameChartTimelineData instance\n        // to force the flamechart to re-render. This also causes crbug.com/1459225.\n        this.#timelineDataInternal = PerfUI.FlameChart.FlameChartTimelineData.create({\n            entryLevels: this.#timelineDataInternal?.entryLevels,\n            entryTotalTimes: this.#timelineDataInternal?.entryTotalTimes,\n            entryStartTimes: this.#timelineDataInternal?.entryStartTimes,\n            groups: this.#timelineDataInternal?.groups,\n            initiatorsData: this.#timelineDataInternal.initiatorsData,\n            entryDecorations: this.#timelineDataInternal.entryDecorations,\n        });\n    }\n    preferredHeight() {\n        if (!this.#networkTrackAppender || this.#maxLevel === 0) {\n            return 0;\n        }\n        const group = this.#networkTrackAppender.group();\n        if (!group) {\n            return 0;\n        }\n        // Bump up to 7 because the tooltip is around 7 rows' height.\n        return group.style.height * (this.isExpanded() ? Platform.NumberUtilities.clamp(this.#maxLevel + 1, 7, 8.5) : 1);\n    }\n    isExpanded() {\n        return Boolean(this.#networkTrackAppender?.group()?.expanded);\n    }\n    formatValue(value, precision) {\n        return i18n.TimeUtilities.preciseMillisToString(value, precision);\n    }\n    canJumpToEntry(_entryIndex) {\n        return false;\n    }\n    /**\n     * searches entries within the specified time and returns a list of entry\n     * indexes\n     */\n    search(visibleWindow, filter) {\n        const results = [];\n        for (let i = 0; i < this.#events.length; i++) {\n            const entry = this.#events.at(i);\n            if (!entry) {\n                continue;\n            }\n            if (!Trace.Helpers.Timing.eventIsInBounds(entry, visibleWindow)) {\n                continue;\n            }\n            if (filter.accept(entry, this.#parsedTrace ?? undefined)) {\n                const startTimeMilli = Trace.Helpers.Timing.microSecondsToMilliseconds(entry.ts);\n                results.push({ startTimeMilli, index: i, provider: 'network' });\n            }\n        }\n        return results;\n    }\n    /**\n     * Returns a map of navigations that happened in the main frame, ignoring any\n     * that happened in other frames.\n     * The map's key is the frame ID.\n     **/\n    mainFrameNavigationStartEvents() {\n        if (!this.#parsedTrace) {\n            return [];\n        }\n        return this.#parsedTrace.Meta.mainFrameNavigations;\n    }\n    buildFlowForInitiator(entryIndex) {\n        if (!this.#parsedTrace) {\n            return false;\n        }\n        if (!this.#timelineDataInternal) {\n            return false;\n        }\n        if (this.#lastInitiatorEntry === entryIndex) {\n            if (this.#lastInitiatorsData) {\n                this.#timelineDataInternal.initiatorsData = this.#lastInitiatorsData;\n            }\n            return true;\n        }\n        if (!this.#networkTrackAppender) {\n            return false;\n        }\n        // Remove all previously assigned decorations indicating that the flow event entries are hidden\n        const previousInitiatorsDataLength = this.#timelineDataInternal.initiatorsData.length;\n        // |entryIndex| equals -1 means there is no entry selected, just clear the\n        // initiator cache if there is any previous arrow and return true to\n        // re-render.\n        if (entryIndex === -1) {\n            this.#lastInitiatorEntry = entryIndex;\n            if (previousInitiatorsDataLength === 0) {\n                // This means there is no arrow before, so we don't need to re-render.\n                return false;\n            }\n            // Reset to clear any previous arrows from the last event.\n            this.#timelineDataInternal.resetFlowData();\n            return true;\n        }\n        const event = this.#events[entryIndex];\n        // Reset to clear any previous arrows from the last event.\n        this.#timelineDataInternal.resetFlowData();\n        this.#lastInitiatorEntry = entryIndex;\n        const initiatorsData = initiatorsDataToDrawForNetwork(this.#parsedTrace, event);\n        // This means there is no change for arrows.\n        if (previousInitiatorsDataLength === 0 && initiatorsData.length === 0) {\n            return false;\n        }\n        for (const initiatorData of initiatorsData) {\n            const eventIndex = this.indexForEvent(initiatorData.event);\n            const initiatorIndex = this.indexForEvent(initiatorData.initiator);\n            if (eventIndex === null || initiatorIndex === null) {\n                continue;\n            }\n            this.#timelineDataInternal.initiatorsData.push({\n                initiatorIndex,\n                eventIndex,\n            });\n        }\n        this.#lastInitiatorsData = this.#timelineDataInternal.initiatorsData;\n        return true;\n    }\n}\n//# sourceMappingURL=TimelineFlameChartNetworkDataProvider.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.timeline-overlays-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  /* Ensure it appears on top of everything */\n  z-index: 200;\n  pointer-events: none;\n}\n\n.overlay-item {\n  position: absolute;\n  /* The FlameChartView will move these as the FlameChart is drawn */\n  top: 0;\n  left: 0;\n}\n\n.overlay-type-ENTRY_LABEL {\n  /* keep these above the selected entry overline, else they can become hard to read */\n  z-index: 2;\n}\n\n.overlay-type-ENTRY_SELECTED,\n.overlay-type-ENTRY_OUTLINE {\n  pointer-events: none;\n  border: 2px solid var(--sys-color-primary);\n  background-color: var(--sys-color-state-ripple-primary);\n\n  &.cut-off-top {\n    border-top: none;\n  }\n\n  &.cut-off-bottom {\n    border-bottom: none;\n  }\n\n  &.cut-off-right {\n    border-right: none;\n  }\n\n  &.cut-off-left {\n    border-left: none;\n  }\n}\n\n.overlay-type-ENTRY_OUTLINE {\n  background-color: transparent;\n\n  &.outline-reason-ERROR {\n    border-color: var(--sys-color-error-bright);\n  }\n\n  &.outline-reason-INFO {\n    border-color: var(--sys-color-primary);\n  }\n}\n\n.overlay-type-CANDY_STRIPED_TIME_RANGE {\n  --red-stripe-width: 2px;\n  --white-stripe-width: 7px;\n\n  background-image:\n    repeating-linear-gradient(\n      315deg,\n      var(--sys-color-error-bright),\n      var(--sys-color-error-bright) var(--red-stripe-width),\n      transparent var(--red-stripe-width),\n      transparent var(--white-stripe-width)\n    );\n  border: 2px solid var(--sys-color-error-bright);\n\n  &.cut-off-bottom {\n    border-bottom: none;\n  }\n\n  &.cut-off-top {\n    border-top: none;\n  }\n\n  &.cut-off-right {\n    border-right: none;\n  }\n\n  &.cut-off-left {\n    border-left: none;\n  }\n}\n\n.overlay-type-ENTRIES_LINK {\n  height: 100%;\n  width: 100%;\n}\n\n.overlay-type-TIME_RANGE {\n  top: 0;\n  bottom: 0;\n\n  &.overlap-1 {\n    bottom: 55px;\n  }\n\n  &.overlap-2 {\n    bottom: 105px;\n  }\n}\n\n.overlay-type-CURSOR_TIMESTAMP_MARKER {\n  top: 0;\n  bottom: 0;\n  width: 2px;\n  background-color: var(--sys-color-primary);\n  pointer-events: none;\n}\n\n.timeline-entry-tooltip-element:not(:empty) {\n  z-index: 2000;\n  position: absolute;\n  contain: content;\n  background-color: var(--sys-color-cdt-base-container);\n  pointer-events: none;\n  padding: 4px 8px;\n  white-space: nowrap;\n  max-width: 80%;\n  box-shadow: var(--drop-shadow);\n}\n\n.overlay-type-TIMESPAN_BREAKDOWN {\n  /* This overlay by default is shown at the bottom of the UI, not the top */\n  top: unset;\n  bottom: 0;\n  height: 100px;\n}\n\n/*# sourceURL=timelineFlameChartView.css */\n`);\n\nexport default styles;\n","// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { getAnnotationEntries, getAnnotationWindow } from './AnnotationHelpers.js';\nimport { CountersGraph } from './CountersGraph.js';\nimport { SHOULD_SHOW_EASTER_EGG } from './EasterEgg.js';\nimport { ModificationsManager } from './ModificationsManager.js';\nimport * as OverlayComponents from './overlays/components/components.js';\nimport * as Overlays from './overlays/overlays.js';\nimport { targetForEvent } from './TargetForEvent.js';\nimport { TimelineDetailsView } from './TimelineDetailsView.js';\nimport { TimelineRegExp } from './TimelineFilters.js';\nimport { TimelineFlameChartDataProvider, } from './TimelineFlameChartDataProvider.js';\nimport { TimelineFlameChartNetworkDataProvider } from './TimelineFlameChartNetworkDataProvider.js';\nimport timelineFlameChartViewStyles from './timelineFlameChartView.css.js';\nimport { TimelineSelection } from './TimelineSelection.js';\nimport { AggregatedTimelineTreeView } from './TimelineTreeView.js';\nconst UIStrings = {\n    /**\n     *@description Text in Timeline Flame Chart View of the Performance panel\n     *@example {Frame} PH1\n     *@example {10ms} PH2\n     */\n    sAtS: '{PH1} at {PH2}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineFlameChartView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst MAX_HIGHLIGHTED_SEARCH_ELEMENTS = 200;\nexport class TimelineFlameChartView extends UI.Widget.VBox {\n    delegate;\n    /**\n     * Tracks the indexes of matched entries when the user searches the panel.\n     * Defaults to undefined which indicates the user has not searched.\n     */\n    searchResults = undefined;\n    eventListeners;\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    networkSplitWidget;\n    mainDataProvider;\n    mainFlameChart;\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    networkFlameChartGroupExpansionSetting;\n    networkDataProvider;\n    networkFlameChart;\n    networkPane;\n    splitResizer;\n    chartSplitWidget;\n    brickGame;\n    countersView;\n    detailsSplitWidget;\n    detailsView;\n    onMainAddEntryLabelAnnotation;\n    onNetworkAddEntryLabelAnnotation;\n    #onMainEntriesLinkAnnotationCreated;\n    #onNetworkEntriesLinkAnnotationCreated;\n    onMainEntrySelected;\n    onNetworkEntrySelected;\n    #boundRefreshAfterIgnoreList;\n    #selectedEvents;\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    groupBySetting;\n    searchableView;\n    needsResizeToPreferredHeights;\n    selectedSearchResult;\n    searchRegex;\n    #parsedTrace;\n    #traceInsightSets = null;\n    #eventToRelatedInsightsMap = null;\n    #selectedGroupName = null;\n    #onTraceBoundsChangeBound = this.#onTraceBoundsChange.bind(this);\n    #gameKeyMatches = 0;\n    #gameTimeout = setTimeout(() => ({}), 0);\n    #overlaysContainer = document.createElement('div');\n    #overlays;\n    // Tracks the in-progress time range annotation when the user shift clicks + drags, or when the user uses the keyboard\n    #timeRangeSelectionAnnotation = null;\n    // Keep track of the link annotation that hasn't been fully selected yet.\n    // We only store it here when only 'entryFrom' has been selected and\n    // 'EntryTo' selection still needs to be updated.\n    #linkSelectionAnnotation = null;\n    #currentInsightOverlays = [];\n    #activeInsight = null;\n    #tooltipElement = document.createElement('div');\n    // We use an symbol as the loggable for each group. This is because\n    // groups can get re-built at times and we need a common reference to act as\n    // the reference for each group that we log. By storing these symbols in\n    // a map keyed off the context of the group, we ensure we persist the\n    // loggable even if the group gets rebuilt at some point in time.\n    #loggableForGroupByLogContext = new Map();\n    #onMainEntryInvoked;\n    #onNetworkEntryInvoked;\n    #currentSelection = null;\n    constructor(delegate) {\n        super();\n        this.element.classList.add('timeline-flamechart');\n        this.delegate = delegate;\n        this.eventListeners = [];\n        this.#parsedTrace = null;\n        const flameChartsContainer = new UI.Widget.VBox();\n        flameChartsContainer.element.classList.add('flame-charts-container');\n        // Create main and network flamecharts.\n        this.networkSplitWidget = new UI.SplitWidget.SplitWidget(false, false, 'timeline-flamechart-main-view', 150);\n        this.networkSplitWidget.show(flameChartsContainer.element);\n        this.#overlaysContainer.classList.add('timeline-overlays-container');\n        flameChartsContainer.element.appendChild(this.#overlaysContainer);\n        this.#tooltipElement.classList.add('timeline-entry-tooltip-element');\n        flameChartsContainer.element.appendChild(this.#tooltipElement);\n        // Ensure that the network panel & resizer appears above the main thread.\n        this.networkSplitWidget.sidebarElement().style.zIndex = '120';\n        const mainViewGroupExpansionSetting = Common.Settings.Settings.instance().createSetting('timeline-flamechart-main-view-group-expansion', {});\n        this.mainDataProvider = new TimelineFlameChartDataProvider();\n        this.mainDataProvider.addEventListener(\"DataChanged\" /* TimelineFlameChartDataProviderEvents.DATA_CHANGED */, () => this.mainFlameChart.scheduleUpdate());\n        this.mainFlameChart = new PerfUI.FlameChart.FlameChart(this.mainDataProvider, this, {\n            groupExpansionSetting: mainViewGroupExpansionSetting,\n            // The TimelineOverlays are used for selected elements\n            selectedElementOutline: false,\n            tooltipElement: this.#tooltipElement,\n            useOverlaysForCursorRuler: true,\n        });\n        this.mainFlameChart.alwaysShowVerticalScroll();\n        this.mainFlameChart.enableRuler(false);\n        this.mainFlameChart.addEventListener(\"LatestDrawDimensions\" /* PerfUI.FlameChart.Events.LATEST_DRAW_DIMENSIONS */, dimensions => {\n            this.#overlays.updateChartDimensions('main', dimensions.data.chart);\n            this.#overlays.updateVisibleWindow(dimensions.data.traceWindow);\n            void this.#overlays.update();\n        });\n        this.networkFlameChartGroupExpansionSetting =\n            Common.Settings.Settings.instance().createSetting('timeline-flamechart-network-view-group-expansion', {});\n        this.networkDataProvider = new TimelineFlameChartNetworkDataProvider();\n        this.networkFlameChart = new PerfUI.FlameChart.FlameChart(this.networkDataProvider, this, {\n            groupExpansionSetting: this.networkFlameChartGroupExpansionSetting,\n            // The TimelineOverlays are used for selected elements\n            selectedElementOutline: false,\n            tooltipElement: this.#tooltipElement,\n            useOverlaysForCursorRuler: true,\n        });\n        this.networkFlameChart.alwaysShowVerticalScroll();\n        this.networkFlameChart.addEventListener(\"LatestDrawDimensions\" /* PerfUI.FlameChart.Events.LATEST_DRAW_DIMENSIONS */, dimensions => {\n            this.#overlays.updateChartDimensions('network', dimensions.data.chart);\n            this.#overlays.updateVisibleWindow(dimensions.data.traceWindow);\n            void this.#overlays.update();\n            // If the height of the network chart has changed, we need to tell the\n            // main flame chart because its tooltips are positioned based in part on\n            // the height of the network chart.\n            this.mainFlameChart.setTooltipYPixelAdjustment(this.#overlays.networkChartOffsetHeight());\n        });\n        this.mainFlameChart.addEventListener(\"MouseMove\" /* PerfUI.FlameChart.Events.MOUSE_MOVE */, event => {\n            void this.#processFlameChartMouseMoveEvent(event.data);\n        });\n        this.networkFlameChart.addEventListener(\"MouseMove\" /* PerfUI.FlameChart.Events.MOUSE_MOVE */, event => {\n            void this.#processFlameChartMouseMoveEvent(event.data);\n        });\n        this.#overlays = new Overlays.Overlays.Overlays({\n            container: this.#overlaysContainer,\n            flameChartsContainers: {\n                main: this.mainFlameChart.element,\n                network: this.networkFlameChart.element,\n            },\n            charts: {\n                mainChart: this.mainFlameChart,\n                mainProvider: this.mainDataProvider,\n                networkChart: this.networkFlameChart,\n                networkProvider: this.networkDataProvider,\n            },\n            entryQueries: {\n                isEntryCollapsedByUser: (entry) => {\n                    return ModificationsManager.activeManager()?.getEntriesFilter().entryIsInvisible(entry) ?? false;\n                },\n                firstVisibleParentForEntry(entry) {\n                    return ModificationsManager.activeManager()?.getEntriesFilter().firstVisibleParentEntryForEntry(entry) ??\n                        null;\n                },\n            },\n        });\n        this.#overlays.addEventListener(Overlays.Overlays.AnnotationOverlayActionEvent.eventName, event => {\n            const { overlay, action } = event;\n            if (action === 'Remove') {\n                // If the overlay removed is the current time range, set it to null so that\n                // we would create a new time range overlay and annotation on the next time range selection instead\n                // of trying to update the current overlay that does not exist.\n                if (ModificationsManager.activeManager()?.getAnnotationByOverlay(overlay) ===\n                    this.#timeRangeSelectionAnnotation) {\n                    this.#timeRangeSelectionAnnotation = null;\n                }\n                ModificationsManager.activeManager()?.removeAnnotationOverlay(overlay);\n            }\n            else if (action === 'Update') {\n                ModificationsManager.activeManager()?.updateAnnotationOverlay(overlay);\n            }\n        });\n        this.element.addEventListener(OverlayComponents.EntriesLinkOverlay.EntryLinkStartCreating.eventName, () => {\n            /**\n             * When the user creates an entries link, they click on the arrow icon to\n             * begin creating it. At this point the arrow icon gets deleted. This\n             * causes the focus of the page by default to jump to the entire Timeline\n             * Panel. This is a bit aggressive; and problematic as it means we cannot\n             * use <ESC> to cancel the creation of the entry. So instead we focus the\n             * TimelineFlameChartView instead. This means that the user's <ESC> gets\n             * dealt with in its keydown.\n             * If the user goes ahead and creates the entry, they will end up\n             * focused on whichever target entry they pick, so this only matters for\n             * the case where the user hits <ESC> to cancel.\n             */\n            this.focus();\n        });\n        this.element.setAttribute('jslog', `${VisualLogging.section('timeline.flame-chart-view')}`);\n        this.networkPane = new UI.Widget.VBox();\n        this.networkPane.setMinimumSize(23, 23);\n        this.networkFlameChart.show(this.networkPane.element);\n        this.splitResizer = this.networkPane.element.createChild('div', 'timeline-flamechart-resizer');\n        this.networkSplitWidget.hideDefaultResizer(true);\n        this.networkSplitWidget.installResizer(this.splitResizer);\n        this.networkSplitWidget.setMainWidget(this.mainFlameChart);\n        this.networkSplitWidget.setSidebarWidget(this.networkPane);\n        // Create counters chart splitter.\n        this.chartSplitWidget = new UI.SplitWidget.SplitWidget(false, true, 'timeline-counters-split-view-state');\n        this.countersView = new CountersGraph(this.delegate);\n        this.chartSplitWidget.setMainWidget(flameChartsContainer);\n        this.chartSplitWidget.setSidebarWidget(this.countersView);\n        this.chartSplitWidget.hideDefaultResizer();\n        this.chartSplitWidget.installResizer(this.countersView.resizerElement());\n        // Create top level properties splitter.\n        this.detailsSplitWidget = new UI.SplitWidget.SplitWidget(false, true, 'timeline-panel-details-split-view-state');\n        this.detailsSplitWidget.element.classList.add('timeline-details-split');\n        this.detailsView = new TimelineDetailsView(delegate);\n        this.detailsSplitWidget.installResizer(this.detailsView.headerElement());\n        this.detailsSplitWidget.setMainWidget(this.chartSplitWidget);\n        this.detailsSplitWidget.setSidebarWidget(this.detailsView);\n        this.detailsSplitWidget.show(this.element);\n        this.onMainAddEntryLabelAnnotation = this.onAddEntryLabelAnnotation.bind(this, this.mainDataProvider);\n        this.onNetworkAddEntryLabelAnnotation = this.onAddEntryLabelAnnotation.bind(this, this.networkDataProvider);\n        this.#onMainEntriesLinkAnnotationCreated = event => this.onEntriesLinkAnnotationCreate(this.mainDataProvider, event.data.entryFromIndex);\n        this.#onNetworkEntriesLinkAnnotationCreated = event => this.onEntriesLinkAnnotationCreate(this.networkDataProvider, event.data.entryFromIndex);\n        if (Root.Runtime.experiments.isEnabled(\"perf-panel-annotations\" /* Root.Runtime.ExperimentName.TIMELINE_ANNOTATIONS */)) {\n            this.mainFlameChart.addEventListener(\"EntryLabelAnnotationAdded\" /* PerfUI.FlameChart.Events.ENTRY_LABEL_ANNOTATION_ADDED */, this.onMainAddEntryLabelAnnotation, this);\n            this.networkFlameChart.addEventListener(\"EntryLabelAnnotationAdded\" /* PerfUI.FlameChart.Events.ENTRY_LABEL_ANNOTATION_ADDED */, this.onNetworkAddEntryLabelAnnotation, this);\n            this.mainFlameChart.addEventListener(\"EntriesLinkAnnotationCreated\" /* PerfUI.FlameChart.Events.ENTRIES_LINK_ANNOTATION_CREATED */, this.#onMainEntriesLinkAnnotationCreated, this);\n            this.networkFlameChart.addEventListener(\"EntriesLinkAnnotationCreated\" /* PerfUI.FlameChart.Events.ENTRIES_LINK_ANNOTATION_CREATED */, this.#onNetworkEntriesLinkAnnotationCreated, this);\n        }\n        /**\n         * NOTE: ENTRY_SELECTED, ENTRY_INVOKED and ENTRY_HOVERED are not always super obvious:\n         * ENTRY_SELECTED: is KEYBOARD ONLY selection of events (e.g. navigating through the flamechart with your arrow keys)\n         * ENTRY_HOVERED: is MOUSE ONLY when an event is hovered over with the mouse.\n         * ENTRY_INVOKED: is when the user cilcks on an event, or hits the \"enter\" key whilst an event is selected.\n         */\n        this.onMainEntrySelected = this.onEntrySelected.bind(this, this.mainDataProvider);\n        this.onNetworkEntrySelected = this.onEntrySelected.bind(this, this.networkDataProvider);\n        this.mainFlameChart.addEventListener(\"EntrySelected\" /* PerfUI.FlameChart.Events.ENTRY_SELECTED */, this.onMainEntrySelected, this);\n        this.networkFlameChart.addEventListener(\"EntrySelected\" /* PerfUI.FlameChart.Events.ENTRY_SELECTED */, this.onNetworkEntrySelected, this);\n        this.#onMainEntryInvoked = this.#onEntryInvoked.bind(this, this.mainDataProvider);\n        this.#onNetworkEntryInvoked = this.#onEntryInvoked.bind(this, this.networkDataProvider);\n        this.mainFlameChart.addEventListener(\"EntryInvoked\" /* PerfUI.FlameChart.Events.ENTRY_INVOKED */, this.#onMainEntryInvoked, this);\n        this.networkFlameChart.addEventListener(\"EntryInvoked\" /* PerfUI.FlameChart.Events.ENTRY_INVOKED */, this.#onNetworkEntryInvoked, this);\n        this.mainFlameChart.addEventListener(\"EntryHovered\" /* PerfUI.FlameChart.Events.ENTRY_HOVERED */, event => {\n            this.onEntryHovered(event);\n            this.updateLinkSelectionAnnotationWithToEntry(this.mainDataProvider, event.data);\n        }, this);\n        this.networkFlameChart.addEventListener(\"EntryHovered\" /* PerfUI.FlameChart.Events.ENTRY_HOVERED */, event => {\n            this.updateLinkSelectionAnnotationWithToEntry(this.networkDataProvider, event.data);\n        }, this);\n        this.element.addEventListener('keydown', this.#keydownHandler.bind(this));\n        this.element.addEventListener('pointerdown', this.#pointerDownHandler.bind(this));\n        this.#boundRefreshAfterIgnoreList = this.#refreshAfterIgnoreList.bind(this);\n        this.#selectedEvents = null;\n        this.groupBySetting = Common.Settings.Settings.instance().createSetting('timeline-tree-group-by', AggregatedTimelineTreeView.GroupBy.None);\n        this.groupBySetting.addChangeListener(this.refreshMainFlameChart, this);\n        this.refreshMainFlameChart();\n        TraceBounds.TraceBounds.onChange(this.#onTraceBoundsChangeBound);\n    }\n    containingElement() {\n        return this.element;\n    }\n    setOverlays(overlays, options) {\n        this.bulkRemoveOverlays(this.#currentInsightOverlays);\n        this.#currentInsightOverlays = overlays;\n        if (this.#currentInsightOverlays.length === 0) {\n            return;\n        }\n        const traceBounds = TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.entireTraceBounds;\n        if (!traceBounds) {\n            return;\n        }\n        this.bulkAddOverlays(this.#currentInsightOverlays);\n        const entries = [];\n        for (const overlay of this.#currentInsightOverlays) {\n            entries.push(...Overlays.Overlays.entriesForOverlay(overlay));\n        }\n        for (const entry of entries) {\n            // Ensure that the track for the entries are open.\n            this.#expandEntryTrack(entry);\n        }\n        if (options.updateTraceWindow) {\n            const overlaysBounds = Overlays.Overlays.traceWindowContainingOverlays(this.#currentInsightOverlays);\n            // Trace window covering all overlays expanded by 100% so that the overlays cover 50% of the visible window.\n            const expandedBounds = Trace.Helpers.Timing.expandWindowByPercentOrToOneMillisecond(overlaysBounds, traceBounds, 100);\n            // Set the timeline visible window and ignore the minimap bounds. This\n            // allows us to pick a visible window even if the overlays are outside of\n            // the current breadcrumb. If this happens, the event listener for\n            // BoundsManager changes in TimelineMiniMap will detect it and activate\n            // the correct breadcrumb for us.\n            TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(expandedBounds, { ignoreMiniMapBounds: true, shouldAnimate: true });\n        }\n        // Reveal entry if we have one.\n        if (entries.length !== 0) {\n            const earliestEntry = entries.reduce((earliest, current) => (earliest.ts < current.ts ? earliest : current), entries[0]);\n            this.revealEventVertically(earliestEntry);\n        }\n    }\n    revealAnnotation(annotation) {\n        const traceBounds = TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.entireTraceBounds;\n        if (!traceBounds) {\n            return;\n        }\n        const annotationWindow = getAnnotationWindow(annotation);\n        if (!annotationWindow) {\n            return;\n        }\n        const annotationEntries = getAnnotationEntries(annotation);\n        for (const entry of annotationEntries) {\n            this.#expandEntryTrack(entry);\n        }\n        const firstEntry = annotationEntries.at(0);\n        if (firstEntry) {\n            this.revealEventVertically(firstEntry);\n        }\n        // Trace window covering all overlays expanded by 100% so that the overlays cover 50% of the visible window.\n        const expandedBounds = Trace.Helpers.Timing.expandWindowByPercentOrToOneMillisecond(annotationWindow, traceBounds, 100);\n        TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(expandedBounds, { ignoreMiniMapBounds: true, shouldAnimate: true });\n    }\n    setActiveInsight(insight) {\n        this.#activeInsight = insight;\n        this.bulkRemoveOverlays(this.#currentInsightOverlays);\n        if (!this.#activeInsight) {\n            return;\n        }\n        this.setOverlays(this.#activeInsight.overlays, { updateTraceWindow: true });\n    }\n    /**\n     * Expands the track / group that the given entry is in.\n     */\n    #expandEntryTrack(entry) {\n        const chartName = Overlays.Overlays.chartForEntry(entry);\n        const provider = chartName === 'main' ? this.mainDataProvider : this.networkDataProvider;\n        const entryChart = chartName === 'main' ? this.mainFlameChart : this.networkFlameChart;\n        const entryIndex = provider.indexForEvent?.(entry) ?? null;\n        if (entryIndex === null) {\n            return;\n        }\n        const group = provider.groupForEvent?.(entryIndex) ?? null;\n        if (!group) {\n            return;\n        }\n        const groupIndex = provider.timelineData().groups.indexOf(group);\n        if (!group.expanded && groupIndex > -1) {\n            entryChart.toggleGroupExpand(groupIndex);\n        }\n    }\n    async #processFlameChartMouseMoveEvent(data) {\n        const { mouseEvent, timeInMicroSeconds } = data;\n        // If the user is no longer holding shift, remove any existing marker.\n        if (!mouseEvent.shiftKey) {\n            const removedCount = this.#overlays.removeOverlaysOfType('CURSOR_TIMESTAMP_MARKER');\n            if (removedCount > 0) {\n                // Don't trigger lots of updates on a mouse move if we didn't actually\n                // remove any overlays.\n                await this.#overlays.update();\n            }\n        }\n        if (!mouseEvent.metaKey && mouseEvent.shiftKey) {\n            // CURSOR_TIMESTAMP_MARKER is a singleton; if one already exists it will\n            // be updated rather than create an entirely new one.\n            this.addOverlay({\n                type: 'CURSOR_TIMESTAMP_MARKER',\n                timestamp: timeInMicroSeconds,\n            });\n        }\n    }\n    #pointerDownHandler(event) {\n        /**\n         * If the user is in the middle of creating an entry link annotation and\n         * right clicks, let's take that as a sign to exit and cancel.\n         * (buttons === 2 indicates a right click)\n         */\n        if (event.buttons === 2 && this.#linkSelectionAnnotation) {\n            this.#clearLinkSelectionAnnotation(true);\n            event.stopPropagation();\n        }\n    }\n    #clearLinkSelectionAnnotation(deleteCurrentLink) {\n        if (this.#linkSelectionAnnotation === null) {\n            return;\n        }\n        // If the link in progress in cleared, make sure it's creation is complete. If not, delete it.\n        if (deleteCurrentLink || this.#linkSelectionAnnotation.state !== \"connected\" /* Trace.Types.File.EntriesLinkState.CONNECTED */) {\n            ModificationsManager.activeManager()?.removeAnnotation(this.#linkSelectionAnnotation);\n        }\n        this.mainFlameChart.setLinkSelectionAnnotationIsInProgress(false);\n        this.networkFlameChart.setLinkSelectionAnnotationIsInProgress(false);\n        this.#linkSelectionAnnotation = null;\n    }\n    #setLinkSelectionAnnotation(linkSelectionAnnotation) {\n        this.mainFlameChart.setLinkSelectionAnnotationIsInProgress(true);\n        this.networkFlameChart.setLinkSelectionAnnotationIsInProgress(true);\n        this.#linkSelectionAnnotation = linkSelectionAnnotation;\n    }\n    #createNewTimeRangeFromKeyboard(startTime, endTime) {\n        if (this.#timeRangeSelectionAnnotation) {\n            return;\n        }\n        this.#timeRangeSelectionAnnotation = {\n            bounds: Trace.Helpers.Timing.traceWindowFromMicroSeconds(startTime, endTime),\n            type: 'TIME_RANGE',\n            label: '',\n        };\n        ModificationsManager.activeManager()?.createAnnotation(this.#timeRangeSelectionAnnotation);\n    }\n    /**\n     * Handles key presses that could impact the creation of a time range overlay with the keyboard.\n     * @returns `true` if the event should not be propogated + have its default behaviour stopped.\n     */\n    #handleTimeRangeKeyboardCreation(event) {\n        const visibleWindow = TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.timelineTraceWindow;\n        if (!visibleWindow) {\n            return false;\n        }\n        // The amount we increment the time range by when using the arrow keys is\n        // 2% of the visible window.\n        const timeRangeIncrementValue = visibleWindow.range * 0.02;\n        switch (event.key) {\n            // ArrowLeft + ArrowRight adjusts the right hand bound (the max) of the time range\n            // Shift + ArrowRight also starts a range if there isn't one already\n            case 'ArrowRight': {\n                if (!this.#timeRangeSelectionAnnotation) {\n                    if (event.shiftKey) {\n                        let startTime = visibleWindow.min;\n                        // Prefer the start time of the selected event, if there is one.\n                        if (this.#currentSelection) {\n                            startTime = Trace.Helpers.Timing.millisecondsToMicroseconds(this.#currentSelection.startTime);\n                        }\n                        this.#createNewTimeRangeFromKeyboard(startTime, Trace.Types.Timing.MicroSeconds(startTime + timeRangeIncrementValue));\n                        return true;\n                    }\n                    return false;\n                }\n                // Grow the RHS of the range, but limit it to the visible window.\n                this.#timeRangeSelectionAnnotation.bounds.max = Trace.Types.Timing.MicroSeconds(Math.min(this.#timeRangeSelectionAnnotation.bounds.max + timeRangeIncrementValue, visibleWindow.max));\n                this.#timeRangeSelectionAnnotation.bounds.range = Trace.Types.Timing.MicroSeconds(this.#timeRangeSelectionAnnotation.bounds.max - this.#timeRangeSelectionAnnotation.bounds.min);\n                ModificationsManager.activeManager()?.updateAnnotation(this.#timeRangeSelectionAnnotation);\n                return true;\n            }\n            case 'ArrowLeft': {\n                if (!this.#timeRangeSelectionAnnotation) {\n                    return false;\n                }\n                this.#timeRangeSelectionAnnotation.bounds.max = Trace.Types.Timing.MicroSeconds(\n                // Shrink the RHS of the range, but make sure it cannot go below the min value.\n                Math.max(this.#timeRangeSelectionAnnotation.bounds.max - timeRangeIncrementValue, this.#timeRangeSelectionAnnotation.bounds.min + 1));\n                this.#timeRangeSelectionAnnotation.bounds.range = Trace.Types.Timing.MicroSeconds(this.#timeRangeSelectionAnnotation.bounds.max - this.#timeRangeSelectionAnnotation.bounds.min);\n                ModificationsManager.activeManager()?.updateAnnotation(this.#timeRangeSelectionAnnotation);\n                return true;\n            }\n            // ArrowDown + ArrowUp adjusts the left hand bound (the min) of the time range\n            case 'ArrowUp': {\n                if (!this.#timeRangeSelectionAnnotation) {\n                    return false;\n                }\n                this.#timeRangeSelectionAnnotation.bounds.min = Trace.Types.Timing.MicroSeconds(\n                // Increase the LHS of the range, but make sure it cannot go above the max value.\n                Math.min(this.#timeRangeSelectionAnnotation.bounds.min + timeRangeIncrementValue, this.#timeRangeSelectionAnnotation.bounds.max - 1));\n                this.#timeRangeSelectionAnnotation.bounds.range = Trace.Types.Timing.MicroSeconds(this.#timeRangeSelectionAnnotation.bounds.max - this.#timeRangeSelectionAnnotation.bounds.min);\n                ModificationsManager.activeManager()?.updateAnnotation(this.#timeRangeSelectionAnnotation);\n                return true;\n            }\n            case 'ArrowDown': {\n                if (!this.#timeRangeSelectionAnnotation) {\n                    return false;\n                }\n                this.#timeRangeSelectionAnnotation.bounds.min = Trace.Types.Timing.MicroSeconds(\n                // Decrease the LHS, but make sure it cannot go beyond the minimum visible window.\n                Math.max(this.#timeRangeSelectionAnnotation.bounds.min - timeRangeIncrementValue, visibleWindow.min));\n                this.#timeRangeSelectionAnnotation.bounds.range = Trace.Types.Timing.MicroSeconds(this.#timeRangeSelectionAnnotation.bounds.max - this.#timeRangeSelectionAnnotation.bounds.min);\n                ModificationsManager.activeManager()?.updateAnnotation(this.#timeRangeSelectionAnnotation);\n                return true;\n            }\n            default: {\n                // If we get any other key, we take that as a sign the user is done. Most likely the keys come from them typing into the label :)\n                // If they do not type into the label, then the time range is not created.\n                this.#timeRangeSelectionAnnotation = null;\n                return false;\n            }\n        }\n    }\n    #keydownHandler(event) {\n        const keyCombo = 'fixme';\n        // `CREATION_NOT_STARTED` is only true in the state when both empty label and button to create connection are\n        // created at the same time. If any key is typed in that state, it means that the label is in focus and the key\n        // is typed into the label. This tells us that the user chose to create the\n        // label, not the connection. In that case, delete the connection.\n        if (this.#linkSelectionAnnotation &&\n            this.#linkSelectionAnnotation.state === \"creation_not_started\" /* Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED */) {\n            this.#clearLinkSelectionAnnotation(true);\n            // We have dealt with the keypress as the user is typing into the label, so do not let it propogate up.\n            // This also ensures that if the user uses \"Escape\" they don't toggle the DevTools drawer.\n            event.stopPropagation();\n        }\n        /**\n         * If the user is in the middle of creating an entry link and hits Esc,\n         * cancel and clear out the pending annotation.\n         */\n        if (event.key === 'Escape' && this.#linkSelectionAnnotation) {\n            this.#clearLinkSelectionAnnotation(true);\n            event.stopPropagation();\n            event.preventDefault();\n        }\n        const eventHandledByKeyboardTimeRange = this.#handleTimeRangeKeyboardCreation(event);\n        if (eventHandledByKeyboardTimeRange) {\n            event.preventDefault();\n            event.stopPropagation();\n            return;\n        }\n        if (event.key === keyCombo[this.#gameKeyMatches]) {\n            this.#gameKeyMatches++;\n            clearTimeout(this.#gameTimeout);\n            this.#gameTimeout = setTimeout(() => {\n                this.#gameKeyMatches = 0;\n            }, 2000);\n        }\n        else {\n            this.#gameKeyMatches = 0;\n            clearTimeout(this.#gameTimeout);\n        }\n        if (this.#gameKeyMatches !== keyCombo.length) {\n            return;\n        }\n        this.runBrickBreakerGame();\n    }\n    runBrickBreakerGame() {\n        if (!SHOULD_SHOW_EASTER_EGG) {\n            return;\n        }\n        if ([...this.element.childNodes].find(child => child instanceof PerfUI.BrickBreaker.BrickBreaker)) {\n            return;\n        }\n        this.brickGame = new PerfUI.BrickBreaker.BrickBreaker(this.mainFlameChart);\n        this.brickGame.classList.add('brick-game');\n        this.element.append(this.brickGame);\n    }\n    #onTraceBoundsChange(event) {\n        if (event.updateType === 'MINIMAP_BOUNDS') {\n            // If the update type was a changing of the minimap bounds, we do not\n            // need to redraw the timeline.\n            return;\n        }\n        const visibleWindow = event.state.milli.timelineTraceWindow;\n        const shouldAnimate = Boolean(event.options.shouldAnimate);\n        this.mainFlameChart.setWindowTimes(visibleWindow.min, visibleWindow.max, shouldAnimate);\n        this.networkDataProvider.setWindowTimes(visibleWindow.min, visibleWindow.max);\n        this.networkFlameChart.setWindowTimes(visibleWindow.min, visibleWindow.max, shouldAnimate);\n        // Updating search results can be very expensive. Debounce to avoid over-calling it.\n        const debouncedUpdate = Common.Debouncer.debounce(() => {\n            this.updateSearchResults(false, false);\n        }, 100);\n        debouncedUpdate();\n    }\n    isNetworkTrackShownForTests() {\n        return this.networkSplitWidget.showMode() !== \"OnlyMain\" /* UI.SplitWidget.ShowMode.ONLY_MAIN */;\n    }\n    getLinkSelectionAnnotation() {\n        return this.#linkSelectionAnnotation;\n    }\n    getMainDataProvider() {\n        return this.mainDataProvider;\n    }\n    getNetworkDataProvider() {\n        return this.networkDataProvider;\n    }\n    refreshMainFlameChart() {\n        this.mainFlameChart.update();\n    }\n    extensionDataVisibilityChanged() {\n        this.reset();\n        this.setupWindowTimes();\n        this.mainDataProvider.reset(true);\n        this.mainDataProvider.timelineData(true);\n        this.refreshMainFlameChart();\n    }\n    windowChanged(windowStartTime, windowEndTime, animate) {\n        TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(Trace.Helpers.Timing.traceWindowFromMilliSeconds(Trace.Types.Timing.MilliSeconds(windowStartTime), Trace.Types.Timing.MilliSeconds(windowEndTime)), { shouldAnimate: animate });\n    }\n    /**\n     * @param startTime - the start time of the selection in MilliSeconds\n     * @param endTime - the end time of the selection in MilliSeconds\n     * TODO(crbug.com/346312365): update the type definitions in ChartViewport.ts\n     */\n    updateRangeSelection(startTime, endTime) {\n        this.delegate.select(TimelineSelection.fromRange(startTime, endTime));\n        if (Root.Runtime.experiments.isEnabled(\"perf-panel-annotations\" /* Root.Runtime.ExperimentName.TIMELINE_ANNOTATIONS */)) {\n            const bounds = Trace.Helpers.Timing.traceWindowFromMilliSeconds(Trace.Types.Timing.MilliSeconds(startTime), Trace.Types.Timing.MilliSeconds(endTime));\n            // If the current time range annotation exists, the range selection\n            // for it is in progress and we need to update its bounds.\n            //\n            // When the range selection is finished, the current range is set to null.\n            // If the current selection is null, create a new time range annotations.\n            if (this.#timeRangeSelectionAnnotation) {\n                this.#timeRangeSelectionAnnotation.bounds = bounds;\n                ModificationsManager.activeManager()?.updateAnnotation(this.#timeRangeSelectionAnnotation);\n            }\n            else {\n                this.#timeRangeSelectionAnnotation = {\n                    type: 'TIME_RANGE',\n                    label: '',\n                    bounds,\n                };\n                // Before creating a new range, make sure to delete the empty ranges.\n                ModificationsManager.activeManager()?.deleteEmptyRangeAnnotations();\n                ModificationsManager.activeManager()?.createAnnotation(this.#timeRangeSelectionAnnotation);\n            }\n        }\n    }\n    getMainFlameChart() {\n        return this.mainFlameChart;\n    }\n    // This function is public for test purpose.\n    getNetworkFlameChart() {\n        return this.networkFlameChart;\n    }\n    updateSelectedGroup(flameChart, group) {\n        if (flameChart !== this.mainFlameChart || this.#selectedGroupName === group?.name) {\n            return;\n        }\n        this.#selectedGroupName = group?.name || null;\n        this.#selectedEvents = group ? this.mainDataProvider.groupTreeEvents(group) : null;\n        this.#updateDetailViews();\n    }\n    setModel(newParsedTrace, isCpuProfile = false) {\n        if (newParsedTrace === this.#parsedTrace) {\n            return;\n        }\n        this.#selectedGroupName = null;\n        this.#parsedTrace = newParsedTrace;\n        Common.EventTarget.removeEventListeners(this.eventListeners);\n        this.#selectedEvents = null;\n        this.mainDataProvider.setModel(newParsedTrace, isCpuProfile);\n        this.networkDataProvider.setModel(newParsedTrace);\n        this.reset();\n        this.setupWindowTimes();\n        this.updateSearchResults(false, false);\n        this.refreshMainFlameChart();\n        this.#updateFlameCharts();\n    }\n    setInsights(insights, eventToRelatedInsightsMap) {\n        if (this.#traceInsightSets === insights) {\n            return;\n        }\n        this.#traceInsightSets = insights;\n        this.#eventToRelatedInsightsMap = eventToRelatedInsightsMap;\n        // The DetailsView is provided with the InsightSets, so make sure we update it.\n        this.#updateDetailViews();\n    }\n    reset() {\n        if (this.networkDataProvider.isEmpty()) {\n            this.mainFlameChart.enableRuler(true);\n            this.networkSplitWidget.hideSidebar();\n        }\n        else {\n            this.mainFlameChart.enableRuler(false);\n            this.networkSplitWidget.showBoth();\n            this.resizeToPreferredHeights();\n        }\n        this.#overlays.reset();\n        this.mainFlameChart.reset();\n        this.networkFlameChart.reset();\n        this.updateSearchResults(false, false);\n    }\n    // TODO(paulirish): It's possible this is being called more than necessary. Attempt to clean up the lifecycle.\n    setupWindowTimes() {\n        const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n        if (!traceBoundsState) {\n            throw new Error('TimelineFlameChartView could not set the window bounds.');\n        }\n        const visibleWindow = traceBoundsState.milli.timelineTraceWindow;\n        this.mainFlameChart.setWindowTimes(visibleWindow.min, visibleWindow.max);\n        this.networkDataProvider.setWindowTimes(visibleWindow.min, visibleWindow.max);\n        this.networkFlameChart.setWindowTimes(visibleWindow.min, visibleWindow.max);\n    }\n    #refreshAfterIgnoreList() {\n        // The ignore list will only affect Thread tracks, which will only be in main flame chart.\n        // So just force recalculate and redraw the main flame chart here.\n        this.mainDataProvider.timelineData(true);\n        this.mainFlameChart.scheduleUpdate();\n    }\n    #updateDetailViews() {\n        this.countersView.setModel(this.#parsedTrace, this.#selectedEvents);\n        void this.detailsView.setModel({\n            parsedTrace: this.#parsedTrace,\n            selectedEvents: this.#selectedEvents,\n            traceInsightsSets: this.#traceInsightSets,\n            eventToRelatedInsightsMap: this.#eventToRelatedInsightsMap,\n        });\n    }\n    #updateFlameCharts() {\n        this.mainFlameChart.scheduleUpdate();\n        this.networkFlameChart.scheduleUpdate();\n        this.#registerLoggableGroups();\n    }\n    #registerLoggableGroups() {\n        const groups = [\n            ...this.mainFlameChart.timelineData()?.groups ?? [],\n            ...this.networkFlameChart.timelineData()?.groups ?? [],\n        ];\n        for (const group of groups) {\n            if (!group.jslogContext) {\n                continue;\n            }\n            const loggable = this.#loggableForGroupByLogContext.get(group.jslogContext) ?? Symbol(group.jslogContext);\n            if (!this.#loggableForGroupByLogContext.has(group.jslogContext)) {\n                // This is the first time this group has been created, so register its loggable.\n                this.#loggableForGroupByLogContext.set(group.jslogContext, loggable);\n                VisualLogging.registerLoggable(loggable, `${VisualLogging.section().context(`timeline.${group.jslogContext}`)}`, this.delegate.element);\n            }\n        }\n    }\n    // If an entry is hovered over and a creation of link annotation is in progress, update that annotation with a hovered entry.\n    updateLinkSelectionAnnotationWithToEntry(dataProvider, entryIndex) {\n        if (!this.#linkSelectionAnnotation ||\n            this.#linkSelectionAnnotation.state === \"creation_not_started\" /* Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED */) {\n            return;\n        }\n        const toSelectionObject = this.#selectionIfTraceEvent(entryIndex, dataProvider);\n        if (toSelectionObject) {\n            // Prevent the user from creating a link that connects an entry to itself.\n            if (toSelectionObject === this.#linkSelectionAnnotation.entryFrom) {\n                return;\n            }\n            // Prevent the user from creating a link that connects an entry it's already connected to.\n            const linkBetweenEntriesExists = ModificationsManager.activeManager()?.linkAnnotationBetweenEntriesExists(this.#linkSelectionAnnotation.entryFrom, toSelectionObject);\n            if (linkBetweenEntriesExists) {\n                return;\n            }\n            this.#linkSelectionAnnotation.state = \"connected\" /* Trace.Types.File.EntriesLinkState.CONNECTED */;\n            this.#linkSelectionAnnotation.entryTo = toSelectionObject;\n        }\n        else {\n            this.#linkSelectionAnnotation.state = \"pending_to_event\" /* Trace.Types.File.EntriesLinkState.PENDING_TO_EVENT */;\n            delete this.#linkSelectionAnnotation['entryTo'];\n        }\n        ModificationsManager.activeManager()?.updateAnnotation(this.#linkSelectionAnnotation);\n    }\n    onEntryHovered(commonEvent) {\n        SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n        const entryIndex = commonEvent.data;\n        const event = this.mainDataProvider.eventByIndex(entryIndex);\n        if (!event || !this.#parsedTrace) {\n            return;\n        }\n        if (event instanceof Trace.Handlers.ModelHandlers.Frames.TimelineFrame) {\n            return;\n        }\n        const target = targetForEvent(this.#parsedTrace, event);\n        if (!target) {\n            return;\n        }\n        const nodeIds = Trace.Extras.FetchNodes.nodeIdsForEvent(this.#parsedTrace, event);\n        for (const nodeId of nodeIds) {\n            new SDK.DOMModel.DeferredDOMNode(target, nodeId).highlight();\n        }\n    }\n    highlightEvent(event) {\n        const entryIndex = event ? this.mainDataProvider.entryIndexForSelection(TimelineSelection.fromTraceEvent(event)) : -1;\n        if (entryIndex >= 0) {\n            this.mainFlameChart.highlightEntry(entryIndex);\n        }\n        else {\n            this.mainFlameChart.hideHighlight();\n        }\n    }\n    willHide() {\n        this.networkFlameChartGroupExpansionSetting.removeChangeListener(this.resizeToPreferredHeights, this);\n        Bindings.IgnoreListManager.IgnoreListManager.instance().removeChangeListener(this.#boundRefreshAfterIgnoreList);\n    }\n    wasShown() {\n        this.registerCSSFiles([timelineFlameChartViewStyles]);\n        this.networkFlameChartGroupExpansionSetting.addChangeListener(this.resizeToPreferredHeights, this);\n        Bindings.IgnoreListManager.IgnoreListManager.instance().addChangeListener(this.#boundRefreshAfterIgnoreList);\n        if (this.needsResizeToPreferredHeights) {\n            this.resizeToPreferredHeights();\n        }\n        this.#updateFlameCharts();\n    }\n    updateCountersGraphToggle(showMemoryGraph) {\n        if (showMemoryGraph) {\n            this.chartSplitWidget.showBoth();\n        }\n        else {\n            this.chartSplitWidget.hideSidebar();\n        }\n    }\n    revealEvent(event) {\n        const mainIndex = this.mainDataProvider.indexForEvent(event);\n        const networkIndex = this.networkDataProvider.indexForEvent(event);\n        if (mainIndex !== null) {\n            this.mainFlameChart.revealEntry(mainIndex);\n        }\n        else if (networkIndex !== null) {\n            this.networkFlameChart.revealEntry(networkIndex);\n        }\n    }\n    // Given an event, it reveals its position vertically\n    revealEventVertically(event) {\n        const mainIndex = this.mainDataProvider.indexForEvent(event);\n        const networkIndex = this.networkDataProvider.indexForEvent(event);\n        if (mainIndex !== null) {\n            this.mainFlameChart.revealEntryVertically(mainIndex);\n        }\n        else if (networkIndex !== null) {\n            this.networkFlameChart.revealEntryVertically(networkIndex);\n        }\n    }\n    setSelectionAndReveal(selection) {\n        this.#currentSelection = selection;\n        const mainIndex = this.mainDataProvider.entryIndexForSelection(selection);\n        const networkIndex = this.networkDataProvider.entryIndexForSelection(selection);\n        this.mainFlameChart.setSelectedEntry(mainIndex);\n        this.networkFlameChart.setSelectedEntry(networkIndex);\n        // Clear any existing entry selection.\n        this.#overlays.removeOverlaysOfType('ENTRY_SELECTED');\n        // If:\n        // 1. There is no selection, or the selection is not a range selection\n        // AND 2. we have an active time range selection overlay\n        // AND 3. The label of the selection is empty\n        // then we need to remove it.\n        if ((selection === null || !TimelineSelection.isRangeSelection(selection.object)) &&\n            this.#timeRangeSelectionAnnotation && !this.#timeRangeSelectionAnnotation.label) {\n            ModificationsManager.activeManager()?.removeAnnotation(this.#timeRangeSelectionAnnotation);\n            this.#timeRangeSelectionAnnotation = null;\n        }\n        let index = this.mainDataProvider.entryIndexForSelection(selection);\n        this.mainFlameChart.setSelectedEntry(index);\n        index = this.networkDataProvider.entryIndexForSelection(selection);\n        this.networkFlameChart.setSelectedEntry(index);\n        if (this.detailsView) {\n            // TODO(crbug.com/1459265):  Change to await after migration work.\n            void this.detailsView.setSelection(selection);\n        }\n        // Create the entry selected overlay if the selection represents a frame or trace event (either network, or anything else)\n        if (selection &&\n            (TimelineSelection.isTraceEventSelection(selection.object) ||\n                TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selection.object) ||\n                TimelineSelection.isLegacyTimelineFrame(selection.object))) {\n            this.addOverlay({\n                type: 'ENTRY_SELECTED',\n                entry: selection.object,\n            });\n        }\n        if (this.#linkSelectionAnnotation &&\n            this.#linkSelectionAnnotation.state === \"creation_not_started\" /* Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED */) {\n            this.#clearLinkSelectionAnnotation(true);\n        }\n    }\n    /**\n     * Used to create multiple overlays at once without triggering a redraw for each one.\n     */\n    bulkAddOverlays(overlays) {\n        for (const overlay of overlays) {\n            this.#overlays.add(overlay);\n        }\n        void this.#overlays.update();\n    }\n    addOverlay(newOverlay) {\n        const overlay = this.#overlays.add(newOverlay);\n        void this.#overlays.update();\n        return overlay;\n    }\n    bulkRemoveOverlays(overlays) {\n        if (!overlays.length) {\n            return;\n        }\n        for (const overlay of overlays) {\n            this.#overlays.remove(overlay);\n        }\n        void this.#overlays.update();\n    }\n    removeOverlay(removedOverlay) {\n        this.#overlays.remove(removedOverlay);\n        void this.#overlays.update();\n    }\n    updateExistingOverlay(existingOverlay, newData) {\n        this.#overlays.updateExisting(existingOverlay, newData);\n        void this.#overlays.update();\n    }\n    enterLabelEditMode(overlay) {\n        this.#overlays.enterLabelEditMode(overlay);\n    }\n    onAddEntryLabelAnnotation(dataProvider, event) {\n        const selection = dataProvider.createSelection(event.data.entryIndex);\n        if (selection &&\n            (TimelineSelection.isTraceEventSelection(selection.object) ||\n                TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selection.object) ||\n                TimelineSelection.isLegacyTimelineFrame(selection.object))) {\n            this.setSelectionAndReveal(selection);\n            ModificationsManager.activeManager()?.createAnnotation({\n                type: 'ENTRY_LABEL',\n                entry: selection.object,\n                label: '',\n            });\n            if (event.data.withLinkCreationButton) {\n                this.onEntriesLinkAnnotationCreate(dataProvider, event.data.entryIndex, true);\n            }\n        }\n    }\n    onEntriesLinkAnnotationCreate(dataProvider, entryFromIndex, linkCreateButton) {\n        const fromSelectionObject = (entryFromIndex) ? this.#selectionIfTraceEvent(entryFromIndex, dataProvider) : null;\n        if (fromSelectionObject) {\n            this.#setLinkSelectionAnnotation({\n                type: 'ENTRIES_LINK',\n                entryFrom: fromSelectionObject,\n                state: (linkCreateButton) ? \"creation_not_started\" /* Trace.Types.File.EntriesLinkState.CREATION_NOT_STARTED */ :\n                    \"pending_to_event\" /* Trace.Types.File.EntriesLinkState.PENDING_TO_EVENT */,\n            });\n            if (this.#linkSelectionAnnotation) {\n                ModificationsManager.activeManager()?.createAnnotation(this.#linkSelectionAnnotation);\n            }\n        }\n    }\n    #selectionIfTraceEvent(index, dataProvider) {\n        const selection = dataProvider.createSelection(index);\n        if (!selection) {\n            return null;\n        }\n        if (TimelineSelection.isTraceEventSelection(selection.object) ||\n            TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selection.object)) {\n            return selection.object;\n        }\n        if (TimelineSelection.isLegacyTimelineFrame(selection.object)) {\n            return selection.object;\n        }\n        return null;\n    }\n    /**\n     * Called when the user either:\n     * 1. clicks with their mouse on an entry\n     * 2. Uses the keyboard and presses \"enter\" whilst an entry is selected\n     */\n    #onEntryInvoked(dataProvider, event) {\n        this.#updateSelectedEntryStatus(dataProvider, event);\n        const entryIndex = event.data;\n        // If we have a pending link connection, create it if we can now the final entry has been pressed.\n        if (this.#linkSelectionAnnotation) {\n            this.handleToEntryOfLinkBetweenEntriesSelection(entryIndex);\n        }\n    }\n    #updateSelectedEntryStatus(dataProvider, event) {\n        const data = dataProvider.timelineData();\n        if (!data) {\n            return;\n        }\n        const entryIndex = event.data;\n        const entryLevel = data.entryLevels[entryIndex];\n        // Find the group that contains this level and log a click for it.\n        const group = groupForLevel(data.groups, entryLevel);\n        if (group && group.jslogContext) {\n            const loggable = this.#loggableForGroupByLogContext.get(group.jslogContext) ?? null;\n            if (loggable) {\n                VisualLogging.logClick(loggable, new MouseEvent('click'));\n            }\n        }\n        dataProvider.buildFlowForInitiator(entryIndex);\n        this.delegate.select(dataProvider.createSelection(entryIndex));\n    }\n    /**\n     * This is invoked when the user uses their KEYBOARD ONLY to navigate between\n     * events.\n     * It IS NOT called when the user uses the mouse. See `onEntryInvoked`.\n     */\n    onEntrySelected(dataProvider, event) {\n        this.#updateSelectedEntryStatus(dataProvider, event);\n        // Update any pending link selection to point the entryTo to what the user has selected.\n        const entryIndex = event.data;\n        const toSelectionObject = this.#selectionIfTraceEvent(entryIndex, dataProvider);\n        if (toSelectionObject && toSelectionObject !== this.#linkSelectionAnnotation?.entryTo) {\n            this.updateLinkSelectionAnnotationWithToEntry(dataProvider, entryIndex);\n        }\n    }\n    handleToEntryOfLinkBetweenEntriesSelection(toIndex) {\n        // If there is a link annotation in the process of being created when an empty\n        // space in the Flamechart is clicked, delete the link being created.\n        //\n        // If an entry is clicked when a link between entries in created and the entry that an arrow\n        // is pointing to is earlier than the one it starts from, switch 'to' and 'from' entries to\n        // reverse the arrow.\n        if (this.#linkSelectionAnnotation && toIndex === -1) {\n            ModificationsManager.activeManager()?.removeAnnotation(this.#linkSelectionAnnotation);\n        }\n        else if (this.#linkSelectionAnnotation && this.#linkSelectionAnnotation?.entryTo &&\n            (this.#linkSelectionAnnotation?.entryFrom.ts > this.#linkSelectionAnnotation?.entryTo.ts)) {\n            const entryFrom = this.#linkSelectionAnnotation.entryFrom;\n            const entryTo = this.#linkSelectionAnnotation.entryTo;\n            this.#linkSelectionAnnotation.entryTo = entryFrom;\n            this.#linkSelectionAnnotation.entryFrom = entryTo;\n            ModificationsManager.activeManager()?.updateAnnotation(this.#linkSelectionAnnotation);\n        }\n        // Regardless of if the link in progress was deleted or the clicked entry is the final selection,\n        // set the link selection in progress to null so a new one is created if the an event to create\n        // of update the current link is dispatched.\n        this.#clearLinkSelectionAnnotation(false);\n    }\n    resizeToPreferredHeights() {\n        if (!this.isShowing()) {\n            this.needsResizeToPreferredHeights = true;\n            return;\n        }\n        this.needsResizeToPreferredHeights = false;\n        this.networkPane.element.classList.toggle('timeline-network-resizer-disabled', !this.networkDataProvider.isExpanded());\n        this.networkSplitWidget.setSidebarSize(this.networkDataProvider.preferredHeight() + this.splitResizer.clientHeight + PerfUI.FlameChart.RulerHeight +\n            2);\n    }\n    setSearchableView(searchableView) {\n        this.searchableView = searchableView;\n    }\n    // UI.SearchableView.Searchable implementation\n    searchResultIndexForEntryIndex(index) {\n        if (!this.searchResults) {\n            return -1;\n        }\n        return this.searchResults.findIndex(result => result.index === index);\n    }\n    jumpToNextSearchResult() {\n        if (!this.searchResults || !this.searchResults.length) {\n            return;\n        }\n        const index = typeof this.selectedSearchResult !== 'undefined' ? this.searchResults.indexOf(this.selectedSearchResult) : -1;\n        this.#selectSearchResult(Platform.NumberUtilities.mod(index + 1, this.searchResults.length));\n    }\n    jumpToPreviousSearchResult() {\n        if (!this.searchResults || !this.searchResults.length) {\n            return;\n        }\n        const index = typeof this.selectedSearchResult !== 'undefined' ? this.searchResults.indexOf(this.selectedSearchResult) : 0;\n        this.#selectSearchResult(Platform.NumberUtilities.mod(index - 1, this.searchResults.length));\n    }\n    supportsCaseSensitiveSearch() {\n        return true;\n    }\n    supportsRegexSearch() {\n        return true;\n    }\n    #selectSearchResult(searchResultIndex) {\n        this.searchableView.updateCurrentMatchIndex(searchResultIndex);\n        const matchedResult = this.searchResults?.at(searchResultIndex) ?? null;\n        if (!matchedResult) {\n            return;\n        }\n        switch (matchedResult.provider) {\n            case 'main': {\n                this.delegate.select(this.mainDataProvider.createSelection(matchedResult.index));\n                this.mainFlameChart.showPopoverForSearchResult(matchedResult.index);\n                break;\n            }\n            case 'network': {\n                this.delegate.select(this.networkDataProvider.createSelection(matchedResult.index));\n                this.networkFlameChart.showPopoverForSearchResult(matchedResult.index);\n                break;\n            }\n            case 'other':\n                // TimelineFlameChartView only has main/network so we can ignore.\n                break;\n            default:\n                Platform.assertNever(matchedResult.provider, `Unknown SearchResult[provider]: ${matchedResult.provider}`);\n        }\n        this.selectedSearchResult = matchedResult;\n    }\n    updateSearchResults(shouldJump, jumpBackwards) {\n        const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n        if (!traceBoundsState) {\n            return;\n        }\n        const oldSelectedSearchResult = this.selectedSearchResult;\n        delete this.selectedSearchResult;\n        this.searchResults = [];\n        this.mainFlameChart.removeSearchResultHighlights();\n        this.networkFlameChart.removeSearchResultHighlights();\n        if (!this.searchRegex) {\n            return;\n        }\n        const regExpFilter = new TimelineRegExp(this.searchRegex);\n        const visibleWindow = traceBoundsState.micro.timelineTraceWindow;\n        /**\n         * Get the matches for the user's search result. We search both providers\n         * but before storing the results we need to \"tag\" the results with the\n         * provider they came from. We do this so that when the user highlights a\n         * search result we know which flame chart to talk to to highlight it.\n         */\n        const mainMatches = this.mainDataProvider.search(visibleWindow, regExpFilter);\n        const networkMatches = this.networkDataProvider.search(visibleWindow, regExpFilter);\n        // Merge both result sets into one, sorted by start time. This means as the\n        // user navigates back/forwards they will do so in time order and not do\n        // all the main results before the network results, or some other\n        // unexpected ordering.\n        this.searchResults = mainMatches.concat(networkMatches).sort((m1, m2) => {\n            return m1.startTimeMilli - m2.startTimeMilli;\n        });\n        this.searchableView.updateSearchMatchesCount(this.searchResults.length);\n        // To avoid too many highlights when the search regex matches too many entries,\n        // for example, when user only types in \"e\" as the search query,\n        // We only highlight the search results when the number of matches is less than or equal to 200.\n        if (this.searchResults.length <= MAX_HIGHLIGHTED_SEARCH_ELEMENTS) {\n            this.mainFlameChart.highlightAllEntries(mainMatches.map(m => m.index));\n            this.networkFlameChart.highlightAllEntries(networkMatches.map(m => m.index));\n        }\n        if (!shouldJump || !this.searchResults.length) {\n            return;\n        }\n        let selectedIndex = this.#indexOfSearchResult(oldSelectedSearchResult);\n        if (selectedIndex === -1) {\n            selectedIndex = jumpBackwards ? this.searchResults.length - 1 : 0;\n        }\n        this.#selectSearchResult(selectedIndex);\n    }\n    #indexOfSearchResult(target) {\n        if (!target) {\n            return -1;\n        }\n        return this.searchResults?.findIndex(result => {\n            return result.provider === target.provider && result.index === target.index;\n        }) ??\n            -1;\n    }\n    /**\n     * Returns the indexes of the elements that matched the most recent\n     * query. Elements are indexed by the data provider and correspond\n     * to their position in the data provider entry data array.\n     * Public only for tests.\n     */\n    getSearchResults() {\n        return this.searchResults;\n    }\n    onSearchCanceled() {\n        if (typeof this.selectedSearchResult !== 'undefined') {\n            this.delegate.select(null);\n        }\n        delete this.searchResults;\n        delete this.selectedSearchResult;\n        delete this.searchRegex;\n        this.mainFlameChart.showPopoverForSearchResult(-1);\n        this.mainFlameChart.removeSearchResultHighlights();\n        this.networkFlameChart.showPopoverForSearchResult(-1);\n        this.networkFlameChart.removeSearchResultHighlights();\n    }\n    performSearch(searchConfig, shouldJump, jumpBackwards) {\n        this.searchRegex = searchConfig.toSearchRegex().regex;\n        this.updateSearchResults(shouldJump, jumpBackwards);\n    }\n    togglePopover({ event, show }) {\n        const entryIndex = this.mainDataProvider.indexForEvent(event);\n        if (show && entryIndex) {\n            this.mainFlameChart.setSelectedEntry(entryIndex);\n            this.mainFlameChart.showPopoverForSearchResult(entryIndex);\n        }\n        else {\n            this.mainFlameChart.hideHighlight();\n        }\n    }\n}\nexport class Selection {\n    timelineSelection;\n    entryIndex;\n    constructor(selection, entryIndex) {\n        this.timelineSelection = selection;\n        this.entryIndex = entryIndex;\n    }\n}\nexport const FlameChartStyle = {\n    textColor: '#333',\n};\nexport class TimelineFlameChartMarker {\n    startTimeInternal;\n    startOffset;\n    style;\n    constructor(startTime, startOffset, style) {\n        this.startTimeInternal = startTime;\n        this.startOffset = startOffset;\n        this.style = style;\n    }\n    startTime() {\n        return this.startTimeInternal;\n    }\n    color() {\n        return this.style.color;\n    }\n    title() {\n        if (this.style.lowPriority) {\n            return null;\n        }\n        const startTime = i18n.TimeUtilities.millisToString(this.startOffset);\n        return i18nString(UIStrings.sAtS, { PH1: this.style.title, PH2: startTime });\n    }\n    draw(context, x, height, pixelsPerMillisecond) {\n        const lowPriorityVisibilityThresholdInPixelsPerMs = 4;\n        if (this.style.lowPriority && pixelsPerMillisecond < lowPriorityVisibilityThresholdInPixelsPerMs) {\n            return;\n        }\n        if (!this.style.tall) {\n            return;\n        }\n        context.save();\n        context.strokeStyle = this.style.color;\n        context.lineWidth = this.style.lineWidth;\n        context.translate(this.style.lineWidth < 1 || (this.style.lineWidth & 1) ? 0.5 : 0, 0.5);\n        context.beginPath();\n        context.moveTo(x, 0);\n        context.setLineDash(this.style.dashStyle);\n        context.lineTo(x, context.canvas.height);\n        context.stroke();\n        context.restore();\n    }\n}\n/**\n * Find the Group that contains the provided level, or `null` if no group is\n * found.\n */\nexport function groupForLevel(groups, level) {\n    const groupForLevel = groups.find((group, groupIndex) => {\n        const nextGroup = groups.at(groupIndex + 1);\n        const groupEndLevel = nextGroup ? nextGroup.startLevel - 1 : Infinity;\n        return group.startLevel <= level && groupEndLevel >= level;\n    });\n    return groupForLevel ?? null;\n}\n//# sourceMappingURL=TimelineFlameChartView.js.map","/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as Components from './components/components.js';\nconst UIStrings = {\n    /**\n     *@description Short for Network. Label for the network requests section of the Performance panel.\n     */\n    net: 'NET',\n    /**\n     *@description Text in Timeline Event Overview of the Performance panel\n     */\n    cpu: 'CPU',\n    /**\n     *@description Text in Timeline Event Overview of the Performance panel\n     */\n    heap: 'HEAP',\n    /**\n     *@description Heap size label text content in Timeline Event Overview of the Performance panel\n     *@example {10 MB} PH1\n     *@example {30 MB} PH2\n     */\n    sSDash: '{PH1} – {PH2}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineEventOverview.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineEventOverview extends PerfUI.TimelineOverviewPane.TimelineOverviewBase {\n    constructor(id, title) {\n        super();\n        this.element.id = 'timeline-overview-' + id;\n        this.element.classList.add('overview-strip');\n        if (title) {\n            this.element.createChild('div', 'timeline-overview-strip-title').textContent = title;\n        }\n    }\n    renderBar(begin, end, position, height, color) {\n        const x = begin;\n        const width = end - begin;\n        const ctx = this.context();\n        ctx.fillStyle = color;\n        ctx.fillRect(x, position, width, height);\n    }\n}\nconst HIGH_NETWORK_PRIORITIES = new Set([\n    \"VeryHigh\" /* Protocol.Network.ResourcePriority.VeryHigh */,\n    \"High\" /* Protocol.Network.ResourcePriority.High */,\n    \"Medium\" /* Protocol.Network.ResourcePriority.Medium */,\n]);\nexport class TimelineEventOverviewNetwork extends TimelineEventOverview {\n    #parsedTrace;\n    constructor(parsedTrace) {\n        super('network', i18nString(UIStrings.net));\n        this.#parsedTrace = parsedTrace;\n    }\n    update(start, end) {\n        this.resetCanvas();\n        this.#renderWithParsedTrace(start, end);\n    }\n    #renderWithParsedTrace(start, end) {\n        if (!this.#parsedTrace) {\n            return;\n        }\n        // Because the UI is in milliseconds, we work with milliseconds through\n        // this function to get the right scale and sizing\n        const traceBoundsMilli = (start && end) ?\n            {\n                min: start,\n                max: end,\n                range: end - start,\n            } :\n            Trace.Helpers.Timing.traceWindowMilliSeconds(this.#parsedTrace.Meta.traceBounds);\n        // We draw two paths, so each can take up half the height\n        const pathHeight = this.height() / 2;\n        const canvasWidth = this.width();\n        const scale = canvasWidth / traceBoundsMilli.range;\n        // We draw network requests in two chunks:\n        // Requests with a priority of Medium or higher go onto the first path\n        // Other requests go onto the second path.\n        const highPath = new Path2D();\n        const lowPath = new Path2D();\n        for (const request of this.#parsedTrace.NetworkRequests.byTime) {\n            const path = HIGH_NETWORK_PRIORITIES.has(request.args.data.priority) ? highPath : lowPath;\n            const { startTime, endTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(request);\n            const rectStart = Math.max(Math.floor((startTime - traceBoundsMilli.min) * scale), 0);\n            const rectEnd = Math.min(Math.ceil((endTime - traceBoundsMilli.min) * scale + 1), canvasWidth);\n            path.rect(rectStart, 0, rectEnd - rectStart, pathHeight - 1);\n        }\n        const ctx = this.context();\n        ctx.save();\n        // Draw the high path onto the canvas.\n        ctx.fillStyle = 'hsl(214, 60%, 60%)';\n        ctx.fill(highPath);\n        // Now jump down by the height of the high path, and then draw the low path.\n        ctx.translate(0, pathHeight);\n        ctx.fillStyle = 'hsl(214, 80%, 80%)';\n        ctx.fill(lowPath);\n        ctx.restore();\n    }\n}\nconst categoryToIndex = new WeakMap();\nexport class TimelineEventOverviewCPUActivity extends TimelineEventOverview {\n    backgroundCanvas;\n    #parsedTrace;\n    #drawn = false;\n    #start;\n    #end;\n    constructor(parsedTrace) {\n        // During the sync tracks migration this component can use either legacy\n        // Performance Model data or the new engine's data. Once the migration is\n        // complete this will be updated to only use the new engine and mentions of\n        // the PerformanceModel will be removed.\n        super('cpu-activity', i18nString(UIStrings.cpu));\n        this.#parsedTrace = parsedTrace;\n        this.backgroundCanvas = this.element.createChild('canvas', 'fill background');\n        this.#start = Trace.Helpers.Timing.traceWindowMilliSeconds(parsedTrace.Meta.traceBounds).min;\n        this.#end = Trace.Helpers.Timing.traceWindowMilliSeconds(parsedTrace.Meta.traceBounds).max;\n    }\n    #entryCategory(entry) {\n        // Special case: in CPU Profiles we get a lot of ProfileCalls that\n        // represent Idle time. We typically represent ProfileCalls in the\n        // Scripting Category, but if they represent idle time, we do not want\n        // that.\n        if (Trace.Types.Events.isProfileCall(entry) && entry.callFrame.functionName === '(idle)') {\n            return Components.EntryStyles.EventCategory.IDLE;\n        }\n        const eventStyle = Components.EntryStyles.getEventStyle(entry.name)?.category ||\n            Components.EntryStyles.getCategoryStyles().other;\n        const categoryName = eventStyle.name;\n        return categoryName;\n    }\n    resetCanvas() {\n        super.resetCanvas();\n        this.#drawn = false;\n        this.backgroundCanvas.width = this.element.clientWidth * window.devicePixelRatio;\n        this.backgroundCanvas.height = this.element.clientHeight * window.devicePixelRatio;\n    }\n    #draw(parsedTrace) {\n        const quantSizePx = 4 * window.devicePixelRatio;\n        const width = this.width();\n        const height = this.height();\n        const baseLine = height;\n        const timeRange = this.#end - this.#start;\n        const scale = width / timeRange;\n        const quantTime = quantSizePx / scale;\n        const categories = Components.EntryStyles.getCategoryStyles();\n        const categoryOrder = Components.EntryStyles.getTimelineMainEventCategories();\n        const otherIndex = categoryOrder.indexOf(Components.EntryStyles.EventCategory.OTHER);\n        const idleIndex = 0;\n        console.assert(idleIndex === categoryOrder.indexOf(Components.EntryStyles.EventCategory.IDLE));\n        for (let i = 0; i < categoryOrder.length; ++i) {\n            categoryToIndex.set(categories[categoryOrder[i]], i);\n        }\n        const drawThreadEntries = (context, threadData) => {\n            const quantizer = new Quantizer(this.#start, quantTime, drawSample);\n            let x = 0;\n            const categoryIndexStack = [];\n            const paths = [];\n            const lastY = [];\n            for (let i = 0; i < categoryOrder.length; ++i) {\n                paths[i] = new Path2D();\n                paths[i].moveTo(0, height);\n                lastY[i] = height;\n            }\n            function drawSample(counters) {\n                let y = baseLine;\n                for (let i = idleIndex + 1; i < categoryOrder.length; ++i) {\n                    const h = (counters[i] || 0) / quantTime * height;\n                    y -= h;\n                    paths[i].bezierCurveTo(x, lastY[i], x, y, x + quantSizePx / 2, y);\n                    lastY[i] = y;\n                }\n                x += quantSizePx;\n            }\n            const onEntryStart = (entry) => {\n                const category = this.#entryCategory(entry);\n                if (!category || category === 'idle') {\n                    // Idle event won't show in CPU activity, so just skip them.\n                    return;\n                }\n                const startTimeMilli = Trace.Helpers.Timing.microSecondsToMilliseconds(entry.ts);\n                const index = categoryIndexStack.length ? categoryIndexStack[categoryIndexStack.length - 1] : idleIndex;\n                quantizer.appendInterval(startTimeMilli, index);\n                const categoryIndex = categoryOrder.indexOf(category);\n                categoryIndexStack.push(categoryIndex || otherIndex);\n            };\n            function onEntryEnd(entry) {\n                const endTimeMilli = Trace.Helpers.Timing.microSecondsToMilliseconds(entry.ts) +\n                    Trace.Helpers.Timing.microSecondsToMilliseconds(Trace.Types.Timing.MicroSeconds(entry.dur || 0));\n                const lastCategoryIndex = categoryIndexStack.pop();\n                if (endTimeMilli !== undefined && lastCategoryIndex) {\n                    quantizer.appendInterval(endTimeMilli, lastCategoryIndex);\n                }\n            }\n            const startMicro = Trace.Helpers.Timing.millisecondsToMicroseconds(this.#start);\n            const endMicro = Trace.Helpers.Timing.millisecondsToMicroseconds(this.#end);\n            const bounds = {\n                min: startMicro,\n                max: endMicro,\n                range: Trace.Types.Timing.MicroSeconds(endMicro - startMicro),\n            };\n            // Filter out tiny events - they don't make a visual impact to the\n            // canvas as they are so small, but they do impact the time it takes\n            // to walk the tree and render the events.\n            // However, if the entire range we are showing is 200ms or less, then show all events.\n            const minDuration = Trace.Types.Timing.MicroSeconds(bounds.range > 200_000 ? 16_000 : 0);\n            Trace.Helpers.TreeHelpers.walkEntireTree(threadData.entryToNode, threadData.tree, onEntryStart, onEntryEnd, bounds, minDuration);\n            quantizer.appendInterval(this.#start + timeRange + quantTime, idleIndex); // Kick drawing the last bucket.\n            for (let i = categoryOrder.length - 1; i > 0; --i) {\n                paths[i].lineTo(width, height);\n                const computedColorValue = categories[categoryOrder[i]].getComputedColorValue();\n                context.fillStyle = computedColorValue;\n                context.fill(paths[i]);\n                context.strokeStyle = 'white';\n                context.lineWidth = 1;\n                context.stroke(paths[i]);\n            }\n        };\n        const backgroundContext = this.backgroundCanvas.getContext('2d');\n        if (!backgroundContext) {\n            throw new Error('Could not find 2d canvas');\n        }\n        const threads = Trace.Handlers.Threads.threadsInTrace(parsedTrace);\n        const mainThreadContext = this.context();\n        for (const thread of threads) {\n            // We treat CPU_PROFILE as main thread because in a CPU Profile trace there is only ever one thread.\n            const isMainThread = thread.type === \"MAIN_THREAD\" /* Trace.Handlers.Threads.ThreadType.MAIN_THREAD */ ||\n                thread.type === \"CPU_PROFILE\" /* Trace.Handlers.Threads.ThreadType.CPU_PROFILE */;\n            if (isMainThread) {\n                drawThreadEntries(mainThreadContext, thread);\n            }\n            else {\n                drawThreadEntries(backgroundContext, thread);\n            }\n        }\n        function applyPattern(ctx) {\n            const step = 4 * window.devicePixelRatio;\n            ctx.save();\n            ctx.lineWidth = step / Math.sqrt(8);\n            for (let x = 0.5; x < width + height; x += step) {\n                ctx.moveTo(x, 0);\n                ctx.lineTo(x - height, height);\n            }\n            ctx.globalCompositeOperation = 'destination-out';\n            ctx.stroke();\n            ctx.restore();\n        }\n        applyPattern(backgroundContext);\n    }\n    update() {\n        const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n        const bounds = traceBoundsState?.milli.minimapTraceBounds;\n        if (!bounds) {\n            return;\n        }\n        if (bounds.min === this.#start && bounds.max === this.#end && this.#drawn) {\n            return;\n        }\n        this.#start = bounds.min;\n        this.#end = bounds.max;\n        // Order matters here, resetCanvas will set this.#drawn to false.\n        this.resetCanvas();\n        this.#drawn = true;\n        this.#draw(this.#parsedTrace);\n    }\n}\nexport class TimelineEventOverviewResponsiveness extends TimelineEventOverview {\n    #parsedTrace;\n    constructor(parsedTrace) {\n        super('responsiveness', null);\n        this.#parsedTrace = parsedTrace;\n    }\n    #gatherEventsWithRelevantWarnings() {\n        const { topLevelRendererIds } = this.#parsedTrace.Meta;\n        // All the warnings that we care about regarding responsiveness and want to represent on the overview.\n        const warningsForResponsiveness = new Set([\n            'LONG_TASK',\n            'FORCED_REFLOW',\n            'IDLE_CALLBACK_OVER_TIME',\n        ]);\n        const allWarningEvents = new Set();\n        for (const warning of warningsForResponsiveness) {\n            const eventsForWarning = this.#parsedTrace.Warnings.perWarning.get(warning);\n            if (!eventsForWarning) {\n                continue;\n            }\n            for (const event of eventsForWarning) {\n                // Only keep events whose PID is a top level renderer, which means it\n                // was on the main thread. This avoids showing issues from iframes or\n                // other sub-frames in the minimap overview.\n                if (topLevelRendererIds.has(event.pid)) {\n                    allWarningEvents.add(event);\n                }\n            }\n        }\n        return allWarningEvents;\n    }\n    update(start, end) {\n        this.resetCanvas();\n        const height = this.height();\n        const visibleTimeWindow = !(start && end) ? this.#parsedTrace.Meta.traceBounds : {\n            min: Trace.Helpers.Timing.millisecondsToMicroseconds(start),\n            max: Trace.Helpers.Timing.millisecondsToMicroseconds(end),\n            range: Trace.Helpers.Timing.millisecondsToMicroseconds(Trace.Types.Timing.MilliSeconds(end - start)),\n        };\n        const timeSpan = visibleTimeWindow.range;\n        const scale = this.width() / timeSpan;\n        const ctx = this.context();\n        const fillPath = new Path2D();\n        const markersPath = new Path2D();\n        const eventsWithWarning = this.#gatherEventsWithRelevantWarnings();\n        for (const event of eventsWithWarning) {\n            paintWarningDecoration(event);\n        }\n        ctx.fillStyle = 'hsl(0, 80%, 90%)';\n        ctx.strokeStyle = 'red';\n        ctx.lineWidth = 2 * window.devicePixelRatio;\n        ctx.fill(fillPath);\n        ctx.stroke(markersPath);\n        function paintWarningDecoration(event) {\n            const { startTime, duration } = Trace.Helpers.Timing.eventTimingsMicroSeconds(event);\n            const x = Math.round(scale * (startTime - visibleTimeWindow.min));\n            const width = Math.round(scale * duration);\n            fillPath.rect(x, 0, width, height);\n            markersPath.moveTo(x + width, 0);\n            markersPath.lineTo(x + width, height);\n        }\n    }\n}\nexport class TimelineFilmStripOverview extends TimelineEventOverview {\n    frameToImagePromise;\n    lastFrame = null;\n    lastElement;\n    drawGeneration;\n    emptyImage;\n    #filmStrip = null;\n    constructor(filmStrip) {\n        super('filmstrip', null);\n        this.element.setAttribute('jslog', `${VisualLogging.section('film-strip')}`);\n        this.frameToImagePromise = new Map();\n        this.#filmStrip = filmStrip;\n        this.lastFrame = null;\n        this.lastElement = null;\n        this.reset();\n    }\n    update(customStartTime, customEndTime) {\n        this.resetCanvas();\n        const frames = this.#filmStrip ? this.#filmStrip.frames : [];\n        if (!frames.length) {\n            return;\n        }\n        if (this.height() === 0) {\n            // Height of 0 causes the maths below to get off and generate very large\n            // negative numbers that cause an extremely long loop when attempting to\n            // draw images by frame. Rather than that, let's warn and exist early.\n            console.warn('TimelineFilmStrip could not be drawn as its canvas height is 0');\n            return;\n        }\n        const drawGeneration = Symbol('drawGeneration');\n        this.drawGeneration = drawGeneration;\n        void this.imageByFrame(frames[0]).then(image => {\n            if (this.drawGeneration !== drawGeneration) {\n                return;\n            }\n            if (!image || !image.naturalWidth || !image.naturalHeight) {\n                return;\n            }\n            const imageHeight = this.height() - 2 * TimelineFilmStripOverview.Padding;\n            const imageWidth = Math.ceil(imageHeight * image.naturalWidth / image.naturalHeight);\n            const popoverScale = Math.min(200 / image.naturalWidth, 1);\n            this.emptyImage = new Image(image.naturalWidth * popoverScale, image.naturalHeight * popoverScale);\n            this.drawFrames(imageWidth, imageHeight, customStartTime, customEndTime);\n        });\n    }\n    async imageByFrame(frame) {\n        let imagePromise = this.frameToImagePromise.get(frame);\n        if (!imagePromise) {\n            // TODO(paulirish): Adopt Util.ImageCache\n            imagePromise = UI.UIUtils.loadImage(frame.screenshotEvent.args.dataUri);\n            this.frameToImagePromise.set(frame, imagePromise);\n        }\n        return imagePromise;\n    }\n    drawFrames(imageWidth, imageHeight, customStartTime, customEndTime) {\n        if (!imageWidth) {\n            return;\n        }\n        if (!this.#filmStrip || this.#filmStrip.frames.length < 1) {\n            return;\n        }\n        const padding = TimelineFilmStripOverview.Padding;\n        const width = this.width();\n        const zeroTime = customStartTime ?? Trace.Helpers.Timing.microSecondsToMilliseconds(this.#filmStrip.zeroTime);\n        const spanTime = customEndTime ? customEndTime - zeroTime :\n            Trace.Helpers.Timing.microSecondsToMilliseconds(this.#filmStrip.spanTime);\n        const scale = spanTime / width;\n        const context = this.context();\n        const drawGeneration = this.drawGeneration;\n        context.beginPath();\n        for (let x = padding; x < width; x += imageWidth + 2 * padding) {\n            const time = Trace.Types.Timing.MilliSeconds(zeroTime + (x + imageWidth / 2) * scale);\n            const timeMicroSeconds = Trace.Helpers.Timing.millisecondsToMicroseconds(time);\n            const frame = Trace.Extras.FilmStrip.frameClosestToTimestamp(this.#filmStrip, timeMicroSeconds);\n            if (!frame) {\n                continue;\n            }\n            context.rect(x - 0.5, 0.5, imageWidth + 1, imageHeight + 1);\n            void this.imageByFrame(frame).then(drawFrameImage.bind(this, x));\n        }\n        context.strokeStyle = '#ddd';\n        context.stroke();\n        function drawFrameImage(x, image) {\n            // Ignore draws deferred from a previous update call.\n            if (this.drawGeneration !== drawGeneration || !image) {\n                return;\n            }\n            context.drawImage(image, x, 1, imageWidth, imageHeight);\n        }\n    }\n    async overviewInfoPromise(x) {\n        if (!this.#filmStrip || this.#filmStrip.frames.length === 0) {\n            return null;\n        }\n        const calculator = this.calculator();\n        if (!calculator) {\n            return null;\n        }\n        const timeMilliSeconds = Trace.Types.Timing.MilliSeconds(calculator.positionToTime(x));\n        const timeMicroSeconds = Trace.Helpers.Timing.millisecondsToMicroseconds(timeMilliSeconds);\n        const frame = Trace.Extras.FilmStrip.frameClosestToTimestamp(this.#filmStrip, timeMicroSeconds);\n        if (frame === this.lastFrame) {\n            return this.lastElement;\n        }\n        const imagePromise = frame ? this.imageByFrame(frame) : Promise.resolve(this.emptyImage);\n        const image = await imagePromise;\n        const element = document.createElement('div');\n        element.classList.add('frame');\n        if (image) {\n            element.createChild('div', 'thumbnail').appendChild(image);\n        }\n        this.lastFrame = frame;\n        this.lastElement = element;\n        return element;\n    }\n    reset() {\n        this.lastFrame = null;\n        this.lastElement = null;\n        this.frameToImagePromise = new Map();\n    }\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    static Padding = 2;\n}\nexport class TimelineEventOverviewMemory extends TimelineEventOverview {\n    heapSizeLabel;\n    #parsedTrace;\n    constructor(parsedTrace) {\n        super('memory', i18nString(UIStrings.heap));\n        this.heapSizeLabel = this.element.createChild('div', 'memory-graph-label');\n        this.#parsedTrace = parsedTrace;\n    }\n    resetHeapSizeLabels() {\n        this.heapSizeLabel.textContent = '';\n    }\n    update(start, end) {\n        this.resetCanvas();\n        const ratio = window.devicePixelRatio;\n        if (this.#parsedTrace.Memory.updateCountersByProcess.size === 0) {\n            this.resetHeapSizeLabels();\n            return;\n        }\n        const mainRendererIds = Array.from(this.#parsedTrace.Meta.topLevelRendererIds);\n        const counterEventsPerTrack = mainRendererIds.map(pid => this.#parsedTrace.Memory.updateCountersByProcess.get(pid) || [])\n            .filter(eventsPerRenderer => eventsPerRenderer.length > 0);\n        const lowerOffset = 3 * ratio;\n        let maxUsedHeapSize = 0;\n        let minUsedHeapSize = 100000000000;\n        const boundsMs = (start && end) ? {\n            min: start,\n            max: end,\n            range: end - start,\n        } :\n            Trace.Helpers.Timing.traceWindowMilliSeconds(this.#parsedTrace.Meta.traceBounds);\n        const minTime = boundsMs.min;\n        const maxTime = boundsMs.max;\n        function calculateMinMaxSizes(event) {\n            const counters = event.args.data;\n            if (!counters || !counters.jsHeapSizeUsed) {\n                return;\n            }\n            maxUsedHeapSize = Math.max(maxUsedHeapSize, counters.jsHeapSizeUsed);\n            minUsedHeapSize = Math.min(minUsedHeapSize, counters.jsHeapSizeUsed);\n        }\n        for (let i = 0; i < counterEventsPerTrack.length; i++) {\n            counterEventsPerTrack[i].forEach(calculateMinMaxSizes);\n        }\n        minUsedHeapSize = Math.min(minUsedHeapSize, maxUsedHeapSize);\n        const lineWidth = 1;\n        const width = this.width();\n        const height = this.height() - lowerOffset;\n        const xFactor = width / (maxTime - minTime);\n        const yFactor = (height - lineWidth) / Math.max(maxUsedHeapSize - minUsedHeapSize, 1);\n        const histogram = new Array(width);\n        function buildHistogram(event) {\n            const counters = event.args.data;\n            if (!counters || !counters.jsHeapSizeUsed) {\n                return;\n            }\n            const { startTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n            const x = Math.round((startTime - minTime) * xFactor);\n            const y = Math.round((counters.jsHeapSizeUsed - minUsedHeapSize) * yFactor);\n            histogram[x] = Math.max(histogram[x] || 0, y);\n        }\n        for (let i = 0; i < counterEventsPerTrack.length; i++) {\n            counterEventsPerTrack[i].forEach(buildHistogram);\n        }\n        const ctx = this.context();\n        const heightBeyondView = height + lowerOffset + lineWidth;\n        ctx.translate(0.5, 0.5);\n        ctx.beginPath();\n        ctx.moveTo(-lineWidth, heightBeyondView);\n        let y = 0;\n        let isFirstPoint = true;\n        let lastX = 0;\n        for (let x = 0; x < histogram.length; x++) {\n            if (typeof histogram[x] === 'undefined') {\n                continue;\n            }\n            if (isFirstPoint) {\n                isFirstPoint = false;\n                y = histogram[x];\n                ctx.lineTo(-lineWidth, height - y);\n            }\n            const nextY = histogram[x];\n            if (Math.abs(nextY - y) > 2 && Math.abs(x - lastX) > 1) {\n                ctx.lineTo(x, height - y);\n            }\n            y = nextY;\n            ctx.lineTo(x, height - y);\n            lastX = x;\n        }\n        ctx.lineTo(width + lineWidth, height - y);\n        ctx.lineTo(width + lineWidth, heightBeyondView);\n        ctx.closePath();\n        ctx.fillStyle = 'hsla(220, 90%, 70%, 0.2)';\n        ctx.fill();\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = 'hsl(220, 90%, 70%)';\n        ctx.stroke();\n        this.heapSizeLabel.textContent = i18nString(UIStrings.sSDash, {\n            PH1: Platform.NumberUtilities.bytesToString(minUsedHeapSize),\n            PH2: Platform.NumberUtilities.bytesToString(maxUsedHeapSize),\n        });\n    }\n}\nexport class Quantizer {\n    lastTime;\n    quantDuration;\n    callback;\n    counters;\n    remainder;\n    constructor(startTime, quantDuration, callback) {\n        this.lastTime = startTime;\n        this.quantDuration = quantDuration;\n        this.callback = callback;\n        this.counters = [];\n        this.remainder = quantDuration;\n    }\n    appendInterval(time, group) {\n        let interval = time - this.lastTime;\n        if (interval <= this.remainder) {\n            this.counters[group] = (this.counters[group] || 0) + interval;\n            this.remainder -= interval;\n            this.lastTime = time;\n            return;\n        }\n        this.counters[group] = (this.counters[group] || 0) + this.remainder;\n        this.callback(this.counters);\n        interval -= this.remainder;\n        while (interval >= this.quantDuration) {\n            const counters = [];\n            counters[group] = this.quantDuration;\n            this.callback(counters);\n            interval -= this.quantDuration;\n        }\n        this.counters = [];\n        this.counters[group] = interval;\n        this.lastTime = time;\n        this.remainder = this.quantDuration - interval;\n    }\n}\n//# sourceMappingURL=TimelineEventOverview.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.drop-down {\n  box-shadow: var(--drop-shadow);\n  background: var(--sys-color-cdt-base-container);\n}\n\n.preview-item {\n  border-bottom: 1px solid var(--sys-color-divider);\n\n  &:first-child {\n    border-top: 1px solid var(--sys-color-divider);\n  }\n\n  padding: 6px 10px;\n  position: relative;\n\n  .time {\n    margin-left: 3px;\n  }\n\n  /* done this way because if we have a border it\n   * awkwardly merges in a diagonal with the top and\n   * bottom border */\n  &.selected::before {\n    content: \" \";\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    width: 2px;\n    background-color: var(--sys-color-primary);\n  }\n}\n\n.preview-item canvas {\n  width: 100%;\n  height: 100%;\n}\n\n.text-details > span {\n  flex: 1 0;\n  padding-left: var(--sys-size-5);\n  padding-right: var(--sys-size-5);\n}\n\n.text-details .name {\n  font: var(--sys-typescale-body4-medium);\n}\n\n.text-details span.time {\n  color: var(--sys-color-token-subtle);\n  font: var(--sys-typescale-body4-regular);\n  text-align: right;\n}\n\n.screenshot-thumb {\n  display: flex;\n  border: 1px solid var(--sys-color-surface3);\n  margin: 2px 4px;\n}\n\n.screenshot-thumb img {\n  margin: auto;\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.landing-page-item {\n  font: var(--sys-typescale-body4-regular);\n  display: flex;\n  align-items: center;\n  gap: var(--sys-size-5);\n}\n\n/*# sourceURL=timelineHistoryManager.css */\n`);\n\nexport default styles;\n","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as CrUXManager from '../../models/crux-manager/crux-manager.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { TimelineEventOverviewCPUActivity, TimelineEventOverviewNetwork, TimelineEventOverviewResponsiveness, } from './TimelineEventOverview.js';\nimport timelineHistoryManagerStyles from './timelineHistoryManager.css.js';\n/**\n * The dropdown works by returning an index which is the trace index; but we\n * also need a way to signify that the user picked the \"Landing Page\" option. We\n * represent that as Infinity so we never accidentally collide with an actual\n * trace (in reality a large number like 99 would probably suffice...)\n */\nexport const LANDING_PAGE_INDEX_DROPDOWN_CHOICE = Infinity;\nconst UIStrings = {\n    /**\n     *@description Screen reader label for the Timeline History dropdown button\n     *@example {example.com #3} PH1\n     *@example {Show recent timeline sessions} PH2\n     */\n    currentSessionSS: 'Current session: {PH1}. {PH2}',\n    /**\n     *@description the title shown when the user is viewing the landing page which is showing live performance metrics that are updated automatically.\n     */\n    landingPageTitle: 'Live metrics',\n    /**\n     *@description Text that shows there is no recording\n     */\n    noRecordings: '(no recordings)',\n    /**\n     *@description Text in Timeline History Manager of the Performance panel\n     *@example {2s} PH1\n     */\n    sAgo: '({PH1} ago)',\n    /**\n     *@description Text in Timeline History Manager of the Performance panel\n     */\n    moments: 'moments',\n    /**\n     * @description Text in Timeline History Manager of the Performance panel.\n     * Placeholder is a number and the 'm' is the short form for 'minutes'.\n     * @example {2} PH1\n     */\n    sM: '{PH1} m',\n    /**\n     * @description Text in Timeline History Manager of the Performance panel.\n     * Placeholder is a number and the 'h' is the short form for 'hours'.\n     * @example {2} PH1\n     */\n    sH: '{PH1} h',\n    /**\n     *@description Text in Timeline History Manager of the Performance panel\n     *@example {example.com} PH1\n     *@example {2} PH2\n     */\n    sD: '{PH1} #{PH2}',\n    /**\n     *@description Accessible label for the timeline session selection menu\n     */\n    selectTimelineSession: 'Select timeline session',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineHistoryManager.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineHistoryManager {\n    recordings;\n    action;\n    nextNumberByDomain;\n    buttonInternal;\n    allOverviews;\n    totalHeight;\n    enabled;\n    lastActiveTrace = null;\n    #minimapComponent;\n    constructor(minimapComponent) {\n        this.recordings = [];\n        this.#minimapComponent = minimapComponent;\n        this.action = UI.ActionRegistry.ActionRegistry.instance().getAction('timeline.show-history');\n        this.nextNumberByDomain = new Map();\n        this.buttonInternal = new ToolbarButton(this.action);\n        UI.ARIAUtils.markAsMenuButton(this.buttonInternal.element);\n        this.clear();\n        // Attempt to reuse the overviews coming from the panel's minimap\n        // before creating new instances.\n        this.allOverviews = [\n            {\n                constructor: parsedTrace => {\n                    const responsivenessOverviewFromMinimap = this.#minimapComponent?.getControls().find(control => control instanceof TimelineEventOverviewResponsiveness);\n                    return responsivenessOverviewFromMinimap || new TimelineEventOverviewResponsiveness(parsedTrace);\n                },\n                height: 3,\n            },\n            {\n                constructor: parsedTrace => {\n                    const cpuOverviewFromMinimap = this.#minimapComponent?.getControls().find(control => control instanceof TimelineEventOverviewCPUActivity);\n                    if (cpuOverviewFromMinimap) {\n                        return cpuOverviewFromMinimap;\n                    }\n                    return new TimelineEventOverviewCPUActivity(parsedTrace);\n                },\n                height: 20,\n            },\n            {\n                constructor: parsedTrace => {\n                    const networkOverviewFromMinimap = this.#minimapComponent?.getControls().find(control => control instanceof TimelineEventOverviewNetwork);\n                    return networkOverviewFromMinimap || new TimelineEventOverviewNetwork(parsedTrace);\n                },\n                height: 8,\n            },\n        ];\n        this.totalHeight = this.allOverviews.reduce((acc, entry) => acc + entry.height, 0);\n        this.enabled = true;\n        CrUXManager.CrUXManager.instance().addEventListener(\"field-data-changed\" /* CrUXManager.Events.FIELD_DATA_CHANGED */, () => {\n            this.#updateLandingPageTitleIfActive();\n        });\n    }\n    /**\n     * If the user changes the CrUX consent status, the title shown in the\n     * dropdown could be outdated, as we show \"Local\" or \"Local and field\"\n     * depending on if the user has consented.\n     * This method will be called whenever the CrUXManager detects a change, and\n     * we use it as a chance to re-evaluate if the title needs changing or not.\n     */\n    #updateLandingPageTitleIfActive() {\n        if (this.lastActiveTrace?.type === 'LANDING_PAGE') {\n            const title = this.title(this.lastActiveTrace);\n            this.buttonInternal.setTitle(title);\n            this.buttonInternal.setText(title);\n        }\n    }\n    addRecording(newInput) {\n        const filmStrip = newInput.filmStripForPreview;\n        this.lastActiveTrace = newInput.data;\n        this.recordings.unshift(newInput.data);\n        // Order is important: this needs to happen first because lots of the\n        // subsequent code depends on us storing the preview data into the map.\n        this.#buildAndStorePreviewData(newInput.data.parsedTraceIndex, newInput.parsedTrace, filmStrip, newInput.startTime);\n        const modelTitle = this.title(newInput.data);\n        this.buttonInternal.setText(modelTitle);\n        const buttonTitle = this.action.title();\n        UI.ARIAUtils.setLabel(this.buttonInternal.element, i18nString(UIStrings.currentSessionSS, { PH1: modelTitle, PH2: buttonTitle }));\n        this.updateState();\n        if (this.recordings.length <= maxRecordings) {\n            return;\n        }\n        const modelUsedMoreTimeAgo = this.recordings.reduce((a, b) => lastUsedTime(a.parsedTraceIndex) < lastUsedTime(b.parsedTraceIndex) ? a : b);\n        this.recordings.splice(this.recordings.indexOf(modelUsedMoreTimeAgo), 1);\n        function lastUsedTime(index) {\n            const data = TimelineHistoryManager.dataForTraceIndex(index);\n            if (!data) {\n                throw new Error('Unable to find data for model');\n            }\n            return data.lastUsed;\n        }\n    }\n    setEnabled(enabled) {\n        this.enabled = enabled;\n        this.updateState();\n    }\n    button() {\n        return this.buttonInternal;\n    }\n    clear() {\n        this.recordings = [];\n        this.lastActiveTrace = null;\n        this.updateState();\n        this.buttonInternal.setText(i18nString(UIStrings.noRecordings));\n        this.nextNumberByDomain.clear();\n    }\n    /**\n     * If the observations landing page experiment is enabled, we show the\n     * dropdown when there is 1 or more traces active, as even with 1 trace we\n     * need to give the user a way to get back to the index page. However, if that\n     * experiment is disabled, there is no need to show the dropdown until there\n     * are 2+ traces.\n     */\n    #minimumRequiredRecordings() {\n        if (Root.Runtime.experiments.isEnabled(\"timeline-observations\" /* Root.Runtime.ExperimentName.TIMELINE_OBSERVATIONS */)) {\n            return 1;\n        }\n        return 2;\n    }\n    #getActiveTraceIndexForListControl() {\n        if (!this.lastActiveTrace) {\n            return -1;\n        }\n        if (this.lastActiveTrace.type === 'LANDING_PAGE') {\n            return LANDING_PAGE_INDEX_DROPDOWN_CHOICE;\n        }\n        return this.lastActiveTrace.parsedTraceIndex;\n    }\n    async showHistoryDropDown() {\n        if (this.recordings.length < this.#minimumRequiredRecordings() || !this.enabled) {\n            return null;\n        }\n        // DropDown.show() function finishes when the dropdown menu is closed via selection or losing focus\n        const activeTraceIndex = await DropDown.show(this.recordings.map(recording => recording.parsedTraceIndex), this.#getActiveTraceIndexForListControl(), this.buttonInternal.element);\n        if (activeTraceIndex === null) {\n            return null;\n        }\n        // The ListControl class that backs the dropdown uses indexes; we represent\n        // the landing page choice via this special index.\n        if (activeTraceIndex === LANDING_PAGE_INDEX_DROPDOWN_CHOICE) {\n            this.#setActiveTrace({ type: 'LANDING_PAGE' });\n            return { type: 'LANDING_PAGE' };\n        }\n        const index = this.recordings.findIndex(recording => recording.parsedTraceIndex === activeTraceIndex);\n        if (index < 0) {\n            console.assert(false, 'selected recording not found');\n            return null;\n        }\n        this.#setActiveTrace(this.recordings[index]);\n        return this.recordings[index];\n    }\n    cancelIfShowing() {\n        DropDown.cancelIfShowing();\n    }\n    /**\n     * Navigate by 1 in either direction to the next trace.\n     * Navigating in this way does not include the landing page; it will loop\n     * over only the traces.\n     */\n    navigate(direction) {\n        if (!this.enabled || this.lastActiveTrace === null) {\n            return null;\n        }\n        if (!this.lastActiveTrace || this.lastActiveTrace.type === 'LANDING_PAGE') {\n            return null;\n        }\n        const index = this.recordings.findIndex(recording => {\n            return this.lastActiveTrace?.type === 'TRACE_INDEX' && recording.type === 'TRACE_INDEX' &&\n                recording.parsedTraceIndex === this.lastActiveTrace.parsedTraceIndex;\n        });\n        if (index < 0) {\n            return null;\n        }\n        const newIndex = Platform.NumberUtilities.clamp(index + direction, 0, this.recordings.length - 1);\n        this.#setActiveTrace(this.recordings[newIndex]);\n        return this.recordings[newIndex];\n    }\n    #setActiveTrace(item) {\n        if (item.type === 'TRACE_INDEX') {\n            const data = TimelineHistoryManager.dataForTraceIndex(item.parsedTraceIndex);\n            if (!data) {\n                throw new Error('Unable to find data for model');\n            }\n            data.lastUsed = Date.now();\n        }\n        this.lastActiveTrace = item;\n        const modelTitle = this.title(item);\n        const buttonTitle = this.action.title();\n        this.buttonInternal.setText(modelTitle);\n        UI.ARIAUtils.setLabel(this.buttonInternal.element, i18nString(UIStrings.currentSessionSS, { PH1: modelTitle, PH2: buttonTitle }));\n    }\n    updateState() {\n        this.action.setEnabled(this.recordings.length >= this.#minimumRequiredRecordings() && this.enabled);\n    }\n    static previewElement(parsedTraceIndex) {\n        const data = TimelineHistoryManager.dataForTraceIndex(parsedTraceIndex);\n        if (!data) {\n            throw new Error('Unable to find data for model');\n        }\n        const startedAt = data.startTime;\n        data.time.textContent =\n            startedAt ? i18nString(UIStrings.sAgo, { PH1: TimelineHistoryManager.coarseAge(startedAt) }) : '';\n        return data.preview;\n    }\n    static coarseAge(time) {\n        const seconds = Math.round((Date.now() - time) / 1000);\n        if (seconds < 50) {\n            return i18nString(UIStrings.moments);\n        }\n        const minutes = Math.round(seconds / 60);\n        if (minutes < 50) {\n            return i18nString(UIStrings.sM, { PH1: minutes });\n        }\n        const hours = Math.round(minutes / 60);\n        return i18nString(UIStrings.sH, { PH1: hours });\n    }\n    title(item) {\n        if (item.type === 'LANDING_PAGE') {\n            return i18nString(UIStrings.landingPageTitle);\n        }\n        const data = TimelineHistoryManager.dataForTraceIndex(item.parsedTraceIndex);\n        if (!data) {\n            throw new Error('Unable to find data for model');\n        }\n        return data.title;\n    }\n    #buildAndStorePreviewData(parsedTraceIndex, parsedTrace, filmStrip, startTime) {\n        const parsedURL = Common.ParsedURL.ParsedURL.fromString(parsedTrace.Meta.mainFrameURL);\n        const domain = parsedURL ? parsedURL.host : '';\n        const sequenceNumber = this.nextNumberByDomain.get(domain) || 1;\n        const titleWithSequenceNumber = i18nString(UIStrings.sD, { PH1: domain, PH2: sequenceNumber });\n        this.nextNumberByDomain.set(domain, sequenceNumber + 1);\n        const timeElement = document.createElement('span');\n        timeElement.classList.add('time');\n        const preview = document.createElement('div');\n        preview.classList.add('preview-item');\n        preview.classList.add('vbox');\n        preview.setAttribute('jslog', `${VisualLogging.dropDown('timeline.history-item').track({ click: true })}`);\n        const data = {\n            preview,\n            title: titleWithSequenceNumber,\n            time: timeElement,\n            lastUsed: Date.now(),\n            startTime,\n        };\n        parsedTraceIndexToPerformancePreviewData.set(parsedTraceIndex, data);\n        preview.appendChild(this.#buildTextDetails(parsedTrace, domain, timeElement));\n        const screenshotAndOverview = preview.createChild('div', 'hbox');\n        screenshotAndOverview.appendChild(this.#buildScreenshotThumbnail(filmStrip));\n        screenshotAndOverview.appendChild(this.#buildOverview(parsedTrace));\n        return data.preview;\n    }\n    #buildTextDetails(parsedTrace, title, timeElement) {\n        const container = document.createElement('div');\n        container.classList.add('text-details');\n        container.classList.add('hbox');\n        const nameSpan = container.createChild('span', 'name');\n        nameSpan.textContent = title;\n        UI.ARIAUtils.setLabel(nameSpan, title);\n        const bounds = Trace.Helpers.Timing.traceWindowMilliSeconds(parsedTrace.Meta.traceBounds);\n        const duration = i18n.TimeUtilities.millisToString(bounds.range, false);\n        const timeContainer = container.createChild('span', 'time');\n        timeContainer.appendChild(document.createTextNode(duration));\n        timeContainer.appendChild(timeElement);\n        return container;\n    }\n    #buildScreenshotThumbnail(filmStrip) {\n        const container = document.createElement('div');\n        container.classList.add('screenshot-thumb');\n        const thumbnailAspectRatio = 3 / 2;\n        container.style.width = this.totalHeight * thumbnailAspectRatio + 'px';\n        container.style.height = this.totalHeight + 'px';\n        if (!filmStrip) {\n            return container;\n        }\n        const lastFrame = filmStrip.frames.at(-1);\n        if (!lastFrame) {\n            return container;\n        }\n        // TODO(paulirish): Adopt Util.ImageCache\n        void UI.UIUtils.loadImage(lastFrame.screenshotEvent.args.dataUri).then(img => {\n            if (img) {\n                container.appendChild(img);\n            }\n        });\n        return container;\n    }\n    #buildOverview(parsedTrace) {\n        const container = document.createElement('div');\n        const dPR = window.devicePixelRatio;\n        container.style.width = previewWidth + 'px';\n        container.style.height = this.totalHeight + 'px';\n        const canvas = container.createChild('canvas');\n        canvas.width = dPR * previewWidth;\n        canvas.height = dPR * this.totalHeight;\n        const ctx = canvas.getContext('2d');\n        let yOffset = 0;\n        for (const overview of this.allOverviews) {\n            const timelineOverviewComponent = overview.constructor(parsedTrace);\n            timelineOverviewComponent.update();\n            if (ctx) {\n                ctx.drawImage(timelineOverviewComponent.context().canvas, 0, yOffset, dPR * previewWidth, overview.height * dPR);\n            }\n            yOffset += overview.height * dPR;\n        }\n        return container;\n    }\n    static dataForTraceIndex(index) {\n        return parsedTraceIndexToPerformancePreviewData.get(index) || null;\n    }\n}\nexport const maxRecordings = 5;\nexport const previewWidth = 450;\n// The reason we store a global map is because the Dropdown component needs to\n// be able to read the preview data in order to show a preview in the dropdown.\nconst parsedTraceIndexToPerformancePreviewData = new Map();\nexport class DropDown {\n    glassPane;\n    listControl;\n    focusRestorer;\n    selectionDone;\n    constructor(availableparsedTraceIndexes) {\n        this.glassPane = new UI.GlassPane.GlassPane();\n        this.glassPane.setSizeBehavior(\"MeasureContent\" /* UI.GlassPane.SizeBehavior.MEASURE_CONTENT */);\n        this.glassPane.setOutsideClickCallback(() => this.close(null));\n        this.glassPane.setPointerEventsBehavior(\"BlockedByGlassPane\" /* UI.GlassPane.PointerEventsBehavior.BLOCKED_BY_GLASS_PANE */);\n        this.glassPane.setAnchorBehavior(\"PreferBottom\" /* UI.GlassPane.AnchorBehavior.PREFER_BOTTOM */);\n        this.glassPane.element.addEventListener('blur', () => this.close(null));\n        const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(this.glassPane.contentElement, {\n            cssFile: [timelineHistoryManagerStyles],\n            delegatesFocus: undefined,\n        });\n        const contentElement = shadowRoot.createChild('div', 'drop-down');\n        const listModel = new UI.ListModel.ListModel();\n        this.listControl = new UI.ListControl.ListControl(listModel, this, UI.ListControl.ListMode.NonViewport);\n        this.listControl.element.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n        listModel.replaceAll(availableparsedTraceIndexes);\n        UI.ARIAUtils.markAsMenu(this.listControl.element);\n        UI.ARIAUtils.setLabel(this.listControl.element, i18nString(UIStrings.selectTimelineSession));\n        contentElement.appendChild(this.listControl.element);\n        contentElement.addEventListener('keydown', this.onKeyDown.bind(this), false);\n        contentElement.addEventListener('click', this.onClick.bind(this), false);\n        this.focusRestorer = new UI.UIUtils.ElementFocusRestorer(this.listControl.element);\n        this.selectionDone = null;\n    }\n    static show(availableparsedTraceIndexes, activeparsedTraceIndex, anchor) {\n        if (DropDown.instance) {\n            return Promise.resolve(null);\n        }\n        const availableDropdownChoices = [...availableparsedTraceIndexes];\n        if (Root.Runtime.experiments.isEnabled(\"timeline-observations\" /* Root.Runtime.ExperimentName.TIMELINE_OBSERVATIONS */)) {\n            availableDropdownChoices.unshift(LANDING_PAGE_INDEX_DROPDOWN_CHOICE);\n        }\n        const instance = new DropDown(availableDropdownChoices);\n        return instance.show(anchor, activeparsedTraceIndex);\n    }\n    static cancelIfShowing() {\n        if (!DropDown.instance) {\n            return;\n        }\n        DropDown.instance.close(null);\n    }\n    show(anchor, activeparsedTraceIndex) {\n        DropDown.instance = this;\n        this.glassPane.setContentAnchorBox(anchor.boxInWindow());\n        this.glassPane.show(this.glassPane.contentElement.ownerDocument);\n        this.listControl.element.focus();\n        this.listControl.selectItem(activeparsedTraceIndex);\n        return new Promise(fulfill => {\n            this.selectionDone = fulfill;\n        });\n    }\n    onMouseMove(event) {\n        const node = event.target.enclosingNodeOrSelfWithClass('preview-item');\n        const listItem = node && this.listControl.itemForNode(node);\n        if (listItem === null) {\n            return;\n        }\n        this.listControl.selectItem(listItem);\n    }\n    onClick(event) {\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // @ts-expect-error\n        if (!(event.target).enclosingNodeOrSelfWithClass('preview-item')) {\n            return;\n        }\n        this.close(this.listControl.selectedItem());\n    }\n    onKeyDown(event) {\n        switch (event.key) {\n            case 'Tab':\n            case 'Escape':\n                this.close(null);\n                break;\n            case 'Enter':\n                this.close(this.listControl.selectedItem());\n                break;\n            default:\n                return;\n        }\n        event.consume(true);\n    }\n    close(traceIndex) {\n        if (this.selectionDone) {\n            this.selectionDone(traceIndex);\n        }\n        this.focusRestorer.restore();\n        this.glassPane.hide();\n        DropDown.instance = null;\n    }\n    createElementForItem(parsedTraceIndex) {\n        if (parsedTraceIndex === LANDING_PAGE_INDEX_DROPDOWN_CHOICE) {\n            return this.#createLandingPageListItem();\n        }\n        const element = TimelineHistoryManager.previewElement(parsedTraceIndex);\n        UI.ARIAUtils.markAsMenuItem(element);\n        element.classList.remove('selected');\n        return element;\n    }\n    #createLandingPageListItem() {\n        const div = document.createElement('div');\n        UI.ARIAUtils.markAsMenuItem(div);\n        div.classList.remove('selected');\n        div.classList.add('preview-item');\n        div.classList.add('landing-page-item');\n        const icon = IconButton.Icon.create('arrow-back');\n        div.appendChild(icon);\n        const text = document.createElement('span');\n        text.innerText = i18nString(UIStrings.landingPageTitle);\n        div.appendChild(text);\n        return div;\n    }\n    heightForItem(_parsedTraceIndex) {\n        console.assert(false, 'Should not be called');\n        return 0;\n    }\n    isItemSelectable(_parsedTraceIndex) {\n        return true;\n    }\n    selectedItemChanged(_from, _to, fromElement, toElement) {\n        if (fromElement) {\n            fromElement.classList.remove('selected');\n        }\n        if (toElement) {\n            toElement.classList.add('selected');\n        }\n    }\n    updateSelectedItemARIA(_fromElement, _toElement) {\n        return false;\n    }\n    static instance = null;\n}\nexport class ToolbarButton extends UI.Toolbar.ToolbarItem {\n    contentElement;\n    constructor(action) {\n        const element = document.createElement('button');\n        element.classList.add('history-dropdown-button');\n        element.setAttribute('jslog', `${VisualLogging.dropDown('history')}`);\n        super(element);\n        this.contentElement = this.element.createChild('span', 'content');\n        this.element.addEventListener('click', () => void action.execute(), false);\n        this.setEnabled(action.enabled());\n        action.addEventListener(\"Enabled\" /* UI.ActionRegistration.Events.ENABLED */, event => this.setEnabled(event.data));\n        this.setTitle(action.title());\n    }\n    setText(text) {\n        this.contentElement.textContent = text;\n    }\n}\n//# sourceMappingURL=TimelineHistoryManager.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Components from './components/components.js';\nconst UIStrings = {\n    /**\n     * @description Text for an option to learn more about something\n     */\n    learnmore: 'Learn more',\n    /**\n     * @description Text in Timeline Panel of the Performance panel\n     */\n    wasd: 'WASD',\n    /**\n     * @description Text in Timeline Panel of the Performance panel\n     * @example {record} PH1\n     * @example {Ctrl + R} PH2\n     */\n    clickTheRecordButtonSOrHitSTo: 'Click the record button {PH1} or hit {PH2} to start a new recording.',\n    /**\n     * @description Text in Timeline Panel of the Performance panel\n     * @example {reload button} PH1\n     * @example {Ctrl + R} PH2\n     */\n    clickTheReloadButtonSOrHitSTo: 'Click the reload button {PH1} or hit {PH2} to record the page load.',\n    /**\n     * @description Text in Timeline Panel of the Performance panel\n     * @example {Ctrl + U} PH1\n     * @example {Learn more} PH2\n     */\n    afterRecordingSelectAnAreaOf: 'After recording, select an area of interest in the overview by dragging. Then, zoom and pan the timeline with the mousewheel or {PH1} keys. {PH2}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineLandingPage.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineLandingPage extends UI.Widget.VBox {\n    toggleRecordAction;\n    constructor(toggleRecordAction, options) {\n        super();\n        this.toggleRecordAction = toggleRecordAction;\n        const isNode = options?.isNode === true;\n        this.contentElement.classList.add('timeline-landing-page', 'fill');\n        if (Root.Runtime.experiments.isEnabled(\"timeline-observations\" /* Root.Runtime.ExperimentName.TIMELINE_OBSERVATIONS */) && !isNode) {\n            this.renderLandingPage();\n        }\n        else {\n            this.renderLegacyLandingPage();\n        }\n    }\n    renderLandingPage() {\n        const liveMetricsWidget = LegacyWrapper.LegacyWrapper.legacyWrapper(UI.Widget.Widget, new Components.LiveMetricsView.LiveMetricsView());\n        liveMetricsWidget.show(this.contentElement);\n    }\n    renderLegacyLandingPage() {\n        function encloseWithTag(tagName, contents) {\n            const e = document.createElement(tagName);\n            e.textContent = contents;\n            return e;\n        }\n        const learnMoreNode = UI.XLink.XLink.create('https://developer.chrome.com/docs/devtools/evaluate-performance/', i18nString(UIStrings.learnmore), undefined, undefined, 'learn-more');\n        const recordKey = encloseWithTag('b', UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction('timeline.toggle-recording')[0].title());\n        const reloadKey = encloseWithTag('b', UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction('timeline.record-reload')[0].title());\n        const navigateNode = encloseWithTag('b', i18nString(UIStrings.wasd));\n        this.contentElement.classList.add('legacy');\n        const centered = this.contentElement.createChild('div');\n        const recordButton = UI.UIUtils.createInlineButton(UI.Toolbar.Toolbar.createActionButton(this.toggleRecordAction, { showLabel: false, ignoreToggleable: true }));\n        const reloadButton = UI.UIUtils.createInlineButton(UI.Toolbar.Toolbar.createActionButtonForId('timeline.record-reload'));\n        centered.createChild('p').appendChild(i18n.i18n.getFormatLocalizedString(str_, UIStrings.clickTheRecordButtonSOrHitSTo, { PH1: recordButton, PH2: recordKey }));\n        centered.createChild('p').appendChild(i18n.i18n.getFormatLocalizedString(str_, UIStrings.clickTheReloadButtonSOrHitSTo, { PH1: reloadButton, PH2: reloadKey }));\n        centered.createChild('p').appendChild(i18n.i18n.getFormatLocalizedString(str_, UIStrings.afterRecordingSelectAnAreaOf, { PH1: navigateNode, PH2: learnMoreNode }));\n    }\n}\n//# sourceMappingURL=TimelineLandingPage.js.map","// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as Trace from '../../models/trace/trace.js';\nconst UIStrings = {\n    /**\n     *@description Text in Timeline Loader of the Performance panel\n     *@example {Unknown JSON format} PH1\n     */\n    malformedTimelineDataS: 'Malformed timeline data: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineLoader.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * This class handles loading traces from file and URL, and from the Lighthouse panel\n * It also handles loading cpuprofiles from file, url and console.profileEnd()\n *\n * Meanwhile, the normal trace recording flow bypasses TimelineLoader entirely,\n * as it's handled from TracingManager => TimelineController.\n */\nexport class TimelineLoader {\n    client;\n    canceledCallback;\n    buffer;\n    firstRawChunk;\n    totalSize;\n    filter;\n    #traceIsCPUProfile;\n    #collectedEvents = [];\n    #metadata;\n    #traceFinalizedCallbackForTest;\n    #traceFinalizedPromiseForTest;\n    constructor(client) {\n        this.client = client;\n        this.canceledCallback = null;\n        this.buffer = '';\n        this.firstRawChunk = true;\n        this.filter = null;\n        this.#traceIsCPUProfile = false;\n        this.#metadata = null;\n        this.#traceFinalizedPromiseForTest = new Promise(resolve => {\n            this.#traceFinalizedCallbackForTest = resolve;\n        });\n    }\n    static async loadFromFile(file, client) {\n        const loader = new TimelineLoader(client);\n        const fileReader = new Bindings.FileUtils.ChunkedFileReader(file);\n        loader.canceledCallback = fileReader.cancel.bind(fileReader);\n        loader.totalSize = file.size;\n        // We'll resolve and return the loader instance before finalizing the trace.\n        setTimeout(async () => {\n            const success = await fileReader.read(loader);\n            if (!success && fileReader.error()) {\n                // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                loader.reportErrorAndCancelLoading(fileReader.error().message);\n            }\n        });\n        return loader;\n    }\n    static loadFromEvents(events, client) {\n        const loader = new TimelineLoader(client);\n        window.setTimeout(async () => {\n            void loader.addEvents(events);\n        });\n        return loader;\n    }\n    static loadFromCpuProfile(profile, client) {\n        const loader = new TimelineLoader(client);\n        loader.#traceIsCPUProfile = true;\n        try {\n            const events = TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor.createFakeTraceFromCpuProfile(profile, Trace.Types.Events.ThreadID(1));\n            window.setTimeout(async () => {\n                void loader.addEvents(events);\n            });\n        }\n        catch (e) {\n            console.error(e.stack);\n        }\n        return loader;\n    }\n    static async loadFromURL(url, client) {\n        const loader = new TimelineLoader(client);\n        const stream = new Common.StringOutputStream.StringOutputStream();\n        await client.loadingStarted();\n        const allowRemoteFilePaths = Common.Settings.Settings.instance().moduleSetting('network.enable-remote-file-loading').get();\n        Host.ResourceLoader.loadAsStream(url, null, stream, finishedCallback, allowRemoteFilePaths);\n        async function finishedCallback(success, _headers, errorDescription) {\n            if (!success) {\n                return loader.reportErrorAndCancelLoading(errorDescription.message);\n            }\n            try {\n                const txt = stream.data();\n                const trace = JSON.parse(txt);\n                loader.#processParsedFile(trace);\n                await loader.close();\n            }\n            catch (e) {\n                await loader.close();\n                const message = e instanceof Error ? e.message : '';\n                return loader.reportErrorAndCancelLoading(i18nString(UIStrings.malformedTimelineDataS, { PH1: message }));\n            }\n        }\n        return loader;\n    }\n    #processParsedFile(trace) {\n        if ('traceEvents' in trace || Array.isArray(trace)) {\n            // We know that this is NOT a raw CPU Profile because it has traceEvents\n            // (either at the top level, or nested under the traceEvents key)\n            const items = Array.isArray(trace) ? trace : trace.traceEvents;\n            this.#collectEvents(items);\n        }\n        else if (trace.nodes) {\n            // We know it's a raw Protocol CPU Profile.\n            this.#parseCPUProfileFormatFromFile(trace);\n            this.#traceIsCPUProfile = true;\n        }\n        else {\n            this.reportErrorAndCancelLoading(i18nString(UIStrings.malformedTimelineDataS));\n            return;\n        }\n        if ('metadata' in trace) {\n            this.#metadata = trace.metadata;\n        }\n    }\n    async addEvents(events) {\n        await this.client?.loadingStarted();\n        /**\n         * See the `eventsPerChunk` comment in `models/trace/types/Configuration.ts`.\n         *\n         * This value is different though. Why? `The addEvents()` work below is different\n         * (and much faster!) than running `handleEvent()` on all handlers.\n         */\n        const eventsPerChunk = 150_000;\n        for (let i = 0; i < events.length; i += eventsPerChunk) {\n            const chunk = events.slice(i, i + eventsPerChunk);\n            this.#collectEvents(chunk);\n            await this.client?.loadingProgress((i + chunk.length) / events.length);\n            await new Promise(r => window.setTimeout(r, 0)); // Yield event loop to paint.\n        }\n        void this.close();\n    }\n    async cancel() {\n        if (this.client) {\n            await this.client.loadingComplete(\n            /* collectedEvents */ [], /* exclusiveFilter= */ null, /* isCpuProfile= */ false, \n            /* recordingStartTime= */ null, /* metadata= */ null);\n            this.client = null;\n        }\n        if (this.canceledCallback) {\n            this.canceledCallback();\n        }\n    }\n    /**\n     * As TimelineLoader implements `Common.StringOutputStream.OutputStream`, `write()` is called when a\n     * Common.StringOutputStream.StringOutputStream instance has decoded a chunk. This path is only used\n     * by `loadFromFile()`; it's NOT used by `loadFromEvents` or `loadFromURL`.\n     */\n    async write(chunk, endOfFile) {\n        if (!this.client) {\n            return Promise.resolve();\n        }\n        this.buffer += chunk;\n        if (this.firstRawChunk) {\n            await this.client.loadingStarted();\n            // Ensure we paint the loading dialog before continuing\n            await new Promise(resolve => requestAnimationFrame(() => requestAnimationFrame(resolve)));\n            this.firstRawChunk = false;\n        }\n        else {\n            let progress = undefined;\n            progress = this.buffer.length / this.totalSize;\n            // For compressed traces, we can't provide a definite progress percentage. So, just keep it moving.\n            // For other traces, calculate a loaded part.\n            progress = progress > 1 ? progress - Math.floor(progress) : progress;\n            await this.client.loadingProgress(progress);\n        }\n        if (endOfFile) {\n            let trace;\n            try {\n                trace = JSON.parse(this.buffer);\n                this.#processParsedFile(trace);\n                return Promise.resolve();\n            }\n            catch (e) {\n                this.reportErrorAndCancelLoading(i18nString(UIStrings.malformedTimelineDataS, { PH1: e.toString() }));\n                return;\n            }\n        }\n    }\n    reportErrorAndCancelLoading(message) {\n        if (message) {\n            Common.Console.Console.instance().error(message);\n        }\n        void this.cancel();\n    }\n    async close() {\n        if (!this.client) {\n            return;\n        }\n        await this.client.processingStarted();\n        await this.finalizeTrace();\n    }\n    isCpuProfile() {\n        return this.#traceIsCPUProfile;\n    }\n    async finalizeTrace() {\n        await this.client\n            .loadingComplete(this.#collectedEvents, this.filter, this.isCpuProfile(), /* recordingStartTime=*/ null, this.#metadata);\n        this.#traceFinalizedCallbackForTest?.();\n    }\n    traceFinalizedForTest() {\n        return this.#traceFinalizedPromiseForTest;\n    }\n    #parseCPUProfileFormatFromFile(parsedTrace) {\n        const traceEvents = TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor.createFakeTraceFromCpuProfile(parsedTrace, Trace.Types.Events.ThreadID(1));\n        this.#collectEvents(traceEvents);\n    }\n    #collectEvents(events) {\n        this.#collectedEvents = this.#collectedEvents.concat(events);\n    }\n}\n//# sourceMappingURL=TimelineLoader.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.timeline-minimap {\n  position: relative;\n}\n\n.timeline-sidebar-floating-icon {\n  position: absolute;\n  top: 5px;\n  left: 10px;\n  z-index: 999;\n  border: none;\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  box-shadow: var(--drop-shadow-depth-1);\n  background: var(--sys-color-cdt-base-container);\n\n  &:hover {\n    background: var(--sys-color-base-container-elevated);\n  }\n}\n\n.timeline-minimap .overview-strip {\n  margin-top: 2px;\n  justify-content: center;\n}\n\n.timeline-minimap .overview-strip .timeline-overview-strip-title {\n  color: var(--sys-color-token-subtle);\n  font-size: 10px;\n  font-weight: bold;\n  z-index: 100;\n  background-color: var(--sys-color-cdt-base-container);\n  padding: 0 4px;\n  position: absolute;\n  top: -2px;\n  right: 0;\n}\n\n.timeline-minimap #timeline-overview-cpu-activity {\n  flex-basis: 20px;\n}\n\n.timeline-minimap #timeline-overview-network {\n  flex-basis: 8px;\n}\n\n.timeline-minimap #timeline-overview-filmstrip {\n  flex-basis: 30px;\n}\n\n.timeline-minimap #timeline-overview-memory {\n  flex-basis: 20px;\n}\n\n.timeline-minimap #timeline-overview-network::before,\n.timeline-minimap #timeline-overview-cpu-activity::before {\n  content: \"\";\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-bottom: 1px solid var(--divider-line);\n  z-index: -200;\n}\n\n.timeline-minimap .overview-strip .background {\n  z-index: -10;\n}\n\n.timeline-minimap #timeline-overview-responsiveness {\n  flex-basis: 5px;\n  margin-top: 0 !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.timeline-minimap #timeline-overview-input {\n  flex-basis: 6px;\n}\n\n.timeline-minimap #timeline-overview-pane {\n  flex: auto;\n  position: relative;\n  overflow: hidden;\n}\n\n.timeline-minimap #timeline-overview-container {\n  display: flex;\n  flex-direction: column;\n  flex: none;\n  position: relative;\n  overflow: hidden;\n}\n\n.timeline-minimap #timeline-overview-container canvas {\n  width: 100%;\n  height: 100%;\n}\n\n.timeline-minimap-dim-highlight-svg {\n  width: 100%;\n  position: absolute;\n  height: 100%;\n}\n\n.timeline-minimap .memory-graph-label {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  font-size: 9px;\n  color: var(--sys-color-token-subtle);\n  white-space: nowrap;\n  padding: 0 4px;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n/*# sourceURL=timelineMiniMap.css */\n`);\n\nexport default styles;\n","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as TimelineComponents from './components/components.js';\nimport { ModificationsManager } from './ModificationsManager.js';\nimport { TimelineEventOverviewCPUActivity, TimelineEventOverviewMemory, TimelineEventOverviewNetwork, TimelineEventOverviewResponsiveness, TimelineFilmStripOverview, } from './TimelineEventOverview.js';\nimport miniMapStyles from './timelineMiniMap.css.js';\nimport { TimelineUIUtils } from './TimelineUIUtils.js';\n/**\n * This component wraps the generic PerfUI Overview component and configures it\n * specifically for the Performance Panel, including injecting the CSS we use\n * to customise how the components render within the Performance Panel.\n *\n * It is also responsible for listening to events from the OverviewPane to\n * update the visible trace window, and when this happens it will update the\n * TraceBounds service with the new values.\n */\nexport class TimelineMiniMap extends Common.ObjectWrapper.eventMixin(UI.Widget.VBox) {\n    #overviewComponent = new PerfUI.TimelineOverviewPane.TimelineOverviewPane('timeline');\n    #controls = [];\n    breadcrumbs = null;\n    #breadcrumbsUI;\n    #data = null;\n    #onTraceBoundsChangeBound = this.#onTraceBoundsChange.bind(this);\n    constructor() {\n        super();\n        this.element.classList.add('timeline-minimap');\n        this.#breadcrumbsUI = new TimelineComponents.BreadcrumbsUI.BreadcrumbsUI();\n        this.element.prepend(this.#breadcrumbsUI);\n        const icon = new IconButton.Icon.Icon();\n        icon.setAttribute('name', 'left-panel-open');\n        icon.setAttribute('jslog', `${VisualLogging.action('timeline.sidebar-open').track({ click: true })}`);\n        icon.addEventListener('click', () => {\n            this.dispatchEventToListeners(\"OpenSidebarButtonClicked\" /* PerfUI.TimelineOverviewPane.Events.OPEN_SIDEBAR_BUTTON_CLICKED */, {});\n        });\n        this.#overviewComponent.show(this.element);\n        this.#overviewComponent.addEventListener(\"OverviewPaneWindowChanged\" /* PerfUI.TimelineOverviewPane.Events.OVERVIEW_PANE_WINDOW_CHANGED */, event => {\n            this.#onOverviewPanelWindowChanged(event);\n        });\n        this.#overviewComponent.addEventListener(\"OverviewPaneBreadcrumbAdded\" /* PerfUI.TimelineOverviewPane.Events.OVERVIEW_PANE_BREADCRUMB_ADDED */, event => {\n            this.addBreadcrumb(event.data);\n        });\n        this.#breadcrumbsUI.addEventListener(TimelineComponents.BreadcrumbsUI.BreadcrumbActivatedEvent.eventName, event => {\n            const { breadcrumb, childBreadcrumbsRemoved } = event;\n            this.#activateBreadcrumb(breadcrumb, { removeChildBreadcrumbs: Boolean(childBreadcrumbsRemoved), updateVisibleWindow: true });\n        });\n        this.#overviewComponent.enableCreateBreadcrumbsButton();\n        TraceBounds.TraceBounds.onChange(this.#onTraceBoundsChangeBound);\n    }\n    #onOverviewPanelWindowChanged(event) {\n        const parsedTrace = this.#data?.parsedTrace;\n        if (!parsedTrace) {\n            return;\n        }\n        const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n        if (!traceBoundsState) {\n            return;\n        }\n        const left = (event.data.startTime > 0) ? event.data.startTime : traceBoundsState.milli.entireTraceBounds.min;\n        const right = Number.isFinite(event.data.endTime) ? event.data.endTime : traceBoundsState.milli.entireTraceBounds.max;\n        TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(Trace.Helpers.Timing.traceWindowFromMilliSeconds(Trace.Types.Timing.MilliSeconds(left), Trace.Types.Timing.MilliSeconds(right)), {\n            shouldAnimate: true,\n        });\n    }\n    #onTraceBoundsChange(event) {\n        if (event.updateType === 'RESET' || event.updateType === 'VISIBLE_WINDOW') {\n            this.#overviewComponent.setWindowTimes(event.state.milli.timelineTraceWindow.min, event.state.milli.timelineTraceWindow.max);\n            // If the visible window has changed because we are revealing a certain\n            // time period to the user, we need to ensure that this new time\n            // period fits within the current minimap bounds. If it doesn't, we\n            // do some work to update the minimap bounds. Note that this only\n            // applies if the user has created breadcrumbs, which scope the\n            // minimap. If they have not, the entire trace is the minimap, and\n            // therefore there is no work to be done.\n            const newWindowFitsBounds = Trace.Helpers.Timing.windowFitsInsideBounds({\n                window: event.state.micro.timelineTraceWindow,\n                bounds: event.state.micro.minimapTraceBounds,\n            });\n            if (!newWindowFitsBounds) {\n                this.#updateMiniMapBoundsToFitNewWindow(event.state.micro.timelineTraceWindow);\n            }\n        }\n        if (event.updateType === 'RESET' || event.updateType === 'MINIMAP_BOUNDS') {\n            this.#overviewComponent.setBounds(event.state.milli.minimapTraceBounds.min, event.state.milli.minimapTraceBounds.max);\n        }\n    }\n    #updateMiniMapBoundsToFitNewWindow(newWindow) {\n        if (!this.breadcrumbs) {\n            return;\n        }\n        // Find the smallest breadcrumb that fits this window.\n        // Breadcrumbs are a linked list from largest to smallest so we have to\n        // walk through until we find one that does not fit, and pick the last\n        // before that.\n        let currentBreadcrumb = this.breadcrumbs.initialBreadcrumb;\n        let lastBreadcrumbThatFits = this.breadcrumbs.initialBreadcrumb;\n        while (currentBreadcrumb) {\n            const fits = Trace.Helpers.Timing.windowFitsInsideBounds({\n                window: newWindow,\n                bounds: currentBreadcrumb.window,\n            });\n            if (fits) {\n                lastBreadcrumbThatFits = currentBreadcrumb;\n            }\n            else {\n                // If this breadcrumb does not fit, none of its children (which are all\n                // smaller by definition) will, so we can exit the loop early.\n                break;\n            }\n            currentBreadcrumb = currentBreadcrumb.child;\n        }\n        // Activate the breadcrumb that fits the visible window. We do not update\n        // the visible window here as we are doing this work as a reaction to\n        // something else triggering a change in the window visibility.\n        this.#activateBreadcrumb(lastBreadcrumbThatFits, { removeChildBreadcrumbs: false, updateVisibleWindow: false });\n    }\n    addBreadcrumb({ startTime, endTime }) {\n        if (!this.breadcrumbs) {\n            console.warn('ModificationsManager has not been created, therefore Breadcrumbs can not be added');\n            return;\n        }\n        const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n        if (!traceBoundsState) {\n            return;\n        }\n        const bounds = traceBoundsState.milli.minimapTraceBounds;\n        // The OverviewPane can emit 0 and Infinity as numbers for the range; in\n        // this case we change them to be the min and max values of the minimap\n        // bounds.\n        const breadcrumbTimes = {\n            startTime: Trace.Types.Timing.MilliSeconds(Math.max(startTime, bounds.min)),\n            endTime: Trace.Types.Timing.MilliSeconds(Math.min(endTime, bounds.max)),\n        };\n        const newVisibleTraceWindow = Trace.Helpers.Timing.traceWindowFromMilliSeconds(breadcrumbTimes.startTime, breadcrumbTimes.endTime);\n        const addedBreadcrumb = this.breadcrumbs.add(newVisibleTraceWindow);\n        this.#breadcrumbsUI.data = {\n            initialBreadcrumb: this.breadcrumbs.initialBreadcrumb,\n            activeBreadcrumb: addedBreadcrumb,\n        };\n    }\n    highlightBounds(bounds) {\n        this.#overviewComponent.highlightBounds(bounds);\n    }\n    clearBoundsHighlight() {\n        this.#overviewComponent.clearBoundsHighlight();\n    }\n    /**\n     * Activates a given breadcrumb.\n     * @param options.removeChildBreadcrumbs - if true, any child breadcrumbs will be removed.\n     * @param options.updateVisibleWindow - if true, the visible window will be updated to match the bounds of the breadcrumb\n     */\n    #activateBreadcrumb(breadcrumb, options) {\n        if (!this.breadcrumbs) {\n            return;\n        }\n        this.breadcrumbs.setActiveBreadcrumb(breadcrumb, options);\n        // Only the initial breadcrumb is passed in because breadcrumbs are stored in a linked list and breadcrumbsUI component iterates through them\n        this.#breadcrumbsUI.data = {\n            initialBreadcrumb: this.breadcrumbs.initialBreadcrumb,\n            activeBreadcrumb: breadcrumb,\n        };\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([miniMapStyles]);\n    }\n    reset() {\n        this.#data = null;\n        this.#overviewComponent.reset();\n    }\n    #setMarkers(parsedTrace) {\n        const markers = new Map();\n        const { Meta, PageLoadMetrics } = parsedTrace;\n        // Add markers for navigation start times.\n        const navStartEvents = Meta.mainFrameNavigations;\n        const minTimeInMilliseconds = Trace.Helpers.Timing.microSecondsToMilliseconds(Meta.traceBounds.min);\n        for (const event of navStartEvents) {\n            const { startTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n            markers.set(startTime, TimelineUIUtils.createEventDivider(event, minTimeInMilliseconds));\n        }\n        // Now add markers for the page load events\n        for (const event of PageLoadMetrics.allMarkerEvents) {\n            const { startTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n            markers.set(startTime, TimelineUIUtils.createEventDivider(event, minTimeInMilliseconds));\n        }\n        this.#overviewComponent.setMarkers(markers);\n    }\n    #setNavigationStartEvents(parsedTrace) {\n        this.#overviewComponent.setNavStartTimes(parsedTrace.Meta.mainFrameNavigations);\n    }\n    getControls() {\n        return this.#controls;\n    }\n    setData(data) {\n        if (this.#data?.parsedTrace === data.parsedTrace) {\n            return;\n        }\n        this.#data = data;\n        this.#controls = [];\n        this.#setMarkers(data.parsedTrace);\n        this.#setNavigationStartEvents(data.parsedTrace);\n        this.#controls.push(new TimelineEventOverviewResponsiveness(data.parsedTrace));\n        this.#controls.push(new TimelineEventOverviewCPUActivity(data.parsedTrace));\n        this.#controls.push(new TimelineEventOverviewNetwork(data.parsedTrace));\n        if (data.settings.showScreenshots) {\n            const filmStrip = Trace.Extras.FilmStrip.fromParsedTrace(data.parsedTrace);\n            if (filmStrip.frames.length) {\n                this.#controls.push(new TimelineFilmStripOverview(filmStrip));\n            }\n        }\n        if (data.settings.showMemory) {\n            this.#controls.push(new TimelineEventOverviewMemory(data.parsedTrace));\n        }\n        this.#overviewComponent.setOverviewControls(this.#controls);\n        this.#overviewComponent.showingScreenshots = data.settings.showScreenshots;\n        this.#setInitialBreadcrumb();\n    }\n    #setInitialBreadcrumb() {\n        // Set the initial breadcrumb that ModificationsManager created from the initial full window\n        // or loaded from the file.\n        this.breadcrumbs = ModificationsManager.activeManager()?.getTimelineBreadcrumbs() ?? null;\n        if (!this.breadcrumbs) {\n            return;\n        }\n        let lastBreadcrumb = this.breadcrumbs.initialBreadcrumb;\n        while (lastBreadcrumb.child !== null) {\n            lastBreadcrumb = lastBreadcrumb.child;\n        }\n        this.#breadcrumbsUI.data = {\n            initialBreadcrumb: this.breadcrumbs.initialBreadcrumb,\n            activeBreadcrumb: lastBreadcrumb,\n        };\n    }\n}\n//# sourceMappingURL=TimelineMiniMap.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Anthony Ricaud <rik@webkit.org>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n.timeline-toolbar-container {\n  display: flex;\n  flex: none;\n}\n\n.timeline-toolbar-container > .toolbar {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.timeline-main-toolbar {\n  flex: 1 1 auto;\n}\n\n.timeline-settings-pane {\n  flex: none;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n#timeline-overview-panel {\n  flex: none;\n  position: relative;\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n#timeline-overview-grid {\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n#timeline-overview-grid .timeline-grid-header {\n  height: 12px;\n}\n\n#timeline-overview-grid .resources-dividers-label-bar {\n  pointer-events: auto;\n  height: 12px;\n}\n\n#timeline-overview-grid .resources-divider-label {\n  top: 1px;\n}\n\n.timeline-details-split {\n  flex: auto;\n}\n\n.timeline.panel .status-pane-container {\n  z-index: 1000;\n  display: flex;\n  align-items: center;\n  pointer-events: none;\n}\n\n.timeline.panel .status-pane-container.tinted {\n  background-color: var(--sys-color-cdt-base-container);\n  pointer-events: auto;\n}\n\n.timeline-landing-page.legacy > div > p {\n  flex: none;\n  white-space: pre-line;\n  line-height: 18px;\n}\n\n.popover ul {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n\n#memory-graphs-canvas-container {\n  overflow: hidden;\n  flex: auto;\n  position: relative;\n\n  .no-events-found {\n    position: absolute;\n    font: var(--sys-typescale-body4-regular);\n    left: var(--sys-size-5);\n    bottom: var(--sys-size-5);\n\n    p {\n      margin: 0;\n    }\n  }\n}\n\n#memory-counters-graph {\n  flex: auto;\n}\n\n#memory-graphs-canvas-container .memory-counter-marker {\n  position: absolute;\n  border-radius: 3px;\n  width: 5px;\n  height: 5px;\n  margin-left: -3px;\n  margin-top: -2px;\n}\n\n#memory-graphs-container .timeline-memory-header {\n  flex: 0 0 26px;\n  background-color: var(--sys-color-surface2);\n  border-bottom: 1px solid var(--sys-color-divider);\n  justify-content: space-between;\n}\n\n#memory-graphs-container .timeline-memory-header::after {\n  content: \"\";\n  background-image: var(--image-file-toolbarResizerVertical);\n  background-repeat: no-repeat;\n  background-position: right center, center;\n  flex: 20px 0 0;\n  margin: 0 4px;\n}\n\n.timeline-memory-toolbar {\n  flex-shrink: 1;\n}\n\n.memory-counter-value {\n  margin: 8px;\n}\n\n#counter-values-bar {\n  flex: 0 0 20px;\n  border-top: solid 1px var(--sys-color-divider);\n  width: 100%;\n  overflow: hidden;\n  line-height: 18px;\n}\n\n.timeline-details {\n  vertical-align: top;\n}\n\n.timeline-details-view {\n  color: var(--sys-color-on-surface);\n  overflow: hidden;\n}\n\n.timeline-details-view-body {\n  flex: auto;\n  overflow: auto;\n  position: relative;\n  background-color: var(--sys-color-cdt-base-container);\n  user-select: text;\n  display: block;\n}\n\n.timeline-details-view-block {\n  flex: none;\n  display: flex;\n  background-color: var(--sys-color-cdt-base-container);\n  flex-direction: column;\n  padding-bottom: 5px;\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.timeline-details-view-row {\n  padding-left: 10px;\n  min-height: 20px;\n}\n\n.timeline-details-view-block .timeline-details-stack-values {\n  flex-direction: column !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.timeline-details-chip-title {\n  font-size: 12px;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n}\n\n.timeline-details-view-block:first-child > .timeline-details-chip-title {\n  font-size: 13px;\n}\n\n.timeline-details-view-row-title:not(:empty) {\n  color: var(--sys-color-token-subtle);\n  overflow: hidden;\n  padding-right: 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.timeline-details-warning {\n  --override-details-warning-background-color: rgb(250 209 209 / 48%);\n\n  background-color: var(--override-details-warning-background-color);\n}\n\n.theme-with-dark-background .timeline-details-warning,\n:host-context(.theme-with-dark-background) .timeline-details-warning {\n  --override-details-warning-background-color: rgb(87 10 10 / 48%);\n}\n\n.timeline-details-warning .timeline-details-view-row-title {\n  color: var(--sys-color-error);\n}\n\n.timeline-details-view-row-value {\n  display: inline-block;\n  user-select: text;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  padding: 0 3px;\n}\n\n.timeline-details-warning .timeline-details-view-row-value {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.timeline-details-view-pie-chart-wrapper {\n  margin: 4px 0;\n}\n\n.timeline-details-view-pie-chart {\n  margin-top: 5px;\n}\n\n.timeline-flamechart {\n  overflow: hidden;\n}\n\n.brick-game {\n  background-color: var(--sys-color-neutral-container);\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 9999; /* A high value to ensure it's on top */\n}\n\n.game-close-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 25px;\n  height: 25px;\n  position: absolute;\n  right: 15px;\n  top: 15px;\n  border-radius: 50%;\n  cursor: pointer;\n}\n\n.scorePanel {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  white-space: pre-line;\n  padding: 15px;\n  position: absolute;\n  left: 15px;\n  bottom: 15px;\n  border: double 7px transparent;\n  border-radius: 20px;\n  background-origin: border-box;\n  background-clip: content-box, border-box;\n  font-weight: 200;\n}\n\n.confetti-100 {\n  display: block;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.confetti-100 > .confetti-100-particle {\n  opacity: 0%;\n  position: fixed;\n  animation: confetti-100-animation 1s none ease-out;\n  font-size: 30px;\n}\n\n@keyframes confetti-100-animation {\n  0% {\n    opacity: 100%;\n    transform: translateY(0%) translateY(0%) rotate(0deg);\n  }\n\n  100% {\n    opacity: 0%;\n    transform: translateY(var(--to-Y)) translateX(var(--to-X)) rotate(var(--rotation));\n  }\n}\n\n@media (prefers-reduced-motion) {\n  .confetti-100 > .confetti-100-particle {\n    animation-name: dissolve;\n  }\n}\n\n.timeline-flamechart-resizer {\n  flex: 8px 0 0;\n  background-color: var(--sys-color-surface2);\n  border: 1px var(--sys-color-divider);\n  border-style: solid none;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: center;\n}\n\n.timeline-network-resizer-disabled > .timeline-flamechart-resizer {\n  display: none;\n}\n\n.timeline-flamechart-resizer::after {\n  content: \"...\";\n  font-size: 14px;\n  margin-bottom: -1px;\n}\n\n.timeline-layers-view-properties table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\n.timeline-layers-view-properties td {\n  border: 1px solid var(--sys-color-divider);\n  line-height: 22px;\n}\n\n.timeline-filmstrip-preview > img {\n  max-width: 500px;\n  max-height: 300px;\n  cursor: pointer;\n  border: 1px solid var(--sys-color-divider);\n}\n\n.timeline-tree-view {\n  display: flex;\n  overflow: hidden;\n}\n\n.timeline-tree-view .toolbar {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.timeline-tree-view .data-grid {\n  border: none;\n  flex: auto;\n}\n\n.timeline-tree-view .data-grid .data-container {\n  overflow-y: scroll;\n}\n\n.timeline-tree-view .data-grid.data-grid-fits-viewport .corner {\n  display: table-cell;\n}\n\n.timeline-tree-view .data-grid table.data {\n  background: var(--sys-color-cdt-base-container);\n}\n\n.timeline-tree-view .data-grid .odd {\n  background-color: var(--sys-color-surface1);\n}\n\n.timeline-tree-view .data-grid tr:hover td:not(.bottom-filler-td) {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.timeline-tree-view .data-grid td.numeric-column {\n  text-align: right;\n  position: relative;\n}\n\n.timeline-tree-view .data-grid div.background-percent-bar {\n  float: right;\n  position: relative;\n  z-index: 1;\n}\n\n.timeline-tree-view .data-grid span.percent-column {\n  color: var(--sys-color-token-subtle);\n  width: 45px;\n  display: inline-block;\n}\n\n.timeline-tree-view .data-grid tr.selected span {\n  color: inherit;\n}\n\n.timeline-tree-view .data-grid tr.selected {\n  background-color: var(--sys-color-tonal-container);\n}\n\n.timeline-tree-view .data-grid .name-container {\n  display: flex;\n  align-items: center;\n  padding-left: 2px;\n}\n\n.timeline-tree-view .data-grid .name-container .activity-icon {\n  width: 12px;\n  height: 12px;\n  border: 1px solid var(--divider-line);\n  margin: 3px 0;\n}\n\n.timeline-tree-view .data-grid .name-container .activity-icon-container {\n  margin-right: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  width: 18px;\n  height: 18px;\n  overflow: hidden;\n}\n\n.timeline-tree-view .data-grid .name-container .activity-warning::after {\n  content: \"[deopt]\";\n  margin: 0 4px;\n  line-height: 12px;\n  font-size: 10px;\n  color: var(--sys-color-state-disabled);\n}\n\n.timeline-tree-view .data-grid tr.selected .name-container .activity-warning::after {\n  color: var(--sys-color-on-tonal-container);\n}\n\n.timeline-tree-view .data-grid .name-container .activity-link {\n  flex: auto;\n  text-align: right;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-left: 5px;\n}\n\n.timeline-tree-view .data-grid .background-bar-container {\n  position: absolute;\n  left: 3px;\n  right: 0;\n}\n\n.timeline-tree-view .data-grid .background-bar {\n  float: right;\n  height: 18px;\n  background-color: var(--sys-color-surface-yellow);\n  border-bottom: 1px solid var(--sys-color-yellow-outline);\n}\n\n.timeline-tree-view .data-grid .selected .background-bar {\n  background-color: var(--app-color-selected-progress-bar);\n  border-bottom: 1px solid var(--app-border-selected-progress-bar);\n}\n\n.timeline-tree-view .timeline-details-view-body .full-widget-dimmed-banner {\n  background-color: inherit;\n}\n\n.timeline-details .filter-input-field {\n  width: 120px;\n}\n\n.timeline-tree-view .data-grid thead {\n  height: 21px;\n  /* so the header is always above any body rows that the user has scrolled past */\n  z-index: 2;\n}\n\n.timeline-stack-view-header {\n  height: 27px;\n  background-color: var(--sys-color-cdt-base-container);\n  padding: 6px 10px;\n  color: var(--sys-color-on-surface);\n  white-space: nowrap;\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.timeline-landing-page {\n  position: absolute;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.timeline-landing-page.legacy {\n  justify-content: center;\n  align-items: center;\n  overflow: auto;\n  font-size: 13px;\n  color: var(--sys-color-on-surface-subtle);\n}\n\n@media (forced-colors: active) {\n  .timeline-tree-view .data-grid .name-container .activity-icon {\n    forced-color-adjust: none;\n  }\n\n  .timeline-tree-view .data-grid tr.selected span.percent-column,\n  .timeline-tree-view .data-grid tr.selected div.background-percent-bar span,\n  .timeline-tree-view .data-grid tr.selected .name-container .activity-link .devtools-link .timeline-link {\n    color: HighlightText;\n  }\n\n  .timeline-tree-view .data-grid .background-bar,\n  .timeline-tree-view .data-grid tr:hover td:not(.bottom-filler-td) {\n    background-color: transparent;\n  }\n\n  .timeline-tree-view .data-grid tr.selected .background-bar {\n    background-color: transparent;\n    border-bottom-color: HighlightText;\n  }\n}\n\n.timeline-details-view-body > div {\n  overflow-y: hidden;\n  overflow-x: hidden;\n}\n\n.timeline-details-chip-title > div {\n  width: 12px;\n  height: 12px;\n  border: 1px solid var(--sys-color-divider);\n  display: inline-block;\n  margin-right: 4px;\n  content: \" \";\n}\n\n.timeline-landing-page.legacy > div {\n  max-width: 450px;\n  margin: 10px;\n}\n\n.timeline-paint-profiler-log-split > div:last-child {\n  background-color: var(--color-background-elevation-1);\n  z-index: 0;\n}\n\n.timeline-layers-view > div:last-child,\n.timeline-layers-view-properties > div:last-child {\n  background-color: var(--color-background-elevation-1);\n}\n\n.timeline.panel .status-pane-container > div {\n  pointer-events: auto;\n}\n\n.timeline-tree-view .data-grid .name-container div {\n  flex: none;\n}\n\n.status-pane-container > .small-dialog {\n  width: 100%;\n  height: 100%;\n}\n\ndevtools-feedback-button {\n  float: right;\n}\n\n/*# sourceURL=timelinePanel.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (c) 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.timeline-status-dialog {\n  display: flex;\n  flex-direction: column;\n  padding: 16px 16px 12px;\n  align-self: center;\n  background-color: var(--sys-color-cdt-base-container);\n  box-shadow: var(--drop-shadow);\n  border-radius: 10px;\n}\n\n.status-dialog-line {\n  margin: 2px;\n  height: 14px;\n  min-height: auto;\n  display: flex;\n  align-items: baseline;\n}\n\n.status-dialog-line .label {\n  display: inline-block;\n  width: 80px;\n  text-align: right;\n  color: var(--sys-color-on-surface);\n  margin-right: 10px;\n}\n\n.timeline-status-dialog .progress .indicator-container {\n  display: inline-block;\n  width: 200px;\n  height: 8px;\n  background-color: var(--sys-color-surface5);\n}\n\n.timeline-status-dialog .progress .indicator {\n  background-color: var(--sys-color-primary);\n  height: 100%;\n  width: 0;\n  margin: 0;\n}\n\n.timeline-status-dialog .stop-button {\n  margin-top: 8px;\n  height: 100%;\n  align-self: flex-end;\n}\n\n.timeline-status-dialog .stop-button button {\n  border-radius: 12px;\n}\n\n.timeline-status-dialog.small-dialog {\n  width: inherit;\n  justify-content: center;\n}\n\n.small-dialog > .stop-button {\n  align-self: center;\n  margin-top: 20px;\n  height: initial;\n}\n\n@media (forced-colors: active) {\n  .timeline-status-dialog {\n    border: 1px solid canvastext;\n  }\n\n  .timeline-status-dialog .progress .indicator-container {\n    border: 1px solid ButtonText;\n    background-color: ButtonFace;\n  }\n\n  .timeline-status-dialog .progress .indicator {\n    forced-color-adjust: none;\n    background-color: ButtonText;\n  }\n}\n\n/*# sourceURL=timelineStatusDialog.css */\n`);\n\nexport default styles;\n","/*\n * Copyright (C) 2019 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Components from './components/components.js';\nconst UIStrings = {\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    frameStart: 'Frame start',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    drawFrame: 'Draw frame',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    layout: 'Layout',\n    /**\n     *@description Text in UIDevtools Utils of the Performance panel\n     */\n    rasterizing: 'Rasterizing',\n    /**\n     *@description Text in UIDevtools Utils of the Performance panel\n     */\n    drawing: 'Drawing',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    painting: 'Painting',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    system: 'System',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    idle: 'Idle',\n    /**\n     *@description Category in the Summary view of the Performance panel to indicate time spent to load resources\n     */\n    loading: 'Loading',\n    /**\n     *@description Text in Timeline for the Experience title\n     */\n    experience: 'Experience',\n    /**\n     *@description Category in the Summary view of the Performance panel to indicate time spent in script execution\n     */\n    scripting: 'Scripting',\n    /**\n     *@description Category in the Summary view of the Performance panel to indicate time spent in rendering the web page\n     */\n    rendering: 'Rendering',\n    /**\n     *@description Event category in the Performance panel for time spent in the GPU\n     */\n    gpu: 'GPU',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    async: 'Async',\n    /**\n     *@description Text in Timeline UIUtils of the Performance panel\n     */\n    messaging: 'Messaging',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/UIDevtoolsUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet eventStylesMap = null;\nlet categories = null;\nexport class UIDevtoolsUtils {\n    static isUiDevTools() {\n        return Root.Runtime.Runtime.queryParam('uiDevTools') === 'true';\n    }\n    static categorizeEvents() {\n        if (eventStylesMap) {\n            return eventStylesMap;\n        }\n        const type = RecordType;\n        const categories = UIDevtoolsUtils.categories();\n        const drawing = categories['drawing'];\n        const rasterizing = categories['rasterizing'];\n        const layout = categories['layout'];\n        const painting = categories['painting'];\n        const other = categories['other'];\n        const eventStyles = {};\n        // Paint Categories\n        eventStyles[type.ViewPaint] = new Components.EntryStyles.TimelineRecordStyle('View::Paint', painting);\n        eventStyles[type.ViewOnPaint] = new Components.EntryStyles.TimelineRecordStyle('View::OnPaint', painting);\n        eventStyles[type.ViewPaintChildren] =\n            new Components.EntryStyles.TimelineRecordStyle('View::PaintChildren', painting);\n        eventStyles[type.ViewOnPaintBackground] =\n            new Components.EntryStyles.TimelineRecordStyle('View::OnPaintBackground', painting);\n        eventStyles[type.ViewOnPaintBorder] =\n            new Components.EntryStyles.TimelineRecordStyle('View::OnPaintBorder', painting);\n        eventStyles[type.LayerPaintContentsToDisplayList] =\n            new Components.EntryStyles.TimelineRecordStyle('Layer::PaintContentsToDisplayList', painting);\n        // Layout Categories\n        eventStyles[type.ViewLayout] = new Components.EntryStyles.TimelineRecordStyle('View::Layout', layout);\n        eventStyles[type.ViewLayoutBoundsChanged] =\n            new Components.EntryStyles.TimelineRecordStyle('View::Layout(bounds_changed)', layout);\n        // Raster Categories\n        eventStyles[type.RasterTask] = new Components.EntryStyles.TimelineRecordStyle('RasterTask', rasterizing);\n        eventStyles[type.RasterizerTaskImplRunOnWorkerThread] =\n            new Components.EntryStyles.TimelineRecordStyle('RasterizerTaskImpl::RunOnWorkerThread', rasterizing);\n        // Draw Categories\n        eventStyles[type.DirectRendererDrawFrame] =\n            new Components.EntryStyles.TimelineRecordStyle('DirectRenderer::DrawFrame', drawing);\n        eventStyles[type.BeginFrame] =\n            new Components.EntryStyles.TimelineRecordStyle(i18nString(UIStrings.frameStart), drawing, true);\n        eventStyles[type.DrawFrame] =\n            new Components.EntryStyles.TimelineRecordStyle(i18nString(UIStrings.drawFrame), drawing, true);\n        eventStyles[type.NeedsBeginFrameChanged] =\n            new Components.EntryStyles.TimelineRecordStyle('NeedsBeginFrameChanged', drawing, true);\n        // Other Categories\n        eventStyles[type.ThreadControllerImplRunTask] =\n            new Components.EntryStyles.TimelineRecordStyle('ThreadControllerImpl::RunTask', other);\n        eventStylesMap = eventStyles;\n        return eventStyles;\n    }\n    static categories() {\n        if (categories) {\n            return categories;\n        }\n        categories = {\n            layout: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.LAYOUT, i18nString(UIStrings.layout), true, '--app-color-loading-children', '--app-color-loading'),\n            rasterizing: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.RASTERIZING, i18nString(UIStrings.rasterizing), true, '--app-color-children', '--app-color-scripting'),\n            drawing: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.DRAWING, i18nString(UIStrings.drawing), true, '--app-color-rendering-children', '--app-color-rendering'),\n            painting: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.PAINTING, i18nString(UIStrings.painting), true, '--app-color-painting-children', '--app-color-painting'),\n            other: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.OTHER, i18nString(UIStrings.system), false, '--app-color-system-children', '--app-color-system'),\n            idle: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.IDLE, i18nString(UIStrings.idle), false, '--app-color-idle-children', '--app-color-idle'),\n            loading: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.LOADING, i18nString(UIStrings.loading), false, '--app-color-loading-children', '--app-color-loading'),\n            experience: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.EXPERIENCE, i18nString(UIStrings.experience), false, '--app-color-rendering-children', '--pp-color-rendering'),\n            messaging: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.MESSAGING, i18nString(UIStrings.messaging), false, '--app-color-messaging-children', '--pp-color-messaging'),\n            scripting: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.SCRIPTING, i18nString(UIStrings.scripting), false, '--app-color-scripting-children', '--pp-color-scripting'),\n            rendering: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.RENDERING, i18nString(UIStrings.rendering), false, '--app-color-rendering-children', '--pp-color-rendering'),\n            gpu: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.GPU, i18nString(UIStrings.gpu), false, '--app-color-painting-children', '--app-color-painting'),\n            async: new Components.EntryStyles.TimelineCategory(Components.EntryStyles.EventCategory.ASYNC, i18nString(UIStrings.async), false, '--app-color-async-children', '--app-color-async'),\n        };\n        return categories;\n    }\n    static getMainCategoriesList() {\n        return ['idle', 'drawing', 'painting', 'rasterizing', 'layout', 'other'];\n    }\n}\nexport var RecordType;\n(function (RecordType) {\n    /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n    RecordType[\"ViewPaint\"] = \"View::Paint\";\n    RecordType[\"ViewOnPaint\"] = \"View::OnPaint\";\n    RecordType[\"ViewPaintChildren\"] = \"View::PaintChildren\";\n    RecordType[\"ViewOnPaintBackground\"] = \"View::OnPaintBackground\";\n    RecordType[\"ViewOnPaintBorder\"] = \"View::OnPaintBorder\";\n    RecordType[\"ViewLayout\"] = \"View::Layout\";\n    RecordType[\"ViewLayoutBoundsChanged\"] = \"View::Layout(bounds_changed)\";\n    RecordType[\"LayerPaintContentsToDisplayList\"] = \"Layer::PaintContentsToDisplayList\";\n    RecordType[\"DirectRendererDrawFrame\"] = \"DirectRenderer::DrawFrame\";\n    RecordType[\"RasterTask\"] = \"RasterTask\";\n    RecordType[\"RasterizerTaskImplRunOnWorkerThread\"] = \"RasterizerTaskImpl::RunOnWorkerThread\";\n    RecordType[\"BeginFrame\"] = \"BeginFrame\";\n    RecordType[\"DrawFrame\"] = \"DrawFrame\";\n    RecordType[\"NeedsBeginFrameChanged\"] = \"NeedsBeginFrameChanged\";\n    RecordType[\"ThreadControllerImplRunTask\"] = \"ThreadControllerImpl::RunTask\";\n    /* eslint-enable @typescript-eslint/naming-convention */\n})(RecordType || (RecordType = {}));\n//# sourceMappingURL=UIDevtoolsUtils.js.map","/*\n * Copyright (C) 2019 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Components from './components/components.js';\nimport { TimelineController } from './TimelineController.js';\nimport { UIDevtoolsUtils } from './UIDevtoolsUtils.js';\nexport class UIDevtoolsController extends TimelineController {\n    constructor(rootTarget, primaryPageTarget, client) {\n        super(rootTarget, primaryPageTarget, client);\n        Components.EntryStyles.setEventStylesMap(UIDevtoolsUtils.categorizeEvents());\n        Components.EntryStyles.setCategories(UIDevtoolsUtils.categories());\n        Components.EntryStyles.setTimelineMainEventCategories(UIDevtoolsUtils.getMainCategoriesList().filter(Components.EntryStyles.stringIsEventCategory));\n    }\n}\n//# sourceMappingURL=UIDevtoolsController.js.map","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n * Copyright (C) 2012 Intel Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\nimport { ActiveFilters } from './ActiveFilters.js';\nimport * as AnnotationHelpers from './AnnotationHelpers.js';\nimport { TraceLoadEvent } from './BenchmarkEvents.js';\nimport * as TimelineComponents from './components/components.js';\nimport * as TimelineInsights from './components/insights/insights.js';\nimport { SHOULD_SHOW_EASTER_EGG } from './EasterEgg.js';\nimport { Tracker } from './FreshRecording.js';\nimport historyToolbarButtonStyles from './historyToolbarButton.css.js';\nimport { IsolateSelector } from './IsolateSelector.js';\nimport { AnnotationModifiedEvent, ModificationsManager } from './ModificationsManager.js';\nimport * as Overlays from './overlays/overlays.js';\nimport { cpuprofileJsonGenerator, traceJsonGenerator } from './SaveFileFormatter.js';\nimport { TimelineController } from './TimelineController.js';\nimport { TimelineFlameChartView } from './TimelineFlameChartView.js';\nimport { TimelineHistoryManager } from './TimelineHistoryManager.js';\nimport { TimelineLandingPage } from './TimelineLandingPage.js';\nimport { TimelineLoader } from './TimelineLoader.js';\nimport { TimelineMiniMap } from './TimelineMiniMap.js';\nimport timelinePanelStyles from './timelinePanel.css.js';\nimport { TimelineSelection } from './TimelineSelection.js';\nimport timelineStatusDialogStyles from './timelineStatusDialog.css.js';\nimport { TimelineUIUtils } from './TimelineUIUtils.js';\nimport { UIDevtoolsController } from './UIDevtoolsController.js';\nimport { UIDevtoolsUtils } from './UIDevtoolsUtils.js';\nimport * as Utils from './utils/utils.js';\nconst UIStrings = {\n    /**\n     *@description Text that appears when user drag and drop something (for example, a file) in Timeline Panel of the Performance panel\n     */\n    dropTimelineFileOrUrlHere: 'Drop timeline file or URL here',\n    /**\n     *@description Title of disable capture jsprofile setting in timeline panel of the performance panel\n     */\n    disableJavascriptSamples: 'Disable JavaScript samples',\n    /**\n     *@description Title of capture layers and pictures setting in timeline panel of the performance panel\n     */\n    enableAdvancedPaint: 'Enable advanced paint instrumentation (slow)',\n    /**\n     *@description Title of CSS selector stats setting in timeline panel of the performance panel\n     */\n    enableSelectorStats: 'Enable CSS selector stats (slow)',\n    /**\n     *@description Title of show screenshots setting in timeline panel of the performance panel\n     */\n    screenshots: 'Screenshots',\n    /**\n     *@description Text for the memory of the page\n     */\n    memory: 'Memory',\n    /**\n     *@description Text to clear content\n     */\n    clear: 'Clear',\n    /**\n     *@description A label for a button that fixes something.\n     */\n    fixMe: 'Fix me',\n    /**\n     *@description Tooltip text that appears when hovering over the largeicon load button\n     */\n    loadProfile: 'Load profile…',\n    /**\n     *@description Tooltip text that appears when hovering over the largeicon download button\n     */\n    saveProfile: 'Save profile…',\n    /**\n     *@description An option to save trace with annotations that appears in the menu of the toolbar download button. This is the expected default option, therefore it does not mention annotations.\n     */\n    saveTraceWithAnnotationsMenuOption: 'Save trace',\n    /**\n     *@description An option to save trace without annotations that appears in the menu of the toolbar download button\n     */\n    saveTraceWithoutAnnotationsMenuOption: 'Save trace without annotations',\n    /**\n     *@description Text to take screenshots\n     */\n    captureScreenshots: 'Capture screenshots',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    showMemoryTimeline: 'Show memory timeline',\n    /**\n     *@description Tooltip text that appears when hovering over the largeicon settings gear in show settings pane setting in timeline panel of the performance panel\n     */\n    captureSettings: 'Capture settings',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    disablesJavascriptSampling: 'Disables JavaScript sampling, reduces overhead when running against mobile devices',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    capturesAdvancedPaint: 'Captures advanced paint instrumentation, introduces significant performance overhead',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    capturesSelectorStats: 'Captures CSS selector statistics',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    network: 'Network:',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    cpu: 'CPU:',\n    /**\n     *@description Title of the 'Network conditions' tool in the bottom drawer\n     */\n    networkConditions: 'Network conditions',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     *@example {wrong format} PH1\n     *@example {ERROR_FILE_NOT_FOUND} PH2\n     */\n    failedToSaveTimelineSS: 'Failed to save timeline: {PH1} ({PH2})',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    CpuThrottlingIsEnabled: '- CPU throttling is enabled',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    NetworkThrottlingIsEnabled: '- Network throttling is enabled',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    SignificantOverheadDueToPaint: '- Significant overhead due to paint instrumentation',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    SelectorStatsEnabled: '- Selector stats is enabled',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    JavascriptSamplingIsDisabled: '- JavaScript sampling is disabled',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    stoppingTimeline: 'Stopping timeline…',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    received: 'Received',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    processed: 'Processed',\n    /**\n     *@description Text to close something\n     */\n    close: 'Close',\n    /**\n     *@description Text to download the raw trace files after an error\n     */\n    downloadAfterError: 'Download raw trace events',\n    /**\n     *@description Status text to indicate the recording has failed in the Performance panel\n     */\n    recordingFailed: 'Recording failed',\n    /**\n     * @description Text to indicate the progress of a profile. Informs the user that we are currently\n     * creating a peformance profile.\n     */\n    profiling: 'Profiling…',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    bufferUsage: 'Buffer usage',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    loadingProfile: 'Loading profile…',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    processingProfile: 'Processing profile…',\n    /**\n     *@description Text in Timeline Panel of the Performance panel\n     */\n    initializingProfiler: 'Initializing profiler…',\n    /**\n     *@description Text for the status of something\n     */\n    status: 'Status',\n    /**\n     *@description Text that refers to the time\n     */\n    time: 'Time',\n    /**\n     *@description Text for the description of something\n     */\n    description: 'Description',\n    /**\n     *@description Text of an item that stops the running task\n     */\n    stop: 'Stop',\n    /**\n     *@description Time text content in Timeline Panel of the Performance panel\n     *@example {2.12} PH1\n     */\n    ssec: '{PH1} sec',\n    /**\n     *\n     * @description Text for exporting basic traces\n     */\n    exportNormalTraces: 'Basic performance traces',\n    /**\n     *\n     * @description Text for exporting enhanced traces\n     */\n    exportEnhancedTraces: 'Enhanced performance traces',\n    /**\n     *@description Tooltip description for a checkbox that toggles the visibility of data added by extensions of this panel (Performance).\n     */\n    showDataAddedByExtensions: 'Show data added by extensions of the Performance panel',\n    /**\n     Label for a checkbox that toggles the visibility of data added by extensions of this panel (Performance).\n     */\n    performanceExtension: 'Extension data',\n    /**\n     * @description Tooltip for the the sidebar toggle in the Performance panel. Command to open/show the sidebar.\n     */\n    showSidebar: 'Show sidebar',\n    /**\n     * @description Tooltip for the the sidebar toggle in the Performance panel. Command to close the sidebar.\n     */\n    hideSidebar: 'Hide sidebar',\n    /**\n     * @description Screen reader announcement when the sidebar is shown in the Performance panel.\n     */\n    sidebarShown: 'Performance sidebar shown',\n    /**\n     * @description Screen reader announcement when the sidebar is hidden in the Performance panel.\n     */\n    sidebarHidden: 'Performance sidebar hidden',\n    /**\n     * @description Screen reader announcement when the user clears their selection\n     */\n    selectionCleared: 'Selection cleared',\n    /**\n     * @description Screen reader announcement when the user selects a frame.\n     */\n    frameSelected: 'Frame selected',\n    /**\n     * @description Screen reader announcement when the user selects a trace event.\n     * @example {Paint} PH1\n     */\n    eventSelected: 'Event {PH1} selected',\n    /**\n     *@description Text of a hyperlink to documentation.\n     */\n    learnMore: 'Learn more',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelinePanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet timelinePanelInstance;\nlet isNode;\nexport class TimelinePanel extends UI.Panel.Panel {\n    dropTarget;\n    recordingOptionUIControls;\n    state;\n    recordingPageReload;\n    millisecondsToRecordAfterLoadEvent;\n    toggleRecordAction;\n    recordReloadAction;\n    #historyManager;\n    disableCaptureJSProfileSetting;\n    captureLayersAndPicturesSetting;\n    captureSelectorStatsSetting;\n    #thirdPartyTracksSetting;\n    showScreenshotsSetting;\n    showMemorySetting;\n    panelToolbar;\n    panelRightToolbar;\n    timelinePane;\n    #minimapComponent = new TimelineMiniMap();\n    #viewMode = { mode: 'LANDING_PAGE' };\n    /**\n     * We get given any filters for a new trace when it is recorded/imported.\n     * Because the user can then use the dropdown to navigate to another trace,\n     * we store the filters by the trace index, so if the user then navigates back\n     * to a previous trace we can reinstate the filters from this map.\n     */\n    #exclusiveFilterPerTrace = new Map();\n    /**\n     * This widget holds the timeline sidebar which shows Insights & Annotations,\n     * and the main UI which shows the timeline\n     */\n    #splitWidget = new UI.SplitWidget.SplitWidget(true, // isVertical\n    false, // secondIsSidebar\n    'timeline-panel-sidebar-state', // settingName (to persist the open/closed state for the user)\n    TimelineComponents.Sidebar.DEFAULT_SIDEBAR_WIDTH_PX);\n    statusPaneContainer;\n    flameChart;\n    searchableViewInternal;\n    showSettingsPaneButton;\n    showSettingsPaneSetting;\n    settingsPane;\n    controller;\n    cpuProfiler;\n    clearButton;\n    brickBreakerToolbarButton;\n    brickBreakerToolbarButtonAdded = false;\n    loadButton;\n    saveButton;\n    statusPane;\n    landingPage;\n    loader;\n    showScreenshotsToolbarCheckbox;\n    showMemoryToolbarCheckbox;\n    networkThrottlingSelect;\n    cpuThrottlingSelect;\n    fileSelectorElement;\n    selection = null;\n    traceLoadStart;\n    primaryPageTargetPromiseCallback = (_target) => { };\n    // Note: this is technically unused, but we need it to define the promiseCallback function above.\n    primaryPageTargetPromise = new Promise(res => {\n        this.primaryPageTargetPromiseCallback = res;\n    });\n    #traceEngineModel;\n    #sourceMapsResolver = null;\n    #onSourceMapsNodeNamesResolvedBound = this.#onSourceMapsNodeNamesResolved.bind(this);\n    #onChartPlayableStateChangeBound;\n    #sidebarToggleButton = this.#splitWidget.createShowHideSidebarButton(i18nString(UIStrings.showSidebar), i18nString(UIStrings.hideSidebar), \n    // These are used to announce to screen-readers and not shown visibly.\n    i18nString(UIStrings.sidebarShown), i18nString(UIStrings.sidebarHidden), 'timeline.sidebar');\n    #sideBar = new TimelineComponents.Sidebar.SidebarWidget();\n    /**\n     * Rather than auto-pop the sidebar every time the user records a trace,\n     * which could get annoying, we instead persist the state of the sidebar\n     * visibility to a setting so it's restored across sessions.\n     * However, sometimes we have to automatically hide the sidebar, like when a\n     * trace recording is happening, or the user is on the landing page. In those\n     * times, we toggle this flag to true. Then, when we enter the VIEWING_TRACE\n     * mode, we check this flag and pop the sidebar open if it's set to true.\n     * Longer term a better fix here would be to divide the 3 UI screens\n     * (status pane, landing page, trace view) into distinct components /\n     * widgets, to avoid this complexity.\n     */\n    #restoreSidebarVisibilityOnTraceLoad = false;\n    /**\n     * Used to track an aria announcement that we need to alert for\n     * screen-readers. We track these because we debounce announcements to not\n     * overwhelm.\n     */\n    #pendingAriaMessage = null;\n    #eventToRelatedInsights = new Map();\n    constructor() {\n        super('timeline');\n        const adornerContent = document.createElement('span');\n        adornerContent.innerHTML = `<div style=\"\n      font-size: 12px;\n      transform: scale(1.25);\n      color: transparent;\n      background: linear-gradient(90deg,CLICK255 0 0 / 100%) 0%, rgb(255 154 0 / 100%) 10%, rgb(208 222 33 / 100%) 20%, rgb(79 220 74 / 100%) 30%, rgb(63 218 216 / 100%) 40%, rgb(47 201 226 / 100%) 50%, rgb(28 127 238 / 100%) 60%, rgb(95 21 242 / 100%) 70%, rgb(186 12 248 / 100%) 80%, rgb(251 7 217 / 100%) 90%, rgb(255 0 0 / 100%) 100%);\n      -webkit-background-clip: text;\n      \">💫</div>`;\n        const adorner = new Adorners.Adorner.Adorner();\n        adorner.classList.add('fix-perf-icon');\n        adorner.data = {\n            name: i18nString(UIStrings.fixMe),\n            content: adornerContent,\n        };\n        this.brickBreakerToolbarButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.fixMe), adorner);\n        this.brickBreakerToolbarButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, () => this.#onBrickBreakerEasterEggClick());\n        this.#traceEngineModel = this.#instantiateNewModel();\n        this.#listenForProcessingProgress();\n        this.element.addEventListener('contextmenu', this.contextMenu.bind(this), false);\n        this.dropTarget = new UI.DropTarget.DropTarget(this.element, [UI.DropTarget.Type.File, UI.DropTarget.Type.URI], i18nString(UIStrings.dropTimelineFileOrUrlHere), this.handleDrop.bind(this));\n        this.recordingOptionUIControls = [];\n        this.state = \"Idle\" /* State.IDLE */;\n        this.recordingPageReload = false;\n        this.millisecondsToRecordAfterLoadEvent = 5000;\n        this.toggleRecordAction = UI.ActionRegistry.ActionRegistry.instance().getAction('timeline.toggle-recording');\n        this.recordReloadAction = UI.ActionRegistry.ActionRegistry.instance().getAction('timeline.record-reload');\n        this.#historyManager = new TimelineHistoryManager(this.#minimapComponent);\n        this.traceLoadStart = null;\n        this.disableCaptureJSProfileSetting =\n            Common.Settings.Settings.instance().createSetting('timeline-disable-js-sampling', false);\n        this.disableCaptureJSProfileSetting.setTitle(i18nString(UIStrings.disableJavascriptSamples));\n        this.captureLayersAndPicturesSetting = Common.Settings.Settings.instance().createSetting('timeline-capture-layers-and-pictures', false, \"Session\" /* Common.Settings.SettingStorageType.SESSION */);\n        this.captureLayersAndPicturesSetting.setTitle(i18nString(UIStrings.enableAdvancedPaint));\n        this.captureSelectorStatsSetting = Common.Settings.Settings.instance().createSetting('timeline-capture-selector-stats', false, \"Session\" /* Common.Settings.SettingStorageType.SESSION */);\n        this.captureSelectorStatsSetting.setTitle(i18nString(UIStrings.enableSelectorStats));\n        this.showScreenshotsSetting =\n            Common.Settings.Settings.instance().createSetting('timeline-show-screenshots', isNode ? false : true);\n        this.showScreenshotsSetting.setTitle(i18nString(UIStrings.screenshots));\n        this.showScreenshotsSetting.addChangeListener(this.updateMiniMap, this);\n        this.showMemorySetting = Common.Settings.Settings.instance().createSetting('timeline-show-memory', false);\n        this.showMemorySetting.setTitle(i18nString(UIStrings.memory));\n        this.showMemorySetting.addChangeListener(this.onModeChanged, this);\n        this.#thirdPartyTracksSetting = TimelinePanel.extensionDataVisibilitySetting();\n        this.#thirdPartyTracksSetting.addChangeListener(this.#extensionDataVisibilityChanged, this);\n        this.#thirdPartyTracksSetting.setTitle(i18nString(UIStrings.performanceExtension));\n        const timelineToolbarContainer = this.element.createChild('div', 'timeline-toolbar-container');\n        timelineToolbarContainer.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n        this.panelToolbar = new UI.Toolbar.Toolbar('timeline-main-toolbar', timelineToolbarContainer);\n        this.panelToolbar.makeWrappable(true);\n        this.panelRightToolbar = new UI.Toolbar.Toolbar('', timelineToolbarContainer);\n        if (!isNode) {\n            this.createSettingsPane();\n            this.updateShowSettingsToolbarButton();\n        }\n        this.timelinePane = new UI.Widget.VBox();\n        const topPaneElement = this.timelinePane.element.createChild('div', 'hbox');\n        topPaneElement.id = 'timeline-overview-panel';\n        this.#minimapComponent.show(topPaneElement);\n        this.statusPaneContainer = this.timelinePane.element.createChild('div', 'status-pane-container fill');\n        this.createFileSelector();\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.Load, this.loadEventFired, this);\n        this.flameChart = new TimelineFlameChartView(this);\n        this.#onChartPlayableStateChangeBound = this.#onChartPlayableStateChange.bind(this);\n        this.element.addEventListener('toggle-popover', event => this.flameChart.togglePopover(event.detail));\n        this.flameChart.getMainFlameChart().addEventListener(\"ChartPlayableStateChange\" /* PerfUI.FlameChart.Events.CHART_PLAYABLE_STATE_CHANGED */, this.#onChartPlayableStateChangeBound, this);\n        this.searchableViewInternal = new UI.SearchableView.SearchableView(this.flameChart, null);\n        this.searchableViewInternal.setMinimumSize(0, 100);\n        this.searchableViewInternal.element.classList.add('searchable-view');\n        this.searchableViewInternal.show(this.timelinePane.element);\n        this.flameChart.show(this.searchableViewInternal.element);\n        this.flameChart.setSearchableView(this.searchableViewInternal);\n        this.searchableViewInternal.hideWidget();\n        this.#splitWidget.setMainWidget(this.timelinePane);\n        this.#splitWidget.setSidebarWidget(this.#sideBar);\n        this.#splitWidget.enableShowModeSaving();\n        this.#splitWidget.show(this.element);\n        this.#sideBar.element.addEventListener(TimelineInsights.SidebarInsight.InsightDeactivated.eventName, () => {\n            this.#setActiveInsight(null);\n        });\n        // TODO(crbug.com/372946179): when clicking on an insight chip, this event never fires if the insight tab\n        // is not on the DOM. That only happens when the sidebar tabbed pane component is set to Annotations.\n        // In that case, clicking on the insight chip will do nothing.\n        this.#sideBar.element.addEventListener(TimelineInsights.SidebarInsight.InsightActivated.eventName, event => {\n            const { name, insightSetKey, overlays } = event;\n            this.#setActiveInsight({ name, insightSetKey, overlays });\n        });\n        this.#sideBar.element.addEventListener(TimelineInsights.SidebarInsight.InsightProvideOverlays.eventName, event => {\n            const { overlays, options } = event;\n            this.flameChart.setOverlays(overlays, options);\n            const overlaysBounds = overlays && Overlays.Overlays.traceWindowContainingOverlays(overlays);\n            if (overlaysBounds) {\n                this.#minimapComponent.highlightBounds(overlaysBounds);\n            }\n            else {\n                this.#minimapComponent.clearBoundsHighlight();\n            }\n        });\n        this.#sideBar.element.addEventListener(TimelineInsights.SidebarInsight.InsightProvideRelatedEvents.eventName, event => {\n            const relatedInsight = {\n                insightLabel: event.label,\n                activateInsight: event.activateInsight,\n            };\n            for (const traceEvent of event.events) {\n                const relatedInsights = this.#eventToRelatedInsights.get(traceEvent) ?? [];\n                relatedInsights.push(relatedInsight);\n                this.#eventToRelatedInsights.set(traceEvent, relatedInsights);\n            }\n        });\n        this.flameChart.element.addEventListener(TimelineInsights.EventRef.EventReferenceClick.eventName, event => {\n            const fromTraceEvent = TimelineSelection.fromTraceEvent(event.event);\n            this.flameChart.setSelectionAndReveal(fromTraceEvent);\n        });\n        this.#sideBar.contentElement.addEventListener(TimelineInsights.EventRef.EventReferenceClick.eventName, event => {\n            this.select(TimelineSelection.fromTraceEvent(event.event));\n        });\n        this.#sideBar.element.addEventListener(TimelineComponents.Sidebar.RemoveAnnotation.eventName, event => {\n            const { removedAnnotation } = event;\n            ModificationsManager.activeManager()?.removeAnnotation(removedAnnotation);\n        });\n        this.#sideBar.element.addEventListener(TimelineComponents.Sidebar.RevealAnnotation.eventName, event => {\n            this.flameChart.revealAnnotation(event.annotation);\n        });\n        this.#sideBar.element.addEventListener(TimelineInsights.SidebarInsight.InsightSetHovered.eventName, event => {\n            if (event.bounds) {\n                this.#minimapComponent.highlightBounds(event.bounds);\n            }\n            else {\n                this.#minimapComponent.clearBoundsHighlight();\n            }\n        });\n        this.#sideBar.element.addEventListener(TimelineInsights.SidebarInsight.InsightSetZoom.eventName, event => {\n            TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(event.bounds, { ignoreMiniMapBounds: true, shouldAnimate: true });\n        });\n        this.onModeChanged();\n        this.populateToolbar();\n        // The viewMode is set by default to the landing page, so we don't call\n        // `#changeView` here and can instead directly call showLandingPage();\n        this.#showLandingPage();\n        this.updateTimelineControls();\n        SDK.TargetManager.TargetManager.instance().addEventListener(\"SuspendStateChanged\" /* SDK.TargetManager.Events.SUSPEND_STATE_CHANGED */, this.onSuspendStateChanged, this);\n        const profilerModels = SDK.TargetManager.TargetManager.instance().models(SDK.CPUProfilerModel.CPUProfilerModel);\n        for (const model of profilerModels) {\n            for (const message of model.registeredConsoleProfileMessages) {\n                this.consoleProfileFinished(message);\n            }\n        }\n        SDK.TargetManager.TargetManager.instance().observeModels(SDK.CPUProfilerModel.CPUProfilerModel, {\n            modelAdded: (model) => {\n                model.addEventListener(\"ConsoleProfileFinished\" /* SDK.CPUProfilerModel.Events.CONSOLE_PROFILE_FINISHED */, event => this.consoleProfileFinished(event.data));\n            },\n            modelRemoved: (_model) => {\n            },\n        });\n        SDK.TargetManager.TargetManager.instance().observeTargets({\n            targetAdded: (target) => {\n                if (target !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n                    return;\n                }\n                this.primaryPageTargetPromiseCallback(target);\n            },\n            targetRemoved: (_) => { },\n        });\n    }\n    #setActiveInsight(insight) {\n        if (insight && this.#panelSidebarEnabled()) {\n            this.#splitWidget.showBoth();\n        }\n        this.#sideBar.setActiveInsight(insight);\n        this.flameChart.setActiveInsight(insight);\n    }\n    static instance(opts = { forceNew: null, isNode: false }) {\n        const { forceNew, isNode: isNodeMode } = opts;\n        isNode = isNodeMode;\n        if (!timelinePanelInstance || forceNew) {\n            timelinePanelInstance = new TimelinePanel();\n        }\n        return timelinePanelInstance;\n    }\n    #instantiateNewModel() {\n        const config = Trace.Types.Configuration.defaults();\n        config.showAllEvents = Root.Runtime.experiments.isEnabled('timeline-show-all-events');\n        config.includeRuntimeCallStats = Root.Runtime.experiments.isEnabled('timeline-v8-runtime-call-stats');\n        config.debugMode = Root.Runtime.experiments.isEnabled(\"timeline-debug-mode\" /* Root.Runtime.ExperimentName.TIMELINE_DEBUG_MODE */);\n        return Trace.TraceModel.Model.createWithAllHandlers(config);\n    }\n    static extensionDataVisibilitySetting() {\n        // Calling this multiple times doesn't recreate the setting.\n        // Instead, after the second call, the cached setting is returned.\n        return Common.Settings.Settings.instance().createSetting('timeline-show-extension-data', true);\n    }\n    searchableView() {\n        return this.searchableViewInternal;\n    }\n    wasShown() {\n        super.wasShown();\n        UI.Context.Context.instance().setFlavor(TimelinePanel, this);\n        this.registerCSSFiles([timelinePanelStyles]);\n        // Record the performance tool load time.\n        Host.userMetrics.panelLoaded('timeline', 'DevTools.Launch.Timeline');\n    }\n    willHide() {\n        UI.Context.Context.instance().setFlavor(TimelinePanel, null);\n        this.#historyManager.cancelIfShowing();\n    }\n    loadFromEvents(events) {\n        if (this.state !== \"Idle\" /* State.IDLE */) {\n            return;\n        }\n        this.prepareToLoadTimeline();\n        this.loader = TimelineLoader.loadFromEvents(events, this);\n    }\n    getFlameChart() {\n        return this.flameChart;\n    }\n    getMinimap() {\n        return this.#minimapComponent;\n    }\n    /**\n     * Determine if two view modes are equivalent. Useful because if {@see\n     * #changeView} gets called and the new mode is identical to the current,\n     * we can bail without doing any UI updates.\n     */\n    #viewModesEquivalent(m1, m2) {\n        if (m1.mode === 'LANDING_PAGE' && m2.mode === 'LANDING_PAGE') {\n            return true;\n        }\n        if (m1.mode === 'STATUS_PANE_OVERLAY' && m2.mode === 'STATUS_PANE_OVERLAY') {\n            return true;\n        }\n        // VIEWING_TRACE views are only equivalent if their traceIndex is the same.\n        if (m1.mode === 'VIEWING_TRACE' && m2.mode === 'VIEWING_TRACE' && m1.traceIndex === m2.traceIndex) {\n            return true;\n        }\n        return false;\n    }\n    #uninstallSourceMapsResolver() {\n        if (this.#sourceMapsResolver) {\n            // this set of NodeNames is cached by PIDs, so we clear it so we don't\n            // use incorrect names from another trace that might happen to share\n            // PID/TIDs.\n            Utils.SourceMapsResolver.SourceMapsResolver.clearResolvedNodeNames();\n            this.#sourceMapsResolver.removeEventListener(Utils.SourceMapsResolver.SourceMappingsUpdated.eventName, this.#onSourceMapsNodeNamesResolvedBound);\n            this.#sourceMapsResolver.uninstall();\n            this.#sourceMapsResolver = null;\n        }\n    }\n    #removeStatusPane() {\n        if (this.statusPane) {\n            this.statusPane.remove();\n        }\n        this.statusPane = null;\n    }\n    #changeView(newMode) {\n        if (this.#viewModesEquivalent(this.#viewMode, newMode)) {\n            return;\n        }\n        if (this.#viewMode.mode === 'VIEWING_TRACE') {\n            // If the current / about to be \"old\" view was viewing a trace\n            // we also uninstall any source maps resolver for the trace that was active.\n            // If the user swaps back to this trace via the history dropdown, this will be reinstated.\n            this.#uninstallSourceMapsResolver();\n            // Store any modifications (e.g. annotations) that the user has created\n            // on the current trace before we move away to a new view.\n            this.#saveModificationsForActiveTrace();\n        }\n        this.#viewMode = newMode;\n        this.updateTimelineControls();\n        /**\n         * Note that the TimelinePanel UI is really rendered in two distinct layers.\n         * 1. status-pane-container: this is what renders both the StatusPane\n         *    loading modal AND the landing page.\n         *    What is important to note is that this renders ON TOP of the\n         *    SearchableView widget, which is what holds the FlameChartView.\n         *\n         * 2. SearchableView: this is the container that renders\n         *    TimelineFlameChartView and the rest of the flame chart code.\n         *\n         * What this layering means is that when we swap to the LANDING_PAGE or\n         * STATUS_PANE_OVERLAY view, we don't actually need to reset the\n         * SearchableView that is rendered behind it, because it won't be visible\n         * and will be hidden behind the StatusPane/Landing Page.\n         *\n         * So the only time we update this SearchableView is when the user goes to\n         * view a trace. That is why in the switch() statement below you won't see\n         * any code that resets the SearchableView because we don't need to. We do\n         * mark it as hidden, but mainly so the user can't accidentally use Cmd-F\n         * to search a hidden view.\n         */\n        switch (newMode.mode) {\n            case 'LANDING_PAGE': {\n                this.#removeStatusPane();\n                this.#showLandingPage();\n                // Whilst we don't reset this, we hide it, mainly so the user cannot\n                // hit Ctrl/Cmd-F and try to search when it isn't visible.\n                this.searchableViewInternal.hideWidget();\n                // Hide the brick-breaker easter egg\n                this.brickBreakerToolbarButtonAdded = false;\n                this.panelToolbar.removeToolbarItem(this.brickBreakerToolbarButton);\n                return;\n            }\n            case 'VIEWING_TRACE': {\n                this.#hideLandingPage();\n                this.#setModelForActiveTrace();\n                this.#removeStatusPane();\n                this.#showSidebarIfRequired();\n                return;\n            }\n            case 'STATUS_PANE_OVERLAY': {\n                // We don't manage the StatusPane UI here; it is done in the\n                // recordingStarted/recordingProgress callbacks, but we do make sure we\n                // hide the landing page.\n                this.#hideLandingPage();\n                // We also hide the sidebar - else if the user is viewing a trace and\n                // then load/record another, the sidebar remains visible.\n                this.#hideSidebar();\n                return;\n            }\n            default:\n                Platform.assertNever(newMode, 'Unsupported TimelinePanel viewMode');\n        }\n    }\n    #activeTraceIndex() {\n        if (this.#viewMode.mode === 'VIEWING_TRACE') {\n            return this.#viewMode.traceIndex;\n        }\n        return null;\n    }\n    /**\n     * NOTE: this method only exists to enable some layout tests to be migrated to the new engine.\n     * DO NOT use this method within DevTools. It is marked as deprecated so\n     * within DevTools you are warned when using the method.\n     * @deprecated\n     **/\n    getParsedTraceForLayoutTests() {\n        const traceIndex = this.#activeTraceIndex();\n        if (traceIndex === null) {\n            throw new Error('No trace index active.');\n        }\n        const data = this.#traceEngineModel.parsedTrace(traceIndex);\n        if (data === null) {\n            throw new Error('No trace engine data found.');\n        }\n        return data;\n    }\n    /**\n     * NOTE: this method only exists to enable some layout tests to be migrated to the new engine.\n     * DO NOT use this method within DevTools. It is marked as deprecated so\n     * within DevTools you are warned when using the method.\n     * @deprecated\n     **/\n    getTraceEngineRawTraceEventsForLayoutTests() {\n        const traceIndex = this.#activeTraceIndex();\n        if (traceIndex === null) {\n            throw new Error('No trace index active.');\n        }\n        const data = this.#traceEngineModel.rawTraceEvents(traceIndex);\n        if (data === null) {\n            throw new Error('No trace engine data found.');\n        }\n        return data;\n    }\n    #onChartPlayableStateChange(event) {\n        if (event.data) {\n            const dateObj = new Date();\n            const month = dateObj.getUTCMonth() + 1;\n            const day = dateObj.getUTCDate();\n            const isAprilFools = (month === 4 && (day === 1 || day === 2)); // Show only on April fools and the next day\n            if (isAprilFools && !this.brickBreakerToolbarButtonAdded && SHOULD_SHOW_EASTER_EGG) {\n                this.brickBreakerToolbarButtonAdded = true;\n                this.panelToolbar.appendToolbarItem(this.brickBreakerToolbarButton);\n            }\n        }\n        else {\n            this.brickBreakerToolbarButtonAdded = false;\n            this.panelToolbar.removeToolbarItem(this.brickBreakerToolbarButton);\n        }\n    }\n    loadFromCpuProfile(profile) {\n        if (this.state !== \"Idle\" /* State.IDLE */ || profile === null) {\n            return;\n        }\n        this.prepareToLoadTimeline();\n        this.loader = TimelineLoader.loadFromCpuProfile(profile, this);\n    }\n    setState(state) {\n        this.state = state;\n        this.updateTimelineControls();\n    }\n    createSettingCheckbox(setting, tooltip) {\n        const checkboxItem = new UI.Toolbar.ToolbarSettingCheckbox(setting, tooltip);\n        this.recordingOptionUIControls.push(checkboxItem);\n        return checkboxItem;\n    }\n    /**\n     * Users don't explicitly opt in to the sidebar, but if they opt into either\n     * Insights or Annotations, we will show the sidebar.\n     */\n    #panelSidebarEnabled() {\n        const sidebarEnabled = Root.Runtime.experiments.isEnabled(\"timeline-rpp-sidebar\" /* Root.Runtime.ExperimentName.TIMELINE_INSIGHTS */) ||\n            Root.Runtime.experiments.isEnabled(\"perf-panel-annotations\" /* Root.Runtime.ExperimentName.TIMELINE_ANNOTATIONS */);\n        return sidebarEnabled;\n    }\n    #addSidebarIconToToolbar() {\n        if (!this.#panelSidebarEnabled()) {\n            return;\n        }\n        if (this.panelToolbar.hasItem(this.#sidebarToggleButton)) {\n            return;\n        }\n        this.panelToolbar.prependToolbarItem(this.#sidebarToggleButton);\n    }\n    /**\n     * Used when the user deletes their last trace and is taken back to the\n     * landing page - we don't add this icon until there is a trace loaded.\n     */\n    #removeSidebarIconFromToolbar() {\n        this.panelToolbar.removeToolbarItem(this.#sidebarToggleButton);\n    }\n    populateDownloadMenu(contextMenu) {\n        contextMenu.viewSection().appendItem(i18nString(UIStrings.saveTraceWithAnnotationsMenuOption), () => {\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.PerfPanelTraceExported);\n            void this.saveToFile(/* isEnhancedTraces */ false, /* addModifications */ true);\n        });\n        contextMenu.viewSection().appendItem(i18nString(UIStrings.saveTraceWithoutAnnotationsMenuOption), () => {\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.PerfPanelTraceExported);\n            void this.saveToFile();\n        });\n    }\n    populateToolbar() {\n        // Record\n        this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.toggleRecordAction));\n        this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.recordReloadAction));\n        this.clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clear), 'clear', undefined, 'timeline.clear');\n        this.clearButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, () => this.onClearButton());\n        this.panelToolbar.appendToolbarItem(this.clearButton);\n        // Load / SaveCLICK\n        this.loadButton =\n            new UI.Toolbar.ToolbarButton(i18nString(UIStrings.loadProfile), 'import', undefined, 'timeline.load-from-file');\n        this.loadButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, () => {\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.PerfPanelTraceImported);\n            this.selectFileToLoad();\n        });\n        if (Root.Runtime.experiments.isEnabled(\"perf-panel-annotations\" /* Root.Runtime.ExperimentName.TIMELINE_ANNOTATIONS */)) {\n            this.saveButton = new UI.Toolbar.ToolbarMenuButton(this.populateDownloadMenu.bind(this), true, true, 'timeline.save-to-file-more-options', 'download');\n            this.saveButton.setTitle(i18nString(UIStrings.saveProfile));\n        }\n        else {\n            this.saveButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.saveProfile), 'download', undefined, 'timeline.save-to-file');\n            this.saveButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, _event => {\n                Host.userMetrics.actionTaken(Host.UserMetrics.Action.PerfPanelTraceExported);\n                void this.saveToFile();\n            });\n        }\n        if (Root.Runtime.experiments.isEnabled(\"timeline-enhanced-traces\" /* Root.Runtime.ExperimentName.TIMELINE_ENHANCED_TRACES */)) {\n            this.saveButton.element.addEventListener('contextmenu', event => {\n                event.preventDefault();\n                event.stopPropagation();\n                if (event.ctrlKey || event.button === 2) {\n                    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n                    contextMenu.saveSection().appendItem(i18nString(UIStrings.exportNormalTraces), () => {\n                        void this.saveToFile();\n                    });\n                    contextMenu.saveSection().appendItem(i18nString(UIStrings.exportEnhancedTraces), () => {\n                        void this.saveToFile(/* isEnhancedTraces */ true);\n                    });\n                    void contextMenu.show();\n                }\n                else {\n                    void this.saveToFile();\n                }\n            });\n        }\n        this.panelToolbar.appendSeparator();\n        this.panelToolbar.appendToolbarItem(this.loadButton);\n        this.panelToolbar.appendToolbarItem(this.saveButton);\n        // History\n        this.panelToolbar.appendSeparator();\n        this.panelToolbar.appendToolbarItem(this.#historyManager.button());\n        this.panelToolbar.registerCSSFiles([historyToolbarButtonStyles]);\n        this.panelToolbar.appendSeparator();\n        // View\n        this.panelToolbar.appendSeparator();\n        if (!isNode) {\n            this.showScreenshotsToolbarCheckbox =\n                this.createSettingCheckbox(this.showScreenshotsSetting, i18nString(UIStrings.captureScreenshots));\n            this.panelToolbar.appendToolbarItem(this.showScreenshotsToolbarCheckbox);\n        }\n        this.showMemoryToolbarCheckbox =\n            this.createSettingCheckbox(this.showMemorySetting, i18nString(UIStrings.showMemoryTimeline));\n        this.panelToolbar.appendToolbarItem(this.showMemoryToolbarCheckbox);\n        // GC\n        this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButtonForId('components.collect-garbage'));\n        // Isolate selector\n        const isolateSelector = new IsolateSelector();\n        if (isNode) {\n            this.panelToolbar.appendSeparator();\n            this.panelToolbar.appendToolbarItem(isolateSelector);\n        }\n        // Settings\n        if (!isNode) {\n            this.panelRightToolbar.appendSeparator();\n            this.panelRightToolbar.appendToolbarItem(this.showSettingsPaneButton);\n        }\n    }\n    createSettingsPane() {\n        this.showSettingsPaneSetting =\n            Common.Settings.Settings.instance().createSetting('timeline-show-settings-toolbar', false);\n        this.showSettingsPaneButton = new UI.Toolbar.ToolbarSettingToggle(this.showSettingsPaneSetting, 'gear', i18nString(UIStrings.captureSettings), 'gear-filled', 'timeline-settings-toggle');\n        SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\"ConditionsChanged\" /* SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED */, this.updateShowSettingsToolbarButton, this);\n        SDK.CPUThrottlingManager.CPUThrottlingManager.instance().addEventListener(\"RateChanged\" /* SDK.CPUThrottlingManager.Events.RATE_CHANGED */, this.updateShowSettingsToolbarButton, this);\n        this.disableCaptureJSProfileSetting.addChangeListener(this.updateShowSettingsToolbarButton, this);\n        this.captureLayersAndPicturesSetting.addChangeListener(this.updateShowSettingsToolbarButton, this);\n        this.captureSelectorStatsSetting.addChangeListener(this.updateShowSettingsToolbarButton, this);\n        this.settingsPane = new UI.Widget.HBox();\n        this.settingsPane.element.classList.add('timeline-settings-pane');\n        this.settingsPane.element.setAttribute('jslog', `${VisualLogging.pane('timeline-settings-pane').track({ resize: true })}`);\n        this.settingsPane.show(this.element);\n        const captureToolbar = new UI.Toolbar.Toolbar('', this.settingsPane.element);\n        captureToolbar.element.classList.add('flex-auto');\n        captureToolbar.makeVertical();\n        captureToolbar.appendToolbarItem(this.createSettingCheckbox(this.disableCaptureJSProfileSetting, i18nString(UIStrings.disablesJavascriptSampling)));\n        captureToolbar.appendToolbarItem(this.createSettingCheckbox(this.captureLayersAndPicturesSetting, i18nString(UIStrings.capturesAdvancedPaint)));\n        captureToolbar.appendToolbarItem(this.createSettingCheckbox(this.captureSelectorStatsSetting, i18nString(UIStrings.capturesSelectorStats)));\n        const throttlingPane = new UI.Widget.VBox();\n        throttlingPane.element.classList.add('flex-auto');\n        throttlingPane.show(this.settingsPane.element);\n        const cpuThrottlingToolbar = new UI.Toolbar.Toolbar('', throttlingPane.element);\n        cpuThrottlingToolbar.appendText(i18nString(UIStrings.cpu));\n        this.cpuThrottlingSelect = MobileThrottling.ThrottlingManager.throttlingManager().createCPUThrottlingSelector();\n        cpuThrottlingToolbar.appendToolbarItem(this.cpuThrottlingSelect);\n        const networkThrottlingToolbar = new UI.Toolbar.Toolbar('', throttlingPane.element);\n        networkThrottlingToolbar.appendText(i18nString(UIStrings.network));\n        this.networkThrottlingSelect = this.createNetworkConditionsSelect();\n        networkThrottlingToolbar.appendToolbarItem(this.networkThrottlingSelect);\n        const thirdPartyToolbar = new UI.Toolbar.Toolbar('', throttlingPane.element);\n        thirdPartyToolbar.makeVertical();\n        const thirdPartyCheckbox = this.createSettingCheckbox(this.#thirdPartyTracksSetting, i18nString(UIStrings.showDataAddedByExtensions));\n        const localLink = UI.XLink.XLink.create('https://developer.chrome.com/docs/devtools/performance/extension', i18nString(UIStrings.learnMore));\n        localLink.style.paddingLeft = '5px';\n        thirdPartyCheckbox.element.shadowRoot?.appendChild(localLink);\n        thirdPartyToolbar.appendToolbarItem(thirdPartyCheckbox);\n        this.showSettingsPaneSetting.addChangeListener(this.updateSettingsPaneVisibility.bind(this));\n        this.updateSettingsPaneVisibility();\n    }\n    createNetworkConditionsSelect() {\n        const toolbarItem = new UI.Toolbar.ToolbarComboBox(null, i18nString(UIStrings.networkConditions));\n        toolbarItem.setMaxWidth(140);\n        MobileThrottling.ThrottlingManager.throttlingManager().decorateSelectWithNetworkThrottling(toolbarItem.selectElement());\n        return toolbarItem;\n    }\n    prepareToLoadTimeline() {\n        console.assert(this.state === \"Idle\" /* State.IDLE */);\n        this.setState(\"Loading\" /* State.LOADING */);\n    }\n    createFileSelector() {\n        if (this.fileSelectorElement) {\n            this.fileSelectorElement.remove();\n        }\n        // .gz is far more popular than .gzip, but both are valid.\n        this.fileSelectorElement =\n            UI.UIUtils.createFileSelectorElement(this.loadFromFile.bind(this), '.json,.gz,.gzip,.cpuprofile');\n        this.timelinePane.element.appendChild(this.fileSelectorElement);\n    }\n    contextMenu(event) {\n        // Do not show this Context menu on FlameChart entries because we have a different context menu for FlameChart entries\n        const mouseEvent = event;\n        if (this.flameChart.getMainFlameChart().coordinatesToEntryIndex(mouseEvent.offsetX, mouseEvent.offsetY) !== -1) {\n            return;\n        }\n        const contextMenu = new UI.ContextMenu.ContextMenu(event, { useSoftMenu: true });\n        contextMenu.appendItemsAtLocation('timelineMenu');\n        void contextMenu.show();\n    }\n    async saveToFile(isEnhancedTraces = false, addModifications = false) {\n        if (this.state !== \"Idle\" /* State.IDLE */) {\n            return;\n        }\n        if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n            return;\n        }\n        const traceEvents = this.#traceEngineModel.rawTraceEvents(this.#viewMode.traceIndex);\n        const metadata = this.#traceEngineModel.metadata(this.#viewMode.traceIndex);\n        // Save modifications into the metadata if modifications experiment is on\n        if (Root.Runtime.experiments.isEnabled(\"perf-panel-annotations\" /* Root.Runtime.ExperimentName.TIMELINE_ANNOTATIONS */) && metadata &&\n            addModifications) {\n            metadata.modifications = ModificationsManager.activeManager()?.toJSON();\n        }\n        else if (metadata) {\n            delete metadata.modifications;\n        }\n        if (metadata && isEnhancedTraces) {\n            metadata.enhancedTraceVersion = SDK.EnhancedTracesParser.EnhancedTracesParser.enhancedTraceVersion;\n        }\n        if (!traceEvents) {\n            return;\n        }\n        const traceStart = Platform.DateUtilities.toISO8601Compact(new Date());\n        let fileName;\n        if (metadata?.dataOrigin === \"CPUProfile\" /* Trace.Types.File.DataOrigin.CPU_PROFILE */) {\n            fileName = `CPU-${traceStart}.cpuprofile`;\n        }\n        else if (metadata && metadata.enhancedTraceVersion) {\n            fileName = `EnhancedTraces-${traceStart}.json`;\n        }\n        else {\n            fileName = `Trace-${traceStart}.json`;\n        }\n        try {\n            // TODO(crbug.com/1456818): Extract this logic and add more tests.\n            let traceAsString;\n            if (metadata?.dataOrigin === \"CPUProfile\" /* Trace.Types.File.DataOrigin.CPU_PROFILE */) {\n                const profileEvent = traceEvents.find(e => e.name === 'CpuProfile');\n                if (!profileEvent || !profileEvent.args?.data) {\n                    return;\n                }\n                const profileEventData = profileEvent.args?.data;\n                if (profileEventData.hasOwnProperty('cpuProfile')) {\n                    // TODO(crbug.com/1456799): Currently use a hack way because we can't differentiate\n                    // cpuprofile from trace events when loading a file.\n                    // The loader will directly add the fake trace created from CpuProfile to the tracingModel.\n                    // And there is where the old saving logic saves the cpuprofile.\n                    // This will be solved when the CPUProfileHandler is done. Then we can directly get it\n                    // from the new traceEngine\n                    const profile = profileEventData.cpuProfile;\n                    traceAsString = cpuprofileJsonGenerator(profile);\n                }\n            }\n            else {\n                const formattedTraceIter = traceJsonGenerator(traceEvents, metadata);\n                traceAsString = Array.from(formattedTraceIter).join('');\n            }\n            if (!traceAsString) {\n                throw new Error('Trace content empty');\n            }\n            await Workspace.FileManager.FileManager.instance().save(fileName, traceAsString, true /* forceSaveAs */, false /* isBase64 */);\n            Workspace.FileManager.FileManager.instance().close(fileName);\n        }\n        catch (error) {\n            console.error(error.stack);\n            if (error.name === 'AbortError') {\n                // The user cancelled the action, so this is not an error we need to report.\n                return;\n            }\n            Common.Console.Console.instance().error(i18nString(UIStrings.failedToSaveTimelineSS, { PH1: error.message, PH2: error.name }));\n        }\n    }\n    async showHistoryDropdown() {\n        const recordingData = await this.#historyManager.showHistoryDropDown();\n        if (recordingData) {\n            if (recordingData.type === 'LANDING_PAGE') {\n                this.#changeView({ mode: 'LANDING_PAGE' });\n            }\n            else {\n                this.#changeView({\n                    mode: 'VIEWING_TRACE',\n                    traceIndex: recordingData.parsedTraceIndex,\n                });\n            }\n        }\n    }\n    navigateHistory(direction) {\n        const recordingData = this.#historyManager.navigate(direction);\n        // When navigating programatically, you cannot navigate to the landing page\n        // view, so we can discount that possibility here.\n        if (recordingData && recordingData.type === 'TRACE_INDEX') {\n            this.#changeView({\n                mode: 'VIEWING_TRACE',\n                traceIndex: recordingData.parsedTraceIndex,\n            });\n        }\n        return true;\n    }\n    #saveModificationsForActiveTrace() {\n        if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n            return;\n        }\n        const newModifications = ModificationsManager.activeManager()?.toJSON();\n        if (newModifications) {\n            this.#traceEngineModel.overrideModifications(this.#viewMode.traceIndex, newModifications);\n        }\n    }\n    selectFileToLoad() {\n        if (this.fileSelectorElement) {\n            this.fileSelectorElement.click();\n        }\n    }\n    async loadFromFile(file) {\n        if (this.state !== \"Idle\" /* State.IDLE */) {\n            return;\n        }\n        this.prepareToLoadTimeline();\n        this.loader = await TimelineLoader.loadFromFile(file, this);\n        this.createFileSelector();\n    }\n    async loadFromURL(url) {\n        if (this.state !== \"Idle\" /* State.IDLE */) {\n            return;\n        }\n        this.prepareToLoadTimeline();\n        this.loader = await TimelineLoader.loadFromURL(url, this);\n    }\n    updateMiniMap() {\n        if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n            return;\n        }\n        const parsedTrace = this.#traceEngineModel.parsedTrace(this.#viewMode.traceIndex);\n        const isCpuProfile = this.#traceEngineModel.metadata(this.#viewMode.traceIndex)?.dataOrigin ===\n            \"CPUProfile\" /* Trace.Types.File.DataOrigin.CPU_PROFILE */;\n        if (!parsedTrace) {\n            return;\n        }\n        this.#minimapComponent.setData({\n            parsedTrace,\n            isCpuProfile,\n            settings: {\n                showScreenshots: this.showScreenshotsSetting.get(),\n                showMemory: this.showMemorySetting.get(),\n            },\n        });\n    }\n    onModeChanged() {\n        this.flameChart.updateCountersGraphToggle(this.showMemorySetting.get());\n        this.updateMiniMap();\n        this.doResize();\n        this.select(null);\n    }\n    #extensionDataVisibilityChanged() {\n        this.flameChart.extensionDataVisibilityChanged();\n    }\n    updateSettingsPaneVisibility() {\n        if (isNode) {\n            return;\n        }\n        if (this.showSettingsPaneSetting.get()) {\n            this.showSettingsPaneButton.setToggled(true);\n            this.settingsPane.showWidget();\n        }\n        else {\n            this.showSettingsPaneButton.setToggled(false);\n            this.settingsPane.hideWidget();\n        }\n    }\n    updateShowSettingsToolbarButton() {\n        const messages = [];\n        if (SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingRate() !== 1) {\n            messages.push(i18nString(UIStrings.CpuThrottlingIsEnabled));\n        }\n        if (SDK.NetworkManager.MultitargetNetworkManager.instance().isThrottling()) {\n            messages.push(i18nString(UIStrings.NetworkThrottlingIsEnabled));\n        }\n        if (this.captureLayersAndPicturesSetting.get()) {\n            messages.push(i18nString(UIStrings.SignificantOverheadDueToPaint));\n        }\n        if (this.captureSelectorStatsSetting.get()) {\n            messages.push(i18nString(UIStrings.SelectorStatsEnabled));\n        }\n        if (this.disableCaptureJSProfileSetting.get()) {\n            messages.push(i18nString(UIStrings.JavascriptSamplingIsDisabled));\n        }\n        this.showSettingsPaneButton.setChecked(messages.length > 0);\n        this.showSettingsPaneButton.element.style.setProperty('--dot-toggle-top', '16px');\n        this.showSettingsPaneButton.element.style.setProperty('--dot-toggle-left', '15px');\n        if (messages.length) {\n            const tooltipElement = document.createElement('div');\n            messages.forEach(message => {\n                tooltipElement.createChild('div').textContent = message;\n            });\n            this.showSettingsPaneButton.setTitle(tooltipElement.textContent || '');\n        }\n        else {\n            this.showSettingsPaneButton.setTitle(i18nString(UIStrings.captureSettings));\n        }\n    }\n    setUIControlsEnabled(enabled) {\n        this.recordingOptionUIControls.forEach(control => control.setEnabled(enabled));\n    }\n    async #evaluateInspectedURL() {\n        if (!this.controller) {\n            return Platform.DevToolsPath.EmptyUrlString;\n        }\n        // target.inspectedURL is reliably populated, however it lacks any url #hash\n        const inspectedURL = this.controller.primaryPageTarget.inspectedURL();\n        // We'll use the navigationHistory to acquire the current URL including hash\n        const resourceTreeModel = this.controller.primaryPageTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n        const navHistory = resourceTreeModel && await resourceTreeModel.navigationHistory();\n        if (!resourceTreeModel || !navHistory) {\n            return inspectedURL;\n        }\n        const { currentIndex, entries } = navHistory;\n        const navigationEntry = entries[currentIndex];\n        return navigationEntry.url;\n    }\n    async #navigateToAboutBlank() {\n        const aboutBlankNavigationComplete = new Promise(async (resolve, reject) => {\n            if (!this.controller) {\n                reject('Could not find TimelineController');\n                return;\n            }\n            const target = this.controller.primaryPageTarget;\n            const resourceModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n            if (!resourceModel) {\n                reject('Could not load resourceModel');\n                return;\n            }\n            // To clear out the page and any state from prior test runs, we\n            // navigate to about:blank before initiating the trace recording.\n            // Once we have navigated to about:blank, we start recording and\n            // then navigate to the original page URL, to ensure we profile the\n            // page load.\n            function waitForAboutBlank(event) {\n                if (event.data.url === 'about:blank') {\n                    resolve();\n                }\n                else {\n                    reject(`Unexpected navigation to ${event.data.url}`);\n                }\n                resourceModel?.removeEventListener(SDK.ResourceTreeModel.Events.FrameNavigated, waitForAboutBlank);\n            }\n            resourceModel.addEventListener(SDK.ResourceTreeModel.Events.FrameNavigated, waitForAboutBlank);\n            await resourceModel.navigate('about:blank');\n        });\n        await aboutBlankNavigationComplete;\n    }\n    async #startCPUProfilingRecording() {\n        try {\n            this.cpuProfiler = UI.Context.Context.instance().flavor(SDK.CPUProfilerModel.CPUProfilerModel);\n            if (!this.cpuProfiler) {\n                // If there is no isolate selected, we will profile the first isolate that devtools connects to.\n                // If we profile all target, but this will cause some bugs like time for the function is calculated wrong,\n                // because the profiles will be concated and sorted together, so the total time will be amplified.\n                // Multiple targets problem might happen when you inspect multiple node servers on different port at same time,\n                // or when you let DevTools listen to both locolhost:9229 & 127.0.0.1:9229.\n                const firstNodeTarget = SDK.TargetManager.TargetManager.instance().targets().find(target => target.type() === SDK.Target.Type.NODE);\n                if (!firstNodeTarget) {\n                    throw new Error('Could not load any Node target.');\n                }\n                if (firstNodeTarget) {\n                    this.cpuProfiler = firstNodeTarget.model(SDK.CPUProfilerModel.CPUProfilerModel);\n                }\n            }\n            this.setUIControlsEnabled(false);\n            this.#changeView({ mode: 'STATUS_PANE_OVERLAY' });\n            if (!this.cpuProfiler) {\n                throw new Error('No Node target is found.');\n            }\n            await SDK.TargetManager.TargetManager.instance().suspendAllTargets('performance-timeline');\n            await this.cpuProfiler.startRecording();\n            this.recordingStarted();\n        }\n        catch (e) {\n            await this.recordingFailed(e.message);\n        }\n    }\n    async #startTraceRecording() {\n        try {\n            // We record against the root target, but also need to use the\n            // primaryPageTarget to inspect the current URL. For more info, see the\n            // JSDoc comment on the TimelineController constructor.\n            const rootTarget = SDK.TargetManager.TargetManager.instance().rootTarget();\n            const primaryPageTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n            if (!primaryPageTarget) {\n                throw new Error('Could not load primary page target.');\n            }\n            if (!rootTarget) {\n                throw new Error('Could not load root target.');\n            }\n            if (UIDevtoolsUtils.isUiDevTools()) {\n                this.controller = new UIDevtoolsController(rootTarget, primaryPageTarget, this);\n            }\n            else {\n                this.controller = new TimelineController(rootTarget, primaryPageTarget, this);\n            }\n            this.setUIControlsEnabled(false);\n            this.#changeView({ mode: 'STATUS_PANE_OVERLAY' });\n            if (!this.controller) {\n                throw new Error('Could not create Timeline controller');\n            }\n            const urlToTrace = await this.#evaluateInspectedURL();\n            // If we are doing \"Reload & record\", we first navigate the page to\n            // about:blank. This is to ensure any data on the timeline from any\n            // previous performance recording is lost, avoiding the problem where a\n            // timeline will show data & screenshots from a previous page load that\n            // was not relevant.\n            if (this.recordingPageReload) {\n                await this.#navigateToAboutBlank();\n            }\n            const recordingOptions = {\n                enableJSSampling: !this.disableCaptureJSProfileSetting.get(),\n                capturePictures: this.captureLayersAndPicturesSetting.get(),\n                captureFilmStrip: this.showScreenshotsSetting.get(),\n                captureSelectorStats: this.captureSelectorStatsSetting.get(),\n            };\n            // Order is important here: we tell the controller to start recording, which enables tracing.\n            const response = await this.controller.startRecording(recordingOptions);\n            if (response.getError()) {\n                throw new Error(response.getError());\n            }\n            // Once we get here, we know tracing is active.\n            // This is when, if the user has hit \"Reload & Record\" that we now need to navigate to the original URL.\n            // If the user has just hit \"record\", we don't do any navigating.\n            const recordingConfig = this.recordingPageReload ? { navigateToUrl: urlToTrace } : undefined;\n            this.recordingStarted(recordingConfig);\n        }\n        catch (e) {\n            await this.recordingFailed(e.message);\n        }\n    }\n    async startRecording() {\n        console.assert(!this.statusPane, 'Status pane is already opened.');\n        this.setState(\"StartPending\" /* State.START_PENDING */);\n        this.showRecordingStarted();\n        if (isNode) {\n            await this.#startCPUProfilingRecording();\n        }\n        else {\n            await this.#startTraceRecording();\n        }\n    }\n    async stopRecording() {\n        if (this.statusPane) {\n            this.statusPane.finish();\n            this.statusPane.updateStatus(i18nString(UIStrings.stoppingTimeline));\n            this.statusPane.updateProgressBar(i18nString(UIStrings.received), 0);\n        }\n        this.setState(\"StopPending\" /* State.STOP_PENDING */);\n        if (this.controller) {\n            await this.controller.stopRecording();\n            this.setUIControlsEnabled(true);\n            await this.controller.dispose();\n            this.controller = null;\n            return;\n        }\n        if (this.cpuProfiler) {\n            const profile = await this.cpuProfiler.stopRecording();\n            this.setState(\"Idle\" /* State.IDLE */);\n            this.loadFromCpuProfile(profile);\n            this.setUIControlsEnabled(true);\n            this.cpuProfiler = null;\n            await SDK.TargetManager.TargetManager.instance().resumeAllTargets();\n        }\n    }\n    async recordingFailed(error, rawEvents) {\n        if (this.statusPane) {\n            this.statusPane.remove();\n        }\n        this.statusPane = new StatusPane({\n            description: error,\n            buttonText: i18nString(UIStrings.close),\n            buttonDisabled: false,\n            showProgress: undefined,\n            showTimer: undefined,\n        }, \n        // When recording failed, we should load null to go back to the landing page.\n        async () => {\n            this.statusPane?.remove();\n            await this.loadingComplete(\n            /* no collectedEvents */ [], \n            /* exclusiveFilter= */ null, \n            /* isCpuProfile= */ false, \n            /* recordingStartTime= */ null, \n            /* metadata= */ null);\n        });\n        this.statusPane.showPane(this.statusPaneContainer);\n        this.statusPane.updateStatus(i18nString(UIStrings.recordingFailed));\n        if (rawEvents) {\n            this.statusPane.enableDownloadOfEvents(rawEvents);\n        }\n        this.setState(\"RecordingFailed\" /* State.RECORDING_FAILED */);\n        this.traceLoadStart = null;\n        this.setUIControlsEnabled(true);\n        if (this.controller) {\n            await this.controller.dispose();\n            this.controller = null;\n        }\n        // Ensure we resume all targets, otherwise DevTools remains unresponsive in the event of an error.\n        void SDK.TargetManager.TargetManager.instance().resumeAllTargets();\n    }\n    onSuspendStateChanged() {\n        this.updateTimelineControls();\n    }\n    consoleProfileFinished(data) {\n        this.loadFromCpuProfile(data.cpuProfile);\n        void UI.InspectorView.InspectorView.instance().showPanel('timeline');\n    }\n    updateTimelineControls() {\n        this.toggleRecordAction.setToggled(this.state === \"Recording\" /* State.RECORDING */);\n        this.toggleRecordAction.setEnabled(this.state === \"Recording\" /* State.RECORDING */ || this.state === \"Idle\" /* State.IDLE */);\n        this.recordReloadAction.setEnabled(isNode ? false : this.state === \"Idle\" /* State.IDLE */);\n        this.#historyManager.setEnabled(this.state === \"Idle\" /* State.IDLE */);\n        this.clearButton.setEnabled(this.state === \"Idle\" /* State.IDLE */);\n        this.panelToolbar.setEnabled(this.state !== \"Loading\" /* State.LOADING */);\n        this.panelRightToolbar.setEnabled(this.state !== \"Loading\" /* State.LOADING */);\n        this.dropTarget.setEnabled(this.state === \"Idle\" /* State.IDLE */);\n        this.loadButton.setEnabled(this.state === \"Idle\" /* State.IDLE */);\n        this.saveButton.setEnabled(this.state === \"Idle\" /* State.IDLE */ && this.#hasActiveTrace());\n        if (this.#viewMode.mode === 'VIEWING_TRACE') {\n            this.#addSidebarIconToToolbar();\n        }\n    }\n    async toggleRecording() {\n        if (this.state === \"Idle\" /* State.IDLE */) {\n            this.recordingPageReload = false;\n            await this.startRecording();\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.TimelineStarted);\n        }\n        else if (this.state === \"Recording\" /* State.RECORDING */) {\n            await this.stopRecording();\n        }\n    }\n    recordReload() {\n        if (this.state !== \"Idle\" /* State.IDLE */) {\n            return;\n        }\n        this.recordingPageReload = true;\n        void this.startRecording();\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.TimelinePageReloadStarted);\n    }\n    onClearButton() {\n        this.#historyManager.clear();\n        this.#traceEngineModel = this.#instantiateNewModel();\n        ModificationsManager.reset();\n        this.#uninstallSourceMapsResolver();\n        this.flameChart.getMainDataProvider().reset(true);\n        this.flameChart.reset();\n        this.#changeView({ mode: 'LANDING_PAGE' });\n    }\n    #hasActiveTrace() {\n        return this.#viewMode.mode === 'VIEWING_TRACE';\n    }\n    #onBrickBreakerEasterEggClick() {\n        if (!this.#hasActiveTrace()) {\n            return;\n        }\n        this.flameChart.runBrickBreakerGame();\n    }\n    #applyActiveFilters(traceIsGeneric, exclusiveFilter = null) {\n        if (traceIsGeneric || Root.Runtime.experiments.isEnabled('timeline-show-all-events')) {\n            return;\n        }\n        const newActiveFilters = exclusiveFilter ? [exclusiveFilter] : [\n            TimelineUIUtils.visibleEventsFilter(),\n        ];\n        ActiveFilters.instance().setFilters(newActiveFilters);\n    }\n    /**\n     * If we generate a lot of the same aria announcements very quickly, we don't\n     * want to send them all to the user.\n     */\n    #ariaDebouncer = Common.Debouncer.debounce(() => {\n        if (this.#pendingAriaMessage) {\n            UI.ARIAUtils.alert(this.#pendingAriaMessage);\n            this.#pendingAriaMessage = null;\n        }\n    }, 1_000);\n    #makeAriaAnnouncement(message) {\n        // If we already have one pending, don't queue this one.\n        if (message === this.#pendingAriaMessage) {\n            return;\n        }\n        // If the pending message is different, immediately announce the pending\n        // message + then update the pending message to the new one.\n        if (this.#pendingAriaMessage) {\n            UI.ARIAUtils.alert(this.#pendingAriaMessage);\n        }\n        this.#pendingAriaMessage = message;\n        this.#ariaDebouncer();\n    }\n    /**\n     * Called when we update the active trace that is being shown to the user.\n     * This is called from {@see changeView} when we change the UI to show a\n     * trace - either one the user has just recorded/imported, or one they have\n     * navigated to via the dropdown.\n     *\n     * If you need code to execute whenever the active trace changes, this is the method to use.\n     * If you need code to execute ONLY ON NEW TRACES, then use {@see loadingComplete}\n     * You should not call this method directly if you want the UI to update; use\n     * {@see changeView} to control what is shown to the user.\n     */\n    #setModelForActiveTrace() {\n        if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n            return;\n        }\n        const { traceIndex } = this.#viewMode;\n        const parsedTrace = this.#traceEngineModel.parsedTrace(traceIndex);\n        const syntheticEventsManager = this.#traceEngineModel.syntheticTraceEventsManager(traceIndex);\n        if (!parsedTrace || !syntheticEventsManager) {\n            // This should not happen, because you can only get into the\n            // VIEWING_TRACE viewMode if you have a valid trace index from the\n            // Trace Engine. If it does, let's bail back to the landing page.\n            console.error(`setModelForActiveTrace was called with an invalid trace index: ${traceIndex}`);\n            this.#changeView({ mode: 'LANDING_PAGE' });\n            return;\n        }\n        Trace.Helpers.SyntheticEvents.SyntheticEventsManager.activate(syntheticEventsManager);\n        // Clear the line level profile that could exist from the previous trace.\n        PerfUI.LineLevelProfile.Performance.instance().reset();\n        this.#minimapComponent.reset();\n        // Order is important: the bounds must be set before we initiate any UI\n        // rendering.\n        TraceBounds.TraceBounds.BoundsManager.instance().resetWithNewBounds(parsedTrace.Meta.traceBounds);\n        // Set up the modifications manager for the newly active trace.\n        // The order is important: this needs to happen before we trigger a flame chart redraw by setting the model.\n        // (it could happen after, but then we would need to trigger a fresh redraw so let's not do that)\n        const currentManager = ModificationsManager.initAndActivateModificationsManager(this.#traceEngineModel, traceIndex);\n        if (!currentManager) {\n            console.error('ModificationsManager could not be created or activated.');\n        }\n        this.statusPane?.updateProgressBar(i18nString(UIStrings.processed), 70);\n        const isCpuProfile = this.#traceEngineModel.metadata(traceIndex)?.dataOrigin === \"CPUProfile\" /* Trace.Types.File.DataOrigin.CPU_PROFILE */;\n        this.flameChart.setModel(parsedTrace, isCpuProfile);\n        this.flameChart.resizeToPreferredHeights();\n        // Reset the visual selection as we've just swapped to a new trace.\n        this.flameChart.setSelectionAndReveal(null);\n        this.#sideBar.setParsedTrace(parsedTrace);\n        this.searchableViewInternal.showWidget();\n        const exclusiveFilter = this.#exclusiveFilterPerTrace.get(traceIndex) ?? null;\n        this.#applyActiveFilters(parsedTrace.Meta.traceIsGeneric, exclusiveFilter);\n        // Add ModificationsManager listeners for annotations change to update the Annotation Overlays.\n        currentManager?.addEventListener(AnnotationModifiedEvent.eventName, event => {\n            // Update screen readers.\n            const announcementText = AnnotationHelpers.ariaAnnouncementForModifiedEvent(event);\n            if (announcementText) {\n                this.#makeAriaAnnouncement(announcementText);\n            }\n            const { overlay, action } = event;\n            if (action === 'Add') {\n                this.flameChart.addOverlay(overlay);\n            }\n            else if (action === 'Remove') {\n                this.flameChart.removeOverlay(overlay);\n            }\n            else if (action === 'UpdateTimeRange' && AnnotationHelpers.isTimeRangeLabel(overlay)) {\n                this.flameChart.updateExistingOverlay(overlay, {\n                    bounds: overlay.bounds,\n                });\n            }\n            else if (action === 'UpdateLinkToEntry' && AnnotationHelpers.isEntriesLink(overlay)) {\n                this.flameChart.updateExistingOverlay(overlay, {\n                    entryTo: overlay.entryTo,\n                });\n            }\n            else if (action === 'EnterLabelEditState' && AnnotationHelpers.isEntryLabel(overlay)) {\n                this.flameChart.enterLabelEditMode(overlay);\n            }\n            const annotations = currentManager.getAnnotations();\n            const annotationEntryToColorMap = this.buildColorsAnnotationsMap(annotations);\n            this.#sideBar.setAnnotations(annotations, annotationEntryToColorMap);\n        });\n        // To calculate the activity we might want to zoom in, we use the top-most main-thread track\n        const topMostMainThreadAppender = this.flameChart.getMainDataProvider().compatibilityTracksAppenderInstance().threadAppenders().at(0);\n        if (topMostMainThreadAppender) {\n            const zoomedInBounds = Trace.Extras.MainThreadActivity.calculateWindow(parsedTrace.Meta.traceBounds, topMostMainThreadAppender.getEntries());\n            TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(zoomedInBounds);\n        }\n        // Add overlays for annotations loaded from the trace file\n        const currModificationManager = ModificationsManager.activeManager();\n        if (currModificationManager) {\n            const annotations = currModificationManager.getAnnotations();\n            const annotationEntryToColorMap = this.buildColorsAnnotationsMap(annotations);\n            this.#sideBar.setAnnotations(annotations, annotationEntryToColorMap);\n            this.flameChart.bulkAddOverlays(currModificationManager.getOverlays());\n        }\n        // Set up line level profiling with CPU profiles, if we found any.\n        PerfUI.LineLevelProfile.Performance.instance().reset();\n        if (parsedTrace && parsedTrace.Samples.profilesInProcess.size) {\n            const primaryPageTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n            // Gather up all CPU Profiles we found when parsing this trace.\n            const cpuProfiles = Array.from(parsedTrace.Samples.profilesInProcess).flatMap(([_processId, threadsInProcess]) => {\n                const profiles = Array.from(threadsInProcess.values()).map(profileData => profileData.parsedProfile);\n                return profiles;\n            });\n            for (const profile of cpuProfiles) {\n                PerfUI.LineLevelProfile.Performance.instance().appendCPUProfile(profile, primaryPageTarget);\n            }\n        }\n        // Set up SourceMapsResolver to ensure we resolve any function names in\n        // profile calls.\n        this.#sourceMapsResolver = new Utils.SourceMapsResolver.SourceMapsResolver(parsedTrace);\n        this.#sourceMapsResolver.addEventListener(Utils.SourceMapsResolver.SourceMappingsUpdated.eventName, this.#onSourceMapsNodeNamesResolvedBound);\n        void this.#sourceMapsResolver.install();\n        this.statusPane?.updateProgressBar(i18nString(UIStrings.processed), 80);\n        this.updateMiniMap();\n        this.statusPane?.updateProgressBar(i18nString(UIStrings.processed), 90);\n        this.updateTimelineControls();\n        this.#setActiveInsight(null);\n        this.#eventToRelatedInsights.clear();\n        const traceInsightsSets = this.#traceEngineModel.traceInsights(traceIndex);\n        this.flameChart.setInsights(traceInsightsSets, this.#eventToRelatedInsights);\n        this.#sideBar.setInsights(traceInsightsSets);\n        this.#showSidebarIfRequired();\n    }\n    /**\n     * We automatically show the sidebar in only 2 scenarios:\n     * 1. The user has never seen it before, so we show it once to aid discovery\n     * 2. The user had it open, and we hid it (for example, during recording), so now we need to bring it back.\n     * We also check that the experiments are enabled, else we reveal an entirely empty sidebar.\n     */\n    #showSidebarIfRequired() {\n        if (Root.Runtime.Runtime.queryParam('disable-auto-performance-sidebar-reveal') !== null) {\n            // Used in interaction tests & screenshot tests.\n            return;\n        }\n        const needToRestore = this.#restoreSidebarVisibilityOnTraceLoad;\n        const userHasSeenSidebar = this.#sideBar.userHasOpenedSidebarOnce();\n        const experimentsEnabled = this.#panelSidebarEnabled();\n        if (experimentsEnabled && (!userHasSeenSidebar || needToRestore)) {\n            this.#splitWidget.showBoth();\n        }\n        this.#restoreSidebarVisibilityOnTraceLoad = false;\n    }\n    // Build a map mapping annotated entries to the colours that are used to display them in the FlameChart.\n    // We need this map to display the entries in the sidebar with the same colours.\n    buildColorsAnnotationsMap(annotations) {\n        const annotationEntryToColorMap = new Map();\n        for (const annotation of annotations) {\n            if (Trace.Types.File.isEntryLabelAnnotation(annotation)) {\n                annotationEntryToColorMap.set(annotation.entry, this.getEntryColorByEntry(annotation.entry));\n            }\n            else if (Trace.Types.File.isEntriesLinkAnnotation(annotation)) {\n                annotationEntryToColorMap.set(annotation.entryFrom, this.getEntryColorByEntry(annotation.entryFrom));\n                if (annotation.entryTo) {\n                    annotationEntryToColorMap.set(annotation.entryTo, this.getEntryColorByEntry(annotation.entryTo));\n                }\n            }\n        }\n        return annotationEntryToColorMap;\n    }\n    getEntryColorByEntry(entry) {\n        const mainIndex = this.flameChart.getMainDataProvider().indexForEvent(entry);\n        const networkIndex = this.flameChart.getNetworkDataProvider().indexForEvent(entry);\n        if (mainIndex !== null) {\n            const color = this.flameChart.getMainDataProvider().entryColor(mainIndex);\n            // The color for idle frames will be white in flame chart, which will display weird in the sidebar, so just use a\n            // light gray color instead.\n            if (color === 'white') {\n                return ThemeSupport.ThemeSupport.instance().getComputedValue('--app-color-system');\n            }\n            return color;\n        }\n        if (networkIndex !== null) {\n            const color = this.flameChart.getNetworkDataProvider().entryColor(networkIndex);\n            return color;\n        }\n        console.warn('Could not get entry color for ', entry);\n        return ThemeSupport.ThemeSupport.instance().getComputedValue('--app-color-system');\n    }\n    recordingStarted(config) {\n        if (config && this.recordingPageReload && this.controller) {\n            // If the user hit \"Reload & record\", by this point we have:\n            // 1. Navigated to about:blank\n            // 2. Initiated tracing.\n            // We therefore now should navigate back to the original URL that the user wants to profile.\n            const resourceModel = this.controller?.primaryPageTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n            if (!resourceModel) {\n                void this.recordingFailed('Could not navigate to original URL');\n                return;\n            }\n            // We don't need to await this because we are purposefully showing UI\n            // progress as the page loads & tracing is underway.\n            void resourceModel.navigate(config.navigateToUrl);\n        }\n        this.#changeView({ mode: 'STATUS_PANE_OVERLAY' });\n        this.setState(\"Recording\" /* State.RECORDING */);\n        this.showRecordingStarted();\n        if (this.statusPane) {\n            this.statusPane.enableAndFocusButton();\n            this.statusPane.updateStatus(i18nString(UIStrings.profiling));\n            this.statusPane.updateProgressBar(i18nString(UIStrings.bufferUsage), 0);\n            this.statusPane.startTimer();\n        }\n    }\n    recordingProgress(usage) {\n        if (this.statusPane) {\n            this.statusPane.updateProgressBar(i18nString(UIStrings.bufferUsage), usage * 100);\n        }\n    }\n    /**\n     * Hide the sidebar, but persist the user's state, because when they import a\n     * trace we want to revert the sidebar back to what it was.\n     */\n    #hideSidebar() {\n        if (this.#splitWidget.sidebarIsShowing()) {\n            this.#restoreSidebarVisibilityOnTraceLoad = true;\n            this.#splitWidget.hideSidebar();\n        }\n    }\n    #showLandingPage() {\n        this.updateSettingsPaneVisibility();\n        this.#removeSidebarIconFromToolbar();\n        this.#hideSidebar();\n        if (this.landingPage) {\n            this.landingPage.show(this.statusPaneContainer);\n            return;\n        }\n        this.landingPage = new TimelineLandingPage(this.toggleRecordAction, { isNode });\n        this.landingPage.show(this.statusPaneContainer);\n    }\n    #hideLandingPage() {\n        this.landingPage.detach();\n        // Hide pane settings in trace view to conserve UI space, but preserve underlying setting.\n        this.showSettingsPaneButton?.setToggled(false);\n        this.settingsPane?.hideWidget();\n    }\n    async loadingStarted() {\n        this.#changeView({ mode: 'STATUS_PANE_OVERLAY' });\n        if (this.statusPane) {\n            this.statusPane.remove();\n        }\n        this.statusPane = new StatusPane({\n            showProgress: true,\n            showTimer: undefined,\n            buttonDisabled: undefined,\n            buttonText: undefined,\n            description: undefined,\n        }, () => this.cancelLoading());\n        this.statusPane.showPane(this.statusPaneContainer);\n        this.statusPane.updateStatus(i18nString(UIStrings.loadingProfile));\n        // FIXME: make loading from backend cancelable as well.\n        if (!this.loader) {\n            this.statusPane.finish();\n        }\n        this.traceLoadStart = Trace.Types.Timing.MilliSeconds(performance.now());\n        await this.loadingProgress(0);\n    }\n    async loadingProgress(progress) {\n        if (typeof progress === 'number' && this.statusPane) {\n            this.statusPane.updateProgressBar(i18nString(UIStrings.received), progress * 100);\n        }\n    }\n    async processingStarted() {\n        this.statusPane?.updateStatus(i18nString(UIStrings.processingProfile));\n    }\n    #listenForProcessingProgress() {\n        this.#traceEngineModel.addEventListener(Trace.TraceModel.ModelUpdateEvent.eventName, e => {\n            const updateEvent = e;\n            const str = i18nString(UIStrings.processed);\n            // Trace Engine will report progress from [0...1] but we still have more work to do. So, scale them down a bit.\n            const traceParseMaxProgress = 0.7;\n            if (updateEvent.data.type === \"COMPLETE\" /* Trace.TraceModel.ModelUpdateType.COMPLETE */) {\n                this.statusPane?.updateProgressBar(str, 100 * traceParseMaxProgress);\n            }\n            else if (updateEvent.data.type === \"PROGRESS_UPDATE\" /* Trace.TraceModel.ModelUpdateType.PROGRESS_UPDATE */) {\n                const data = updateEvent.data.data;\n                this.statusPane?.updateProgressBar(str, data.percent * 100 * traceParseMaxProgress);\n            }\n        });\n    }\n    #onSourceMapsNodeNamesResolved() {\n        // Source maps can change the way calls hierarchies should look in\n        // the flame chart (f.e. if some calls are ignore listed after\n        // resolving source maps). Thus, we must reappend the flamechart\n        // entries.\n        this.flameChart.getMainDataProvider().timelineData(true);\n        this.flameChart.getMainFlameChart().update();\n    }\n    /**\n     * This is called with we are done loading a trace from a file, or after we\n     * have recorded a fresh trace.\n     *\n     * IMPORTANT: All the code in here should be code that is only required when we have\n     * recorded or loaded a brand new trace. If you need the code to run when the\n     * user switches to an existing trace, please {@see setModel} and put your\n     * code in there.\n     **/\n    async loadingComplete(collectedEvents, exclusiveFilter = null, isCpuProfile, recordingStartTime, metadata) {\n        this.#traceEngineModel.resetProcessor();\n        delete this.loader;\n        // If the user just recorded this trace via the record UI, the state will\n        // be StopPending. Whereas if it was an existing trace they loaded via a\n        // file, it will be State.Loading. This means we can tell the recording is\n        // fresh by checking the state value.\n        const recordingIsFresh = this.state === \"StopPending\" /* State.STOP_PENDING */;\n        this.setState(\"Idle\" /* State.IDLE */);\n        if (collectedEvents.length === 0) {\n            // 0 collected events indicates probably an invalid file was imported.\n            // If the user does not have any already-loaded traces, then we should\n            // just reset the panel back to the landing page. However if they had a\n            // previous trace imported, we should go to that instead.\n            if (this.#traceEngineModel.size()) {\n                this.#changeView({\n                    mode: 'VIEWING_TRACE',\n                    traceIndex: this.#traceEngineModel.lastTraceIndex(),\n                });\n            }\n            else {\n                this.#changeView({ mode: 'LANDING_PAGE' });\n            }\n            return;\n        }\n        metadata = metadata ? metadata :\n            await Trace.Extras.Metadata.forNewRecording(isCpuProfile, recordingStartTime ?? undefined);\n        try {\n            await this.#executeNewTrace(collectedEvents, recordingIsFresh, metadata);\n            const traceIndex = this.#traceEngineModel.lastTraceIndex();\n            if (exclusiveFilter) {\n                this.#exclusiveFilterPerTrace.set(traceIndex, exclusiveFilter);\n            }\n            this.#changeView({\n                mode: 'VIEWING_TRACE',\n                traceIndex,\n            });\n            const parsedTrace = this.#traceEngineModel.parsedTrace(traceIndex);\n            if (!parsedTrace) {\n                throw new Error(`Could not get trace data at index ${traceIndex}`);\n            }\n            if (recordingIsFresh) {\n                Tracker.instance().registerFreshRecording(parsedTrace);\n            }\n            // We store the index of the active trace so we can load it back easily\n            // if the user goes to a different trace then comes back.\n            // However we also pass in the full trace data because we use it to build\n            // the preview overview thumbnail of the trace that gets shown in the UI.\n            this.#historyManager.addRecording({\n                data: {\n                    parsedTraceIndex: traceIndex,\n                    type: 'TRACE_INDEX',\n                },\n                filmStripForPreview: Trace.Extras.FilmStrip.fromParsedTrace(parsedTrace),\n                parsedTrace,\n                startTime: recordingStartTime ?? null,\n            });\n        }\n        catch (error) {\n            // If we errored during the parsing stage, it\n            // is useful to get access to the raw events to download the trace. This\n            // allows us to debug crashes!\n            void this.recordingFailed(error.message, collectedEvents);\n            console.error(error);\n        }\n        finally {\n            this.recordTraceLoadMetric();\n        }\n    }\n    recordTraceLoadMetric() {\n        if (!this.traceLoadStart) {\n            return;\n        }\n        const start = this.traceLoadStart;\n        // Right *now* is the end of trace parsing and model building, but the flamechart rendering\n        // isn't complete yet. To capture that we'll do a rAF+setTimeout to give the most accurate timestamp\n        // for the first paint of the flamechart\n        requestAnimationFrame(() => {\n            setTimeout(() => {\n                const end = Trace.Types.Timing.MilliSeconds(performance.now());\n                const measure = performance.measure('TraceLoad', { start, end });\n                const duration = Trace.Types.Timing.MilliSeconds(measure.duration);\n                this.element.dispatchEvent(new TraceLoadEvent(duration));\n                Host.userMetrics.performanceTraceLoad(measure);\n            }, 0);\n        });\n    }\n    async #executeNewTrace(collectedEvents, isFreshRecording, metadata) {\n        return this.#traceEngineModel.parse(collectedEvents, {\n            metadata,\n            isFreshRecording,\n        });\n    }\n    loadingCompleteForTest() {\n        // Not implemented, added only for allowing the TimelineTestRunner\n        // to be in sync when a trace load is finished.\n    }\n    showRecordingStarted() {\n        this.#changeView({ mode: 'STATUS_PANE_OVERLAY' });\n        if (this.statusPane) {\n            this.statusPane.remove();\n        }\n        this.statusPane = new StatusPane({\n            showTimer: true,\n            showProgress: true,\n            buttonDisabled: true,\n            description: undefined,\n            buttonText: undefined,\n        }, () => this.stopRecording());\n        this.statusPane.showPane(this.statusPaneContainer);\n        this.statusPane.updateStatus(i18nString(UIStrings.initializingProfiler));\n    }\n    cancelLoading() {\n        if (this.loader) {\n            void this.loader.cancel();\n        }\n    }\n    async loadEventFired(event) {\n        if (this.state !== \"Recording\" /* State.RECORDING */ || !this.recordingPageReload || !this.controller ||\n            this.controller.primaryPageTarget !== event.data.resourceTreeModel.target()) {\n            return;\n        }\n        const controller = this.controller;\n        await new Promise(r => window.setTimeout(r, this.millisecondsToRecordAfterLoadEvent));\n        // Check if we're still in the same recording session.\n        if (controller !== this.controller || this.state !== \"Recording\" /* State.RECORDING */) {\n            return;\n        }\n        void this.stopRecording();\n    }\n    frameForSelection(selection) {\n        if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n            return null;\n        }\n        if (TimelineSelection.isLegacyTimelineFrame(selection.object) &&\n            selection.object instanceof Trace.Handlers.ModelHandlers.Frames.TimelineFrame) {\n            return selection.object;\n        }\n        if (TimelineSelection.isRangeSelection(selection.object) ||\n            TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selection.object)) {\n            return null;\n        }\n        if (TimelineSelection.isTraceEventSelection(selection.object)) {\n            const parsedTrace = this.#traceEngineModel.parsedTrace(this.#viewMode.traceIndex);\n            if (!parsedTrace) {\n                return null;\n            }\n            // If the user has selected a time range, the frame we want is the last\n            // frame in that time window, hence why the window we look for is the\n            // endTime to the endTime.\n            const endTimeMicro = Trace.Helpers.Timing.millisecondsToMicroseconds(selection.endTime);\n            const lastFrameInSelection = Trace.Handlers.ModelHandlers.Frames\n                .framesWithinWindow(parsedTrace.Frames.frames, endTimeMicro, endTimeMicro)\n                .at(0);\n            return lastFrameInSelection || null;\n        }\n        console.assert(false, 'Should never be reached');\n        return null;\n    }\n    jumpToFrame(offset) {\n        if (this.#viewMode.mode !== 'VIEWING_TRACE') {\n            return;\n        }\n        const currentFrame = this.selection && this.frameForSelection(this.selection);\n        if (!currentFrame) {\n            return;\n        }\n        const parsedTrace = this.#traceEngineModel.parsedTrace(this.#viewMode.traceIndex);\n        if (!parsedTrace) {\n            return;\n        }\n        let index = parsedTrace.Frames.frames.indexOf(currentFrame);\n        console.assert(index >= 0, 'Can\\'t find current frame in the frame list');\n        index = Platform.NumberUtilities.clamp(index + offset, 0, parsedTrace.Frames.frames.length - 1);\n        const frame = parsedTrace.Frames.frames[index];\n        this.#revealTimeRange(Trace.Helpers.Timing.microSecondsToMilliseconds(frame.startTime), Trace.Helpers.Timing.microSecondsToMilliseconds(frame.endTime));\n        this.select(TimelineSelection.fromFrame(frame));\n        return true;\n    }\n    #announceSelectionToAria(oldSelection, newSelection) {\n        if (oldSelection !== null && newSelection === null) {\n            UI.ARIAUtils.alert(i18nString(UIStrings.selectionCleared));\n        }\n        if (newSelection === null) {\n            return;\n        }\n        if (TimelineSelection.isRangeSelection(newSelection.object)) {\n            // We don't announce here; within the annotations code we announce when\n            // the user creates a new time range selection. So if we also announce\n            // here we will duplicate and overwhelm rather than be useful.\n            return;\n        }\n        if (TimelineSelection.isLegacyTimelineFrame(newSelection.object)) {\n            UI.ARIAUtils.alert(i18nString(UIStrings.frameSelected));\n            return;\n        }\n        // At this point we know the object is a trace event\n        const name = TimelineComponents.EntryName.nameForEntry(newSelection.object);\n        UI.ARIAUtils.alert(i18nString(UIStrings.eventSelected, { PH1: name }));\n    }\n    select(selection) {\n        this.#announceSelectionToAria(this.selection, selection);\n        this.selection = selection;\n        this.flameChart.setSelectionAndReveal(selection);\n    }\n    selectEntryAtTime(events, time) {\n        if (!events) {\n            return;\n        }\n        if (events.length === 0) {\n            this.select(null);\n            return;\n        }\n        // Find best match, then backtrack to the first visible entry.\n        for (let index = Platform.ArrayUtilities.upperBound(events, time, (time, event) => time - event.ts) - 1; index >= 0; --index) {\n            const event = events[index];\n            const { endTime } = Trace.Helpers.Timing.eventTimingsMilliSeconds(event);\n            if (Trace.Helpers.Trace.isTopLevelEvent(event) && endTime < time) {\n                break;\n            }\n            if (ActiveFilters.instance().isVisible(event) && endTime >= time) {\n                this.select(TimelineSelection.fromTraceEvent(event));\n                return;\n            }\n        }\n        this.select(null);\n    }\n    highlightEvent(event) {\n        this.flameChart.highlightEvent(event);\n    }\n    #revealTimeRange(startTime, endTime) {\n        const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n        if (!traceBoundsState) {\n            return;\n        }\n        const traceWindow = traceBoundsState.milli.timelineTraceWindow;\n        let offset = 0;\n        if (traceWindow.max < endTime) {\n            offset = endTime - traceWindow.max;\n        }\n        else if (traceWindow.min > startTime) {\n            offset = startTime - traceWindow.min;\n        }\n        TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(Trace.Helpers.Timing.traceWindowFromMilliSeconds(Trace.Types.Timing.MilliSeconds(traceWindow.min + offset), Trace.Types.Timing.MilliSeconds(traceWindow.max + offset)), {\n            shouldAnimate: true,\n        });\n    }\n    handleDrop(dataTransfer) {\n        const items = dataTransfer.items;\n        if (!items.length) {\n            return;\n        }\n        const item = items[0];\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.PerfPanelTraceImported);\n        if (item.kind === 'string') {\n            const url = dataTransfer.getData('text/uri-list');\n            if (new Common.ParsedURL.ParsedURL(url).isValid) {\n                void this.loadFromURL(url);\n            }\n        }\n        else if (item.kind === 'file') {\n            const file = items[0].getAsFile();\n            if (!file) {\n                return;\n            }\n            void this.loadFromFile(file);\n        }\n    }\n}\n// Define row and header height, should be in sync with styles for timeline graphs.\nexport const rowHeight = 18;\nexport const headerHeight = 20;\nexport class StatusPane extends UI.Widget.VBox {\n    status;\n    time;\n    progressLabel;\n    progressBar;\n    description;\n    button;\n    downloadTraceButton;\n    startTime;\n    timeUpdateTimer;\n    #rawEvents;\n    constructor(options, buttonCallback) {\n        super(true);\n        this.contentElement.classList.add('timeline-status-dialog');\n        this.contentElement.setAttribute('jslog', `${VisualLogging.dialog('timeline-status').track({ resize: true })}`);\n        const statusLine = this.contentElement.createChild('div', 'status-dialog-line status');\n        statusLine.createChild('div', 'label').textContent = i18nString(UIStrings.status);\n        this.status = statusLine.createChild('div', 'content');\n        UI.ARIAUtils.markAsStatus(this.status);\n        if (options.showTimer) {\n            const timeLine = this.contentElement.createChild('div', 'status-dialog-line time');\n            timeLine.createChild('div', 'label').textContent = i18nString(UIStrings.time);\n            this.time = timeLine.createChild('div', 'content');\n        }\n        if (options.showProgress) {\n            const progressLine = this.contentElement.createChild('div', 'status-dialog-line progress');\n            this.progressLabel = progressLine.createChild('div', 'label');\n            this.progressBar = progressLine.createChild('div', 'indicator-container').createChild('div', 'indicator');\n            UI.ARIAUtils.markAsProgressBar(this.progressBar);\n        }\n        if (typeof options.description === 'string') {\n            const descriptionLine = this.contentElement.createChild('div', 'status-dialog-line description');\n            descriptionLine.createChild('div', 'label').textContent = i18nString(UIStrings.description);\n            this.description = descriptionLine.createChild('div', 'content');\n            this.description.innerText = options.description;\n        }\n        const buttonContainer = this.contentElement.createChild('div', 'stop-button');\n        this.downloadTraceButton = UI.UIUtils.createTextButton(i18nString(UIStrings.downloadAfterError), () => {\n            void this.#downloadRawTraceAfterError();\n        }, { jslogContext: 'timeline.download-after-error' });\n        this.downloadTraceButton.disabled = true;\n        this.downloadTraceButton.style.visibility = 'hidden';\n        const buttonText = options.buttonText || i18nString(UIStrings.stop);\n        this.button = UI.UIUtils.createTextButton(buttonText, buttonCallback, {\n            jslogContext: 'timeline.stop-recording',\n        });\n        // Profiling can't be stopped during initialization.\n        this.button.disabled = !options.buttonDisabled === false;\n        buttonContainer.append(this.downloadTraceButton);\n        buttonContainer.append(this.button);\n    }\n    finish() {\n        this.stopTimer();\n        this.button.disabled = true;\n    }\n    async #downloadRawTraceAfterError() {\n        if (!this.#rawEvents || this.#rawEvents.length === 0) {\n            return;\n        }\n        const traceStart = Platform.DateUtilities.toISO8601Compact(new Date());\n        const fileName = `Trace-Load-Error-${traceStart}.json`;\n        const formattedTraceIter = traceJsonGenerator(this.#rawEvents, {});\n        const traceAsString = Array.from(formattedTraceIter).join('');\n        await Workspace.FileManager.FileManager.instance().save(fileName, traceAsString, true /* forceSaveAs */, false /* isBase64 */);\n        Workspace.FileManager.FileManager.instance().close(fileName);\n    }\n    enableDownloadOfEvents(rawEvents) {\n        this.#rawEvents = rawEvents;\n        this.downloadTraceButton.disabled = false;\n        this.downloadTraceButton.style.visibility = 'visible';\n    }\n    remove() {\n        if (this.element.parentNode) {\n            this.element.parentNode.classList.remove('tinted');\n            this.arrangeDialog(this.element.parentNode);\n        }\n        this.stopTimer();\n        this.element.remove();\n    }\n    showPane(parent) {\n        this.arrangeDialog(parent);\n        this.show(parent);\n        parent.classList.add('tinted');\n    }\n    enableAndFocusButton() {\n        this.button.disabled = false;\n        this.button.focus();\n    }\n    updateStatus(text) {\n        this.status.textContent = text;\n    }\n    updateProgressBar(activity, percent) {\n        this.progressLabel.textContent = activity;\n        this.progressBar.style.width = percent.toFixed(1) + '%';\n        UI.ARIAUtils.setValueNow(this.progressBar, percent);\n        this.updateTimer();\n    }\n    startTimer() {\n        this.startTime = Date.now();\n        this.timeUpdateTimer = window.setInterval(this.updateTimer.bind(this), 1000);\n        this.updateTimer();\n    }\n    stopTimer() {\n        if (!this.timeUpdateTimer) {\n            return;\n        }\n        clearInterval(this.timeUpdateTimer);\n        this.updateTimer();\n        delete this.timeUpdateTimer;\n    }\n    updateTimer() {\n        this.arrangeDialog(this.element.parentNode);\n        if (!this.timeUpdateTimer || !this.time) {\n            return;\n        }\n        const elapsed = (Date.now() - this.startTime) / 1000;\n        this.time.textContent = i18nString(UIStrings.ssec, { PH1: Math.round(elapsed) });\n    }\n    arrangeDialog(parent) {\n        const isSmallDialog = parent.clientWidth < 325;\n        this.element.classList.toggle('small-dialog', isSmallDialog);\n        this.contentElement.classList.toggle('small-dialog', isSmallDialog);\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([timelineStatusDialogStyles]);\n    }\n}\nlet loadTimelineHandlerInstance;\nexport class LoadTimelineHandler {\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!loadTimelineHandlerInstance || forceNew) {\n            loadTimelineHandlerInstance = new LoadTimelineHandler();\n        }\n        return loadTimelineHandlerInstance;\n    }\n    handleQueryParam(value) {\n        void UI.ViewManager.ViewManager.instance().showView('timeline').then(async () => {\n            await TimelinePanel.instance().loadFromURL(window.decodeURIComponent(value));\n        });\n    }\n}\nexport class TraceRevealer {\n    async reveal(trace) {\n        await UI.ViewManager.ViewManager.instance().showView('timeline');\n        TimelinePanel.instance().loadFromEvents(trace.traceEvents);\n    }\n}\nexport class ActionDelegate {\n    handleAction(context, actionId) {\n        const panel = context.flavor(TimelinePanel);\n        if (panel === null) {\n            return false;\n        }\n        switch (actionId) {\n            case 'timeline.toggle-recording':\n                void panel.toggleRecording();\n                return true;\n            case 'timeline.record-reload':\n                panel.recordReload();\n                return true;\n            case 'timeline.save-to-file':\n                void panel.saveToFile();\n                return true;\n            case 'timeline.load-from-file':\n                panel.selectFileToLoad();\n                return true;\n            case 'timeline.jump-to-previous-frame':\n                panel.jumpToFrame(-1);\n                return true;\n            case 'timeline.jump-to-next-frame':\n                panel.jumpToFrame(1);\n                return true;\n            case 'timeline.show-history':\n                void panel.showHistoryDropdown();\n                return true;\n            case 'timeline.previous-recording':\n                panel.navigateHistory(1);\n                return true;\n            case 'timeline.next-recording':\n                panel.navigateHistory(-1);\n                return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=TimelinePanel.js.map","import { TimelinePanel } from './TimelinePanel.js';\nlet extensionDataGathererInstance;\n/**\n * This class abstracts the source of extension data out by providing a\n * single access point to the performance panel for extension data.\n */\nexport class ExtensionDataGatherer {\n    #parsedTrace = null;\n    #extensionDataByModel = new Map();\n    static instance() {\n        if (extensionDataGathererInstance) {\n            return extensionDataGathererInstance;\n        }\n        extensionDataGathererInstance = new ExtensionDataGatherer();\n        return extensionDataGathererInstance;\n    }\n    static removeInstance() {\n        extensionDataGathererInstance = undefined;\n    }\n    /**\n     * Gets the data provided by extensions.\n     */\n    getExtensionData() {\n        const extensionDataEnabled = TimelinePanel.extensionDataVisibilitySetting().get();\n        if (!extensionDataEnabled || !this.#parsedTrace || !this.#parsedTrace.ExtensionTraceData) {\n            return { extensionMarkers: [], extensionTrackData: [], entryToNode: new Map() };\n        }\n        const maybeCachedData = this.#extensionDataByModel.get(this.#parsedTrace);\n        if (maybeCachedData) {\n            return maybeCachedData;\n        }\n        return this.#parsedTrace.ExtensionTraceData;\n    }\n    saveCurrentModelData() {\n        if (this.#parsedTrace && !this.#extensionDataByModel.has(this.#parsedTrace)) {\n            this.#extensionDataByModel.set(this.#parsedTrace, this.getExtensionData());\n        }\n    }\n    modelChanged(parsedTrace) {\n        if (parsedTrace === this.#parsedTrace) {\n            return;\n        }\n        if (this.#parsedTrace !== null) {\n            // DevTools extension data is assumed to be useful only for the current\n            // trace data (model). As such, if the model changes, we cache the devtools\n            // extension data we have collected for the previous model and listen\n            // for new data that applies to the new model.\n            this.saveCurrentModelData();\n        }\n        this.#parsedTrace = parsedTrace;\n    }\n}\n//# sourceMappingURL=ExtensionDataGatherer.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport { buildGroupStyle, buildTrackHeader, getFormattedTime } from './AppenderUtils.js';\nimport * as Extensions from './extensions/extensions.js';\nconst UIStrings = {\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    customTrackDescription: 'This is a custom track added by a third party.',\n    /**\n     * @description The name of a track, which is a horizontal division of the timeline, synonym with \"swimlane\".\n     * @example {A track name} PH1\n     */\n    customTrackName: '{PH1} — Custom track',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/ExtensionTrackAppender.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ExtensionTrackAppender {\n    appenderName = 'Extension';\n    #extensionTopLevelTrack;\n    #compatibilityBuilder;\n    constructor(compatibilityBuilder, extensionTracks) {\n        this.#extensionTopLevelTrack = extensionTracks;\n        this.#compatibilityBuilder = compatibilityBuilder;\n    }\n    appendTrackAtLevel(trackStartLevel, expanded) {\n        const totalEntryCount = Object.values(this.#extensionTopLevelTrack.entriesByTrack).reduce((prev, current) => current.length + prev, 0);\n        if (totalEntryCount === 0) {\n            return trackStartLevel;\n        }\n        this.#appendTopLevelHeaderAtLevel(trackStartLevel, expanded);\n        return this.#appendExtensionTrackData(trackStartLevel);\n    }\n    /**\n     * Appends the top level header for a track. Extension entries can be\n     * added to tracks or sub-tracks. In the former case, the top level\n     * header corresponds to the track name, in the latter it corresponds\n     * to the track group name.\n     */\n    #appendTopLevelHeaderAtLevel(currentLevel, expanded) {\n        const style = buildGroupStyle({ shareHeaderLine: false, collapsible: true });\n        const headerTitle = i18nString(UIStrings.customTrackName, { PH1: this.#extensionTopLevelTrack.name });\n        const group = buildTrackHeader(\"extension\" /* VisualLoggingTrackName.EXTENSION */, currentLevel, headerTitle, style, \n        /* selectable= */ true, expanded);\n        group.description = i18nString(UIStrings.customTrackDescription);\n        this.#compatibilityBuilder.registerTrackForGroup(group, this);\n    }\n    /**\n     * Appends the second level header for a grouped track, which\n     * corresponds to the track name itself, instead of the track name.\n     */\n    #appendSecondLevelHeader(trackStartLevel, headerTitle) {\n        const style = buildGroupStyle({ shareHeaderLine: false, padding: 2, nestingLevel: 1, collapsible: true });\n        const group = buildTrackHeader(\"extension\" /* VisualLoggingTrackName.EXTENSION */, trackStartLevel, headerTitle, style, \n        /* selectable= */ true);\n        this.#compatibilityBuilder.registerTrackForGroup(group, this);\n    }\n    #appendExtensionTrackData(trackStartLevel) {\n        let currentStartLevel = trackStartLevel;\n        for (const [trackName, entries] of Object.entries(this.#extensionTopLevelTrack.entriesByTrack)) {\n            if (this.#extensionTopLevelTrack.isTrackGroup) {\n                // Second level header is used for only sub-tracks.\n                this.#appendSecondLevelHeader(currentStartLevel, trackName);\n            }\n            currentStartLevel = this.#compatibilityBuilder.appendEventsAtLevel(entries, currentStartLevel, this);\n        }\n        return currentStartLevel;\n    }\n    colorForEvent(event) {\n        const defaultColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--app-color-rendering');\n        if (!Trace.Types.Extensions.isSyntheticExtensionEntry(event)) {\n            return defaultColor;\n        }\n        return Extensions.ExtensionUI.extensionEntryColor(event);\n    }\n    titleForEvent(event) {\n        return event.name;\n    }\n    /**\n     * Returns the info shown when an event added by this appender\n     * is hovered in the timeline.\n     */\n    highlightedEntryInfo(event) {\n        const title = Trace.Types.Extensions.isSyntheticExtensionEntry(event) && event.args.tooltipText ?\n            event.args.tooltipText :\n            this.titleForEvent(event);\n        return { title, formattedTime: getFormattedTime(event.dur) };\n    }\n}\n//# sourceMappingURL=ExtensionTrackAppender.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport { buildGroupStyle, buildTrackHeader } from './AppenderUtils.js';\nconst UIStrings = {\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    gpu: 'GPU',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/GPUTrackAppender.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class GPUTrackAppender {\n    appenderName = 'GPU';\n    #compatibilityBuilder;\n    #parsedTrace;\n    constructor(compatibilityBuilder, parsedTrace) {\n        this.#compatibilityBuilder = compatibilityBuilder;\n        this.#parsedTrace = parsedTrace;\n    }\n    /**\n     * Appends into the flame chart data the data corresponding to the\n     * GPU track.\n     * @param trackStartLevel the horizontal level of the flame chart events where\n     * the track's events will start being appended.\n     * @param expanded wether the track should be rendered expanded.\n     * @returns the first available level to append more data after having\n     * appended the track's events.\n     */\n    appendTrackAtLevel(trackStartLevel, expanded) {\n        const gpuEvents = this.#parsedTrace.GPU.mainGPUThreadTasks;\n        if (gpuEvents.length === 0) {\n            return trackStartLevel;\n        }\n        this.#appendTrackHeaderAtLevel(trackStartLevel, expanded);\n        return this.#compatibilityBuilder.appendEventsAtLevel(gpuEvents, trackStartLevel, this);\n    }\n    /**\n     * Adds into the flame chart data the header corresponding to the\n     * GPU track. A header is added in the shape of a group in the\n     * flame chart data. A group has a predefined style and a reference\n     * to the definition of the legacy track (which should be removed\n     * in the future).\n     * @param currentLevel the flame chart level at which the header is\n     * appended.\n     * @param expanded wether the track should be rendered expanded.\n     */\n    #appendTrackHeaderAtLevel(currentLevel, expanded) {\n        const style = buildGroupStyle({ collapsible: false });\n        const group = buildTrackHeader(\"gpu\" /* VisualLoggingTrackName.GPU */, currentLevel, i18nString(UIStrings.gpu), style, /* selectable= */ true, expanded);\n        this.#compatibilityBuilder.registerTrackForGroup(group, this);\n    }\n    /*\n      ------------------------------------------------------------------------------------\n       The following methods  are invoked by the flame chart renderer to query features about\n       events on rendering.\n      ------------------------------------------------------------------------------------\n    */\n    /**\n     * Gets the color an event added by this appender should be rendered with.\n     */\n    colorForEvent(event) {\n        if (!Trace.Types.Events.isGPUTask(event)) {\n            throw new Error(`Unexpected GPU Task: The event's type is '${event.name}'`);\n        }\n        return ThemeSupport.ThemeSupport.instance().getComputedValue('--app-color-painting');\n    }\n}\n//# sourceMappingURL=GPUTrackAppender.js.map","import * as i18n from '../../core/i18n/i18n.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport { buildGroupStyle, buildTrackHeader } from './AppenderUtils.js';\nimport * as Components from './components/components.js';\nconst UIStrings = {\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    interactions: 'Interactions',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/InteractionsTrackAppender.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class InteractionsTrackAppender {\n    appenderName = 'Interactions';\n    #colorGenerator;\n    #compatibilityBuilder;\n    #parsedTrace;\n    constructor(compatibilityBuilder, parsedTrace, colorGenerator) {\n        this.#compatibilityBuilder = compatibilityBuilder;\n        this.#colorGenerator = colorGenerator;\n        this.#parsedTrace = parsedTrace;\n    }\n    /**\n     * Appends into the flame chart data the data corresponding to the\n     * interactions track.\n     * @param trackStartLevel the horizontal level of the flame chart events where\n     * the track's events will start being appended.\n     * @param expanded wether the track should be rendered expanded.\n     * @returns the first available level to append more data after having\n     * appended the track's events.\n     */\n    appendTrackAtLevel(trackStartLevel, expanded) {\n        if (this.#parsedTrace.UserInteractions.interactionEvents.length === 0) {\n            return trackStartLevel;\n        }\n        this.#appendTrackHeaderAtLevel(trackStartLevel, expanded);\n        return this.#appendInteractionsAtLevel(trackStartLevel);\n    }\n    /**\n     * Adds into the flame chart data the header corresponding to the\n     * interactions track. A header is added in the shape of a group in the\n     * flame chart data. A group has a predefined style and a reference\n     * to the definition of the legacy track (which should be removed\n     * in the future).\n     * @param currentLevel the flame chart level at which the header is\n     * appended.\n     */\n    #appendTrackHeaderAtLevel(currentLevel, expanded) {\n        const trackIsCollapsible = this.#parsedTrace.UserInteractions.interactionEvents.length > 0;\n        const style = buildGroupStyle({ collapsible: trackIsCollapsible, useDecoratorsForOverview: true });\n        const group = buildTrackHeader(\"interactions\" /* VisualLoggingTrackName.INTERACTIONS */, currentLevel, i18nString(UIStrings.interactions), style, \n        /* selectable= */ true, expanded);\n        this.#compatibilityBuilder.registerTrackForGroup(group, this);\n    }\n    /**\n     * Adds into the flame chart data the trace events dispatched by the\n     * performance.measure API. These events are taken from the UserInteractions\n     * handler.\n     * @param currentLevel the flame chart level from which interactions will\n     * be appended.\n     * @returns the next level after the last occupied by the appended\n     * interactions (the first available level to append more data).\n     */\n    #appendInteractionsAtLevel(trackStartLevel) {\n        const { interactionEventsWithNoNesting, interactionsOverThreshold } = this.#parsedTrace.UserInteractions;\n        const addCandyStripeToLongInteraction = (event, index) => {\n            // Each interaction that we drew that is over the INP threshold needs to be\n            // candy-striped.\n            const overThreshold = interactionsOverThreshold.has(event);\n            if (!overThreshold) {\n                return;\n            }\n            if (index !== undefined) {\n                this.#addCandyStripeAndWarningForLongInteraction(event, index);\n            }\n        };\n        // Render all top level interactions (see UserInteractionsHandler for an explanation on the nesting) onto the track.\n        const newLevel = this.#compatibilityBuilder.appendEventsAtLevel(interactionEventsWithNoNesting, trackStartLevel, this, addCandyStripeToLongInteraction);\n        return newLevel;\n    }\n    #addCandyStripeAndWarningForLongInteraction(entry, eventIndex) {\n        const decorationsForEvent = this.#compatibilityBuilder.getFlameChartTimelineData().entryDecorations[eventIndex] || [];\n        decorationsForEvent.push({\n            type: \"CANDY\" /* PerfUI.FlameChart.FlameChartDecorationType.CANDY */,\n            startAtTime: Trace.Handlers.ModelHandlers.UserInteractions.LONG_INTERACTION_THRESHOLD,\n            // Interaction events have whiskers, so we do not want to candy stripe\n            // the entire duration. The box represents processing duration, so we only\n            // candystripe up to the end of processing.\n            endAtTime: entry.processingEnd,\n        }, {\n            type: \"WARNING_TRIANGLE\" /* PerfUI.FlameChart.FlameChartDecorationType.WARNING_TRIANGLE */,\n            customEndTime: entry.processingEnd,\n        });\n        this.#compatibilityBuilder.getFlameChartTimelineData().entryDecorations[eventIndex] = decorationsForEvent;\n    }\n    /*\n      ------------------------------------------------------------------------------------\n       The following methods  are invoked by the flame chart renderer to query features about\n       events on rendering.\n      ------------------------------------------------------------------------------------\n    */\n    /**\n     * Gets the color an event added by this appender should be rendered with.\n     */\n    colorForEvent(event) {\n        let idForColorGeneration = Components.EntryName.nameForEntry(event, this.#parsedTrace);\n        if (Trace.Types.Events.isSyntheticInteraction(event)) {\n            // Append the ID so that we vary the colours, ensuring that two events of\n            // the same type are coloured differently.\n            idForColorGeneration += event.interactionId;\n        }\n        return this.#colorGenerator.colorForID(idForColorGeneration);\n    }\n    highlightedEntryInfo(event) {\n        if (Trace.Types.Events.isSyntheticInteraction(event)) {\n            const breakdown = new Components.InteractionBreakdown.InteractionBreakdown();\n            breakdown.entry = event;\n            return { title: '', formattedTime: '', additionalElement: breakdown };\n        }\n        return { title: '', formattedTime: '' };\n    }\n}\n//# sourceMappingURL=InteractionsTrackAppender.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as ComponentHelpers from '../../ui/components/helpers/helpers.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport { buildGroupStyle, buildTrackHeader } from './AppenderUtils.js';\nimport * as Utils from './utils/utils.js';\nconst UIStrings = {\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    layoutShifts: 'Layout shifts',\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    layoutShiftCluster: 'Layout shift cluster',\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    layoutShift: 'Layout shift',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/LayoutShiftsTrackAppender.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n// Bit of a hack: LayoutShifts are instant events, so have no duration. But\n// OPP doesn't do well at making tiny events easy to spot and click. So we\n// set it to a small duration so that the user is able to see and click\n// them more easily. Long term we will explore a better UI solution to\n// allow us to do this properly and not hack around it.\n// TODO: Delete this once the new Layout Shift UI ships out of the TIMELINE_LAYOUT_SHIFT_DETAILS experiment\nexport const LAYOUT_SHIFT_SYNTHETIC_DURATION = Trace.Types.Timing.MicroSeconds(5_000);\nexport class LayoutShiftsTrackAppender {\n    appenderName = 'LayoutShifts';\n    #compatibilityBuilder;\n    #parsedTrace;\n    constructor(compatibilityBuilder, parsedTrace) {\n        this.#compatibilityBuilder = compatibilityBuilder;\n        this.#parsedTrace = parsedTrace;\n    }\n    /**\n     * Appends into the flame chart data the data corresponding to the\n     * layout shifts track.\n     * @param trackStartLevel the horizontal level of the flame chart events where\n     * the track's events will start being appended.\n     * @param expanded wether the track should be rendered expanded.\n     * @returns the first available level to append more data after having\n     * appended the track's events.\n     */\n    appendTrackAtLevel(trackStartLevel, expanded) {\n        if (this.#parsedTrace.LayoutShifts.clusters.length === 0) {\n            return trackStartLevel;\n        }\n        this.#appendTrackHeaderAtLevel(trackStartLevel, expanded);\n        return this.#appendLayoutShiftsAtLevel(trackStartLevel);\n    }\n    /**\n     * Adds into the flame chart data the header corresponding to the\n     * layout shifts track. A header is added in the shape of a group in the\n     * flame chart data. A group has a predefined style and a reference\n     * to the definition of the legacy track (which should be removed\n     * in the future).\n     * @param currentLevel the flame chart level at which the header is\n     * appended.\n     */\n    #appendTrackHeaderAtLevel(currentLevel, expanded) {\n        const style = buildGroupStyle({ collapsible: false });\n        const group = buildTrackHeader(\"layout-shifts\" /* VisualLoggingTrackName.LAYOUT_SHIFTS */, currentLevel, i18nString(UIStrings.layoutShifts), style, \n        /* selectable= */ true, expanded);\n        this.#compatibilityBuilder.registerTrackForGroup(group, this);\n    }\n    /**\n     * Adds into the flame chart data all the layout shifts. These are taken from\n     * the clusters that are collected in the LayoutShiftsHandler.\n     * @param currentLevel the flame chart level from which layout shifts will\n     * be appended.\n     * @returns the next level after the last occupied by the appended\n     * layout shifts (the first available level to append more data).\n     */\n    #appendLayoutShiftsAtLevel(currentLevel) {\n        const allLayoutShifts = this.#parsedTrace.LayoutShifts.clusters.flatMap(cluster => cluster.events);\n        if (Root.Runtime.experiments.isEnabled(\"timeline-rpp-sidebar\" /* Root.Runtime.ExperimentName.TIMELINE_INSIGHTS */)) {\n            const allClusters = this.#parsedTrace.LayoutShifts.clusters;\n            this.#compatibilityBuilder.appendEventsAtLevel(allClusters, currentLevel, this);\n        }\n        void this.preloadScreenshots(allLayoutShifts);\n        return this.#compatibilityBuilder.appendEventsAtLevel(allLayoutShifts, currentLevel, this);\n    }\n    /*\n      ------------------------------------------------------------------------------------\n       The following methods  are invoked by the flame chart renderer to query features about\n       events on rendering.\n      ------------------------------------------------------------------------------------\n    */\n    /**\n     * Gets the color an event added by this appender should be rendered with.\n     */\n    colorForEvent(event) {\n        const renderingColor = ThemeSupport.ThemeSupport.instance().getComputedValue('--app-color-rendering');\n        if (Trace.Types.Events.isSyntheticLayoutShiftCluster(event)) {\n            const parsedColor = Common.Color.parse(renderingColor);\n            if (parsedColor) {\n                const colorWithAlpha = parsedColor.setAlpha(0.5).asString(\"rgba\" /* Common.Color.Format.RGBA */);\n                return colorWithAlpha;\n            }\n        }\n        return renderingColor;\n    }\n    /**\n     * Gets the title an event added by this appender should be rendered with.\n     */\n    titleForEvent(event) {\n        if (Trace.Types.Events.isLayoutShift(event)) {\n            return i18nString(UIStrings.layoutShift);\n        }\n        return '';\n    }\n    /**\n     * Returns the info shown when an event added by this appender\n     * is hovered in the timeline.\n     */\n    highlightedEntryInfo(event) {\n        const score = Trace.Types.Events.isLayoutShift(event) ? event.args.data?.weighted_score_delta ?? 0 :\n            Trace.Types.Events.isSyntheticLayoutShiftCluster(event) ? event.clusterCumulativeScore :\n                -1;\n        const title = Trace.Types.Events.isLayoutShift(event) ? i18nString(UIStrings.layoutShift) :\n            Trace.Types.Events.isSyntheticLayoutShiftCluster(event) ? i18nString(UIStrings.layoutShiftCluster) :\n                event.name;\n        let additionalElement;\n        if (Trace.Types.Events.isSyntheticLayoutShift(event)) {\n            // Screenshots are max 500x500 naturally, but on a laptop in dock-to-right, 500px tall usually doesn't fit.\n            // In the future, we may investigate a way to dynamically scale this tooltip content per available space.\n            const maxSize = new UI.Geometry.Size(510, 400);\n            const vizElem = LayoutShiftsTrackAppender.createShiftViz(event, this.#parsedTrace, maxSize);\n            if (vizElem) {\n                additionalElement = vizElem;\n            }\n        }\n        // Score isn't a duration, but the UI works anyhow.\n        return { title, formattedTime: score.toFixed(4), additionalElement };\n    }\n    getDrawOverride(event) {\n        if (!Root.Runtime.experiments.isEnabled(\"timeline-rpp-sidebar\" /* Root.Runtime.ExperimentName.TIMELINE_INSIGHTS */)) {\n            // If the new CLS experience isn't on.. Continue to present that Shifts are 5ms long. (but now via drawOverrides)\n            // TODO: Remove this when the experiment ships\n            if (Trace.Types.Events.isLayoutShift(event)) {\n                return (context, x, y, _width, levelHeight, timeToPosition) => {\n                    const fakeDurMs = Trace.Helpers.Timing.microSecondsToMilliseconds(Trace.Types.Timing.MicroSeconds(event.ts + LAYOUT_SHIFT_SYNTHETIC_DURATION));\n                    const barEnd = timeToPosition(fakeDurMs);\n                    const barWidth = barEnd - x;\n                    context.fillStyle = this.colorForEvent(event);\n                    context.fillRect(x, y, barWidth - 0.5, levelHeight - 1);\n                    return {\n                        x,\n                        width: barWidth,\n                    };\n                };\n            }\n        }\n        if (Trace.Types.Events.isLayoutShift(event)) {\n            const score = event.args.data?.weighted_score_delta || 0;\n            // `buffer` is how much space is between the actual diamond shape and the\n            // edge of its select box. The select box will have a constant size\n            // so a larger `buffer` will create a smaller diamond.\n            //\n            // This logic will scale the size of the diamond based on the layout shift score.\n            // A LS score of >=0.1 will create a diamond of maximum size\n            // A LS score of ~0 will create a diamond of minimum size (exactly 0 should not happen in practice)\n            const bufferScale = 1 - Math.min(score / 0.10, 1);\n            return (context, x, y, _width, levelHeight) => {\n                // levelHeight is 17px, so this math translates to a minimum diamond size of 5.6px tall.\n                const maxBuffer = levelHeight / 3;\n                const buffer = bufferScale * maxBuffer;\n                const boxSize = levelHeight;\n                const halfSize = boxSize / 2;\n                context.save();\n                context.beginPath();\n                context.moveTo(x, y + buffer);\n                context.lineTo(x + halfSize - buffer, y + halfSize);\n                context.lineTo(x, y + levelHeight - buffer);\n                context.lineTo(x - halfSize + buffer, y + halfSize);\n                context.closePath();\n                context.fillStyle = this.colorForEvent(event);\n                context.fill();\n                context.restore();\n                return {\n                    x: x - halfSize,\n                    width: boxSize,\n                };\n            };\n        }\n        if (Trace.Types.Events.isSyntheticLayoutShiftCluster(event)) {\n            return (context, x, y, width, levelHeight) => {\n                const barHeight = levelHeight * 0.2;\n                const barY = y + (levelHeight - barHeight) / 2 + 0.5;\n                context.fillStyle = this.colorForEvent(event);\n                context.fillRect(x, barY, width - 0.5, barHeight - 1);\n                return { x, width, z: -1 };\n            };\n        }\n        return;\n    }\n    preloadScreenshots(events) {\n        const screenshotsToLoad = new Set();\n        for (const event of events) {\n            const shots = event.parsedData.screenshots;\n            shots.before && screenshotsToLoad.add(shots.before);\n            shots.after && screenshotsToLoad.add(shots.after);\n        }\n        const screenshots = Array.from(screenshotsToLoad);\n        return Utils.ImageCache.preload(screenshots);\n    }\n    static createShiftViz(event, parsedTrace, maxSize) {\n        const screenshots = event.parsedData.screenshots;\n        const { viewportRect, devicePixelRatio: dpr } = parsedTrace.Meta;\n        const vizContainer = document.createElement('div');\n        vizContainer.classList.add('layout-shift-viz');\n        const beforeImg = screenshots.before && Utils.ImageCache.getOrQueue(screenshots.before);\n        const afterImg = screenshots.after && Utils.ImageCache.getOrQueue(screenshots.after);\n        if (!beforeImg || !afterImg || !viewportRect || dpr === undefined) {\n            return;\n        }\n        /** 1 of 3 scaling factors.\n         * The Layout Instability API in Blink, which reports the LayoutShift trace events, is not based on CSS pixels but\n         * physical pixels. As such the values in the impacted_nodes field need to be normalized to CSS units in order to\n         * map them to the viewport dimensions, which we get in CSS pixels. We do that by dividing the values by the devicePixelRatio.\n         * See https://crbug.com/1300309\n         */\n        const toCssPixelRect = (rect) => {\n            return new DOMRect(rect[0] / dpr, rect[1] / dpr, rect[2] / dpr, rect[3] / dpr);\n        };\n        // 2 of 3 scaling factors. Turns CSS pixels into pixels relative to the size of the screenshot image's natural size.\n        const screenshotImageScaleFactor = Math.min(beforeImg.naturalWidth / viewportRect.width, beforeImg.naturalHeight / viewportRect.height, 1);\n        // 3 of 3 scaling factors. We can constrain this UI by a maxSize in case we want it smaller.\n        // If this is being size constrained, it needs to be done in JS (rather than css max-width, etc)....\n        // That's because this function is complete before it's added to the DOM.. so we can't query offsetHeight for its resolved size…\n        const maxSizeScaleFactor = Math.min(maxSize.width / beforeImg.naturalWidth, maxSize.height / beforeImg.naturalHeight, 1);\n        for (const elem of [vizContainer, afterImg, beforeImg]) {\n            elem.style.width = `${beforeImg.naturalWidth * maxSizeScaleFactor}px`;\n            elem.style.height = `${beforeImg.naturalHeight * maxSizeScaleFactor}px`;\n        }\n        const beforeRects = event.args.data?.impacted_nodes?.map(node => toCssPixelRect(node.old_rect)) ?? [];\n        const afterRects = event.args.data?.impacted_nodes?.map(node => toCssPixelRect(node.new_rect)) ?? [];\n        function startVizAnimation() {\n            if (!beforeImg || !afterImg) {\n                return;\n            }\n            // If image is reused, drop existing anims\n            [beforeImg, afterImg].flatMap(img => img.getAnimations()).forEach(a => a.cancel());\n            const easing = 'ease-out';\n            const vizAnimOpts = {\n                duration: 3000,\n                iterations: Infinity,\n                fill: 'forwards',\n                easing,\n            };\n            // Using keyframe offsets to add \"delay\" to both the start and the end.\n            // https://drafts.csswg.org/web-animations-1/#:~:text=Keyframe%20offsets%20can%20be%20specified%20using%20either%20form%20as%20illustrated%20below%3A\n            // Animate the \"after\" screenshot's opacity in.\n            afterImg.animate({ opacity: [0, 0, 1, 1, 1], easing }, vizAnimOpts);\n            const getRectPosition = (rect) => ({\n                left: `${rect.x * maxSizeScaleFactor * screenshotImageScaleFactor}px`,\n                top: `${rect.y * maxSizeScaleFactor * screenshotImageScaleFactor}px`,\n                width: `${rect.width * maxSizeScaleFactor * screenshotImageScaleFactor}px`,\n                height: `${rect.height * maxSizeScaleFactor * screenshotImageScaleFactor}px`,\n                opacity: 0.7,\n                outlineWidth: '1px',\n                easing,\n            });\n            // Create and position individual rects representing each impacted_node within a shift\n            beforeRects.forEach((beforeRect, i) => {\n                const afterRect = afterRects[i];\n                const rectEl = document.createElement('div');\n                rectEl.classList.add('layout-shift-viz-rect');\n                vizContainer.appendChild(rectEl);\n                let beforePos = getRectPosition(beforeRect);\n                let afterPos = getRectPosition(afterRect);\n                afterPos.opacity = 0.4;\n                // Edge case: if either before or after is 0x0x0x0, then we'll fade it in/out in the same location.\n                if ([beforeRect.width, beforeRect.height, beforeRect.x, beforeRect.y].every(v => v === 0)) {\n                    beforePos = { ...afterPos };\n                    beforePos.opacity = '0';\n                }\n                if ([afterRect.width, afterRect.height, afterRect.x, afterRect.y].every(v => v === 0)) {\n                    afterPos = { ...beforePos };\n                    afterPos.opacity = '0';\n                }\n                // Keep these keyframe offsets sync'd with other animate() ones above.\n                // The 4px outline slightly pulses the rect so it's easier to distinguish\n                rectEl.animate([beforePos, beforePos, { ...afterPos, outlineWidth: '4px' }, afterPos, afterPos], vizAnimOpts);\n            });\n        }\n        // If not done within the render lifecycle, getAnimations() falsely returns [] which allows animations to pile up on the same screenshot\n        void ComponentHelpers.ScheduledRender.scheduleRender(vizContainer, () => startVizAnimation());\n        vizContainer.append(beforeImg, afterImg);\n        return vizContainer;\n    }\n}\n//# sourceMappingURL=LayoutShiftsTrackAppender.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport { buildGroupStyle, buildTrackHeader, getFormattedTime } from './AppenderUtils.js';\nconst UIStrings = {\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    serverTimingTrack: 'This track contains timings taken from Server-Timing network response headers. Their respective start times are only estimated and may not be accurate.',\n    /**\n     * @description Server Side refers to activity happening in the server in the context of an HTTP request.\n     * @example {origin} PH1\n     */\n    serverSideTrack: 'Server Timings — {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/ServerTimingsTrackAppender.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ServerTimingsTrackAppender {\n    appenderName = 'ServerTimings';\n    #parsedTrace;\n    #compatibilityBuilder;\n    constructor(compatibilityBuilder, parsedTrace) {\n        this.#parsedTrace = parsedTrace;\n        this.#compatibilityBuilder = compatibilityBuilder;\n    }\n    appendTrackAtLevel(trackStartLevel, expanded) {\n        if (!Root.Runtime.experiments.isEnabled(\"timeline-server-timings\" /* Root.Runtime.ExperimentName.TIMELINE_SERVER_TIMINGS */)) {\n            return trackStartLevel;\n        }\n        if (this.#parsedTrace.ServerTimings.serverTimings.length === 0) {\n            return trackStartLevel;\n        }\n        let lastLevel = trackStartLevel;\n        const serverTimingsByOrigin = Object.groupBy(this.#parsedTrace.ServerTimings.serverTimings, serverTiming => serverTiming.args.data.origin);\n        for (const [origin, serverTimings] of Object.entries(serverTimingsByOrigin)) {\n            if (!serverTimings || serverTimings.length === 0) {\n                continue;\n            }\n            this.#appendTopLevelHeaderAtLevel(lastLevel, origin, expanded);\n            lastLevel = this.#appendServerTimings(lastLevel, serverTimings);\n        }\n        return lastLevel;\n    }\n    /**\n     * Appends the top level header for a track. Extension entries can be\n     * added to tracks or sub-tracks. In the former case, the top level\n     * header corresponds to the track name, in the latter it corresponds\n     * to the track group name.\n     */\n    #appendTopLevelHeaderAtLevel(currentLevel, origin, expanded) {\n        const style = buildGroupStyle({ shareHeaderLine: false, collapsible: true });\n        const headerTitle = i18nString(UIStrings.serverSideTrack, { PH1: origin });\n        const group = buildTrackHeader(\"server.timings\" /* VisualLoggingTrackName.SERVER_TIMINGS */, currentLevel, headerTitle, style, \n        /* selectable= */ true, expanded);\n        group.description = i18nString(UIStrings.serverTimingTrack);\n        this.#compatibilityBuilder.registerTrackForGroup(group, this);\n    }\n    #appendServerTimings(trackStartLevel, serverTimings) {\n        let currentStartLevel = trackStartLevel;\n        currentStartLevel = this.#compatibilityBuilder.appendEventsAtLevel(serverTimings, currentStartLevel, this);\n        return currentStartLevel;\n    }\n    colorForEvent() {\n        return ThemeSupport.ThemeSupport.instance().getComputedValue('--ref-palette-primary70');\n    }\n    titleForEvent(event) {\n        return event.name;\n    }\n    /**\n     * Returns the info shown when an event added by this appender\n     * is hovered in the timeline.\n     */\n    highlightedEntryInfo(event) {\n        return { title: event.name, formattedTime: getFormattedTime(event.dur) };\n    }\n}\n//# sourceMappingURL=ServerTimingsTrackAppender.js.map","import * as i18n from '../../core/i18n/i18n.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport { buildGroupStyle, buildTrackHeader, getFormattedTime } from './AppenderUtils.js';\nimport { ExtensionDataGatherer } from './ExtensionDataGatherer.js';\nimport * as Extensions from './extensions/extensions.js';\nimport { TimelineFlameChartMarker } from './TimelineFlameChartView.js';\nconst UIStrings = {\n    /**\n     *@description Text in Timeline Flame Chart Data Provider of the Performance panel\n     */\n    timings: 'Timings',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimingsTrackAppender.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * This defines the order these markers will be rendered if they are at the\n * same timestamp. The smaller number will be shown first - e.g. so if MarkFCP,\n * MarkDOMContent and MarkLCPCandidate have the same timestamp, visually we\n * will render [FCP][DCL][LCP] everytime.\n */\nexport const SORT_ORDER_PAGE_LOAD_MARKERS = {\n    [\"navigationStart\" /* Trace.Types.Events.Name.NAVIGATION_START */]: 0,\n    [\"MarkLoad\" /* Trace.Types.Events.Name.MARK_LOAD */]: 1,\n    [\"firstContentfulPaint\" /* Trace.Types.Events.Name.MARK_FCP */]: 2,\n    [\"firstPaint\" /* Trace.Types.Events.Name.MARK_FIRST_PAINT */]: 2,\n    [\"MarkDOMContent\" /* Trace.Types.Events.Name.MARK_DOM_CONTENT */]: 3,\n    [\"largestContentfulPaint::Candidate\" /* Trace.Types.Events.Name.MARK_LCP_CANDIDATE */]: 4,\n};\nexport class TimingsTrackAppender {\n    appenderName = 'Timings';\n    #colorGenerator;\n    #compatibilityBuilder;\n    #parsedTrace;\n    /**\n     * Before rendering the markers we group them by timestamp. This is because\n     * if we have multiple markers (e.g. FCP and LCP) at the same time, we want\n     * to ensure that we visually render FCP before LCP - else it's confusing\n     * to the user to see LCP appear before FCP, even though they are at the\n     * same timestamp.\n     * We only do this for PageLoadMarkers - any extension based markers are\n     * not sorted. If an extension marker happens to be at the same time as\n     * LCP, the native LCP event is preferred and shown first.\n     * Because we create an instance of an Appender per trace, we can cache this rather than calculate on each run.\n     */\n    #cachedMarkersByTimestamp = null;\n    constructor(compatibilityBuilder, parsedTrace, colorGenerator) {\n        this.#compatibilityBuilder = compatibilityBuilder;\n        this.#colorGenerator = colorGenerator;\n        this.#parsedTrace = parsedTrace;\n    }\n    /**\n     * Appends into the flame chart data the data corresponding to the\n     * timings track.\n     * @param trackStartLevel the horizontal level of the flame chart events where\n     * the track's events will start being appended.\n     * @param expanded wether the track should be rendered expanded.\n     * @returns the first available level to append more data after having\n     * appended the track's events.\n     */\n    appendTrackAtLevel(trackStartLevel, expanded) {\n        const extensionMarkers = ExtensionDataGatherer.instance().getExtensionData().extensionMarkers;\n        const pageloadMarkers = this.#parsedTrace.PageLoadMetrics.allMarkerEvents;\n        const extensionMarkersAreEmpty = extensionMarkers.length === 0;\n        const performanceMarks = this.#parsedTrace.UserTimings.performanceMarks.filter(m => !Trace.Handlers.ModelHandlers.ExtensionTraceData.extensionDataInTiming(m));\n        const performanceMeasures = this.#parsedTrace.UserTimings.performanceMeasures.filter(m => !Trace.Handlers.ModelHandlers.ExtensionTraceData.extensionDataInTiming(m));\n        const timestampEvents = this.#parsedTrace.UserTimings.timestampEvents;\n        const consoleTimings = this.#parsedTrace.UserTimings.consoleTimings;\n        if (extensionMarkersAreEmpty && pageloadMarkers.length === 0 && performanceMarks.length === 0 &&\n            performanceMeasures.length === 0 && timestampEvents.length === 0 && consoleTimings.length === 0) {\n            return trackStartLevel;\n        }\n        this.#appendTrackHeaderAtLevel(trackStartLevel, expanded);\n        let newLevel = this.#appendMarkersAtLevel(trackStartLevel);\n        newLevel = this.#compatibilityBuilder.appendEventsAtLevel(performanceMarks, newLevel, this);\n        newLevel = this.#compatibilityBuilder.appendEventsAtLevel(performanceMeasures, newLevel, this);\n        newLevel = this.#compatibilityBuilder.appendEventsAtLevel(timestampEvents, newLevel, this);\n        return this.#compatibilityBuilder.appendEventsAtLevel(consoleTimings, newLevel, this);\n    }\n    /**\n     * Adds into the flame chart data the header corresponding to the\n     * timings track. A header is added in the shape of a group in the\n     * flame chart data. A group has a predefined style and a reference\n     * to the definition of the legacy track (which should be removed\n     * in the future).\n     * @param currentLevel the flame chart level at which the header is\n     * appended.\n     */\n    #appendTrackHeaderAtLevel(currentLevel, expanded) {\n        const trackIsCollapsible = this.#parsedTrace.UserTimings.performanceMeasures.length > 0;\n        const style = buildGroupStyle({ useFirstLineForOverview: true, collapsible: trackIsCollapsible });\n        const group = buildTrackHeader(\"timings\" /* VisualLoggingTrackName.TIMINGS */, currentLevel, i18nString(UIStrings.timings), style, /* selectable= */ true, expanded);\n        this.#compatibilityBuilder.registerTrackForGroup(group, this);\n    }\n    #sortMarkersForPreferredVisualOrder(markers) {\n        markers.sort((m1, m2) => {\n            const m1Index = SORT_ORDER_PAGE_LOAD_MARKERS[m1.name] ?? Infinity;\n            const m2Index = SORT_ORDER_PAGE_LOAD_MARKERS[m2.name] ?? Infinity;\n            return m1Index - m2Index;\n        });\n    }\n    /**\n     * Group markers into a map, where keys are timestamps and the values are markers that have the same timestamp.\n     */\n    #groupMarkersByTimestamp(markers) {\n        if (this.#cachedMarkersByTimestamp) {\n            return this.#cachedMarkersByTimestamp;\n        }\n        const markersByTimestamp = new Map();\n        markers.forEach(marker => {\n            const forTime = markersByTimestamp.get(marker.ts) || [];\n            forTime.push(marker);\n            markersByTimestamp.set(marker.ts, forTime);\n        });\n        for (const markersAtTime of markersByTimestamp.values()) {\n            if (markersAtTime.length > 1) {\n                this.#sortMarkersForPreferredVisualOrder(markersAtTime);\n            }\n        }\n        this.#cachedMarkersByTimestamp = markersByTimestamp;\n        return this.#cachedMarkersByTimestamp;\n    }\n    /**\n     * Adds into the flame chart data the trace events corresponding\n     * to page load markers (LCP, FCP, L, etc.). These are taken straight\n     * from the PageLoadMetrics handler.\n     * @param currentLevel the flame chart level from which markers will\n     * be appended.\n     * @returns the next level after the last occupied by the appended\n     * page load markers (the first available level to append more data).\n     */\n    #appendMarkersAtLevel(currentLevel) {\n        let markers = this.#parsedTrace.PageLoadMetrics.allMarkerEvents;\n        markers = markers.concat(ExtensionDataGatherer.instance().getExtensionData().extensionMarkers)\n            .sort((m1, m2) => m1.ts - m2.ts);\n        if (markers.length === 0) {\n            return currentLevel;\n        }\n        const markersByTimestamp = this.#groupMarkersByTimestamp(markers);\n        for (const markersAtTime of markersByTimestamp.values()) {\n            for (const marker of markersAtTime) {\n                const index = this.#compatibilityBuilder.appendEventAtLevel(marker, currentLevel, this);\n                // Marker events do not have a duration: rendering code in\n                // FlameChart.ts relies on us setting this to NaN\n                this.#compatibilityBuilder.getFlameChartTimelineData().entryTotalTimes[index] = Number.NaN;\n            }\n        }\n        const minTimeMs = Trace.Helpers.Timing.microSecondsToMilliseconds(this.#parsedTrace.Meta.traceBounds.min);\n        const flameChartMarkers = markers.map(marker => {\n            // The timestamp for user timing trace events is set to the\n            // start time passed by the user at the call site of the timing\n            // (based on the UserTiming spec), meaning we can use event.ts\n            // directly.\n            // https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/timing/performance_user_timing.cc;l=236;drc=494419358caf690316f160a1f27d9e771a14c033\n            const startTimeMs = Trace.Helpers.Timing.microSecondsToMilliseconds(marker.ts);\n            const style = Trace.Types.Extensions.isSyntheticExtensionEntry(marker) ?\n                this.markerStyleForExtensionMarker(marker) :\n                this.markerStyleForPageLoadEvent(marker);\n            return new TimelineFlameChartMarker(startTimeMs, startTimeMs - minTimeMs, style);\n        });\n        this.#compatibilityBuilder.getFlameChartTimelineData().markers.push(...flameChartMarkers);\n        // TODO: we would like to have markers share the level with the rest but...\n        //  due to how CompatTrackAppender.appendEventsAtLevel tweaks the legacyEntryTypeByLevel array, it would take some work\n        return ++currentLevel;\n    }\n    /*\n      ------------------------------------------------------------------------------------\n       The following methods  are invoked by the flame chart renderer to query features about\n       events on rendering.\n      ------------------------------------------------------------------------------------\n    */\n    /**\n     * Gets the style for a page load marker event.\n     */\n    markerStyleForPageLoadEvent(markerEvent) {\n        const tallMarkerDashStyle = [6, 4];\n        let title = '';\n        let color = 'grey';\n        if (Trace.Types.Events.isMarkDOMContent(markerEvent)) {\n            color = '#0867CB';\n            title = \"DCL\" /* Trace.Handlers.ModelHandlers.PageLoadMetrics.MetricName.DCL */;\n        }\n        if (Trace.Types.Events.isMarkLoad(markerEvent)) {\n            color = '#B31412';\n            title = \"L\" /* Trace.Handlers.ModelHandlers.PageLoadMetrics.MetricName.L */;\n        }\n        if (Trace.Types.Events.isFirstPaint(markerEvent)) {\n            color = '#228847';\n            title = \"FP\" /* Trace.Handlers.ModelHandlers.PageLoadMetrics.MetricName.FP */;\n        }\n        if (Trace.Types.Events.isFirstContentfulPaint(markerEvent)) {\n            color = '#1A6937';\n            title = \"FCP\" /* Trace.Handlers.ModelHandlers.PageLoadMetrics.MetricName.FCP */;\n        }\n        if (Trace.Types.Events.isLargestContentfulPaintCandidate(markerEvent)) {\n            color = '#1A3422';\n            title = \"LCP\" /* Trace.Handlers.ModelHandlers.PageLoadMetrics.MetricName.LCP */;\n        }\n        if (Trace.Types.Events.isNavigationStart(markerEvent)) {\n            color = '#FF9800';\n            title = '';\n        }\n        return {\n            title,\n            dashStyle: tallMarkerDashStyle,\n            lineWidth: 0.5,\n            color,\n            tall: true,\n            lowPriority: false,\n        };\n    }\n    markerStyleForExtensionMarker(markerEvent) {\n        const tallMarkerDashStyle = [6, 4];\n        const title = markerEvent.name;\n        const color = Extensions.ExtensionUI.extensionEntryColor(markerEvent);\n        return {\n            title,\n            dashStyle: tallMarkerDashStyle,\n            lineWidth: 0.5,\n            color,\n            tall: true,\n            lowPriority: false,\n        };\n    }\n    /**\n     * Gets the color an event added by this appender should be rendered with.\n     */\n    colorForEvent(event) {\n        if (Trace.Types.Events.eventIsPageLoadEvent(event)) {\n            return this.markerStyleForPageLoadEvent(event).color;\n        }\n        if (Trace.Types.Extensions.isSyntheticExtensionEntry(event)) {\n            return Extensions.ExtensionUI.extensionEntryColor(event);\n        }\n        // Performance and console timings.\n        return this.#colorGenerator.colorForID(event.name);\n    }\n    /**\n     * Gets the title an event added by this appender should be rendered with.\n     */\n    titleForEvent(event) {\n        const metricsHandler = Trace.Handlers.ModelHandlers.PageLoadMetrics;\n        if (Trace.Types.Events.eventIsPageLoadEvent(event)) {\n            switch (event.name) {\n                case 'MarkDOMContent':\n                    return \"DCL\" /* metricsHandler.MetricName.DCL */;\n                case 'MarkLoad':\n                    return \"L\" /* metricsHandler.MetricName.L */;\n                case 'firstContentfulPaint':\n                    return \"FCP\" /* metricsHandler.MetricName.FCP */;\n                case 'firstPaint':\n                    return \"FP\" /* metricsHandler.MetricName.FP */;\n                case 'largestContentfulPaint::Candidate':\n                    return \"LCP\" /* metricsHandler.MetricName.LCP */;\n                case 'navigationStart':\n                    return '';\n                default:\n                    return event.name;\n            }\n        }\n        if (Trace.Types.Events.isTimeStamp(event)) {\n            return `${event.name}: ${event.args.data.message}`;\n        }\n        if (Trace.Types.Events.isPerformanceMark(event)) {\n            return `[mark]: ${event.name}`;\n        }\n        return event.name;\n    }\n    /**\n     * Returns the info shown when an event added by this appender\n     * is hovered in the timeline.\n     */\n    highlightedEntryInfo(event) {\n        const title = Trace.Types.Extensions.isSyntheticExtensionEntry(event) && event.args.tooltipText ?\n            event.args.tooltipText :\n            this.titleForEvent(event);\n        // If an event is a marker event, rather than show a duration of 0, we can instead show the time that the event happened, which is much more useful. We do this currently for:\n        // Page load events: DCL, FCP and LCP\n        // performance.mark() events\n        // console.timestamp() events\n        if (Trace.Types.Events.isMarkerEvent(event) || Trace.Types.Events.isPerformanceMark(event) ||\n            Trace.Types.Events.isTimeStamp(event)) {\n            const timeOfEvent = Trace.Helpers.Timing.timeStampForEventAdjustedByClosestNavigation(event, this.#parsedTrace.Meta.traceBounds, this.#parsedTrace.Meta.navigationsByNavigationId, this.#parsedTrace.Meta.navigationsByFrameId);\n            return { title, formattedTime: getFormattedTime(timeOfEvent) };\n        }\n        return { title, formattedTime: getFormattedTime(event.dur) };\n    }\n}\n//# sourceMappingURL=TimingsTrackAppender.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Trace from '../../models/trace/trace.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport { AnimationsTrackAppender } from './AnimationsTrackAppender.js';\nimport { getEventLevel, getFormattedTime } from './AppenderUtils.js';\nimport * as TimelineComponents from './components/components.js';\nimport { ExtensionDataGatherer } from './ExtensionDataGatherer.js';\nimport { ExtensionTrackAppender } from './ExtensionTrackAppender.js';\nimport { GPUTrackAppender } from './GPUTrackAppender.js';\nimport { InteractionsTrackAppender } from './InteractionsTrackAppender.js';\nimport { LayoutShiftsTrackAppender } from './LayoutShiftsTrackAppender.js';\nimport { ServerTimingsTrackAppender } from './ServerTimingsTrackAppender.js';\nimport { ThreadAppender } from './ThreadAppender.js';\nimport { InstantEventVisibleDurationMs, } from './TimelineFlameChartDataProvider.js';\nimport { TimingsTrackAppender } from './TimingsTrackAppender.js';\nexport function entryIsVisibleInTimeline(entry, parsedTrace) {\n    if (parsedTrace && parsedTrace.Meta.traceIsGeneric) {\n        return true;\n    }\n    if (Trace.Types.Events.isUpdateCounters(entry)) {\n        // These events are not \"visible\" on the timeline because they are instant events with 0 duration.\n        // However, the Memory view (CountersGraph in the codebase) relies on\n        // finding the UpdateCounters events within the user's active trace\n        // selection in order to show the memory usage for the selected time\n        // period.\n        // Therefore we mark them as visible so they are appended onto the Thread\n        // track, and hence accessible by the CountersGraph view.\n        return true;\n    }\n    // Gate the visibility of post message events behind the experiement flag\n    if (Trace.Types.Events.isSchedulePostMessage(entry) || Trace.Types.Events.isHandlePostMessage(entry)) {\n        return Root.Runtime.experiments.isEnabled(\"timeline-show-postmessage-events\" /* Root.Runtime.ExperimentName.TIMELINE_SHOW_POST_MESSAGE_EVENTS */);\n    }\n    if (Trace.Types.Extensions.isSyntheticExtensionEntry(entry) || Trace.Types.Events.isSyntheticServerTiming(entry)) {\n        return true;\n    }\n    // Default styles are globally defined for each event name. Some\n    // events are hidden by default.\n    const eventStyle = TimelineComponents.EntryStyles.getEventStyle(entry.name);\n    const eventIsTiming = Trace.Types.Events.isConsoleTime(entry) || Trace.Types.Events.isPerformanceMeasure(entry) ||\n        Trace.Types.Events.isPerformanceMark(entry);\n    return (eventStyle && !eventStyle.hidden) || eventIsTiming;\n}\nexport const TrackNames = [\n    'Animations',\n    'Timings',\n    'Interactions',\n    'GPU',\n    'LayoutShifts',\n    'Thread',\n    'Thread_AuctionWorklet',\n    'Extension',\n    'ServerTimings',\n];\nexport class CompatibilityTracksAppender {\n    #trackForLevel = new Map();\n    #trackForGroup = new Map();\n    #eventsForTrack = new Map();\n    #trackEventsForTreeview = new Map();\n    #flameChartData;\n    #parsedTrace;\n    #entryData;\n    #colorGenerator;\n    #allTrackAppenders = [];\n    #visibleTrackNames = new Set([...TrackNames]);\n    #legacyEntryTypeByLevel;\n    #timingsTrackAppender;\n    #animationsTrackAppender;\n    #interactionsTrackAppender;\n    #gpuTrackAppender;\n    #layoutShiftsTrackAppender;\n    #threadAppenders = [];\n    #serverTimingsTrackAppender;\n    /**\n     * @param flameChartData the data used by the flame chart renderer on\n     * which the track data will be appended.\n     * @param parsedTrace the trace parsing engines output.\n     * @param entryData the array containing all event to be rendered in\n     * the flamechart.\n     * @param legacyEntryTypeByLevel an array containing the type of\n     * each entry in the entryData array. Indexed by the position the\n     * corresponding entry occupies in the entryData array. This reference\n     * is needed only for compatibility with the legacy flamechart\n     * architecture and should be removed once all tracks use the new\n     * system.\n     */\n    constructor(flameChartData, parsedTrace, entryData, legacyEntryTypeByLevel) {\n        this.#flameChartData = flameChartData;\n        this.#parsedTrace = parsedTrace;\n        this.#entryData = entryData;\n        this.#colorGenerator = new Common.Color.Generator(\n        /* hueSpace= */ { min: 30, max: 55, count: undefined }, \n        /* satSpace= */ { min: 70, max: 100, count: 6 }, \n        /* lightnessSpace= */ 50, \n        /* alphaSpace= */ 0.7);\n        this.#legacyEntryTypeByLevel = legacyEntryTypeByLevel;\n        this.#timingsTrackAppender = new TimingsTrackAppender(this, this.#parsedTrace, this.#colorGenerator);\n        this.#allTrackAppenders.push(this.#timingsTrackAppender);\n        this.#interactionsTrackAppender = new InteractionsTrackAppender(this, this.#parsedTrace, this.#colorGenerator);\n        this.#allTrackAppenders.push(this.#interactionsTrackAppender);\n        this.#animationsTrackAppender = new AnimationsTrackAppender(this, this.#parsedTrace);\n        this.#allTrackAppenders.push(this.#animationsTrackAppender);\n        this.#gpuTrackAppender = new GPUTrackAppender(this, this.#parsedTrace);\n        this.#allTrackAppenders.push(this.#gpuTrackAppender);\n        this.#layoutShiftsTrackAppender = new LayoutShiftsTrackAppender(this, this.#parsedTrace);\n        this.#allTrackAppenders.push(this.#layoutShiftsTrackAppender);\n        this.#serverTimingsTrackAppender = new ServerTimingsTrackAppender(this, this.#parsedTrace);\n        this.#allTrackAppenders.push(this.#serverTimingsTrackAppender);\n        this.#addThreadAppenders();\n        this.#addExtensionAppenders();\n        this.onThemeChange = this.onThemeChange.bind(this);\n        ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, this.onThemeChange);\n    }\n    reset() {\n        ThemeSupport.ThemeSupport.instance().removeEventListener(ThemeSupport.ThemeChangeEvent.eventName, this.onThemeChange);\n    }\n    setFlameChartDataAndEntryData(flameChartData, entryData, legacyEntryTypeByLevel) {\n        this.#trackForGroup.clear();\n        this.#flameChartData = flameChartData;\n        this.#entryData = entryData;\n        this.#legacyEntryTypeByLevel = legacyEntryTypeByLevel;\n    }\n    getFlameChartTimelineData() {\n        return this.#flameChartData;\n    }\n    onThemeChange() {\n        for (const group of this.#flameChartData.groups) {\n            // We only need to update the color here, because FlameChart will call `scheduleUpdate()` when theme is changed.\n            group.style.color = ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-on-surface');\n            group.style.backgroundColor =\n                ThemeSupport.ThemeSupport.instance().getComputedValue('--sys-color-cdt-base-container');\n        }\n    }\n    #addExtensionAppenders() {\n        const tracks = ExtensionDataGatherer.instance().getExtensionData().extensionTrackData;\n        for (const trackData of tracks) {\n            this.#allTrackAppenders.push(new ExtensionTrackAppender(this, trackData));\n        }\n    }\n    #addThreadAppenders() {\n        const threadTrackOrder = (appender) => {\n            switch (appender.threadType) {\n                case \"MAIN_THREAD\" /* Trace.Handlers.Threads.ThreadType.MAIN_THREAD */: {\n                    if (appender.isOnMainFrame) {\n                        // Ensure `about:blank` or `chrome://new-tab-page` are deprioritized, as they're likely not the profiling targets\n                        const url = appender.getUrl();\n                        if (url.startsWith('about:') || url.startsWith('chrome:')) {\n                            return 2;\n                        }\n                        return 0;\n                    }\n                    return 1;\n                }\n                case \"WORKER\" /* Trace.Handlers.Threads.ThreadType.WORKER */:\n                    return 3;\n                case \"RASTERIZER\" /* Trace.Handlers.Threads.ThreadType.RASTERIZER */:\n                    return 4;\n                case \"THREAD_POOL\" /* Trace.Handlers.Threads.ThreadType.THREAD_POOL */:\n                    return 5;\n                case \"AUCTION_WORKLET\" /* Trace.Handlers.Threads.ThreadType.AUCTION_WORKLET */:\n                    return 6;\n                case \"OTHER\" /* Trace.Handlers.Threads.ThreadType.OTHER */:\n                    return 7;\n                default:\n                    return 8;\n            }\n        };\n        const threads = Trace.Handlers.Threads.threadsInTrace(this.#parsedTrace);\n        const processedAuctionWorkletsIds = new Set();\n        const showAllEvents = Root.Runtime.experiments.isEnabled('timeline-show-all-events');\n        for (const { pid, tid, name, type } of threads) {\n            if (this.#parsedTrace.Meta.traceIsGeneric) {\n                // If the trace is generic, we just push all of the threads with no\n                // effort to differentiate them, hence overriding the thread type to be\n                // OTHER for all threads.\n                this.#threadAppenders.push(new ThreadAppender(this, this.#parsedTrace, pid, tid, name, \"OTHER\" /* Trace.Handlers.Threads.ThreadType.OTHER */));\n                continue;\n            }\n            // These threads have no useful information. Omit them\n            if ((name === 'Chrome_ChildIOThread' || name === 'Compositor' || name === 'GpuMemoryThread') && !showAllEvents) {\n                continue;\n            }\n            const maybeWorklet = this.#parsedTrace.AuctionWorklets.worklets.get(pid);\n            if (processedAuctionWorkletsIds.has(pid)) {\n                // Keep track of this process to ensure we only add the following\n                // tracks once per process and not once per thread.\n                continue;\n            }\n            if (maybeWorklet) {\n                processedAuctionWorkletsIds.add(pid);\n                // Each AuctionWorklet event represents two threads:\n                // 1. the Utility Thread\n                // 2. the V8 Helper Thread\n                // Note that the names passed here are not used visually. TODO: remove this name?\n                this.#threadAppenders.push(new ThreadAppender(this, this.#parsedTrace, pid, maybeWorklet.args.data.utilityThread.tid, 'auction-worket-utility', \"AUCTION_WORKLET\" /* Trace.Handlers.Threads.ThreadType.AUCTION_WORKLET */));\n                this.#threadAppenders.push(new ThreadAppender(this, this.#parsedTrace, pid, maybeWorklet.args.data.v8HelperThread.tid, 'auction-worklet-v8helper', \"AUCTION_WORKLET\" /* Trace.Handlers.Threads.ThreadType.AUCTION_WORKLET */));\n                continue;\n            }\n            this.#threadAppenders.push(new ThreadAppender(this, this.#parsedTrace, pid, tid, name, type));\n        }\n        // Sort first by track order, then break ties by placing busier tracks first.\n        this.#threadAppenders.sort((a, b) => (threadTrackOrder(a) - threadTrackOrder(b)) || (b.getEntries().length - a.getEntries().length));\n        this.#allTrackAppenders.push(...this.#threadAppenders);\n    }\n    timingsTrackAppender() {\n        return this.#timingsTrackAppender;\n    }\n    animationsTrackAppender() {\n        return this.#animationsTrackAppender;\n    }\n    interactionsTrackAppender() {\n        return this.#interactionsTrackAppender;\n    }\n    gpuTrackAppender() {\n        return this.#gpuTrackAppender;\n    }\n    layoutShiftsTrackAppender() {\n        return this.#layoutShiftsTrackAppender;\n    }\n    threadAppenders() {\n        return this.#threadAppenders;\n    }\n    serverTimingsTrackAppender() {\n        return this.#serverTimingsTrackAppender;\n    }\n    eventsInTrack(trackAppender) {\n        const cachedData = this.#eventsForTrack.get(trackAppender);\n        if (cachedData) {\n            return cachedData;\n        }\n        // Calculate the levels occupied by a track.\n        let trackStartLevel = null;\n        let trackEndLevel = null;\n        for (const [level, track] of this.#trackForLevel) {\n            if (track !== trackAppender) {\n                continue;\n            }\n            if (trackStartLevel === null) {\n                trackStartLevel = level;\n            }\n            trackEndLevel = level;\n        }\n        if (trackStartLevel === null || trackEndLevel === null) {\n            throw new Error(`Could not find events for track: ${trackAppender}`);\n        }\n        const entryLevels = this.#flameChartData.entryLevels;\n        const events = [];\n        for (let i = 0; i < entryLevels.length; i++) {\n            if (trackStartLevel <= entryLevels[i] && entryLevels[i] <= trackEndLevel) {\n                events.push(this.#entryData[i]);\n            }\n        }\n        events.sort((a, b) => a.ts - b.ts); // TODO(paulirish): Remove as I'm 90% it's already sorted.\n        this.#eventsForTrack.set(trackAppender, events);\n        return events;\n    }\n    /**\n     * Gets the events to be shown in the tree views of the details pane\n     * (Bottom-up, Call tree, etc.). These are the events from the track\n     * that can be arranged in a tree shape.\n     */\n    eventsForTreeView(trackAppender) {\n        const cachedData = this.#trackEventsForTreeview.get(trackAppender);\n        if (cachedData) {\n            return cachedData;\n        }\n        let trackEvents = this.eventsInTrack(trackAppender);\n        if (!Trace.Helpers.TreeHelpers.canBuildTreesFromEvents(trackEvents)) {\n            // Some tracks can include both async and sync events. When this\n            // happens, we use all events for the tree views if a trees can be\n            // built from both sync and async events. If this is not possible,\n            // async events are filtered out and only sync events are used\n            // (it's assumed a tree can always be built using a tracks sync\n            // events).\n            trackEvents = trackEvents.filter(e => !Trace.Types.Events.isPhaseAsync(e.ph));\n        }\n        this.#trackEventsForTreeview.set(trackAppender, trackEvents);\n        return trackEvents;\n    }\n    /**\n     * Caches the track appender that owns a flame chart group. FlameChart\n     * groups are created for each track in the timeline. When an user\n     * selects a track in the UI, the track's group is passed to the model\n     * layer to inform about the selection.\n     */\n    registerTrackForGroup(group, appender) {\n        this.#flameChartData.groups.push(group);\n        this.#trackForGroup.set(group, appender);\n    }\n    /**\n     * Returns number of tracks of given type already appended.\n     * Used to name the \"Raster Thread 6\" tracks, etc\n     */\n    getCurrentTrackCountForThreadType(threadType) {\n        return this.#threadAppenders.filter(appender => appender.threadType === threadType && appender.headerAppended())\n            .length;\n    }\n    /**\n     * Looks up a FlameChart group for a given appender.\n     */\n    groupForAppender(targetAppender) {\n        let foundGroup = null;\n        for (const [group, appender] of this.#trackForGroup) {\n            if (appender === targetAppender) {\n                foundGroup = group;\n                break;\n            }\n        }\n        return foundGroup;\n    }\n    /**\n     * Given a FlameChart group, gets the events to be shown in the tree\n     * views if that group was registered by the appender system.\n     */\n    groupEventsForTreeView(group) {\n        const track = this.#trackForGroup.get(group);\n        if (!track) {\n            return null;\n        }\n        return this.eventsForTreeView(track);\n    }\n    /**\n     * Caches the track appender that owns a level. An appender takes\n     * ownership of a level when it appends data to it.\n     * The cache is useful to determine what appender should handle a\n     * query from the flame chart renderer when an event's feature (like\n     * style, title, etc.) is needed.\n     */\n    registerTrackForLevel(level, appender) {\n        // TODO(crbug.com/1442454) Figure out how to avoid the circular calls.\n        this.#trackForLevel.set(level, appender);\n    }\n    groupForLevel(level) {\n        const appenderForLevel = this.#trackForLevel.get(level);\n        if (!appenderForLevel) {\n            return null;\n        }\n        return this.groupForAppender(appenderForLevel);\n    }\n    /**\n     * Adds an event to the flame chart data at a defined level.\n     * @param event the event to be appended,\n     * @param level the level to append the event,\n     * @param appender the track which the event belongs to.\n     * @returns the index of the event in all events to be rendered in the flamechart.\n     */\n    appendEventAtLevel(event, level, appender) {\n        // TODO(crbug.com/1442454) Figure out how to avoid the circular calls.\n        this.#trackForLevel.set(level, appender);\n        const index = this.#entryData.length;\n        this.#entryData.push(event);\n        this.#legacyEntryTypeByLevel[level] = \"TrackAppender\" /* EntryType.TRACK_APPENDER */;\n        this.#flameChartData.entryLevels[index] = level;\n        this.#flameChartData.entryStartTimes[index] = Trace.Helpers.Timing.microSecondsToMilliseconds(event.ts);\n        const dur = event.dur || Trace.Helpers.Timing.millisecondsToMicroseconds(InstantEventVisibleDurationMs);\n        this.#flameChartData.entryTotalTimes[index] = Trace.Helpers.Timing.microSecondsToMilliseconds(dur);\n        return index;\n    }\n    /**\n     * Adds into the flame chart data a list of trace events.\n     * @param events the trace events that will be appended to the flame chart.\n     * The events should be taken straight from the trace handlers. The handlers\n     * should sort the events by start time, and the parent event is before the\n     * child.\n     * @param trackStartLevel the flame chart level from which the events will\n     * be appended.\n     * @param appender the track that the trace events belong to.\n     * @param eventAppendedCallback an optional function called after the\n     * event has been added to the timeline data. This allows the caller\n     * to know f.e. the position of the event in the entry data. Use this\n     * hook to customize the data after it has been appended, f.e. to add\n     * decorations to a set of the entries.\n     * @returns the next level after the last occupied by the appended these\n     * trace events (the first available level to append next track).\n     */\n    appendEventsAtLevel(events, trackStartLevel, appender, eventAppendedCallback) {\n        const lastTimestampByLevel = [];\n        for (let i = 0; i < events.length; ++i) {\n            const event = events[i];\n            if (!entryIsVisibleInTimeline(event, this.#parsedTrace)) {\n                continue;\n            }\n            const level = getEventLevel(event, lastTimestampByLevel);\n            const index = this.appendEventAtLevel(event, trackStartLevel + level, appender);\n            eventAppendedCallback?.(event, index);\n        }\n        this.#legacyEntryTypeByLevel.length = trackStartLevel + lastTimestampByLevel.length;\n        this.#legacyEntryTypeByLevel.fill(\"TrackAppender\" /* EntryType.TRACK_APPENDER */, trackStartLevel);\n        return trackStartLevel + lastTimestampByLevel.length;\n    }\n    /**\n     * Gets the all track appenders that have been set to be visible.\n     */\n    allVisibleTrackAppenders() {\n        return this.#allTrackAppenders.filter(track => this.#visibleTrackNames.has(track.appenderName));\n    }\n    allThreadAppendersByProcess() {\n        const appenders = this.allVisibleTrackAppenders();\n        const result = new Map();\n        for (const appender of appenders) {\n            if (!(appender instanceof ThreadAppender)) {\n                continue;\n            }\n            const existing = result.get(appender.processId()) ?? [];\n            existing.push(appender);\n            result.set(appender.processId(), existing);\n        }\n        return result;\n    }\n    /**\n     * Sets the visible tracks internally\n     * @param visibleTracks set with the names of the visible track\n     * appenders. If undefined, all tracks are set to be visible.\n     */\n    setVisibleTracks(visibleTracks) {\n        if (!visibleTracks) {\n            this.#visibleTrackNames = new Set([...TrackNames]);\n            return;\n        }\n        this.#visibleTrackNames = visibleTracks;\n    }\n    getDrawOverride(event, level) {\n        const track = this.#trackForLevel.get(level);\n        if (!track) {\n            throw new Error('Track not found for level');\n        }\n        return track.getDrawOverride?.(event);\n    }\n    /**\n     * Returns the color an event is shown with in the timeline.\n     */\n    colorForEvent(event, level) {\n        const track = this.#trackForLevel.get(level);\n        if (!track) {\n            throw new Error('Track not found for level');\n        }\n        return track.colorForEvent(event);\n    }\n    /**\n     * Returns the title an event is shown with in the timeline.\n     */\n    titleForEvent(event, level) {\n        const track = this.#trackForLevel.get(level);\n        if (!track) {\n            throw new Error('Track not found for level');\n        }\n        // Historically all tracks would have a titleForEvent() method.\n        // However, we are working on migrating all event title logic into one place (components/EntryName)\n        // TODO(crbug.com/365047728):\n        // Once this migration is complete, no tracks will have a custom\n        // titleForEvent method and we can remove titleForEvent entirely.\n        if (track.titleForEvent) {\n            return track.titleForEvent(event);\n        }\n        return TimelineComponents.EntryName.nameForEntry(event, this.#parsedTrace);\n    }\n    /**\n     * Returns the info shown when an event in the timeline is hovered.\n     */\n    highlightedEntryInfo(event, level) {\n        const track = this.#trackForLevel.get(level);\n        if (!track) {\n            throw new Error('Track not found for level');\n        }\n        // Add any warnings information to the tooltip. Done here to avoid duplicating this call in every appender.\n        // By doing this here, we ensure that any warnings that are\n        // added to the WarningsHandler are automatically used and added\n        // to the tooltip.\n        const warningElements = TimelineComponents.DetailsView.buildWarningElementsForEvent(event, this.#parsedTrace);\n        let title = this.titleForEvent(event, level);\n        let formattedTime = getFormattedTime(event.dur);\n        let additionalElement;\n        // If the track defines a custom highlight, call it and use its values.\n        if (track.highlightedEntryInfo) {\n            const { title: customTitle, formattedTime: customFormattedTime, warningElements: extraWarningElements, additionalElement: element, } = track.highlightedEntryInfo(event);\n            if (customTitle) {\n                title = customTitle;\n            }\n            if (customFormattedTime) {\n                formattedTime = customFormattedTime;\n            }\n            if (extraWarningElements) {\n                warningElements.push(...extraWarningElements);\n            }\n            additionalElement = element;\n        }\n        return {\n            title,\n            formattedTime,\n            warningElements,\n            additionalElement,\n        };\n    }\n}\n//# sourceMappingURL=CompatibilityTracksAppender.js.map"],"names":["EnhancedTracesParser","#scriptRundownEvents","#scriptToV8Context","#scriptToScriptSource","#largeScriptToScriptSource","#scriptToSourceLength","#targets","#executionContexts","#scripts","traceEvents","e","UserVisibleError.UserVisibleError","event","data","target","executionContext","script","scriptIsolateId","splittedSource","v8ContextToExecutionContextId","scriptRundownEvent","v8Context","id","splittedSources","context","isolate","scriptId","executionContexts","scripts","filteredExecutionContexts","filteredScripts","createTrimmedUrlSearch","url","search","key","value","Platform.StringUtilities.trimEndWithMaxLength","createUrlLabels","urls","labels","isAllHttps","index","previousUrl","elideHost","elideProtocol","label","shortenUrl","maxChars","parts","shortenedUrl","Platform.StringUtilities.trimMiddle","i","isTimeRangeAnnotation","annotation","isEntryLabelAnnotation","isEntriesLinkAnnotation","traceEventKeyToValues","type","part","domLookUpBatchNodesCache","nodeIdsForEventCache","nodeIdsForEvent","modelData","fromCache","foundIds","Types.Events.isLayout","root","Types.Events.isSyntheticLayoutShift","node","Types.Events.isLargestContentfulPaintCandidate","Types.Events.isPaint","Types.Events.isPaintImage","Types.Events.isScrollLayer","Types.Events.isSyntheticAnimation","Types.Events.isDecodeImage","paintImageEvent","Types.Events.isDrawLazyPixelRef","Types.Events.isParseMetaViewport","extractRelatedDOMNodesFromEvent","nodeIds","domNodesForMultipleBackendNodeIds","domModel","SDK.TargetManager.TargetManager","SDK.DOMModel.DOMModel","domNodesMap","cacheForModel","IDLE_FUNCTION_CALL_NAMES","calculateWindow","traceBounds","mainThreadEntries","entriesWithIdleRemoved","entry","Types.Events.isProfileCall","findLowUtilizationRegion","startIndex","stopIndex","cutIndex","entryAtCut","timings","Helpers.Timing.eventTimingsMicroSeconds","cutTime","usedTime","step","task","taskTimings","taskTime","interval","rightIndex","leftIndex","leftTimings","rightTimings","leftTime","rightTime","zoomedInSpan","Types.Timing.MicroSeconds","forNewRecording","isCpuProfile","recordStartTime","getConcurrencyOrTimeout","SDK.CPUThrottlingManager.CPUThrottlingManager","resolve","hardwareConcurrency","cpuThrottling","networkConditions","SDK.NetworkManager.MultitargetNetworkManager","networkTitle","SourceMappingsUpdated","resolvedCodeLocationDataNames","SourceMapsResolver","#parsedTrace","#isResolving","#debuggerModelsToListen","parsedTrace","callFrame","Trace.Types.Events.isProfileCall","stackTrace","Trace.Helpers.Trace.getZeroIndexedStackTraceForEvent","codeLocationKey","resolvedCallFrameURL","Trace.Extras.URLForEntry.getNonResolved","Workspace.Workspace.WorkspaceImpl","pid","tid","resolvedCodeLocationData","resolvedForPid","resolvedForTid","keyForCallFrame","threadToProfileMap","profile","nodes","debuggerModel","#targetForThread","SDK.DebuggerModel.DebuggerModel","SDK.SourceMapManager.Events","#onAttachedSourceMap","#resolveMappingsForProfileNodes","updatedMappings","threadsInProcess","threadProfile","resolvedFunctionName","SourceMapScopes.NamesResolver.resolveProfileFrameFunctionName","location","SDK.DebuggerModel.Location","uiLocation","Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding","maybeWorkerId","isIgnoreListedEntry","rawUrl","sourceMappedData","uiSourceCode","resolvedUrl","isKnownThirdParty","ignoreListOptions","isIgnoreListedURL","options","Bindings.IgnoreListManager.IgnoreListManager","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","buildGroupStyle","extra","defaultGroupStyle","ThemeSupport.ThemeSupport","buildTrackHeader","jslogContext","startLevel","name","style","selectable","expanded","showStackContextMenu","group","getFormattedTime","totalTime","selfTime","formattedTotalTime","Trace.Helpers.Timing.microSecondsToMilliseconds","Trace.Types.Timing.MilliSeconds","formattedSelfTime","minSelfTimeSignificance","i18n.TimeUtilities.millisToString","getEventLevel","lastTimestampByLevel","level","startTime","endTime","addDecorationToEvent","timelineData","eventIndex","decoration","decorationsForEvent","AnimationsTrackAppender","#compatibilityBuilder","#eventAppendedCallback","#eventAppendedCallbackFunction","compatibilityBuilder","trackStartLevel","animations","#appendTrackHeaderAtLevel","currentLevel","Trace.Types.Events.isSyntheticAnimation","Trace.Insights.InsightRunners.CumulativeLayoutShift","displayName","instance","StateChangedEvent","state","updateType","onChange","cb","BoundsManager","opts","forceNew","#currentState","initialBounds","entireBoundsMilli","Trace.Helpers.Timing.traceWindowMilliSeconds","minimapBoundsMilli","timelineTraceWindowMilli","newBounds","existingBounds","newWindow","existingWindow","Trace.Types.Timing.MicroSeconds","flattenBreadcrumbs","initialBreadcrumb","allBreadcrumbs","breadcrumbsIter","iterChild","Breadcrumbs","initialTraceWindow","lastBreadcrumb","newBreadcrumbTraceWindow","newBreadcrumb","child","parent","activeBreadcrumb","TraceBounds.TraceBounds.BoundsManager","styles","render","html","LitHtml","BreadcrumbActivatedEvent","breadcrumb","childBreadcrumbsRemoved","BreadcrumbsUI","#shadow","#boundRender","#render","#initialBreadcrumb","#activeBreadcrumb","breadcrumbsUIStyles","ComponentHelpers.ScheduledRender.scheduleRender","#activateBreadcrumb","#showBreadcrumbsAndScrollLastCrumbIntoView","container","#onContextMenu","menu","UI.ContextMenu.ContextMenu","#renderElement","breadcrumbRange","VisualLogging.item","i18n.TimeUtilities.preciseMillisToString","output","LitHtml.nothing","VisualLogging.section","CPUThrottlingSelector","#currentRate","cpuThrottlingSelectorStyles","#onRateChange","#onMenuItemSelected","MobileThrottling.ThrottlingManager.throttlingManager","selectionTitle","MobileThrottling.ThrottlingPresets.ThrottlingPresets","rate","title","LitHtml.render","buildWarningElementsForEvent","warnings","warningElements","warning","duration","span","forcedReflowLink","UI.XLink.XLink","i18n.i18n.getFormatLocalizedString","Trace.Types.Events.isFireIdleCallback","exceededMs","longTaskLink","longInteractionINPLink","Platform.assertNever","buildRowsForWebSocketEvent","rows","initiator","Trace.Types.Events.isWebSocketCreate","i18n.i18n.lockedString","Trace.Types.Events.isWebSocketTransfer","generateInvalidationsList","invalidations","groupedByReason","backendNodeIds","invalidation","reason","Trace.Types.Events.isScheduleStyleInvalidationTracking","Trace.Types.Events.isStyleRecalcInvalidationTracking","existing","EventCategory","mainEventCategories","TimelineRecordStyle","category","hidden","TimelineCategory","#hidden","visible","childColor","color","categoryStyles","eventStylesMap","getEventStyle","eventName","maybeInitSylesMap","stringIsEventCategory","it","getCategoryStyles","defaultCategoryStyles","setEventStylesMap","eventStyles","setCategories","cats","visibleTypes","result","getTimelineMainEventCategories","setTimelineMainEventCategories","categories","nameForEntry","potentialCallName","Trace.Handlers.ModelHandlers.Samples.getProfileCallFunctionName","Trace.Types.Events.isLegacyTimelineFrame","Trace.Types.Events.isDispatch","Trace.Types.Events.isSyntheticNetworkRequest","parsedURL","Common.ParsedURL.ParsedURL","text","Trace.Types.Events.isWebSocketDestroy","Trace.Types.Events.isSyntheticInteraction","nameForInteractionEvent","Trace.Handlers.ModelHandlers.UserInteractions.categoryOfInteraction","nothing","ifDefined","ShowDialog","FieldSettingsDialog","#dialog","#configSetting","CrUXManager.CrUXManager","#urlOverride","#urlOverrideEnabled","#urlOverrideWarning","#originMapWarning","#originMappings","#isEditingOriginGrid","#editGridDevelopmentOrigin","#editGridProductionOrigin","cruxManager","#resetToSettingState","configSetting","#flushToSetting","enabled","#onSettingsChanged","#urlHasFieldData","v","#submit","#getOrigin","#closeDialog","#showDialog","evt","fieldSettingsDialogStyles","Input.textInputStyles","Input.checkboxStyles","#renderOpenButton","VisualLogging.action","#renderEnableButton","#renderDisableButton","#onUrlOverrideChange","input","#onUrlOverrideEnabledChange","#onEditGridDevelopmentOriginChange","#onEditGridProductionOriginChange","#startEditingOriginMapping","#addOriginMapping","developmentOrigin","productionOrigin","m","#deleteOriginMapping","#renderOriginMapGrid","mapping","inputStyle","gridData","linkEl","descriptionEl","ComponentHelpers.Directives.nodeRenderedCallback","VisualLogging.toggle","InteractionBreakdown","#entry","inputDelay","i18n.TimeUtilities.formatMicroSecondsAsMillisFixed","mainThreadTime","presentationDelay","EventReferenceClick","EventRef","#text","#event","sidebarInsightStyles","eventRef","Utils.Helpers.shortenUrl","Platform.TypeScriptUtilities.assertNever","InsightActivated","insightSetKey","overlays","InsightDeactivated","InsightSetHovered","bounds","InsightSetZoom","InsightProvideOverlays","InsightProvideRelatedEvents","events","activateInsight","SidebarInsight","#insightTitle","#insightDescription","#insightInternalName","#expanded","#estimatedSavingsTime","#estimatedSavingsBytes","#dispatchInsightToggle","#renderHoverIcon","insightIsActive","containerClasses","LitHtml.Directives.classMap","#handleHeaderKeyDown","#getEstimatedSavingsString","timeString","bytesString","Platform.NumberUtilities.bytesToString","estimatedSavingsString","md","Category","shouldRenderForCategory","BaseInsight","LitHtml.literal","#baseRender","#initialOverlays","#hasRegisteredRelatedEvents","SidebarInsight.InsightProvideRelatedEvents","#dispatchInsightActivatedEvent","insights","activeInsight","activeCategory","SidebarInsight.InsightDeactivated","SidebarInsight.InsightActivated","SidebarInsight.InsightProvideOverlays","Platform.TypeScriptUtilities.assertNotNullOrUndefined","markdown","tokens","Marked.Marked.lexer","CLSCulprits","worstCluster","Trace.Insights.Common.getInsight","a","b","range","max","cluster","culpritsByShift","causes","shifts","shift","culprits","fontReq","iframes","#clickEvent","ts","clusterTs","i18n.TimeUtilities.formatMicroSecondsTime","culprit","insight","hasCulprits","matchesCategory","DocumentLatency","#check","didPass","good","bad","icon","ariaLabel","redirectDurationMicro","Trace.Helpers.Timing.millisecondsToMicroseconds","sections","Trace.Helpers.Timing.traceWindowFromMicroSeconds","serverResponseTimeMicro","sendEnd","sendEndMicro","#renderInsight","hasFailure","Table","#insight","#state","#headers","#rows","#interactive","#currentHoverIndex","row","tableStyles","#onHoverRow","rowEl","#onSelectedRowChanged","#onClickRow","#onMouseLeave","rowIndex","h","rowsEls","FontDisplay","#overlayForRequest","font","shouldShow","InteractionToNextPaint","#createOverlaysForPhase","phase","p1","p2","p3","time","us","Platform.Timing.microSecondsToMilliSeconds","getImageData","shouldIncreasePriorityHint","shouldPreloadImage","shouldRemoveLazyLoading","discoveryDelay","LCPDiscovery","#adviceIcon","didFail","#renderDiscoveryDelay","delay","timeWrapper","imageResults","#handleBadImage","img","#renderImage","imageData","#renderDiscovery","LCPPhases","#overlay","#getPhaseData","navigationId","insightsByNavigation","lcpInsight","timing","phases","ttfb","loadDelay","loadTime","renderDelay","lcpTs","lcpMicroseconds","renderBegin","mainReqStart","loadBegin","loadDelayStart","#renderLCPPhases","phaseData","percent","section","#hasDataToRender","relatedEvents","NodeLink","#backendNodeId","#options","#linkify","mainTarget","Common.Linkifier.Linkifier","relatedNodeEl","RenderBlockingRequests","request","#createOverlayForRequest","#renderRenderBlocking","insightResult","estimatedSavings","topRequests","hasBlockingRequests","linkText","lineNumber","Bindings.ResourceUtils.displayNameForURL","coordinator","Coordinator.RenderCoordinator.RenderCoordinator","LinkifierClick","#url","Platform.DevToolsPath.EmptyUrlString","#lineNumber","#columnNumber","#linkText","#title","linkifierImplStyles","#onLinkActivation","linkifierClickEvent","LinkifierUtils.linkText","LitHtml.Directives.ifDefined","Linkifier","SlowCSSSelector","#slowCSSSelector","#selectorLocations","cssModel","selector","styleSheetHeader","ranges","itemIndex","locations","divider","SDK.CSSModel.CSSModel","LitHtml.Directives.until","ThirdParties","#overlaysForEntity","entity","requests","overlaysForThisEntity","overlay","entries","topTransferSizeEntries","topMainThreadTimeEntries","summary","kv","Viewport","backendNodeId","viewportInsight","MAX_URL_LENGTH","LayoutShiftDetails","#traceInsightsSets","#isFreshRecording","layoutShiftDetailsStyles","UI.UIUtils.injectTextButtonStyles","traceInsightsSets","isFreshRecording","#renderTitle","EntryName.nameForEntry","#renderShiftedElements","elementsShifted","el","#renderIframe","iframeId","domLoadingId","domLoadingFrame","SDK.FrameManager.FrameManager","LegacyComponents.Linkifier.Linkifier","#renderFontRequest","linkifiedURL","Insights.EventRef.EventReferenceClick","#renderAnimation","failure","#renderRootCauseValues","rootCauses","iframe","#renderStartTime","Helpers.Timing.microSecondsToMilliseconds","shiftTs","#renderShiftRow","score","#renderParentCluster","#renderClusterTotalRow","#renderShiftDetails","layoutShift","insightsId","Trace.Types.Events.NO_NAVIGATION","clsInsight","hasShiftedElements","parentCluster","#renderClusterDetails","x","#togglePopover","Trace.Types.Events.isSyntheticLayoutShift","show","NetworkThrottlingSelector","#customNetworkConditionsSetting","#groups","#currentConditions","Common.Settings.Settings","#resetPresets","networkThrottlingSelectorStyles","#onConditionsChanged","#onSettingChanged","SDK.NetworkManager.NoThrottlingConditions","newConditions","g","item","#keyForNetworkConditions","#getConditionsTitle","conditions","#onAddClick","Common.Revealer.reveal","selectedConditionsKey","Platform.StringUtilities.toKebabCase","renderCompareText","rating","compare","values","renderDetailedCompareText","localRating","fieldRating","NetworkCategory","networkResourceCategory","mimeType","colorForNetworkCategory","cssVarName","colorForNetworkRequest","LCP_THRESHOLDS","CLS_THRESHOLDS","INP_THRESHOLDS","rateMetric","thresholds","renderMetricValue","format","metricValueEl","NumberWithUnit","parse","startBracket","endBracket","startParen","endParen","firstPart","unitPart","lastPart","formatMicroSecondsAsSeconds","element","milliseconds","seconds","Platform.Timing.milliSecondsToSeconds","i18n.TimeUtilities.formatMicroSecondsAsSeconds","formatMicroSecondsAsMillisFixed","fractionDigits","MetricCard","#tooltipEl","#data","metricCardStyles","metricValueStyles","#hideTooltipOnEsc","Platform.KeyboardUtilities.isEscKey","#hideTooltip","#hideTooltipOnMouseLeave","#hideTooltipOnFocusOut","relatedTarget","tooltipEl","#showTooltip","delayMs","containerBox","offset","tooltipBox","rightDiff","leftDiff","#getCompareThreshold","#getTitle","#getThresholds","#getFormatFn","micro","#getLocalValue","localValue","#getFieldValue","fieldValue","#getCompareRating","compareThreshold","#renderCompareString","valueEl","#getMetricValueLogContext","#renderEnvironmentRecommendations","recs","metric","rec","isLocal","#renderDetailedCompareString","localValueEl","fieldValueEl","#getPercentLabelForRating","#bucketIndexForRating","#getBarWidthForRating","density","histogram","#renderFieldHistogram","fieldEnabled","goodLabel","needsImprovementLabel","poorLabel","#renderPhaseTable","Directives","until","DEVICE_OPTION_LIST","CrUXManager.DEVICE_SCOPE_LIST","RTT_COMPARISON_THRESHOLD","RTT_MINIMUM","LiveMetricsView","LegacyWrapper.LegacyWrapper.WrappableComponent","#lcpValue","#clsValue","#inpValue","#interactions","#layoutShifts","#cruxPageResult","#fieldDeviceOption","#fieldPageScope","#toggleRecordAction","#recordReloadAction","#logsEl","#tooltipContainerEl","#interactionsListEl","#layoutShiftsListEl","#listIsScrolling","UI.ActionRegistry.ActionRegistry","#onMetricStatus","hasNewLS","hasNewInteraction","renderPromise","#keepScrolledToBottom","listEl","#onFieldDataChanged","#onEmulationChanged","#refreshFieldDataForCurrentPage","#getSelectedFieldResponse","deviceScope","#getAutoDeviceScope","#getFieldMetricData","fieldMetric","liveMetricsViewStyles","liveMetrics","LiveMetrics.LiveMetrics","#deviceModeModel","EmulationModel.DeviceModeModel.DeviceModeModel","#renderLcpCard","fieldData","#renderClsCard","clusterIds","clusterIsVisible","#revealLayoutShiftCluster","#renderInpCard","interaction","#revealInteraction","#renderRecordAction","action","onClick","UI.ShortcutRegistry.ShortcutRegistry","#getNetworkRec","response","rtt","closestPreset","smallestDiff","preset","targetLatency","diff","#getDeviceRec","fractions","#renderRecordingSettings","deviceLinkEl","deviceMessage","deviceRecEl","networkRecEl","#getPageScopeLabel","pageScope","baseLabel","#onPageScopeMenuItemSelected","#renderPageScopeSetting","urlLabel","originLabel","buttonTitle","accessibleTitle","shouldDisable","#getDeviceScopeDisplayName","emulationModel","#getLabelForDeviceOption","deviceOption","deviceScopeLabel","#onDeviceOptionMenuItemSelected","#renderDeviceScopeSetting","currentDeviceLabel","#getCollectionPeriodRange","selectedResponse","firstDate","lastDate","formattedFirstDate","formattedLastDate","#renderCollectionPeriod","dateEl","message","#renderFieldDataMessage","messageEl","#renderDataDescriptions","localLink","localEl","fieldLink","fieldEl","#renderLogSection","#renderInteractionsLog","#renderLayoutShiftsLog","interactionEl","UI.UIUtils.runCSSAnimationOnce","metricValue","isP98Excluded","isInp","layoutShiftEls","shiftId","layoutShiftEl","liveMetricsTitle","LiveMetricsLogs","UI.Widget.WidgetElement","#tabbedPane","tabId","#clearCurrentLog","containerWidget","UI.Widget.Widget","UI.TabbedPane.TabbedPane","interactionsSlot","interactionsTab","layoutShiftsSlot","layoutShiftsTab","clearButton","UI.Toolbar.ToolbarButton","NetworkRequestTooltip","#networkRequest","networkRequestTooltipStyles","networkRequest","PerfUI.NetworkPriorities.uiLabelForNetworkPriority","syntheticData","queueing","requestPlusWaiting","download","waitingOnMainThread","styleForWaiting","styleForDownloading","leftWhisker","rightWhisker","LitHtml.Directives.styleMap","chipStyle","Trace.Helpers.Network.isSyntheticNetworkRequestEventRenderBlocking","NetworkRequestDetails","#maybeTarget","#requestPreviewElements","#linkifier","linkifier","NetworkRequestDetailsStyles","maybeTarget","#renderRow","#renderURL","TimelineUtils.NetworkRequest.getNetworkRequest","contextMenu","TimelineUtils.NetworkRequest.TimelineNetworkRequest","urlElement","#renderFromCache","cached","#renderEncodedDataLength","lengthText","#renderInitiatedBy","Trace.Helpers.Trace.stackTraceForEvent","topFrame","link","#renderBlockingRow","Helpers.Network.isSyntheticNetworkRequestEventRenderBlocking","renderBlockingText","#renderPreviewElement","previewElement","LegacyComponents.ImagePreview.ImagePreview","requestPreviewElement","networkData","RelatedInsightChips","map","#insightClick","activeEvent","eventToRelatedInsightsMap","relatedInsights","insightChips","diagramImageUrl","entryLabelImageUrl","timeRangeImageUrl","deleteAnnotationImageUrl","SidebarAnnotationsTab","#annotations","#annotationEntryToColorMap","#annotationsHiddenSetting","annotations","#processAnnotationsList","annotationEntryToColorMap","entriesWithNotStartedAnnotation","processedAnnotations","#isAnnotationCreationStarted","annotationEntry","firstAnnotation","secondAnnotation","#getAnnotationTimestamp","sidebarAnnotationsTabStyles","#renderEntryToIdentifier","entryToName","toBackgroundColor","toTextColor","findTextColorForContrast","#renderAnnotationIdentifier","entryName","backgroundColor","minTraceBoundsMilli","timeRangeStartInMs","timeRangeEndInMs","entryFromName","fromBackgroundColor","fromTextColor","#revealAnnotation","RevealAnnotation","#renderTutorialCard","#jslogForAnnotation","detailedAriaDescriptionForAnnotation","RemoveAnnotation","from","i18n.TimeUtilities.formatMicroSecondsAsMillisFixedExpanded","to","nameFrom","nameTo","bgColorText","bgColor","Common.Color.parse","darkColorToken","darkColorText","Common.ColorUtils.contrastRatio","EXPERIMENTAL_INSIGHTS","Insights.FontDisplay.FontDisplay","ALL_INSIGHTS","Insights.InteractionToNextPaint.InteractionToNextPaint","Insights.LCPPhases.LCPPhases","Insights.LCPDiscovery.LCPDiscovery","Insights.CLSCulprits.CLSCulprits","Insights.RenderBlocking.RenderBlockingRequests","Insights.DocumentLatency.DocumentLatency","Insights.Viewport.Viewport","Insights.ThirdParties.ThirdParties","Insights.SlowCSSSelector.SlowCSSSelector","SidebarSingleInsightSet","#renderBound","Insights.Types.Category","#metricIsVisible","#onClickMetric","traceEvent","#renderMetricValue","classification","eventToSelectOnClick","valueText","valueDisplay","#getINP","#getLCP","#getCLS","maxScore","#renderMetrics","lcp","cls","inp","Trace.Handlers.ModelHandlers.PageLoadMetrics.scoreClassificationForLargestContentfulPaint","Trace.Handlers.ModelHandlers.UserInteractions.scoreClassificationForInteractionToNextPaint","Trace.Handlers.ModelHandlers.LayoutShifts.scoreClassificationForLayoutShift","#insightsForRendering","Root.Runtime.experiments","#renderInsights","insightComponents","component","FEEDBACK_URL","SidebarInsightsTab","#insights","#activeInsight","#selectedCategory","#insightSetKey","trivialThreshold","insightSets","insightSet","active","#insightSetToggled","Insights.SidebarInsight.InsightDeactivated","#insightSetHovered","Insights.SidebarInsight.InsightSetHovered","#insightSetUnhovered","#onFeedbackClick","Host.InspectorFrontendHost.InspectorFrontendHostInstance","#onZoomClick","Insights.SidebarInsight.InsightSetZoom","#renderZoomButton","insightSetToggled","classes","#renderDropdownIcon","hasMultipleInsightSets","Utils.Helpers.createUrlLabels","contents","LitHtml.Directives.repeat","template","removedAnnotation","DEFAULT_SIDEBAR_WIDTH_PX","MIN_SIDEBAR_WIDTH_PX","SidebarWidget","UI.Widget.VBox","#insightsView","InsightsView","#annotationsView","AnnotationsView","#annotationCount","#userHasOpenedSidebarOnce","#updateAnnotationsCountBadge","updatedAnnotations","countAdorner","Adorners.Adorner.Adorner","countSpan","#component","getAnnotationEntries","getAnnotationWindow","annotationWindow","minVisibleEntryDuration","eventDuration","fromEventDuration","toEventDuration","fromEntryEndTS","toEntryEndTS","maxTimestamp","isTimeRangeLabel","isEntriesLink","isEntryLabel","labelForOverlay","ariaDescriptionForOverlay","ariaAnnouncementForModifiedEvent","min","minText","maxText","TimelineComponents.EntryName.nameForEntry","TraceLoadEvent","CLSRect","y","width","height","linkifierInstance","object","_options","rect","SDK.OverlayModel.OverlayModel","ActiveFilters","#activeFilters","newFilters","f","SHOULD_SHOW_EASTER_EGG","Tracker","#freshRecordings","IsolateSelector","UI.Toolbar.ToolbarItem","Menus.SelectMenu.SelectMenu","#onSelectMenuSelected","SDK.IsolateManager.IsolateManager","#updateIsolateItem","itemForIsolate","modelCountByName","model","domain","count","modelTitle","modelItem","selectedIsolateTitle","UI.Context.Context","SDK.CPUProfilerModel.CPUProfilerModel","isolateItem","Menus.Menu.MenuItem","SDK.RuntimeModel.RuntimeModel","EntriesFilter","#entryToNode","#invisibleEntries","#expandableEntries","#entryToDescendantsMap","entryToNodeMap","entryNode","entryParent","allVisibleDescendants","#findAllDescendantsOfNode","descendant","allVisibleRepeatingDescendants","#findAllRepeatingDescendantsOfNext","allInVisibleDescendants","Trace.Helpers.TreeHelpers.TraceEntryNodeForAI","invisibleEntries","expandableEntries","entriesToHide","actionNode","parentNode","#firstVisibleParentNodeForEntryNode","#addExpandableEntry","#makeEntryChildrenVisible","allDescendants","entryIsVisibleInTimeline","cachedDescendants","descendants","children","childNode","childNodeCachedDescendants","repeatingNodes","rootIsProfileCall","childIsProfileCall","rootNodeEntry","childNodeEntry","Trace.Helpers.SamplesIntegrator.SamplesIntegrator","closestExpandableParent","iterEntry","EventsSerializer","#modifiedProfileCallByKey","Trace.Types.Events.SampleIndex","rawEvents","Trace.Helpers.SyntheticEvents.SyntheticEventsManager","Trace.Types.Events.isSyntheticBased","eventValues","Trace.Types.File.traceEventKeyToValues","#getModifiedProfileCallByKeyValues","syntheticEvent","cacheResult","profileCallsInThread","match","modificationsManagerByTraceIndex","activeManager","AnnotationModifiedEvent","ModificationsManager","#entriesFilter","#timelineBreadcrumbs","#modifications","#eventsSerializer","#overlayForAnnotation","traceModel","traceIndex","syntheticEventsManager","metadata","newModificationsManager","modifications","TimelineComponents.Breadcrumbs.Breadcrumbs","newAnnotation","loadedFromFile","#findLabelOverlayForEntry","newOverlay","#createOverlayFromAnnotation","annotationsForEntry","entryFrom","entryTo","overlayToRemove","removedOverlay","annotationForRemovedOverlay","updatedAnnotation","AnnotationHelpers.isTimeRangeLabel","Trace.Types.File.isTimeRangeAnnotation","AnnotationHelpers.isEntriesLink","Trace.Types.File.isEntriesLinkAnnotation","updatedOverlay","annotationForUpdatedOverlay","currOverlay","hiddenEntries","#annotationsJSON","entryLabelsSerialized","labelledTimeRangesSerialized","linksBetweenEntriesSerialized","currAnnotation","Trace.Types.File.isEntryLabelAnnotation","serializedEvent","serializedFromEvent","serializedToEvent","#applyEntriesFilterModifications","#applyStoredAnnotations","entryLabel","timeRange","linkBetweenEntries","err","hiddenEntriesKeys","expandableEntriesKeys","EntryLinkStartCreating","EntriesLinkOverlay","#coordinateFrom","#fromEntryDimentions","#coordinateTo","#toEntryDimentions","#connectorLineContainer","#connector","#entryFromWrapper","#entryToWrapper","#entryFromConnector","#entryToConnector","#entryFromVisible","#entryToVisible","#canvasRect","#fromEntryIsSource","#toEntryIsSource","#arrowHidden","#linkState","initialFromEntryCoordinateAndDimentions","linkCreationNotStartedState","shouldHide","fromEntryParams","#updateCreateLinkBox","#redrawConnectionArrow","entriesVisibility","toEntryParams","minWidthToDrawConnectorCircles","drawFromEntryConnectorCircle","widthOfToEntry","drawToEntryConnectorCircle","halfEntryHeight","endConnectionPointX","endConnectionPointY","connectionPointX","connectionPointY","arrowColor","#partlyVisibleConnectionLinePercentage","lineLength","visibleLineLength","visibleLineFromTotalPercentage","createLinkBox","createLinkIcon","#startCreatingConnection","DASHED_STROKE_AMOUNT","CONNECTOR_CIRCLE_STROKE_WIDTH","CONNECTOR_CIRCLE_RADIUS","EmptyEntryLabelRemoveEvent","EntryLabelChangeEvent","newLabel","EntryLabelOverlay","#isPendingRemoval","#isLabelEditable","#entryLabelVisibleHeight","#labelPartsWrapper","#entryHighlightWrapper","#inputField","#label","#shouldDrawBelowEntry","shouldDrawBelowEntry","#drawLabel","#drawConnector","#handleLabelInputKeyUp","labelBoxTextContent","#handleLabelInputKeyDown","allowedKeysAfterReachingLenLimit","#handleLabelInputPaste","clipboardData","pastedText","trimmedText","selection","entryLabelVisibleHeight","#focusInputBox","translation","connector","circle","connectorColor","initialLabel","xTranslation","yTranslation","transformString","editable","newLabelText","VisualLogging.textField","TimeRangeLabelChangeEvent","TimeRangeRemoveEvent","TimeRangeOverlay","#duration","#rangeContainer","#labelBox","#setLabelEditability","#visibleOverlayWidth","overlayRect","overlayStartX","overlayEndX","canvasStartX","canvasEndX","leftVisible","paddingForScrollbar","labelFocused","labelRect","visibleOverlayWidth","durationBoxLength","hideLabel","labelLeftMarginToCenter","labelOffLeftOfScreen","rightBound","labelOffRightOfScreen","durationText","TimespanBreakdownOverlay","#sections","isBelow","sectionLayoutData","sectionRect","minSectionWidthToShowAnyLabel","layoutData","labelHidden","labelTruncated","leftMargin","#renderSection","NETWORK_RESIZE_ELEM_HEIGHT_PX","traceWindowContainingOverlays","minTime","maxTime","windowForOverlay","traceWindowForOverlay","overlayMinBounds","overlayMaxBounds","timingsForOverlayEntry","timingsFrom","timingsTo","entriesForOverlay","chartForEntry","Trace.Types.Events.isNetworkTrackEntry","overlayIsSingleton","AnnotationOverlayActionEvent","Overlays","#overlaysToElements","#lastMouseOffsetX","#lastMouseOffsetY","#entriesLinkInProgress","#dimensions","#charts","#overlaysContainer","#queries","init","#updateMouseCoordinatesProgressEntriesLink","chart","mouseEvent","networkHeight","linkInProgressElement","yCoordinate","existingOverlay","newData","k","matches","overlaysToRemove","overlayIsOfType","htmlElement","dimensions","visibleWindow","timeRangeOverlays","existingElement","#createElementForNewOverlay","#updateOverlayBeforePositioning","#positionOverlay","#updateOverlayAfterPositioning","#positionOverlappingTimeRangeLabels","overlaysSorted","o1","o2","overlapsByOverlay","current","overlaps","j","next","Trace.Helpers.Timing.boundsIncludeTimeRange","firstOverlay","overlappingOverlays","firstIndexForOverlapClass","annotationsAreHidden","isVisible","#setOverlayElementVisibility","#positionEntryBorderOutlineType","selectedOverlay","#positionTimeRangeOverlay","entryVisible","#positionEntryLabelOverlay","entriesToConnect","#calculateFromAndToForEntriesLink","#positionEntriesLinkOverlay","#positionTimespanBreakdownOverlay","#entryIsVerticallyVisibleOnChart","Trace.Helpers.Timing.timestampIsInBounds","#positionTimestampMarker","#positionCandyStripedTimeRange","#xPixelForMicroSeconds","elementSections","leftEdgePixel","rightEdgePixel","rangeWidth","leftPixel","rightPixel","sectionElement","eventHeight","top","bottom","minSpace","fromEntryInCollapsedTrack","#entryIsInCollapsedTrack","toEntryInCollapsedTrack","hideArrow","entryFromIsSource","entryToIsSource","entryFromWrapper","fromEntryHeight","fromEntryWidth","fromCutOffHeight","fromEntryX","fromEntryY","entryFromVisibility","entryToVisibility","yPixelForFromArrow","#yCoordinateForNotVisibleEntry","entryToWrapper","toEntryHeight","toEntryWidth","toCutOffHeight","toEntryX","toEntryY","yPixelForToArrow","chartName","entryWrapper","entryHeight","entryWidth","cutOffHeight","Components.EntryLabelOverlay.EntryLabelOverlay","startX","endX","widthPixels","finalWidth","totalHeight","chartTopPadding","cutOffTop","cutOffBottom","chartWidth","provider","customPos","cutOffRight","cutOffLeft","div","jsLogContext","shouldDrawLabelBelowEntry","Components.EntryLabelOverlay.EmptyEntryLabelRemoveEvent","Components.EntryLabelOverlay.EntryLabelChangeEvent","entryEndX","entryStartX","entryStartY","Components.EntriesLinkOverlay.EntriesLinkOverlay","Components.EntriesLinkOverlay.EntryLinkStartCreating","Components.TimeRangeOverlay.TimeRangeOverlay","Components.TimeRangeOverlay.TimeRangeLabelChangeEvent","Components.TimeRangeOverlay.TimeRangeRemoveEvent","Components.TimespanBreakdownOverlay.TimespanBreakdownOverlay","verticallyVisible","horiziontallyVisible","#entryIsHorizontallyVisibleOnChart","entryTimeRange","entryIndex","yWithoutNetwork","timestamp","canvasWidthPixels","timeFromLeft","totalTimeSpan","indexForEntry","pixelAdjustedForScroll","Trace.Helpers.Timing.eventTimingsMicroSeconds","arrayOfObjectsJsonGenerator","arrayOfObjects","itemsIterator","firstItem","itemsRemaining","itemsJSON","traceJsonGenerator","cpuprofileJsonGenerator","cpuprofile","TimelineController","#collectedEvents","#recordingStartTime","rootTarget","primaryPageTarget","client","Trace.TracingManager.TracingManager","disabledByDefault","categoriesArray","Trace.Types.Events.Categories","Extensions.ExtensionServer.ExtensionServer","runtimeModel","usage","progress","CountersGraph","#events","#onTraceBoundsChangeBound","#onTraceBoundsChange","#noEventsFoundMessage","#showNoEventsMessage","delegate","Calculator","UI.Widget.HBox","UI.Toolbar.Toolbar","canvasWidget","UI.Widget.VBoxWithResizeCallback","noEventsFound","PerfUI.TimelineGrid.TimelineGrid","TraceBounds.TraceBounds.onChange","#scheduleRefresh","counterEventsFound","Trace.Types.Events.isUpdateCounters","counters","counter","Trace.Helpers.Timing.eventTimingsMilliSeconds","uiName","settingsKey","formatter","Counter","CounterUI","parentElement","UI.UIUtils.invokeOnceAfterBatchUpdate","counterUI","minDistance","bestTime","distance","_event","ctx","maxValue","minValue","calculator","start","end","Platform.NumberUtilities.clamp","Platform.ArrayUtilities.upperBound","Platform.ArrayUtilities.DEFAULT_COMPARATOR","Platform.ArrayUtilities.lowerBound","xFactor","countersPane","graphColor","Platform.NumberUtilities.withThousandsSeparator","UI.Toolbar.ToolbarSettingCheckbox","parsedColor","colorWithAlpha","canvas","originY","yValues","maxYRange","yFactor","currentY","currentValue","limitLineY","minimumBoundary","maximumBoundary","clientWidth","precision","targetForEvent","targetManager","workerId","TimelineJSProfileProcessor","frame","nativeName","threadName","appendEvent","args","dur","ph","cat","Trace.Types.Events.ProcessID","TimelineModelFilter","TimelineVisibleEventsFilter","Trace.Types.Extensions.isSyntheticExtensionEntry","Trace.Helpers.Trace.eventHasCategory","ExclusiveNameFilter","#excludeNames","excludeNames","Node$1","_value","matchFunction","results","TopDownNode","Node","path","self","instantEventCallback","onInstantEvent","eventIdCallback","generateEventID","eventGroupIdCallback","depth","matchedDepth","currentDirectChild","Trace.Helpers.Trace.forEachEvent","onStartEvent","onEndEvent","currentStartTime","currentEndTime","matchPath","processEvent","groupId","TopDownRootNode","filters","doNotAggregate","flatNodes","groupNodes","groupNode","GroupNode","BottomUpRootNode","textFilter","nodeById","selfTimeStack","firstNodeStack","totalTimeById","noNodeOnStack","BottomUpNode","pair","hasChildren","eventIdStack","eventStack","lastTimeMarker","childId","actualEndTime","Trace.Types.Events.isTimeStamp","TracingLayerTree","SDK.LayerTreeBase.LayerTreeBase","SDK.PaintProfiler.PaintProfilerModel","layers","paints","idsToResolve","oldLayersById","convertedLayers","processedLayers","contentRoot","tiles","tile","tileId","Common.Console.Console","layer","payload","TracingLayer","nodeIdsToResolve","seenNodeIds","TracingFrameLayerTree","#target","#snapshot","#paints","viewport","rootLayer","layerTree","paintProfilerModel","childParam","paint","snapshot","getPaintProfilerSnapshot","targetRect","pictures","fragments","picture","rectsOverlap","x0","y0","segmentsOverlap","a1","a2","b1","b2","params","nonPayloadScrollRects","extensionEntryColor","themeColor","SelectionRangeSymbol","TimelineSelection","eventDispatchDesciptors","colorGenerator","TimelineUIUtils","TimelineModel.TimelineJSProfile.TimelineJSProfileProcessor","UI.UIUtils.beautifyFunctionName","regExp","appendObjectProperties","TimelineComponents.EntryStyles.TimelineRecordStyle","TimelineComponents.EntryStyles.getCategoryStyles","TimelineComponents.EntryStyles.getEventStyle","Extensions.ExtensionUI.extensionEntryColor","Utils.SourceMapsResolver.SourceMapsResolver","Trace.Types.Events.isAnimation","detailsText","unsafeEventArgs","unsafeEventData","delta","columnNumber","Trace.Helpers.Trace.getZeroIndexedLineAndColumnForEvent","startLine","endLine","linkifyTopCallFrameAsText","details","Trace.Types.Events.isFunctionCall","Trace.Types.Events.objectIsCallFrame","UI.UIUtils.createTextChild","functionName","Trace.Types.Events.isUserTiming","linkifyOptions","UI.Fragment.html","eventData","contentHelper","cacheKind","detailed","getEventSelfTime","relatedNodesMap","Trace.Extras.FetchNodes.extractRelatedDOMNodesFromEvent","previewElementSymbol","Trace.Types.Events.isPaint","relatedNodeLabel","TimelineDetailsContentHelper","defaultColorForEvent","isMarkerEvent","initiatorFor","TimelineComponents.DetailsView.buildWarningElementsForEvent","adjustedEventTimeStamp","timeStampForEventAdjustedForClosestNavigationIfPossible","Trace.Types.Events.isPerformanceMark","detailContainer","Trace.Types.Events.isSyntheticUserTiming","Trace.Types.Events.isV8Compile","isStreamed","Trace.Types.Events.isSyntheticServerTiming","detailsNode","producedCachedSize","consumedCachedSize","clip","clipWidth","clipHeight","selectorStatsSetting","note","beginData","Trace.Types.Events.isWebSocketTraceEvent","TimelineComponents.DetailsView.buildRowsForWebSocketEvent","nodeName","failures","failureReasons","unsupportedProperties","str","Trace.Types.Events.isMarkerEvent","layoutShiftEventData","clsLink","evolvedClsLink","impactedNode","oldRect","newRect","linkedOldRect","linkedNewRect","relatedNodes","relatedNode","nodeSpan","stats","pieChart","buildRangeStatsCacheIfNeeded","aggregatedStats","subtractStats","aggregatedStatsAtTime","aggregatedTotal","cache","categoryBreakdownCacheSymbol","categoryCache","t0","t1","v0","v1","categoryStack","lastTime","updateCategory","statsArrays","lastValue","categoryChange","parentCategory","obj","eventWithArgsFirst","highlightContainer","indentLength","eventStr","elem","UI.UIUtils.createShadowRootWithCoreStyles","codeHighlighterStyles","CodeHighlighter.CodeHighlighter.highlightNode","callFrames","initiatorStackLabel","stackLabel","initiatorStartTime","links","totalInvalidations","traceBoundsState","isEntryOutsideBreadcrumb","isEntryHidden","UI.ARIAUtils.markAsLink","TimelinePanel","TimelineComponents.DetailsView.generateInvalidationsList","createLinkForInvalidationNode","generatedItems","scriptLink","niceNodeLink","generatedText","total","eventComparator","eventStartTime","Platform.ArrayUtilities.binaryIndexOf","nextEvent","nextEventStartTime","nextEventSelfTime","categoryName","Trace.Types.Events.isPhaseAsync","snapshotEvent","snapshotWithRect","imageURLPromise","imageURL","stylesContainer","shadowRoot","imagePreviewStyles","paintProfilerButton","keyEvent","zeroTime","eventDivider","UI.Tooltip.Tooltip","TimelineModel.TimelineModelFilter.TimelineVisibleEventsFilter","TimelineComponents.EntryStyles.visibleTypes","selfCategory","PerfUI.PieChart.PieChart","slices","appendLegendRow","TimelineComponents.EntryStyles\n                .getCategoryStyles","filmStrip","filmStripFrame","filmStripPreview","UI.UIUtils.loadImage","image","frameClicked","PerfUI.FilmStripView.Dialog","offsetMilli","durationMilli","quad","lightOrange","orange","green","purple","EventDispatchTypeDescriptor","tallMarkerDashStyle","tall","Common.Color.Generator","trimAt","Common.ParsedURL.schemeIs","aggregatedStatsKey","priority","eventTypes","swatchColor","titleElement","rowElement","content","isWarning","isStacked","valueElement","startColumn","locationContent","Platform.StringUtilities.sprintf","stackTraceElement","callFrameContents","LegacyComponents.JSPresentationUtils.buildStackTracePreviewContents","Trace.Helpers.Timing.timeStampForEventAdjustedByClosestNavigation","Trace.Types.Events.isFirstContentfulPaint","Trace.Types.Events.isFirstPaint","Trace.Types.Events.isMarkDOMContent","Trace.Types.Events.isMarkLoad","Trace.Types.Events.isLargestContentfulPaintCandidate","isOutermostMainFrame","isMainFrame","IsLong","TimelineModel.TimelineModelFilter.TimelineModelFilter","#minimumRecordDurationMilli","TimelineRegExp","TimelineTreeView","#selectedEvents","#eventNameForSorting","searchableView","selectedEvents","Components.Linkifier.Linkifier","TimelineModel.TimelineModelFilter.ExclusiveNameFilter","columns","UI.SplitWidget.SplitWidget","mainView","toolbar","VisualLogging.toolbar","DataGrid.SortableDataGrid.SortableDataGrid","UI.Toolbar.ToolbarToggle","#filterChanged","textFilterUI","UI.Toolbar.ToolbarFilter","_node","_contextMenu","treeNode","suppressSelectedEvent","pathToRoot","gridNode","maxSelfTime","maxTotalTime","totalUsedTime","TreeGridNode","rootNode","groupIdCallback","TimelineModel.TimelineProfileTree.TopDownRootNode","columnId","sortFunction","compareNameSortFn","nodeA","nodeB","eventA","eventB","nameA","nameB","compareStartTime","compareSelfTime","compareTotalTime","searchQuery","caseSensitive","isRegex","matchWholeWord","Platform.StringUtilities.createSearchRegex","selectedNode","banner","profileNode","eventGridNode","profileNodeToTreeGridNode","searchConfig","_shouldJump","_jumpBackwards","searchRegex","Platform.NumberUtilities.mod","GridNode","DataGrid.SortableDataGrid.SortableDataGridNode","grandTotalTime","treeView","cell","iconContainer","info","eventCategory","UI.ARIAUtils.setLabel","showPercents","textDiv","AggregatedTimelineTreeView","TimelineStackView","groupBy","unattributed","TimelineComponents.EntryStyles.stringIsEventCategory","UI.Toolbar.ToolbarSettingComboBox","stack","GroupBy","Trace.Helpers.Trace.frameIDForEvent","ThirdPartyWeb.ThirdPartyWeb","domainMatch","CallTreeTimelineTreeView","VisualLogging.pane","DataGrid.DataGrid.Order","grouping","BottomUpTimelineTreeView","TimelineModel.TimelineProfileTree.BottomUpRootNode","Common.ObjectWrapper.eventMixin","header","DataGrid.ViewportDataGrid.ViewportDataGrid","nodeToReveal","EventsTimelineTreeView","Filters","lastSelectedNode","selectedEvent","iterators","done","expand","dataGridNode","c","fragment","Common.ObjectWrapper.ObjectWrapper","durationFilterUI","UI.Toolbar.ToolbarComboBox","durationFilterChanged","durationMs","categoryFiltersUI","Components.EntryStyles.getCategoryStyles","checkbox","UI.Toolbar.ToolbarCheckbox","categoriesFilterChanged","minimumRecordDuration","checkBox","TimelineLayersView","showPaintProfilerCallback","vbox","LayerViewer.LayerViewHost.LayerViewHost","layerTreeOutline","LayerViewer.LayerTreeOutline.LayerTreeOutline","LayerViewer.Layers3DView.Layers3DView","layerDetailsView","LayerViewer.LayerDetailsView.LayerDetailsView","frameLayerTree","TimelinePaintProfilerView","TimelinePaintImageView","LayerViewer.PaintProfilerView.PaintProfilerView","LayerViewer.PaintProfilerView.PaintProfilerCommandLogView","#rasterEventHasTile","Trace.Types.Events.isRasterTask","#rasterTilePromise","rasterEvent","tracingLayerTree","TimelineModel.TracingLayerTree.TracingFrameLayerTree","snapshotPromise","encodedData","log","onCommandLogDone","clipRect","LayerViewer.TransformController.TransformController","clientHeight","paddingFraction","paddingX","paddingY","scaleX","scaleY","scale","matrix","UI.Geometry.boundsForTransformedPoints","maskRectangle","timelinePaintProfilerStyles","SelectorTimingsKey","Trace.Types.Events.SelectorTimingsKey","TimelineSelectorStatsView","#datagrid","#lastStatsSourceEventOrEvents","DataGrid.DataGridController.DataGridController","tableData","columnName","col","rowData","rowValue","defaultLinkValue","linkData","UI.ARIAUtils.alert","selectorStats","selectorMap","sums","previousEvents","findTiming","toSourceFileLocation","styleSheetId","selectorText","selectorLocations","elapsedTimeInMs","nonMatches","rejectPercentage","TimelineDetailsView","#eventToRelatedInsightsMap","#filmStrip","#networkRequestDetails","#layoutShiftDetails","#relatedInsightChips","TimelineComponents.RelatedInsightChips.RelatedInsightChips","Tab","bottomUpView","callTreeView","eventsView","TimelineComponents.NetworkRequestDetails.NetworkRequestDetails","TimelineComponents.LayoutShiftDetails.LayoutShiftDetails","UI.TabbedPane.Events","Trace.Extras.FilmStrip.fromParsedTrace","view","allTabs","tabTitle","isCloseable","forceImmediateUpdate","#getFilmStripFrame","screenshotTime","Trace.Extras.FilmStrip.frameClosestToTimestamp","selectionObject","Trace.Types.Events.isSyntheticLayoutShiftCluster","traceEventDetails","matchedFilmStripFrame","layerTreeForFrame","layersView","paintProfilerView","selectorStatsView","Trace.Types.Events.isUpdateLayoutTree","minBoundsMilli","startOffset","endOffset","isSelectorStatsEnabled","eventsInRange","Trace.Helpers.Trace.findUpdateLayoutTreeEvents","initiatorsDataToDraw","initiatorsData","findInitiatorDataPredecessors","findInitiatorDataDirectSuccessors","initiatorData","getClosestVisibleInitiatorEntriesAncestors","initiatorsDataToDrawForNetwork","eventToInitiator","currentEvent","visited","currentInitiator","nodeForCurrentEvent","initiatorToEvents","eventsInitiatedByCurrent","nextParent","ThreadAppender","#colorGenerator","#entries","#tree","#processId","#threadId","#threadDefaultName","#headerAppended","#showAllEventsEnabled","#headerNestingLevel","processId","threadId","tree","#appendTreeAtLevel","#ensureTrackHeaderAppended","#appendGroupedTrackHeaderAndTitle","headerAppended","trackIsCollapsible","visualLoggingName","#visualLoggingNameForThread","threadType","currentTrackCount","headerStyle","headerGroup","titleStyle","rasterizerTitle","titleGroup","threadTypeLabel","#buildNameForWorker","#buildNameForAuctionWorklet","suffix","workletMetadataEvent","host","shouldAddHost","isUtilityThread","isBidderOrSeller","workerURL","workerName","workerTarget","#appendNodesAtLevel","startingLevel","parentIsIgnoredListed","ModificationsManager.ModificationsManager","maxDepthInTree","nextLevel","entryIsIgnoreListed","Utils.IgnoreList.isIgnoreListedEntry","#appendEntryAtLevel","depthInChildTree","#addDecorationsToEntry","flameChartData","Trace.Handlers.ModelHandlers.Warnings.LONG_MAIN_THREAD_TASK_THRESHOLD","Platform.StringUtilities.hashCode","Components.EntryStyles.getEventStyle","Components.EntryName.nameForEntry","Trace.Types.Events.isParseHTML","eventURL","TimelineFlameChartDataProvider","#font","#eventIndexByEvent","PerfUI.Font.DEFAULT_FONT_SIZE","PerfUI.Font.getFontFamilyForCanvas","ThemeSupport.ThemeChangeEvent","headers","Utils.ImageCache.emitter","groupIndex","possibleActions","traceEntryNodeForAI","Trace.Handlers.ModelHandlers.Frames.TimelineFrame","manager","handled","ExtensionDataGatherer","#instantiateTimelineData","CompatibilityTracksAppender","PerfUI.FlameChart.FlameChartTimelineData","appenders","appender","entryType","#entryTypeForIndex","eventLevel","FlameChartStyle","_index","resetCompatibilityTracksAppender","threadAppender","rebuild","#processGenericTrace","#processInspectorTrace","appendersByProcess","threadAppenders","processGroupStyle","processName","#appendFramesAndScreenshotsTrack","weight","track","allTrackAppenders","filter","Trace.Types.Events.isScreenshot","Trace.Helpers.Timing.eventIsInBounds","startTimeMilli","hasScreenshots","Root.Runtime.Runtime","#appendNewEngineFrame","#appendScreenshots","prevTimestamp","screenshotTimeInMilliSeconds","maxRecordTimeMillis","nameSpanTimelineInfoTime","additionalContent","highlightedEntryInfo","timelineFlamechartPopoverStyles","warningElement","hiddenEntriesAmount","#entryColorForFrame","ctx2","barX","barY","barWidth","barHeight","frameDurationText","textWidth","screenshot","Utils.ImageCache.getOrQueue","imageX","imageY","imageHeight","imageWidth","unclippedBarX","timeToPixelRatio","#drawInteractionEventWithWhiskers","entryTitle","unclippedBarXStartPixel","beginTime","entireBarEndXPixel","timeToPixel","timeMilli","desiredBoxStartX","desiredBoxEndX","drawTick","begin","leftWhiskerX","rightWhiskerX","lineY","leftTick","rightTick","textStartX","UI.UIUtils.measureTextWidth","textPadding","textBaseline","durationMilliseconds","timelineSelection","Selection","groupForLevel","_entryIndex","targetEvent","previousInitiatorsDataLength","hiddenEvents","initiatorIndex","InstantEventVisibleDurationMs","NetworkTrackAppender","#flameChartData","#group","#appendEventsAtLevel","_currentLevel","#appendEventAtLevel","maxLevel","Trace.Types.Events.isWebSocketEvent","webSocketIdentifier","Trace.Types.Events.isSyntheticWebSocketConnection","Components.Utils.colorForNetworkCategory","Components.Utils.NetworkCategory","Components.Utils.colorForNetworkRequest","TimelineFlameChartNetworkDataProvider","#minimumBoundaryInternal","#timeSpan","#maxLevel","#networkTrackAppender","#timelineDataInternal","#lastSelection","#lastInitiatorEntry","#lastInitiatorsData","#setTimingBoundsData","webSocketData","#updateTimelineData","_groupIndex","timelineNetworkRequest","TimelineUtils.NetworkRequest.createTimelineNetworkRequest","entryAnnotations","sendStartTime","headersEndTime","sendStart","headersEnd","finish","_text","#decorateSyntheticWebSocketConnection","#decorateNetworkRequest","textStart","textBaseHeight","UI.UIUtils.trimTextEnd","levelIndex","infoElement","TimelineComponents.NetworkRequestTooltip.NetworkRequestTooltip","newParsedTrace","MAX_HIGHLIGHTED_SEARCH_ELEMENTS","TimelineFlameChartView","#onMainEntriesLinkAnnotationCreated","#onNetworkEntriesLinkAnnotationCreated","#boundRefreshAfterIgnoreList","#traceInsightSets","#selectedGroupName","#gameKeyMatches","#gameTimeout","#overlays","#timeRangeSelectionAnnotation","#linkSelectionAnnotation","#currentInsightOverlays","#tooltipElement","#loggableForGroupByLogContext","#onMainEntryInvoked","#onNetworkEntryInvoked","#currentSelection","flameChartsContainer","mainViewGroupExpansionSetting","PerfUI.FlameChart.FlameChart","#processFlameChartMouseMoveEvent","Overlays.Overlays.Overlays","Overlays.Overlays.AnnotationOverlayActionEvent","OverlayComponents.EntriesLinkOverlay.EntryLinkStartCreating","#onEntryInvoked","#keydownHandler","#pointerDownHandler","#refreshAfterIgnoreList","Overlays.Overlays.entriesForOverlay","#expandEntryTrack","overlaysBounds","Overlays.Overlays.traceWindowContainingOverlays","expandedBounds","Trace.Helpers.Timing.expandWindowByPercentOrToOneMillisecond","earliestEntry","earliest","annotationEntries","firstEntry","Overlays.Overlays.chartForEntry","entryChart","timeInMicroSeconds","#clearLinkSelectionAnnotation","deleteCurrentLink","#setLinkSelectionAnnotation","linkSelectionAnnotation","#createNewTimeRangeFromKeyboard","#handleTimeRangeKeyboardCreation","timeRangeIncrementValue","keyCombo","shouldAnimate","Common.Debouncer.debounce","windowStartTime","windowEndTime","animate","Trace.Helpers.Timing.traceWindowFromMilliSeconds","flameChart","#updateDetailViews","Common.EventTarget.removeEventListeners","#updateFlameCharts","#registerLoggableGroups","groups","loggable","VisualLogging.registerLoggable","dataProvider","toSelectionObject","#selectionIfTraceEvent","commonEvent","Trace.Extras.FetchNodes.nodeIdsForEvent","nodeId","SDK.DOMModel.DeferredDOMNode","timelineFlameChartViewStyles","showMemoryGraph","mainIndex","networkIndex","entryFromIndex","linkCreateButton","fromSelectionObject","#updateSelectedEntryStatus","entryLevel","VisualLogging.logClick","toIndex","PerfUI.FlameChart.RulerHeight","#selectSearchResult","searchResultIndex","matchedResult","shouldJump","jumpBackwards","oldSelectedSearchResult","regExpFilter","mainMatches","networkMatches","m1","m2","selectedIndex","#indexOfSearchResult","TimelineFlameChartMarker","pixelsPerMillisecond","nextGroup","groupEndLevel","TimelineEventOverview","PerfUI.TimelineOverviewPane.TimelineOverviewBase","position","HIGH_NETWORK_PRIORITIES","TimelineEventOverviewNetwork","#renderWithParsedTrace","traceBoundsMilli","pathHeight","canvasWidth","highPath","lowPath","rectStart","rectEnd","categoryToIndex","TimelineEventOverviewCPUActivity","#drawn","#start","#end","#entryCategory","Components.EntryStyles.EventCategory","#draw","quantSizePx","baseLine","quantTime","categoryOrder","Components.EntryStyles.getTimelineMainEventCategories","otherIndex","idleIndex","drawThreadEntries","threadData","quantizer","Quantizer","drawSample","categoryIndexStack","paths","lastY","onEntryStart","categoryIndex","onEntryEnd","endTimeMilli","lastCategoryIndex","startMicro","endMicro","minDuration","Trace.Helpers.TreeHelpers.walkEntireTree","computedColorValue","backgroundContext","threads","Trace.Handlers.Threads.threadsInTrace","mainThreadContext","thread","isMainThread","applyPattern","TimelineEventOverviewResponsiveness","#gatherEventsWithRelevantWarnings","topLevelRendererIds","warningsForResponsiveness","allWarningEvents","eventsForWarning","visibleTimeWindow","timeSpan","fillPath","markersPath","eventsWithWarning","paintWarningDecoration","TimelineFilmStripOverview","customStartTime","customEndTime","frames","drawGeneration","popoverScale","imagePromise","padding","timeMicroSeconds","drawFrameImage","timeMilliSeconds","TimelineEventOverviewMemory","ratio","counterEventsPerTrack","eventsPerRenderer","lowerOffset","maxUsedHeapSize","minUsedHeapSize","boundsMs","calculateMinMaxSizes","lineWidth","buildHistogram","heightBeyondView","isFirstPoint","lastX","nextY","quantDuration","callback","LANDING_PAGE_INDEX_DROPDOWN_CHOICE","TimelineHistoryManager","#minimapComponent","minimapComponent","ToolbarButton","UI.ARIAUtils.markAsMenuButton","control","cpuOverviewFromMinimap","acc","#updateLandingPageTitleIfActive","newInput","#buildAndStorePreviewData","maxRecordings","modelUsedMoreTimeAgo","lastUsedTime","#minimumRequiredRecordings","#getActiveTraceIndexForListControl","activeTraceIndex","DropDown","recording","#setActiveTrace","direction","newIndex","parsedTraceIndex","startedAt","minutes","hours","sequenceNumber","titleWithSequenceNumber","timeElement","preview","VisualLogging.dropDown","parsedTraceIndexToPerformancePreviewData","#buildTextDetails","screenshotAndOverview","#buildScreenshotThumbnail","#buildOverview","nameSpan","timeContainer","thumbnailAspectRatio","lastFrame","dPR","previewWidth","yOffset","overview","timelineOverviewComponent","availableparsedTraceIndexes","UI.GlassPane.GlassPane","contentElement","timelineHistoryManagerStyles","listModel","UI.ListModel.ListModel","UI.ListControl.ListControl","UI.ListControl.ListMode","UI.ARIAUtils.markAsMenu","UI.UIUtils.ElementFocusRestorer","activeparsedTraceIndex","anchor","availableDropdownChoices","fulfill","listItem","#createLandingPageListItem","UI.ARIAUtils.markAsMenuItem","IconButton.Icon.create","_parsedTraceIndex","_from","_to","fromElement","toElement","_fromElement","_toElement","TimelineLandingPage","toggleRecordAction","isNode","LegacyWrapper.LegacyWrapper.legacyWrapper","Components.LiveMetricsView.LiveMetricsView","encloseWithTag","tagName","learnMoreNode","recordKey","reloadKey","navigateNode","centered","recordButton","UI.UIUtils.createInlineButton","reloadButton","TimelineLoader","#traceIsCPUProfile","#metadata","#traceFinalizedCallbackForTest","#traceFinalizedPromiseForTest","file","loader","fileReader","Bindings.FileUtils.ChunkedFileReader","Trace.Types.Events.ThreadID","stream","Common.StringOutputStream.StringOutputStream","allowRemoteFilePaths","Host.ResourceLoader.loadAsStream","finishedCallback","success","_headers","errorDescription","txt","trace","#processParsedFile","items","#collectEvents","#parseCPUProfileFormatFromFile","eventsPerChunk","chunk","r","endOfFile","TimelineMiniMap","#overviewComponent","PerfUI.TimelineOverviewPane.TimelineOverviewPane","#controls","#breadcrumbsUI","TimelineComponents.BreadcrumbsUI.BreadcrumbsUI","IconButton.Icon.Icon","#onOverviewPanelWindowChanged","TimelineComponents.BreadcrumbsUI.BreadcrumbActivatedEvent","left","right","Trace.Helpers.Timing.windowFitsInsideBounds","#updateMiniMapBoundsToFitNewWindow","currentBreadcrumb","lastBreadcrumbThatFits","breadcrumbTimes","newVisibleTraceWindow","addedBreadcrumb","miniMapStyles","#setMarkers","markers","Meta","PageLoadMetrics","navStartEvents","minTimeInMilliseconds","#setNavigationStartEvents","#setInitialBreadcrumb","UIDevtoolsUtils","RecordType","drawing","rasterizing","layout","painting","other","Components.EntryStyles.TimelineRecordStyle","Components.EntryStyles.TimelineCategory","UIDevtoolsController","Components.EntryStyles.setEventStylesMap","Components.EntryStyles.setCategories","Components.EntryStyles.setTimelineMainEventCategories","Components.EntryStyles.stringIsEventCategory","timelinePanelInstance","UI.Panel.Panel","#historyManager","#thirdPartyTracksSetting","#viewMode","#exclusiveFilterPerTrace","#splitWidget","TimelineComponents.Sidebar.DEFAULT_SIDEBAR_WIDTH_PX","_target","res","#traceEngineModel","#sourceMapsResolver","#onSourceMapsNodeNamesResolvedBound","#onSourceMapsNodeNamesResolved","#onChartPlayableStateChangeBound","#sidebarToggleButton","#sideBar","TimelineComponents.Sidebar.SidebarWidget","#restoreSidebarVisibilityOnTraceLoad","#pendingAriaMessage","#eventToRelatedInsights","adornerContent","adorner","#onBrickBreakerEasterEggClick","#instantiateNewModel","#listenForProcessingProgress","UI.DropTarget.DropTarget","UI.DropTarget.Type","#extensionDataVisibilityChanged","timelineToolbarContainer","topPaneElement","SDK.ResourceTreeModel.ResourceTreeModel","SDK.ResourceTreeModel.Events","#onChartPlayableStateChange","UI.SearchableView.SearchableView","TimelineInsights.SidebarInsight.InsightDeactivated","#setActiveInsight","TimelineInsights.SidebarInsight.InsightActivated","TimelineInsights.SidebarInsight.InsightProvideOverlays","TimelineInsights.SidebarInsight.InsightProvideRelatedEvents","relatedInsight","TimelineInsights.EventRef.EventReferenceClick","fromTraceEvent","TimelineComponents.Sidebar.RemoveAnnotation","TimelineComponents.Sidebar.RevealAnnotation","TimelineInsights.SidebarInsight.InsightSetHovered","TimelineInsights.SidebarInsight.InsightSetZoom","#showLandingPage","profilerModels","_model","_","#panelSidebarEnabled","isNodeMode","config","Trace.Types.Configuration.defaults","Trace.TraceModel.Model","timelinePanelStyles","Host.userMetrics","#viewModesEquivalent","#uninstallSourceMapsResolver","Utils.SourceMapsResolver.SourceMappingsUpdated","#removeStatusPane","#changeView","newMode","#saveModificationsForActiveTrace","#hideLandingPage","#setModelForActiveTrace","#showSidebarIfRequired","#hideSidebar","#activeTraceIndex","dateObj","month","day","setting","tooltip","checkboxItem","#addSidebarIconToToolbar","#removeSidebarIconFromToolbar","Host.UserMetrics.Action","UI.Toolbar.ToolbarMenuButton","historyToolbarButtonStyles","isolateSelector","UI.Toolbar.ToolbarSettingToggle","captureToolbar","throttlingPane","cpuThrottlingToolbar","networkThrottlingToolbar","thirdPartyToolbar","thirdPartyCheckbox","toolbarItem","UI.UIUtils.createFileSelectorElement","isEnhancedTraces","addModifications","SDK.EnhancedTracesParser.EnhancedTracesParser","traceStart","Platform.DateUtilities.toISO8601Compact","fileName","traceAsString","profileEvent","profileEventData","formattedTraceIter","Workspace.FileManager.FileManager","error","recordingData","newModifications","messages","tooltipElement","#evaluateInspectedURL","inspectedURL","resourceTreeModel","navHistory","currentIndex","#navigateToAboutBlank","reject","resourceModel","waitForAboutBlank","#startCPUProfilingRecording","firstNodeTarget","SDK.Target.Type","#startTraceRecording","urlToTrace","recordingOptions","recordingConfig","StatusPane","UI.InspectorView.InspectorView","#hasActiveTrace","#applyActiveFilters","traceIsGeneric","exclusiveFilter","newActiveFilters","#ariaDebouncer","#makeAriaAnnouncement","PerfUI.LineLevelProfile.Performance","currentManager","announcementText","AnnotationHelpers.ariaAnnouncementForModifiedEvent","AnnotationHelpers.isEntryLabel","topMostMainThreadAppender","zoomedInBounds","Trace.Extras.MainThreadActivity.calculateWindow","currModificationManager","cpuProfiles","_processId","profileData","needToRestore","userHasSeenSidebar","Trace.TraceModel.ModelUpdateEvent","updateEvent","traceParseMaxProgress","collectedEvents","recordingStartTime","recordingIsFresh","Trace.Extras.Metadata.forNewRecording","#executeNewTrace","measure","controller","endTimeMicro","Trace.Handlers.ModelHandlers.Frames\n                .framesWithinWindow","currentFrame","#revealTimeRange","#announceSelectionToAria","oldSelection","newSelection","Trace.Helpers.Trace.isTopLevelEvent","traceWindow","dataTransfer","rowHeight","headerHeight","#rawEvents","buttonCallback","VisualLogging.dialog","statusLine","UI.ARIAUtils.markAsStatus","timeLine","progressLine","UI.ARIAUtils.markAsProgressBar","descriptionLine","buttonContainer","UI.UIUtils.createTextButton","#downloadRawTraceAfterError","buttonText","activity","UI.ARIAUtils.setValueNow","elapsed","isSmallDialog","timelineStatusDialogStyles","loadTimelineHandlerInstance","LoadTimelineHandler","UI.ViewManager.ViewManager","TraceRevealer","ActionDelegate","actionId","panel","extensionDataGathererInstance","#extensionDataByModel","maybeCachedData","ExtensionTrackAppender","#extensionTopLevelTrack","extensionTracks","prev","#appendTopLevelHeaderAtLevel","#appendExtensionTrackData","headerTitle","#appendSecondLevelHeader","currentStartLevel","trackName","defaultColor","GPUTrackAppender","gpuEvents","Trace.Types.Events.isGPUTask","InteractionsTrackAppender","#appendInteractionsAtLevel","interactionEventsWithNoNesting","interactionsOverThreshold","addCandyStripeToLongInteraction","#addCandyStripeAndWarningForLongInteraction","Trace.Handlers.ModelHandlers.UserInteractions.LONG_INTERACTION_THRESHOLD","idForColorGeneration","breakdown","Components.InteractionBreakdown.InteractionBreakdown","LAYOUT_SHIFT_SYNTHETIC_DURATION","LayoutShiftsTrackAppender","#appendLayoutShiftsAtLevel","allLayoutShifts","allClusters","renderingColor","Trace.Types.Events.isLayoutShift","additionalElement","maxSize","UI.Geometry.Size","vizElem","_width","levelHeight","timeToPosition","fakeDurMs","bufferScale","maxBuffer","buffer","boxSize","halfSize","screenshotsToLoad","shots","screenshots","Utils.ImageCache.preload","viewportRect","dpr","vizContainer","beforeImg","afterImg","toCssPixelRect","screenshotImageScaleFactor","maxSizeScaleFactor","beforeRects","afterRects","startVizAnimation","easing","vizAnimOpts","getRectPosition","beforeRect","afterRect","rectEl","beforePos","afterPos","ServerTimingsTrackAppender","lastLevel","serverTimingsByOrigin","serverTiming","origin","serverTimings","#appendServerTimings","SORT_ORDER_PAGE_LOAD_MARKERS","TimingsTrackAppender","#cachedMarkersByTimestamp","extensionMarkers","pageloadMarkers","extensionMarkersAreEmpty","performanceMarks","Trace.Handlers.ModelHandlers.ExtensionTraceData.extensionDataInTiming","performanceMeasures","timestampEvents","consoleTimings","newLevel","#appendMarkersAtLevel","#sortMarkersForPreferredVisualOrder","m1Index","m2Index","#groupMarkersByTimestamp","markersByTimestamp","marker","forTime","markersAtTime","minTimeMs","flameChartMarkers","startTimeMs","markerEvent","Trace.Types.Events.isNavigationStart","Trace.Types.Events.eventIsPageLoadEvent","timeOfEvent","Trace.Types.Events.isSchedulePostMessage","Trace.Types.Events.isHandlePostMessage","eventStyle","eventIsTiming","Trace.Types.Events.isConsoleTime","Trace.Types.Events.isPerformanceMeasure","TrackNames","#trackForLevel","#trackForGroup","#eventsForTrack","#trackEventsForTreeview","#entryData","#allTrackAppenders","#visibleTrackNames","#legacyEntryTypeByLevel","#timingsTrackAppender","#animationsTrackAppender","#interactionsTrackAppender","#gpuTrackAppender","#layoutShiftsTrackAppender","#threadAppenders","#serverTimingsTrackAppender","entryData","legacyEntryTypeByLevel","#addThreadAppenders","#addExtensionAppenders","tracks","trackData","threadTrackOrder","processedAuctionWorkletsIds","showAllEvents","maybeWorklet","trackAppender","cachedData","trackEndLevel","entryLevels","trackEvents","Trace.Helpers.TreeHelpers.canBuildTreesFromEvents","targetAppender","foundGroup","appenderForLevel","eventAppendedCallback","visibleTracks","formattedTime","customTitle","customFormattedTime","extraWarningElements"],"mappings":"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"}