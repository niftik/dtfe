{"version":3,"file":"ShortcutDialog-D3xyB3nU.js","sources":["../../ui/components/dialogs/dialog.css.js","../../ui/components/dialogs/Dialog.js","../../ui/components/dialogs/iconDialog.css.js","../../ui/components/dialogs/IconDialog.js","../../ui/components/dialogs/shortcutDialog.css.js","../../ui/components/dialogs/ShortcutDialog.js"],"sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  --override-transparent: rgb(0 0 0 / 0%);\n\n  display: var(--dialog-display);\n}\n\ndialog::backdrop {\n  background: var(--override-transparent);\n}\n\ndialog {\n  background: transparent;\n  border: none;\n  border-radius: 4px;\n  top: var(--dialog-top);\n  padding: var(--dialog-padding);\n  left: var(--dialog-left);\n  right: var(--dialog-right);\n  margin: var(--dialog-margin);\n  margin-left: var(--dialog-margin-left, 0);\n  margin-bottom: var(--dialog-margin-bottom);\n  animation-name: slideIn;\n  animation-duration: 100ms;\n  animation-timing-function: cubic-bezier(0, 0, 0.3, 1);\n  overflow: hidden;\n}\n\ndialog:focus,\ndialog:focus-visible {\n  outline: none;\n}\n\n#content {\n  min-width: var(--content-min-width);\n  background: var(--color-background-elevation-dark-only);\n  border-radius: 4px;\n  padding-top: var(--content-padding-top);\n  padding-bottom: var(--content-padding-bottom);\n  box-shadow: var(--override-content-box-shadow);\n  max-height: var(--dialog-max-height);\n  max-width: var(--dialog-max-width);\n  overflow: auto;\n  outline: none;\n  clip-path: polygon(var(--content-clip-path));\n}\n\n#content-wrap {\n  filter: drop-shadow(0 1px 2px rgb(60 64 67 / 30%)) drop-shadow(0 2px 0 rgb(60 64 67 / 15%));\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateY(var(--dialog-offset-y));\n    opacity: 0%;\n  }\n\n  to {\n    opacity: 100%;\n  }\n}\n\n/*# sourceURL=dialog.css */\n`);\n\nexport default styles;\n","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as WindowBoundsService from '../../../services/window_bounds/window_bounds.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport dialogStyles from './dialog.css.js';\nconst { html } = LitHtml;\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\nconst IS_DIALOG_SUPPORTED = 'HTMLDialogElement' in globalThis;\n// Height in pixels of the dialog's connector. The connector is represented as\n// as a diamond and the height corresponds to half the height of the diamond.\n// (the visible height is only half of the diamond).\nexport const CONNECTOR_HEIGHT = 10;\nconst CONNECTOR_WIDTH = 2 * CONNECTOR_HEIGHT;\n// The offset used by the dialog's animation as it slides in when opened.\nconst DIALOG_ANIMATION_OFFSET = 20;\nexport const DIALOG_SIDE_PADDING = 5;\nexport const DIALOG_VERTICAL_PADDING = 3;\n// If the content of the dialog cannot be completely shown because otherwise\n// the dialog would overflow the window, the dialog's max width and height are\n// set such that the dialog remains inside the visible bounds. In this cases\n// some extra, determined by this constant, is added so that the dialog's borders\n// remain clearly visible. This constant accounts for the padding of the dialog's\n// content (20 px) and a 5px gap left on each extreme of the dialog from the viewport.\nexport const DIALOG_PADDING_FROM_WINDOW = 3 * CONNECTOR_HEIGHT;\nexport const MODAL = 'MODAL';\nexport class Dialog extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #renderBound = this.#render.bind(this);\n    #forceDialogCloseInDevToolsBound = this.#forceDialogCloseInDevToolsMutation.bind(this);\n    #handleScrollAttemptBound = this.#handleScrollAttempt.bind(this);\n    #props = {\n        origin: MODAL,\n        position: \"bottom\" /* DialogVerticalPosition.BOTTOM */,\n        horizontalAlignment: \"center\" /* DialogHorizontalAlignment.CENTER */,\n        showConnector: false,\n        getConnectorCustomXPosition: null,\n        dialogShownCallback: null,\n        windowBoundsService: WindowBoundsService.WindowBoundsService.WindowBoundsServiceImpl.instance(),\n        closeOnESC: true,\n        closeOnScroll: true,\n        jslogContext: '',\n    };\n    #dialog = null;\n    #isPendingShowDialog = false;\n    #isPendingCloseDialog = false;\n    #hitArea = new DOMRect(0, 0, 0, 0);\n    #dialogClientRect = new DOMRect(0, 0, 0, 0);\n    #bestVerticalPositionInternal = null;\n    #bestHorizontalAlignment = null;\n    #devtoolsMutationObserver = new MutationObserver(this.#forceDialogCloseInDevToolsBound);\n    #dialogResizeObserver = new ResizeObserver(this.#updateDialogBounds.bind(this));\n    #devToolsBoundingElement = this.windowBoundsService.getDevToolsBoundingElement();\n    // We bind here because we have to listen to keydowns on the entire window,\n    // not on the Dialog element itself. This is because if the user has the\n    // dialog open, but their focus is elsewhere, and they hit ESC, we should\n    // still close the dialog.\n    #onKeyDownBound = this.#onKeyDown.bind(this);\n    get showConnector() {\n        return this.#props.showConnector;\n    }\n    set showConnector(showConnector) {\n        this.#props.showConnector = showConnector;\n        this.#onStateChange();\n    }\n    get origin() {\n        return this.#props.origin;\n    }\n    set origin(origin) {\n        this.#props.origin = origin;\n        this.#onStateChange();\n    }\n    get position() {\n        return this.#props.position;\n    }\n    set position(position) {\n        this.#props.position = position;\n        this.#onStateChange();\n    }\n    get horizontalAlignment() {\n        return this.#props.horizontalAlignment;\n    }\n    set horizontalAlignment(alignment) {\n        this.#props.horizontalAlignment = alignment;\n        this.#onStateChange();\n    }\n    get windowBoundsService() {\n        return this.#props.windowBoundsService;\n    }\n    set windowBoundsService(windowBoundsService) {\n        this.#props.windowBoundsService = windowBoundsService;\n        this.#devToolsBoundingElement = this.windowBoundsService.getDevToolsBoundingElement();\n        this.#onStateChange();\n    }\n    get bestVerticalPosition() {\n        return this.#bestVerticalPositionInternal;\n    }\n    get bestHorizontalAlignment() {\n        return this.#bestHorizontalAlignment;\n    }\n    get getConnectorCustomXPosition() {\n        return this.#props.getConnectorCustomXPosition;\n    }\n    set getConnectorCustomXPosition(connectorXPosition) {\n        this.#props.getConnectorCustomXPosition = connectorXPosition;\n        this.#onStateChange();\n    }\n    get dialogShownCallback() {\n        return this.#props.dialogShownCallback;\n    }\n    get jslogContext() {\n        return this.#props.jslogContext;\n    }\n    set dialogShownCallback(dialogShownCallback) {\n        this.#props.dialogShownCallback = dialogShownCallback;\n        this.#onStateChange();\n    }\n    set closeOnESC(closeOnESC) {\n        this.#props.closeOnESC = closeOnESC;\n        this.#onStateChange();\n    }\n    set closeOnScroll(closeOnScroll) {\n        this.#props.closeOnScroll = closeOnScroll;\n        this.#onStateChange();\n    }\n    set jslogContext(jslogContext) {\n        this.#props.jslogContext = jslogContext;\n        this.#onStateChange();\n    }\n    #updateDialogBounds() {\n        this.#dialogClientRect = this.#getDialog().getBoundingClientRect();\n    }\n    #onStateChange() {\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [dialogStyles];\n        window.addEventListener('resize', this.#forceDialogCloseInDevToolsBound);\n        this.#devtoolsMutationObserver.observe(this.#devToolsBoundingElement, { childList: true, subtree: true });\n        this.#devToolsBoundingElement.addEventListener('wheel', this.#handleScrollAttemptBound);\n        this.style.setProperty('--dialog-padding', '0');\n        this.style.setProperty('--override-content-box-shadow', 'none');\n        this.style.setProperty('--dialog-display', IS_DIALOG_SUPPORTED ? 'block' : 'none');\n        this.style.setProperty('--override-dialog-content-border', `${CONNECTOR_HEIGHT}px solid transparent`);\n        this.style.setProperty('--dialog-padding', `${DIALOG_VERTICAL_PADDING}px ${DIALOG_SIDE_PADDING}px`);\n    }\n    disconnectedCallback() {\n        window.removeEventListener('resize', this.#forceDialogCloseInDevToolsBound);\n        this.#devToolsBoundingElement.removeEventListener('wheel', this.#handleScrollAttemptBound);\n        this.#devtoolsMutationObserver.disconnect();\n        this.#dialogResizeObserver.disconnect();\n    }\n    #getDialog() {\n        if (!this.#dialog) {\n            this.#dialog = this.#shadow.querySelector('dialog');\n            if (!this.#dialog) {\n                throw new Error('Dialog not found');\n            }\n            this.#dialogResizeObserver.observe(this.#dialog);\n        }\n        return this.#dialog;\n    }\n    getHitArea() {\n        return this.#hitArea;\n    }\n    async setDialogVisible(show) {\n        if (show) {\n            await this.#showDialog();\n            return;\n        }\n        this.#closeDialog();\n    }\n    async #handlePointerEvent(evt) {\n        evt.stopPropagation();\n        // If the user uses the keyboard to interact with an element within the\n        // dialog, it will trigger a pointer event (for example, the user might use\n        // their spacebar to \"click\" on a form input element). In that case the\n        // pointerType will be an empty string, rather than `mouse`, `pen` or\n        // `touch`. In this instance, we early return, because we only need to\n        // worry about clicks outside of the dialog. Once the dialog is open, the\n        // user can only use the keyboard to navigate within the dialog; so we\n        // don't have to concern ourselves with keyboard events that occur outside\n        // the dialog's bounds.\n        if (evt instanceof PointerEvent && evt.pointerType === '') {\n            return;\n        }\n        const eventWasInDialogContent = this.#mouseEventWasInDialogContent(evt);\n        const eventWasInHitArea = this.#mouseEventWasInHitArea(evt);\n        if (eventWasInDialogContent) {\n            return;\n        }\n        if (evt.type === 'pointermove') {\n            if (eventWasInHitArea) {\n                return;\n            }\n            this.dispatchEvent(new PointerLeftDialogEvent());\n            return;\n        }\n        this.dispatchEvent(new ClickOutsideDialogEvent());\n    }\n    #mouseEventWasInDialogContent(evt) {\n        const dialogBounds = this.#dialogClientRect;\n        let animationOffSetValue = this.bestVerticalPosition === \"bottom\" /* DialogVerticalPosition.BOTTOM */ ?\n            DIALOG_ANIMATION_OFFSET :\n            -1 * DIALOG_ANIMATION_OFFSET;\n        if (this.#props.origin === MODAL) {\n            // When shown as a modal, the dialog is not animated\n            animationOffSetValue = 0;\n        }\n        const eventWasDialogContentX = evt.pageX >= dialogBounds.left && evt.pageX <= dialogBounds.left + dialogBounds.width;\n        const eventWasDialogContentY = evt.pageY >= dialogBounds.top + animationOffSetValue &&\n            evt.pageY <= dialogBounds.top + dialogBounds.height + animationOffSetValue;\n        return eventWasDialogContentX && eventWasDialogContentY;\n    }\n    #mouseEventWasInHitArea(evt) {\n        const hitAreaBounds = this.#hitArea;\n        const eventWasInHitAreaX = evt.pageX >= hitAreaBounds.left && evt.pageX <= hitAreaBounds.left + hitAreaBounds.width;\n        const eventWasInHitAreaY = evt.pageY >= hitAreaBounds.top && evt.pageY <= hitAreaBounds.top + hitAreaBounds.height;\n        return eventWasInHitAreaX && eventWasInHitAreaY;\n    }\n    #getCoordinatesFromDialogOrigin(origin) {\n        if (!origin || origin === MODAL) {\n            throw new Error('Dialog origin is null');\n        }\n        const anchor = origin instanceof Function ? origin() : origin;\n        if (anchor instanceof DOMPoint) {\n            return { top: anchor.y, bottom: anchor.y, left: anchor.x, right: anchor.x };\n        }\n        if (anchor instanceof HTMLElement) {\n            return anchor.getBoundingClientRect();\n        }\n        return anchor;\n    }\n    #getBestHorizontalAlignment(anchorBounds, devtoolsBounds) {\n        if (devtoolsBounds.right - anchorBounds.left > anchorBounds.right - devtoolsBounds.left) {\n            return \"left\" /* DialogHorizontalAlignment.LEFT */;\n        }\n        return \"right\" /* DialogHorizontalAlignment.RIGHT */;\n    }\n    #getBestVerticalPosition(originBounds, dialogHeight, devtoolsBounds) {\n        // If the dialog's full height doesn't fit at the bottom attempt to\n        // position it at the top. If it doesn't fit at the top either\n        // position it at the bottom and make the overflow scrollable.\n        if (originBounds.bottom + dialogHeight > devtoolsBounds.height &&\n            originBounds.top - dialogHeight > devtoolsBounds.top) {\n            return \"top\" /* DialogVerticalPosition.TOP */;\n        }\n        return \"bottom\" /* DialogVerticalPosition.BOTTOM */;\n    }\n    #positionDialog() {\n        if (!this.#props.origin) {\n            return;\n        }\n        this.#isPendingShowDialog = true;\n        void coordinator.read(() => {\n            // Fixed elements are positioned relative to the window, regardless if\n            // DevTools is docked. As such, if DevTools is docked we must account for\n            // its offset relative to the window when positioning fixed elements.\n            // DevTools' effective offset can be determined using\n            // this.#devToolsBoundingElement.\n            const devtoolsBounds = this.#devToolsBoundingElement.getBoundingClientRect();\n            const devToolsWidth = devtoolsBounds.width;\n            const devToolsHeight = devtoolsBounds.height;\n            const devToolsLeft = devtoolsBounds.left;\n            const devToolsTop = devtoolsBounds.top;\n            const devToolsRight = devtoolsBounds.right;\n            if (this.#props.origin === MODAL) {\n                void coordinator.write(() => {\n                    this.style.setProperty('--dialog-top', `${devToolsTop}px`);\n                    this.style.setProperty('--dialog-left', `${devToolsLeft}px`);\n                    this.style.setProperty('--dialog-margin', 'auto');\n                    this.style.setProperty('--dialog-margin-left', 'auto');\n                    this.style.setProperty('--dialog-margin-bottom', 'auto');\n                    this.style.setProperty('--dialog-max-height', `${devToolsHeight - DIALOG_PADDING_FROM_WINDOW}px`);\n                    this.style.setProperty('--dialog-max-width', `${devToolsWidth - DIALOG_PADDING_FROM_WINDOW}px`);\n                    this.style.setProperty('--dialog-right', `${document.body.clientWidth - devToolsRight}px`);\n                });\n                return;\n            }\n            const anchor = this.#props.origin;\n            const absoluteAnchorBounds = this.#getCoordinatesFromDialogOrigin(anchor);\n            const { top: anchorTop, right: anchorRight, bottom: anchorBottom, left: anchorLeft } = absoluteAnchorBounds;\n            const originCenterX = (anchorLeft + anchorRight) / 2;\n            const hitAreaWidth = anchorRight - anchorLeft + CONNECTOR_HEIGHT;\n            const windowWidth = document.body.clientWidth;\n            const connectorFixedXValue = this.#props.getConnectorCustomXPosition ? this.#props.getConnectorCustomXPosition() : originCenterX;\n            void coordinator.write(() => {\n                this.style.setProperty('--dialog-top', '0');\n                // Start by showing the dialog hidden to allow measuring its width.\n                const dialog = this.#getDialog();\n                dialog.style.visibility = 'hidden';\n                if (this.#isPendingShowDialog && !dialog.hasAttribute('open')) {\n                    dialog.showModal();\n                    this.setAttribute('open', '');\n                    this.#isPendingShowDialog = false;\n                }\n                const { width: dialogWidth, height: dialogHeight } = dialog.getBoundingClientRect();\n                this.#bestHorizontalAlignment = this.#props.horizontalAlignment === \"auto\" /* DialogHorizontalAlignment.AUTO */ ?\n                    this.#getBestHorizontalAlignment(absoluteAnchorBounds, devtoolsBounds) :\n                    this.#props.horizontalAlignment;\n                this.#bestVerticalPositionInternal = this.#props.position === \"auto\" /* DialogVerticalPosition.AUTO */ ?\n                    this.#getBestVerticalPosition(absoluteAnchorBounds, dialogHeight, devtoolsBounds) :\n                    this.#props.position;\n                if (this.#bestHorizontalAlignment === \"auto\" /* DialogHorizontalAlignment.AUTO */ ||\n                    this.#bestVerticalPositionInternal === \"auto\" /* DialogVerticalPosition.AUTO */) {\n                    return;\n                }\n                this.#hitArea.height = anchorBottom - anchorTop + (CONNECTOR_HEIGHT * (this.showConnector ? 2 : 1));\n                this.#hitArea.width = hitAreaWidth;\n                let connectorRelativeXValue = 0;\n                // If the connector is to be shown, the dialog needs a minimum width such that it covers\n                // the connector's width.\n                this.style.setProperty('--content-min-width', `${connectorFixedXValue - anchorLeft + CONNECTOR_WIDTH + DIALOG_SIDE_PADDING * 2}px`);\n                this.style.setProperty('--dialog-left', 'auto');\n                this.style.setProperty('--dialog-right', 'auto');\n                this.style.setProperty('--dialog-margin', '0');\n                const offsetToCoverConnector = this.showConnector ? CONNECTOR_WIDTH * 3 / 4 : 0;\n                switch (this.#bestHorizontalAlignment) {\n                    case \"left\" /* DialogHorizontalAlignment.LEFT */: {\n                        // Position the dialog such that its left border is in line with that of its anchor.\n                        // If this means the dialog's left border is out of DevTools bounds, move it to the right.\n                        // Cap its width as needed so that the right border doesn't overflow.\n                        const dialogLeft = Math.max(anchorLeft - offsetToCoverConnector, devToolsLeft);\n                        const devtoolsRightBorderToDialogLeft = devToolsRight - dialogLeft;\n                        const dialogMaxWidth = devtoolsRightBorderToDialogLeft - DIALOG_PADDING_FROM_WINDOW;\n                        connectorRelativeXValue = connectorFixedXValue - dialogLeft - DIALOG_SIDE_PADDING;\n                        this.style.setProperty('--dialog-left', `${dialogLeft}px`);\n                        this.#hitArea.x = anchorLeft;\n                        this.style.setProperty('--dialog-max-width', `${dialogMaxWidth}px`);\n                        break;\n                    }\n                    case \"right\" /* DialogHorizontalAlignment.RIGHT */: {\n                        // Position the dialog such that its right border is in line with that of its anchor.\n                        // If this means the dialog's right border is out of DevTools bounds, move it to the left.\n                        // Cap its width as needed so that the left border doesn't overflow.\n                        const windowRightBorderToAnchorRight = windowWidth - anchorRight;\n                        const windowRightBorderToDevToolsRight = windowWidth - devToolsRight;\n                        const windowRightBorderToDialogRight = Math.max(windowRightBorderToAnchorRight - offsetToCoverConnector, windowRightBorderToDevToolsRight);\n                        const dialogRight = windowWidth - windowRightBorderToDialogRight;\n                        const devtoolsLeftBorderToDialogRight = dialogRight - devToolsLeft;\n                        const dialogMaxWidth = devtoolsLeftBorderToDialogRight - DIALOG_PADDING_FROM_WINDOW;\n                        const dialogCappedWidth = Math.min(dialogMaxWidth, dialogWidth);\n                        const dialogLeft = dialogRight - dialogCappedWidth;\n                        connectorRelativeXValue = connectorFixedXValue - dialogLeft;\n                        this.#hitArea.x = windowWidth - windowRightBorderToDialogRight - hitAreaWidth;\n                        this.style.setProperty('--dialog-right', `${windowRightBorderToDialogRight}px`);\n                        this.style.setProperty('--dialog-max-width', `${dialogMaxWidth}px`);\n                        break;\n                    }\n                    case \"center\" /* DialogHorizontalAlignment.CENTER */: {\n                        // Position the dialog aligned with its anchor's center as long as its borders don't overlap\n                        // with those of DevTools. In case one border overlaps, move the dialog to the opposite side.\n                        // In case both borders overlap, reduce its width to that of DevTools.\n                        const dialogCappedWidth = Math.min(devToolsWidth - DIALOG_PADDING_FROM_WINDOW, dialogWidth);\n                        let dialogLeft = Math.max(originCenterX - dialogCappedWidth * 0.5, devToolsLeft);\n                        dialogLeft = Math.min(dialogLeft, devToolsRight - dialogCappedWidth);\n                        connectorRelativeXValue = connectorFixedXValue - dialogLeft - DIALOG_SIDE_PADDING;\n                        this.style.setProperty('--dialog-left', `${dialogLeft}px`);\n                        this.#hitArea.x = originCenterX - hitAreaWidth * 0.5;\n                        this.style.setProperty('--dialog-max-width', `${devToolsWidth - DIALOG_PADDING_FROM_WINDOW}px`);\n                        break;\n                    }\n                    default:\n                        Platform.assertNever(this.#bestHorizontalAlignment, `Unknown alignment type: ${this.#bestHorizontalAlignment}`);\n                }\n                const visibleConnectorHeight = this.showConnector ? CONNECTOR_HEIGHT : 0;\n                const clipPathConnectorStartX = connectorRelativeXValue - CONNECTOR_WIDTH / 2;\n                const clipPathConnectorEndX = connectorRelativeXValue + CONNECTOR_WIDTH / 2;\n                let [p1, p2, p3, p4, p5, p6, p7, p8, p9] = ['', '', '', '', '', '', '', '', '', ''];\n                const PSEUDO_BORDER_RADIUS = 2;\n                switch (this.#bestVerticalPositionInternal) {\n                    case \"top\" /* DialogVerticalPosition.TOP */: {\n                        //  p1                              p2\n                        //   *-----------------------------*\n                        //   |                             |\n                        //   |                             |\n                        // p9|                             |\n                        //    \\__________________p7  p5____/ p3 <-- A pseudo curve is added to the clip path to\n                        //  p8                     \\/      p4        imitate a curved boder.\n                        //                         p6\n                        //   |-connectorRelativeX--|\n                        const clipPathBottom = `calc(100% - ${CONNECTOR_HEIGHT}px)`;\n                        if (this.#props.showConnector) {\n                            p1 = '0 0';\n                            p2 = '100% 0';\n                            p3 = `100% calc(${clipPathBottom} - ${PSEUDO_BORDER_RADIUS}px)`;\n                            p4 = `calc(100% - ${PSEUDO_BORDER_RADIUS}px) ${clipPathBottom}`;\n                            p5 = `${clipPathConnectorStartX}px ${clipPathBottom}`;\n                            p6 = `${connectorRelativeXValue}px 100%`;\n                            p7 = `${clipPathConnectorEndX}px ${clipPathBottom}`;\n                            p8 = `${PSEUDO_BORDER_RADIUS}px ${clipPathBottom}`;\n                            p9 = `0 calc(${clipPathBottom} - ${PSEUDO_BORDER_RADIUS}px)`;\n                        }\n                        this.style.setProperty('--content-padding-bottom', `${CONNECTOR_HEIGHT + (this.#props.showConnector ? CONNECTOR_HEIGHT : 0)}px`);\n                        this.style.setProperty('--content-padding-top', `${CONNECTOR_HEIGHT}px`);\n                        this.style.setProperty('--dialog-top', '0');\n                        this.style.setProperty('--dialog-margin', 'auto');\n                        this.style.setProperty('--dialog-margin-bottom', `${innerHeight - anchorTop}px`);\n                        this.#hitArea.y = anchorTop - 2 * CONNECTOR_HEIGHT;\n                        this.style.setProperty('--dialog-offset-y', `${DIALOG_ANIMATION_OFFSET}px`);\n                        this.style.setProperty('--dialog-max-height', `${devToolsHeight - (innerHeight - anchorTop) - DIALOG_PADDING_FROM_WINDOW -\n                            visibleConnectorHeight}px`);\n                        break;\n                    }\n                    case \"bottom\" /* DialogVerticalPosition.BOTTOM */: {\n                        //                p4\n                        //     p2_________/\\_________p6\n                        //     /        p3  p5        \\\n                        // p1 |                        | p7\n                        //    |                        |\n                        // p9 *________________________* p8\n                        if (this.#props.showConnector) {\n                            p1 = `0 ${CONNECTOR_HEIGHT + PSEUDO_BORDER_RADIUS}px`;\n                            p2 = `${PSEUDO_BORDER_RADIUS}px ${CONNECTOR_HEIGHT}px`;\n                            p3 = `${clipPathConnectorStartX}px ${CONNECTOR_HEIGHT}px`;\n                            p4 = `${connectorRelativeXValue}px 0`;\n                            p5 = `${clipPathConnectorEndX}px ${CONNECTOR_HEIGHT}px`;\n                            p6 = `calc(100% - ${PSEUDO_BORDER_RADIUS}px) ${CONNECTOR_HEIGHT}px`;\n                            p7 = `100% ${CONNECTOR_HEIGHT + PSEUDO_BORDER_RADIUS}px`;\n                            p8 = '100% 100%';\n                            p9 = '0 100%';\n                        }\n                        this.style.setProperty('--content-padding-top', `${CONNECTOR_HEIGHT + (this.#props.showConnector ? CONNECTOR_HEIGHT : 0)}px`);\n                        this.style.setProperty('--content-padding-bottom', `${CONNECTOR_HEIGHT}px`);\n                        this.style.setProperty('--dialog-top', `${anchorBottom}px`);\n                        this.#hitArea.y = anchorTop;\n                        this.style.setProperty('--dialog-offset-y', `-${DIALOG_ANIMATION_OFFSET}px`);\n                        this.style.setProperty('--dialog-max-height', `${devToolsHeight - (anchorBottom - devToolsTop) - DIALOG_PADDING_FROM_WINDOW -\n                            visibleConnectorHeight}px`);\n                        break;\n                    }\n                    default:\n                        Platform.assertNever(this.#bestVerticalPositionInternal, `Unknown position type: ${this.#bestVerticalPositionInternal}`);\n                }\n                const clipPath = [p1, p2, p3, p4, p5, p6, p7, p8, p9].join();\n                this.style.setProperty('--content-clip-path', clipPath);\n                dialog.close();\n                dialog.style.visibility = '';\n            });\n        });\n    }\n    async #showDialog() {\n        if (!IS_DIALOG_SUPPORTED) {\n            return;\n        }\n        if (this.#isPendingShowDialog || this.hasAttribute('open')) {\n            return;\n        }\n        this.#isPendingShowDialog = true;\n        this.#positionDialog();\n        // Allow the CSS variables to be set before showing.\n        await coordinator.done();\n        this.#isPendingShowDialog = false;\n        const dialog = this.#getDialog();\n        // Make the dialog visible now.\n        if (!dialog.hasAttribute('open')) {\n            dialog.showModal();\n        }\n        if (this.#props.dialogShownCallback) {\n            await this.#props.dialogShownCallback();\n        }\n        this.#updateDialogBounds();\n        document.body.addEventListener('keydown', this.#onKeyDownBound);\n    }\n    #handleScrollAttempt(event) {\n        if (this.#mouseEventWasInDialogContent(event) || !this.#props.closeOnScroll ||\n            !this.#getDialog().hasAttribute('open')) {\n            return;\n        }\n        this.#closeDialog();\n        this.dispatchEvent(new ForcedDialogClose());\n    }\n    #onKeyDown(event) {\n        if (!this.#getDialog().hasAttribute('open') || !this.#props.closeOnESC) {\n            return;\n        }\n        if (event.key !== Platform.KeyboardUtilities.ESCAPE_KEY) {\n            return;\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        this.#closeDialog();\n        this.dispatchEvent(new ForcedDialogClose());\n    }\n    #onCancel(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        if (!this.#getDialog().hasAttribute('open') || !this.#props.closeOnESC) {\n            return;\n        }\n        this.dispatchEvent(new ForcedDialogClose());\n    }\n    #forceDialogCloseInDevToolsMutation() {\n        if (!this.#dialog?.hasAttribute('open')) {\n            return;\n        }\n        if (this.#devToolsBoundingElement === document.body) {\n            // Do not close if running in test environment.\n            return;\n        }\n        this.#closeDialog();\n        this.dispatchEvent(new ForcedDialogClose());\n    }\n    #closeDialog() {\n        if (this.#isPendingCloseDialog || !this.#getDialog().hasAttribute('open')) {\n            return;\n        }\n        this.#isPendingCloseDialog = true;\n        void coordinator.write(() => {\n            this.#hitArea.width = 0;\n            this.removeAttribute('open');\n            this.#getDialog().close();\n            this.#isPendingCloseDialog = false;\n            document.body.removeEventListener('keydown', this.#onKeyDownBound);\n        });\n    }\n    getDialogBounds() {\n        return this.#dialogClientRect;\n    }\n    #render() {\n        if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n            throw new Error('Dialog render was not scheduled');\n        }\n        if (!IS_DIALOG_SUPPORTED) {\n            // To make sure that light dom content passed into this component doesn't show up,\n            // we have to explicitly render a slot and hide it with CSS.\n            LitHtml.render(\n            // clang-format off\n            html `\n        <slot></slot>\n      `, this.#shadow, { host: this });\n            // clang-format on\n            return;\n        }\n        // clang-format off\n        LitHtml.render(html `\n      <dialog @click=${this.#handlePointerEvent} @pointermove=${this.#handlePointerEvent} @cancel=${this.#onCancel}\n              jslog=${VisualLogging.dialog(this.#props.jslogContext).track({ resize: true, keydown: 'Escape' }).parent('mapped')}>\n        <div id=\"content-wrap\">\n          <div id=\"content\">\n            <slot></slot>\n          </div>\n        </div>\n      </dialog>\n    `, this.#shadow, { host: this });\n        VisualLogging.setMappedParent(this.#getDialog(), this.parentElementOrShadowHost());\n        // clang-format on\n    }\n}\ncustomElements.define('devtools-dialog', Dialog);\nexport class PointerLeftDialogEvent extends Event {\n    static eventName = 'pointerleftdialog';\n    constructor() {\n        super(PointerLeftDialogEvent.eventName, { bubbles: true, composed: true });\n    }\n}\nexport class ClickOutsideDialogEvent extends Event {\n    static eventName = 'clickoutsidedialog';\n    constructor() {\n        super(ClickOutsideDialogEvent.eventName, { bubbles: true, composed: true });\n    }\n}\nexport class ForcedDialogClose extends Event {\n    static eventName = 'forceddialogclose';\n    constructor() {\n        super(ForcedDialogClose.eventName, { bubbles: true, composed: true });\n    }\n}\n//# sourceMappingURL=Dialog.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n#close-button-container {\n  height: 0;\n  width: 100%;\n}\n\n#close-button-container #close-button-right-aligner {\n  position: relative;\n  z-index: 1;\n  width: fit-content;\n  left: 100%;\n  transform: translateX(-100%);\n  padding-right: 12px;\n}\n\n#slot-container {\n  margin-top: -14px;\n  padding: 0 12px;\n}\n\n/*# sourceURL=iconDialog.css */\n`);\n\nexport default styles;\n","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/icon_button/icon_button.js';\nimport './Dialog.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport iconDialogStyles from './iconDialog.css.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     * @description Title of close button for the shortcuts dialog.\n     */\n    close: 'Close',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/dialogs/IconDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ShowDialog extends Event {\n    static eventName = 'showdialog';\n    constructor() {\n        super(ShowDialog.eventName);\n    }\n}\n// This class provides a shorthand for a typical use case of Dialog,\n// i.e. Dialog on an icon.\nexport class IconDialog extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #renderBound = this.#render.bind(this);\n    #data = null;\n    #dialog = null;\n    #icon = null;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [iconDialogStyles];\n    }\n    set data(data) {\n        this.#data = data;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n    }\n    #showDialog() {\n        if (!this.#dialog) {\n            throw new Error('Dialog not found');\n        }\n        void this.#dialog.setDialogVisible(true);\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n        this.dispatchEvent(new ShowDialog());\n    }\n    #closeDialog() {\n        if (!this.#dialog) {\n            throw new Error('Dialog not found');\n        }\n        void this.#dialog.setDialogVisible(false);\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n    }\n    #render() {\n        if (this.#data === null) {\n            throw new Error('IconDialog.data is not set');\n        }\n        if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n            throw new Error('IconDialog render was not scheduled');\n        }\n        let maybeCloseButton = LitHtml.nothing;\n        if (this.#data.closeButton) {\n            // Disabled until https://crbug.com/1079231 is fixed.\n            // clang-format off\n            maybeCloseButton = html `\n        <div id='close-button-container'>\n          <div id='close-button-right-aligner'>\n            <devtools-icon\n              @click=${this.#closeDialog}\n              .data=${{\n                iconName: 'cross',\n                color: 'var(--icon-default-hover)',\n                width: '16px',\n                height: '16px',\n            }}\n              jslog=${VisualLogging.close().track({ click: true })}\n              title=${i18nString(UIStrings.close)}\n            ></devtools-icon>\n          </div>\n        </div>\n      `;\n            // clang-format on\n        }\n        // clang-format off\n        LitHtml.render(html `\n      <devtools-icon\n        @click=${this.#showDialog}\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n            this.#icon = node;\n        })}\n        .data=${this.#data.iconData}\n      ></devtools-icon>\n      <devtools-dialog\n        @clickoutsidedialog=${this.#closeDialog}\n        .showConnector=${true}\n        .origin=${() => {\n            if (!this.#icon) {\n                throw new Error('Icon not found');\n            }\n            return this.#icon;\n        }}\n        .position=${this.#data.position}\n        .horizontalAlignment=${this.#data.horizontalAlignment}\n        .closeOnESC=${this.#data.closeOnESC}\n        .closeOnScroll=${this.#data.closeOnScroll}\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n            this.#dialog = node;\n        })}\n      >\n        ${maybeCloseButton}\n        <div id='slot-container'>\n          <slot></slot>\n        </div>\n      </devtools-dialog>\n    `, this.#shadow, { host: this });\n        // clang-format on\n    }\n}\ncustomElements.define('devtools-icon-dialog', IconDialog);\n//# sourceMappingURL=IconDialog.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.keybinds-category-header {\n  white-space: nowrap;\n  padding: 0 10px 20px;\n  display: flex;\n}\n\n.keybinds-category-header-text {\n  line-height: 24px;\n  flex: auto;\n  font-weight: bold;\n}\n\n.keybinds-key {\n  padding: 0.1em 0.6em;\n  border: 1px solid var(--sys-color-neutral-outline);\n  font-size: 11px;\n  background-color: var(--sys-color-neutral-container);\n  color: var(--sys-color-on-surface);\n  border-radius: 3px;\n  display: inline-block;\n  margin: 0 0.1em;\n  text-shadow: 0 1px 0 var(--sys-color-cdt-base-container);\n  line-height: 1.5;\n  white-space: nowrap;\n}\n\n.keybinds-list {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.keybinds-list-item {\n  line-height: 30px;\n  display: flex;\n  padding: 0 10px;\n}\n\n.keybinds-list-text {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  user-select: none;\n  color: var(--sys-color-on-surface);\n  text-align: start;\n  position: relative;\n  margin-right: 0;\n}\n\n.keybinds-shortcut-separator {\n  white-space: pre-wrap;\n}\n\n.keybinds-action-name {\n  flex: auto;\n  padding-right: 30px;\n}\n\n.keybinds-shortcut {\n  flex: none;\n}\n\n.close-icon {\n  width: 12px;\n  height: 12px;\n  padding-top: 2px;\n}\n\n/*# sourceURL=shortcutDialog.css */\n`);\n\nexport default styles;\n","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport shortcutDialogStyles from './shortcutDialog.css.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     * @description Title of question mark button for the shortcuts dialog.\n     */\n    showShortcutTitle: 'Show shortcuts',\n    /**\n     * @description Title of the keyboard shortcuts help menu.\n     */\n    dialogTitle: 'Keyboard shortcuts',\n    /**\n     * @description Title of close button for the shortcuts dialog.\n     */\n    close: 'Close',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/dialogs/ShortcutDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ShowDialog extends Event {\n    static eventName = 'showdialog';\n    constructor() {\n        super(ShowDialog.eventName);\n    }\n}\nexport class ShortcutDialog extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #renderBound = this.#render.bind(this);\n    #dialog = null;\n    #showButton = null;\n    #shortcuts = [];\n    #openOnRender = false;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [shortcutDialogStyles];\n    }\n    set data(data) {\n        this.#shortcuts = data.shortcuts;\n        if (data.open) {\n            this.#openOnRender = data.open;\n        }\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n    }\n    #showDialog() {\n        if (!this.#dialog) {\n            throw new Error('Dialog not found');\n        }\n        void this.#dialog.setDialogVisible(true);\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n        this.dispatchEvent(new ShowDialog());\n    }\n    #closeDialog(evt) {\n        if (!this.#dialog) {\n            throw new Error('Dialog not found');\n        }\n        void this.#dialog.setDialogVisible(false);\n        if (evt) {\n            evt.stopImmediatePropagation();\n        }\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#renderBound);\n    }\n    #render() {\n        if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n            throw new Error('Shortcut dialog render was not scheduled');\n        }\n        // clang-format off\n        LitHtml.render(html `\n      <devtools-button\n        @click=${this.#showDialog}\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n            this.#showButton = node;\n        })}\n        .data=${{\n            variant: \"toolbar\" /* Buttons.Button.Variant.TOOLBAR */,\n            iconName: 'help',\n            title: i18nString(UIStrings.showShortcutTitle),\n        }}\n      ></devtools-button>\n      <devtools-dialog\n        @clickoutsidedialog=${this.#closeDialog}\n        .showConnector=${true}\n        .origin=${() => {\n            if (!this.#showButton) {\n                throw new Error('Button not found');\n            }\n            return this.#showButton;\n        }}\n        .position=${\"bottom\" /* DialogVerticalPosition.BOTTOM */}\n        .horizontalAlignment=${\"right\" /* DialogHorizontalAlignment.RIGHT */}\n        .jslogContext=${'shortcuts'}\n        on-render=${ComponentHelpers.Directives.nodeRenderedCallback(node => {\n            this.#dialog = node;\n        })}\n      >\n        <div class=\"keybinds-category-header\">\n          <span class=\"keybinds-category-header-text\">${i18nString(UIStrings.dialogTitle)}</span>\n          <devtools-button\n            @click=${this.#closeDialog}\n            class='close-icon'\n            .data=${{\n            variant: \"toolbar\" /* Buttons.Button.Variant.TOOLBAR */,\n            iconName: 'cross',\n            title: i18nString(UIStrings.close),\n        }}\n            jslog=${VisualLogging.close().track({ click: true })}\n          ></devtools-button>\n        </div>\n        <ul class=\"keybinds-list\">\n          ${this.#shortcuts.map(shortcut => html `\n              <li class=\"keybinds-list-item\">\n                <div class=\"keybinds-action-name keybinds-list-text\">${shortcut.title}</div>\n                ${shortcut.bindings.map((binding, index) => html `\n                    <div class=\"keybinds-shortcut keybinds-list-text\">\n                      <span class=\"keybinds-key\">${binding}</span>\n                    </div>\n                    ${shortcut.bindings.at(index + 1) ?\n            html `<span class=\"keybinds-shortcut-separator\"> - </span>`\n            : LitHtml.nothing}\n                `)}\n              </li>`)}\n        </ul>\n      </devtools-dialog>\n      `, this.#shadow, { host: this });\n        // clang-format on\n        if (this.#openOnRender) {\n            this.#showDialog();\n            this.#openOnRender = false;\n        }\n    }\n}\ncustomElements.define('devtools-shortcut-dialog', ShortcutDialog);\n//# sourceMappingURL=ShortcutDialog.js.map"],"names":["styles","html","LitHtml","coordinator","Coordinator.RenderCoordinator.RenderCoordinator","IS_DIALOG_SUPPORTED","CONNECTOR_HEIGHT","CONNECTOR_WIDTH","DIALOG_ANIMATION_OFFSET","DIALOG_SIDE_PADDING","DIALOG_VERTICAL_PADDING","DIALOG_PADDING_FROM_WINDOW","MODAL","Dialog","#shadow","#renderBound","#render","#forceDialogCloseInDevToolsBound","#forceDialogCloseInDevToolsMutation","#handleScrollAttemptBound","#handleScrollAttempt","#props","WindowBoundsService.WindowBoundsService.WindowBoundsServiceImpl","#dialog","#isPendingShowDialog","#isPendingCloseDialog","#hitArea","#dialogClientRect","#bestVerticalPositionInternal","#bestHorizontalAlignment","#devtoolsMutationObserver","#dialogResizeObserver","#updateDialogBounds","#devToolsBoundingElement","#onKeyDownBound","#onKeyDown","showConnector","#onStateChange","origin","position","alignment","windowBoundsService","connectorXPosition","dialogShownCallback","closeOnESC","closeOnScroll","jslogContext","#getDialog","ComponentHelpers.ScheduledRender.scheduleRender","dialogStyles","show","#showDialog","#closeDialog","#handlePointerEvent","evt","eventWasInDialogContent","#mouseEventWasInDialogContent","eventWasInHitArea","#mouseEventWasInHitArea","PointerLeftDialogEvent","ClickOutsideDialogEvent","dialogBounds","animationOffSetValue","eventWasDialogContentX","eventWasDialogContentY","hitAreaBounds","eventWasInHitAreaX","eventWasInHitAreaY","#getCoordinatesFromDialogOrigin","anchor","#getBestHorizontalAlignment","anchorBounds","devtoolsBounds","#getBestVerticalPosition","originBounds","dialogHeight","#positionDialog","devToolsWidth","devToolsHeight","devToolsLeft","devToolsTop","devToolsRight","absoluteAnchorBounds","anchorTop","anchorRight","anchorBottom","anchorLeft","originCenterX","hitAreaWidth","windowWidth","connectorFixedXValue","dialog","dialogWidth","connectorRelativeXValue","offsetToCoverConnector","dialogLeft","dialogMaxWidth","windowRightBorderToAnchorRight","windowRightBorderToDevToolsRight","windowRightBorderToDialogRight","dialogRight","dialogCappedWidth","Platform.assertNever","visibleConnectorHeight","clipPathConnectorStartX","clipPathConnectorEndX","p1","p2","p3","p4","p5","p6","p7","p8","p9","PSEUDO_BORDER_RADIUS","clipPathBottom","clipPath","event","ForcedDialogClose","Platform.KeyboardUtilities.ESCAPE_KEY","#onCancel","ComponentHelpers.ScheduledRender.isScheduledRender","LitHtml.render","VisualLogging.dialog","VisualLogging.setMappedParent","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","ShowDialog","IconDialog","#data","#icon","iconDialogStyles","data","maybeCloseButton","LitHtml.nothing","VisualLogging.close","ComponentHelpers.Directives.nodeRenderedCallback","node","ShortcutDialog","#showButton","#shortcuts","#openOnRender","shortcutDialogStyles","shortcut","binding","index"],"mappings":"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"}