{"version":3,"file":"web_audio-CerrsfEh.js","sources":["../../panels/web_audio/AudioContextContentBuilder.js","../../panels/web_audio/audioContextSelector.css.js","../../panels/web_audio/AudioContextSelector.js","../../panels/web_audio/WebAudioModel.js","../../panels/web_audio/graph_visualizer/GraphStyle.js","../../panels/web_audio/graph_visualizer/NodeRendererUtility.js","../../panels/web_audio/graph_visualizer/NodeView.js","../../panels/web_audio/graph_visualizer/EdgeView.js","../../panels/web_audio/graph_visualizer/GraphView.js","../../panels/web_audio/graph_visualizer/GraphManager.js","../../panels/web_audio/webAudio.css.js","../../panels/web_audio/WebAudioView.js"],"sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nconst UIStrings = {\n    /**\n     *@description The current state of an item\n     */\n    state: 'State',\n    /**\n     *@description Text in Audio Context Content Builder\n     */\n    sampleRate: 'Sample Rate',\n    /**\n     *@description Text in Audio Context Content Builder\n     */\n    callbackBufferSize: 'Callback Buffer Size',\n    /**\n     * @description Label in the Audio Context Content Builder for the maximum number of output channels\n     * that this Audio Context has.\n     */\n    maxOutputChannels: 'Max Output Channels',\n    /**\n     *@description Text in Audio Context Content Builder\n     */\n    currentTime: 'Current Time',\n    /**\n     *@description Text in Audio Context Content Builder\n     */\n    callbackInterval: 'Callback Interval',\n    /**\n     *@description Text in Audio Context Content Builder\n     */\n    renderCapacity: 'Render Capacity',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/AudioContextContentBuilder.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ContextDetailBuilder {\n    fragment;\n    container;\n    constructor(context) {\n        this.fragment = document.createDocumentFragment();\n        this.container = document.createElement('div');\n        this.container.classList.add('context-detail-container');\n        this.fragment.appendChild(this.container);\n        this.build(context);\n    }\n    build(context) {\n        const title = context.contextType === 'realtime' ? i18n.i18n.lockedString('AudioContext') :\n            i18n.i18n.lockedString('OfflineAudioContext');\n        this.addTitle(title, context.contextId);\n        this.addEntry(i18nString(UIStrings.state), context.contextState);\n        this.addEntry(i18nString(UIStrings.sampleRate), context.sampleRate, 'Hz');\n        if (context.contextType === 'realtime') {\n            this.addEntry(i18nString(UIStrings.callbackBufferSize), context.callbackBufferSize, 'frames');\n        }\n        this.addEntry(i18nString(UIStrings.maxOutputChannels), context.maxOutputChannelCount, 'ch');\n    }\n    addTitle(title, subtitle) {\n        this.container.appendChild(UI.Fragment.html `\n  <div class=\"context-detail-header\">\n  <div class=\"context-detail-title\">${title}</div>\n  <div class=\"context-detail-subtitle\">${subtitle}</div>\n  </div>\n  `);\n    }\n    addEntry(entry, value, unit) {\n        const valueWithUnit = value + (unit ? ` ${unit}` : '');\n        this.container.appendChild(UI.Fragment.html `\n  <div class=\"context-detail-row\">\n  <div class=\"context-detail-row-entry\">${entry}</div>\n  <div class=\"context-detail-row-value\">${valueWithUnit}</div>\n  </div>\n  `);\n    }\n    getFragment() {\n        return this.fragment;\n    }\n}\nexport class ContextSummaryBuilder {\n    fragment;\n    constructor(contextId, contextRealtimeData) {\n        const time = contextRealtimeData.currentTime.toFixed(3);\n        const mean = (contextRealtimeData.callbackIntervalMean * 1000).toFixed(3);\n        const stddev = (Math.sqrt(contextRealtimeData.callbackIntervalVariance) * 1000).toFixed(3);\n        const capacity = (contextRealtimeData.renderCapacity * 100).toFixed(3);\n        this.fragment = document.createDocumentFragment();\n        this.fragment.appendChild(UI.Fragment.html `\n  <div class=\"context-summary-container\">\n  <span>${i18nString(UIStrings.currentTime)}: ${time} s</span>\n  <span>\\u2758</span>\n  <span>${i18nString(UIStrings.callbackInterval)}: μ = ${mean} ms, σ = ${stddev} ms</span>\n  <span>\\u2758</span>\n  <span>${i18nString(UIStrings.renderCapacity)}: ${capacity} %</span>\n  </div>\n  `);\n    }\n    getFragment() {\n        return this.fragment;\n    }\n}\n//# sourceMappingURL=AudioContextContentBuilder.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  padding: 2px 1px 2px 2px;\n  white-space: nowrap;\n  display: flex;\n  flex-direction: column;\n  height: 36px;\n  justify-content: center;\n}\n\n.title {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex-grow: 0;\n}\n\n/*# sourceURL=audioContextSelector.css */\n`);\n\nexport default styles;\n","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport audioContextSelectorStyles from './audioContextSelector.css.js';\nconst UIStrings = {\n    /**\n     *@description Text that shows there is no recording\n     */\n    noRecordings: '(no recordings)',\n    /**\n     *@description Label prefix for an audio context selection\n     *@example {realtime (1e03ec)} PH1\n     */\n    audioContextS: 'Audio context: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/AudioContextSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class AudioContextSelector extends Common.ObjectWrapper.ObjectWrapper {\n    placeholderText;\n    items;\n    dropDown;\n    toolbarItemInternal;\n    selectedContextInternal;\n    constructor() {\n        super();\n        this.placeholderText = i18nString(UIStrings.noRecordings);\n        this.items = new UI.ListModel.ListModel();\n        this.dropDown = new UI.SoftDropDown.SoftDropDown(this.items, this, 'audio-context');\n        this.dropDown.setPlaceholderText(this.placeholderText);\n        this.toolbarItemInternal = new UI.Toolbar.ToolbarItem(this.dropDown.element);\n        this.toolbarItemInternal.setEnabled(false);\n        this.toolbarItemInternal.setTitle(i18nString(UIStrings.audioContextS, { PH1: this.placeholderText }));\n        this.items.addEventListener(\"ItemsReplaced\" /* UI.ListModel.Events.ITEMS_REPLACED */, this.onListItemReplaced, this);\n        this.toolbarItemInternal.element.classList.add('toolbar-has-dropdown');\n        this.selectedContextInternal = null;\n    }\n    onListItemReplaced() {\n        const hasItems = Boolean(this.items.length);\n        this.toolbarItemInternal.setEnabled(hasItems);\n        if (!hasItems) {\n            this.toolbarItemInternal.setTitle(i18nString(UIStrings.audioContextS, { PH1: this.placeholderText }));\n        }\n    }\n    contextCreated({ data: context }) {\n        this.items.insert(this.items.length, context);\n        // Select if this is the first item.\n        if (this.items.length === 1) {\n            this.dropDown.selectItem(context);\n        }\n    }\n    contextDestroyed({ data: contextId }) {\n        const contextIndex = this.items.findIndex((context) => context.contextId === contextId);\n        if (contextIndex > -1) {\n            this.items.remove(contextIndex);\n        }\n    }\n    contextChanged({ data: changedContext }) {\n        const contextIndex = this.items.findIndex((context) => context.contextId === changedContext.contextId);\n        if (contextIndex > -1) {\n            this.items.replace(contextIndex, changedContext);\n            // If the changed context is currently selected by user. Re-select it\n            // because the actual element is replaced with a new one.\n            if (this.selectedContextInternal && this.selectedContextInternal.contextId === changedContext.contextId) {\n                this.dropDown.selectItem(changedContext);\n            }\n        }\n    }\n    createElementForItem(item) {\n        const element = document.createElement('div');\n        const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(element, { cssFile: [audioContextSelectorStyles], delegatesFocus: undefined });\n        const title = shadowRoot.createChild('div', 'title');\n        UI.UIUtils.createTextChild(title, Platform.StringUtilities.trimEndWithMaxLength(this.titleFor(item), 100));\n        return element;\n    }\n    selectedContext() {\n        if (!this.selectedContextInternal) {\n            return null;\n        }\n        return this.selectedContextInternal;\n    }\n    highlightedItemChanged(from, to, fromElement, toElement) {\n        if (fromElement) {\n            fromElement.classList.remove('highlighted');\n        }\n        if (toElement) {\n            toElement.classList.add('highlighted');\n        }\n    }\n    isItemSelectable(_item) {\n        return true;\n    }\n    itemSelected(item) {\n        if (!item) {\n            return;\n        }\n        // It's possible that no context is selected yet.\n        if (!this.selectedContextInternal || this.selectedContextInternal.contextId !== item.contextId) {\n            this.selectedContextInternal = item;\n            this.toolbarItemInternal.setTitle(i18nString(UIStrings.audioContextS, { PH1: this.titleFor(item) }));\n        }\n        this.dispatchEventToListeners(\"ContextSelected\" /* Events.CONTEXT_SELECTED */, item);\n    }\n    reset() {\n        this.items.replaceAll([]);\n    }\n    titleFor(context) {\n        return `${context.contextType} (${context.contextId.substr(-6)})`;\n    }\n    toolbarItem() {\n        return this.toolbarItemInternal;\n    }\n}\n//# sourceMappingURL=AudioContextSelector.js.map","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../../core/sdk/sdk.js';\nexport class WebAudioModel extends SDK.SDKModel.SDKModel {\n    enabled;\n    agent;\n    constructor(target) {\n        super(target);\n        this.enabled = false;\n        this.agent = target.webAudioAgent();\n        target.registerWebAudioDispatcher(this);\n        // TODO(crbug.com/963510): Some OfflineAudioContexts are not uninitialized\n        // properly because LifeCycleObserver::ContextDestroyed() is not fired for\n        // unknown reasons. This creates inconsistency in AudioGraphTracer\n        // and AudioContextSelector in DevTools.\n        //\n        // To resolve this inconsistency, we flush the leftover from the previous\n        // frame when the current page is loaded. This call can be omitted when the\n        // bug is fixed.\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.FrameNavigated, this.flushContexts, this);\n    }\n    flushContexts() {\n        this.dispatchEventToListeners(\"ModelReset\" /* Events.MODEL_RESET */);\n    }\n    async suspendModel() {\n        this.dispatchEventToListeners(\"ModelSuspend\" /* Events.MODEL_SUSPEND */);\n        await this.agent.invoke_disable();\n    }\n    async resumeModel() {\n        if (!this.enabled) {\n            return Promise.resolve();\n        }\n        await this.agent.invoke_enable();\n    }\n    ensureEnabled() {\n        if (this.enabled) {\n            return;\n        }\n        void this.agent.invoke_enable();\n        this.enabled = true;\n    }\n    contextCreated({ context }) {\n        this.dispatchEventToListeners(\"ContextCreated\" /* Events.CONTEXT_CREATED */, context);\n    }\n    contextWillBeDestroyed({ contextId }) {\n        this.dispatchEventToListeners(\"ContextDestroyed\" /* Events.CONTEXT_DESTROYED */, contextId);\n    }\n    contextChanged({ context }) {\n        this.dispatchEventToListeners(\"ContextChanged\" /* Events.CONTEXT_CHANGED */, context);\n    }\n    audioListenerCreated({ listener }) {\n        this.dispatchEventToListeners(\"AudioListenerCreated\" /* Events.AUDIO_LISTENER_CREATED */, listener);\n    }\n    audioListenerWillBeDestroyed({ listenerId, contextId }) {\n        this.dispatchEventToListeners(\"AudioListenerWillBeDestroyed\" /* Events.AUDIO_LISTENER_WILL_BE_DESTROYED */, { listenerId, contextId });\n    }\n    audioNodeCreated({ node }) {\n        this.dispatchEventToListeners(\"AudioNodeCreated\" /* Events.AUDIO_NODE_CREATED */, node);\n    }\n    audioNodeWillBeDestroyed({ contextId, nodeId }) {\n        this.dispatchEventToListeners(\"AudioNodeWillBeDestroyed\" /* Events.AUDIO_NODE_WILL_BE_DESTROYED */, { contextId, nodeId });\n    }\n    audioParamCreated({ param }) {\n        this.dispatchEventToListeners(\"AudioParamCreated\" /* Events.AUDIO_PARAM_CREATED */, param);\n    }\n    audioParamWillBeDestroyed({ contextId, nodeId, paramId }) {\n        this.dispatchEventToListeners(\"AudioParamWillBeDestroyed\" /* Events.AUDIO_PARAM_WILL_BE_DESTROYED */, { contextId, nodeId, paramId });\n    }\n    nodesConnected({ contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex }) {\n        this.dispatchEventToListeners(\"NodesConnected\" /* Events.NODES_CONNECTED */, { contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex });\n    }\n    nodesDisconnected({ contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex }) {\n        this.dispatchEventToListeners(\"NodesDisconnected\" /* Events.NODES_DISCONNECTED */, { contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex });\n    }\n    nodeParamConnected({ contextId, sourceId, destinationId, sourceOutputIndex }) {\n        this.dispatchEventToListeners(\"NodeParamConnected\" /* Events.NODE_PARAM_CONNECTED */, { contextId, sourceId, destinationId, sourceOutputIndex });\n    }\n    nodeParamDisconnected({ contextId, sourceId, destinationId, sourceOutputIndex }) {\n        this.dispatchEventToListeners(\"NodeParamDisconnected\" /* Events.NODE_PARAM_DISCONNECTED */, { contextId, sourceId, destinationId, sourceOutputIndex });\n    }\n    async requestRealtimeData(contextId) {\n        const realtimeResponse = await this.agent.invoke_getRealtimeData({ contextId });\n        return realtimeResponse.realtimeData;\n    }\n}\nSDK.SDKModel.SDKModel.register(WebAudioModel, { capabilities: 2 /* SDK.Target.Capability.DOM */, autostart: false });\n//# sourceMappingURL=WebAudioModel.js.map","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nexport const PortPadding = 4;\nexport const InputPortRadius = 10;\nexport const AudioParamRadius = 5;\nexport const LeftMarginOfText = 12;\nexport const RightMarginOfText = 30;\nexport const LeftSideTopPadding = 5;\nexport const BottomPaddingWithoutParam = 6;\nexport const BottomPaddingWithParam = 8;\nexport const ArrowHeadSize = 12;\n// GraphPadding is used to add extra space for the graph layout.\nexport const GraphPadding = 20;\nexport const GraphMargin = 20;\nexport const TotalInputPortHeight = InputPortRadius * 2 + PortPadding;\nexport const TotalOutputPortHeight = TotalInputPortHeight;\nexport const TotalParamPortHeight = AudioParamRadius * 2 + PortPadding;\nexport const NodeLabelFontStyle = '14px Segoe UI, Arial';\nexport const ParamLabelFontStyle = '12px Segoe UI, Arial';\n//# sourceMappingURL=GraphStyle.js.map","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport { AudioParamRadius, InputPortRadius, LeftSideTopPadding, TotalInputPortHeight, TotalOutputPortHeight, TotalParamPortHeight, } from './GraphStyle.js';\n/**\n * Calculate the x, y value of input port.\n * Input ports are placed near the top of the left-side border.\n */\nexport const calculateInputPortXY = (portIndex) => {\n    const y = InputPortRadius + LeftSideTopPadding + portIndex * TotalInputPortHeight;\n    return { x: 0, y };\n};\n/**\n * Calculate the x, y value of output port.\n * Output ports are placed near the center of the right-side border.\n */\nexport const calculateOutputPortXY = (portIndex, nodeSize, numberOfOutputs) => {\n    const { width, height } = nodeSize;\n    const outputPortY = (height / 2) + (2 * portIndex - numberOfOutputs + 1) * TotalOutputPortHeight / 2;\n    return { x: width, y: outputPortY };\n};\n/**\n * Calculate the x, y value of param port.\n * Param ports are placed near the bottom of the left-side border.\n */\nexport const calculateParamPortXY = (portIndex, offsetY) => {\n    const paramPortY = offsetY + TotalParamPortHeight * (portIndex + 1) - AudioParamRadius;\n    return { x: 0, y: paramPortY };\n};\n//# sourceMappingURL=NodeRendererUtility.js.map","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport { BottomPaddingWithoutParam, BottomPaddingWithParam, LeftMarginOfText, LeftSideTopPadding, NodeLabelFontStyle, ParamLabelFontStyle, RightMarginOfText, TotalInputPortHeight, TotalOutputPortHeight, TotalParamPortHeight, } from './GraphStyle.js';\nimport { calculateInputPortXY, calculateOutputPortXY, calculateParamPortXY } from './NodeRendererUtility.js';\n// A class that represents a node of a graph, consisting of the information needed to layout the\n// node and display the node. Each node has zero or more ports, including input, output, and param ports.\nexport class NodeView {\n    id;\n    type;\n    numberOfInputs;\n    numberOfOutputs;\n    label;\n    size;\n    position;\n    layout;\n    ports;\n    constructor(data, label) {\n        this.id = data.nodeId;\n        this.type = data.nodeType;\n        this.numberOfInputs = data.numberOfInputs;\n        this.numberOfOutputs = data.numberOfOutputs;\n        this.label = label;\n        this.size = { width: 0, height: 0 };\n        // Position of the center. If null, it means the graph layout has not been computed\n        // and this node should not be rendered. It will be set after layouting.\n        this.position = null;\n        this.layout = {\n            inputPortSectionHeight: 0,\n            outputPortSectionHeight: 0,\n            maxTextLength: 0,\n            totalHeight: 0,\n        };\n        this.ports = new Map();\n        this.initialize(data);\n    }\n    initialize(data) {\n        this.updateNodeLayoutAfterAddingNode(data);\n        this.setupInputPorts();\n        this.setupOutputPorts();\n    }\n    /**\n     * Add an AudioParam to this node.\n     * Note for @method removeParamPort: removeParamPort is not necessary because it will only happen\n     * when the parent NodeView is destroyed. So there is no need to remove port individually\n     * when the whole NodeView will be gone.\n     */\n    addParamPort(paramId, paramType) {\n        const paramPorts = this.getPortsByType(\"Param\" /* PortTypes.PARAM */);\n        const numberOfParams = paramPorts.length;\n        const { x, y } = calculateParamPortXY(numberOfParams, this.layout.inputPortSectionHeight);\n        this.addPort({\n            id: generateParamPortId(this.id, paramId),\n            type: \"Param\" /* PortTypes.PARAM */,\n            label: paramType,\n            x,\n            y,\n        });\n        this.updateNodeLayoutAfterAddingParam(numberOfParams + 1, paramType);\n        // The position of output ports may be changed if adding a param increases the total height.\n        this.setupOutputPorts();\n    }\n    getPortsByType(type) {\n        const result = [];\n        this.ports.forEach(port => {\n            if (port.type === type) {\n                result.push(port);\n            }\n        });\n        return result;\n    }\n    /**\n     * Use number of inputs and outputs to compute the layout\n     * for text and ports.\n     * Credit: This function is mostly borrowed from Audion/\n     *      `audion.entryPoints.handleNodeCreated_()`.\n     *      https://github.com/google/audion/blob/master/js/entry-points/panel.js\n     */\n    updateNodeLayoutAfterAddingNode(data) {\n        // Even if there are no input ports, leave room for the node label.\n        const inputPortSectionHeight = TotalInputPortHeight * Math.max(1, data.numberOfInputs) + LeftSideTopPadding;\n        this.layout.inputPortSectionHeight = inputPortSectionHeight;\n        this.layout.outputPortSectionHeight = TotalOutputPortHeight * data.numberOfOutputs;\n        // Use the max of the left and right side heights as the total height.\n        // Include a little padding on the left.\n        this.layout.totalHeight =\n            Math.max(inputPortSectionHeight + BottomPaddingWithoutParam, this.layout.outputPortSectionHeight);\n        // Update max length with node label.\n        const nodeLabelLength = measureTextWidth(this.label, NodeLabelFontStyle);\n        this.layout.maxTextLength = Math.max(this.layout.maxTextLength, nodeLabelLength);\n        this.updateNodeSize();\n    }\n    /**\n     * After adding a param port, update the node layout based on the y value\n     * and label length.\n     */\n    updateNodeLayoutAfterAddingParam(numberOfParams, paramType) {\n        // The height after adding param ports and input ports.\n        // Include a little padding on the left.\n        const leftSideMaxHeight = this.layout.inputPortSectionHeight + numberOfParams * TotalParamPortHeight + BottomPaddingWithParam;\n        // Use the max of the left and right side heights as the total height.\n        this.layout.totalHeight = Math.max(leftSideMaxHeight, this.layout.outputPortSectionHeight);\n        // Update max length with param label.\n        const paramLabelLength = measureTextWidth(paramType, ParamLabelFontStyle);\n        this.layout.maxTextLength = Math.max(this.layout.maxTextLength, paramLabelLength);\n        this.updateNodeSize();\n    }\n    updateNodeSize() {\n        this.size = {\n            width: Math.ceil(LeftMarginOfText + this.layout.maxTextLength + RightMarginOfText),\n            height: this.layout.totalHeight,\n        };\n    }\n    // Setup the properties of each input port.\n    setupInputPorts() {\n        for (let i = 0; i < this.numberOfInputs; i++) {\n            const { x, y } = calculateInputPortXY(i);\n            this.addPort({ id: generateInputPortId(this.id, i), type: \"In\" /* PortTypes.IN */, x, y, label: undefined });\n        }\n    }\n    // Setup the properties of each output port.\n    setupOutputPorts() {\n        for (let i = 0; i < this.numberOfOutputs; i++) {\n            const portId = generateOutputPortId(this.id, i);\n            const { x, y } = calculateOutputPortXY(i, this.size, this.numberOfOutputs);\n            if (this.ports.has(portId)) {\n                // Update y value of an existing output port.\n                const port = this.ports.get(portId);\n                if (!port) {\n                    throw new Error(`Unable to find port with id ${portId}`);\n                }\n                port.x = x;\n                port.y = y;\n            }\n            else {\n                this.addPort({ id: portId, type: \"Out\" /* PortTypes.OUT */, x, y, label: undefined });\n            }\n        }\n    }\n    addPort(port) {\n        this.ports.set(port.id, port);\n    }\n}\n/**\n * Generates the port id for the input of node.\n */\nexport const generateInputPortId = (nodeId, inputIndex) => {\n    return `${nodeId}-input-${inputIndex || 0}`;\n};\n/**\n * Generates the port id for the output of node.\n */\nexport const generateOutputPortId = (nodeId, outputIndex) => {\n    return `${nodeId}-output-${outputIndex || 0}`;\n};\n/**\n * Generates the port id for the param of node.\n */\nexport const generateParamPortId = (nodeId, paramId) => {\n    return `${nodeId}-param-${paramId}`;\n};\n// A label generator to convert UUID of node to shorter label to display.\n// Each graph should have its own generator since the node count starts from 0.\nexport class NodeLabelGenerator {\n    totalNumberOfNodes;\n    constructor() {\n        this.totalNumberOfNodes = 0;\n    }\n    /**\n     * Generates the label for a node of a graph.\n     */\n    generateLabel(nodeType) {\n        // To make the label concise, remove the suffix \"Node\" from the nodeType.\n        if (nodeType.endsWith('Node')) {\n            nodeType = nodeType.slice(0, nodeType.length - 4);\n        }\n        // Also, use an integer to replace the long UUID.\n        this.totalNumberOfNodes += 1;\n        const label = `${nodeType} ${this.totalNumberOfNodes}`;\n        return label;\n    }\n}\nlet contextForFontTextMeasuring;\n/**\n * Get the text width using given font style.\n */\nexport const measureTextWidth = (text, fontStyle) => {\n    if (!contextForFontTextMeasuring) {\n        const context = document.createElement('canvas').getContext('2d');\n        if (!context) {\n            throw new Error('Unable to create canvas context.');\n        }\n        contextForFontTextMeasuring = context;\n    }\n    const context = contextForFontTextMeasuring;\n    context.save();\n    if (fontStyle) {\n        context.font = fontStyle;\n    }\n    const width = UI.UIUtils.measureTextWidth(context, text);\n    context.restore();\n    return width;\n};\n//# sourceMappingURL=NodeView.js.map","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport { generateInputPortId, generateOutputPortId, generateParamPortId } from './NodeView.js';\n// A class that represents an edge of a graph, including node-to-node connection,\n// and node-to-param connection.\nexport class EdgeView {\n    id;\n    type;\n    sourceId;\n    destinationId;\n    sourcePortId;\n    destinationPortId;\n    constructor(data, type) {\n        const edgePortsIds = generateEdgePortIdsByData(data, type);\n        if (!edgePortsIds) {\n            throw new Error('Unable to generate edge port IDs');\n        }\n        const { edgeId, sourcePortId, destinationPortId } = edgePortsIds;\n        this.id = edgeId;\n        this.type = type;\n        this.sourceId = data.sourceId;\n        this.destinationId = data.destinationId;\n        this.sourcePortId = sourcePortId;\n        this.destinationPortId = destinationPortId;\n    }\n}\n/**\n * Generates the edge id and source/destination portId using edge data and type.\n */\nexport const generateEdgePortIdsByData = (data, type) => {\n    if (!data.sourceId || !data.destinationId) {\n        console.error(`Undefined node message: ${JSON.stringify(data)}`);\n        return null;\n    }\n    const sourcePortId = generateOutputPortId(data.sourceId, data.sourceOutputIndex);\n    const destinationPortId = getDestinationPortId(data, type);\n    return {\n        edgeId: `${sourcePortId}->${destinationPortId}`,\n        sourcePortId,\n        destinationPortId,\n    };\n    /**\n     * Get the destination portId based on connection type.\n     */\n    function getDestinationPortId(data, type) {\n        if (type === \"NodeToNode\" /* EdgeTypes.NODE_TO_NODE */) {\n            const portData = data;\n            return generateInputPortId(data.destinationId, portData.destinationInputIndex);\n        }\n        if (type === \"NodeToParam\" /* EdgeTypes.NODE_TO_PARAM */) {\n            const portData = data;\n            return generateParamPortId(data.destinationId, portData.destinationParamId);\n        }\n        console.error(`Unknown edge type: ${type}`);\n        return '';\n    }\n};\n//# sourceMappingURL=EdgeView.js.map","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../core/common/common.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport { EdgeView, generateEdgePortIdsByData } from './EdgeView.js';\nimport { NodeLabelGenerator, NodeView } from './NodeView.js';\n// A class that tracks all the nodes and edges of an audio graph.\nexport class GraphView extends Common.ObjectWrapper.ObjectWrapper {\n    contextId;\n    nodes;\n    edges;\n    outboundEdgeMap;\n    inboundEdgeMap;\n    nodeLabelGenerator;\n    paramIdToNodeIdMap;\n    constructor(contextId) {\n        super();\n        this.contextId = contextId;\n        this.nodes = new Map();\n        this.edges = new Map();\n        /**\n         * For each node ID, keep a set of all out-bound edge IDs.\n         */\n        this.outboundEdgeMap = new Platform.MapUtilities.Multimap();\n        /**\n         * For each node ID, keep a set of all in-bound edge IDs.\n         */\n        this.inboundEdgeMap = new Platform.MapUtilities.Multimap();\n        // Use concise node label to replace the long UUID.\n        // Each graph has its own label generator so that the label starts from 0.\n        this.nodeLabelGenerator = new NodeLabelGenerator();\n        /**\n         * For each param ID, save its corresponding node Id.\n         */\n        this.paramIdToNodeIdMap = new Map();\n    }\n    /**\n     * Add a node to the graph.\n     */\n    addNode(data) {\n        const label = this.nodeLabelGenerator.generateLabel(data.nodeType);\n        const node = new NodeView(data, label);\n        this.nodes.set(data.nodeId, node);\n        this.notifyShouldRedraw();\n    }\n    /**\n     * Remove a node by id and all related edges.\n     */\n    removeNode(nodeId) {\n        this.outboundEdgeMap.get(nodeId).forEach(edgeId => this.removeEdge(edgeId));\n        this.inboundEdgeMap.get(nodeId).forEach(edgeId => this.removeEdge(edgeId));\n        this.nodes.delete(nodeId);\n        this.notifyShouldRedraw();\n    }\n    /**\n     * Add a param to the node.\n     */\n    addParam(data) {\n        const node = this.getNodeById(data.nodeId);\n        if (!node) {\n            console.error('AudioNode should be added before AudioParam');\n            return;\n        }\n        node.addParamPort(data.paramId, data.paramType);\n        this.paramIdToNodeIdMap.set(data.paramId, data.nodeId);\n        this.notifyShouldRedraw();\n    }\n    /**\n     * Remove a param.\n     */\n    removeParam(paramId) {\n        // Only need to delete the entry from the param id to node id map.\n        this.paramIdToNodeIdMap.delete(paramId);\n        // No need to remove the param port from the node because removeParam will always happen with\n        // removeNode(). Since the whole Node will be gone, there is no need to remove port individually.\n    }\n    /**\n     * Add a Node-to-Node connection to the graph.\n     */\n    addNodeToNodeConnection(edgeData) {\n        const edge = new EdgeView(edgeData, \"NodeToNode\" /* EdgeTypes.NODE_TO_NODE */);\n        this.addEdge(edge);\n    }\n    /**\n     * Remove a Node-to-Node connection from the graph.\n     */\n    removeNodeToNodeConnection(edgeData) {\n        if (edgeData.destinationId) {\n            // Remove a single edge if destinationId is specified.\n            const edgePortIds = generateEdgePortIdsByData(edgeData, \"NodeToNode\" /* EdgeTypes.NODE_TO_NODE */);\n            if (!edgePortIds) {\n                throw new Error('Unable to generate edge port IDs');\n            }\n            const { edgeId } = edgePortIds;\n            this.removeEdge(edgeId);\n        }\n        else {\n            // Otherwise, remove all outgoing edges from source node.\n            this.outboundEdgeMap.get(edgeData.sourceId).forEach(edgeId => this.removeEdge(edgeId));\n        }\n    }\n    /**\n     * Add a Node-to-Param connection to the graph.\n     */\n    addNodeToParamConnection(edgeData) {\n        const edge = new EdgeView(edgeData, \"NodeToParam\" /* EdgeTypes.NODE_TO_PARAM */);\n        this.addEdge(edge);\n    }\n    /**\n     * Remove a Node-to-Param connection from the graph.\n     */\n    removeNodeToParamConnection(edgeData) {\n        const edgePortIds = generateEdgePortIdsByData(edgeData, \"NodeToParam\" /* EdgeTypes.NODE_TO_PARAM */);\n        if (!edgePortIds) {\n            throw new Error('Unable to generate edge port IDs');\n        }\n        const { edgeId } = edgePortIds;\n        this.removeEdge(edgeId);\n    }\n    getNodeById(nodeId) {\n        return this.nodes.get(nodeId) || null;\n    }\n    getNodes() {\n        return this.nodes;\n    }\n    getEdges() {\n        return this.edges;\n    }\n    getNodeIdByParamId(paramId) {\n        return this.paramIdToNodeIdMap.get(paramId) || null;\n    }\n    /**\n     * Add an edge to the graph.\n     */\n    addEdge(edge) {\n        const sourceId = edge.sourceId;\n        // Do nothing if the edge already exists.\n        if (this.outboundEdgeMap.hasValue(sourceId, edge.id)) {\n            return;\n        }\n        this.edges.set(edge.id, edge);\n        this.outboundEdgeMap.set(sourceId, edge.id);\n        this.inboundEdgeMap.set(edge.destinationId, edge.id);\n        this.notifyShouldRedraw();\n    }\n    /**\n     * Given an edge id, remove the edge from the graph.\n     * Also remove the edge from inbound and outbound edge maps.\n     */\n    removeEdge(edgeId) {\n        const edge = this.edges.get(edgeId);\n        if (!edge) {\n            return;\n        }\n        this.outboundEdgeMap.delete(edge.sourceId, edgeId);\n        this.inboundEdgeMap.delete(edge.destinationId, edgeId);\n        this.edges.delete(edgeId);\n        this.notifyShouldRedraw();\n    }\n    notifyShouldRedraw() {\n        this.dispatchEventToListeners(\"ShouldRedraw\" /* Events.SHOULD_REDRAW */, this);\n    }\n}\n//# sourceMappingURL=GraphView.js.map","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport { GraphView } from './GraphView.js';\n// A class that maps each context to its corresponding graph.\n// It controls which graph to render when the context is switched or updated.\nexport class GraphManager {\n    graphMapByContextId = new Map();\n    createContext(contextId) {\n        const graph = new GraphView(contextId);\n        this.graphMapByContextId.set(contextId, graph);\n    }\n    destroyContext(contextId) {\n        if (!this.graphMapByContextId.has(contextId)) {\n            return;\n        }\n        const graph = this.graphMapByContextId.get(contextId);\n        if (!graph) {\n            return;\n        }\n        this.graphMapByContextId.delete(contextId);\n    }\n    hasContext(contextId) {\n        return this.graphMapByContextId.has(contextId);\n    }\n    clearGraphs() {\n        this.graphMapByContextId.clear();\n    }\n    /**\n     * Get graph by contextId.\n     * If the user starts listening for WebAudio events after the page has been running a context for awhile,\n     * the graph might be undefined.\n     */\n    getGraph(contextId) {\n        return this.graphMapByContextId.get(contextId) || null;\n    }\n}\n//# sourceMappingURL=GraphManager.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: hidden;\n}\n\n.web-audio-toolbar-container {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n  min-height: fit-content;\n}\n\n.web-audio-toolbar {\n  display: inline-block;\n}\n\n.web-audio-landing-page {\n  position: absolute;\n  background-color: var(--sys-color-cdt-base-container);\n  justify-content: center;\n  align-items: center;\n  overflow: auto;\n  font-size: 13px;\n  color: var(--sys-color-on-surface);\n}\n\n.web-audio-landing-page > div {\n  max-width: 500px;\n  margin: 10px;\n}\n\n.web-audio-landing-page > div > p {\n  flex: none;\n  white-space: pre-line;\n}\n\n.web-audio-content-container {\n  overflow-y: auto;\n}\n\n.web-audio-details-container {\n  min-height: fit-content;\n}\n\n.web-audio-summary-container {\n  flex-shrink: 0;\n}\n\n.context-detail-container {\n  flex: none;\n  display: flex;\n  background-color: var(--sys-color-cdt-base-container);\n  flex-direction: column;\n}\n\n.context-detail-header {\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding: 12px 24px;\n  margin-bottom: 10px;\n}\n\n.context-detail-title {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.context-detail-subtitle {\n  font-size: 12px;\n  margin-top: 10px;\n  user-select: text;\n}\n\n.context-detail-row {\n  flex-direction: row;\n  display: flex;\n  line-height: 18px;\n  padding-left: 24px;\n}\n\n.context-detail-row-entry:not(:empty) {\n  color: var(--sys-color-token-subtle);\n  overflow: hidden;\n  width: 130px;\n}\n\n.context-detail-row-value {\n  user-select: text;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.context-summary-container {\n  flex: 0 0 27px;\n  line-height: 27px;\n  padding-left: 5px;\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.context-summary-container span {\n  margin-right: 6px;\n}\n\n/*# sourceURL=webAudio.css */\n`);\n\nexport default styles;\n","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { ContextDetailBuilder, ContextSummaryBuilder } from './AudioContextContentBuilder.js';\nimport { AudioContextSelector } from './AudioContextSelector.js';\nimport * as GraphVisualizer from './graph_visualizer/graph_visualizer.js';\nimport webAudioStyles from './webAudio.css.js';\nimport { WebAudioModel } from './WebAudioModel.js';\nconst UIStrings = {\n    /**\n     *@description Text in Web Audio View\n     */\n    openAPageThatUsesWebAudioApiTo: 'Open a page that uses Web Audio API to start monitoring.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/WebAudioView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class WebAudioView extends UI.ThrottledWidget.ThrottledWidget {\n    contextSelector;\n    contentContainer;\n    detailViewContainer;\n    graphManager;\n    landingPage;\n    summaryBarContainer;\n    constructor() {\n        super(true, 1000);\n        this.element.setAttribute('jslog', `${VisualLogging.panel('web-audio').track({ resize: true })}`);\n        this.element.classList.add('web-audio-drawer');\n        // Creates the toolbar.\n        const toolbarContainer = this.contentElement.createChild('div', 'web-audio-toolbar-container vbox');\n        this.contextSelector = new AudioContextSelector();\n        const toolbar = new UI.Toolbar.Toolbar('web-audio-toolbar', toolbarContainer);\n        toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButtonForId('components.collect-garbage'));\n        toolbar.appendSeparator();\n        toolbar.appendToolbarItem(this.contextSelector.toolbarItem());\n        toolbar.element.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n        // Create content container\n        this.contentContainer = this.contentElement.createChild('div', 'web-audio-content-container vbox flex-auto');\n        // Creates the detail view.\n        this.detailViewContainer = this.contentContainer.createChild('div', 'web-audio-details-container vbox flex-auto');\n        this.graphManager = new GraphVisualizer.GraphManager.GraphManager();\n        // Creates the landing page.\n        this.landingPage = new UI.Widget.VBox();\n        this.landingPage.contentElement.classList.add('web-audio-landing-page', 'fill');\n        this.landingPage.contentElement.appendChild(UI.Fragment.html `\n  <div>\n  <p>${i18nString(UIStrings.openAPageThatUsesWebAudioApiTo)}</p>\n  </div>\n  `);\n        this.landingPage.show(this.detailViewContainer);\n        // Creates the summary bar.\n        this.summaryBarContainer = this.contentContainer.createChild('div', 'web-audio-summary-container');\n        this.contextSelector.addEventListener(\"ContextSelected\" /* SelectorEvents.CONTEXT_SELECTED */, (event) => {\n            const context = event.data;\n            if (context) {\n                this.updateDetailView(context);\n            }\n            void this.doUpdate();\n        });\n        SDK.TargetManager.TargetManager.instance().observeModels(WebAudioModel, this);\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([webAudioStyles]);\n        for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n            this.addEventListeners(model);\n        }\n    }\n    willHide() {\n        for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n            this.removeEventListeners(model);\n        }\n    }\n    modelAdded(webAudioModel) {\n        if (this.isShowing()) {\n            this.addEventListeners(webAudioModel);\n        }\n    }\n    modelRemoved(webAudioModel) {\n        this.removeEventListeners(webAudioModel);\n    }\n    async doUpdate() {\n        await this.pollRealtimeData();\n        this.update();\n    }\n    addEventListeners(webAudioModel) {\n        webAudioModel.ensureEnabled();\n        webAudioModel.addEventListener(\"ContextCreated\" /* ModelEvents.CONTEXT_CREATED */, this.contextCreated, this);\n        webAudioModel.addEventListener(\"ContextDestroyed\" /* ModelEvents.CONTEXT_DESTROYED */, this.contextDestroyed, this);\n        webAudioModel.addEventListener(\"ContextChanged\" /* ModelEvents.CONTEXT_CHANGED */, this.contextChanged, this);\n        webAudioModel.addEventListener(\"ModelReset\" /* ModelEvents.MODEL_RESET */, this.reset, this);\n        webAudioModel.addEventListener(\"ModelSuspend\" /* ModelEvents.MODEL_SUSPEND */, this.suspendModel, this);\n        webAudioModel.addEventListener(\"AudioListenerCreated\" /* ModelEvents.AUDIO_LISTENER_CREATED */, this.audioListenerCreated, this);\n        webAudioModel.addEventListener(\"AudioListenerWillBeDestroyed\" /* ModelEvents.AUDIO_LISTENER_WILL_BE_DESTROYED */, this.audioListenerWillBeDestroyed, this);\n        webAudioModel.addEventListener(\"AudioNodeCreated\" /* ModelEvents.AUDIO_NODE_CREATED */, this.audioNodeCreated, this);\n        webAudioModel.addEventListener(\"AudioNodeWillBeDestroyed\" /* ModelEvents.AUDIO_NODE_WILL_BE_DESTROYED */, this.audioNodeWillBeDestroyed, this);\n        webAudioModel.addEventListener(\"AudioParamCreated\" /* ModelEvents.AUDIO_PARAM_CREATED */, this.audioParamCreated, this);\n        webAudioModel.addEventListener(\"AudioParamWillBeDestroyed\" /* ModelEvents.AUDIO_PARAM_WILL_BE_DESTROYED */, this.audioParamWillBeDestroyed, this);\n        webAudioModel.addEventListener(\"NodesConnected\" /* ModelEvents.NODES_CONNECTED */, this.nodesConnected, this);\n        webAudioModel.addEventListener(\"NodesDisconnected\" /* ModelEvents.NODES_DISCONNECTED */, this.nodesDisconnected, this);\n        webAudioModel.addEventListener(\"NodeParamConnected\" /* ModelEvents.NODE_PARAM_CONNECTED */, this.nodeParamConnected, this);\n        webAudioModel.addEventListener(\"NodeParamDisconnected\" /* ModelEvents.NODE_PARAM_DISCONNECTED */, this.nodeParamDisconnected, this);\n    }\n    removeEventListeners(webAudioModel) {\n        webAudioModel.removeEventListener(\"ContextCreated\" /* ModelEvents.CONTEXT_CREATED */, this.contextCreated, this);\n        webAudioModel.removeEventListener(\"ContextDestroyed\" /* ModelEvents.CONTEXT_DESTROYED */, this.contextDestroyed, this);\n        webAudioModel.removeEventListener(\"ContextChanged\" /* ModelEvents.CONTEXT_CHANGED */, this.contextChanged, this);\n        webAudioModel.removeEventListener(\"ModelReset\" /* ModelEvents.MODEL_RESET */, this.reset, this);\n        webAudioModel.removeEventListener(\"ModelSuspend\" /* ModelEvents.MODEL_SUSPEND */, this.suspendModel, this);\n        webAudioModel.removeEventListener(\"AudioListenerCreated\" /* ModelEvents.AUDIO_LISTENER_CREATED */, this.audioListenerCreated, this);\n        webAudioModel.removeEventListener(\"AudioListenerWillBeDestroyed\" /* ModelEvents.AUDIO_LISTENER_WILL_BE_DESTROYED */, this.audioListenerWillBeDestroyed, this);\n        webAudioModel.removeEventListener(\"AudioNodeCreated\" /* ModelEvents.AUDIO_NODE_CREATED */, this.audioNodeCreated, this);\n        webAudioModel.removeEventListener(\"AudioNodeWillBeDestroyed\" /* ModelEvents.AUDIO_NODE_WILL_BE_DESTROYED */, this.audioNodeWillBeDestroyed, this);\n        webAudioModel.removeEventListener(\"AudioParamCreated\" /* ModelEvents.AUDIO_PARAM_CREATED */, this.audioParamCreated, this);\n        webAudioModel.removeEventListener(\"AudioParamWillBeDestroyed\" /* ModelEvents.AUDIO_PARAM_WILL_BE_DESTROYED */, this.audioParamWillBeDestroyed, this);\n        webAudioModel.removeEventListener(\"NodesConnected\" /* ModelEvents.NODES_CONNECTED */, this.nodesConnected, this);\n        webAudioModel.removeEventListener(\"NodesDisconnected\" /* ModelEvents.NODES_DISCONNECTED */, this.nodesDisconnected, this);\n        webAudioModel.removeEventListener(\"NodeParamConnected\" /* ModelEvents.NODE_PARAM_CONNECTED */, this.nodeParamConnected, this);\n        webAudioModel.removeEventListener(\"NodeParamDisconnected\" /* ModelEvents.NODE_PARAM_DISCONNECTED */, this.nodeParamDisconnected, this);\n    }\n    contextCreated(event) {\n        const context = event.data;\n        this.graphManager.createContext(context.contextId);\n        this.contextSelector.contextCreated(event);\n    }\n    contextDestroyed(event) {\n        const contextId = event.data;\n        this.graphManager.destroyContext(contextId);\n        this.contextSelector.contextDestroyed(event);\n    }\n    contextChanged(event) {\n        const context = event.data;\n        if (!this.graphManager.hasContext(context.contextId)) {\n            return;\n        }\n        this.contextSelector.contextChanged(event);\n    }\n    reset() {\n        if (this.landingPage.isShowing()) {\n            this.landingPage.detach();\n        }\n        this.contextSelector.reset();\n        this.detailViewContainer.removeChildren();\n        this.landingPage.show(this.detailViewContainer);\n        this.graphManager.clearGraphs();\n    }\n    suspendModel() {\n        this.graphManager.clearGraphs();\n    }\n    audioListenerCreated(event) {\n        const listener = event.data;\n        const graph = this.graphManager.getGraph(listener.contextId);\n        if (!graph) {\n            return;\n        }\n        graph.addNode({\n            nodeId: listener.listenerId,\n            nodeType: 'Listener',\n            numberOfInputs: 0,\n            numberOfOutputs: 0,\n        });\n    }\n    audioListenerWillBeDestroyed(event) {\n        const { contextId, listenerId } = event.data;\n        const graph = this.graphManager.getGraph(contextId);\n        if (!graph) {\n            return;\n        }\n        graph.removeNode(listenerId);\n    }\n    audioNodeCreated(event) {\n        const node = event.data;\n        const graph = this.graphManager.getGraph(node.contextId);\n        if (!graph) {\n            return;\n        }\n        graph.addNode({\n            nodeId: node.nodeId,\n            nodeType: node.nodeType,\n            numberOfInputs: node.numberOfInputs,\n            numberOfOutputs: node.numberOfOutputs,\n        });\n    }\n    audioNodeWillBeDestroyed(event) {\n        const { contextId, nodeId } = event.data;\n        const graph = this.graphManager.getGraph(contextId);\n        if (!graph) {\n            return;\n        }\n        graph.removeNode(nodeId);\n    }\n    audioParamCreated(event) {\n        const param = event.data;\n        const graph = this.graphManager.getGraph(param.contextId);\n        if (!graph) {\n            return;\n        }\n        graph.addParam({\n            paramId: param.paramId,\n            paramType: param.paramType,\n            nodeId: param.nodeId,\n        });\n    }\n    audioParamWillBeDestroyed(event) {\n        const { contextId, paramId } = event.data;\n        const graph = this.graphManager.getGraph(contextId);\n        if (!graph) {\n            return;\n        }\n        graph.removeParam(paramId);\n    }\n    nodesConnected(event) {\n        const { contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex } = event.data;\n        const graph = this.graphManager.getGraph(contextId);\n        if (!graph) {\n            return;\n        }\n        graph.addNodeToNodeConnection({\n            sourceId,\n            destinationId,\n            sourceOutputIndex,\n            destinationInputIndex,\n        });\n    }\n    nodesDisconnected(event) {\n        const { contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex } = event.data;\n        const graph = this.graphManager.getGraph(contextId);\n        if (!graph) {\n            return;\n        }\n        graph.removeNodeToNodeConnection({\n            sourceId,\n            destinationId,\n            sourceOutputIndex,\n            destinationInputIndex,\n        });\n    }\n    nodeParamConnected(event) {\n        const { contextId, sourceId, destinationId, sourceOutputIndex } = event.data;\n        const graph = this.graphManager.getGraph(contextId);\n        if (!graph) {\n            return;\n        }\n        // Since the destinationId is AudioParamId, we need to find the nodeId as the\n        // real destinationId.\n        const nodeId = graph.getNodeIdByParamId(destinationId);\n        if (!nodeId) {\n            return;\n        }\n        graph.addNodeToParamConnection({\n            sourceId,\n            destinationId: nodeId,\n            sourceOutputIndex,\n            destinationParamId: destinationId,\n        });\n    }\n    nodeParamDisconnected(event) {\n        const { contextId, sourceId, destinationId, sourceOutputIndex } = event.data;\n        const graph = this.graphManager.getGraph(contextId);\n        if (!graph) {\n            return;\n        }\n        // Since the destinationId is AudioParamId, we need to find the nodeId as the\n        // real destinationId.\n        const nodeId = graph.getNodeIdByParamId(destinationId);\n        if (!nodeId) {\n            return;\n        }\n        graph.removeNodeToParamConnection({\n            sourceId,\n            destinationId: nodeId,\n            sourceOutputIndex,\n            destinationParamId: destinationId,\n        });\n    }\n    updateDetailView(context) {\n        if (this.landingPage.isShowing()) {\n            this.landingPage.detach();\n        }\n        const detailBuilder = new ContextDetailBuilder(context);\n        this.detailViewContainer.removeChildren();\n        this.detailViewContainer.appendChild(detailBuilder.getFragment());\n    }\n    updateSummaryBar(contextId, contextRealtimeData) {\n        const summaryBuilder = new ContextSummaryBuilder(contextId, contextRealtimeData);\n        this.summaryBarContainer.removeChildren();\n        this.summaryBarContainer.appendChild(summaryBuilder.getFragment());\n    }\n    clearSummaryBar() {\n        this.summaryBarContainer.removeChildren();\n    }\n    async pollRealtimeData() {\n        const context = this.contextSelector.selectedContext();\n        if (!context) {\n            this.clearSummaryBar();\n            return;\n        }\n        for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n            // Display summary only for real-time context.\n            if (context.contextType === 'realtime') {\n                if (!this.graphManager.hasContext(context.contextId)) {\n                    continue;\n                }\n                const realtimeData = await model.requestRealtimeData(context.contextId);\n                if (realtimeData) {\n                    this.updateSummaryBar(context.contextId, realtimeData);\n                }\n            }\n            else {\n                this.clearSummaryBar();\n            }\n        }\n    }\n}\n//# sourceMappingURL=WebAudioView.js.map"],"names":["UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","ContextDetailBuilder","context","title","i18n.i18n.lockedString","subtitle","UI.Fragment.html","entry","value","unit","valueWithUnit","ContextSummaryBuilder","contextId","contextRealtimeData","time","mean","stddev","capacity","styles","AudioContextSelector","Common.ObjectWrapper.ObjectWrapper","UI.ListModel.ListModel","UI.SoftDropDown.SoftDropDown","UI.Toolbar.ToolbarItem","hasItems","contextIndex","changedContext","item","element","UI.UIUtils.createShadowRootWithCoreStyles","audioContextSelectorStyles","UI.UIUtils.createTextChild","Platform.StringUtilities.trimEndWithMaxLength","from","to","fromElement","toElement","_item","WebAudioModel","SDK.SDKModel.SDKModel","target","SDK.TargetManager.TargetManager","SDK.ResourceTreeModel.ResourceTreeModel","SDK.ResourceTreeModel.Events","listener","listenerId","node","nodeId","param","paramId","sourceId","destinationId","sourceOutputIndex","destinationInputIndex","PortPadding","InputPortRadius","AudioParamRadius","LeftMarginOfText","RightMarginOfText","LeftSideTopPadding","BottomPaddingWithoutParam","BottomPaddingWithParam","ArrowHeadSize","GraphPadding","GraphMargin","TotalInputPortHeight","TotalOutputPortHeight","TotalParamPortHeight","NodeLabelFontStyle","ParamLabelFontStyle","calculateInputPortXY","portIndex","calculateOutputPortXY","nodeSize","numberOfOutputs","width","height","outputPortY","calculateParamPortXY","offsetY","NodeView","data","label","paramType","numberOfParams","x","y","generateParamPortId","type","result","port","inputPortSectionHeight","nodeLabelLength","measureTextWidth","leftSideMaxHeight","paramLabelLength","i","generateInputPortId","portId","generateOutputPortId","inputIndex","outputIndex","NodeLabelGenerator","nodeType","contextForFontTextMeasuring","text","fontStyle","UI.UIUtils.measureTextWidth","EdgeView","edgePortsIds","generateEdgePortIdsByData","edgeId","sourcePortId","destinationPortId","getDestinationPortId","portData","GraphView","Platform.MapUtilities.Multimap","edgeData","edge","edgePortIds","GraphManager","graph","WebAudioView","UI.ThrottledWidget.ThrottledWidget","VisualLogging.panel","toolbarContainer","toolbar","UI.Toolbar.Toolbar","VisualLogging.toolbar","GraphVisualizer.GraphManager.GraphManager","UI.Widget.VBox","event","webAudioStyles","model","webAudioModel","detailBuilder","summaryBuilder","realtimeData"],"mappings":"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"}