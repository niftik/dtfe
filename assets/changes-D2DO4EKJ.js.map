{"version":3,"file":"changes-D2DO4EKJ.js","sources":["../../panels/changes/changesSidebar.css.js","../../panels/changes/ChangesSidebar.js","../../panels/changes/changesView.css.js","../../panels/changes/ChangesView.js"],"sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.tree-outline li {\n  min-height: 20px;\n}\n\ndevtools-icon {\n  color: var(--icon-file-default);\n}\n\n.navigator-sm-script-tree-item devtools-icon,\n.navigator-script-tree-item devtools-icon,\n.navigator-snippet-tree-item devtools-icon {\n  color: var(--icon-file-script);\n}\n\n.navigator-sm-stylesheet-tree-item devtools-icon,\n.navigator-stylesheet-tree-item devtools-icon {\n  color: var(--icon-file-styles);\n}\n\n.navigator-image-tree-item devtools-icon {\n  color: var(--icon-file-image);\n}\n\n.navigator-font-tree-item devtools-icon {\n  color: var(--icon-file-font);\n}\n\n.tree-outline li:hover:not(.selected) .selection {\n  display: block;\n\n  & devtools-icon {\n    color: var(--icon-default-hover);\n  }\n}\n\n@media (forced-colors: active) {\n  li,\n  devtools-icon {\n    forced-color-adjust: none;\n    color: ButtonText !important; /* stylelint-disable-line declaration-no-important */\n  }\n}\n\n/*# sourceURL=changesSidebar.css */\n`);\n\nexport default styles;\n","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as Snippets from '../snippets/snippets.js';\nimport changesSidebarStyles from './changesSidebar.css.js';\nconst UIStrings = {\n    /**\n     *@description Name of an item from source map\n     *@example {compile.html} PH1\n     */\n    sFromSourceMap: '{PH1} (from source map)',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/changes/ChangesSidebar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ChangesSidebar extends Common.ObjectWrapper.eventMixin(UI.Widget.Widget) {\n    treeoutline;\n    treeElements;\n    workspaceDiff;\n    constructor(workspaceDiff) {\n        super();\n        this.treeoutline = new UI.TreeOutline.TreeOutlineInShadow();\n        this.treeoutline.setFocusable(false);\n        this.treeoutline.setComparator((a, b) => Platform.StringUtilities.compare(a.titleAsText(), b.titleAsText()));\n        this.treeoutline.addEventListener(UI.TreeOutline.Events.ElementSelected, this.selectionChanged, this);\n        UI.ARIAUtils.markAsTablist(this.treeoutline.contentElement);\n        this.element.appendChild(this.treeoutline.element);\n        this.element.setAttribute('jslog', `${VisualLogging.pane('sidebar').track({ resize: true })}`);\n        this.treeElements = new Map();\n        this.workspaceDiff = workspaceDiff;\n        this.workspaceDiff.modifiedUISourceCodes().forEach(this.addUISourceCode.bind(this));\n        this.workspaceDiff.addEventListener(\"ModifiedStatusChanged\" /* WorkspaceDiff.WorkspaceDiff.Events.MODIFIED_STATUS_CHANGED */, this.uiSourceCodeMofiedStatusChanged, this);\n    }\n    selectUISourceCode(uiSourceCode, omitFocus) {\n        const treeElement = this.treeElements.get(uiSourceCode);\n        if (!treeElement) {\n            return;\n        }\n        treeElement.select(omitFocus);\n    }\n    selectedUISourceCode() {\n        // @ts-ignore uiSourceCode seems to be dynamically attached.\n        return this.treeoutline.selectedTreeElement ? this.treeoutline.selectedTreeElement.uiSourceCode : null;\n    }\n    selectionChanged() {\n        this.dispatchEventToListeners(\"SelectedUISourceCodeChanged\" /* Events.SELECTED_UI_SOURCE_CODE_CHANGED */);\n    }\n    uiSourceCodeMofiedStatusChanged(event) {\n        if (event.data.isModified) {\n            this.addUISourceCode(event.data.uiSourceCode);\n        }\n        else {\n            this.removeUISourceCode(event.data.uiSourceCode);\n        }\n    }\n    removeUISourceCode(uiSourceCode) {\n        const treeElement = this.treeElements.get(uiSourceCode);\n        this.treeElements.delete(uiSourceCode);\n        if (this.treeoutline.selectedTreeElement === treeElement) {\n            const nextElementToSelect = treeElement.previousSibling || treeElement.nextSibling;\n            if (nextElementToSelect) {\n                nextElementToSelect.select(true);\n            }\n            else {\n                treeElement.deselect();\n                this.selectionChanged();\n            }\n        }\n        if (treeElement) {\n            this.treeoutline.removeChild(treeElement);\n            treeElement.dispose();\n        }\n        if (this.treeoutline.rootElement().childCount() === 0) {\n            this.treeoutline.setFocusable(false);\n        }\n    }\n    addUISourceCode(uiSourceCode) {\n        const treeElement = new UISourceCodeTreeElement(uiSourceCode);\n        this.treeElements.set(uiSourceCode, treeElement);\n        this.treeoutline.setFocusable(true);\n        this.treeoutline.appendChild(treeElement);\n        if (!this.treeoutline.selectedTreeElement) {\n            treeElement.select(true);\n        }\n    }\n    wasShown() {\n        super.wasShown();\n        this.treeoutline.registerCSSFiles([changesSidebarStyles]);\n    }\n}\nexport class UISourceCodeTreeElement extends UI.TreeOutline.TreeElement {\n    uiSourceCode;\n    eventListeners;\n    constructor(uiSourceCode) {\n        super();\n        this.uiSourceCode = uiSourceCode;\n        this.listItemElement.classList.add('navigator-' + uiSourceCode.contentType().name() + '-tree-item');\n        UI.ARIAUtils.markAsTab(this.listItemElement);\n        let iconName = 'document';\n        if (Snippets.ScriptSnippetFileSystem.isSnippetsUISourceCode(this.uiSourceCode)) {\n            iconName = 'snippet';\n        }\n        const defaultIcon = IconButton.Icon.create(iconName);\n        this.setLeadingIcons([defaultIcon]);\n        this.eventListeners = [\n            uiSourceCode.addEventListener(Workspace.UISourceCode.Events.TitleChanged, this.updateTitle, this),\n            uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this.updateTitle, this),\n            uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this.updateTitle, this),\n        ];\n        this.updateTitle();\n    }\n    updateTitle() {\n        let titleText = this.uiSourceCode.displayName();\n        if (this.uiSourceCode.isDirty()) {\n            titleText = '*' + titleText;\n        }\n        this.title = titleText;\n        let tooltip = this.uiSourceCode.url();\n        if (this.uiSourceCode.contentType().isFromSourceMap()) {\n            tooltip = i18nString(UIStrings.sFromSourceMap, { PH1: this.uiSourceCode.displayName() });\n        }\n        this.tooltip = tooltip;\n    }\n    dispose() {\n        Common.EventTarget.removeEventListeners(this.eventListeners);\n    }\n}\n//# sourceMappingURL=ChangesSidebar.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (c) 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n[slot=\"insertion-point-main\"] {\n  flex-direction: column;\n  display: flex;\n}\n\n[slot=\"insertion-point-sidebar\"] {\n  overflow: auto;\n}\n\n.diff-container {\n  flex: 1;\n  overflow: auto;\n}\n\n:focus.selected {\n  background-color: var(--sys-color-tonal-container);\n  color: var(--sys-color-on-tonal-container);\n}\n\n.changes-toolbar {\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n}\n\n/*# sourceURL=changesView.css */\n`);\n\nexport default styles;\n","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport { PanelUtils } from '../../panels/utils/utils.js';\nimport * as Diff from '../../third_party/diff/diff.js';\nimport * as DiffView from '../../ui/components/diff_view/diff_view.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { ChangesSidebar } from './ChangesSidebar.js';\nimport changesViewStyles from './changesView.css.js';\nconst UIStrings = {\n    /**\n     *@description Text in Changes View of the Changes tab\n     */\n    noChanges: 'No changes',\n    /**\n     *@description Text in Changes View of the Changes tab\n     */\n    binaryData: 'Binary data',\n    /**\n     * @description Text in the Changes tab that indicates how many lines of code have changed in the\n     * selected file. An insertion refers to an added line of code. The (+) is a visual cue to indicate\n     * lines were added (not translatable).\n     */\n    sInsertions: '{n, plural, =1 {# insertion (+)} other {# insertions (+)}}',\n    /**\n     * @description Text in the Changes tab that indicates how many lines of code have changed in the\n     * selected file. A deletion refers to a removed line of code. The (-) is a visual cue to indicate\n     * lines were removed (not translatable).\n     */\n    sDeletions: '{n, plural, =1 {# deletion (-)} other {# deletions (-)}}',\n    /**\n     *@description Text for a button in the Changes tool that copies all the changes from the currently open file.\n     */\n    copy: 'Copy',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/changes/ChangesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nfunction diffStats(diff) {\n    const insertions = diff.reduce((ins, token) => ins + (token[0] === Diff.Diff.Operation.Insert ? token[1].length : 0), 0);\n    const deletions = diff.reduce((ins, token) => ins + (token[0] === Diff.Diff.Operation.Delete ? token[1].length : 0), 0);\n    const deletionText = i18nString(UIStrings.sDeletions, { n: deletions });\n    const insertionText = i18nString(UIStrings.sInsertions, { n: insertions });\n    return `${insertionText}, ${deletionText}`;\n}\nexport class ChangesView extends UI.Widget.VBox {\n    emptyWidget;\n    workspaceDiff;\n    changesSidebar;\n    selectedUISourceCode;\n    #selectedSourceCodeFormattedMapping;\n    diffContainer;\n    toolbar;\n    diffStats;\n    diffView;\n    constructor() {\n        super(true);\n        this.element.setAttribute('jslog', `${VisualLogging.panel('changes').track({ resize: true })}`);\n        const splitWidget = new UI.SplitWidget.SplitWidget(true /* vertical */, false /* sidebar on left */);\n        const mainWidget = new UI.Widget.Widget();\n        splitWidget.setMainWidget(mainWidget);\n        splitWidget.show(this.contentElement);\n        this.emptyWidget = new UI.EmptyWidget.EmptyWidget('');\n        this.emptyWidget.show(mainWidget.element);\n        this.workspaceDiff = WorkspaceDiff.WorkspaceDiff.workspaceDiff();\n        this.changesSidebar = new ChangesSidebar(this.workspaceDiff);\n        this.changesSidebar.addEventListener(\"SelectedUISourceCodeChanged\" /* Events.SELECTED_UI_SOURCE_CODE_CHANGED */, this.selectedUISourceCodeChanged, this);\n        splitWidget.setSidebarWidget(this.changesSidebar);\n        this.selectedUISourceCode = null;\n        this.diffContainer = mainWidget.element.createChild('div', 'diff-container');\n        UI.ARIAUtils.markAsTabpanel(this.diffContainer);\n        this.diffContainer.addEventListener('click', event => this.click(event));\n        this.diffView = this.diffContainer.appendChild(new DiffView.DiffView.DiffView());\n        this.toolbar = new UI.Toolbar.Toolbar('changes-toolbar', mainWidget.element);\n        this.toolbar.element.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n        this.toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButtonForId('changes.revert'));\n        this.diffStats = new UI.Toolbar.ToolbarText('');\n        this.toolbar.appendToolbarItem(this.diffStats);\n        this.toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSeparator());\n        this.toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButtonForId('changes.copy', {\n            showLabel: true,\n            label() {\n                return i18nString(UIStrings.copy);\n            },\n        }));\n        this.hideDiff(i18nString(UIStrings.noChanges));\n        this.selectedUISourceCodeChanged();\n    }\n    selectedUISourceCodeChanged() {\n        this.revealUISourceCode(this.changesSidebar.selectedUISourceCode());\n        UI.ActionRegistry.ActionRegistry.instance()\n            .getAction('changes.copy')\n            .setEnabled(this.selectedUISourceCode?.contentType() === Common.ResourceType.resourceTypes.Stylesheet);\n    }\n    revert() {\n        const uiSourceCode = this.selectedUISourceCode;\n        if (!uiSourceCode) {\n            return;\n        }\n        void this.workspaceDiff.revertToOriginal(uiSourceCode);\n    }\n    async copy() {\n        const uiSourceCode = this.selectedUISourceCode;\n        if (!uiSourceCode) {\n            return;\n        }\n        const diffResponse = await this.workspaceDiff.requestDiff(uiSourceCode, { shouldFormatDiff: true });\n        // Diff array with real diff will contain at least 2 lines.\n        if (!diffResponse || diffResponse?.diff.length < 2) {\n            return;\n        }\n        const changes = await PanelUtils.formatCSSChangesFromDiff(diffResponse.diff);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(changes);\n    }\n    click(event) {\n        if (!this.selectedUISourceCode) {\n            return;\n        }\n        for (const target of event.composedPath()) {\n            if (!(target instanceof HTMLElement)) {\n                continue;\n            }\n            const selection = target.ownerDocument.getSelection();\n            if (selection?.toString()) {\n                // We abort source revelation when user has text selection.\n                break;\n            }\n            if (target.classList.contains('diff-line-content') && target.hasAttribute('data-line-number')) {\n                let lineNumber = Number(target.dataset.lineNumber) - 1;\n                // Unfortunately, caretRangeFromPoint is broken in shadow\n                // roots, which makes determining the character offset more\n                // work than justified here.\n                if (this.#selectedSourceCodeFormattedMapping) {\n                    lineNumber = this.#selectedSourceCodeFormattedMapping.formattedToOriginal(lineNumber, 0)[0];\n                }\n                void Common.Revealer.reveal(this.selectedUISourceCode.uiLocation(lineNumber, 0), false);\n                event.consume(true);\n                break;\n            }\n            else if (target.classList.contains('diff-listing')) {\n                break;\n            }\n        }\n    }\n    revealUISourceCode(uiSourceCode) {\n        if (this.selectedUISourceCode === uiSourceCode) {\n            return;\n        }\n        if (this.selectedUISourceCode) {\n            this.workspaceDiff.unsubscribeFromDiffChange(this.selectedUISourceCode, this.refreshDiff, this);\n        }\n        if (uiSourceCode && this.isShowing()) {\n            this.workspaceDiff.subscribeToDiffChange(uiSourceCode, this.refreshDiff, this);\n        }\n        this.selectedUISourceCode = uiSourceCode;\n        void this.refreshDiff();\n    }\n    wasShown() {\n        UI.Context.Context.instance().setFlavor(ChangesView, this);\n        this.registerCSSFiles([changesViewStyles]);\n        super.wasShown();\n        void this.refreshDiff();\n    }\n    willHide() {\n        super.willHide();\n        UI.Context.Context.instance().setFlavor(ChangesView, null);\n    }\n    async refreshDiff() {\n        if (!this.isShowing()) {\n            return;\n        }\n        if (!this.selectedUISourceCode) {\n            this.renderDiffRows();\n            return;\n        }\n        const uiSourceCode = this.selectedUISourceCode;\n        if (!uiSourceCode.contentType().isTextType()) {\n            this.hideDiff(i18nString(UIStrings.binaryData));\n            return;\n        }\n        const diffResponse = await this.workspaceDiff.requestDiff(uiSourceCode, { shouldFormatDiff: true });\n        if (this.selectedUISourceCode !== uiSourceCode) {\n            return;\n        }\n        this.#selectedSourceCodeFormattedMapping = diffResponse?.formattedCurrentMapping;\n        this.renderDiffRows(diffResponse?.diff);\n    }\n    hideDiff(message) {\n        this.diffStats.setText('');\n        this.toolbar.setEnabled(false);\n        this.diffContainer.style.display = 'none';\n        this.emptyWidget.text = message;\n        this.emptyWidget.showWidget();\n    }\n    renderDiffRows(diff) {\n        if (!diff || (diff.length === 1 && diff[0][0] === Diff.Diff.Operation.Equal)) {\n            this.hideDiff(i18nString(UIStrings.noChanges));\n        }\n        else {\n            this.diffStats.setText(diffStats(diff));\n            this.toolbar.setEnabled(true);\n            this.emptyWidget.hideWidget();\n            const mimeType = this.selectedUISourceCode.mimeType();\n            this.diffContainer.style.display = 'block';\n            this.diffView.data = { diff, mimeType };\n        }\n    }\n}\nexport class ActionDelegate {\n    handleAction(context, actionId) {\n        const changesView = context.flavor(ChangesView);\n        if (changesView === null) {\n            return false;\n        }\n        switch (actionId) {\n            case 'changes.revert':\n                changesView.revert();\n                return true;\n            case 'changes.copy':\n                void changesView.copy();\n                return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=ChangesView.js.map"],"names":["styles","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","ChangesSidebar","Common.ObjectWrapper.eventMixin","UI.Widget.Widget","workspaceDiff","UI.TreeOutline.TreeOutlineInShadow","a","b","Platform.StringUtilities.compare","UI.TreeOutline.Events","UI.ARIAUtils.markAsTablist","VisualLogging.pane","uiSourceCode","omitFocus","treeElement","event","nextElementToSelect","UISourceCodeTreeElement","changesSidebarStyles","UI.TreeOutline.TreeElement","UI.ARIAUtils.markAsTab","iconName","Snippets.ScriptSnippetFileSystem.isSnippetsUISourceCode","defaultIcon","IconButton.Icon.create","Workspace.UISourceCode.Events","titleText","tooltip","Common.EventTarget.removeEventListeners","diffStats","diff","insertions","ins","token","Diff.Diff.Operation","deletions","deletionText","ChangesView","UI.Widget.VBox","#selectedSourceCodeFormattedMapping","VisualLogging.panel","splitWidget","UI.SplitWidget.SplitWidget","mainWidget","UI.EmptyWidget.EmptyWidget","WorkspaceDiff.WorkspaceDiff.workspaceDiff","UI.ARIAUtils.markAsTabpanel","DiffView.DiffView.DiffView","UI.Toolbar.Toolbar","VisualLogging.toolbar","UI.Toolbar.ToolbarText","UI.Toolbar.ToolbarSeparator","UI.ActionRegistry.ActionRegistry","Common.ResourceType.resourceTypes","diffResponse","changes","PanelUtils","Host.InspectorFrontendHost.InspectorFrontendHostInstance","target","lineNumber","Common.Revealer.reveal","UI.Context.Context","changesViewStyles","message","mimeType","ActionDelegate","context","actionId","changesView"],"mappings":"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"}