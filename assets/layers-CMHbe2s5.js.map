{"version":3,"file":"layers-CMHbe2s5.js","sources":["../../panels/layers/LayerPaintProfilerView.js","../../panels/layers/LayerTreeModel.js","../../panels/layers/LayersPanel.js"],"sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as LayerViewer from '../layer_viewer/layer_viewer.js';\nexport class LayerPaintProfilerView extends UI.SplitWidget.SplitWidget {\n    logTreeView;\n    paintProfilerView;\n    constructor(showImageCallback) {\n        super(true, false);\n        this.element.setAttribute('jslog', `${VisualLogging.pane('layers.paint-profiler').track({ resize: true })}`);\n        this.logTreeView = new LayerViewer.PaintProfilerView.PaintProfilerCommandLogView();\n        this.setSidebarWidget(this.logTreeView);\n        this.paintProfilerView = new LayerViewer.PaintProfilerView.PaintProfilerView(showImageCallback);\n        this.setMainWidget(this.paintProfilerView);\n        this.paintProfilerView.addEventListener(\"WindowChanged\" /* LayerViewer.PaintProfilerView.Events.WINDOW_CHANGED */, this.onWindowChanged, this);\n        this.logTreeView.focus();\n    }\n    reset() {\n        void this.paintProfilerView.setSnapshotAndLog(null, [], null);\n    }\n    profile(snapshot) {\n        void snapshot.commandLog().then(log => setSnapshotAndLog.call(this, snapshot, log));\n        function setSnapshotAndLog(snapshot, log) {\n            this.logTreeView.setCommandLog(log || []);\n            void this.paintProfilerView.setSnapshotAndLog(snapshot, log || [], null);\n            if (snapshot) {\n                snapshot.release();\n            }\n        }\n    }\n    setScale(scale) {\n        this.paintProfilerView.setScale(scale);\n    }\n    onWindowChanged() {\n        this.logTreeView.updateWindow(this.paintProfilerView.selectionWindow());\n    }\n}\n//# sourceMappingURL=LayerPaintProfilerView.js.map","/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nexport class LayerTreeModel extends SDK.SDKModel.SDKModel {\n    layerTreeAgent;\n    paintProfilerModel;\n    layerTreeInternal;\n    throttler;\n    enabled;\n    lastPaintRectByLayerId;\n    constructor(target) {\n        super(target);\n        this.layerTreeAgent = target.layerTreeAgent();\n        target.registerLayerTreeDispatcher(new LayerTreeDispatcher(this));\n        this.paintProfilerModel =\n            target.model(SDK.PaintProfiler.PaintProfilerModel);\n        const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n        if (resourceTreeModel) {\n            resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.PrimaryPageChanged, this.onPrimaryPageChanged, this);\n        }\n        this.layerTreeInternal = null;\n        this.throttler = new Common.Throttler.Throttler(20);\n    }\n    async disable() {\n        if (!this.enabled) {\n            return;\n        }\n        this.enabled = false;\n        await this.layerTreeAgent.invoke_disable();\n    }\n    enable() {\n        if (this.enabled) {\n            return;\n        }\n        this.enabled = true;\n        void this.forceEnable();\n    }\n    async forceEnable() {\n        this.lastPaintRectByLayerId = new Map();\n        if (!this.layerTreeInternal) {\n            this.layerTreeInternal = new AgentLayerTree(this);\n        }\n        await this.layerTreeAgent.invoke_enable();\n    }\n    layerTree() {\n        return this.layerTreeInternal;\n    }\n    async layerTreeChanged(layers) {\n        if (!this.enabled) {\n            return;\n        }\n        void this.throttler.schedule(this.innerSetLayers.bind(this, layers));\n    }\n    async innerSetLayers(layers) {\n        const layerTree = this.layerTreeInternal;\n        await layerTree.setLayers(layers);\n        if (!this.lastPaintRectByLayerId) {\n            this.lastPaintRectByLayerId = new Map();\n        }\n        for (const layerId of this.lastPaintRectByLayerId.keys()) {\n            const lastPaintRect = this.lastPaintRectByLayerId.get(layerId);\n            const layer = layerTree.layerById(layerId);\n            if (layer) {\n                layer.setLastPaintRect(lastPaintRect);\n            }\n        }\n        this.lastPaintRectByLayerId = new Map();\n        this.dispatchEventToListeners(Events.LayerTreeChanged);\n    }\n    layerPainted(layerId, clipRect) {\n        if (!this.enabled) {\n            return;\n        }\n        const layerTree = this.layerTreeInternal;\n        const layer = layerTree.layerById(layerId);\n        if (!layer) {\n            if (!this.lastPaintRectByLayerId) {\n                this.lastPaintRectByLayerId = new Map();\n            }\n            this.lastPaintRectByLayerId.set(layerId, clipRect);\n            return;\n        }\n        layer.didPaint(clipRect);\n        this.dispatchEventToListeners(Events.LayerPainted, layer);\n    }\n    onPrimaryPageChanged() {\n        this.layerTreeInternal = null;\n        if (this.enabled) {\n            void this.forceEnable();\n        }\n    }\n}\nSDK.SDKModel.SDKModel.register(LayerTreeModel, { capabilities: 2 /* SDK.Target.Capability.DOM */, autostart: false });\nexport var Events;\n(function (Events) {\n    /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n    Events[\"LayerTreeChanged\"] = \"LayerTreeChanged\";\n    Events[\"LayerPainted\"] = \"LayerPainted\";\n    /* eslint-enable @typescript-eslint/naming-convention */\n})(Events || (Events = {}));\nexport class AgentLayerTree extends SDK.LayerTreeBase.LayerTreeBase {\n    layerTreeModel;\n    constructor(layerTreeModel) {\n        super(layerTreeModel.target());\n        this.layerTreeModel = layerTreeModel;\n    }\n    async setLayers(payload) {\n        if (!payload) {\n            this.innerSetLayers(payload);\n            return;\n        }\n        const idsToResolve = new Set();\n        for (let i = 0; i < payload.length; ++i) {\n            const backendNodeId = payload[i].backendNodeId;\n            if (!backendNodeId || this.backendNodeIdToNode().has(backendNodeId)) {\n                continue;\n            }\n            idsToResolve.add(backendNodeId);\n        }\n        await this.resolveBackendNodeIds(idsToResolve);\n        this.innerSetLayers(payload);\n    }\n    innerSetLayers(layers) {\n        this.setRoot(null);\n        this.setContentRoot(null);\n        // Payload will be null when not in the composited mode.\n        if (!layers) {\n            return;\n        }\n        let root;\n        const oldLayersById = this.layersById;\n        this.layersById = new Map();\n        for (let i = 0; i < layers.length; ++i) {\n            const layerId = layers[i].layerId;\n            let layer = oldLayersById.get(layerId);\n            if (layer) {\n                layer.reset(layers[i]);\n            }\n            else {\n                layer = new AgentLayer(this.layerTreeModel, layers[i]);\n            }\n            this.layersById.set(layerId, layer);\n            const backendNodeId = layers[i].backendNodeId;\n            if (backendNodeId) {\n                layer.setNode(this.backendNodeIdToNode().get(backendNodeId) || null);\n            }\n            if (!this.contentRoot() && layer.drawsContent()) {\n                this.setContentRoot(layer);\n            }\n            const parentId = layer.parentId();\n            if (parentId) {\n                const parent = this.layersById.get(parentId);\n                if (!parent) {\n                    throw new Error(`Missing parent ${parentId} for layer ${layerId}`);\n                }\n                parent.addChild(layer);\n            }\n            else {\n                if (root) {\n                    console.assert(false, 'Multiple root layers');\n                }\n                root = layer;\n            }\n        }\n        if (root) {\n            this.setRoot(root);\n            root.calculateQuad(new WebKitCSSMatrix());\n        }\n    }\n}\nexport class AgentLayer {\n    scrollRectsInternal;\n    quadInternal;\n    childrenInternal;\n    image;\n    parentInternal;\n    layerPayload;\n    layerTreeModel;\n    nodeInternal;\n    lastPaintRectInternal;\n    paintCountInternal;\n    stickyPositionConstraintInternal;\n    constructor(layerTreeModel, layerPayload) {\n        this.layerTreeModel = layerTreeModel;\n        this.reset(layerPayload);\n    }\n    id() {\n        return this.layerPayload.layerId;\n    }\n    parentId() {\n        return this.layerPayload.parentLayerId || null;\n    }\n    parent() {\n        return this.parentInternal;\n    }\n    isRoot() {\n        return !this.parentId();\n    }\n    children() {\n        return this.childrenInternal;\n    }\n    addChild(childParam) {\n        const child = childParam;\n        if (child.parentInternal) {\n            console.assert(false, 'Child already has a parent');\n        }\n        this.childrenInternal.push(child);\n        child.parentInternal = this;\n    }\n    setNode(node) {\n        this.nodeInternal = node;\n    }\n    node() {\n        return this.nodeInternal || null;\n    }\n    nodeForSelfOrAncestor() {\n        let layer = this;\n        for (; layer; layer = layer.parentInternal) {\n            if (layer.nodeInternal) {\n                return layer.nodeInternal;\n            }\n        }\n        return null;\n    }\n    offsetX() {\n        return this.layerPayload.offsetX;\n    }\n    offsetY() {\n        return this.layerPayload.offsetY;\n    }\n    width() {\n        return this.layerPayload.width;\n    }\n    height() {\n        return this.layerPayload.height;\n    }\n    transform() {\n        return this.layerPayload.transform || null;\n    }\n    quad() {\n        return this.quadInternal;\n    }\n    anchorPoint() {\n        return [\n            this.layerPayload.anchorX || 0,\n            this.layerPayload.anchorY || 0,\n            this.layerPayload.anchorZ || 0,\n        ];\n    }\n    invisible() {\n        return this.layerPayload.invisible || false;\n    }\n    paintCount() {\n        return this.paintCountInternal || this.layerPayload.paintCount;\n    }\n    lastPaintRect() {\n        return this.lastPaintRectInternal || null;\n    }\n    setLastPaintRect(lastPaintRect) {\n        this.lastPaintRectInternal = lastPaintRect;\n    }\n    scrollRects() {\n        return this.scrollRectsInternal;\n    }\n    stickyPositionConstraint() {\n        return this.stickyPositionConstraintInternal || null;\n    }\n    async requestCompositingReasons() {\n        const reasons = await this.layerTreeModel.layerTreeAgent.invoke_compositingReasons({ layerId: this.id() });\n        return reasons.compositingReasons || [];\n    }\n    async requestCompositingReasonIds() {\n        const reasons = await this.layerTreeModel.layerTreeAgent.invoke_compositingReasons({ layerId: this.id() });\n        return reasons.compositingReasonIds || [];\n    }\n    drawsContent() {\n        return this.layerPayload.drawsContent;\n    }\n    gpuMemoryUsage() {\n        const bytesPerPixel = 4;\n        return this.drawsContent() ? this.width() * this.height() * bytesPerPixel : 0;\n    }\n    snapshots() {\n        const promise = this.layerTreeModel.paintProfilerModel.makeSnapshot(this.id()).then(snapshot => {\n            if (!snapshot) {\n                return null;\n            }\n            return { rect: { x: 0, y: 0, width: this.width(), height: this.height() }, snapshot };\n        });\n        return [promise];\n    }\n    didPaint(rect) {\n        this.lastPaintRectInternal = rect;\n        this.paintCountInternal = this.paintCount() + 1;\n        this.image = null;\n    }\n    reset(layerPayload) {\n        this.nodeInternal = null;\n        this.childrenInternal = [];\n        this.parentInternal = null;\n        this.paintCountInternal = 0;\n        this.layerPayload = layerPayload;\n        this.image = null;\n        this.scrollRectsInternal = this.layerPayload.scrollRects || [];\n        this.stickyPositionConstraintInternal = this.layerPayload.stickyPositionConstraint ?\n            new SDK.LayerTreeBase.StickyPositionConstraint(this.layerTreeModel.layerTree(), this.layerPayload.stickyPositionConstraint) :\n            null;\n    }\n    matrixFromArray(a) {\n        function toFixed9(x) {\n            return x.toFixed(9);\n        }\n        return new WebKitCSSMatrix('matrix3d(' + a.map(toFixed9).join(',') + ')');\n    }\n    calculateTransformToViewport(parentTransform) {\n        const offsetMatrix = new WebKitCSSMatrix().translate(this.layerPayload.offsetX, this.layerPayload.offsetY);\n        let matrix = offsetMatrix;\n        if (this.layerPayload.transform) {\n            const transformMatrix = this.matrixFromArray(this.layerPayload.transform);\n            const anchorVector = new UI.Geometry.Vector(this.layerPayload.width * this.anchorPoint()[0], this.layerPayload.height * this.anchorPoint()[1], this.anchorPoint()[2]);\n            const anchorPoint = UI.Geometry.multiplyVectorByMatrixAndNormalize(anchorVector, matrix);\n            const anchorMatrix = new WebKitCSSMatrix().translate(-anchorPoint.x, -anchorPoint.y, -anchorPoint.z);\n            matrix = anchorMatrix.inverse().multiply(transformMatrix.multiply(anchorMatrix.multiply(matrix)));\n        }\n        matrix = parentTransform.multiply(matrix);\n        return matrix;\n    }\n    createVertexArrayForRect(width, height) {\n        return [0, 0, 0, width, 0, 0, width, height, 0, 0, height, 0];\n    }\n    calculateQuad(parentTransform) {\n        const matrix = this.calculateTransformToViewport(parentTransform);\n        this.quadInternal = [];\n        const vertices = this.createVertexArrayForRect(this.layerPayload.width, this.layerPayload.height);\n        for (let i = 0; i < 4; ++i) {\n            const point = UI.Geometry.multiplyVectorByMatrixAndNormalize(new UI.Geometry.Vector(vertices[i * 3], vertices[i * 3 + 1], vertices[i * 3 + 2]), matrix);\n            this.quadInternal.push(point.x, point.y);\n        }\n        function calculateQuadForLayer(layer) {\n            layer.calculateQuad(matrix);\n        }\n        this.childrenInternal.forEach(calculateQuadForLayer);\n    }\n}\nclass LayerTreeDispatcher {\n    layerTreeModel;\n    constructor(layerTreeModel) {\n        this.layerTreeModel = layerTreeModel;\n    }\n    layerTreeDidChange({ layers }) {\n        void this.layerTreeModel.layerTreeChanged(layers || null);\n    }\n    layerPainted({ layerId, clip }) {\n        this.layerTreeModel.layerPainted(layerId, clip);\n    }\n}\n//# sourceMappingURL=LayerTreeModel.js.map","/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LayerViewer from '../layer_viewer/layer_viewer.js';\nimport { LayerPaintProfilerView } from './LayerPaintProfilerView.js';\nimport { Events, LayerTreeModel } from './LayerTreeModel.js';\nconst UIStrings = {\n    /**\n     *@description Text for the details of something\n     */\n    details: 'Details',\n    /**\n     *@description Title of the Profiler tool\n     */\n    profiler: 'Profiler',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layers/LayersPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet layersPanelInstance;\nexport class LayersPanel extends UI.Panel.PanelWithSidebar {\n    model;\n    layerViewHost;\n    layerTreeOutline;\n    rightSplitWidget;\n    layers3DView;\n    tabbedPane;\n    layerDetailsView;\n    paintProfilerView;\n    updateThrottler;\n    layerBeingProfiled;\n    constructor() {\n        super('layers', 225);\n        this.model = null;\n        SDK.TargetManager.TargetManager.instance().observeTargets(this, { scoped: true });\n        this.layerViewHost = new LayerViewer.LayerViewHost.LayerViewHost();\n        this.layerTreeOutline = new LayerViewer.LayerTreeOutline.LayerTreeOutline(this.layerViewHost);\n        this.layerTreeOutline.addEventListener(\"PaintProfilerRequested\" /* LayerViewer.LayerTreeOutline.Events.PAINT_PROFILER_REQUESTED */, this.onPaintProfileRequested, this);\n        this.panelSidebarElement().appendChild(this.layerTreeOutline.element);\n        this.setDefaultFocusedElement(this.layerTreeOutline.element);\n        this.rightSplitWidget = new UI.SplitWidget.SplitWidget(false, true, 'layer-details-split-view-state');\n        this.splitWidget().setMainWidget(this.rightSplitWidget);\n        this.layers3DView = new LayerViewer.Layers3DView.Layers3DView(this.layerViewHost);\n        this.rightSplitWidget.setMainWidget(this.layers3DView);\n        this.layers3DView.addEventListener(\"PaintProfilerRequested\" /* LayerViewer.Layers3DView.Events.PAINT_PROFILER_REQUESTED */, this.onPaintProfileRequested, this);\n        this.layers3DView.addEventListener(\"ScaleChanged\" /* LayerViewer.Layers3DView.Events.SCALE_CHANGED */, this.onScaleChanged, this);\n        this.tabbedPane = new UI.TabbedPane.TabbedPane();\n        this.rightSplitWidget.setSidebarWidget(this.tabbedPane);\n        this.layerDetailsView = new LayerViewer.LayerDetailsView.LayerDetailsView(this.layerViewHost);\n        this.layerDetailsView.addEventListener(\"PaintProfilerRequested\" /* LayerViewer.LayerDetailsView.Events.PAINT_PROFILER_REQUESTED */, this.onPaintProfileRequested, this);\n        this.tabbedPane.appendTab(DetailsViewTabs.Details, i18nString(UIStrings.details), this.layerDetailsView);\n        this.paintProfilerView = new LayerPaintProfilerView(this.showImage.bind(this));\n        this.tabbedPane.addEventListener(UI.TabbedPane.Events.TabClosed, this.onTabClosed, this);\n        this.updateThrottler = new Common.Throttler.Throttler(100);\n    }\n    static instance(opts) {\n        if (!layersPanelInstance || opts?.forceNew) {\n            layersPanelInstance = new LayersPanel();\n        }\n        return layersPanelInstance;\n    }\n    focus() {\n        this.layerTreeOutline.focus();\n    }\n    wasShown() {\n        super.wasShown();\n        if (this.model) {\n            this.model.enable();\n        }\n    }\n    willHide() {\n        if (this.model) {\n            void this.model.disable();\n        }\n        super.willHide();\n    }\n    targetAdded(target) {\n        if (target !== target.outermostTarget()) {\n            return;\n        }\n        this.model = target.model(LayerTreeModel);\n        if (!this.model) {\n            return;\n        }\n        this.model.addEventListener(Events.LayerTreeChanged, this.onLayerTreeUpdated, this);\n        this.model.addEventListener(Events.LayerPainted, this.onLayerPainted, this);\n        if (this.isShowing()) {\n            this.model.enable();\n            void this.update();\n        }\n    }\n    targetRemoved(target) {\n        if (!this.model || this.model.target() !== target) {\n            return;\n        }\n        this.model.removeEventListener(Events.LayerTreeChanged, this.onLayerTreeUpdated, this);\n        this.model.removeEventListener(Events.LayerPainted, this.onLayerPainted, this);\n        void this.model.disable();\n        this.model = null;\n    }\n    onLayerTreeUpdated() {\n        void this.updateThrottler.schedule(this.update.bind(this));\n    }\n    update() {\n        if (this.model) {\n            this.layerViewHost.setLayerTree(this.model.layerTree());\n            const resourceModel = this.model.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n            if (resourceModel) {\n                const mainFrame = resourceModel.mainFrame;\n                if (mainFrame) {\n                    const url = mainFrame.url;\n                    // Add the currently visualized url as an attribute to make it accessibles to e2e tests\n                    this.element.setAttribute('test-current-url', url);\n                }\n            }\n        }\n        return Promise.resolve();\n    }\n    onLayerPainted({ data: layer }) {\n        if (!this.model) {\n            return;\n        }\n        const selection = this.layerViewHost.selection();\n        if (selection && selection.layer() === layer) {\n            this.layerDetailsView.update();\n        }\n        this.layers3DView.updateLayerSnapshot(layer);\n    }\n    onPaintProfileRequested({ data: selection }) {\n        void this.layers3DView.snapshotForSelection(selection).then(snapshotWithRect => {\n            if (!snapshotWithRect) {\n                return;\n            }\n            this.layerBeingProfiled = selection.layer();\n            if (!this.tabbedPane.hasTab(DetailsViewTabs.Profiler)) {\n                this.tabbedPane.appendTab(DetailsViewTabs.Profiler, i18nString(UIStrings.profiler), this.paintProfilerView, undefined, true, true);\n            }\n            this.tabbedPane.selectTab(DetailsViewTabs.Profiler);\n            this.paintProfilerView.profile(snapshotWithRect.snapshot);\n        });\n    }\n    onTabClosed(event) {\n        if (event.data.tabId !== DetailsViewTabs.Profiler || !this.layerBeingProfiled) {\n            return;\n        }\n        this.paintProfilerView.reset();\n        this.layers3DView.showImageForLayer(this.layerBeingProfiled, undefined);\n        this.layerBeingProfiled = null;\n    }\n    showImage(imageURL) {\n        if (this.layerBeingProfiled) {\n            this.layers3DView.showImageForLayer(this.layerBeingProfiled, imageURL);\n        }\n    }\n    onScaleChanged(event) {\n        this.paintProfilerView.setScale(event.data);\n    }\n}\nexport const DetailsViewTabs = {\n    Details: 'details',\n    Profiler: 'profiler',\n};\n//# sourceMappingURL=LayersPanel.js.map"],"names":["LayerPaintProfilerView","UI.SplitWidget.SplitWidget","showImageCallback","VisualLogging.pane","LayerViewer.PaintProfilerView.PaintProfilerCommandLogView","LayerViewer.PaintProfilerView.PaintProfilerView","snapshot","log","setSnapshotAndLog","scale","LayerTreeModel","SDK.SDKModel.SDKModel","target","LayerTreeDispatcher","SDK.PaintProfiler.PaintProfilerModel","resourceTreeModel","SDK.ResourceTreeModel.ResourceTreeModel","SDK.ResourceTreeModel.Events","Common.Throttler.Throttler","AgentLayerTree","layers","layerTree","layerId","lastPaintRect","layer","Events","clipRect","SDK.LayerTreeBase.LayerTreeBase","layerTreeModel","payload","idsToResolve","backendNodeId","root","oldLayersById","i","AgentLayer","parentId","parent","layerPayload","childParam","child","node","rect","SDK.LayerTreeBase.StickyPositionConstraint","a","toFixed9","x","parentTransform","matrix","transformMatrix","anchorVector","UI.Geometry.Vector","anchorPoint","UI.Geometry.multiplyVectorByMatrixAndNormalize","anchorMatrix","width","height","vertices","point","calculateQuadForLayer","clip","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","layersPanelInstance","LayersPanel","UI.Panel.PanelWithSidebar","SDK.TargetManager.TargetManager","LayerViewer.LayerViewHost.LayerViewHost","LayerViewer.LayerTreeOutline.LayerTreeOutline","LayerViewer.Layers3DView.Layers3DView","UI.TabbedPane.TabbedPane","LayerViewer.LayerDetailsView.LayerDetailsView","DetailsViewTabs","UI.TabbedPane.Events","opts","resourceModel","mainFrame","url","selection","snapshotWithRect","event","imageURL"],"mappings":"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"}