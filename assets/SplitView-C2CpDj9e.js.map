{"version":3,"file":"SplitView-C2CpDj9e.js","sources":["../../ui/components/split_view/SplitView.js"],"sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nconst { html } = LitHtml;\n// clean-css does not compile this file correctly. So as a workaround adding styles inline.\nconst styles = `\n  :host {\n    --current-main-area-size: 50%;\n    --resizer-size: 3px;\n    --min-main-area-size: 200px;\n    --min-sidebar-size: 150px;\n    --main-area-size: calc(max(var(--current-main-area-size), var(--min-main-area-size)));\n\n    height: 100%;\n    width: 100%;\n    display: block;\n    overflow: auto;\n  }\n\n  .wrapper {\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n    width: 100%;\n    container: sidebar / size; /* stylelint-disable-line property-no-unknown */\n  }\n\n  .container {\n    --resizer-position: calc(min(var(--main-area-size), calc(100% - var(--min-sidebar-size))));\n    --min-container-size: calc(var(--min-sidebar-size) + var(--min-main-area-size) + var(--resizer-size));\n\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n    width: 100%;\n    position: relative;\n    gap: var(--resizer-size);\n\n    min-width: var(--min-container-size);\n  }\n\n  #resizer {\n    background-color: var(--sys-color-surface1);\n    position: absolute;\n    user-select: none;\n\n    /* horizontal */\n    width: var(--resizer-size);\n    cursor: col-resize;\n    left: var(--resizer-position);\n    bottom: 0;\n    top: 0;\n  }\n\n  slot {\n    overflow: auto;\n    display: block;\n  }\n\n  slot[name=\"main\"] {\n\n    /* horizontal */\n    width: var(--resizer-position);\n    min-width: var(--min-main-area-size);\n  }\n\n  slot[name=\"sidebar\"] {\n    flex: 1 0 0;\n\n    min-width: var(--min-sidebar-size);\n  }\n\n  .horizontal .container {\n    flex-direction: column;\n    min-height: var(--min-container-size);\n    min-width: auto;\n  }\n\n  .horizontal #resizer {\n    width: auto;\n    height: var(--resizer-size);\n    cursor: row-resize;\n    top: var(--resizer-position);\n    left: 0;\n    right: 0;\n  }\n\n  .horizontal slot[name=\"main\"] {\n    width: auto;\n    min-width: auto;\n    height: var(--resizer-position);\n    min-height: var(--min-main-area-size);\n  }\n\n  .horizontal slot[name=\"sidebar\"] {\n    min-width: auto;\n    min-height: var(--min-sidebar-size);\n  }\n`;\nconst splitViewStyles = new CSSStyleSheet();\nsplitViewStyles.replaceSync(styles);\nexport class SplitView extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #mousePos = [0, 0];\n    #mainAxisIdx = 0;\n    #mainDimensions = [0, 0];\n    #observer;\n    #horizontal = false;\n    connectedCallback() {\n        this.style.setProperty('--current-main-area-size', '60%');\n        this.#shadow.adoptedStyleSheets = [splitViewStyles];\n        this.#observer = new ResizeObserver(entries => this.#onResize(entries[0].contentRect));\n        this.#observer.observe(this);\n        this.#render();\n    }\n    get horizontal() {\n        return this.#horizontal;\n    }\n    set horizontal(horizontal) {\n        this.#horizontal = horizontal;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n    }\n    #onResize = (rect) => {\n        const prevMainAxisIdx = this.#mainAxisIdx;\n        if (rect.width <= 600 && rect.height >= 600 || this.#horizontal) {\n            this.#mainAxisIdx = 1;\n        }\n        else {\n            this.#mainAxisIdx = 0;\n        }\n        if (this.#mainAxisIdx !== prevMainAxisIdx) {\n            void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n        }\n    };\n    #onMouseDown = (event) => {\n        const main = this.#shadow.querySelector('slot[name=main]');\n        if (!main) {\n            throw new Error('Main slot not found');\n        }\n        const rect = main.getBoundingClientRect();\n        this.#mainDimensions = [rect.width, rect.height];\n        this.#mousePos = [event.clientX, event.clientY];\n        window.addEventListener('mousemove', this.#onMouseMove, true);\n        window.addEventListener('mouseup', this.#onMouseUp, true);\n    };\n    #onMouseUp = () => {\n        window.removeEventListener('mousemove', this.#onMouseMove, true);\n        window.removeEventListener('mouseup', this.#onMouseUp, true);\n    };\n    #onMouseMove = (event) => {\n        const mousePos = [event.clientX, event.clientY];\n        const delta = mousePos[this.#mainAxisIdx] - this.#mousePos[this.#mainAxisIdx];\n        const rect = this.getBoundingClientRect();\n        const containerDimensions = [rect.width, rect.height];\n        const length = ((this.#mainDimensions[this.#mainAxisIdx] + delta) * 100) / containerDimensions[this.#mainAxisIdx];\n        this.style.setProperty('--current-main-area-size', length + '%');\n    };\n    #render = () => {\n        // clang-format off\n        LitHtml.render(html `\n        <div class=\"wrapper ${this.#mainAxisIdx === 1 ? 'horizontal' : ''}\">\n          <div class=\"container\">\n            <slot name=\"main\"></slot>\n            <div id=\"resizer\" @mousedown=${this.#onMouseDown}></div>\n            <slot name=\"sidebar\"></slot>\n          </div>\n        </div>\n      `, this.#shadow, { host: this });\n        // clang-format on\n    };\n}\ncustomElements.define('devtools-split-view', SplitView);\n//# sourceMappingURL=SplitView.js.map"],"names":["html","LitHtml","styles","splitViewStyles","SplitView","#shadow","#mousePos","#mainAxisIdx","#mainDimensions","#observer","#horizontal","entries","#onResize","#render","horizontal","ComponentHelpers.ScheduledRender.scheduleRender","rect","prevMainAxisIdx","#onMouseDown","event","main","#onMouseMove","#onMouseUp","delta","containerDimensions","length","LitHtml.render"],"mappings":"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"}