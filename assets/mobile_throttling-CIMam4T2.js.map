{"version":3,"file":"mobile_throttling-CIMam4T2.js","sources":["../../panels/mobile_throttling/ThrottlingPresets.js","../../panels/mobile_throttling/NetworkThrottlingSelector.js","../../panels/mobile_throttling/ThrottlingManager.js","../../panels/mobile_throttling/MobileThrottlingSelector.js","../../panels/mobile_throttling/NetworkPanelIndicator.js","../../panels/mobile_throttling/throttlingSettingsTab.css.js","../../panels/mobile_throttling/ThrottlingSettingsTab.js"],"sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nconst UIStrings = {\n    /**\n     *@description Text for no network throttling\n     */\n    noThrottling: 'No throttling',\n    /**\n     *@description Text in Throttling Presets of the Network panel\n     */\n    noInternetConnectivity: 'No internet connectivity',\n    /**\n     *@description Text in Throttling Presets of the Network panel\n     */\n    lowendMobile: 'Low-end mobile',\n    /**\n     *@description Text in Throttling Presets of the Network panel\n     */\n    slowGXCpuSlowdown: 'Slow 3G & 6x CPU slowdown',\n    /**\n     *@description Text in Throttling Presets of the Network panel\n     */\n    midtierMobile: 'Mid-tier mobile',\n    /**\n     *@description Text in Throttling Presets of the Network panel\n     */\n    fastGXCpuSlowdown: 'Fast 3G & 4x CPU slowdown',\n    /**\n     *@description Text in Network Throttling Selector of the Network panel\n     */\n    custom: 'Custom',\n    /**\n     *@description Text in Throttling Presets of the Network panel\n     */\n    checkNetworkAndPerformancePanels: 'Check Network and Performance panels',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/ThrottlingPresets.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ThrottlingPresets {\n    static getNoThrottlingConditions() {\n        const title = typeof SDK.NetworkManager.NoThrottlingConditions.title === 'function' ?\n            SDK.NetworkManager.NoThrottlingConditions.title() :\n            SDK.NetworkManager.NoThrottlingConditions.title;\n        return {\n            title,\n            description: i18nString(UIStrings.noThrottling),\n            network: SDK.NetworkManager.NoThrottlingConditions,\n            cpuThrottlingRate: SDK.CPUThrottlingManager.CPUThrottlingRates.NO_THROTTLING,\n            jslogContext: 'no-throttling',\n        };\n    }\n    static getOfflineConditions() {\n        const title = typeof SDK.NetworkManager.OfflineConditions.title === 'function' ?\n            SDK.NetworkManager.OfflineConditions.title() :\n            SDK.NetworkManager.OfflineConditions.title;\n        return {\n            title,\n            description: i18nString(UIStrings.noInternetConnectivity),\n            network: SDK.NetworkManager.OfflineConditions,\n            cpuThrottlingRate: SDK.CPUThrottlingManager.CPUThrottlingRates.NO_THROTTLING,\n            jslogContext: 'offline',\n        };\n    }\n    static getLowEndMobileConditions() {\n        return {\n            title: i18nString(UIStrings.lowendMobile),\n            description: i18nString(UIStrings.slowGXCpuSlowdown),\n            network: SDK.NetworkManager.Slow3GConditions,\n            cpuThrottlingRate: SDK.CPUThrottlingManager.CPUThrottlingRates.LowEndMobile,\n            jslogContext: 'low-end-mobile',\n        };\n    }\n    static getMidTierMobileConditions() {\n        return {\n            title: i18nString(UIStrings.midtierMobile),\n            description: i18nString(UIStrings.fastGXCpuSlowdown),\n            network: SDK.NetworkManager.Slow4GConditions,\n            cpuThrottlingRate: SDK.CPUThrottlingManager.CPUThrottlingRates.MidTierMobile,\n            jslogContext: 'mid-tier-mobile',\n        };\n    }\n    static getCustomConditions() {\n        return {\n            title: i18nString(UIStrings.custom),\n            description: i18nString(UIStrings.checkNetworkAndPerformancePanels),\n            jslogContext: 'custom',\n        };\n    }\n    static getMobilePresets() {\n        return [\n            ThrottlingPresets.getMidTierMobileConditions(),\n            ThrottlingPresets.getLowEndMobileConditions(),\n            ThrottlingPresets.getCustomConditions(),\n        ];\n    }\n    static getAdvancedMobilePresets() {\n        return [\n            ThrottlingPresets.getOfflineConditions(),\n        ];\n    }\n    static networkPresets = [\n        SDK.NetworkManager.Fast4GConditions,\n        SDK.NetworkManager.Slow4GConditions,\n        SDK.NetworkManager.Slow3GConditions,\n        SDK.NetworkManager.OfflineConditions,\n    ];\n    static cpuThrottlingPresets = [\n        SDK.CPUThrottlingManager.CPUThrottlingRates.NO_THROTTLING,\n        SDK.CPUThrottlingManager.CPUThrottlingRates.MidTierMobile,\n        SDK.CPUThrottlingManager.CPUThrottlingRates.LowEndMobile,\n        SDK.CPUThrottlingManager.CPUThrottlingRates.EXTRA_SLOW,\n    ];\n}\n// @ts-ignore exported for Tests.js\nglobalThis.MobileThrottling = globalThis.MobileThrottling || {};\n// @ts-ignore exported for Tests.js\nglobalThis.MobileThrottling.networkPresets = ThrottlingPresets.networkPresets;\n//# sourceMappingURL=ThrottlingPresets.js.map","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport { ThrottlingPresets } from './ThrottlingPresets.js';\nconst UIStrings = {\n    /**\n     *@description Text to indicate something is not enabled\n     */\n    disabled: 'Disabled',\n    /**\n     *@description Title for a group of configuration options\n     */\n    presets: 'Presets',\n    /**\n     *@description Text in Network Throttling Selector of the Network panel\n     */\n    custom: 'Custom',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/NetworkThrottlingSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class NetworkThrottlingSelector {\n    populateCallback;\n    selectCallback;\n    customNetworkConditionsSetting;\n    options;\n    constructor(populateCallback, selectCallback, customNetworkConditionsSetting) {\n        this.populateCallback = populateCallback;\n        this.selectCallback = selectCallback;\n        this.customNetworkConditionsSetting = customNetworkConditionsSetting;\n        this.customNetworkConditionsSetting.addChangeListener(this.populateOptions, this);\n        SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\"ConditionsChanged\" /* SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED */, () => {\n            this.networkConditionsChanged();\n        }, this);\n        this.populateOptions();\n    }\n    revealAndUpdate() {\n        void Common.Revealer.reveal(this.customNetworkConditionsSetting);\n        this.networkConditionsChanged();\n    }\n    optionSelected(conditions) {\n        SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(conditions);\n    }\n    populateOptions() {\n        const disabledGroup = { title: i18nString(UIStrings.disabled), items: [SDK.NetworkManager.NoThrottlingConditions] };\n        const presetsGroup = { title: i18nString(UIStrings.presets), items: ThrottlingPresets.networkPresets };\n        const customGroup = { title: i18nString(UIStrings.custom), items: this.customNetworkConditionsSetting.get() };\n        this.options = this.populateCallback([disabledGroup, presetsGroup, customGroup]);\n        if (!this.networkConditionsChanged()) {\n            for (let i = this.options.length - 1; i >= 0; i--) {\n                if (this.options[i]) {\n                    this.optionSelected(this.options[i]);\n                    break;\n                }\n            }\n        }\n    }\n    /**\n     * returns false if selected condition no longer exists\n     */\n    networkConditionsChanged() {\n        const value = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n        for (let index = 0; index < this.options.length; ++index) {\n            const option = this.options[index];\n            if (option && SDK.NetworkManager.networkConditionsEqual(value, option)) {\n                this.selectCallback(index);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=NetworkThrottlingSelector.js.map","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { MobileThrottlingSelector } from './MobileThrottlingSelector.js';\nimport { NetworkThrottlingSelector } from './NetworkThrottlingSelector.js';\nimport { ThrottlingPresets, } from './ThrottlingPresets.js';\nconst UIStrings = {\n    /**\n     *@description Text with two placeholders separated by a colon\n     *@example {Node removed} PH1\n     *@example {div#id1} PH2\n     */\n    sS: '{PH1}: {PH2}',\n    /**\n     *@description Text in Throttling Manager of the Network panel\n     */\n    add: 'Addâ€¦',\n    /**\n     *@description Accessibility label for custom add network throttling option\n     *@example {Custom} PH1\n     */\n    addS: 'Add {PH1}',\n    /**\n     *@description Text to indicate the network connectivity is offline\n     */\n    offline: 'Offline',\n    /**\n     *@description Text in Throttling Manager of the Network panel\n     */\n    forceDisconnectedFromNetwork: 'Force disconnected from network',\n    /**\n     *@description Text for throttling the network\n     */\n    throttling: 'Throttling',\n    /**\n     *@description Icon title in Throttling Manager of the Network panel\n     */\n    cpuThrottlingIsEnabled: 'CPU throttling is enabled',\n    /**\n     *@description Screen reader label for a select box that chooses the CPU throttling speed in the Performance panel\n     */\n    cpuThrottling: 'CPU throttling',\n    /**\n     *@description Text for no network throttling\n     */\n    noThrottling: 'No throttling',\n    /**\n     *@description Text in Throttling Manager of the Network panel\n     *@example {2} PH1\n     */\n    dSlowdown: '{PH1}Ã— slowdown',\n    /**\n     *@description Tooltip text in Throttling Manager of the Performance panel\n     */\n    excessConcurrency: 'Exceeding the default value may degrade system performance.',\n    /**\n     *@description Tooltip text in Throttling Manager of the Performance panel\n     */\n    resetConcurrency: 'Reset to the default value',\n    /**\n     *@description Label for an check box that neables overriding navigator.hardwareConcurrency\n     */\n    hardwareConcurrency: 'Hardware concurrency',\n    /**\n     *@description Tooltip text for an input box that overrides navigator.hardwareConcurrency on the page\n     */\n    hardwareConcurrencySettingLabel: 'Override the value reported by navigator.hardwareConcurrency',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/ThrottlingManager.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet throttlingManagerInstance;\nexport class ThrottlingManager {\n    cpuThrottlingControls;\n    cpuThrottlingRates;\n    customNetworkConditionsSetting;\n    currentNetworkThrottlingConditionsSetting;\n    lastNetworkThrottlingConditions;\n    cpuThrottlingManager;\n    #hardwareConcurrencyOverrideEnabled = false;\n    get hardwareConcurrencyOverrideEnabled() {\n        return this.#hardwareConcurrencyOverrideEnabled;\n    }\n    constructor() {\n        this.cpuThrottlingManager = SDK.CPUThrottlingManager.CPUThrottlingManager.instance();\n        this.cpuThrottlingManager.addEventListener(\"RateChanged\" /* SDK.CPUThrottlingManager.Events.RATE_CHANGED */, (event) => this.onCPUThrottlingRateChangedOnSDK(event.data));\n        this.cpuThrottlingControls = new Set();\n        this.cpuThrottlingRates = ThrottlingPresets.cpuThrottlingPresets;\n        this.customNetworkConditionsSetting =\n            Common.Settings.Settings.instance().moduleSetting('custom-network-conditions');\n        this.currentNetworkThrottlingConditionsSetting = Common.Settings.Settings.instance().createSetting('preferred-network-condition', SDK.NetworkManager.NoThrottlingConditions);\n        this.currentNetworkThrottlingConditionsSetting.setSerializer(new SDK.NetworkManager.ConditionsSerializer());\n        SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\"ConditionsChanged\" /* SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED */, () => {\n            this.lastNetworkThrottlingConditions = this.currentNetworkThrottlingConditionsSetting.get();\n            this.currentNetworkThrottlingConditionsSetting.set(SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions());\n        });\n        if (this.isDirty()) {\n            SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(this.currentNetworkThrottlingConditionsSetting.get());\n        }\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!throttlingManagerInstance || forceNew) {\n            throttlingManagerInstance = new ThrottlingManager();\n        }\n        return throttlingManagerInstance;\n    }\n    decorateSelectWithNetworkThrottling(selectElement) {\n        let options = [];\n        const selector = new NetworkThrottlingSelector(populate, select, this.customNetworkConditionsSetting);\n        selectElement.setAttribute('jslog', `${VisualLogging.dropDown()\n            .track({ change: true })\n            .context(this.currentNetworkThrottlingConditionsSetting.name)}`);\n        selectElement.addEventListener('change', optionSelected, false);\n        return selector;\n        function populate(groups) {\n            selectElement.removeChildren();\n            options = [];\n            for (let i = 0; i < groups.length; ++i) {\n                const group = groups[i];\n                const groupElement = selectElement.createChild('optgroup');\n                groupElement.label = group.title;\n                for (const conditions of group.items) {\n                    // The title is usually an i18nLazyString except for custom values that are stored in the local storage in the form of a string.\n                    const title = typeof conditions.title === 'function' ? conditions.title() : conditions.title;\n                    const option = new Option(title, title);\n                    UI.ARIAUtils.setLabel(option, i18nString(UIStrings.sS, { PH1: group.title, PH2: title }));\n                    const jslogContext = i === groups.length - 1 ?\n                        'custom-network-throttling-item' :\n                        Platform.StringUtilities.toKebabCase(conditions.i18nTitleKey || title);\n                    option.setAttribute('jslog', `${VisualLogging.item(jslogContext).track({\n                        click: true,\n                    })}`);\n                    groupElement.appendChild(option);\n                    options.push(conditions);\n                }\n                if (i === groups.length - 1) {\n                    const option = new Option(i18nString(UIStrings.add), i18nString(UIStrings.add));\n                    UI.ARIAUtils.setLabel(option, i18nString(UIStrings.addS, { PH1: group.title }));\n                    option.setAttribute('jslog', `${VisualLogging.action('add').track({ click: true })}`);\n                    groupElement.appendChild(option);\n                    options.push(null);\n                }\n            }\n            return options;\n        }\n        function optionSelected() {\n            if (selectElement.selectedIndex === selectElement.options.length - 1) {\n                selector.revealAndUpdate();\n            }\n            else {\n                const option = options[selectElement.selectedIndex];\n                if (option) {\n                    selector.optionSelected(option);\n                }\n            }\n        }\n        function select(index) {\n            if (selectElement.selectedIndex !== index) {\n                selectElement.selectedIndex = index;\n            }\n        }\n    }\n    createOfflineToolbarCheckbox() {\n        const checkbox = new UI.Toolbar.ToolbarCheckbox(i18nString(UIStrings.offline), i18nString(UIStrings.forceDisconnectedFromNetwork), forceOffline.bind(this));\n        checkbox.element.setAttribute('jslog', `${VisualLogging.toggle('disconnect-from-network').track({ click: true })}`);\n        SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\"ConditionsChanged\" /* SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED */, networkConditionsChanged);\n        checkbox.setChecked(SDK.NetworkManager.MultitargetNetworkManager.instance().isOffline());\n        function forceOffline() {\n            if (checkbox.checked()) {\n                SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.OfflineConditions);\n            }\n            else {\n                const newConditions = (!this.lastNetworkThrottlingConditions.download && !this.lastNetworkThrottlingConditions.upload) ?\n                    SDK.NetworkManager.NoThrottlingConditions :\n                    this.lastNetworkThrottlingConditions;\n                SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(newConditions);\n            }\n        }\n        function networkConditionsChanged() {\n            checkbox.setChecked(SDK.NetworkManager.MultitargetNetworkManager.instance().isOffline());\n        }\n        return checkbox;\n    }\n    createMobileThrottlingButton() {\n        const button = new UI.Toolbar.ToolbarMenuButton(appendItems, undefined, undefined, 'mobile-throttling');\n        button.setTitle(i18nString(UIStrings.throttling));\n        button.setDarkText();\n        let options = [];\n        let selectedIndex = -1;\n        const selector = new MobileThrottlingSelector(populate, select);\n        return button;\n        function appendItems(contextMenu) {\n            for (let index = 0; index < options.length; ++index) {\n                const conditions = options[index];\n                if (!conditions) {\n                    continue;\n                }\n                if (conditions.title === ThrottlingPresets.getCustomConditions().title &&\n                    conditions.description === ThrottlingPresets.getCustomConditions().description) {\n                    continue;\n                }\n                contextMenu.defaultSection().appendCheckboxItem(conditions.title, selector.optionSelected.bind(selector, conditions), { checked: selectedIndex === index, jslogContext: conditions.jslogContext });\n            }\n        }\n        function populate(groups) {\n            options = [];\n            for (const group of groups) {\n                for (const conditions of group.items) {\n                    options.push(conditions);\n                }\n                options.push(null);\n            }\n            return options;\n        }\n        function select(index) {\n            selectedIndex = index;\n            const option = options[index];\n            if (option) {\n                button.setText(option.title);\n                button.setTitle(`${option.title} ${option.description}`);\n            }\n        }\n    }\n    updatePanelIcon() {\n        const warnings = [];\n        if (this.cpuThrottlingManager.cpuThrottlingRate() !== SDK.CPUThrottlingManager.CPUThrottlingRates.NO_THROTTLING) {\n            warnings.push(i18nString(UIStrings.cpuThrottlingIsEnabled));\n        }\n        UI.InspectorView.InspectorView.instance().setPanelWarnings('timeline', warnings);\n    }\n    setCPUThrottlingRate(rate) {\n        // This will transitively call onCPUThrottlingRateChangedOnSDK.\n        this.cpuThrottlingManager.setCPUThrottlingRate(rate);\n    }\n    onCPUThrottlingRateChangedOnSDK(rate) {\n        if (rate !== SDK.CPUThrottlingManager.CPUThrottlingRates.NO_THROTTLING) {\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.CpuThrottlingEnabled);\n        }\n        const index = this.cpuThrottlingRates.indexOf(rate);\n        for (const control of this.cpuThrottlingControls) {\n            control.setSelectedIndex(index);\n        }\n        this.updatePanelIcon();\n    }\n    createCPUThrottlingSelector() {\n        const control = new UI.Toolbar.ToolbarComboBox(event => this.setCPUThrottlingRate(this.cpuThrottlingRates[event.target.selectedIndex]), i18nString(UIStrings.cpuThrottling), '', 'cpu-throttling');\n        this.cpuThrottlingControls.add(control);\n        const currentRate = this.cpuThrottlingManager.cpuThrottlingRate();\n        for (let i = 0; i < this.cpuThrottlingRates.length; ++i) {\n            const rate = this.cpuThrottlingRates[i];\n            const title = rate === 1 ? i18nString(UIStrings.noThrottling) : i18nString(UIStrings.dSlowdown, { PH1: rate });\n            const value = rate === 1 ? 'cpu-no-throttling' : `cpu-throttled-${rate}`;\n            const option = control.createOption(title, value);\n            control.addOption(option);\n            if (currentRate === rate) {\n                control.setSelectedIndex(i);\n            }\n        }\n        return control;\n    }\n    /** Hardware Concurrency doesn't store state in a setting. */\n    createHardwareConcurrencySelector() {\n        const numericInput = new UI.Toolbar.ToolbarItem(UI.UIUtils.createInput('devtools-text-input', 'number', 'hardware-concurrency'));\n        numericInput.setTitle(i18nString(UIStrings.hardwareConcurrencySettingLabel));\n        const inputElement = numericInput.element;\n        inputElement.min = '1';\n        numericInput.setEnabled(false);\n        const checkbox = UI.UIUtils.CheckboxLabel.create(i18nString(UIStrings.hardwareConcurrency), false, i18nString(UIStrings.hardwareConcurrencySettingLabel), 'hardware-concurrency');\n        const reset = new UI.Toolbar.ToolbarButton('Reset concurrency', 'undo', undefined, 'hardware-concurrency-reset');\n        reset.setTitle(i18nString(UIStrings.resetConcurrency));\n        const icon = new IconButton.Icon.Icon();\n        icon.data = { iconName: 'warning-filled', color: 'var(--icon-warning)', width: '14px', height: '14px' };\n        const warning = new UI.Toolbar.ToolbarItem(icon);\n        warning.setTitle(i18nString(UIStrings.excessConcurrency));\n        checkbox.checkboxElement.disabled = true; // Prevent modification while still wiring things up asynchronously below\n        reset.element.classList.add('concurrency-hidden');\n        warning.element.classList.add('concurrency-hidden');\n        void this.cpuThrottlingManager.getHardwareConcurrency().then(defaultValue => {\n            if (defaultValue === undefined) {\n                return;\n            }\n            const setHardwareConcurrency = (value) => {\n                if (value >= 1) {\n                    this.cpuThrottlingManager.setHardwareConcurrency(value);\n                }\n                if (value > defaultValue) {\n                    warning.element.classList.remove('concurrency-hidden');\n                }\n                else {\n                    warning.element.classList.add('concurrency-hidden');\n                }\n                if (value === defaultValue) {\n                    reset.element.classList.add('concurrency-hidden');\n                }\n                else {\n                    reset.element.classList.remove('concurrency-hidden');\n                }\n            };\n            inputElement.value = `${defaultValue}`;\n            inputElement.oninput = () => setHardwareConcurrency(Number(inputElement.value));\n            checkbox.checkboxElement.disabled = false;\n            checkbox.checkboxElement.addEventListener('change', () => {\n                this.#hardwareConcurrencyOverrideEnabled = checkbox.checkboxElement.checked;\n                numericInput.setEnabled(this.hardwareConcurrencyOverrideEnabled);\n                setHardwareConcurrency(this.hardwareConcurrencyOverrideEnabled ? Number(inputElement.value) : defaultValue);\n            });\n            reset.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, () => {\n                inputElement.value = `${defaultValue}`;\n                setHardwareConcurrency(defaultValue);\n            });\n        });\n        return { numericInput, reset, warning, checkbox };\n    }\n    setHardwareConcurrency(concurrency) {\n        this.cpuThrottlingManager.setHardwareConcurrency(concurrency);\n    }\n    isDirty() {\n        const networkConditions = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n        const knownCurrentConditions = this.currentNetworkThrottlingConditionsSetting.get();\n        return !SDK.NetworkManager.networkConditionsEqual(networkConditions, knownCurrentConditions);\n    }\n}\nexport class ActionDelegate {\n    handleAction(_context, actionId) {\n        if (actionId === 'network-conditions.network-online') {\n            SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.NoThrottlingConditions);\n            return true;\n        }\n        if (actionId === 'network-conditions.network-low-end-mobile') {\n            SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.Slow3GConditions);\n            return true;\n        }\n        if (actionId === 'network-conditions.network-mid-tier-mobile') {\n            SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.Slow4GConditions);\n            return true;\n        }\n        if (actionId === 'network-conditions.network-offline') {\n            SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.OfflineConditions);\n            return true;\n        }\n        return false;\n    }\n}\nexport function throttlingManager() {\n    return ThrottlingManager.instance();\n}\n//# sourceMappingURL=ThrottlingManager.js.map","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport { throttlingManager } from './ThrottlingManager.js';\nimport { ThrottlingPresets, } from './ThrottlingPresets.js';\nconst UIStrings = {\n    /**\n     *@description Mobile throttling is disabled. The user can select this option to run mobile\n     *emulation at a normal speed instead of throttled.\n     */\n    disabled: 'Disabled',\n    /**\n     *@description Title for a group of pre-decided configuration options for mobile throttling. These\n     *are useful default options that users might want.\n     */\n    presets: 'Presets',\n    /**\n     *@description Title for a group of advanced configuration options for mobile throttling, which\n     *might not be applicable to every user or situation.\n     */\n    advanced: 'Advanced',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/MobileThrottlingSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class MobileThrottlingSelector {\n    populateCallback;\n    selectCallback;\n    options;\n    constructor(populateCallback, selectCallback) {\n        this.populateCallback = populateCallback;\n        this.selectCallback = selectCallback;\n        SDK.CPUThrottlingManager.CPUThrottlingManager.instance().addEventListener(\"RateChanged\" /* SDK.CPUThrottlingManager.Events.RATE_CHANGED */, this.conditionsChanged, this);\n        SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\"ConditionsChanged\" /* SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED */, this.conditionsChanged, this);\n        this.options = this.populateOptions();\n        this.conditionsChanged();\n    }\n    optionSelected(conditions) {\n        SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(conditions.network);\n        throttlingManager().setCPUThrottlingRate(conditions.cpuThrottlingRate);\n    }\n    populateOptions() {\n        const disabledGroup = {\n            title: i18nString(UIStrings.disabled),\n            items: [ThrottlingPresets.getNoThrottlingConditions()],\n        };\n        const presetsGroup = { title: i18nString(UIStrings.presets), items: ThrottlingPresets.getMobilePresets() };\n        const advancedGroup = { title: i18nString(UIStrings.advanced), items: ThrottlingPresets.getAdvancedMobilePresets() };\n        return this.populateCallback([disabledGroup, presetsGroup, advancedGroup]);\n    }\n    conditionsChanged() {\n        const networkConditions = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n        const cpuThrottlingRate = SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingRate();\n        for (let index = 0; index < this.options.length; ++index) {\n            const option = this.options[index];\n            if (option && 'network' in option && option.network === networkConditions &&\n                option.cpuThrottlingRate === cpuThrottlingRate) {\n                this.selectCallback(index);\n                return;\n            }\n        }\n        const customConditions = ThrottlingPresets.getCustomConditions();\n        for (let index = 0; index < this.options.length; ++index) {\n            const item = this.options[index];\n            if (item && item.title === customConditions.title && item.description === customConditions.description) {\n                this.selectCallback(index);\n                return;\n            }\n        }\n    }\n}\n//# sourceMappingURL=MobileThrottlingSelector.js.map","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nconst UIStrings = {\n    /**\n     *@description Icon title in Network Panel Indicator of the Network panel\n     */\n    networkThrottlingIsEnabled: 'Network throttling is enabled',\n    /**\n     *@description Icon title in Network Panel Indicator of the Network panel\n     */\n    requestsMayBeOverridden: 'Requests may be overridden locally, see the Sources panel',\n    /**\n     *@description Icon title in Network Panel Indicator of the Network panel\n     */\n    requestsMayBeBlocked: 'Requests may be blocked, see the Network request blocking panel',\n    /**\n     * @description Title of an icon in the Network panel that indicates that accepted content encodings have been overriden.\n     */\n    acceptedEncodingOverrideSet: 'The set of accepted `Content-Encoding` headers has been modified by DevTools, see the Network conditions panel',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/NetworkPanelIndicator.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class NetworkPanelIndicator {\n    constructor() {\n        // TODO: we should not access network from other modules.\n        if (!UI.InspectorView.InspectorView.instance().hasPanel('network')) {\n            return;\n        }\n        const manager = SDK.NetworkManager.MultitargetNetworkManager.instance();\n        manager.addEventListener(\"ConditionsChanged\" /* SDK.NetworkManager.MultitargetNetworkManager.Events.CONDITIONS_CHANGED */, updateVisibility);\n        manager.addEventListener(\"BlockedPatternsChanged\" /* SDK.NetworkManager.MultitargetNetworkManager.Events.BLOCKED_PATTERNS_CHANGED */, updateVisibility);\n        manager.addEventListener(\"InterceptorsChanged\" /* SDK.NetworkManager.MultitargetNetworkManager.Events.INTERCEPTORS_CHANGED */, updateVisibility);\n        manager.addEventListener(\"AcceptedEncodingsChanged\" /* SDK.NetworkManager.MultitargetNetworkManager.Events.ACCEPTED_ENCODINGS_CHANGED */, updateVisibility);\n        Common.Settings.Settings.instance().moduleSetting('cache-disabled').addChangeListener(updateVisibility, this);\n        updateVisibility();\n        function updateVisibility() {\n            const warnings = [];\n            if (manager.isThrottling()) {\n                warnings.push(i18nString(UIStrings.networkThrottlingIsEnabled));\n            }\n            if (SDK.NetworkManager.MultitargetNetworkManager.instance().isIntercepting()) {\n                warnings.push(i18nString(UIStrings.requestsMayBeOverridden));\n            }\n            if (manager.isBlocking()) {\n                warnings.push(i18nString(UIStrings.requestsMayBeBlocked));\n            }\n            if (manager.isAcceptedEncodingOverrideSet()) {\n                warnings.push(i18nString(UIStrings.acceptedEncodingOverrideSet));\n            }\n            UI.InspectorView.InspectorView.instance().setPanelWarnings('network', warnings);\n        }\n    }\n}\n//# sourceMappingURL=NetworkPanelIndicator.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: hidden;\n}\n\n.header {\n  padding: 0 0 6px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  font-size: 18px;\n  font-weight: normal;\n  flex: none;\n}\n\n.add-conditions-button {\n  flex: none;\n  margin: 10px 5px;\n  min-width: 140px;\n  align-self: flex-start;\n}\n\n.conditions-list {\n  min-width: 640px;\n  flex: auto;\n}\n\n.conditions-list-item {\n  padding: 3px 5px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  flex: auto 1 1;\n}\n\n.conditions-list-text {\n  flex: 0 0 80px;\n  user-select: none;\n  color: var(--sys-color-on-surface);\n  text-align: center;\n  position: relative;\n\n  & > input {\n    scroll-margin-left: 5px;\n  }\n}\n\n.conditions-list-text:last-child {\n  flex-basis: 100px;\n  text-align: left;\n}\n\n.conditions-list-title {\n  text-align: start;\n  display: flex;\n  flex: auto;\n  align-items: flex-start;\n}\n\n.conditions-list-title-text {\n  flex: auto;\n}\n\n.conditions-list-separator {\n  flex: 0 0 1px;\n  background-color: var(--sys-color-divider);\n  height: 30px;\n  margin: 0 4px;\n}\n\n.conditions-list-separator-invisible {\n  visibility: hidden;\n  height: 100% !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.conditions-edit-row {\n  flex: none;\n  display: flex;\n  flex-direction: row;\n  margin: 6px 5px;\n}\n\n.conditions-edit-row input {\n  &[type=\"checkbox\"] {\n    margin: auto;\n    top: 6px;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  &:not([type=\"checkbox\"]) {\n    width: 100%;\n    text-align: inherit;\n  }\n}\n\n.conditions-edit-optional {\n  position: absolute;\n  bottom: -20px;\n  right: 0;\n  color: var(--sys-color-state-disabled);\n}\n\n.editor-buttons {\n  margin-top: 10px;\n}\n\n/*# sourceURL=throttlingSettingsTab.css */\n`);\n\nexport default styles;\n","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport throttlingSettingsTabStyles from './throttlingSettingsTab.css.js';\nconst UIStrings = {\n    /**\n     *@description Text in Throttling Settings Tab of the Network panel\n     */\n    networkThrottlingProfiles: 'Network Throttling Profiles',\n    /**\n     *@description Text of add conditions button in Throttling Settings Tab of the Network panel\n     */\n    addCustomProfile: 'Add custom profile...',\n    /**\n     *@description A value in milliseconds\n     *@example {3} PH1\n     */\n    dms: '{PH1} `ms`',\n    /**\n     *@description Text in Throttling Settings Tab of the Network panel\n     */\n    profileName: 'Profile Name',\n    /**\n     * @description Label for a textbox that sets the download speed in the Throttling Settings Tab.\n     * Noun, short for 'download speed'.\n     */\n    download: 'Download',\n    /**\n     * @description Label for a textbox that sets the upload speed in the Throttling Settings Tab.\n     * Noun, short for 'upload speed'.\n     */\n    upload: 'Upload',\n    /**\n     * @description Label for a textbox that sets the latency in the Throttling Settings Tab.\n     */\n    latency: 'Latency',\n    /**\n     * @description Label for a textbox that sets the packet loss percentage for real-time networks in the Throttling Settings Tab.\n     */\n    packetLoss: 'Packet Loss',\n    /**\n     * @description Label for a textbox serving as a unit in the Throttling Settings Tab for the field Packet Loss column.\n     */\n    percent: 'percent',\n    /**\n     * @description Label for a textbox that sets the maximum packet queue length for real-time networks in the Throttling Settings Tab.\n     */\n    packetQueueLength: 'Packet Queue Length',\n    /**\n     * @description Label for a checkbox that allows packet reordering in the Throttling Settings Tab.\n     */\n    packetReordering: 'Packet Reordering',\n    /**\n     * @description Label for a textbox serving as a unit in the Throttling Settings Tab for the field Packet Queue Length column.\n     */\n    packet: 'packet',\n    /**\n     *@description Text in Throttling Settings Tab of the Network panel\n     */\n    optional: 'optional',\n    /**\n     *@description Error message for Profile Name input in Throtting pane of the Settings\n     *@example {49} PH1\n     */\n    profileNameCharactersLengthMust: 'Profile Name characters length must be between 1 to {PH1} inclusive',\n    /**\n     *@description Error message for Download and Upload inputs in Throttling pane of the Settings\n     *@example {Download} PH1\n     *@example {0} PH2\n     *@example {10000000} PH3\n     */\n    sMustBeANumberBetweenSkbsToSkbs: '{PH1} must be a number between {PH2} `kbit/s` to {PH3} `kbit/s` inclusive',\n    /**\n     *@description Error message for Latency input in Throttling pane of the Settings\n     *@example {0} PH1\n     *@example {1000000} PH2\n     */\n    latencyMustBeAnIntegerBetweenSms: 'Latency must be an integer between {PH1} `ms` to {PH2} `ms` inclusive',\n    /**\n     *@description Error message for Packet Loss input in Throttling pane of the Settings\n     *@example {0} PH1\n     *@example {100} PH2\n     */\n    packetLossMustBeAnIntegerBetweenSpct: 'Packet Loss must be a number between {PH1} `%` to {PH2} `%` inclusive',\n    /**\n     *@description Error message for Packet Queue Length input in Throttling pane of the Settings\n     */\n    packetQueueLengthMustBeAnIntegerGreaterOrEqualToZero: 'Packet Queue Length must be greater or equal to 0',\n    /**\n     * @description Text in Throttling Settings Tab of the Network panel, indicating the download or\n     * upload speed that will be applied in kilobits per second.\n     * @example {25} PH1\n     */\n    dskbits: '{PH1} `kbit/s`',\n    /**\n     * @description Text in Throttling Settings Tab of the Network panel, indicating the download or\n     * upload speed that will be applied in megabits per second.\n     * @example {25.4} PH1\n     */\n    fsmbits: '{PH1} `Mbit/s`',\n    /**\n     * @description Label for the column Packet Reordering to indicate it is enabled in the Throttling Settings Tab.\n     */\n    on: 'On',\n    /**\n     * @description Label for the column Packet Reordering to indicate it is disabled in the Throttling Settings Tab.\n     */\n    off: 'Off',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/ThrottlingSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ThrottlingSettingsTab extends UI.Widget.VBox {\n    list;\n    customSetting;\n    editor;\n    constructor() {\n        super(true);\n        this.element.setAttribute('jslog', `${VisualLogging.pane('throttling-conditions')}`);\n        const header = this.contentElement.createChild('div', 'header');\n        header.textContent = i18nString(UIStrings.networkThrottlingProfiles);\n        UI.ARIAUtils.markAsHeading(header, 1);\n        const addButton = UI.UIUtils.createTextButton(i18nString(UIStrings.addCustomProfile), this.addButtonClicked.bind(this), {\n            className: 'add-conditions-button',\n            jslogContext: 'network.add-conditions',\n        });\n        this.contentElement.appendChild(addButton);\n        this.list = new UI.ListWidget.ListWidget(this);\n        this.list.element.classList.add('conditions-list');\n        this.list.show(this.contentElement);\n        this.customSetting = Common.Settings.Settings.instance().moduleSetting('custom-network-conditions');\n        this.customSetting.addChangeListener(this.conditionsUpdated, this);\n        this.setDefaultFocusedElement(addButton);\n    }\n    wasShown() {\n        super.wasShown();\n        this.list.registerCSSFiles([throttlingSettingsTabStyles]);\n        this.registerCSSFiles([throttlingSettingsTabStyles]);\n        this.conditionsUpdated();\n    }\n    conditionsUpdated() {\n        this.list.clear();\n        const conditions = this.customSetting.get();\n        for (let i = 0; i < conditions.length; ++i) {\n            this.list.appendItem(conditions[i], true);\n        }\n        this.list.appendSeparator();\n    }\n    addButtonClicked() {\n        this.list.addNewItem(this.customSetting.get().length, { title: () => '', download: -1, upload: -1, latency: 0, packetLoss: 0, packetReordering: false });\n    }\n    renderItem(conditions, _editable) {\n        const element = document.createElement('div');\n        element.classList.add('conditions-list-item');\n        const title = element.createChild('div', 'conditions-list-text conditions-list-title');\n        const titleText = title.createChild('div', 'conditions-list-title-text');\n        const castedTitle = this.retrieveOptionsTitle(conditions);\n        titleText.textContent = castedTitle;\n        UI.Tooltip.Tooltip.install(titleText, castedTitle);\n        element.createChild('div', 'conditions-list-separator');\n        element.createChild('div', 'conditions-list-text').textContent = throughputText(conditions.download);\n        element.createChild('div', 'conditions-list-separator');\n        element.createChild('div', 'conditions-list-text').textContent = throughputText(conditions.upload);\n        element.createChild('div', 'conditions-list-separator');\n        element.createChild('div', 'conditions-list-text').textContent =\n            i18nString(UIStrings.dms, { PH1: conditions.latency });\n        element.createChild('div', 'conditions-list-separator');\n        element.createChild('div', 'conditions-list-text').textContent = percentText(conditions.packetLoss ?? 0);\n        element.createChild('div', 'conditions-list-separator');\n        element.createChild('div', 'conditions-list-text').textContent = String(conditions.packetQueueLength ?? 0);\n        element.createChild('div', 'conditions-list-separator');\n        element.createChild('div', 'conditions-list-text').textContent =\n            conditions.packetReordering ? i18nString(UIStrings.on) : i18nString(UIStrings.off);\n        return element;\n    }\n    removeItemRequested(_item, index) {\n        const list = this.customSetting.get();\n        list.splice(index, 1);\n        this.customSetting.set(list);\n    }\n    retrieveOptionsTitle(conditions) {\n        // The title is usually an i18nLazyString except for custom values that are stored in the local storage in the form of a string.\n        const castedTitle = typeof conditions.title === 'function' ? conditions.title() : conditions.title;\n        return castedTitle;\n    }\n    commitEdit(conditions, editor, isNew) {\n        conditions.title = editor.control('title').value.trim();\n        const download = editor.control('download').value.trim();\n        conditions.download = download ? parseInt(download, 10) * (1000 / 8) : -1;\n        const upload = editor.control('upload').value.trim();\n        conditions.upload = upload ? parseInt(upload, 10) * (1000 / 8) : -1;\n        const latency = editor.control('latency').value.trim();\n        conditions.latency = latency ? parseInt(latency, 10) : 0;\n        const packetLoss = editor.control('packetLoss').value.trim();\n        conditions.packetLoss = packetLoss ? parseFloat(packetLoss) : 0;\n        const packetQueueLength = editor.control('packetQueueLength').value.trim();\n        conditions.packetQueueLength = packetQueueLength ? parseFloat(packetQueueLength) : 0;\n        const packetReordering = editor.control('packetReordering').checked;\n        conditions.packetReordering = packetReordering;\n        const list = this.customSetting.get();\n        if (isNew) {\n            list.push(conditions);\n        }\n        this.customSetting.set(list);\n    }\n    beginEdit(conditions) {\n        const editor = this.createEditor();\n        editor.control('title').value = this.retrieveOptionsTitle(conditions);\n        editor.control('download').value = conditions.download <= 0 ? '' : String(conditions.download / (1000 / 8));\n        editor.control('upload').value = conditions.upload <= 0 ? '' : String(conditions.upload / (1000 / 8));\n        editor.control('latency').value = conditions.latency ? String(conditions.latency) : '';\n        editor.control('packetLoss').value = conditions.packetLoss ? String(conditions.packetLoss) : '';\n        editor.control('packetQueueLength').value =\n            conditions.packetQueueLength ? String(conditions.packetQueueLength) : '';\n        editor.control('packetReordering').checked = conditions.packetReordering ?? false;\n        return editor;\n    }\n    createEditor() {\n        if (this.editor) {\n            return this.editor;\n        }\n        const editor = new UI.ListWidget.Editor();\n        this.editor = editor;\n        const content = editor.contentElement();\n        const titles = content.createChild('div', 'conditions-edit-row');\n        const nameLabel = titles.createChild('div', 'conditions-list-text conditions-list-title');\n        const nameStr = i18nString(UIStrings.profileName);\n        const nameLabelText = nameLabel.createChild('div', 'conditions-list-title-text');\n        nameLabelText.textContent = nameStr;\n        titles.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n        const downloadLabel = titles.createChild('div', 'conditions-list-text');\n        const downloadStr = i18nString(UIStrings.download);\n        const downloadLabelText = downloadLabel.createChild('div', 'conditions-list-title-text');\n        downloadLabelText.textContent = downloadStr;\n        titles.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n        const uploadLabel = titles.createChild('div', 'conditions-list-text');\n        const uploadLabelText = uploadLabel.createChild('div', 'conditions-list-title-text');\n        const uploadStr = i18nString(UIStrings.upload);\n        uploadLabelText.textContent = uploadStr;\n        titles.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n        const latencyLabel = titles.createChild('div', 'conditions-list-text');\n        const latencyStr = i18nString(UIStrings.latency);\n        const latencyLabelText = latencyLabel.createChild('div', 'conditions-list-title-text');\n        latencyLabelText.textContent = latencyStr;\n        titles.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n        const packetLossLabel = titles.createChild('div', 'conditions-list-text');\n        const packetLossStr = i18nString(UIStrings.packetLoss);\n        const packetLossLabelText = packetLossLabel.createChild('div', 'conditions-list-title-text');\n        packetLossLabelText.textContent = packetLossStr;\n        titles.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n        const packetQueueLengthLabel = titles.createChild('div', 'conditions-list-text');\n        const packetQueueLengthStr = i18nString(UIStrings.packetQueueLength);\n        const packetQueueLengthLabelText = packetQueueLengthLabel.createChild('div', 'conditions-list-title-text');\n        packetQueueLengthLabelText.textContent = packetQueueLengthStr;\n        titles.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n        const packetReorderingLabel = titles.createChild('div', 'conditions-list-text');\n        const packetReorderingStr = i18nString(UIStrings.packetReordering);\n        const packetReorderingText = packetReorderingLabel.createChild('div', 'conditions-list-title-text');\n        packetReorderingText.textContent = packetReorderingStr;\n        const fields = content.createChild('div', 'conditions-edit-row');\n        const nameInput = editor.createInput('title', 'text', '', titleValidator);\n        UI.ARIAUtils.setLabel(nameInput, nameStr);\n        fields.createChild('div', 'conditions-list-text conditions-list-title').appendChild(nameInput);\n        fields.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n        let cell = fields.createChild('div', 'conditions-list-text');\n        const downloadInput = editor.createInput('download', 'text', i18n.i18n.lockedString('kbit/s'), throughputValidator);\n        cell.appendChild(downloadInput);\n        UI.ARIAUtils.setLabel(downloadInput, downloadStr);\n        const downloadOptional = cell.createChild('div', 'conditions-edit-optional');\n        const optionalStr = i18nString(UIStrings.optional);\n        downloadOptional.textContent = optionalStr;\n        UI.ARIAUtils.setDescription(downloadInput, optionalStr);\n        fields.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n        cell = fields.createChild('div', 'conditions-list-text');\n        const uploadInput = editor.createInput('upload', 'text', i18n.i18n.lockedString('kbit/s'), throughputValidator);\n        UI.ARIAUtils.setLabel(uploadInput, uploadStr);\n        cell.appendChild(uploadInput);\n        const uploadOptional = cell.createChild('div', 'conditions-edit-optional');\n        uploadOptional.textContent = optionalStr;\n        UI.ARIAUtils.setDescription(uploadInput, optionalStr);\n        fields.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n        cell = fields.createChild('div', 'conditions-list-text');\n        const latencyInput = editor.createInput('latency', 'text', i18n.i18n.lockedString('ms'), latencyValidator);\n        UI.ARIAUtils.setLabel(latencyInput, latencyStr);\n        cell.appendChild(latencyInput);\n        const latencyOptional = cell.createChild('div', 'conditions-edit-optional');\n        latencyOptional.textContent = optionalStr;\n        UI.ARIAUtils.setDescription(latencyInput, optionalStr);\n        fields.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n        cell = fields.createChild('div', 'conditions-list-text');\n        const packetLossInput = editor.createInput('packetLoss', 'text', i18n.i18n.lockedString('percent'), packetLossValidator);\n        UI.ARIAUtils.setLabel(packetLossInput, packetLossStr);\n        cell.appendChild(packetLossInput);\n        const packetLossOptional = cell.createChild('div', 'conditions-edit-optional');\n        packetLossOptional.textContent = optionalStr;\n        UI.ARIAUtils.setDescription(packetLossInput, optionalStr);\n        fields.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n        cell = fields.createChild('div', 'conditions-list-text');\n        const packetQueueLengthInput = editor.createInput('packetQueueLength', 'text', i18nString(UIStrings.packet), packetQueueLengthValidator);\n        UI.ARIAUtils.setLabel(packetQueueLengthInput, packetQueueLengthStr);\n        cell.appendChild(packetQueueLengthInput);\n        const packetQueueLengthOptional = cell.createChild('div', 'conditions-edit-optional');\n        packetQueueLengthOptional.textContent = optionalStr;\n        UI.ARIAUtils.setDescription(packetQueueLengthInput, optionalStr);\n        fields.createChild('div', 'conditions-list-separator conditions-list-separator-invisible');\n        cell = fields.createChild('div', 'conditions-list-text');\n        const packetReorderingInput = editor.createInput('packetReordering', 'checkbox', i18nString(UIStrings.percent), packetReorderingValidator);\n        UI.ARIAUtils.setLabel(packetReorderingInput, packetLossStr);\n        cell.appendChild(packetReorderingInput);\n        return editor;\n        function titleValidator(_item, _index, input) {\n            const maxLength = 49;\n            const value = input.value.trim();\n            const valid = value.length > 0 && value.length <= maxLength;\n            if (!valid) {\n                const errorMessage = i18nString(UIStrings.profileNameCharactersLengthMust, { PH1: maxLength });\n                return { valid, errorMessage };\n            }\n            return { valid, errorMessage: undefined };\n        }\n        function throughputValidator(_item, _index, input) {\n            const minThroughput = 0;\n            const maxThroughput = 10000000;\n            const value = input.value.trim();\n            const parsedValue = Number(value);\n            const throughput = input.getAttribute('aria-label');\n            const valid = !Number.isNaN(parsedValue) && parsedValue >= minThroughput && parsedValue <= maxThroughput;\n            if (!valid) {\n                const errorMessage = i18nString(UIStrings.sMustBeANumberBetweenSkbsToSkbs, { PH1: String(throughput), PH2: minThroughput, PH3: maxThroughput });\n                return { valid, errorMessage };\n            }\n            return { valid, errorMessage: undefined };\n        }\n        function latencyValidator(_item, _index, input) {\n            const minLatency = 0;\n            const maxLatency = 1000000;\n            const value = input.value.trim();\n            const parsedValue = Number(value);\n            const valid = Number.isInteger(parsedValue) && parsedValue >= minLatency && parsedValue <= maxLatency;\n            if (!valid) {\n                const errorMessage = i18nString(UIStrings.latencyMustBeAnIntegerBetweenSms, { PH1: minLatency, PH2: maxLatency });\n                return { valid, errorMessage };\n            }\n            return { valid, errorMessage: undefined };\n        }\n        function packetLossValidator(_item, _index, input) {\n            const minPacketLoss = 0;\n            const maxPacketLoss = 100;\n            const value = input.value.trim();\n            const parsedValue = Number(value);\n            const valid = parsedValue >= minPacketLoss && parsedValue <= maxPacketLoss;\n            if (!valid) {\n                const errorMessage = i18nString(UIStrings.packetLossMustBeAnIntegerBetweenSpct, { PH1: minPacketLoss, PH2: maxPacketLoss });\n                return { valid, errorMessage };\n            }\n            return { valid, errorMessage: undefined };\n        }\n        function packetQueueLengthValidator(_item, _index, input) {\n            const minPacketQueueLength = 0;\n            const value = input.value.trim();\n            const parsedValue = Number(value);\n            const valid = parsedValue >= minPacketQueueLength;\n            if (!valid) {\n                const errorMessage = i18nString(UIStrings.packetQueueLengthMustBeAnIntegerGreaterOrEqualToZero);\n                return { valid, errorMessage };\n            }\n            return { valid, errorMessage: undefined };\n        }\n        function packetReorderingValidator(_item, _index, _input) {\n            return { valid: true, errorMessage: undefined };\n        }\n    }\n}\nfunction throughputText(throughput) {\n    if (throughput < 0) {\n        return '';\n    }\n    const throughputInKbps = throughput / (1000 / 8);\n    if (throughputInKbps < 1000) {\n        return i18nString(UIStrings.dskbits, { PH1: throughputInKbps });\n    }\n    if (throughputInKbps < 1000 * 10) {\n        const formattedResult = (throughputInKbps / 1000).toFixed(1);\n        return i18nString(UIStrings.fsmbits, { PH1: formattedResult });\n    }\n    // TODO(petermarshall): Figure out if there is a difference we need to tell i18n about\n    // for these two versions: one with decimal places and one without.\n    return i18nString(UIStrings.fsmbits, { PH1: (throughputInKbps / 1000) | 0 });\n}\nfunction percentText(percent) {\n    if (percent < 0) {\n        return '';\n    }\n    return String(percent) + '%';\n}\n//# sourceMappingURL=ThrottlingSettingsTab.js.map"],"names":["UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","ThrottlingPresets","SDK.NetworkManager.NoThrottlingConditions","SDK.CPUThrottlingManager.CPUThrottlingRates","SDK.NetworkManager.OfflineConditions","SDK.NetworkManager.Slow3GConditions","SDK.NetworkManager.Slow4GConditions","SDK.NetworkManager.Fast4GConditions","NetworkThrottlingSelector","populateCallback","selectCallback","customNetworkConditionsSetting","SDK.NetworkManager.MultitargetNetworkManager","Common.Revealer.reveal","conditions","disabledGroup","presetsGroup","customGroup","value","index","option","SDK.NetworkManager.networkConditionsEqual","throttlingManagerInstance","ThrottlingManager","#hardwareConcurrencyOverrideEnabled","SDK.CPUThrottlingManager.CPUThrottlingManager","event","Common.Settings.Settings","SDK.NetworkManager.ConditionsSerializer","opts","forceNew","selectElement","options","selector","populate","select","VisualLogging.dropDown","optionSelected","groups","i","group","groupElement","title","UI.ARIAUtils.setLabel","jslogContext","Platform.StringUtilities.toKebabCase","VisualLogging.item","VisualLogging.action","checkbox","UI.Toolbar.ToolbarCheckbox","forceOffline","VisualLogging.toggle","networkConditionsChanged","newConditions","button","UI.Toolbar.ToolbarMenuButton","appendItems","selectedIndex","MobileThrottlingSelector","contextMenu","warnings","UI.InspectorView.InspectorView","rate","Host.userMetrics","Host.UserMetrics.Action","control","UI.Toolbar.ToolbarComboBox","currentRate","numericInput","UI.Toolbar.ToolbarItem","UI.UIUtils.createInput","inputElement","UI.UIUtils.CheckboxLabel","reset","UI.Toolbar.ToolbarButton","icon","IconButton.Icon.Icon","warning","defaultValue","setHardwareConcurrency","concurrency","networkConditions","knownCurrentConditions","ActionDelegate","_context","actionId","throttlingManager","advancedGroup","cpuThrottlingRate","customConditions","item","NetworkPanelIndicator","manager","updateVisibility","styles","ThrottlingSettingsTab","UI.Widget.VBox","VisualLogging.pane","header","UI.ARIAUtils.markAsHeading","addButton","UI.UIUtils.createTextButton","UI.ListWidget.ListWidget","throttlingSettingsTabStyles","_editable","element","titleText","castedTitle","UI.Tooltip.Tooltip","throughputText","percentText","_item","list","editor","isNew","download","upload","latency","packetLoss","packetQueueLength","packetReordering","UI.ListWidget.Editor","content","titles","nameLabel","nameStr","nameLabelText","downloadLabel","downloadStr","downloadLabelText","uploadLabelText","uploadStr","latencyLabel","latencyStr","latencyLabelText","packetLossLabel","packetLossStr","packetLossLabelText","packetQueueLengthLabel","packetQueueLengthStr","packetQueueLengthLabelText","packetReorderingLabel","packetReorderingStr","packetReorderingText","fields","nameInput","titleValidator","cell","downloadInput","i18n.i18n.lockedString","throughputValidator","downloadOptional","optionalStr","UI.ARIAUtils.setDescription","uploadInput","uploadOptional","latencyInput","latencyValidator","latencyOptional","packetLossInput","packetLossValidator","packetLossOptional","packetQueueLengthInput","packetQueueLengthValidator","packetQueueLengthOptional","packetReorderingInput","packetReorderingValidator","_index","input","valid","errorMessage","parsedValue","throughput","_input","throughputInKbps","formattedResult","percent"],"mappings":"2XAKA,MAAMA,EAAY,CAId,aAAc,gBAId,uBAAwB,2BAIxB,aAAc,iBAId,kBAAmB,4BAInB,cAAe,kBAIf,kBAAmB,4BAInB,OAAQ,SAIR,iCAAkC,sCACtC,EACMC,GAAOC,EAA4B,gDAAiDF,CAAS,EAC7FG,EAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC7D,MAAMI,CAAkB,CAC3B,OAAO,2BAA4B,CAI/B,MAAO,CACH,MAJU,OAAOC,EAA0C,OAAU,WACrEA,EAA0C,MAAO,EACjDA,EAA0C,MAG1C,YAAaH,EAAWH,EAAU,YAAY,EAC9C,QAASM,EACT,kBAAmBC,EAA4C,cAC/D,aAAc,eAC1B,CACK,CACD,OAAO,sBAAuB,CAI1B,MAAO,CACH,MAJU,OAAOC,EAAqC,OAAU,WAChEA,EAAqC,MAAO,EAC5CA,EAAqC,MAGrC,YAAaL,EAAWH,EAAU,sBAAsB,EACxD,QAASQ,EACT,kBAAmBD,EAA4C,cAC/D,aAAc,SAC1B,CACK,CACD,OAAO,2BAA4B,CAC/B,MAAO,CACH,MAAOJ,EAAWH,EAAU,YAAY,EACxC,YAAaG,EAAWH,EAAU,iBAAiB,EACnD,QAASS,GACT,kBAAmBF,EAA4C,aAC/D,aAAc,gBAC1B,CACK,CACD,OAAO,4BAA6B,CAChC,MAAO,CACH,MAAOJ,EAAWH,EAAU,aAAa,EACzC,YAAaG,EAAWH,EAAU,iBAAiB,EACnD,QAASU,GACT,kBAAmBH,EAA4C,cAC/D,aAAc,iBAC1B,CACK,CACD,OAAO,qBAAsB,CACzB,MAAO,CACH,MAAOJ,EAAWH,EAAU,MAAM,EAClC,YAAaG,EAAWH,EAAU,gCAAgC,EAClE,aAAc,QAC1B,CACK,CACD,OAAO,kBAAmB,CACtB,MAAO,CACHK,EAAkB,2BAA4B,EAC9CA,EAAkB,0BAA2B,EAC7CA,EAAkB,oBAAqB,CACnD,CACK,CACD,OAAO,0BAA2B,CAC9B,MAAO,CACHA,EAAkB,qBAAsB,CACpD,CACK,CACD,OAAO,eAAiB,CACpBM,GACAD,GACAD,GACAD,CACR,EACI,OAAO,qBAAuB,CAC1BD,EAA4C,cAC5CA,EAA4C,cAC5CA,EAA4C,aAC5CA,EAA4C,UACpD,CACA,CAEA,WAAW,iBAAmB,WAAW,kBAAoB,GAE7D,WAAW,iBAAiB,eAAiBF,EAAkB,uIChHzDL,EAAY,CAId,SAAU,WAIV,QAAS,UAIT,OAAQ,QACZ,EACMC,GAAOC,EAA4B,wDAAyDF,CAAS,EACrGG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC7D,MAAMW,EAA0B,CACnC,iBACA,eACA,+BACA,QACA,YAAYC,EAAkBC,EAAgBC,EAAgC,CAC1E,KAAK,iBAAmBF,EACxB,KAAK,eAAiBC,EACtB,KAAK,+BAAiCC,EACtC,KAAK,+BAA+B,kBAAkB,KAAK,gBAAiB,IAAI,EAChFC,EAA6C,SAAQ,EAAG,iBAAiB,oBAAkG,IAAM,CAC7K,KAAK,yBAAwB,CAChC,EAAE,IAAI,EACP,KAAK,gBAAe,CACvB,CACD,iBAAkB,CACTC,GAAuB,KAAK,8BAA8B,EAC/D,KAAK,yBAAwB,CAChC,CACD,eAAeC,EAAY,CACvBF,EAA6C,SAAQ,EAAG,qBAAqBE,CAAU,CAC1F,CACD,iBAAkB,CACd,MAAMC,EAAgB,CAAE,MAAOhB,GAAWH,EAAU,QAAQ,EAAG,MAAO,CAACM,CAAyC,GAC1Gc,EAAe,CAAE,MAAOjB,GAAWH,EAAU,OAAO,EAAG,MAAOK,EAAkB,gBAChFgB,EAAc,CAAE,MAAOlB,GAAWH,EAAU,MAAM,EAAG,MAAO,KAAK,+BAA+B,IAAK,CAAA,EAE3G,GADA,KAAK,QAAU,KAAK,iBAAiB,CAACmB,EAAeC,EAAcC,CAAW,CAAC,EAC3E,CAAC,KAAK,4BACN,QAAS,EAAI,KAAK,QAAQ,OAAS,EAAG,GAAK,EAAG,IAC1C,GAAI,KAAK,QAAQ,CAAC,EAAG,CACjB,KAAK,eAAe,KAAK,QAAQ,CAAC,CAAC,EACnC,KACH,EAGZ,CAID,0BAA2B,CACvB,MAAMC,EAAQN,EAA6C,SAAU,EAAC,kBAAiB,EACvF,QAASO,EAAQ,EAAGA,EAAQ,KAAK,QAAQ,OAAQ,EAAEA,EAAO,CACtD,MAAMC,EAAS,KAAK,QAAQD,CAAK,EACjC,GAAIC,GAAUC,GAA0CH,EAAOE,CAAM,EACjE,YAAK,eAAeD,CAAK,EAClB,EAEd,CACD,MAAO,EACV,CACL,kIC3DMvB,EAAY,CAMd,GAAI,eAIJ,IAAK,OAKL,KAAM,YAIN,QAAS,UAIT,6BAA8B,kCAI9B,WAAY,aAIZ,uBAAwB,4BAIxB,cAAe,iBAIf,aAAc,gBAKd,UAAW,kBAIX,kBAAmB,8DAInB,iBAAkB,6BAIlB,oBAAqB,uBAIrB,gCAAiC,8DACrC,EACMC,GAAOC,EAA4B,gDAAiDF,CAAS,EAC7FG,EAAaC,EAA6B,KAAK,OAAWH,EAAI,EACpE,IAAIyB,GACG,MAAMC,CAAkB,CAC3B,sBACA,mBACA,+BACA,0CACA,gCACA,qBACAC,GAAsC,GACtC,IAAI,oCAAqC,CACrC,OAAO,KAAKA,EACf,CACD,aAAc,CACV,KAAK,qBAAuBC,GAA8C,WAC1E,KAAK,qBAAqB,iBAAiB,cAAmEC,GAAU,KAAK,gCAAgCA,EAAM,IAAI,CAAC,EACxK,KAAK,sBAAwB,IAAI,IACjC,KAAK,mBAAqBzB,EAAkB,qBAC5C,KAAK,+BACD0B,EAAyB,SAAQ,EAAG,cAAc,2BAA2B,EACjF,KAAK,0CAA4CA,EAAyB,SAAU,EAAC,cAAc,8BAA+BzB,CAAyC,EAC3K,KAAK,0CAA0C,cAAc,IAAI0B,EAAyC,EAC1GhB,EAA6C,SAAQ,EAAG,iBAAiB,oBAAkG,IAAM,CAC7K,KAAK,gCAAkC,KAAK,0CAA0C,IAAG,EACzF,KAAK,0CAA0C,IAAIA,EAA6C,SAAU,EAAC,kBAAiB,CAAE,CAC1I,CAAS,EACG,KAAK,WACLA,EAA6C,SAAQ,EAAG,qBAAqB,KAAK,0CAA0C,IAAG,CAAE,CAExI,CACD,OAAO,SAASiB,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAACP,IAA6BQ,KAC9BR,GAA4B,IAAIC,GAE7BD,EACV,CACD,oCAAoCS,EAAe,CAC/C,IAAIC,EAAU,CAAA,EACd,MAAMC,EAAW,IAAIzB,GAA0B0B,EAAUC,EAAQ,KAAK,8BAA8B,EACpG,OAAAJ,EAAc,aAAa,QAAS,GAAGK,GAAwB,EAC1D,MAAM,CAAE,OAAQ,GAAM,EACtB,QAAQ,KAAK,0CAA0C,IAAI,CAAC,EAAE,EACnEL,EAAc,iBAAiB,SAAUM,EAAgB,EAAK,EACvDJ,EACP,SAASC,EAASI,EAAQ,CACtBP,EAAc,eAAc,EAC5BC,EAAU,CAAA,EACV,QAASO,EAAI,EAAGA,EAAID,EAAO,OAAQ,EAAEC,EAAG,CACpC,MAAMC,EAAQF,EAAOC,CAAC,EAChBE,EAAeV,EAAc,YAAY,UAAU,EACzDU,EAAa,MAAQD,EAAM,MAC3B,UAAW1B,KAAc0B,EAAM,MAAO,CAElC,MAAME,EAAQ,OAAO5B,EAAW,OAAU,WAAaA,EAAW,MAAK,EAAKA,EAAW,MACjFM,EAAS,IAAI,OAAOsB,EAAOA,CAAK,EACtCC,EAAsBvB,EAAQrB,EAAWH,EAAU,GAAI,CAAE,IAAK4C,EAAM,MAAO,IAAKE,CAAK,CAAE,CAAC,EACxF,MAAME,EAAeL,IAAMD,EAAO,OAAS,EACvC,iCACAO,GAAqC/B,EAAW,cAAgB4B,CAAK,EACzEtB,EAAO,aAAa,QAAS,GAAG0B,GAAmBF,CAAY,EAAE,MAAM,CACnE,MAAO,EAC/B,CAAqB,CAAC,EAAE,EACJH,EAAa,YAAYrB,CAAM,EAC/BY,EAAQ,KAAKlB,CAAU,CAC1B,CACD,GAAIyB,IAAMD,EAAO,OAAS,EAAG,CACzB,MAAMlB,EAAS,IAAI,OAAOrB,EAAWH,EAAU,GAAG,EAAGG,EAAWH,EAAU,GAAG,CAAC,EAC9E+C,EAAsBvB,EAAQrB,EAAWH,EAAU,KAAM,CAAE,IAAK4C,EAAM,KAAO,CAAA,CAAC,EAC9EpB,EAAO,aAAa,QAAS,GAAG2B,GAAqB,KAAK,EAAE,MAAM,CAAE,MAAO,GAAM,CAAC,EAAE,EACpFN,EAAa,YAAYrB,CAAM,EAC/BY,EAAQ,KAAK,IAAI,CACpB,CACJ,CACD,OAAOA,CACV,CACD,SAASK,GAAiB,CACtB,GAAIN,EAAc,gBAAkBA,EAAc,QAAQ,OAAS,EAC/DE,EAAS,gBAAe,MAEvB,CACD,MAAMb,EAASY,EAAQD,EAAc,aAAa,EAC9CX,GACAa,EAAS,eAAeb,CAAM,CAErC,CACJ,CACD,SAASe,EAAOhB,EAAO,CACfY,EAAc,gBAAkBZ,IAChCY,EAAc,cAAgBZ,EAErC,CACJ,CACD,8BAA+B,CAC3B,MAAM6B,EAAW,IAAIC,GAA2BlD,EAAWH,EAAU,OAAO,EAAGG,EAAWH,EAAU,4BAA4B,EAAGsD,EAAa,KAAK,IAAI,CAAC,EAC1JF,EAAS,QAAQ,aAAa,QAAS,GAAGG,GAAqB,yBAAyB,EAAE,MAAM,CAAE,MAAO,EAAI,CAAE,CAAC,EAAE,EAClHvC,EAA6C,SAAU,EAAC,iBAAiB,oBAAkGwC,CAAwB,EACnMJ,EAAS,WAAWpC,EAA6C,SAAQ,EAAG,UAAW,CAAA,EACvF,SAASsC,GAAe,CACpB,GAAIF,EAAS,UACTpC,EAA6C,SAAQ,EAAG,qBAAqBR,CAAoC,MAEhH,CACD,MAAMiD,EAAiB,CAAC,KAAK,gCAAgC,UAAY,CAAC,KAAK,gCAAgC,OAC3GnD,EACA,KAAK,gCACTU,EAA6C,SAAQ,EAAG,qBAAqByC,CAAa,CAC7F,CACJ,CACD,SAASD,GAA2B,CAChCJ,EAAS,WAAWpC,EAA6C,SAAQ,EAAG,UAAW,CAAA,CAC1F,CACD,OAAOoC,CACV,CACD,8BAA+B,CAC3B,MAAMM,EAAS,IAAIC,GAA6BC,EAAa,OAAW,OAAW,mBAAmB,EACtGF,EAAO,SAASvD,EAAWH,EAAU,UAAU,CAAC,EAChD0D,EAAO,YAAW,EAClB,IAAItB,EAAU,CAAA,EACVyB,EAAgB,GACpB,MAAMxB,EAAW,IAAIyB,GAAyBxB,EAAUC,CAAM,EAC9D,OAAOmB,EACP,SAASE,EAAYG,EAAa,CAC9B,QAASxC,EAAQ,EAAGA,EAAQa,EAAQ,OAAQ,EAAEb,EAAO,CACjD,MAAML,EAAakB,EAAQb,CAAK,EAC3BL,IAGDA,EAAW,QAAUb,EAAkB,oBAAqB,EAAC,OAC7Da,EAAW,cAAgBb,EAAkB,oBAAmB,EAAG,aAGvE0D,EAAY,eAAgB,EAAC,mBAAmB7C,EAAW,MAAOmB,EAAS,eAAe,KAAKA,EAAUnB,CAAU,EAAG,CAAE,QAAS2C,IAAkBtC,EAAO,aAAcL,EAAW,YAAY,CAAE,EACpM,CACJ,CACD,SAASoB,EAASI,EAAQ,CACtBN,EAAU,CAAA,EACV,UAAWQ,KAASF,EAAQ,CACxB,UAAWxB,KAAc0B,EAAM,MAC3BR,EAAQ,KAAKlB,CAAU,EAE3BkB,EAAQ,KAAK,IAAI,CACpB,CACD,OAAOA,CACV,CACD,SAASG,EAAOhB,EAAO,CACnBsC,EAAgBtC,EAChB,MAAMC,EAASY,EAAQb,CAAK,EACxBC,IACAkC,EAAO,QAAQlC,EAAO,KAAK,EAC3BkC,EAAO,SAAS,GAAGlC,EAAO,KAAK,IAAIA,EAAO,WAAW,EAAE,EAE9D,CACJ,CACD,iBAAkB,CACd,MAAMwC,EAAW,CAAA,EACb,KAAK,qBAAqB,kBAAiB,IAAOzD,EAA4C,eAC9FyD,EAAS,KAAK7D,EAAWH,EAAU,sBAAsB,CAAC,EAE9DiE,GAA+B,SAAU,EAAC,iBAAiB,WAAYD,CAAQ,CAClF,CACD,qBAAqBE,EAAM,CAEvB,KAAK,qBAAqB,qBAAqBA,CAAI,CACtD,CACD,gCAAgCA,EAAM,CAC9BA,IAAS3D,EAA4C,eACrD4D,GAAiB,YAAYC,GAAwB,oBAAoB,EAE7E,MAAM7C,EAAQ,KAAK,mBAAmB,QAAQ2C,CAAI,EAClD,UAAWG,KAAW,KAAK,sBACvBA,EAAQ,iBAAiB9C,CAAK,EAElC,KAAK,gBAAe,CACvB,CACD,6BAA8B,CAC1B,MAAM8C,EAAU,IAAIC,GAA2BxC,GAAS,KAAK,qBAAqB,KAAK,mBAAmBA,EAAM,OAAO,aAAa,CAAC,EAAG3B,EAAWH,EAAU,aAAa,EAAG,GAAI,gBAAgB,EACjM,KAAK,sBAAsB,IAAIqE,CAAO,EACtC,MAAME,EAAc,KAAK,qBAAqB,kBAAiB,EAC/D,QAAS5B,EAAI,EAAGA,EAAI,KAAK,mBAAmB,OAAQ,EAAEA,EAAG,CACrD,MAAMuB,EAAO,KAAK,mBAAmBvB,CAAC,EAChCG,EAAQoB,IAAS,EAAI/D,EAAWH,EAAU,YAAY,EAAIG,EAAWH,EAAU,UAAW,CAAE,IAAKkE,CAAM,CAAA,EACvG5C,EAAQ4C,IAAS,EAAI,oBAAsB,iBAAiBA,CAAI,GAChE1C,EAAS6C,EAAQ,aAAavB,EAAOxB,CAAK,EAChD+C,EAAQ,UAAU7C,CAAM,EACpB+C,IAAgBL,GAChBG,EAAQ,iBAAiB1B,CAAC,CAEjC,CACD,OAAO0B,CACV,CAED,mCAAoC,CAChC,MAAMG,EAAe,IAAIC,GAAuBC,GAAuB,sBAAuB,SAAU,sBAAsB,CAAC,EAC/HF,EAAa,SAASrE,EAAWH,EAAU,+BAA+B,CAAC,EAC3E,MAAM2E,EAAeH,EAAa,QAClCG,EAAa,IAAM,IACnBH,EAAa,WAAW,EAAK,EAC7B,MAAMpB,EAAWwB,GAAyB,OAAOzE,EAAWH,EAAU,mBAAmB,EAAG,GAAOG,EAAWH,EAAU,+BAA+B,EAAG,sBAAsB,EAC1K6E,EAAQ,IAAIC,GAAyB,oBAAqB,OAAQ,OAAW,4BAA4B,EAC/GD,EAAM,SAAS1E,EAAWH,EAAU,gBAAgB,CAAC,EACrD,MAAM+E,EAAO,IAAIC,GACjBD,EAAK,KAAO,CAAE,SAAU,iBAAkB,MAAO,sBAAuB,MAAO,OAAQ,OAAQ,MAAM,EACrG,MAAME,EAAU,IAAIR,GAAuBM,CAAI,EAC/C,OAAAE,EAAQ,SAAS9E,EAAWH,EAAU,iBAAiB,CAAC,EACxDoD,EAAS,gBAAgB,SAAW,GACpCyB,EAAM,QAAQ,UAAU,IAAI,oBAAoB,EAChDI,EAAQ,QAAQ,UAAU,IAAI,oBAAoB,EAC7C,KAAK,qBAAqB,uBAAsB,EAAG,KAAKC,GAAgB,CACzE,GAAIA,IAAiB,OACjB,OAEJ,MAAMC,EAA0B7D,GAAU,CAClCA,GAAS,GACT,KAAK,qBAAqB,uBAAuBA,CAAK,EAEtDA,EAAQ4D,EACRD,EAAQ,QAAQ,UAAU,OAAO,oBAAoB,EAGrDA,EAAQ,QAAQ,UAAU,IAAI,oBAAoB,EAElD3D,IAAU4D,EACVL,EAAM,QAAQ,UAAU,IAAI,oBAAoB,EAGhDA,EAAM,QAAQ,UAAU,OAAO,oBAAoB,CAEvE,EACYF,EAAa,MAAQ,GAAGO,CAAY,GACpCP,EAAa,QAAU,IAAMQ,EAAuB,OAAOR,EAAa,KAAK,CAAC,EAC9EvB,EAAS,gBAAgB,SAAW,GACpCA,EAAS,gBAAgB,iBAAiB,SAAU,IAAM,CACtD,KAAKxB,GAAsCwB,EAAS,gBAAgB,QACpEoB,EAAa,WAAW,KAAK,kCAAkC,EAC/DW,EAAuB,KAAK,mCAAqC,OAAOR,EAAa,KAAK,EAAIO,CAAY,CAC1H,CAAa,EACDL,EAAM,iBAAiB,QAAqD,IAAM,CAC9EF,EAAa,MAAQ,GAAGO,CAAY,GACpCC,EAAuBD,CAAY,CACnD,CAAa,CACb,CAAS,EACM,CAAE,aAAAV,EAAc,MAAAK,EAAO,QAAAI,EAAS,SAAA7B,CAAQ,CAClD,CACD,uBAAuBgC,EAAa,CAChC,KAAK,qBAAqB,uBAAuBA,CAAW,CAC/D,CACD,SAAU,CACN,MAAMC,EAAoBrE,EAA6C,SAAU,EAAC,kBAAiB,EAC7FsE,EAAyB,KAAK,0CAA0C,IAAG,EACjF,MAAO,CAAC7D,GAA0C4D,EAAmBC,CAAsB,CAC9F,CACL,CACO,MAAMC,EAAe,CACxB,aAAaC,EAAUC,EAAU,CAC7B,OAAIA,IAAa,qCACbzE,EAA6C,SAAQ,EAAG,qBAAqBV,CAAyC,EAC/G,IAEPmF,IAAa,6CACbzE,EAA6C,SAAQ,EAAG,qBAAqBP,EAAmC,EACzG,IAEPgF,IAAa,8CACbzE,EAA6C,SAAQ,EAAG,qBAAqBN,EAAmC,EACzG,IAEP+E,IAAa,sCACbzE,EAA6C,SAAQ,EAAG,qBAAqBR,CAAoC,EAC1G,IAEJ,EACV,CACL,CACO,SAASkF,IAAoB,CAChC,OAAO/D,EAAkB,UAC7B,gKC1VM3B,EAAY,CAKd,SAAU,WAKV,QAAS,UAKT,SAAU,UACd,EACMC,GAAOC,EAA4B,uDAAwDF,CAAS,EACpGG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC7D,MAAM6D,EAAyB,CAClC,iBACA,eACA,QACA,YAAYjD,EAAkBC,EAAgB,CAC1C,KAAK,iBAAmBD,EACxB,KAAK,eAAiBC,EACtBe,GAA8C,SAAQ,EAAG,iBAAiB,cAAkE,KAAK,kBAAmB,IAAI,EACxKb,EAA6C,SAAQ,EAAG,iBAAiB,oBAAkG,KAAK,kBAAmB,IAAI,EACvM,KAAK,QAAU,KAAK,kBACpB,KAAK,kBAAiB,CACzB,CACD,eAAeE,EAAY,CACvBF,EAA6C,SAAU,EAAC,qBAAqBE,EAAW,OAAO,EAC/FwE,KAAoB,qBAAqBxE,EAAW,iBAAiB,CACxE,CACD,iBAAkB,CACd,MAAMC,EAAgB,CAClB,MAAOhB,GAAWH,EAAU,QAAQ,EACpC,MAAO,CAACK,EAAkB,2BAA2B,CACjE,EACce,EAAe,CAAE,MAAOjB,GAAWH,EAAU,OAAO,EAAG,MAAOK,EAAkB,iBAAgB,GAChGsF,EAAgB,CAAE,MAAOxF,GAAWH,EAAU,QAAQ,EAAG,MAAOK,EAAkB,yBAAwB,GAChH,OAAO,KAAK,iBAAiB,CAACc,EAAeC,EAAcuE,CAAa,CAAC,CAC5E,CACD,mBAAoB,CAChB,MAAMN,EAAoBrE,EAA6C,SAAU,EAAC,kBAAiB,EAC7F4E,EAAoB/D,GAA8C,SAAU,EAAC,kBAAiB,EACpG,QAASN,EAAQ,EAAGA,EAAQ,KAAK,QAAQ,OAAQ,EAAEA,EAAO,CACtD,MAAMC,EAAS,KAAK,QAAQD,CAAK,EACjC,GAAIC,GAAU,YAAaA,GAAUA,EAAO,UAAY6D,GACpD7D,EAAO,oBAAsBoE,EAAmB,CAChD,KAAK,eAAerE,CAAK,EACzB,MACH,CACJ,CACD,MAAMsE,EAAmBxF,EAAkB,sBAC3C,QAASkB,EAAQ,EAAGA,EAAQ,KAAK,QAAQ,OAAQ,EAAEA,EAAO,CACtD,MAAMuE,EAAO,KAAK,QAAQvE,CAAK,EAC/B,GAAIuE,GAAQA,EAAK,QAAUD,EAAiB,OAASC,EAAK,cAAgBD,EAAiB,YAAa,CACpG,KAAK,eAAetE,CAAK,EACzB,MACH,CACJ,CACJ,CACL,iIChEMvB,EAAY,CAId,2BAA4B,gCAI5B,wBAAyB,4DAIzB,qBAAsB,kEAItB,4BAA6B,gHACjC,EACMC,GAAOC,EAA4B,oDAAqDF,CAAS,EACjGG,EAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC7D,MAAM8F,EAAsB,CAC/B,aAAc,CAEV,GAAI,CAAC9B,GAA+B,SAAU,EAAC,SAAS,SAAS,EAC7D,OAEJ,MAAM+B,EAAUhF,EAA6C,WAC7DgF,EAAQ,iBAAiB,oBAAkGC,CAAgB,EAC3ID,EAAQ,iBAAiB,yBAA6GC,CAAgB,EACtJD,EAAQ,iBAAiB,sBAAsGC,CAAgB,EAC/ID,EAAQ,iBAAiB,2BAAiHC,CAAgB,EAC1JlE,EAAyB,SAAU,EAAC,cAAc,gBAAgB,EAAE,kBAAkBkE,EAAkB,IAAI,EAC5GA,IACA,SAASA,GAAmB,CACxB,MAAMjC,EAAW,CAAA,EACbgC,EAAQ,gBACRhC,EAAS,KAAK7D,EAAWH,EAAU,0BAA0B,CAAC,EAE9DgB,EAA6C,WAAW,kBACxDgD,EAAS,KAAK7D,EAAWH,EAAU,uBAAuB,CAAC,EAE3DgG,EAAQ,cACRhC,EAAS,KAAK7D,EAAWH,EAAU,oBAAoB,CAAC,EAExDgG,EAAQ,iCACRhC,EAAS,KAAK7D,EAAWH,EAAU,2BAA2B,CAAC,EAEnEiE,GAA+B,SAAU,EAAC,iBAAiB,UAAWD,CAAQ,CACjF,CACJ,CACL,8HCpDMkC,GAAS,IAAI,cACnkHC,ECjHD,MAAMlG,EAAY,CAId,0BAA2B,8BAI3B,iBAAkB,wBAKlB,IAAK,aAIL,YAAa,eAKb,SAAU,WAKV,OAAQ,SAIR,QAAS,UAIT,WAAY,cAIZ,QAAS,UAIT,kBAAmB,sBAInB,iBAAkB,oBAIlB,OAAQ,SAIR,SAAU,WAKV,gCAAiC,sEAOjC,gCAAiC,4EAMjC,iCAAkC,wEAMlC,qCAAsC,wEAItC,qDAAsD,oDAMtD,QAAS,iBAMT,QAAS,iBAIT,GAAI,KAIJ,IAAK,KACT,EACMC,GAAOC,EAA4B,oDAAqDF,CAAS,EACjGG,EAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC7D,MAAMkG,WAA8BC,EAAe,CACtD,KACA,cACA,OACA,aAAc,CACV,MAAM,EAAI,EACV,KAAK,QAAQ,aAAa,QAAS,GAAGC,GAAmB,uBAAuB,CAAC,EAAE,EACnF,MAAMC,EAAS,KAAK,eAAe,YAAY,MAAO,QAAQ,EAC9DA,EAAO,YAAcnG,EAAWH,EAAU,yBAAyB,EACnEuG,GAA2BD,EAAQ,CAAC,EACpC,MAAME,EAAYC,GAA4BtG,EAAWH,EAAU,gBAAgB,EAAG,KAAK,iBAAiB,KAAK,IAAI,EAAG,CACpH,UAAW,wBACX,aAAc,wBAC1B,CAAS,EACD,KAAK,eAAe,YAAYwG,CAAS,EACzC,KAAK,KAAO,IAAIE,GAAyB,IAAI,EAC7C,KAAK,KAAK,QAAQ,UAAU,IAAI,iBAAiB,EACjD,KAAK,KAAK,KAAK,KAAK,cAAc,EAClC,KAAK,cAAgB3E,EAAyB,SAAQ,EAAG,cAAc,2BAA2B,EAClG,KAAK,cAAc,kBAAkB,KAAK,kBAAmB,IAAI,EACjE,KAAK,yBAAyByE,CAAS,CAC1C,CACD,UAAW,CACP,MAAM,SAAQ,EACd,KAAK,KAAK,iBAAiB,CAACG,EAA2B,CAAC,EACxD,KAAK,iBAAiB,CAACA,EAA2B,CAAC,EACnD,KAAK,kBAAiB,CACzB,CACD,mBAAoB,CAChB,KAAK,KAAK,QACV,MAAMzF,EAAa,KAAK,cAAc,IAAG,EACzC,QAASyB,EAAI,EAAGA,EAAIzB,EAAW,OAAQ,EAAEyB,EACrC,KAAK,KAAK,WAAWzB,EAAWyB,CAAC,EAAG,EAAI,EAE5C,KAAK,KAAK,iBACb,CACD,kBAAmB,CACf,KAAK,KAAK,WAAW,KAAK,cAAc,IAAK,EAAC,OAAQ,CAAE,MAAO,IAAM,GAAI,SAAU,GAAI,OAAQ,GAAI,QAAS,EAAG,WAAY,EAAG,iBAAkB,EAAK,CAAE,CAC1J,CACD,WAAWzB,EAAY0F,EAAW,CAC9B,MAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAU,IAAI,sBAAsB,EAE5C,MAAMC,EADQD,EAAQ,YAAY,MAAO,4CAA4C,EAC7D,YAAY,MAAO,4BAA4B,EACjEE,EAAc,KAAK,qBAAqB7F,CAAU,EACxD,OAAA4F,EAAU,YAAcC,EACxBC,GAAmB,QAAQF,EAAWC,CAAW,EACjDF,EAAQ,YAAY,MAAO,2BAA2B,EACtDA,EAAQ,YAAY,MAAO,sBAAsB,EAAE,YAAcI,GAAe/F,EAAW,QAAQ,EACnG2F,EAAQ,YAAY,MAAO,2BAA2B,EACtDA,EAAQ,YAAY,MAAO,sBAAsB,EAAE,YAAcI,GAAe/F,EAAW,MAAM,EACjG2F,EAAQ,YAAY,MAAO,2BAA2B,EACtDA,EAAQ,YAAY,MAAO,sBAAsB,EAAE,YAC/C1G,EAAWH,EAAU,IAAK,CAAE,IAAKkB,EAAW,OAAO,CAAE,EACzD2F,EAAQ,YAAY,MAAO,2BAA2B,EACtDA,EAAQ,YAAY,MAAO,sBAAsB,EAAE,YAAcK,GAAYhG,EAAW,YAAc,CAAC,EACvG2F,EAAQ,YAAY,MAAO,2BAA2B,EACtDA,EAAQ,YAAY,MAAO,sBAAsB,EAAE,YAAc,OAAO3F,EAAW,mBAAqB,CAAC,EACzG2F,EAAQ,YAAY,MAAO,2BAA2B,EACtDA,EAAQ,YAAY,MAAO,sBAAsB,EAAE,YAC/C3F,EAAW,iBAAmBf,EAAWH,EAAU,EAAE,EAAIG,EAAWH,EAAU,GAAG,EAC9E6G,CACV,CACD,oBAAoBM,EAAO5F,EAAO,CAC9B,MAAM6F,EAAO,KAAK,cAAc,IAAG,EACnCA,EAAK,OAAO7F,EAAO,CAAC,EACpB,KAAK,cAAc,IAAI6F,CAAI,CAC9B,CACD,qBAAqBlG,EAAY,CAG7B,OADoB,OAAOA,EAAW,OAAU,WAAaA,EAAW,MAAK,EAAKA,EAAW,KAEhG,CACD,WAAWA,EAAYmG,EAAQC,EAAO,CAClCpG,EAAW,MAAQmG,EAAO,QAAQ,OAAO,EAAE,MAAM,OACjD,MAAME,EAAWF,EAAO,QAAQ,UAAU,EAAE,MAAM,OAClDnG,EAAW,SAAWqG,EAAW,SAASA,EAAU,EAAE,GAAK,IAAO,GAAK,GACvE,MAAMC,EAASH,EAAO,QAAQ,QAAQ,EAAE,MAAM,OAC9CnG,EAAW,OAASsG,EAAS,SAASA,EAAQ,EAAE,GAAK,IAAO,GAAK,GACjE,MAAMC,EAAUJ,EAAO,QAAQ,SAAS,EAAE,MAAM,OAChDnG,EAAW,QAAUuG,EAAU,SAASA,EAAS,EAAE,EAAI,EACvD,MAAMC,EAAaL,EAAO,QAAQ,YAAY,EAAE,MAAM,OACtDnG,EAAW,WAAawG,EAAa,WAAWA,CAAU,EAAI,EAC9D,MAAMC,EAAoBN,EAAO,QAAQ,mBAAmB,EAAE,MAAM,OACpEnG,EAAW,kBAAoByG,EAAoB,WAAWA,CAAiB,EAAI,EACnF,MAAMC,EAAmBP,EAAO,QAAQ,kBAAkB,EAAE,QAC5DnG,EAAW,iBAAmB0G,EAC9B,MAAMR,EAAO,KAAK,cAAc,IAAG,EAC/BE,GACAF,EAAK,KAAKlG,CAAU,EAExB,KAAK,cAAc,IAAIkG,CAAI,CAC9B,CACD,UAAUlG,EAAY,CAClB,MAAMmG,EAAS,KAAK,eACpB,OAAAA,EAAO,QAAQ,OAAO,EAAE,MAAQ,KAAK,qBAAqBnG,CAAU,EACpEmG,EAAO,QAAQ,UAAU,EAAE,MAAQnG,EAAW,UAAY,EAAI,GAAK,OAAOA,EAAW,UAAY,IAAO,EAAE,EAC1GmG,EAAO,QAAQ,QAAQ,EAAE,MAAQnG,EAAW,QAAU,EAAI,GAAK,OAAOA,EAAW,QAAU,IAAO,EAAE,EACpGmG,EAAO,QAAQ,SAAS,EAAE,MAAQnG,EAAW,QAAU,OAAOA,EAAW,OAAO,EAAI,GACpFmG,EAAO,QAAQ,YAAY,EAAE,MAAQnG,EAAW,WAAa,OAAOA,EAAW,UAAU,EAAI,GAC7FmG,EAAO,QAAQ,mBAAmB,EAAE,MAChCnG,EAAW,kBAAoB,OAAOA,EAAW,iBAAiB,EAAI,GAC1EmG,EAAO,QAAQ,kBAAkB,EAAE,QAAUnG,EAAW,kBAAoB,GACrEmG,CACV,CACD,cAAe,CACX,GAAI,KAAK,OACL,OAAO,KAAK,OAEhB,MAAMA,EAAS,IAAIQ,GACnB,KAAK,OAASR,EACd,MAAMS,EAAUT,EAAO,iBACjBU,EAASD,EAAQ,YAAY,MAAO,qBAAqB,EACzDE,EAAYD,EAAO,YAAY,MAAO,4CAA4C,EAClFE,EAAU9H,EAAWH,EAAU,WAAW,EAC1CkI,EAAgBF,EAAU,YAAY,MAAO,4BAA4B,EAC/EE,EAAc,YAAcD,EAC5BF,EAAO,YAAY,MAAO,+DAA+D,EACzF,MAAMI,EAAgBJ,EAAO,YAAY,MAAO,sBAAsB,EAChEK,EAAcjI,EAAWH,EAAU,QAAQ,EAC3CqI,EAAoBF,EAAc,YAAY,MAAO,4BAA4B,EACvFE,EAAkB,YAAcD,EAChCL,EAAO,YAAY,MAAO,+DAA+D,EAEzF,MAAMO,EADcP,EAAO,YAAY,MAAO,sBAAsB,EAChC,YAAY,MAAO,4BAA4B,EAC7EQ,EAAYpI,EAAWH,EAAU,MAAM,EAC7CsI,EAAgB,YAAcC,EAC9BR,EAAO,YAAY,MAAO,+DAA+D,EACzF,MAAMS,EAAeT,EAAO,YAAY,MAAO,sBAAsB,EAC/DU,EAAatI,EAAWH,EAAU,OAAO,EACzC0I,GAAmBF,EAAa,YAAY,MAAO,4BAA4B,EACrFE,GAAiB,YAAcD,EAC/BV,EAAO,YAAY,MAAO,+DAA+D,EACzF,MAAMY,GAAkBZ,EAAO,YAAY,MAAO,sBAAsB,EAClEa,EAAgBzI,EAAWH,EAAU,UAAU,EAC/C6I,GAAsBF,GAAgB,YAAY,MAAO,4BAA4B,EAC3FE,GAAoB,YAAcD,EAClCb,EAAO,YAAY,MAAO,+DAA+D,EACzF,MAAMe,GAAyBf,EAAO,YAAY,MAAO,sBAAsB,EACzEgB,GAAuB5I,EAAWH,EAAU,iBAAiB,EAC7DgJ,GAA6BF,GAAuB,YAAY,MAAO,4BAA4B,EACzGE,GAA2B,YAAcD,GACzChB,EAAO,YAAY,MAAO,+DAA+D,EACzF,MAAMkB,GAAwBlB,EAAO,YAAY,MAAO,sBAAsB,EACxEmB,GAAsB/I,EAAWH,EAAU,gBAAgB,EAC3DmJ,GAAuBF,GAAsB,YAAY,MAAO,4BAA4B,EAClGE,GAAqB,YAAcD,GACnC,MAAME,EAAStB,EAAQ,YAAY,MAAO,qBAAqB,EACzDuB,GAAYhC,EAAO,YAAY,QAAS,OAAQ,GAAIiC,EAAc,EACxEvG,EAAsBsG,GAAWpB,CAAO,EACxCmB,EAAO,YAAY,MAAO,4CAA4C,EAAE,YAAYC,EAAS,EAC7FD,EAAO,YAAY,MAAO,+DAA+D,EACzF,IAAIG,EAAOH,EAAO,YAAY,MAAO,sBAAsB,EAC3D,MAAMI,EAAgBnC,EAAO,YAAY,WAAY,OAAQoC,EAAuB,QAAQ,EAAGC,EAAmB,EAClHH,EAAK,YAAYC,CAAa,EAC9BzG,EAAsByG,EAAepB,CAAW,EAChD,MAAMuB,GAAmBJ,EAAK,YAAY,MAAO,0BAA0B,EACrEK,EAAczJ,EAAWH,EAAU,QAAQ,EACjD2J,GAAiB,YAAcC,EAC/BC,EAA4BL,EAAeI,CAAW,EACtDR,EAAO,YAAY,MAAO,+DAA+D,EACzFG,EAAOH,EAAO,YAAY,MAAO,sBAAsB,EACvD,MAAMU,EAAczC,EAAO,YAAY,SAAU,OAAQoC,EAAuB,QAAQ,EAAGC,EAAmB,EAC9G3G,EAAsB+G,EAAavB,CAAS,EAC5CgB,EAAK,YAAYO,CAAW,EAC5B,MAAMC,GAAiBR,EAAK,YAAY,MAAO,0BAA0B,EACzEQ,GAAe,YAAcH,EAC7BC,EAA4BC,EAAaF,CAAW,EACpDR,EAAO,YAAY,MAAO,+DAA+D,EACzFG,EAAOH,EAAO,YAAY,MAAO,sBAAsB,EACvD,MAAMY,EAAe3C,EAAO,YAAY,UAAW,OAAQoC,EAAuB,IAAI,EAAGQ,EAAgB,EACzGlH,EAAsBiH,EAAcvB,CAAU,EAC9Cc,EAAK,YAAYS,CAAY,EAC7B,MAAME,GAAkBX,EAAK,YAAY,MAAO,0BAA0B,EAC1EW,GAAgB,YAAcN,EAC9BC,EAA4BG,EAAcJ,CAAW,EACrDR,EAAO,YAAY,MAAO,+DAA+D,EACzFG,EAAOH,EAAO,YAAY,MAAO,sBAAsB,EACvD,MAAMe,EAAkB9C,EAAO,YAAY,aAAc,OAAQoC,EAAuB,SAAS,EAAGW,EAAmB,EACvHrH,EAAsBoH,EAAiBvB,CAAa,EACpDW,EAAK,YAAYY,CAAe,EAChC,MAAME,GAAqBd,EAAK,YAAY,MAAO,0BAA0B,EAC7Ec,GAAmB,YAAcT,EACjCC,EAA4BM,EAAiBP,CAAW,EACxDR,EAAO,YAAY,MAAO,+DAA+D,EACzFG,EAAOH,EAAO,YAAY,MAAO,sBAAsB,EACvD,MAAMkB,GAAyBjD,EAAO,YAAY,oBAAqB,OAAQlH,EAAWH,EAAU,MAAM,EAAGuK,EAA0B,EACvIxH,EAAsBuH,GAAwBvB,EAAoB,EAClEQ,EAAK,YAAYe,EAAsB,EACvC,MAAME,GAA4BjB,EAAK,YAAY,MAAO,0BAA0B,EACpFiB,GAA0B,YAAcZ,EACxCC,EAA4BS,GAAwBV,CAAW,EAC/DR,EAAO,YAAY,MAAO,+DAA+D,EACzFG,EAAOH,EAAO,YAAY,MAAO,sBAAsB,EACvD,MAAMqB,GAAwBpD,EAAO,YAAY,mBAAoB,WAAYlH,EAAWH,EAAU,OAAO,EAAG0K,EAAyB,EACzI3H,OAAAA,EAAsB0H,GAAuB7B,CAAa,EAC1DW,EAAK,YAAYkB,EAAqB,EAC/BpD,EACP,SAASiC,GAAenC,EAAOwD,EAAQC,EAAO,CAE1C,MAAMtJ,EAAQsJ,EAAM,MAAM,KAAI,EACxBC,EAAQvJ,EAAM,OAAS,GAAKA,EAAM,QAAU,GAClD,GAAI,CAACuJ,EAAO,CACR,MAAMC,EAAe3K,EAAWH,EAAU,gCAAiC,CAAE,IAAK,EAAS,CAAE,EAC7F,MAAO,CAAE,MAAA6K,EAAO,aAAAC,EACnB,CACD,MAAO,CAAE,MAAAD,EAAO,aAAc,OACjC,CACD,SAASnB,GAAoBvC,EAAOwD,EAAQC,EAAO,CAG/C,MAAMtJ,EAAQsJ,EAAM,MAAM,KAAI,EACxBG,EAAc,OAAOzJ,CAAK,EAC1B0J,EAAaJ,EAAM,aAAa,YAAY,EAC5CC,EAAQ,CAAC,OAAO,MAAME,CAAW,GAAKA,GAAe,GAAiBA,GAAe,IAC3F,GAAI,CAACF,EAAO,CACR,MAAMC,GAAe3K,EAAWH,EAAU,gCAAiC,CAAE,IAAK,OAAOgL,CAAU,EAAG,IAAK,EAAe,IAAK,GAAe,CAAA,EAC9I,MAAO,CAAE,MAAAH,EAAO,aAAAC,GACnB,CACD,MAAO,CAAE,MAAAD,EAAO,aAAc,OACjC,CACD,SAASZ,GAAiB9C,EAAOwD,EAAQC,EAAO,CAG5C,MAAMtJ,EAAQsJ,EAAM,MAAM,KAAI,EACxBG,EAAc,OAAOzJ,CAAK,EAC1BuJ,EAAQ,OAAO,UAAUE,CAAW,GAAKA,GAAe,GAAcA,GAAe,IAC3F,GAAI,CAACF,EAAO,CACR,MAAMC,EAAe3K,EAAWH,EAAU,iCAAkC,CAAE,IAAK,EAAY,IAAK,GAAU,CAAE,EAChH,MAAO,CAAE,MAAA6K,EAAO,aAAAC,EACnB,CACD,MAAO,CAAE,MAAAD,EAAO,aAAc,OACjC,CACD,SAAST,GAAoBjD,EAAOwD,EAAQC,EAAO,CAG/C,MAAMtJ,EAAQsJ,EAAM,MAAM,KAAI,EACxBG,EAAc,OAAOzJ,CAAK,EAC1BuJ,EAAQE,GAAe,GAAiBA,GAAe,IAC7D,GAAI,CAACF,EAAO,CACR,MAAMC,EAAe3K,EAAWH,EAAU,qCAAsC,CAAE,IAAK,EAAe,IAAK,GAAa,CAAE,EAC1H,MAAO,CAAE,MAAA6K,EAAO,aAAAC,EACnB,CACD,MAAO,CAAE,MAAAD,EAAO,aAAc,OACjC,CACD,SAASN,GAA2BpD,EAAOwD,EAAQC,EAAO,CAEtD,MAAMtJ,EAAQsJ,EAAM,MAAM,KAAI,EAExBC,EADc,OAAOvJ,CAAK,GACH,EAC7B,GAAI,CAACuJ,EAAO,CACR,MAAMC,EAAe3K,EAAWH,EAAU,oDAAoD,EAC9F,MAAO,CAAE,MAAA6K,EAAO,aAAAC,EACnB,CACD,MAAO,CAAE,MAAAD,EAAO,aAAc,OACjC,CACD,SAASH,GAA0BvD,EAAOwD,EAAQM,EAAQ,CACtD,MAAO,CAAE,MAAO,GAAM,aAAc,MAAS,CAChD,CACJ,CACL,CACA,SAAShE,GAAe+D,EAAY,CAChC,GAAIA,EAAa,EACb,MAAO,GAEX,MAAME,EAAmBF,GAAc,IAAO,GAC9C,GAAIE,EAAmB,IACnB,OAAO/K,EAAWH,EAAU,QAAS,CAAE,IAAKkL,CAAgB,CAAE,EAElE,GAAIA,EAAmB,IAAO,GAAI,CAC9B,MAAMC,GAAmBD,EAAmB,KAAM,QAAQ,CAAC,EAC3D,OAAO/K,EAAWH,EAAU,QAAS,CAAE,IAAKmL,CAAe,CAAE,CAChE,CAGD,OAAOhL,EAAWH,EAAU,QAAS,CAAE,IAAMkL,EAAmB,IAAQ,CAAC,CAAE,CAC/E,CACA,SAAShE,GAAYkE,EAAS,CAC1B,OAAIA,EAAU,EACH,GAEJ,OAAOA,CAAO,EAAI,GAC7B"}