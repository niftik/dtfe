{"version":3,"file":"UserAgentClientHintsForm-CYAYtRuO.js","sources":["../../panels/settings/emulation/utils/StructuredHeaders.js","../../panels/settings/emulation/utils/UserAgentMetadata.js","../../panels/settings/emulation/components/userAgentClientHintsForm.css.js","../../panels/settings/emulation/components/UserAgentClientHintsForm.js"],"sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nconst CHAR_MINUS = '-'.charCodeAt(0);\nconst CHAR_0 = '0'.charCodeAt(0);\nconst CHAR_9 = '9'.charCodeAt(0);\nconst CHAR_A = 'A'.charCodeAt(0);\nconst CHAR_Z = 'Z'.charCodeAt(0);\nconst CHAR_LOWER_A = 'a'.charCodeAt(0);\nconst CHAR_LOWER_Z = 'z'.charCodeAt(0);\nconst CHAR_DQUOTE = '\"'.charCodeAt(0);\nconst CHAR_COLON = ':'.charCodeAt(0);\nconst CHAR_QUESTION_MARK = '?'.charCodeAt(0);\nconst CHAR_STAR = '*'.charCodeAt(0);\nconst CHAR_UNDERSCORE = '_'.charCodeAt(0);\nconst CHAR_DOT = '.'.charCodeAt(0);\nconst CHAR_BACKSLASH = '\\\\'.charCodeAt(0);\nconst CHAR_SLASH = '/'.charCodeAt(0);\nconst CHAR_PLUS = '+'.charCodeAt(0);\nconst CHAR_EQUALS = '='.charCodeAt(0);\nconst CHAR_EXCLAMATION = '!'.charCodeAt(0);\nconst CHAR_HASH = '#'.charCodeAt(0);\nconst CHAR_DOLLAR = '$'.charCodeAt(0);\nconst CHAR_PERCENT = '%'.charCodeAt(0);\nconst CHAR_AND = '&'.charCodeAt(0);\nconst CHAR_SQUOTE = '\\''.charCodeAt(0);\nconst CHAR_HAT = '^'.charCodeAt(0);\nconst CHAR_BACKTICK = '`'.charCodeAt(0);\nconst CHAR_PIPE = '|'.charCodeAt(0);\nconst CHAR_TILDE = '~'.charCodeAt(0);\n// ASCII printable range.\nconst CHAR_MIN_ASCII_PRINTABLE = 0x20;\nconst CHAR_MAX_ASCII_PRINTABLE = 0x7e;\n// Note: structured headers operates over ASCII, not unicode, so these are\n// all indeed supposed to return false on things outside 32-127 range regardless\n// of them being other kinds of digits or letters.\nfunction isDigit(charCode) {\n    // DIGIT = %x30-39 ; 0-9 (from RFC 5234)\n    if (charCode === undefined) {\n        return false;\n    }\n    return charCode >= CHAR_0 && charCode <= CHAR_9;\n}\nfunction isAlpha(charCode) {\n    // ALPHA = %x41-5A / %x61-7A   ; A-Z / a-z (from RFC 5234)\n    if (charCode === undefined) {\n        return false;\n    }\n    return (charCode >= CHAR_A && charCode <= CHAR_Z) || (charCode >= CHAR_LOWER_A && charCode <= CHAR_LOWER_Z);\n}\nfunction isLcAlpha(charCode) {\n    // lcalpha = %x61-7A ; a-z\n    if (charCode === undefined) {\n        return false;\n    }\n    return (charCode >= CHAR_LOWER_A && charCode <= CHAR_LOWER_Z);\n}\nfunction isTChar(charCode) {\n    if (charCode === undefined) {\n        return false;\n    }\n    // tchar = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\" / \"+\" / \"-\" / \".\" /\n    // \"^\" / \"_\" / \"`\" / \"|\" / \"~\" / DIGIT / ALPHA (from RFC 7230)\n    if (isDigit(charCode) || isAlpha(charCode)) {\n        return true;\n    }\n    switch (charCode) {\n        case CHAR_EXCLAMATION:\n        case CHAR_HASH:\n        case CHAR_DOLLAR:\n        case CHAR_PERCENT:\n        case CHAR_AND:\n        case CHAR_SQUOTE:\n        case CHAR_STAR:\n        case CHAR_PLUS:\n        case CHAR_MINUS:\n        case CHAR_DOT:\n        case CHAR_HAT:\n        case CHAR_UNDERSCORE:\n        case CHAR_BACKTICK:\n        case CHAR_PIPE:\n        case CHAR_TILDE:\n            return true;\n        default:\n            return false;\n    }\n}\nclass Input {\n    data;\n    pos;\n    constructor(input) {\n        this.data = input;\n        this.pos = 0;\n        // 4.2 step 2 is to discard any leading SP characters.\n        this.skipSP();\n    }\n    peek() {\n        return this.data[this.pos];\n    }\n    peekCharCode() {\n        return (this.pos < this.data.length ? this.data.charCodeAt(this.pos) : undefined);\n    }\n    eat() {\n        ++this.pos;\n    }\n    // Matches SP*.\n    // SP = %x20, from RFC 5234\n    skipSP() {\n        while (this.data[this.pos] === ' ') {\n            ++this.pos;\n        }\n    }\n    // Matches OWS\n    // OWS = *( SP / HTAB ) , from RFC 7230\n    skipOWS() {\n        while (this.data[this.pos] === ' ' || this.data[this.pos] === '\\t') {\n            ++this.pos;\n        }\n    }\n    atEnd() {\n        return (this.pos === this.data.length);\n    }\n    // 4.2 steps 6,7 --- checks for trailing characters.\n    allParsed() {\n        this.skipSP();\n        return (this.pos === this.data.length);\n    }\n}\nfunction makeError() {\n    return { kind: 0 /* ResultKind.ERROR */ };\n}\n// 4.2.1. Parsing a list\nfunction parseListInternal(input) {\n    const result = { kind: 11 /* ResultKind.LIST */, items: [] };\n    while (!input.atEnd()) {\n        const piece = parseItemOrInnerList(input);\n        if (piece.kind === 0 /* ResultKind.ERROR */) {\n            return piece;\n        }\n        result.items.push(piece);\n        input.skipOWS();\n        if (input.atEnd()) {\n            return result;\n        }\n        if (input.peek() !== ',') {\n            return makeError();\n        }\n        input.eat();\n        input.skipOWS();\n        // \"If input_string is empty, there is a trailing comma; fail parsing.\"\n        if (input.atEnd()) {\n            return makeError();\n        }\n    }\n    return result; // this case corresponds to an empty list.\n}\n// 4.2.1.1.  Parsing an Item or Inner List\nfunction parseItemOrInnerList(input) {\n    if (input.peek() === '(') {\n        return parseInnerList(input);\n    }\n    return parseItemInternal(input);\n}\n// 4.2.1.2.  Parsing an Inner List\nfunction parseInnerList(input) {\n    if (input.peek() !== '(') {\n        return makeError();\n    }\n    input.eat();\n    const items = [];\n    while (!input.atEnd()) {\n        input.skipSP();\n        if (input.peek() === ')') {\n            input.eat();\n            const params = parseParameters(input);\n            if (params.kind === 0 /* ResultKind.ERROR */) {\n                return params;\n            }\n            return {\n                kind: 12 /* ResultKind.INNER_LIST */,\n                items,\n                parameters: params,\n            };\n        }\n        const item = parseItemInternal(input);\n        if (item.kind === 0 /* ResultKind.ERROR */) {\n            return item;\n        }\n        items.push(item);\n        if (input.peek() !== ' ' && input.peek() !== ')') {\n            return makeError();\n        }\n    }\n    // Didn't see ), so error.\n    return makeError();\n}\n// 4.2.3.  Parsing an Item\nfunction parseItemInternal(input) {\n    const bareItem = parseBareItem(input);\n    if (bareItem.kind === 0 /* ResultKind.ERROR */) {\n        return bareItem;\n    }\n    const params = parseParameters(input);\n    if (params.kind === 0 /* ResultKind.ERROR */) {\n        return params;\n    }\n    return { kind: 4 /* ResultKind.ITEM */, value: bareItem, parameters: params };\n}\n// 4.2.3.1.  Parsing a Bare Item\nfunction parseBareItem(input) {\n    const upcoming = input.peekCharCode();\n    if (upcoming === CHAR_MINUS || isDigit(upcoming)) {\n        return parseIntegerOrDecimal(input);\n    }\n    if (upcoming === CHAR_DQUOTE) {\n        return parseString(input);\n    }\n    if (upcoming === CHAR_COLON) {\n        return parseByteSequence(input);\n    }\n    if (upcoming === CHAR_QUESTION_MARK) {\n        return parseBoolean(input);\n    }\n    if (upcoming === CHAR_STAR || isAlpha(upcoming)) {\n        return parseToken(input);\n    }\n    return makeError();\n}\n// 4.2.3.2.  Parsing Parameters\nfunction parseParameters(input) {\n    // The main noteworthy thing here is handling of duplicates and ordering:\n    //\n    // \"Note that Parameters are ordered as serialized\"\n    //\n    // \"If parameters already contains a name param_name (comparing\n    // character-for-character), overwrite its value.\"\n    //\n    // \"Note that when duplicate Parameter keys are encountered, this has the\n    // effect of ignoring all but the last instance.\"\n    const items = new Map();\n    while (!input.atEnd()) {\n        if (input.peek() !== ';') {\n            break;\n        }\n        input.eat();\n        input.skipSP();\n        const paramName = parseKey(input);\n        if (paramName.kind === 0 /* ResultKind.ERROR */) {\n            return paramName;\n        }\n        let paramValue = { kind: 10 /* ResultKind.BOOLEAN */, value: true };\n        if (input.peek() === '=') {\n            input.eat();\n            const parsedParamValue = parseBareItem(input);\n            if (parsedParamValue.kind === 0 /* ResultKind.ERROR */) {\n                return parsedParamValue;\n            }\n            paramValue = parsedParamValue;\n        }\n        // Delete any previous occurrence of duplicates to get the ordering right.\n        if (items.has(paramName.value)) {\n            items.delete(paramName.value);\n        }\n        items.set(paramName.value, { kind: 2 /* ResultKind.PARAMETER */, name: paramName, value: paramValue });\n    }\n    return { kind: 3 /* ResultKind.PARAMETERS */, items: [...items.values()] };\n}\n// 4.2.3.3.  Parsing a Key\nfunction parseKey(input) {\n    let outputString = '';\n    const first = input.peekCharCode();\n    if (first !== CHAR_STAR && !isLcAlpha(first)) {\n        return makeError();\n    }\n    while (!input.atEnd()) {\n        const upcoming = input.peekCharCode();\n        if (!isLcAlpha(upcoming) && !isDigit(upcoming) && upcoming !== CHAR_UNDERSCORE && upcoming !== CHAR_MINUS &&\n            upcoming !== CHAR_DOT && upcoming !== CHAR_STAR) {\n            break;\n        }\n        outputString += input.peek();\n        input.eat();\n    }\n    return { kind: 1 /* ResultKind.PARAM_NAME */, value: outputString };\n}\n// 4.2.4.  Parsing an Integer or Decimal\nfunction parseIntegerOrDecimal(input) {\n    let resultKind = 5 /* ResultKind.INTEGER */;\n    let sign = 1;\n    let inputNumber = '';\n    if (input.peek() === '-') {\n        input.eat();\n        sign = -1;\n    }\n    // This case includes end of input.\n    if (!isDigit(input.peekCharCode())) {\n        return makeError();\n    }\n    while (!input.atEnd()) {\n        const char = input.peekCharCode();\n        if (char !== undefined && isDigit(char)) {\n            input.eat();\n            inputNumber += String.fromCodePoint(char);\n        }\n        else if (char === CHAR_DOT && resultKind === 5 /* ResultKind.INTEGER */) {\n            input.eat();\n            if (inputNumber.length > 12) {\n                return makeError();\n            }\n            inputNumber += '.';\n            resultKind = 6 /* ResultKind.DECIMAL */;\n        }\n        else {\n            break;\n        }\n        if (resultKind === 5 /* ResultKind.INTEGER */ && inputNumber.length > 15) {\n            return makeError();\n        }\n        if (resultKind === 6 /* ResultKind.DECIMAL */ && inputNumber.length > 16) {\n            return makeError();\n        }\n    }\n    if (resultKind === 5 /* ResultKind.INTEGER */) {\n        const num = sign * Number.parseInt(inputNumber, 10);\n        if (num < -999999999999999 || num > 999999999999999) {\n            return makeError();\n        }\n        return { kind: 5 /* ResultKind.INTEGER */, value: num };\n    }\n    const afterDot = inputNumber.length - 1 - inputNumber.indexOf('.');\n    if (afterDot > 3 || afterDot === 0) {\n        return makeError();\n    }\n    return { kind: 6 /* ResultKind.DECIMAL */, value: sign * Number.parseFloat(inputNumber) };\n}\n// 4.2.5.  Parsing a String\nfunction parseString(input) {\n    let outputString = '';\n    if (input.peek() !== '\"') {\n        return makeError();\n    }\n    input.eat();\n    while (!input.atEnd()) {\n        const char = input.peekCharCode();\n        // can't happen due to atEnd(), but help the typechecker out.\n        if (char === undefined) {\n            return makeError();\n        }\n        input.eat();\n        if (char === CHAR_BACKSLASH) {\n            if (input.atEnd()) {\n                return makeError();\n            }\n            const nextChar = input.peekCharCode();\n            input.eat();\n            if (nextChar !== CHAR_BACKSLASH && nextChar !== CHAR_DQUOTE) {\n                return makeError();\n            }\n            outputString += String.fromCodePoint(nextChar);\n        }\n        else if (char === CHAR_DQUOTE) {\n            return { kind: 7 /* ResultKind.STRING */, value: outputString };\n        }\n        else if (char < CHAR_MIN_ASCII_PRINTABLE || char > CHAR_MAX_ASCII_PRINTABLE) {\n            return makeError();\n        }\n        else {\n            outputString += String.fromCodePoint(char);\n        }\n    }\n    // No closing quote.\n    return makeError();\n}\n// 4.2.6.  Parsing a Token\nfunction parseToken(input) {\n    const first = input.peekCharCode();\n    if (first !== CHAR_STAR && !isAlpha(first)) {\n        return makeError();\n    }\n    let outputString = '';\n    while (!input.atEnd()) {\n        const upcoming = input.peekCharCode();\n        if (upcoming === undefined || !isTChar(upcoming) && upcoming !== CHAR_COLON && upcoming !== CHAR_SLASH) {\n            break;\n        }\n        input.eat();\n        outputString += String.fromCodePoint(upcoming);\n    }\n    return { kind: 8 /* ResultKind.TOKEN */, value: outputString };\n}\n// 4.2.7.  Parsing a Byte Sequence\nfunction parseByteSequence(input) {\n    let outputString = '';\n    if (input.peek() !== ':') {\n        return makeError();\n    }\n    input.eat();\n    while (!input.atEnd()) {\n        const char = input.peekCharCode();\n        // can't happen due to atEnd(), but help the typechecker out.\n        if (char === undefined) {\n            return makeError();\n        }\n        input.eat();\n        if (char === CHAR_COLON) {\n            return { kind: 9 /* ResultKind.BINARY */, value: outputString };\n        }\n        if (isDigit(char) || isAlpha(char) || char === CHAR_PLUS || char === CHAR_SLASH || char === CHAR_EQUALS) {\n            outputString += String.fromCodePoint(char);\n        }\n        else {\n            return makeError();\n        }\n    }\n    // No closing :\n    return makeError();\n}\n// 4.2.8.  Parsing a Boolean\nfunction parseBoolean(input) {\n    if (input.peek() !== '?') {\n        return makeError();\n    }\n    input.eat();\n    if (input.peek() === '0') {\n        input.eat();\n        return { kind: 10 /* ResultKind.BOOLEAN */, value: false };\n    }\n    if (input.peek() === '1') {\n        input.eat();\n        return { kind: 10 /* ResultKind.BOOLEAN */, value: true };\n    }\n    return makeError();\n}\nexport function parseItem(input) {\n    const i = new Input(input);\n    const result = parseItemInternal(i);\n    if (!i.allParsed()) {\n        return makeError();\n    }\n    return result;\n}\nexport function parseList(input) {\n    // No need to look for trailing stuff here since parseListInternal does it already.\n    return parseListInternal(new Input(input));\n}\n// 4.1.3.  Serializing an Item\nexport function serializeItem(input) {\n    const bareItemVal = serializeBareItem(input.value);\n    if (bareItemVal.kind === 0 /* ResultKind.ERROR */) {\n        return bareItemVal;\n    }\n    const paramVal = serializeParameters(input.parameters);\n    if (paramVal.kind === 0 /* ResultKind.ERROR */) {\n        return paramVal;\n    }\n    return { kind: 13 /* ResultKind.SERIALIZATION_RESULT */, value: bareItemVal.value + paramVal.value };\n}\n// 4.1.1.  Serializing a List\nexport function serializeList(input) {\n    const outputPieces = [];\n    for (let i = 0; i < input.items.length; ++i) {\n        const item = input.items[i];\n        if (item.kind === 12 /* ResultKind.INNER_LIST */) {\n            const itemResult = serializeInnerList(item);\n            if (itemResult.kind === 0 /* ResultKind.ERROR */) {\n                return itemResult;\n            }\n            outputPieces.push(itemResult.value);\n        }\n        else {\n            const itemResult = serializeItem(item);\n            if (itemResult.kind === 0 /* ResultKind.ERROR */) {\n                return itemResult;\n            }\n            outputPieces.push(itemResult.value);\n        }\n    }\n    const output = outputPieces.join(', ');\n    return { kind: 13 /* ResultKind.SERIALIZATION_RESULT */, value: output };\n}\n// 4.1.1.1.  Serializing an Inner List\nfunction serializeInnerList(input) {\n    const outputPieces = [];\n    for (let i = 0; i < input.items.length; ++i) {\n        const itemResult = serializeItem(input.items[i]);\n        if (itemResult.kind === 0 /* ResultKind.ERROR */) {\n            return itemResult;\n        }\n        outputPieces.push(itemResult.value);\n    }\n    let output = '(' + outputPieces.join(' ') + ')';\n    const paramResult = serializeParameters(input.parameters);\n    if (paramResult.kind === 0 /* ResultKind.ERROR */) {\n        return paramResult;\n    }\n    output += paramResult.value;\n    return { kind: 13 /* ResultKind.SERIALIZATION_RESULT */, value: output };\n}\n// 4.1.1.2.  Serializing Parameters\nfunction serializeParameters(input) {\n    let output = '';\n    for (const item of input.items) {\n        output += ';';\n        const nameResult = serializeKey(item.name);\n        if (nameResult.kind === 0 /* ResultKind.ERROR */) {\n            return nameResult;\n        }\n        output += nameResult.value;\n        const itemVal = item.value;\n        if (itemVal.kind !== 10 /* ResultKind.BOOLEAN */ || !itemVal.value) {\n            output += '=';\n            const itemValResult = serializeBareItem(itemVal);\n            if (itemValResult.kind === 0 /* ResultKind.ERROR */) {\n                return itemValResult;\n            }\n            output += itemValResult.value;\n        }\n    }\n    return { kind: 13 /* ResultKind.SERIALIZATION_RESULT */, value: output };\n}\n// 4.1.1.3.  Serializing a Key\nfunction serializeKey(input) {\n    if (input.value.length === 0) {\n        return makeError();\n    }\n    const firstChar = input.value.charCodeAt(0);\n    if (!isLcAlpha(firstChar) && firstChar !== CHAR_STAR) {\n        return makeError();\n    }\n    for (let i = 1; i < input.value.length; ++i) {\n        const char = input.value.charCodeAt(i);\n        if (!isLcAlpha(char) && !isDigit(char) && char !== CHAR_UNDERSCORE && char !== CHAR_MINUS && char !== CHAR_DOT &&\n            char !== CHAR_STAR) {\n            return makeError();\n        }\n    }\n    return { kind: 13 /* ResultKind.SERIALIZATION_RESULT */, value: input.value };\n}\n// 4.1.3.1.  Serializing a Bare Item\nfunction serializeBareItem(input) {\n    if (input.kind === 5 /* ResultKind.INTEGER */) {\n        return serializeInteger(input);\n    }\n    if (input.kind === 6 /* ResultKind.DECIMAL */) {\n        return serializeDecimal(input);\n    }\n    if (input.kind === 7 /* ResultKind.STRING */) {\n        return serializeString(input);\n    }\n    if (input.kind === 8 /* ResultKind.TOKEN */) {\n        return serializeToken(input);\n    }\n    if (input.kind === 10 /* ResultKind.BOOLEAN */) {\n        return serializeBoolean(input);\n    }\n    if (input.kind === 9 /* ResultKind.BINARY */) {\n        return serializeByteSequence(input);\n    }\n    return makeError();\n}\n// 4.1.4.  Serializing an Integer\nfunction serializeInteger(input) {\n    if (input.value < -999999999999999 || input.value > 999999999999999 || !Number.isInteger(input.value)) {\n        return makeError();\n    }\n    return { kind: 13 /* ResultKind.SERIALIZATION_RESULT */, value: input.value.toString(10) };\n}\n// 4.1.5.  Serializing a Decimal\nfunction serializeDecimal(_input) {\n    throw 'Unimplemented';\n}\n// 4.1.6.  Serializing a String\nfunction serializeString(input) {\n    // Only printable ASCII strings are supported by the spec.\n    for (let i = 0; i < input.value.length; ++i) {\n        const char = input.value.charCodeAt(i);\n        if (char < CHAR_MIN_ASCII_PRINTABLE || char > CHAR_MAX_ASCII_PRINTABLE) {\n            return makeError();\n        }\n    }\n    let output = '\"';\n    for (let i = 0; i < input.value.length; ++i) {\n        const charStr = input.value[i];\n        if (charStr === '\"' || charStr === '\\\\') {\n            output += '\\\\';\n        }\n        output += charStr;\n    }\n    output += '\"';\n    return { kind: 13 /* ResultKind.SERIALIZATION_RESULT */, value: output };\n}\n// 4.1.7.  Serializing a Token\nfunction serializeToken(input) {\n    if (input.value.length === 0) {\n        return makeError();\n    }\n    const firstChar = input.value.charCodeAt(0);\n    if (!isAlpha(firstChar) && firstChar !== CHAR_STAR) {\n        return makeError();\n    }\n    for (let i = 1; i < input.value.length; ++i) {\n        const char = input.value.charCodeAt(i);\n        if (!isTChar(char) && char !== CHAR_COLON && char !== CHAR_SLASH) {\n            return makeError();\n        }\n    }\n    return { kind: 13 /* ResultKind.SERIALIZATION_RESULT */, value: input.value };\n}\n// 4.1.8.  Serializing a Byte Sequence\nfunction serializeByteSequence(_input) {\n    throw 'Unimplemented';\n}\n// 4.1.9.  Serializing a Boolean\nfunction serializeBoolean(input) {\n    return { kind: 13 /* ResultKind.SERIALIZATION_RESULT */, value: input.value ? '?1' : '?0' };\n}\n//# sourceMappingURL=StructuredHeaders.js.map","// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n//\n// Helper functions for working with UserAgentMetadata protocol objects, in\n// particular their plain string representation.\nimport { parseList, serializeItem, serializeList, } from './StructuredHeaders.js';\n/* Returned string is for error, either parseErrorString or structErrorString.\n */\nexport function parseBrandsList(stringForm, parseErrorString, structErrorString) {\n    const brandList = [];\n    const parseResult = parseList(stringForm);\n    if (parseResult.kind === 0 /* ResultKind.ERROR */) {\n        return parseErrorString;\n    }\n    for (const listItem of parseResult.items) {\n        if (listItem.kind !== 4 /* ResultKind.ITEM */) {\n            return structErrorString;\n        }\n        const bareItem = listItem.value;\n        if (bareItem.kind !== 7 /* ResultKind.STRING */) {\n            return structErrorString;\n        }\n        if (listItem.parameters.items.length !== 1) {\n            return structErrorString;\n        }\n        const param = listItem.parameters.items[0];\n        if (param.name.value !== 'v') {\n            return structErrorString;\n        }\n        const paramValue = param.value;\n        if (paramValue.kind !== 7 /* ResultKind.STRING */) {\n            return structErrorString;\n        }\n        brandList.push({ brand: bareItem.value, version: paramValue.value });\n    }\n    return brandList;\n}\nexport function serializeBrandsList(brands) {\n    const shList = { kind: 11 /* ResultKind.LIST */, items: [] };\n    const vParamName = { kind: 1 /* ResultKind.PARAM_NAME */, value: 'v' };\n    for (const brand of brands) {\n        const nameString = { kind: 7 /* ResultKind.STRING */, value: brand.brand };\n        const verString = { kind: 7 /* ResultKind.STRING */, value: brand.version };\n        const verParams = {\n            kind: 3 /* ResultKind.PARAMETERS */,\n            items: [{ kind: 2 /* ResultKind.PARAMETER */, name: vParamName, value: verString }],\n        };\n        const shItem = { kind: 4 /* ResultKind.ITEM */, value: nameString, parameters: verParams };\n        shList.items.push(shItem);\n    }\n    const serializeResult = serializeList(shList);\n    return serializeResult.kind === 0 /* ResultKind.ERROR */ ? '' : serializeResult.value;\n}\n/*\n * This checks whether the value provided is representable as a structured headers string,\n * which is the validity requirement for the fields in UserAgentMetadata that are not the brand list\n * or mobile bool.\n *\n * errorMessage will be passed through on failure.\n */\nexport function validateAsStructuredHeadersString(value, errorString) {\n    const parsedResult = serializeItem({\n        kind: 4 /* ResultKind.ITEM */,\n        value: { kind: 7 /* ResultKind.STRING */, value },\n        parameters: { kind: 3 /* ResultKind.PARAMETERS */, items: [] },\n    });\n    if (parsedResult.kind === 0 /* ResultKind.ERROR */) {\n        return { valid: false, errorMessage: errorString };\n    }\n    return { valid: true, errorMessage: undefined };\n}\n//# sourceMappingURL=UserAgentMetadata.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.root {\n  color: var(--sys-color-on-surface);\n  width: 100%;\n}\n\n.tree-title {\n  font-weight: 700;\n  display: flex;\n  align-items: center;\n}\n\n.rotate-icon {\n  transform: rotate(90deg);\n}\n\n.form-container {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr auto;\n  align-items: center;\n  column-gap: 10px;\n  row-gap: 8px;\n  padding: 0 10px;\n}\n\n.full-row {\n  grid-column: 1 / 5;\n}\n\n.half-row {\n  grid-column: span 2;\n}\n\n.mobile-checkbox-container {\n  display: flex;\n}\n\n.device-model-input {\n  grid-column: 1 / 4;\n}\n\n.input-field {\n  color: var(--sys-color-on-surface);\n  padding: 3px 6px;\n  border-radius: 2px;\n  border: 1px solid var(--sys-color-neutral-outline);\n  background-color: var(--sys-color-cdt-base-container);\n  font-size: inherit;\n  height: 18px;\n}\n\n.input-field:focus {\n  border: 1px solid var(--sys-color-state-focus-ring);\n  outline-width: 0;\n}\n\n.add-container {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n}\n\n.add-icon {\n  margin-right: 5px;\n}\n\n.brand-row {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  justify-content: space-between;\n}\n\n.brand-row > input {\n  width: 100%;\n}\n\n.info-icon {\n  margin-left: 5px;\n  margin-right: 1px;\n}\n\n.link,\n.devtools-link {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n  outline-offset: 2px;\n  font-weight: 400;\n}\n\ndevtools-icon + .link {\n  margin-inline-start: 2px;\n}\n\n.hide-container {\n  display: none;\n}\n\n.input-field-label-container {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n@media (forced-colors: active) {\n  .input-field {\n    border: 1px solid;\n  }\n\n  .tree-title[aria-disabled=\"true\"] {\n    color: GrayText;\n  }\n}\n\n/*# sourceURL=userAgentClientHintsForm.css */\n`);\n\nexport default styles;\n","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../../ui/legacy/legacy.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Buttons from '../../../../ui/components/buttons/buttons.js';\nimport * as Input from '../../../../ui/components/input/input.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\nimport * as EmulationUtils from '../utils/utils.js';\nimport userAgentClientHintsFormStyles from './userAgentClientHintsForm.css.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     * @description Title for user agent client hints form\n     */\n    title: 'User agent client hints',\n    /**\n     * @description Heading for user agent section.\n     * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n     */\n    useragent: 'User agent (Sec-CH-UA)',\n    /**\n     * @description Heading for full-version-list section.\n     */\n    fullVersionList: 'Full version list (Sec-CH-UA-Full-Version-List)',\n    /**\n     * @description ARIA label for a form with properties for a single brand in a brand list. The form includes a brand name input field, a version\n     * input field and a delete icon. Brand refer to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n     */\n    brandProperties: 'User agent properties',\n    /**\n     * @description Input field placeholder for brands browser name.\n     * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n     */\n    brandName: 'Brand',\n    /**\n     * @description Aria label for brands browser name input field.\n     * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n     * @example {index} PH1\n     */\n    brandNameAriaLabel: 'Brand {PH1}',\n    /**\n     * @description Input field placeholder for significant brand version.\n     * Brands here relate to different browser brands/vendors like Google Chrome (v89), Microsoft Edge (v92) etc.\n     */\n    significantBrandVersionPlaceholder: 'Significant version (e.g. 87)',\n    /**\n     * @description Input field placeholder for brand version.\n     * Brands here relate to different browser brands/vendors like Google Chrome (v89), Microsoft Edge (v92) etc.\n     */\n    brandVersionPlaceholder: 'Version (e.g. 87.0.4280.88)',\n    /**\n     * @description Aria label for brands browser version input field.\n     * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n     * @example {index} PH1\n     */\n    brandVersionAriaLabel: 'Version {PH1}',\n    /**\n     * @description Button title for adding another brand in brands section to client hints.\n     * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n     */\n    addBrand: 'Add Brand',\n    /**\n     * @description Tooltip and aria label for delete icon for deleting browser brand from brands user agent section.\n     * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n     */\n    brandUserAgentDelete: 'Delete brand from user agent section',\n    /**\n     * @description Tooltip and aria label for delete icon for deleting user agent from brands full version list.\n     * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n     */\n    brandFullVersionListDelete: 'Delete brand from full version list',\n    /**\n     * @description Label for full browser version input field.\n     */\n    fullBrowserVersion: 'Full browser version (Sec-CH-UA-Full-Browser-Version)',\n    /**\n     * @description Placeholder for full browser version input field.\n     */\n    fullBrowserVersionPlaceholder: 'Full browser version (e.g. 87.0.4280.88)',\n    /**\n     * @description Label for platform heading section, platform relates to OS like Android, Windows etc.\n     */\n    platformLabel: 'Platform (Sec-CH-UA-Platform / Sec-CH-UA-Platform-Version)',\n    /**\n     * @description Platform row, including platform name and platform version input field.\n     */\n    platformProperties: 'Platform properties',\n    /**\n     * @description Version for platform input field, platform relates to OS like Android, Windows etc.\n     */\n    platformVersion: 'Platform version',\n    /**\n     * @description Placeholder for platform name input field, platform relates to OS like Android, Windows etc.\n     */\n    platformPlaceholder: 'Platform (e.g. Android)',\n    /**\n     * @description Label for architecture (Eg: x86, x64, arm) input field.\n     */\n    architecture: 'Architecture (Sec-CH-UA-Arch)',\n    /**\n     * @description Placeholder for architecture (Eg: x86, x64, arm) input field.\n     */\n    architecturePlaceholder: 'Architecture (e.g. x86)',\n    /**\n     * @description Device model row, including device model input field and mobile checkbox\n     */\n    deviceProperties: 'Device properties',\n    /**\n     * @description Label for Device Model input field.\n     */\n    deviceModel: 'Device model (Sec-CH-UA-Model)',\n    /**\n     * @description Label for Mobile phone checkbox.\n     */\n    mobileCheckboxLabel: 'Mobile',\n    /**\n     * @description Label for button to submit client hints form in DevTools.\n     */\n    update: 'Update',\n    /**\n     *@description Field Error message in the Device settings pane that shows that the entered value has characters that can't be represented in the corresponding User Agent Client Hints\n     */\n    notRepresentable: 'Not representable as structured headers string.',\n    /**\n     * @description Hover text for info icon which explains user agent client hints.\n     */\n    userAgentClientHintsInfo: 'User agent client hints are an alternative to the user agent string that identify the browser and the device in a more structured way with better privacy accounting.',\n    /**\n     * @description Success message when brand row is successfully added in client hints form.\n     * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n     */\n    addedBrand: 'Added brand row',\n    /**\n     * @description Success message when brand row is successfully deleted in client hints form.\n     * Brands here relate to different browser brands/vendors like Google Chrome, Microsoft Edge etc.\n     */\n    deletedBrand: 'Deleted brand row',\n    /**\n     *@description Text that is usually a hyperlink to more documentation\n     */\n    learnMore: 'Learn more',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/emulation/components/UserAgentClientHintsForm.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ClientHintsChangeEvent extends Event {\n    static eventName = 'clienthintschange';\n    constructor() {\n        super(ClientHintsChangeEvent.eventName);\n    }\n}\nexport class ClientHintsSubmitEvent extends Event {\n    static eventName = 'clienthintssubmit';\n    detail;\n    constructor(value) {\n        super(ClientHintsSubmitEvent.eventName);\n        this.detail = { value };\n    }\n}\nconst DEFAULT_METADATA = {\n    brands: [\n        {\n            brand: '',\n            version: '',\n        },\n    ],\n    fullVersionList: [\n        {\n            brand: '',\n            version: '',\n        },\n    ],\n    fullVersion: '',\n    platform: '',\n    platformVersion: '',\n    architecture: '',\n    model: '',\n    mobile: false,\n};\n/**\n * Component for user agent client hints form, it is used in device settings panel\n * and network conditions panel. It is customizable through showMobileCheckbox and showSubmitButton.\n */\nexport class UserAgentClientHintsForm extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #isFormOpened = false;\n    #isFormDisabled = false;\n    #metaData = DEFAULT_METADATA;\n    #showMobileCheckbox = false;\n    #showSubmitButton = false;\n    #useragentModifiedAriaMessage = '';\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [Input.checkboxStyles, userAgentClientHintsFormStyles];\n    }\n    set value(data) {\n        const { metaData = DEFAULT_METADATA, showMobileCheckbox = false, showSubmitButton = false } = data;\n        this.#metaData = {\n            ...this.#metaData,\n            ...metaData,\n        };\n        this.#showMobileCheckbox = showMobileCheckbox;\n        this.#showSubmitButton = showSubmitButton;\n        this.#render();\n    }\n    get value() {\n        return {\n            metaData: this.#metaData,\n        };\n    }\n    set disabled(disableForm) {\n        this.#isFormDisabled = disableForm;\n        this.#isFormOpened = false;\n        this.#render();\n    }\n    get disabled() {\n        return this.#isFormDisabled;\n    }\n    #handleTreeExpand = (event) => {\n        if (event.code === 'Space' || event.code === 'Enter' || event.code === 'ArrowLeft' || event.code === 'ArrowRight') {\n            event.stopPropagation();\n            this.#handleTreeClick(event.code);\n        }\n    };\n    #handleTreeClick = (key) => {\n        if (this.#isFormDisabled) {\n            return;\n        }\n        if ((key === 'ArrowLeft' && !this.#isFormOpened) || (key === 'ArrowRight' && this.#isFormOpened)) {\n            return;\n        }\n        this.#isFormOpened = !this.#isFormOpened;\n        this.#render();\n    };\n    #handleUseragentInputChange = (value, index, brandInputType) => {\n        const updatedUseragent = this.#metaData.brands?.map((browserBrand, brandIndex) => {\n            if (brandIndex === index) {\n                const { brand, version } = browserBrand;\n                if (brandInputType === 'brandName') {\n                    return {\n                        brand: value,\n                        version,\n                    };\n                }\n                return {\n                    brand,\n                    version: value,\n                };\n            }\n            return browserBrand;\n        });\n        this.#metaData = {\n            ...this.#metaData,\n            brands: updatedUseragent,\n        };\n        this.dispatchEvent(new ClientHintsChangeEvent());\n        this.#render();\n    };\n    #handleFullVersionListInputChange = (value, index, brandInputType) => {\n        const fullVersionList = this.#metaData.fullVersionList?.map((browserBrand, brandIndex) => {\n            if (brandIndex === index) {\n                const { brand, version } = browserBrand;\n                if (brandInputType === 'brandName') {\n                    return {\n                        brand: value,\n                        version,\n                    };\n                }\n                return {\n                    brand,\n                    version: value,\n                };\n            }\n            return browserBrand;\n        });\n        this.#metaData = {\n            ...this.#metaData,\n            fullVersionList,\n        };\n        this.dispatchEvent(new ClientHintsChangeEvent());\n        this.#render();\n    };\n    #handleUseragentDelete = (index) => {\n        const { brands = [] } = this.#metaData;\n        brands.splice(index, 1);\n        this.#metaData = {\n            ...this.#metaData,\n            brands,\n        };\n        this.dispatchEvent(new ClientHintsChangeEvent());\n        this.#useragentModifiedAriaMessage = i18nString(UIStrings.deletedBrand);\n        this.#render();\n        // after deleting a brand row, focus on next Brand input if available,\n        // otherwise focus on the \"Add Brand\" button\n        let nextFocusElement = this.shadowRoot?.getElementById(`ua-brand-${index + 1}-input`);\n        if (!nextFocusElement) {\n            nextFocusElement = this.shadowRoot?.getElementById('add-brand-button');\n        }\n        nextFocusElement?.focus();\n    };\n    #handleFullVersionListDelete = (index) => {\n        const { fullVersionList = [] } = this.#metaData;\n        fullVersionList.splice(index, 1);\n        this.#metaData = {\n            ...this.#metaData,\n            fullVersionList,\n        };\n        this.dispatchEvent(new ClientHintsChangeEvent());\n        this.#useragentModifiedAriaMessage = i18nString(UIStrings.deletedBrand);\n        this.#render();\n        // after deleting a brand row, focus on next Brand input if available,\n        // otherwise focus on the \"Add Brand\" button\n        let nextFocusElement = this.shadowRoot?.getElementById(`fvl-brand-${index + 1}-input`);\n        if (!nextFocusElement) {\n            nextFocusElement = this.shadowRoot?.getElementById('add-fvl-brand-button');\n        }\n        nextFocusElement?.focus();\n    };\n    #handleAddUseragentBrandClick = () => {\n        const { brands } = this.#metaData;\n        this.#metaData = {\n            ...this.#metaData,\n            brands: [\n                ...(Array.isArray(brands) ? brands : []),\n                {\n                    brand: '',\n                    version: '',\n                },\n            ],\n        };\n        this.dispatchEvent(new ClientHintsChangeEvent());\n        this.#useragentModifiedAriaMessage = i18nString(UIStrings.addedBrand);\n        this.#render();\n        const brandInputElements = this.shadowRoot?.querySelectorAll('.ua-brand-name-input');\n        if (brandInputElements) {\n            const lastBrandInputElement = Array.from(brandInputElements).pop();\n            if (lastBrandInputElement) {\n                lastBrandInputElement.focus();\n            }\n        }\n    };\n    #handleAddUseragentBrandKeyPress = (event) => {\n        if (event.code === 'Space' || event.code === 'Enter') {\n            event.preventDefault();\n            this.#handleAddUseragentBrandClick();\n        }\n    };\n    #handleAddFullVersionListBrandClick = () => {\n        const { fullVersionList } = this.#metaData;\n        this.#metaData = {\n            ...this.#metaData,\n            fullVersionList: [\n                ...(Array.isArray(fullVersionList) ? fullVersionList : []),\n                {\n                    brand: '',\n                    version: '',\n                },\n            ],\n        };\n        this.dispatchEvent(new ClientHintsChangeEvent());\n        this.#useragentModifiedAriaMessage = i18nString(UIStrings.addedBrand);\n        this.#render();\n        const brandInputElements = this.shadowRoot?.querySelectorAll('.fvl-brand-name-input');\n        if (brandInputElements) {\n            const lastBrandInputElement = Array.from(brandInputElements).pop();\n            if (lastBrandInputElement) {\n                lastBrandInputElement.focus();\n            }\n        }\n    };\n    #handleAddFullVersionListBrandKeyPress = (event) => {\n        if (event.code === 'Space' || event.code === 'Enter') {\n            event.preventDefault();\n            this.#handleAddFullVersionListBrandClick();\n        }\n    };\n    #handleInputChange = (stateKey, value) => {\n        if (stateKey in this.#metaData) {\n            this.#metaData = {\n                ...this.#metaData,\n                [stateKey]: value,\n            };\n            this.#render();\n        }\n        this.dispatchEvent(new ClientHintsChangeEvent());\n    };\n    #handleLinkPress = (event) => {\n        if (event.code === 'Space' || event.code === 'Enter') {\n            event.preventDefault();\n            event.target.click();\n        }\n    };\n    #handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.#showSubmitButton) {\n            this.dispatchEvent(new ClientHintsSubmitEvent(this.#metaData));\n            this.#render();\n        }\n    };\n    #renderInputWithLabel(label, placeholder, value, stateKey) {\n        const handleInputChange = (event) => {\n            const value = event.target.value;\n            this.#handleInputChange(stateKey, value);\n        };\n        return html `\n      <label class=\"full-row label input-field-label-container\">\n        ${label}\n        <input\n          class=\"input-field\"\n          type=\"text\"\n          @input=${handleInputChange}\n          .value=${value}\n          placeholder=${placeholder}\n          jslog=${VisualLogging.textField().track({ change: true }).context(Platform.StringUtilities.toKebabCase(stateKey))}\n          />\n      </label>\n    `;\n    }\n    #renderPlatformSection() {\n        const { platform, platformVersion } = this.#metaData;\n        const handlePlatformNameChange = (event) => {\n            const value = event.target.value;\n            this.#handleInputChange('platform', value);\n        };\n        const handlePlatformVersionChange = (event) => {\n            const value = event.target.value;\n            this.#handleInputChange('platformVersion', value);\n        };\n        return html `\n      <span class=\"full-row label\">${i18nString(UIStrings.platformLabel)}</span>\n      <div class=\"full-row brand-row\" aria-label=${i18nString(UIStrings.platformProperties)} role=\"group\">\n        <input\n          class=\"input-field half-row\"\n          type=\"text\"\n          @input=${handlePlatformNameChange}\n          .value=${platform}\n          placeholder=${i18nString(UIStrings.platformPlaceholder)}\n          aria-label=${i18nString(UIStrings.platformLabel)}\n          jslog=${VisualLogging.textField('platform').track({\n            change: true,\n        })}\n        />\n        <input\n          class=\"input-field half-row\"\n          type=\"text\"\n          @input=${handlePlatformVersionChange}\n          .value=${platformVersion}\n          placeholder=${i18nString(UIStrings.platformVersion)}\n          aria-label=${i18nString(UIStrings.platformVersion)}\n          jslog=${VisualLogging.textField('platform-version').track({\n            change: true,\n        })}\n        />\n      </div>\n    `;\n    }\n    #renderDeviceModelSection() {\n        const { model, mobile } = this.#metaData;\n        const handleDeviceModelChange = (event) => {\n            const value = event.target.value;\n            this.#handleInputChange('model', value);\n        };\n        const handleMobileChange = (event) => {\n            const value = event.target.checked;\n            this.#handleInputChange('mobile', value);\n        };\n        const mobileCheckboxInput = this.#showMobileCheckbox ? html `\n      <label class=\"mobile-checkbox-container\">\n        <input type=\"checkbox\" @input=${handleMobileChange} .checked=${mobile}\n          jslog=${VisualLogging.toggle('mobile').track({\n            click: true,\n        })}\n        />\n        ${i18nString(UIStrings.mobileCheckboxLabel)}\n      </label>\n    ` :\n            html ``;\n        return html `\n      <span class=\"full-row label\">${i18nString(UIStrings.deviceModel)}</span>\n      <div class=\"full-row brand-row\" aria-label=${i18nString(UIStrings.deviceProperties)} role=\"group\">\n        <input\n          class=\"input-field ${this.#showMobileCheckbox ? 'device-model-input' : 'full-row'}\"\n          type=\"text\"\n          @input=${handleDeviceModelChange}\n          .value=${model}\n          placeholder=${i18nString(UIStrings.deviceModel)}\n          jslog=${VisualLogging.textField('model').track({\n            change: true,\n        })}\n        />\n        ${mobileCheckboxInput}\n      </div>\n    `;\n    }\n    #renderUseragent() {\n        const { brands = [\n            {\n                brand: '',\n                version: '',\n            },\n        ], } = this.#metaData;\n        const brandElements = brands.map((brandRow, index) => {\n            const { brand, version } = brandRow;\n            const handleDeleteClick = () => {\n                this.#handleUseragentDelete(index);\n            };\n            const handleKeyPress = (event) => {\n                if (event.code === 'Space' || event.code === 'Enter') {\n                    event.preventDefault();\n                    handleDeleteClick();\n                }\n            };\n            const handleBrandChange = (event) => {\n                const value = event.target.value;\n                this.#handleUseragentInputChange(value, index, 'brandName');\n            };\n            const handleVersionChange = (event) => {\n                const value = event.target.value;\n                this.#handleUseragentInputChange(value, index, 'brandVersion');\n            };\n            return html `\n        <div class=\"full-row brand-row\" aria-label=${i18nString(UIStrings.brandProperties)} role=\"group\">\n          <input\n            class=\"input-field ua-brand-name-input\"\n            type=\"text\"\n            @input=${handleBrandChange}\n            .value=${brand}\n            id=\"ua-brand-${index + 1}-input\"\n            placeholder=${i18nString(UIStrings.brandName)}\n            aria-label=${i18nString(UIStrings.brandNameAriaLabel, {\n                PH1: index + 1,\n            })}\n            jslog=${VisualLogging.textField('brand-name').track({\n                change: true,\n            })}\n          />\n          <input\n            class=\"input-field\"\n            type=\"text\"\n            @input=${handleVersionChange}\n            .value=${version}\n            placeholder=${i18nString(UIStrings.significantBrandVersionPlaceholder)}\n            aria-label=${i18nString(UIStrings.brandVersionAriaLabel, {\n                PH1: index + 1,\n            })}\n            jslog=${VisualLogging.textField('brand-version').track({\n                change: true,\n            })}\n          />\n          <devtools-icon\n            .data=${{ color: 'var(--icon-default)', iconName: 'bin', width: '16px', height: '16px' }}\n            title=${i18nString(UIStrings.brandUserAgentDelete)}\n            class=\"delete-icon\"\n            tabindex=\"0\"\n            role=\"button\"\n            @click=${handleDeleteClick}\n            @keypress=${handleKeyPress}\n            aria-label=${i18nString(UIStrings.brandUserAgentDelete)}\n          >\n          </devtools-icon>\n        </div>\n      `;\n        });\n        return html `\n      <span class=\"full-row label\">${i18nString(UIStrings.useragent)}</span>\n      ${brandElements}\n      <div\n        class=\"add-container full-row\"\n        role=\"button\"\n        tabindex=\"0\"\n        id=\"add-brand-button\"\n        aria-label=${i18nString(UIStrings.addBrand)}\n        @click=${this.#handleAddUseragentBrandClick}\n        @keypress=${this.#handleAddUseragentBrandKeyPress}\n      >\n        <devtools-icon\n          aria-hidden=\"true\"\n          .data=${{ color: 'var(--icon-default)', iconName: 'plus', width: '16px' }}\n        >\n        </devtools-icon>\n        ${i18nString(UIStrings.addBrand)}\n      </div>\n    `;\n    }\n    #renderFullVersionList() {\n        const { fullVersionList = [\n            {\n                brand: '',\n                version: '',\n            },\n        ], } = this.#metaData;\n        const elements = fullVersionList.map((brandRow, index) => {\n            const { brand, version } = brandRow;\n            const handleDeleteClick = () => {\n                this.#handleFullVersionListDelete(index);\n            };\n            const handleKeyPress = (event) => {\n                if (event.code === 'Space' || event.code === 'Enter') {\n                    event.preventDefault();\n                    handleDeleteClick();\n                }\n            };\n            const handleBrandChange = (event) => {\n                const value = event.target.value;\n                this.#handleFullVersionListInputChange(value, index, 'brandName');\n            };\n            const handleVersionChange = (event) => {\n                const value = event.target.value;\n                this.#handleFullVersionListInputChange(value, index, 'brandVersion');\n            };\n            return html `\n        <div\n          class=\"full-row brand-row\"\n          aria-label=${i18nString(UIStrings.brandProperties)}\n          jslog=${VisualLogging.section('full-version')}\n          role=\"group\">\n          <input\n            class=\"input-field fvl-brand-name-input\"\n            type=\"text\"\n            @input=${handleBrandChange}\n            .value=${brand}\n            id=\"fvl-brand-${index + 1}-input\"\n            placeholder=${i18nString(UIStrings.brandName)}\n            aria-label=${i18nString(UIStrings.brandNameAriaLabel, {\n                PH1: index + 1,\n            })}\n            jslog=${VisualLogging.textField('brand-name').track({\n                change: true,\n            })}\n          />\n          <input\n            class=\"input-field\"\n            type=\"text\"\n            @input=${handleVersionChange}\n            .value=${version}\n            placeholder=${i18nString(UIStrings.brandVersionPlaceholder)}\n            aria-label=${i18nString(UIStrings.brandVersionAriaLabel, {\n                PH1: index + 1,\n            })}\n            jslog=${VisualLogging.textField('brand-version').track({\n                change: true,\n            })}\n          />\n          <devtools-icon\n            .data=${{ color: 'var(--icon-default)', iconName: 'bin', width: '16px', height: '16px' }}\n            title=${i18nString(UIStrings.brandFullVersionListDelete)}\n            class=\"delete-icon\"\n            tabindex=\"0\"\n            role=\"button\"\n            @click=${handleDeleteClick}\n            @keypress=${handleKeyPress}\n            aria-label=${i18nString(UIStrings.brandFullVersionListDelete)}\n          >\n          </devtools-icon>\n        </div>\n      `;\n        });\n        return html `\n      <span class=\"full-row label\">${i18nString(UIStrings.fullVersionList)}</span>\n      ${elements}\n      <div\n        class=\"add-container full-row\"\n        role=\"button\"\n        tabindex=\"0\"\n        id=\"add-fvl-brand-button\"\n        aria-label=${i18nString(UIStrings.addBrand)}\n        @click=${this.#handleAddFullVersionListBrandClick}\n        @keypress=${this.#handleAddFullVersionListBrandKeyPress}\n      >\n        <devtools-icon\n          aria-hidden=\"true\"\n          .data=${{ color: 'var(--icon-default)', iconName: 'plus', width: '16px' }}\n        >\n        </devtools-icon>\n        ${i18nString(UIStrings.addBrand)}\n      </div>\n    `;\n    }\n    #render() {\n        const { fullVersion, architecture } = this.#metaData;\n        const useragentSection = this.#renderUseragent();\n        const fullVersionListSection = this.#renderFullVersionList();\n        const fullBrowserInput = this.#renderInputWithLabel(i18nString(UIStrings.fullBrowserVersion), i18nString(UIStrings.fullBrowserVersionPlaceholder), fullVersion || '', 'fullVersion');\n        const platformSection = this.#renderPlatformSection();\n        const architectureInput = this.#renderInputWithLabel(i18nString(UIStrings.architecture), i18nString(UIStrings.architecturePlaceholder), architecture, 'architecture');\n        const deviceModelSection = this.#renderDeviceModelSection();\n        // clang-format off\n        const submitButton = this.#showSubmitButton ? html `\n      <devtools-button\n        .variant=${\"outlined\" /* Buttons.Button.Variant.OUTLINED */}\n        .type=${'submit'}\n      >\n        ${i18nString(UIStrings.update)}\n      </devtools-button>\n    ` : LitHtml.nothing;\n        // clang-format on\n        // clang-format off\n        const output = html `\n      <section class=\"root\">\n        <div\n          class=\"tree-title\"\n          role=\"button\"\n          @click=${this.#handleTreeClick}\n          tabindex=${this.#isFormDisabled ? '-1' : '0'}\n          @keydown=${this.#handleTreeExpand}\n          aria-expanded=${this.#isFormOpened}\n          aria-controls=\"form-container\"\n          aria-disabled=${this.#isFormDisabled}\n          aria-label=${i18nString(UIStrings.title)}\n          jslog=${VisualLogging.toggleSubpane().track({ click: true })}\n        >\n          <devtools-icon\n            class=${this.#isFormOpened ? 'rotate-icon' : ''}\n            .data=${{\n            color: 'var(--icon-default)',\n            iconName: 'triangle-right',\n            width: '14px',\n        }}\n          ></devtools-icon>\n          ${i18nString(UIStrings.title)}\n          <devtools-icon\n            .data=${{\n            color: 'var(--icon-default)',\n            iconName: 'info',\n            width: '16px',\n        }}\n            title=${i18nString(UIStrings.userAgentClientHintsInfo)}\n            class='info-icon'\n          ></devtools-icon>\n          <x-link\n           tabindex=${this.#isFormDisabled ? '-1' : '0'}\n           href=\"https://web.dev/user-agent-client-hints/\"\n           target=\"_blank\"\n           class=\"link\"\n           @keypress=${this.#handleLinkPress}\n           aria-label=${i18nString(UIStrings.userAgentClientHintsInfo)}\n           jslog=${VisualLogging.link('learn-more').track({ click: true })}\n          >\n            ${i18nString(UIStrings.learnMore)}\n          </x-link>\n        </div>\n        <form\n          id=\"form-container\"\n          class=\"form-container ${this.#isFormOpened ? '' : 'hide-container'}\"\n          @submit=${this.#handleSubmit}\n        >\n          ${useragentSection}\n          ${fullVersionListSection}\n          ${fullBrowserInput}\n          ${platformSection}\n          ${architectureInput}\n          ${deviceModelSection}\n          ${submitButton}\n        </form>\n        <div aria-live=\"polite\" aria-label=${this.#useragentModifiedAriaMessage}></div>\n      </section>\n    `;\n        // clang-format on\n        LitHtml.render(output, this.#shadow, { host: this });\n    }\n    validate = () => {\n        for (const [metaDataKey, metaDataValue] of Object.entries(this.#metaData)) {\n            if (metaDataKey === 'brands' || metaDataKey === 'fullVersionList') {\n                // for sturctured fields, check each individual brand/version\n                const isBrandValid = this.#metaData.brands?.every(({ brand, version }) => {\n                    const brandNameResult = EmulationUtils.UserAgentMetadata.validateAsStructuredHeadersString(brand, i18nString(UIStrings.notRepresentable));\n                    const brandVersionResult = EmulationUtils.UserAgentMetadata.validateAsStructuredHeadersString(version, i18nString(UIStrings.notRepresentable));\n                    return brandNameResult.valid && brandVersionResult.valid;\n                });\n                if (!isBrandValid) {\n                    return { valid: false, errorMessage: i18nString(UIStrings.notRepresentable) };\n                }\n            }\n            else {\n                // otherwise, validate the value as a string\n                const metaDataError = EmulationUtils.UserAgentMetadata.validateAsStructuredHeadersString(metaDataValue, i18nString(UIStrings.notRepresentable));\n                if (!metaDataError.valid) {\n                    return metaDataError;\n                }\n            }\n        }\n        return { valid: true };\n    };\n}\ncustomElements.define('devtools-user-agent-client-hints-form', UserAgentClientHintsForm);\n//# sourceMappingURL=UserAgentClientHintsForm.js.map"],"names":["CHAR_MINUS","CHAR_0","CHAR_9","CHAR_A","CHAR_Z","CHAR_LOWER_A","CHAR_LOWER_Z","CHAR_COLON","CHAR_STAR","CHAR_UNDERSCORE","CHAR_DOT","CHAR_SLASH","CHAR_PLUS","CHAR_EXCLAMATION","CHAR_HASH","CHAR_DOLLAR","CHAR_PERCENT","CHAR_AND","CHAR_SQUOTE","CHAR_HAT","CHAR_BACKTICK","CHAR_PIPE","CHAR_TILDE","CHAR_MIN_ASCII_PRINTABLE","CHAR_MAX_ASCII_PRINTABLE","isDigit","charCode","isAlpha","isLcAlpha","isTChar","makeError","serializeItem","input","bareItemVal","serializeBareItem","paramVal","serializeParameters","output","item","nameResult","serializeKey","itemVal","itemValResult","firstChar","i","char","serializeInteger","serializeDecimal","serializeString","serializeToken","serializeBoolean","serializeByteSequence","_input","charStr","validateAsStructuredHeadersString","value","errorString","styles","html","LitHtml","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","ClientHintsChangeEvent","ClientHintsSubmitEvent","DEFAULT_METADATA","UserAgentClientHintsForm","#shadow","#isFormOpened","#isFormDisabled","#metaData","#showMobileCheckbox","#showSubmitButton","#useragentModifiedAriaMessage","Input.checkboxStyles","userAgentClientHintsFormStyles","data","metaData","showMobileCheckbox","showSubmitButton","#render","disableForm","#handleTreeExpand","event","#handleTreeClick","key","#handleUseragentInputChange","index","brandInputType","updatedUseragent","browserBrand","brandIndex","brand","version","#handleFullVersionListInputChange","fullVersionList","#handleUseragentDelete","brands","nextFocusElement","#handleFullVersionListDelete","#handleAddUseragentBrandClick","brandInputElements","lastBrandInputElement","#handleAddUseragentBrandKeyPress","#handleAddFullVersionListBrandClick","#handleAddFullVersionListBrandKeyPress","#handleInputChange","stateKey","#handleLinkPress","#handleSubmit","#renderInputWithLabel","label","placeholder","VisualLogging.textField","Platform.StringUtilities.toKebabCase","#renderPlatformSection","platform","platformVersion","handlePlatformNameChange","handlePlatformVersionChange","#renderDeviceModelSection","model","mobile","handleDeviceModelChange","handleMobileChange","mobileCheckboxInput","VisualLogging.toggle","#renderUseragent","brandElements","brandRow","handleDeleteClick","handleKeyPress","handleBrandChange","handleVersionChange","#renderFullVersionList","elements","VisualLogging.section","fullVersion","architecture","useragentSection","fullVersionListSection","fullBrowserInput","platformSection","architectureInput","deviceModelSection","submitButton","LitHtml.nothing","VisualLogging.toggleSubpane","VisualLogging.link","LitHtml.render","metaDataKey","metaDataValue","brandNameResult","EmulationUtils.UserAgentMetadata.validateAsStructuredHeadersString","brandVersionResult","metaDataError"],"mappings":"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"}