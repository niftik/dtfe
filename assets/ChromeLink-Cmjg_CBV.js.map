{"version":3,"file":"ChromeLink-Cmjg_CBV.js","sources":["../../ui/components/chrome_link/chromeLink.css.js","../../ui/components/chrome_link/ChromeLink.js"],"sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2022 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.link {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n  outline-offset: 2px;\n}\n\n/*# sourceURL=chromeLink.css */\n`);\n\nexport default styles;\n","// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\nimport * as ComponentHelpers from '../helpers/helpers.js';\nimport chromeLinkStyles from './chromeLink.css.js';\nconst { html } = LitHtml;\n// Use this component to render links to 'chrome://...'-URLs\n// (for which regular <x-link>s do not work).\nexport class ChromeLink extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #boundRender = this.#render.bind(this);\n    #href = '';\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [chromeLinkStyles];\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    set href(href) {\n        if (!Common.ParsedURL.schemeIs(href, 'chrome:')) {\n            throw new Error('ChromeLink href needs to start with \\'chrome://\\'');\n        }\n        this.#href = href;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    // Navigating to a chrome:// link via a normal anchor doesn't work, so we \"navigate\"\n    // there using CDP.\n    #handleClick(event) {\n        const rootTarget = SDK.TargetManager.TargetManager.instance().rootTarget();\n        if (rootTarget === null) {\n            return;\n        }\n        const url = this.#href;\n        void rootTarget.targetAgent().invoke_createTarget({ url }).then(result => {\n            if (result.getError()) {\n                Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(url);\n            }\n        });\n        event.consume(true);\n    }\n    #render() {\n        const urlForContext = new URL(this.#href);\n        urlForContext.search = '';\n        const jslogContext = Platform.StringUtilities.toKebabCase(urlForContext.toString());\n        // clang-format off\n        LitHtml.render(\n        /* x-link doesn't work with custom click/keydown handlers */\n        /* eslint-disable rulesdir/ban_a_tags_in_lit_html */\n        html `\n        <a href=${this.#href} class=\"link\" target=\"_blank\"\n          jslog=${VisualLogging.link().track({ click: true }).context(jslogContext)}\n          @click=${this.#handleClick}><slot></slot></a>\n      `, this.#shadow, { host: this });\n        // clang-format on\n    }\n}\ncustomElements.define('devtools-chrome-link', ChromeLink);\n//# sourceMappingURL=ChromeLink.js.map"],"names":["styles","html","LitHtml","ChromeLink","#shadow","#boundRender","#render","#href","chromeLinkStyles","ComponentHelpers.ScheduledRender.scheduleRender","href","Common.ParsedURL.schemeIs","#handleClick","event","rootTarget","SDK.TargetManager.TargetManager","url","result","Host.InspectorFrontendHost.InspectorFrontendHostInstance","urlForContext","jslogContext","Platform.StringUtilities.toKebabCase","LitHtml.render","VisualLogging.link"],"mappings":"oGAKA,MAAMA,EAAS,IAAI,cACnBA,EAAO,YACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAcC,ECVD,KAAM,CAAE,KAAAC,CAAM,EAAGC,EAGV,MAAMC,UAAmB,WAAY,CACxCC,GAAU,KAAK,aAAa,CAAE,KAAM,MAAQ,CAAA,EAC5CC,GAAe,KAAKC,GAAQ,KAAK,IAAI,EACrCC,GAAQ,GACR,mBAAoB,CAChB,KAAKH,GAAQ,mBAAqB,CAACI,CAAgB,EAC9CC,EAAgD,KAAM,KAAKJ,EAAY,CAC/E,CACD,IAAI,KAAKK,EAAM,CACX,GAAI,CAACC,EAA0BD,EAAM,SAAS,EAC1C,MAAM,IAAI,MAAM,iDAAmD,EAEvE,KAAKH,GAAQG,EACRD,EAAgD,KAAM,KAAKJ,EAAY,CAC/E,CAGDO,GAAaC,EAAO,CAChB,MAAMC,EAAaC,EAAgC,SAAU,EAAC,WAAU,EACxE,GAAID,IAAe,KACf,OAEJ,MAAME,EAAM,KAAKT,GACZO,EAAW,YAAW,EAAG,oBAAoB,CAAE,IAAAE,EAAK,EAAE,KAAKC,GAAU,CAClEA,EAAO,YACPC,EAAyD,aAAaF,CAAG,CAEzF,CAAS,EACDH,EAAM,QAAQ,EAAI,CACrB,CACDP,IAAU,CACN,MAAMa,EAAgB,IAAI,IAAI,KAAKZ,EAAK,EACxCY,EAAc,OAAS,GACvB,MAAMC,EAAeC,EAAqCF,EAAc,SAAU,CAAA,EAElFG,EAGArB;AAAA,kBACU,KAAKM,EAAK;AAAA,kBACVgB,EAAkB,EAAG,MAAM,CAAE,MAAO,GAAM,EAAE,QAAQH,CAAY,CAAC;AAAA,mBAChE,KAAKR,EAAY;AAAA,QAC3B,KAAKR,GAAS,CAAE,KAAM,IAAM,CAAA,CAEhC,CACL,CACA,eAAe,OAAO,uBAAwBD,CAAU"}