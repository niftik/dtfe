{"version":3,"file":"emulation-huZ86Oug.js","sources":["../../panels/settings/emulation/devicesSettingsTab.css.js","../../panels/settings/emulation/DevicesSettingsTab.js"],"sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.devices-settings-tab .settings-container-wrapper {\n  padding-top: 5px;\n}\n\n.devices-settings-tab .settings-tab.settings-content {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  height: 100%;\n  margin: 0;\n}\n\n.devices-settings-tab .devices-button-row {\n  flex: none;\n  display: flex;\n\n  devtools-button {\n    margin: 4px 0 0 5px;\n  }\n}\n\n.devices-settings-tab .devices-list {\n  width: min(350px, 100%);\n  margin-top: 10px;\n}\n\n.devices-list-item {\n  padding: 3px 5px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  flex: auto 1 1;\n  overflow: hidden;\n  color: var(--sys-color-on-surface);\n  user-select: none;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n.devices-list-checkbox {\n  height: 12px;\n  width: 12px;\n  margin: 2px 5px 2px 2px;\n  flex: none;\n  pointer-events: none;\n}\n\n.devices-list-checkbox:focus {\n  outline: auto 5px -webkit-focus-ring-color;\n}\n\n.device-name {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.devices-edit-fields {\n  flex: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  padding-left: 4px;\n  margin-bottom: 5px;\n}\n\n.devices-edit-fields b {\n  margin-top: 8px;\n  margin-bottom: 0;\n}\n\n.devices-edit-client-hints-heading {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 5px;\n}\n/* Don't want the bottom margin in the specific case of the folding one;\n * it messes with alignment with the arrow (which is a ::before) and  it's\n * spaced reasonably without it anyway\n */\nli .devices-edit-client-hints-heading {\n  margin-bottom: 0;\n}\n\n.devices-edit-client-hints-heading b {\n  margin-inline-end: 2px;\n}\n\n.devices-edit-client-hints-heading .help-icon {\n  margin-left: 2px;\n  margin-right: 2px;\n  vertical-align: middle;\n}\n\n.devices-edit-client-hints-heading a:focus {\n  box-shadow: var(--sys-color-state-focus-ring);\n}\n\n.devices-edit-fields input {\n  flex: auto;\n  margin: 8px 5px 0;\n}\n\nli.devices-edit-client-hints-field {\n  /* Cancel out padding from treeview's .tree-outline ol */\n  left: -12px;\n}\n\n.devices-edit-client-hints-field input {\n  flex: auto;\n  margin: 8px 5px 0;\n}\n\n.devices-edit-fields .device-edit-fixed {\n  flex: 0 0 140px;\n}\n\n.devices-edit-fields select {\n  margin: 8px 5px 0;\n}\n\n/*# sourceURL=devicesSettingsTab.css */\n`);\n\nexport default styles;\n","// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as EmulationModel from '../../../models/emulation/emulation.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as EmulationComponents from './components/components.js';\nimport devicesSettingsTabStyles from './devicesSettingsTab.css.js';\nconst UIStrings = {\n    /**\n     *@description Title for a section of the UI that shows all of the devices the user can emulate, in the Device Toolbar.\n     */\n    emulatedDevices: 'Emulated Devices',\n    /**\n     *@description Button to add a custom device (e.g. phone, tablet) the Device Toolbar.\n     */\n    addCustomDevice: 'Add custom device...',\n    /**\n     *@description Label/title for UI to add a new custom device type. Device means mobile/tablet etc.\n     */\n    device: 'Device',\n    /**\n     *@description Placeholder for text input for the name of a custom device.\n     */\n    deviceName: 'Device Name',\n    /**\n     *@description Placeholder text for text input for the width of a custom device in pixels.\n     */\n    width: 'Width',\n    /**\n     *@description Placeholder text for text input for the height of a custom device in pixels.\n     */\n    height: 'Height',\n    /**\n     *@description Placeholder text for text input for the height/width ratio of a custom device in pixels.\n     */\n    devicePixelRatio: 'Device pixel ratio',\n    /**\n     *@description Label in the Devices settings pane for the user agent string input of a custom device\n     */\n    userAgentString: 'User agent string',\n    /**\n     *@description Tooltip text for a drop-down in the Devices settings pane, for the 'user agent type' input of a custom device.\n     * 'Type' refers to different options e.g. mobile or desktop.\n     */\n    userAgentType: 'User agent type',\n    /**\n     *@description Error message in the Devices settings pane that declares the maximum length of the device name input\n     *@example {50} PH1\n     */\n    deviceNameMustBeLessThanS: 'Device name must be less than {PH1} characters.',\n    /**\n     *@description Error message in the Devices settings pane that declares that the device name input must not be empty\n     */\n    deviceNameCannotBeEmpty: 'Device name cannot be empty.',\n    /**\n     *@description Success message for screen readers when device is added.\n     *@example {TestDevice} PH1\n     */\n    deviceAddedOrUpdated: 'Device {PH1} successfully added/updated.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/emulation/DevicesSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class DevicesSettingsTab extends UI.Widget.VBox {\n    containerElement;\n    addCustomButton;\n    ariaSuccessMessageElement;\n    list;\n    muteUpdate;\n    emulatedDevicesList;\n    editor;\n    constructor() {\n        super();\n        this.element.setAttribute('jslog', `${VisualLogging.pane('devices')}`);\n        this.element.classList.add('settings-tab-container');\n        this.element.classList.add('devices-settings-tab');\n        const header = this.element.createChild('header');\n        UI.UIUtils.createTextChild(header.createChild('h1'), i18nString(UIStrings.emulatedDevices));\n        this.containerElement = this.element.createChild('div', 'settings-container-wrapper')\n            .createChild('div', 'settings-tab settings-content settings-container');\n        const buttonsRow = this.containerElement.createChild('div', 'devices-button-row');\n        this.addCustomButton = UI.UIUtils.createTextButton(i18nString(UIStrings.addCustomDevice), this.addCustomDevice.bind(this), { jslogContext: 'add-custom-device' });\n        this.addCustomButton.id = 'custom-device-add-button';\n        buttonsRow.appendChild(this.addCustomButton);\n        this.ariaSuccessMessageElement = this.containerElement.createChild('div', 'device-success-message');\n        UI.ARIAUtils.markAsPoliteLiveRegion(this.ariaSuccessMessageElement, false);\n        this.list = new UI.ListWidget.ListWidget(this, false /* delegatesFocus */);\n        this.list.element.classList.add('devices-list');\n        this.list.show(this.containerElement);\n        this.muteUpdate = false;\n        this.emulatedDevicesList = EmulationModel.EmulatedDevices.EmulatedDevicesList.instance();\n        this.emulatedDevicesList.addEventListener(\"CustomDevicesUpdated\" /* EmulationModel.EmulatedDevices.Events.CUSTOM_DEVICES_UPDATED */, this.devicesUpdated, this);\n        this.emulatedDevicesList.addEventListener(\"StandardDevicesUpdated\" /* EmulationModel.EmulatedDevices.Events.STANDARD_DEVICES_UPDATED */, this.devicesUpdated, this);\n        this.setDefaultFocusedElement(this.addCustomButton);\n    }\n    wasShown() {\n        super.wasShown();\n        this.devicesUpdated();\n        this.registerCSSFiles([devicesSettingsTabStyles]);\n        this.list.registerCSSFiles([devicesSettingsTabStyles]);\n    }\n    devicesUpdated() {\n        if (this.muteUpdate) {\n            return;\n        }\n        this.list.clear();\n        let devices = this.emulatedDevicesList.custom().slice();\n        for (let i = 0; i < devices.length; ++i) {\n            this.list.appendItem(devices[i], true);\n        }\n        this.list.appendSeparator();\n        devices = this.emulatedDevicesList.standard().slice();\n        devices.sort(EmulationModel.EmulatedDevices.EmulatedDevice.deviceComparator);\n        for (let i = 0; i < devices.length; ++i) {\n            this.list.appendItem(devices[i], false);\n        }\n    }\n    muteAndSaveDeviceList(custom) {\n        this.muteUpdate = true;\n        if (custom) {\n            this.emulatedDevicesList.saveCustomDevices();\n        }\n        else {\n            this.emulatedDevicesList.saveStandardDevices();\n        }\n        this.muteUpdate = false;\n    }\n    addCustomDevice() {\n        const device = new EmulationModel.EmulatedDevices.EmulatedDevice();\n        device.deviceScaleFactor = 0;\n        device.horizontal.width = 700;\n        device.horizontal.height = 400;\n        device.vertical.width = 400;\n        device.vertical.height = 700;\n        this.list.addNewItem(this.emulatedDevicesList.custom().length, device);\n    }\n    toNumericInputValue(value) {\n        return value ? String(value) : '';\n    }\n    renderItem(device, editable) {\n        const label = document.createElement('label');\n        label.classList.add('devices-list-item');\n        const checkbox = label.createChild('input', 'devices-list-checkbox');\n        checkbox.type = 'checkbox';\n        checkbox.checked = device.show();\n        checkbox.addEventListener('click', onItemClicked.bind(this), false);\n        checkbox.setAttribute('jslog', `${VisualLogging.toggle().track({ click: true })}`);\n        const span = document.createElement('span');\n        span.classList.add('device-name');\n        span.appendChild(document.createTextNode(device.title));\n        label.appendChild(span);\n        return label;\n        function onItemClicked(event) {\n            const show = checkbox.checked;\n            device.setShow(show);\n            this.muteAndSaveDeviceList(editable);\n            event.consume();\n        }\n    }\n    removeItemRequested(item) {\n        this.emulatedDevicesList.removeCustomDevice(item);\n    }\n    commitEdit(device, editor, isNew) {\n        device.title = editor.control('title').value.trim();\n        device.vertical.width = editor.control('width').value ? parseInt(editor.control('width').value, 10) : 0;\n        device.vertical.height = editor.control('height').value ? parseInt(editor.control('height').value, 10) : 0;\n        device.horizontal.width = device.vertical.height;\n        device.horizontal.height = device.vertical.width;\n        device.deviceScaleFactor = editor.control('scale').value ? parseFloat(editor.control('scale').value) : 0;\n        device.userAgent = editor.control('user-agent').value;\n        device.modes = [];\n        device.modes.push({\n            title: '',\n            orientation: EmulationModel.EmulatedDevices.Vertical,\n            insets: new EmulationModel.DeviceModeModel.Insets(0, 0, 0, 0),\n            image: null,\n        });\n        device.modes.push({\n            title: '',\n            orientation: EmulationModel.EmulatedDevices.Horizontal,\n            insets: new EmulationModel.DeviceModeModel.Insets(0, 0, 0, 0),\n            image: null,\n        });\n        device.capabilities = [];\n        const uaType = editor.control('ua-type').value;\n        if (uaType === \"Mobile\" /* EmulationModel.DeviceModeModel.UA.MOBILE */ ||\n            uaType === \"Mobile (no touch)\" /* EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH */) {\n            device.capabilities.push(\"mobile\" /* EmulationModel.EmulatedDevices.Capability.MOBILE */);\n        }\n        if (uaType === \"Mobile\" /* EmulationModel.DeviceModeModel.UA.MOBILE */ ||\n            uaType === \"Desktop (touch)\" /* EmulationModel.DeviceModeModel.UA.DESKTOP_TOUCH */) {\n            device.capabilities.push(\"touch\" /* EmulationModel.EmulatedDevices.Capability.TOUCH */);\n        }\n        const userAgentControlValue = editor.control('ua-metadata')\n            .value.metaData;\n        if (userAgentControlValue) {\n            device.userAgentMetadata = {\n                ...userAgentControlValue,\n                mobile: (uaType === \"Mobile\" /* EmulationModel.DeviceModeModel.UA.MOBILE */ ||\n                    uaType === \"Mobile (no touch)\" /* EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH */),\n            };\n        }\n        if (isNew) {\n            this.emulatedDevicesList.addCustomDevice(device);\n        }\n        else {\n            this.emulatedDevicesList.saveCustomDevices();\n        }\n        this.addCustomButton.scrollIntoViewIfNeeded();\n        this.addCustomButton.focus();\n        this.ariaSuccessMessageElement.setAttribute('aria-label', i18nString(UIStrings.deviceAddedOrUpdated, { PH1: device.title }));\n    }\n    beginEdit(device) {\n        const editor = this.createEditor();\n        editor.control('title').value = device.title;\n        editor.control('width').value = this.toNumericInputValue(device.vertical.width);\n        editor.control('height').value = this.toNumericInputValue(device.vertical.height);\n        editor.control('scale').value = this.toNumericInputValue(device.deviceScaleFactor);\n        editor.control('user-agent').value = device.userAgent;\n        let uaType;\n        if (device.mobile()) {\n            uaType =\n                device.touch() ? \"Mobile\" /* EmulationModel.DeviceModeModel.UA.MOBILE */ : \"Mobile (no touch)\" /* EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH */;\n        }\n        else {\n            uaType =\n                device.touch() ? \"Desktop (touch)\" /* EmulationModel.DeviceModeModel.UA.DESKTOP_TOUCH */ : \"Desktop\" /* EmulationModel.DeviceModeModel.UA.DESKTOP */;\n        }\n        editor.control('ua-type').value = uaType;\n        editor.control('ua-metadata')\n            .value = { metaData: device.userAgentMetadata || undefined };\n        return editor;\n    }\n    createEditor() {\n        if (this.editor) {\n            return this.editor;\n        }\n        const editor = new UI.ListWidget.Editor();\n        this.editor = editor;\n        const content = editor.contentElement();\n        const deviceFields = content.createChild('div', 'devices-edit-fields');\n        UI.UIUtils.createTextChild(deviceFields.createChild('b'), i18nString(UIStrings.device));\n        const deviceNameField = editor.createInput('title', 'text', i18nString(UIStrings.deviceName), titleValidator);\n        deviceFields.createChild('div', 'hbox').appendChild(deviceNameField);\n        deviceNameField.id = 'custom-device-name-field';\n        const screen = deviceFields.createChild('div', 'hbox');\n        screen.appendChild(editor.createInput('width', 'text', i18nString(UIStrings.width), widthValidator));\n        screen.appendChild(editor.createInput('height', 'text', i18nString(UIStrings.height), heightValidator));\n        const dpr = editor.createInput('scale', 'text', i18nString(UIStrings.devicePixelRatio), scaleValidator);\n        dpr.classList.add('device-edit-fixed');\n        screen.appendChild(dpr);\n        const uaStringFields = content.createChild('div', 'devices-edit-fields');\n        UI.UIUtils.createTextChild(uaStringFields.createChild('b'), i18nString(UIStrings.userAgentString));\n        const ua = uaStringFields.createChild('div', 'hbox');\n        ua.appendChild(editor.createInput('user-agent', 'text', i18nString(UIStrings.userAgentString), () => {\n            return { valid: true, errorMessage: undefined };\n        }));\n        const uaTypeOptions = [\n            \"Mobile\" /* EmulationModel.DeviceModeModel.UA.MOBILE */,\n            \"Mobile (no touch)\" /* EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH */,\n            \"Desktop\" /* EmulationModel.DeviceModeModel.UA.DESKTOP */,\n            \"Desktop (touch)\" /* EmulationModel.DeviceModeModel.UA.DESKTOP_TOUCH */,\n        ];\n        const uaType = editor.createSelect('ua-type', uaTypeOptions, () => {\n            return { valid: true, errorMessage: undefined };\n        }, i18nString(UIStrings.userAgentType));\n        uaType.classList.add('device-edit-fixed');\n        ua.appendChild(uaType);\n        const uaMetadata = editor.createCustomControl('ua-metadata', EmulationComponents.UserAgentClientHintsForm.UserAgentClientHintsForm, userAgentMetadataValidator);\n        uaMetadata.value = {};\n        uaMetadata.addEventListener('clienthintschange', () => editor.requestValidation(), false);\n        content.appendChild(uaMetadata);\n        return editor;\n        function userAgentMetadataValidator() {\n            return uaMetadata.validate();\n        }\n        function titleValidator(item, index, input) {\n            let valid = false;\n            let errorMessage;\n            const value = input.value.trim();\n            if (value.length >= EmulationModel.DeviceModeModel.MaxDeviceNameLength) {\n                errorMessage =\n                    i18nString(UIStrings.deviceNameMustBeLessThanS, { PH1: EmulationModel.DeviceModeModel.MaxDeviceNameLength });\n            }\n            else if (value.length === 0) {\n                errorMessage = i18nString(UIStrings.deviceNameCannotBeEmpty);\n            }\n            else {\n                valid = true;\n            }\n            return { valid, errorMessage };\n        }\n        function widthValidator(item, index, input) {\n            return EmulationModel.DeviceModeModel.DeviceModeModel.widthValidator(input.value);\n        }\n        function heightValidator(item, index, input) {\n            return EmulationModel.DeviceModeModel.DeviceModeModel.heightValidator(input.value);\n        }\n        function scaleValidator(item, index, input) {\n            return EmulationModel.DeviceModeModel.DeviceModeModel.scaleValidator(input.value);\n        }\n    }\n}\n//# sourceMappingURL=DevicesSettingsTab.js.map"],"names":["styles","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","DevicesSettingsTab","UI.Widget.VBox","VisualLogging.pane","header","UI.UIUtils.createTextChild","buttonsRow","UI.UIUtils.createTextButton","UI.ARIAUtils.markAsPoliteLiveRegion","UI.ListWidget.ListWidget","EmulationModel.EmulatedDevices.EmulatedDevicesList","devicesSettingsTabStyles","devices","i","EmulationModel.EmulatedDevices.EmulatedDevice","custom","device","value","editable","label","checkbox","onItemClicked","VisualLogging.toggle","span","event","show","item","editor","isNew","EmulationModel.EmulatedDevices.Vertical","EmulationModel.DeviceModeModel.Insets","EmulationModel.EmulatedDevices.Horizontal","uaType","userAgentControlValue","UI.ListWidget.Editor","content","deviceFields","deviceNameField","titleValidator","screen","widthValidator","heightValidator","dpr","scaleValidator","uaStringFields","ua","uaTypeOptions","uaMetadata","EmulationComponents.UserAgentClientHintsForm.UserAgentClientHintsForm","userAgentMetadataValidator","index","input","valid","errorMessage","EmulationModel.DeviceModeModel.MaxDeviceNameLength","EmulationModel.DeviceModeModel.DeviceModeModel"],"mappings":"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"}