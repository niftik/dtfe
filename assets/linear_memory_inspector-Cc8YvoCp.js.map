{"version":3,"file":"linear_memory_inspector-Cc8YvoCp.js","sources":["../../core/common/SimpleHistoryManager.js","../../panels/linear_memory_inspector/components/linearMemoryHighlightChipList.css.js","../../panels/linear_memory_inspector/components/LinearMemoryHighlightChipList.js","../../panels/linear_memory_inspector/components/linearMemoryInspector.css.js","../../panels/linear_memory_inspector/components/valueInterpreterDisplay.css.js","../../panels/linear_memory_inspector/components/ValueInterpreterDisplayUtils.js","../../panels/linear_memory_inspector/components/ValueInterpreterDisplay.js","../../panels/linear_memory_inspector/components/valueInterpreterSettings.css.js","../../panels/linear_memory_inspector/components/ValueInterpreterSettings.js","../../panels/linear_memory_inspector/components/linearMemoryValueInterpreter.css.js","../../panels/linear_memory_inspector/components/LinearMemoryValueInterpreter.js","../../panels/linear_memory_inspector/components/LinearMemoryInspectorUtils.js","../../panels/linear_memory_inspector/components/linearMemoryViewer.css.js","../../panels/linear_memory_inspector/components/LinearMemoryViewer.js","../../panels/linear_memory_inspector/components/LinearMemoryInspector.js","../../panels/linear_memory_inspector/components/linearMemoryNavigator.css.js","../../panels/linear_memory_inspector/components/LinearMemoryNavigator.js","../../panels/linear_memory_inspector/LinearMemoryInspectorPane.js","../../panels/linear_memory_inspector/LinearMemoryInspectorController.js"],"sourcesContent":["/*\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nexport class SimpleHistoryManager {\n    #entries;\n    #activeEntryIndex;\n    #coalescingReadonly;\n    #historyDepth;\n    constructor(historyDepth) {\n        this.#entries = [];\n        this.#activeEntryIndex = -1;\n        // Lock is used to make sure that reveal() does not\n        // make any changes to the history while we are\n        // rolling back or rolling over.\n        this.#coalescingReadonly = 0;\n        this.#historyDepth = historyDepth;\n    }\n    readOnlyLock() {\n        ++this.#coalescingReadonly;\n    }\n    releaseReadOnlyLock() {\n        --this.#coalescingReadonly;\n    }\n    getPreviousValidIndex() {\n        if (this.empty()) {\n            return -1;\n        }\n        let revealIndex = this.#activeEntryIndex - 1;\n        while (revealIndex >= 0 && !this.#entries[revealIndex].valid()) {\n            --revealIndex;\n        }\n        if (revealIndex < 0) {\n            return -1;\n        }\n        return revealIndex;\n    }\n    getNextValidIndex() {\n        let revealIndex = this.#activeEntryIndex + 1;\n        while (revealIndex < this.#entries.length && !this.#entries[revealIndex].valid()) {\n            ++revealIndex;\n        }\n        if (revealIndex >= this.#entries.length) {\n            return -1;\n        }\n        return revealIndex;\n    }\n    readOnly() {\n        return Boolean(this.#coalescingReadonly);\n    }\n    filterOut(filterOutCallback) {\n        if (this.readOnly()) {\n            return;\n        }\n        const filteredEntries = [];\n        let removedBeforeActiveEntry = 0;\n        for (let i = 0; i < this.#entries.length; ++i) {\n            if (!filterOutCallback(this.#entries[i])) {\n                filteredEntries.push(this.#entries[i]);\n            }\n            else if (i <= this.#activeEntryIndex) {\n                ++removedBeforeActiveEntry;\n            }\n        }\n        this.#entries = filteredEntries;\n        this.#activeEntryIndex = Math.max(0, this.#activeEntryIndex - removedBeforeActiveEntry);\n    }\n    empty() {\n        return !this.#entries.length;\n    }\n    active() {\n        return this.empty() ? null : this.#entries[this.#activeEntryIndex];\n    }\n    push(entry) {\n        if (this.readOnly()) {\n            return;\n        }\n        if (!this.empty()) {\n            this.#entries.splice(this.#activeEntryIndex + 1);\n        }\n        this.#entries.push(entry);\n        if (this.#entries.length > this.#historyDepth) {\n            this.#entries.shift();\n        }\n        this.#activeEntryIndex = this.#entries.length - 1;\n    }\n    canRollback() {\n        return this.getPreviousValidIndex() >= 0;\n    }\n    canRollover() {\n        return this.getNextValidIndex() >= 0;\n    }\n    rollback() {\n        const revealIndex = this.getPreviousValidIndex();\n        if (revealIndex === -1) {\n            return false;\n        }\n        this.readOnlyLock();\n        this.#activeEntryIndex = revealIndex;\n        this.#entries[revealIndex].reveal();\n        this.releaseReadOnlyLock();\n        return true;\n    }\n    rollover() {\n        const revealIndex = this.getNextValidIndex();\n        if (revealIndex === -1) {\n            return false;\n        }\n        this.readOnlyLock();\n        this.#activeEntryIndex = revealIndex;\n        this.#entries[revealIndex].reveal();\n        this.releaseReadOnlyLock();\n        return true;\n    }\n}\n//# sourceMappingURL=SimpleHistoryManager.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2022 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.highlight-chip-list {\n  min-height: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: left;\n  align-items: center;\n  background-color: var(--sys-color-cdt-base-container);\n  margin: 8px 0;\n  gap: 8px;\n  row-gap: 6px;\n}\n\n.highlight-chip {\n  background: var(--sys-color-cdt-base-container);\n  border: 1px solid var(--sys-color-divider);\n  height: 18px;\n  border-radius: 4px;\n  flex: 0 0 auto;\n  max-width: 250px;\n  position: relative;\n  padding: 0 6px;\n}\n\n.highlight-chip:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.delete-highlight-container {\n  display: none;\n  height: 100%;\n  position: absolute;\n  right: 0;\n  top: 0;\n  border-radius: 4px;\n  width: 24px;\n  align-items: center;\n  justify-content: center;\n}\n\n.delete-highlight-button {\n  cursor: pointer;\n  width: 13px;\n  height: 13px;\n  border: none;\n  background-color: transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.delete-highlight-button:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n  border-radius: 50%;\n}\n\n.jump-to-highlight-button {\n  cursor: pointer;\n  padding: 0;\n  border: none;\n  background: none;\n  height: 100%;\n  align-items: center;\n  max-width: 100%;\n  overflow: hidden;\n}\n\n.delete-highlight-button devtools-icon {\n  width: 13px;\n  height: 13px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n}\n\n.source-code {\n  font-family: var(--source-code-font-family);\n  font-size: var(--source-code-font-size);\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  color: var(--sys-color-on-surface);\n}\n\n.value {\n  color: var(--sys-color-token-tag);\n}\n\n.separator {\n  white-space: pre;\n  flex-shrink: 0;\n}\n\n.highlight-chip.focused {\n  outline: 2px solid var(--sys-color-state-focus-ring);\n  outline-offset: 2px;\n}\n\n.highlight-chip:hover > .delete-highlight-container {\n  display: flex;\n  /* To avoid issues with stacking semi-transparent colors, we use a hardcoded solid color here. */\n  background: linear-gradient(90deg, transparent 0%, rgb(241 243 244) 25%); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n.highlight-chip.focused:hover > .delete-highlight-container {\n  /* To avoid issues with stacking semi-transparent colors, we use a hardcoded solid color here. */\n  background: linear-gradient(90deg, transparent 0%, rgb(231 241 253) 25%); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n:host-context(.theme-with-dark-background) .highlight-chip:hover > .delete-highlight-container {\n  display: flex;\n  /* To avoid issues with stacking semi-transparent colors, we use a hardcoded solid color here. */\n  background: linear-gradient(90deg, transparent 0%, rgb(41 42 45) 25%); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n:host-context(.theme-with-dark-background) .highlight-chip.focused:hover > .delete-highlight-container {\n  /* To avoid issues with stacking semi-transparent colors, we use a hardcoded solid color here. */\n  background: linear-gradient(90deg, transparent 0%, rgb(48 55 68) 25%); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n/*# sourceURL=linearMemoryHighlightChipList.css */\n`);\n\nexport default styles;\n","// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/icon_button/icon_button.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport linearMemoryHighlightChipListStyles from './linearMemoryHighlightChipList.css.js';\nconst UIStrings = {\n    /**\n     *@description Tooltip text that appears when hovering over an inspected variable's button in the Linear Memory Highlight Chip List.\n    Clicking the button changes the displayed slice of computer memory in the Linear Memory inspector to contain the inspected variable's bytes.\n     */\n    jumpToAddress: 'Jump to this memory',\n    /**\n     *@description Tooltip text that appears when hovering over an inspected variable's delete button in the Linear Memory Highlight Chip List.\n     Clicking the delete button stops highlighting the variable's memory in the Linear Memory inspector.\n     'Memory' is a slice of bytes in the computer memory.\n     */\n    deleteHighlight: 'Stop highlighting this memory',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/linear_memory_inspector/components/LinearMemoryHighlightChipList.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst { render, html } = LitHtml;\nexport class DeleteMemoryHighlightEvent extends Event {\n    static eventName = 'deletememoryhighlight';\n    data;\n    constructor(highlightInfo) {\n        super(DeleteMemoryHighlightEvent.eventName, { bubbles: true, composed: true });\n        this.data = highlightInfo;\n    }\n}\nexport class JumpToHighlightedMemoryEvent extends Event {\n    static eventName = 'jumptohighlightedmemory';\n    data;\n    constructor(address) {\n        super(JumpToHighlightedMemoryEvent.eventName);\n        this.data = address;\n    }\n}\nexport class LinearMemoryHighlightChipList extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #highlightedAreas = [];\n    #focusedMemoryHighlight;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [linearMemoryHighlightChipListStyles];\n    }\n    set data(data) {\n        this.#highlightedAreas = data.highlightInfos;\n        this.#focusedMemoryHighlight = data.focusedMemoryHighlight;\n        this.#render();\n    }\n    #render() {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        const chips = [];\n        for (const highlightInfo of this.#highlightedAreas) {\n            chips.push(this.#createChip(highlightInfo));\n        }\n        const result = html `\n            <div class=\"highlight-chip-list\">\n              ${chips}\n            </div>\n        `;\n        render(result, this.#shadow, { host: this });\n        // clang-format on\n    }\n    #createChip(highlightInfo) {\n        const expressionName = highlightInfo.name || '<anonymous>';\n        const expressionType = highlightInfo.type;\n        const isFocused = highlightInfo === this.#focusedMemoryHighlight;\n        const classMap = {\n            focused: isFocused,\n            'highlight-chip': true,\n        };\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        return html `\n      <div class=${LitHtml.Directives.classMap(classMap)}>\n        <button class=\"jump-to-highlight-button\" title=${i18nString(UIStrings.jumpToAddress)}\n            jslog=${VisualLogging.action('linear-memory-inspector.jump-to-highlight').track({ click: true })}\n            @click=${() => this.#onJumpToHighlightClick(highlightInfo.startAddress)}>\n          <span class=\"source-code\">\n            <span class=\"value\">${expressionName}</span><span class=\"separator\">: </span><span>${expressionType}</span>\n          </span>\n        </button>\n        <div class=\"delete-highlight-container\">\n          <button class=\"delete-highlight-button\" title=${i18nString(UIStrings.deleteHighlight)}\n              jslog=${VisualLogging.action('linear-memory-inspector.delete-highlight').track({ click: true })}\n              @click=${() => this.#onDeleteHighlightClick(highlightInfo)}>\n            <devtools-icon .data=${{\n            iconName: 'cross',\n            color: 'var(--icon-default-hover)',\n            width: '16px',\n        }}>\n            </devtools-icon>\n          </button>\n        </div>\n      </div>\n    `;\n        // clang-format off\n    }\n    #onJumpToHighlightClick(startAddress) {\n        this.dispatchEvent(new JumpToHighlightedMemoryEvent(startAddress));\n    }\n    #onDeleteHighlightClick(highlight) {\n        this.dispatchEvent(new DeleteMemoryHighlightEvent(highlight));\n    }\n}\ncustomElements.define('devtools-linear-memory-highlight-chip-list', LinearMemoryHighlightChipList);\n//# sourceMappingURL=LinearMemoryHighlightChipList.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  flex: auto;\n  display: flex;\n}\n\n.view {\n  width: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  font-family: var(--monospace-font-family);\n  font-size: var(--monospace-font-size);\n  padding: 9px 12px 9px 7px;\n}\n\ndevtools-linear-memory-inspector-viewer {\n  justify-content: center;\n}\n\ndevtools-linear-memory-inspector-navigator + devtools-linear-memory-inspector-viewer {\n  margin-top: 12px;\n}\n\n.value-interpreter {\n  display: flex;\n}\n\n/*# sourceURL=linearMemoryInspector.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  flex: auto;\n  display: flex;\n}\n\n.value-types {\n  width: 100%;\n  display: grid;\n  grid-template-columns: auto auto 1fr;\n  gap: 4px 24px;\n  min-height: 24px;\n  overflow: hidden;\n  padding: 2px 12px;\n  align-items: baseline;\n  justify-content: start;\n}\n\n.value-type-cell {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  min-height: 24px;\n}\n\n.value-type-value-with-link {\n  display: flex;\n  align-items: center;\n}\n\n.value-type-cell-no-mode {\n  grid-column: 1 / 3;\n}\n\n.jump-to-button {\n  display: flex;\n  width: 20px;\n  height: 20px;\n  border: none;\n  padding: 0;\n  outline: none;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.signed-divider {\n  width: 1px;\n  height: 15px;\n  background-color: var(--sys-color-divider);\n  margin: 0 4px;\n}\n\n.selectable-text {\n  user-select: text;\n}\n\n.selectable-text::selection {\n  background-color: var(--sys-color-tonal-container);\n}\n\n/*# sourceURL=valueInterpreterDisplay.css */\n`);\n\nexport default styles;\n","// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nconst UIStrings = {\n    /**\n     *@description Text that is shown in the LinearMemoryInspector if a value could not be correctly formatted\n     *             for the requested mode (e.g. we do not floats to be represented as hexadecimal numbers).\n     *             Abbreviation stands for 'not applicable'.\n     */\n    notApplicable: 'N/A',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/linear_memory_inspector/components/ValueInterpreterDisplayUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport const VALUE_INTEPRETER_MAX_NUM_BYTES = 8;\nexport function getDefaultValueTypeMapping() {\n    return new Map(DEFAULT_MODE_MAPPING);\n}\nconst DEFAULT_MODE_MAPPING = new Map([\n    [\"Integer 8-bit\" /* ValueType.INT8 */, \"dec\" /* ValueTypeMode.DECIMAL */],\n    [\"Integer 16-bit\" /* ValueType.INT16 */, \"dec\" /* ValueTypeMode.DECIMAL */],\n    [\"Integer 32-bit\" /* ValueType.INT32 */, \"dec\" /* ValueTypeMode.DECIMAL */],\n    [\"Integer 64-bit\" /* ValueType.INT64 */, \"dec\" /* ValueTypeMode.DECIMAL */],\n    [\"Float 32-bit\" /* ValueType.FLOAT32 */, \"dec\" /* ValueTypeMode.DECIMAL */],\n    [\"Float 64-bit\" /* ValueType.FLOAT64 */, \"dec\" /* ValueTypeMode.DECIMAL */],\n    [\"Pointer 32-bit\" /* ValueType.POINTER32 */, \"hex\" /* ValueTypeMode.HEXADECIMAL */],\n    [\"Pointer 64-bit\" /* ValueType.POINTER64 */, \"hex\" /* ValueTypeMode.HEXADECIMAL */],\n]);\nexport const VALUE_TYPE_MODE_LIST = [\n    \"dec\" /* ValueTypeMode.DECIMAL */,\n    \"hex\" /* ValueTypeMode.HEXADECIMAL */,\n    \"oct\" /* ValueTypeMode.OCTAL */,\n    \"sci\" /* ValueTypeMode.SCIENTIFIC */,\n];\nexport function valueTypeToLocalizedString(valueType) {\n    return i18n.i18n.lockedString(valueType);\n}\nexport function isValidMode(type, mode) {\n    switch (type) {\n        case \"Integer 8-bit\" /* ValueType.INT8 */:\n        case \"Integer 16-bit\" /* ValueType.INT16 */:\n        case \"Integer 32-bit\" /* ValueType.INT32 */:\n        case \"Integer 64-bit\" /* ValueType.INT64 */:\n            return mode === \"dec\" /* ValueTypeMode.DECIMAL */ || mode === \"hex\" /* ValueTypeMode.HEXADECIMAL */ || mode === \"oct\" /* ValueTypeMode.OCTAL */;\n        case \"Float 32-bit\" /* ValueType.FLOAT32 */:\n        case \"Float 64-bit\" /* ValueType.FLOAT64 */:\n            return mode === \"sci\" /* ValueTypeMode.SCIENTIFIC */ || mode === \"dec\" /* ValueTypeMode.DECIMAL */;\n        case \"Pointer 32-bit\" /* ValueType.POINTER32 */: // fallthrough\n        case \"Pointer 64-bit\" /* ValueType.POINTER64 */:\n            return mode === \"hex\" /* ValueTypeMode.HEXADECIMAL */;\n        default:\n            return Platform.assertNever(type, `Unknown value type: ${type}`);\n    }\n}\nexport function isNumber(type) {\n    switch (type) {\n        case \"Integer 8-bit\" /* ValueType.INT8 */:\n        case \"Integer 16-bit\" /* ValueType.INT16 */:\n        case \"Integer 32-bit\" /* ValueType.INT32 */:\n        case \"Integer 64-bit\" /* ValueType.INT64 */:\n        case \"Float 32-bit\" /* ValueType.FLOAT32 */:\n        case \"Float 64-bit\" /* ValueType.FLOAT64 */:\n            return true;\n        default:\n            return false;\n    }\n}\nexport function getPointerAddress(type, buffer, endianness) {\n    if (!isPointer(type)) {\n        console.error(`Requesting address of a non-pointer type: ${type}.\\n`);\n        return NaN;\n    }\n    try {\n        const dataView = new DataView(buffer);\n        const isLittleEndian = endianness === \"Little Endian\" /* Endianness.LITTLE */;\n        return type === \"Pointer 32-bit\" /* ValueType.POINTER32 */ ? dataView.getUint32(0, isLittleEndian) :\n            dataView.getBigUint64(0, isLittleEndian);\n    }\n    catch (e) {\n        return NaN;\n    }\n}\nexport function isPointer(type) {\n    return type === \"Pointer 32-bit\" /* ValueType.POINTER32 */ || type === \"Pointer 64-bit\" /* ValueType.POINTER64 */;\n}\nexport function format(formatData) {\n    if (!formatData.mode) {\n        console.error(`No known way of showing value for ${formatData.type}`);\n        return i18nString(UIStrings.notApplicable);\n    }\n    const valueView = new DataView(formatData.buffer);\n    const isLittleEndian = formatData.endianness === \"Little Endian\" /* Endianness.LITTLE */;\n    let value;\n    try {\n        switch (formatData.type) {\n            case \"Integer 8-bit\" /* ValueType.INT8 */:\n                value = formatData.signed ? valueView.getInt8(0) : valueView.getUint8(0);\n                return formatInteger(value, formatData.mode);\n            case \"Integer 16-bit\" /* ValueType.INT16 */:\n                value = formatData.signed ? valueView.getInt16(0, isLittleEndian) : valueView.getUint16(0, isLittleEndian);\n                return formatInteger(value, formatData.mode);\n            case \"Integer 32-bit\" /* ValueType.INT32 */:\n                value = formatData.signed ? valueView.getInt32(0, isLittleEndian) : valueView.getUint32(0, isLittleEndian);\n                return formatInteger(value, formatData.mode);\n            case \"Integer 64-bit\" /* ValueType.INT64 */:\n                value =\n                    formatData.signed ? valueView.getBigInt64(0, isLittleEndian) : valueView.getBigUint64(0, isLittleEndian);\n                return formatInteger(value, formatData.mode);\n            case \"Float 32-bit\" /* ValueType.FLOAT32 */:\n                value = valueView.getFloat32(0, isLittleEndian);\n                return formatFloat(value, formatData.mode);\n            case \"Float 64-bit\" /* ValueType.FLOAT64 */:\n                value = valueView.getFloat64(0, isLittleEndian);\n                return formatFloat(value, formatData.mode);\n            case \"Pointer 32-bit\" /* ValueType.POINTER32 */:\n                value = valueView.getUint32(0, isLittleEndian);\n                return formatInteger(value, \"hex\" /* ValueTypeMode.HEXADECIMAL */);\n            case \"Pointer 64-bit\" /* ValueType.POINTER64 */:\n                value = valueView.getBigUint64(0, isLittleEndian);\n                return formatInteger(value, \"hex\" /* ValueTypeMode.HEXADECIMAL */);\n            default:\n                return Platform.assertNever(formatData.type, `Unknown value type: ${formatData.type}`);\n        }\n    }\n    catch (e) {\n        return i18nString(UIStrings.notApplicable);\n    }\n}\nexport function formatFloat(value, mode) {\n    switch (mode) {\n        case \"dec\" /* ValueTypeMode.DECIMAL */:\n            return value.toFixed(2).toString();\n        case \"sci\" /* ValueTypeMode.SCIENTIFIC */:\n            return value.toExponential(2).toString();\n        default:\n            throw new Error(`Unknown mode for floats: ${mode}.`);\n    }\n}\nexport function formatInteger(value, mode) {\n    switch (mode) {\n        case \"dec\" /* ValueTypeMode.DECIMAL */:\n            return value.toString();\n        case \"hex\" /* ValueTypeMode.HEXADECIMAL */:\n            if (value < 0) {\n                return i18nString(UIStrings.notApplicable);\n            }\n            return '0x' + value.toString(16).toUpperCase();\n        case \"oct\" /* ValueTypeMode.OCTAL */:\n            if (value < 0) {\n                return i18nString(UIStrings.notApplicable);\n            }\n            return value.toString(8);\n        default:\n            throw new Error(`Unknown mode for integers: ${mode}.`);\n    }\n}\n//# sourceMappingURL=ValueInterpreterDisplayUtils.js.map","// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/icon_button/icon_button.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport inspectorCommonStyles from '../../../ui/legacy/inspectorCommon.css.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport valueInterpreterDisplayStyles from './valueInterpreterDisplay.css.js';\nimport { format, getDefaultValueTypeMapping, getPointerAddress, isNumber, isPointer, isValidMode, VALUE_TYPE_MODE_LIST, } from './ValueInterpreterDisplayUtils.js';\nconst UIStrings = {\n    /**\n     *@description Tooltip text that appears when hovering over an unsigned interpretation of the memory under the Value Interpreter\n     */\n    unsignedValue: '`Unsigned` value',\n    /**\n     *@description Tooltip text that appears when hovering over the element to change value type modes of under the Value Interpreter. Value type modes\n     *             are different ways of viewing a certain value, e.g.: 10 (decimal) can be 0xa in hexadecimal mode, or 12 in octal mode.\n     */\n    changeValueTypeMode: 'Change mode',\n    /**\n     *@description Tooltip text that appears when hovering over a signed interpretation of the memory under the Value Interpreter\n     */\n    signedValue: '`Signed` value',\n    /**\n     *@description Tooltip text that appears when hovering over a 'jump-to-address' button that is next to a pointer (32-bit or 64-bit) under the Value Interpreter\n     */\n    jumpToPointer: 'Jump to address',\n    /**\n     *@description Tooltip text that appears when hovering over a 'jump-to-address' button that is next to a pointer (32-bit or 64-bit) with an invalid address under the Value Interpreter.\n     */\n    addressOutOfRange: 'Address out of memory range',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/linear_memory_inspector/components/ValueInterpreterDisplay.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst { render, html } = LitHtml;\nconst SORTED_VALUE_TYPES = Array.from(getDefaultValueTypeMapping().keys());\nexport class ValueTypeModeChangedEvent extends Event {\n    static eventName = 'valuetypemodechanged';\n    data;\n    constructor(type, mode) {\n        super(ValueTypeModeChangedEvent.eventName, {\n            composed: true,\n        });\n        this.data = { type, mode };\n    }\n}\nexport class JumpToPointerAddressEvent extends Event {\n    static eventName = 'jumptopointeraddress';\n    data;\n    constructor(address) {\n        super(JumpToPointerAddressEvent.eventName, {\n            composed: true,\n        });\n        this.data = address;\n    }\n}\nexport class ValueInterpreterDisplay extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #endianness = \"Little Endian\" /* Endianness.LITTLE */;\n    #buffer = new ArrayBuffer(0);\n    #valueTypes = new Set();\n    #valueTypeModeConfig = getDefaultValueTypeMapping();\n    #memoryLength = 0;\n    constructor() {\n        super();\n        this.#shadow.adoptedStyleSheets = [\n            inspectorCommonStyles,\n        ];\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [valueInterpreterDisplayStyles];\n    }\n    set data(data) {\n        this.#buffer = data.buffer;\n        this.#endianness = data.endianness;\n        this.#valueTypes = data.valueTypes;\n        this.#memoryLength = data.memoryLength;\n        if (data.valueTypeModes) {\n            data.valueTypeModes.forEach((mode, valueType) => {\n                if (isValidMode(valueType, mode)) {\n                    this.#valueTypeModeConfig.set(valueType, mode);\n                }\n            });\n        }\n        this.#render();\n    }\n    #render() {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        render(html `\n      <div class=\"value-types\">\n        ${SORTED_VALUE_TYPES.map(type => this.#valueTypes.has(type) ? this.#showValue(type) : '')}\n      </div>\n    `, this.#shadow, { host: this });\n        // clang-format on\n    }\n    #showValue(type) {\n        if (isNumber(type)) {\n            return this.#renderNumberValues(type);\n        }\n        if (isPointer(type)) {\n            return this.#renderPointerValue(type);\n        }\n        throw new Error(`No known way to format ${type}`);\n    }\n    #renderPointerValue(type) {\n        const unsignedValue = this.#parse({ type, signed: false });\n        const address = getPointerAddress(type, this.#buffer, this.#endianness);\n        const jumpDisabled = Number.isNaN(address) || BigInt(address) >= BigInt(this.#memoryLength);\n        const buttonTitle = jumpDisabled ? i18nString(UIStrings.addressOutOfRange) : i18nString(UIStrings.jumpToPointer);\n        const iconColor = jumpDisabled ? 'var(--icon-default)' : 'var(--icon-link)';\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        return html `\n      <span class=\"value-type-cell-no-mode value-type-cell selectable-text\">${i18n.i18n.lockedString(type)}</span>\n      <div class=\"value-type-cell\">\n        <div class=\"value-type-value-with-link\" data-value=\"true\">\n        <span class=\"selectable-text\">${unsignedValue}</span>\n          ${html `\n              <button class=\"jump-to-button\" data-jump=\"true\" title=${buttonTitle} ?disabled=${jumpDisabled}\n                jslog=${VisualLogging.action('linear-memory-inspector.jump-to-address').track({ click: true })}\n                @click=${this.#onJumpToAddressClicked.bind(this, Number(address))}>\n                <devtools-icon .data=${{ iconName: 'open-externally', color: iconColor, width: '16px' }}>\n                </devtools-icon>\n              </button>`}\n        </div>\n      </div>\n    `;\n        // clang-format on\n    }\n    #onJumpToAddressClicked(address) {\n        this.dispatchEvent(new JumpToPointerAddressEvent(address));\n    }\n    #renderNumberValues(type) {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        return html `\n      <span class=\"value-type-cell selectable-text\">${i18n.i18n.lockedString(type)}</span>\n      <div>\n        <select title=${i18nString(UIStrings.changeValueTypeMode)}\n          data-mode-settings=\"true\"\n          class=\"chrome-select\"\n          style=\"border: none; background-color: transparent; cursor: pointer; color: var(--sys-color-token-subtle);\"\n          jslog=${VisualLogging.dropDown('linear-memory-inspector.value-type-mode').track({ change: true })}\n          @change=${this.#onValueTypeModeChange.bind(this, type)}>\n            ${VALUE_TYPE_MODE_LIST.filter(x => isValidMode(type, x)).map(mode => {\n            return html `\n                <option value=${mode} .selected=${this.#valueTypeModeConfig.get(type) === mode}\n                        jslog=${VisualLogging.item(mode).track({ click: true })}>${i18n.i18n.lockedString(mode)}\n                </option>`;\n        })}\n        </select>\n      </div>\n      ${this.#renderSignedAndUnsigned(type)}\n    `;\n        // clang-format on\n    }\n    #renderSignedAndUnsigned(type) {\n        const unsignedValue = this.#parse({ type, signed: false });\n        const signedValue = this.#parse({ type, signed: true });\n        const mode = this.#valueTypeModeConfig.get(type);\n        const showSignedAndUnsigned = signedValue !== unsignedValue && mode !== \"hex\" /* ValueTypeMode.HEXADECIMAL */ && mode !== \"oct\" /* ValueTypeMode.OCTAL */;\n        const unsignedRendered = html `<span class=\"value-type-cell selectable-text\"  title=${i18nString(UIStrings.unsignedValue)} data-value=\"true\">${unsignedValue}</span>`;\n        if (!showSignedAndUnsigned) {\n            return unsignedRendered;\n        }\n        // Some values are too long to show in one line, we're putting them into the next line.\n        const showInMultipleLines = type === \"Integer 32-bit\" /* ValueType.INT32 */ || type === \"Integer 64-bit\" /* ValueType.INT64 */;\n        const signedRendered = html `<span class=\"selectable-text\" data-value=\"true\" title=${i18nString(UIStrings.signedValue)}>${signedValue}</span>`;\n        if (showInMultipleLines) {\n            return html `\n        <div class=\"value-type-cell\">\n          ${unsignedRendered}\n          ${signedRendered}\n        </div>\n        `;\n        }\n        return html `\n      <div class=\"value-type-cell\" style=\"flex-direction: row;\">\n        ${unsignedRendered}\n        <span class=\"signed-divider\"></span>\n        ${signedRendered}\n      </div>\n    `;\n    }\n    #onValueTypeModeChange(type, event) {\n        event.preventDefault();\n        const select = event.target;\n        const mode = select.value;\n        this.dispatchEvent(new ValueTypeModeChangedEvent(type, mode));\n    }\n    #parse(data) {\n        const mode = this.#valueTypeModeConfig.get(data.type);\n        return format({ buffer: this.#buffer, type: data.type, endianness: this.#endianness, signed: data.signed || false, mode });\n    }\n}\ncustomElements.define('devtools-linear-memory-inspector-interpreter-display', ValueInterpreterDisplay);\n//# sourceMappingURL=ValueInterpreterDisplay.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  flex: auto;\n  display: flex;\n  min-height: 20px;\n}\n\n.settings {\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 12px 12px;\n  column-gap: 45px;\n  row-gap: 15px;\n}\n\n.value-types-selection {\n  display: flex;\n  flex-direction: column;\n}\n\n.group {\n  font-weight: bold;\n  margin-bottom: 11px;\n}\n\n.type-label {\n  white-space: nowrap;\n}\n\n.group + .type-label {\n  margin-top: 5px;\n}\n\n.type-label input {\n  margin: 0 6px 0 0;\n  padding: 0;\n}\n\n.type-label + .type-label {\n  margin-top: 6px;\n}\n\n/*# sourceURL=valueInterpreterSettings.css */\n`);\n\nexport default styles;\n","// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport { valueTypeToLocalizedString } from './ValueInterpreterDisplayUtils.js';\nimport valueInterpreterSettingsStyles from './valueInterpreterSettings.css.js';\nconst { render, html } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description Name of a group of selectable value types that do not fall under integer and floating point value types, e.g. Pointer32. The group appears name appears under the Value Interpreter Settings.\n     */\n    otherGroup: 'Other',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/linear_memory_inspector/components/ValueInterpreterSettings.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst GROUP_TO_TYPES = new Map([\n    [\"Integer\" /* ValueTypeGroup.INTEGER */, [\"Integer 8-bit\" /* ValueType.INT8 */, \"Integer 16-bit\" /* ValueType.INT16 */, \"Integer 32-bit\" /* ValueType.INT32 */, \"Integer 64-bit\" /* ValueType.INT64 */]],\n    [\"Floating point\" /* ValueTypeGroup.FLOAT */, [\"Float 32-bit\" /* ValueType.FLOAT32 */, \"Float 64-bit\" /* ValueType.FLOAT64 */]],\n    [\"Other\" /* ValueTypeGroup.OTHER */, [\"Pointer 32-bit\" /* ValueType.POINTER32 */, \"Pointer 64-bit\" /* ValueType.POINTER64 */]],\n]);\nfunction valueTypeGroupToLocalizedString(group) {\n    if (group === \"Other\" /* ValueTypeGroup.OTHER */) {\n        return i18nString(UIStrings.otherGroup);\n    }\n    // The remaining group type names should not be localized.\n    return group;\n}\nexport class TypeToggleEvent extends Event {\n    static eventName = 'typetoggle';\n    data;\n    constructor(type, checked) {\n        super(TypeToggleEvent.eventName);\n        this.data = { type, checked };\n    }\n}\nexport class ValueInterpreterSettings extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #valueTypes = new Set();\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [Input.checkboxStyles, valueInterpreterSettingsStyles];\n    }\n    set data(data) {\n        this.#valueTypes = data.valueTypes;\n        this.#render();\n    }\n    #render() {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        render(html `\n      <div class=\"settings\" jslog=${VisualLogging.pane('settings')}>\n       ${[...GROUP_TO_TYPES.keys()].map(group => {\n            return html `\n          <div class=\"value-types-selection\">\n            <span class=\"group\">${valueTypeGroupToLocalizedString(group)}</span>\n            ${this.#plotTypeSelections(group)}\n          </div>\n        `;\n        })}\n      </div>\n      `, this.#shadow, { host: this });\n    }\n    #plotTypeSelections(group) {\n        const types = GROUP_TO_TYPES.get(group);\n        if (!types) {\n            throw new Error(`Unknown group ${group}`);\n        }\n        return html `\n      ${types.map(type => {\n            return html `\n          <label class=\"type-label\" title=${valueTypeToLocalizedString(type)}>\n            <input data-input=\"true\" type=\"checkbox\" .checked=${this.#valueTypes.has(type)} @change=${(e) => this.#onTypeToggle(type, e)} jslog=${VisualLogging.toggle().track({ change: true }).context(Platform.StringUtilities.toKebabCase(type))}>\n            <span data-title=\"true\">${valueTypeToLocalizedString(type)}</span>\n          </label>\n     `;\n        })}`;\n    }\n    #onTypeToggle(type, event) {\n        const checkbox = event.target;\n        this.dispatchEvent(new TypeToggleEvent(type, checkbox.checked));\n    }\n}\ncustomElements.define('devtools-linear-memory-inspector-interpreter-settings', ValueInterpreterSettings);\n//# sourceMappingURL=ValueInterpreterSettings.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  flex: auto;\n  display: flex;\n}\n\n.value-interpreter {\n  border: 1px solid var(--sys-color-divider);\n  background-color: var(--sys-color-cdt-base-container);\n  overflow: hidden;\n  width: 400px;\n}\n\n.settings-toolbar {\n  min-height: 26px;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  padding-left: 12px;\n  padding-right: 12px;\n  align-items: center;\n}\n\n.settings-toolbar-button {\n  padding: 0;\n  width: 20px;\n  height: 20px;\n  border: none;\n  outline: none;\n  background-color: transparent;\n}\n\n.settings-toolbar-button.active devtools-icon {\n  color: var(--icon-toggled);\n}\n\n.divider {\n  display: block;\n  height: 1px;\n  margin-bottom: 12px;\n  background-color: var(--sys-color-divider);\n}\n\n/*# sourceURL=linearMemoryValueInterpreter.css */\n`);\n\nexport default styles;\n","// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/icon_button/icon_button.js';\nimport './ValueInterpreterDisplay.js';\nimport './ValueInterpreterSettings.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport linearMemoryValueInterpreterStyles from './linearMemoryValueInterpreter.css.js';\nconst UIStrings = {\n    /**\n     *@description Tooltip text that appears when hovering over the gear button to open and close settings in the Linear memory inspector. These settings\n     *             allow the user to change the value type to view, such as 32-bit Integer, or 32-bit Float.\n     */\n    toggleValueTypeSettings: 'Toggle value type settings',\n    /**\n     *@description Tooltip text that appears when hovering over the 'Little Endian' or 'Big Endian' setting in the Linear memory inspector.\n     */\n    changeEndianness: 'Change `Endianness`',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/linear_memory_inspector/components/LinearMemoryValueInterpreter.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst { render, html } = LitHtml;\nexport class EndiannessChangedEvent extends Event {\n    static eventName = 'endiannesschanged';\n    data;\n    constructor(endianness) {\n        super(EndiannessChangedEvent.eventName);\n        this.data = endianness;\n    }\n}\nexport class ValueTypeToggledEvent extends Event {\n    static eventName = 'valuetypetoggled';\n    data;\n    constructor(type, checked) {\n        super(ValueTypeToggledEvent.eventName);\n        this.data = { type, checked };\n    }\n}\nexport class LinearMemoryValueInterpreter extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #endianness = \"Little Endian\" /* Endianness.LITTLE */;\n    #buffer = new ArrayBuffer(0);\n    #valueTypes = new Set();\n    #valueTypeModeConfig = new Map();\n    #memoryLength = 0;\n    #showSettings = false;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [linearMemoryValueInterpreterStyles];\n    }\n    set data(data) {\n        this.#endianness = data.endianness;\n        this.#buffer = data.value;\n        this.#valueTypes = data.valueTypes;\n        this.#valueTypeModeConfig = data.valueTypeModes || new Map();\n        this.#memoryLength = data.memoryLength;\n        this.#render();\n    }\n    #render() {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        render(html `\n      <div class=\"value-interpreter\">\n        <div class=\"settings-toolbar\">\n          ${this.#renderEndiannessSetting()}\n          <button data-settings=\"true\" class=\"settings-toolbar-button ${this.#showSettings ? 'active' : ''}\"\n              title=${i18nString(UIStrings.toggleValueTypeSettings)} @click=${this.#onSettingsToggle}\n              jslog=${VisualLogging.toggleSubpane('linear-memory-inspector.toggle-value-settings').track({ click: true })}>\n            <devtools-icon name=${this.#showSettings ? 'gear-filled' : 'gear'}></devtools-icon>\n          </button>\n        </div>\n        <span class=\"divider\"></span>\n        <div>\n          ${this.#showSettings ?\n            html `\n              <devtools-linear-memory-inspector-interpreter-settings\n                .data=${{ valueTypes: this.#valueTypes }}\n                @typetoggle=${this.#onTypeToggle}>\n              </devtools-linear-memory-inspector-interpreter-settings>` :\n            html `\n              <devtools-linear-memory-inspector-interpreter-display\n                .data=${{\n                buffer: this.#buffer,\n                valueTypes: this.#valueTypes,\n                endianness: this.#endianness,\n                valueTypeModes: this.#valueTypeModeConfig,\n                memoryLength: this.#memoryLength,\n            }}>\n              </devtools-linear-memory-inspector-interpreter-display>`}\n        </div>\n      </div>\n    `, this.#shadow, { host: this });\n        // clang-format on\n    }\n    #onEndiannessChange(event) {\n        event.preventDefault();\n        const select = event.target;\n        const endianness = select.value;\n        this.dispatchEvent(new EndiannessChangedEvent(endianness));\n    }\n    #renderEndiannessSetting() {\n        const onEnumSettingChange = this.#onEndiannessChange.bind(this);\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        return html `\n    <label data-endianness-setting=\"true\" title=${i18nString(UIStrings.changeEndianness)}>\n      <select class=\"chrome-select\"\n        jslog=${VisualLogging.dropDown('linear-memory-inspector.endianess').track({ change: true })}\n        style=\"border: none; background-color: transparent; cursor: pointer;\"\n        data-endianness=\"true\" @change=${onEnumSettingChange}>\n        ${[\"Little Endian\" /* Endianness.LITTLE */, \"Big Endian\" /* Endianness.BIG */].map(endianness => {\n            return html `<option value=${endianness} .selected=${this.#endianness === endianness}\n            jslog=${VisualLogging.item(Platform.StringUtilities.toKebabCase(endianness)).track({ click: true })}>${i18n.i18n.lockedString(endianness)}</option>`;\n        })}\n      </select>\n    </label>\n    `;\n        // clang-format on\n    }\n    #onSettingsToggle() {\n        this.#showSettings = !this.#showSettings;\n        this.#render();\n    }\n    #onTypeToggle(e) {\n        this.dispatchEvent(new ValueTypeToggledEvent(e.data.type, e.data.checked));\n    }\n}\ncustomElements.define('devtools-linear-memory-inspector-interpreter', LinearMemoryValueInterpreter);\n//# sourceMappingURL=LinearMemoryValueInterpreter.js.map","// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nexport const HEXADECIMAL_REGEXP = /^0x[a-fA-F0-9]+$/;\nexport const DECIMAL_REGEXP = /^0$|[1-9]\\d*$/;\nexport function toHexString(data) {\n    const hex = data.number.toString(16).padStart(data.pad, '0');\n    const upperHex = hex.toUpperCase();\n    return data.prefix ? '0x' + upperHex : upperHex;\n}\nexport function formatAddress(address) {\n    return toHexString({ number: address, pad: 8, prefix: true });\n}\nexport function parseAddress(address) {\n    const hexMatch = address.match(HEXADECIMAL_REGEXP);\n    const decMatch = address.match(DECIMAL_REGEXP);\n    let newAddress = undefined;\n    if (hexMatch && hexMatch[0].length === address.length) {\n        newAddress = parseInt(address, 16);\n    }\n    else if (decMatch && decMatch[0].length === address.length) {\n        newAddress = parseInt(address, 10);\n    }\n    return newAddress;\n}\n//# sourceMappingURL=LinearMemoryInspectorUtils.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  flex: auto;\n  display: flex;\n  min-height: 20px;\n}\n\n.view {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  box-sizing: border-box;\n  background: var(--sys-color-cdt-base-container);\n  outline: none;\n}\n\n.row {\n  display: flex;\n  height: 20px;\n  align-items: center;\n}\n\n.cell {\n  text-align: center;\n  border: 1px solid transparent;\n  border-radius: 2px;\n\n  &.focused-area {\n    background-color: var(--sys-color-tonal-container);\n    color: var(--sys-color-on-tonal-container);\n  }\n\n  &.selected {\n    border-color: var(--sys-color-state-focus-ring);\n    color: var(--sys-color-on-tonal-container);\n    background-color: var(--sys-color-state-focus-select);\n  }\n}\n\n.byte-cell {\n  min-width: 21px;\n  color: var(--sys-color-on-surface);\n}\n\n.byte-group-margin {\n  margin-left: var(--byte-group-margin);\n}\n\n.text-cell {\n  min-width: 14px;\n  color: var(--sys-color-on-surface-subtle);\n}\n\n.address {\n  color: var(--sys-color-state-disabled);\n}\n\n.address.selected {\n  font-weight: bold;\n  color: var(--sys-color-on-surface);\n}\n\n.divider {\n  width: 1px;\n  height: inherit;\n  background-color: var(--sys-color-divider);\n  margin: 0 4px;\n}\n\n.highlight-area {\n  background-color: var(--sys-color-surface-variant);\n}\n\n/*# sourceURL=linearMemoryViewer.css */\n`);\n\nexport default styles;\n","// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport { toHexString } from './LinearMemoryInspectorUtils.js';\nimport linearMemoryViewerStyles from './linearMemoryViewer.css.js';\nconst { render, html } = LitHtml;\nexport class ByteSelectedEvent extends Event {\n    static eventName = 'byteselected';\n    data;\n    constructor(address) {\n        super(ByteSelectedEvent.eventName);\n        this.data = address;\n    }\n}\nexport class ResizeEvent extends Event {\n    static eventName = 'resize';\n    data;\n    constructor(numBytesPerPage) {\n        super(ResizeEvent.eventName);\n        this.data = numBytesPerPage;\n    }\n}\nconst BYTE_GROUP_MARGIN = 8;\nconst BYTE_GROUP_SIZE = 4;\nexport class LinearMemoryViewer extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #resizeObserver = new ResizeObserver(() => this.#resize());\n    #isObservingResize = false;\n    #memory = new Uint8Array();\n    #address = 0;\n    #memoryOffset = 0;\n    #highlightInfo;\n    #focusedMemoryHighlight;\n    #numRows = 1;\n    #numBytesInRow = BYTE_GROUP_SIZE;\n    #focusOnByte = true;\n    #lastKeyUpdateSent = undefined;\n    set data(data) {\n        if (data.address < data.memoryOffset || data.address > data.memoryOffset + data.memory.length || data.address < 0) {\n            throw new Error('Address is out of bounds.');\n        }\n        if (data.memoryOffset < 0) {\n            throw new Error('Memory offset has to be greater or equal to zero.');\n        }\n        this.#memory = data.memory;\n        this.#address = data.address;\n        this.#highlightInfo = data.highlightInfo;\n        this.#focusedMemoryHighlight = data.focusedMemoryHighlight;\n        this.#memoryOffset = data.memoryOffset;\n        this.#focusOnByte = data.focus;\n        this.#update();\n    }\n    connectedCallback() {\n        this.style.setProperty('--byte-group-margin', `${BYTE_GROUP_MARGIN}px`);\n        this.#shadow.adoptedStyleSheets = [linearMemoryViewerStyles];\n    }\n    disconnectedCallback() {\n        this.#isObservingResize = false;\n        this.#resizeObserver.disconnect();\n    }\n    #update() {\n        this.#updateDimensions();\n        this.#render();\n        this.#focusOnView();\n        this.#engageResizeObserver();\n    }\n    #focusOnView() {\n        if (this.#focusOnByte) {\n            const view = this.#shadow.querySelector('.view');\n            if (view) {\n                view.focus();\n            }\n        }\n    }\n    #resize() {\n        this.#update();\n        this.dispatchEvent(new ResizeEvent(this.#numBytesInRow * this.#numRows));\n    }\n    /** Recomputes the number of rows and (byte) columns that fit into the current view. */\n    #updateDimensions() {\n        if (this.clientWidth === 0 || this.clientHeight === 0 || !this.shadowRoot) {\n            this.#numBytesInRow = BYTE_GROUP_SIZE;\n            this.#numRows = 1;\n            return;\n        }\n        // We initially just plot one row with one byte group (here: byte group size of 4).\n        // Depending on that initially plotted row we can determine how many rows and\n        // bytes per row we can fit.\n        // >    0000000 | b0 b1 b2 b4 | a0 a1 a2 a3    <\n        //      ^-------^ ^-^           ^-^\n        //          |     byteCellWidth textCellWidth\n        //          |\n        //     addressTextAndDividerWidth\n        //  ^--^   +     ^----------------------------^\n        //      widthToFill\n        const firstByteCell = this.shadowRoot.querySelector('.byte-cell');\n        const textCell = this.shadowRoot.querySelector('.text-cell');\n        const divider = this.shadowRoot.querySelector('.divider');\n        const rowElement = this.shadowRoot.querySelector('.row');\n        const addressText = this.shadowRoot.querySelector('.address');\n        if (!firstByteCell || !textCell || !divider || !rowElement || !addressText) {\n            this.#numBytesInRow = BYTE_GROUP_SIZE;\n            this.#numRows = 1;\n            return;\n        }\n        // Calculate the width required for each (unsplittable) group of bytes.\n        const byteCellWidth = firstByteCell.getBoundingClientRect().width;\n        const textCellWidth = textCell.getBoundingClientRect().width;\n        const groupWidth = BYTE_GROUP_SIZE * (byteCellWidth + textCellWidth) + BYTE_GROUP_MARGIN;\n        // Calculate the width to fill.\n        const dividerWidth = divider.getBoundingClientRect().width;\n        const addressTextAndDividerWidth = firstByteCell.getBoundingClientRect().left - addressText.getBoundingClientRect().left;\n        // this.clientWidth is rounded, while the other values are not. Subtract 1 to make\n        // sure that we correctly calculate the widths.\n        const widthToFill = this.clientWidth - 1 - addressTextAndDividerWidth - dividerWidth;\n        if (widthToFill < groupWidth) {\n            this.#numBytesInRow = BYTE_GROUP_SIZE;\n            this.#numRows = 1;\n            return;\n        }\n        this.#numBytesInRow = Math.floor(widthToFill / groupWidth) * BYTE_GROUP_SIZE;\n        this.#numRows = Math.floor(this.clientHeight / rowElement.clientHeight);\n    }\n    #engageResizeObserver() {\n        if (!this.#resizeObserver || this.#isObservingResize) {\n            return;\n        }\n        this.#resizeObserver.observe(this);\n        this.#isObservingResize = true;\n    }\n    #render() {\n        const jslog = VisualLogging.section()\n            .track({ keydown: 'ArrowUp|ArrowDown|ArrowLeft|ArrowRight|PageUp|PageDown' })\n            .context('linear-memory-inspector.viewer');\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        render(html `\n      <div class=\"view\" tabindex=\"0\" @keydown=${this.#onKeyDown} jslog=${jslog}>\n        ${this.#renderView()}\n      </div>\n      `, this.#shadow, { host: this });\n    }\n    #onKeyDown(event) {\n        const keyboardEvent = event;\n        let newAddress = undefined;\n        if (keyboardEvent.code === 'ArrowUp') {\n            newAddress = this.#address - this.#numBytesInRow;\n        }\n        else if (keyboardEvent.code === 'ArrowDown') {\n            newAddress = this.#address + this.#numBytesInRow;\n        }\n        else if (keyboardEvent.code === 'ArrowLeft') {\n            newAddress = this.#address - 1;\n        }\n        else if (keyboardEvent.code === 'ArrowRight') {\n            newAddress = this.#address + 1;\n        }\n        else if (keyboardEvent.code === 'PageUp') {\n            newAddress = this.#address - this.#numBytesInRow * this.#numRows;\n        }\n        else if (keyboardEvent.code === 'PageDown') {\n            newAddress = this.#address + this.#numBytesInRow * this.#numRows;\n        }\n        if (newAddress !== undefined && newAddress !== this.#lastKeyUpdateSent) {\n            this.#lastKeyUpdateSent = newAddress;\n            this.dispatchEvent(new ByteSelectedEvent(newAddress));\n        }\n    }\n    #renderView() {\n        const itemTemplates = [];\n        for (let i = 0; i < this.#numRows; ++i) {\n            itemTemplates.push(this.#renderRow(i));\n        }\n        return html `${itemTemplates}`;\n    }\n    #renderRow(row) {\n        const { startIndex, endIndex } = { startIndex: row * this.#numBytesInRow, endIndex: (row + 1) * this.#numBytesInRow };\n        const classMap = {\n            address: true,\n            selected: Math.floor((this.#address - this.#memoryOffset) / this.#numBytesInRow) === row,\n        };\n        return html `\n    <div class=\"row\">\n      <span class=${LitHtml.Directives.classMap(classMap)}>${toHexString({ number: startIndex + this.#memoryOffset, pad: 8, prefix: false })}</span>\n      <span class=\"divider\"></span>\n      ${this.#renderByteValues(startIndex, endIndex)}\n      <span class=\"divider\"></span>\n      ${this.#renderCharacterValues(startIndex, endIndex)}\n    </div>\n    `;\n    }\n    #renderByteValues(startIndex, endIndex) {\n        const cells = [];\n        for (let i = startIndex; i < endIndex; ++i) {\n            const actualIndex = i + this.#memoryOffset;\n            // Add margin after each group of bytes of size byteGroupSize.\n            const addMargin = i !== startIndex && (i - startIndex) % BYTE_GROUP_SIZE === 0;\n            const selected = i === this.#address - this.#memoryOffset;\n            const shouldBeHighlighted = this.#shouldBeHighlighted(actualIndex);\n            const focusedMemoryArea = this.#isFocusedArea(actualIndex);\n            const classMap = {\n                cell: true,\n                'byte-cell': true,\n                'byte-group-margin': addMargin,\n                selected,\n                'highlight-area': shouldBeHighlighted,\n                'focused-area': focusedMemoryArea,\n            };\n            const isSelectableCell = i < this.#memory.length;\n            const byteValue = isSelectableCell ? html `${toHexString({ number: this.#memory[i], pad: 2, prefix: false })}` : '';\n            const onSelectedByte = isSelectableCell ? this.#onSelectedByte.bind(this, actualIndex) : '';\n            const jslog = VisualLogging.tableCell('linear-memory-inspector.byte-cell').track({ click: true });\n            cells.push(html `<span class=${LitHtml.Directives.classMap(classMap)} @click=${onSelectedByte} jslog=${jslog}>${byteValue}</span>`);\n        }\n        return html `${cells}`;\n    }\n    #renderCharacterValues(startIndex, endIndex) {\n        const cells = [];\n        for (let i = startIndex; i < endIndex; ++i) {\n            const actualIndex = i + this.#memoryOffset;\n            const shouldBeHighlighted = this.#shouldBeHighlighted(actualIndex);\n            const focusedMemoryArea = this.#isFocusedArea(actualIndex);\n            const classMap = {\n                cell: true,\n                'text-cell': true,\n                selected: this.#address - this.#memoryOffset === i,\n                'highlight-area': shouldBeHighlighted,\n                'focused-area': focusedMemoryArea,\n            };\n            const isSelectableCell = i < this.#memory.length;\n            const value = isSelectableCell ? html `${this.#toAscii(this.#memory[i])}` : '';\n            const onSelectedByte = isSelectableCell ? this.#onSelectedByte.bind(this, i + this.#memoryOffset) : '';\n            const jslog = VisualLogging.tableCell('linear-memory-inspector.text-cell').track({ click: true });\n            cells.push(html `<span class=${LitHtml.Directives.classMap(classMap)} @click=${onSelectedByte} jslog=${jslog}>${value}</span>`);\n        }\n        return html `${cells}`;\n    }\n    #toAscii(byte) {\n        if (byte >= 20 && byte <= 0x7F) {\n            return String.fromCharCode(byte);\n        }\n        return '.';\n    }\n    #onSelectedByte(index) {\n        this.dispatchEvent(new ByteSelectedEvent(index));\n    }\n    #shouldBeHighlighted(index) {\n        if (this.#highlightInfo === undefined) {\n            return false;\n        }\n        return this.#highlightInfo.startAddress <= index\n            && index < this.#highlightInfo.startAddress + this.#highlightInfo.size;\n    }\n    #isFocusedArea(index) {\n        if (!this.#focusedMemoryHighlight) {\n            return false;\n        }\n        return this.#focusedMemoryHighlight.startAddress <= index\n            && index < this.#focusedMemoryHighlight.startAddress + this.#focusedMemoryHighlight.size;\n    }\n}\ncustomElements.define('devtools-linear-memory-inspector-viewer', LinearMemoryViewer);\n//# sourceMappingURL=LinearMemoryViewer.js.map","// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport linearMemoryInspectorStyles from './linearMemoryInspector.css.js';\nconst { render, html } = LitHtml;\nimport './LinearMemoryValueInterpreter.js';\nimport './LinearMemoryHighlightChipList.js';\nimport { formatAddress, parseAddress } from './LinearMemoryInspectorUtils.js';\nimport './LinearMemoryViewer.js';\nimport { VALUE_INTEPRETER_MAX_NUM_BYTES, getDefaultValueTypeMapping, } from './ValueInterpreterDisplayUtils.js';\nconst UIStrings = {\n    /**\n     *@description Tooltip text that appears when hovering over an invalid address in the address line in the Linear memory inspector\n     *@example {0x00000000} PH1\n     *@example {0x00400000} PH2\n     */\n    addressHasToBeANumberBetweenSAnd: 'Address has to be a number between {PH1} and {PH2}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/linear_memory_inspector/components/LinearMemoryInspector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class MemoryRequestEvent extends Event {\n    static eventName = 'memoryrequest';\n    data;\n    constructor(start, end, address) {\n        super(MemoryRequestEvent.eventName);\n        this.data = { start, end, address };\n    }\n}\nexport class AddressChangedEvent extends Event {\n    static eventName = 'addresschanged';\n    data;\n    constructor(address) {\n        super(AddressChangedEvent.eventName);\n        this.data = address;\n    }\n}\nexport class SettingsChangedEvent extends Event {\n    static eventName = 'settingschanged';\n    data;\n    constructor(settings) {\n        super(SettingsChangedEvent.eventName);\n        this.data = settings;\n    }\n}\nclass AddressHistoryEntry {\n    #address = 0;\n    #callback;\n    constructor(address, callback) {\n        if (address < 0) {\n            throw new Error('Address should be a greater or equal to zero');\n        }\n        this.#address = address;\n        this.#callback = callback;\n    }\n    valid() {\n        return true;\n    }\n    reveal() {\n        this.#callback(this.#address);\n    }\n}\nexport class LinearMemoryInspector extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #history = new Common.SimpleHistoryManager.SimpleHistoryManager(10);\n    #memory = new Uint8Array();\n    #memoryOffset = 0;\n    #outerMemoryLength = 0;\n    #address = -1;\n    #highlightInfo;\n    #currentNavigatorMode = \"Submitted\" /* Mode.SUBMITTED */;\n    #currentNavigatorAddressLine = `${this.#address}`;\n    #numBytesPerPage = 4;\n    #valueTypeModes = getDefaultValueTypeMapping();\n    #valueTypes = new Set(this.#valueTypeModes.keys());\n    #endianness = \"Little Endian\" /* Endianness.LITTLE */;\n    #hideValueInspector = false;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [linearMemoryInspectorStyles];\n    }\n    set data(data) {\n        if (data.address < data.memoryOffset || data.address > data.memoryOffset + data.memory.length || data.address < 0) {\n            throw new Error('Address is out of bounds.');\n        }\n        if (data.memoryOffset < 0) {\n            throw new Error('Memory offset has to be greater or equal to zero.');\n        }\n        if (data.highlightInfo) {\n            if (data.highlightInfo.size < 0) {\n                throw new Error('Object size has to be greater than or equal to zero');\n            }\n            if (data.highlightInfo.startAddress < 0 || data.highlightInfo.startAddress >= data.outerMemoryLength) {\n                throw new Error('Object start address is out of bounds.');\n            }\n        }\n        this.#memory = data.memory;\n        this.#memoryOffset = data.memoryOffset;\n        this.#outerMemoryLength = data.outerMemoryLength;\n        this.#valueTypeModes = data.valueTypeModes || this.#valueTypeModes;\n        this.#valueTypes = data.valueTypes || this.#valueTypes;\n        this.#endianness = data.endianness || this.#endianness;\n        this.#highlightInfo = data.highlightInfo;\n        this.#hideValueInspector = data.hideValueInspector ?? this.#hideValueInspector;\n        this.#setAddress(data.address);\n        this.#render();\n    }\n    #render() {\n        const { start, end } = this.#getPageRangeForAddress(this.#address, this.#numBytesPerPage);\n        const navigatorAddressToShow = this.#currentNavigatorMode === \"Submitted\" /* Mode.SUBMITTED */ ? formatAddress(this.#address) :\n            this.#currentNavigatorAddressLine;\n        const navigatorAddressIsValid = this.#isValidAddress(navigatorAddressToShow);\n        const invalidAddressMsg = i18nString(UIStrings.addressHasToBeANumberBetweenSAnd, { PH1: formatAddress(0), PH2: formatAddress(this.#outerMemoryLength) });\n        const errorMsg = navigatorAddressIsValid ? undefined : invalidAddressMsg;\n        const canGoBackInHistory = this.#history.canRollback();\n        const canGoForwardInHistory = this.#history.canRollover();\n        const highlightedMemoryAreas = this.#highlightInfo ? [this.#highlightInfo] : [];\n        const focusedMemoryHighlight = this.#getSmallestEnclosingMemoryHighlight(highlightedMemoryAreas, this.#address);\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        render(html `\n      <div class=\"view\">\n        <devtools-linear-memory-inspector-navigator\n          .data=${{ address: navigatorAddressToShow, valid: navigatorAddressIsValid, mode: this.#currentNavigatorMode, error: errorMsg, canGoBackInHistory, canGoForwardInHistory }}\n          @refreshrequested=${this.#onRefreshRequest}\n          @addressinputchanged=${this.#onAddressChange}\n          @pagenavigation=${this.#navigatePage}\n          @historynavigation=${this.#navigateHistory}></devtools-linear-memory-inspector-navigator>\n          <devtools-linear-memory-highlight-chip-list\n          .data=${{ highlightInfos: highlightedMemoryAreas, focusedMemoryHighlight }}\n          @jumptohighlightedmemory=${this.#onJumpToAddress}>\n          </devtools-linear-memory-highlight-chip-list>\n        <devtools-linear-memory-inspector-viewer\n          .data=${{\n            memory: this.#memory.slice(start - this.#memoryOffset, end - this.#memoryOffset),\n            address: this.#address, memoryOffset: start,\n            focus: this.#currentNavigatorMode === \"Submitted\" /* Mode.SUBMITTED */,\n            highlightInfo: this.#highlightInfo,\n            focusedMemoryHighlight\n        }}\n          @byteselected=${this.#onByteSelected}\n          @resize=${this.#resize}>\n        </devtools-linear-memory-inspector-viewer>\n      </div>\n      ${this.#hideValueInspector ? LitHtml.nothing : html `\n      <div class=\"value-interpreter\">\n        <devtools-linear-memory-inspector-interpreter\n          .data=${{\n            value: this.#memory.slice(this.#address - this.#memoryOffset, this.#address + VALUE_INTEPRETER_MAX_NUM_BYTES).buffer,\n            valueTypes: this.#valueTypes,\n            valueTypeModes: this.#valueTypeModes,\n            endianness: this.#endianness,\n            memoryLength: this.#outerMemoryLength\n        }}\n          @valuetypetoggled=${this.#onValueTypeToggled}\n          @valuetypemodechanged=${this.#onValueTypeModeChanged}\n          @endiannesschanged=${this.#onEndiannessChanged}\n          @jumptopointeraddress=${this.#onJumpToAddress}\n          >\n        </devtools-linear-memory-inspector-interpreter/>\n      </div>`}\n      `, this.#shadow, {\n            host: this,\n        });\n        // clang-format on\n    }\n    #onJumpToAddress(e) {\n        // Stop event from bubbling up, since no element further up needs the event.\n        e.stopPropagation();\n        this.#currentNavigatorMode = \"Submitted\" /* Mode.SUBMITTED */;\n        const addressInRange = Math.max(0, Math.min(e.data, this.#outerMemoryLength - 1));\n        this.#jumpToAddress(addressInRange);\n    }\n    #onRefreshRequest() {\n        const { start, end } = this.#getPageRangeForAddress(this.#address, this.#numBytesPerPage);\n        this.dispatchEvent(new MemoryRequestEvent(start, end, this.#address));\n    }\n    #onByteSelected(e) {\n        this.#currentNavigatorMode = \"Submitted\" /* Mode.SUBMITTED */;\n        const addressInRange = Math.max(0, Math.min(e.data, this.#outerMemoryLength - 1));\n        this.#jumpToAddress(addressInRange);\n    }\n    #createSettings() {\n        return { valueTypes: this.#valueTypes, modes: this.#valueTypeModes, endianness: this.#endianness };\n    }\n    #onEndiannessChanged(e) {\n        this.#endianness = e.data;\n        this.dispatchEvent(new SettingsChangedEvent(this.#createSettings()));\n        this.#render();\n    }\n    #isValidAddress(address) {\n        const newAddress = parseAddress(address);\n        return newAddress !== undefined && newAddress >= 0 && newAddress < this.#outerMemoryLength;\n    }\n    #onAddressChange(e) {\n        const { address, mode } = e.data;\n        const isValid = this.#isValidAddress(address);\n        const newAddress = parseAddress(address);\n        this.#currentNavigatorAddressLine = address;\n        if (newAddress !== undefined && isValid) {\n            this.#currentNavigatorMode = mode;\n            this.#jumpToAddress(newAddress);\n            return;\n        }\n        if (mode === \"Submitted\" /* Mode.SUBMITTED */ && !isValid) {\n            this.#currentNavigatorMode = \"InvalidSubmit\" /* Mode.INVALID_SUBMIT */;\n        }\n        else {\n            this.#currentNavigatorMode = \"Edit\" /* Mode.EDIT */;\n        }\n        this.#render();\n    }\n    #onValueTypeToggled(e) {\n        const { type, checked } = e.data;\n        if (checked) {\n            this.#valueTypes.add(type);\n        }\n        else {\n            this.#valueTypes.delete(type);\n        }\n        this.dispatchEvent(new SettingsChangedEvent(this.#createSettings()));\n        this.#render();\n    }\n    #onValueTypeModeChanged(e) {\n        e.stopImmediatePropagation();\n        const { type, mode } = e.data;\n        this.#valueTypeModes.set(type, mode);\n        this.dispatchEvent(new SettingsChangedEvent(this.#createSettings()));\n        this.#render();\n    }\n    #navigateHistory(e) {\n        return e.data === \"Forward\" /* Navigation.FORWARD */ ? this.#history.rollover() : this.#history.rollback();\n    }\n    #navigatePage(e) {\n        const newAddress = e.data === \"Forward\" /* Navigation.FORWARD */ ? this.#address + this.#numBytesPerPage : this.#address - this.#numBytesPerPage;\n        const addressInRange = Math.max(0, Math.min(newAddress, this.#outerMemoryLength - 1));\n        this.#jumpToAddress(addressInRange);\n    }\n    #jumpToAddress(address) {\n        if (address < 0 || address >= this.#outerMemoryLength) {\n            console.warn(`Specified address is out of bounds: ${address}`);\n            return;\n        }\n        this.#setAddress(address);\n        this.#update();\n    }\n    #getPageRangeForAddress(address, numBytesPerPage) {\n        const pageNumber = Math.floor(address / numBytesPerPage);\n        const pageStartAddress = pageNumber * numBytesPerPage;\n        const pageEndAddress = Math.min(pageStartAddress + numBytesPerPage, this.#outerMemoryLength);\n        return { start: pageStartAddress, end: pageEndAddress };\n    }\n    #resize(event) {\n        this.#numBytesPerPage = event.data;\n        this.#update();\n    }\n    #update() {\n        const { start, end } = this.#getPageRangeForAddress(this.#address, this.#numBytesPerPage);\n        if (start < this.#memoryOffset || end > this.#memoryOffset + this.#memory.length) {\n            this.dispatchEvent(new MemoryRequestEvent(start, end, this.#address));\n        }\n        else {\n            this.#render();\n        }\n    }\n    #setAddress(address) {\n        // If we are already showing the address that is requested, no need to act upon it.\n        if (this.#address === address) {\n            return;\n        }\n        const historyEntry = new AddressHistoryEntry(address, () => this.#jumpToAddress(address));\n        this.#history.push(historyEntry);\n        this.#address = address;\n        this.dispatchEvent(new AddressChangedEvent(this.#address));\n    }\n    // Returns the highlightInfo with the smallest size property that encloses the provided address.\n    // If there are multiple smallest enclosing highlights, we pick the one appearing the earliest in highlightedMemoryAreas.\n    // If no such highlightInfo exists, it returns undefined.\n    //\n    // Selecting the smallest enclosing memory highlight is a heuristic that aims to pick the\n    // most specific highlight given a provided address. This way, objects contained in other objects are\n    // potentially still accessible.\n    #getSmallestEnclosingMemoryHighlight(highlightedMemoryAreas, address) {\n        let smallestEnclosingHighlight;\n        for (const highlightedMemory of highlightedMemoryAreas) {\n            if (highlightedMemory.startAddress <= address &&\n                address < highlightedMemory.startAddress + highlightedMemory.size) {\n                if (!smallestEnclosingHighlight) {\n                    smallestEnclosingHighlight = highlightedMemory;\n                }\n                else if (highlightedMemory.size < smallestEnclosingHighlight.size) {\n                    smallestEnclosingHighlight = highlightedMemory;\n                }\n            }\n        }\n        return smallestEnclosingHighlight;\n    }\n}\ncustomElements.define('devtools-linear-memory-inspector-inspector', LinearMemoryInspector);\n//# sourceMappingURL=LinearMemoryInspector.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.navigator {\n  min-height: 24px;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  overflow: hidden;\n  align-items: center;\n  background-color: var(--sys-color-cdt-base-container);\n  color: var(--sys-color-on-surface);\n}\n\n.navigator-item {\n  display: flex;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.address-input {\n  text-align: center;\n  outline: none;\n  color: var(--sys-color-on-surface);\n  border: 1px solid var(--sys-color-neutral-outline);\n  background: transparent;\n}\n\n.address-input.invalid {\n  color: var(--sys-color-error);\n}\n\n.navigator-button {\n  display: flex;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  overflow: hidden;\n  border: none;\n  padding: 0;\n  outline: none;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n}\n\n.navigator-button:disabled devtools-icon {\n  opacity: 50%;\n}\n\n.navigator-button:enabled:hover devtools-icon {\n  color: var(--icon-default-hover);\n}\n\n.navigator-button:enabled:focus devtools-icon {\n  color: var(--icon-default-hover);\n}\n\n/*# sourceURL=linearMemoryNavigator.css */\n`);\n\nexport default styles;\n","// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/icon_button/icon_button.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport linearMemoryNavigatorStyles from './linearMemoryNavigator.css.js';\nconst UIStrings = {\n    /**\n     *@description Tooltip text that appears when hovering over a valid memory address (e.g. 0x0) in the address line in the Linear memory inspector.\n     */\n    enterAddress: 'Enter address',\n    /**\n     *@description Tooltip text that appears when hovering over the button to go back in history in the Linear Memory Navigator\n     */\n    goBackInAddressHistory: 'Go back in address history',\n    /**\n     *@description Tooltip text that appears when hovering over the button to go forward in history in the Linear Memory Navigator\n     */\n    goForwardInAddressHistory: 'Go forward in address history',\n    /**\n     *@description Tooltip text that appears when hovering over the page back icon in the Linear Memory Navigator\n     */\n    previousPage: 'Previous page',\n    /**\n     *@description Tooltip text that appears when hovering over the next page icon in the Linear Memory Navigator\n     */\n    nextPage: 'Next page',\n    /**\n     *@description Text to refresh the page\n     */\n    refresh: 'Refresh',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/linear_memory_inspector/components/LinearMemoryNavigator.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst { render, html, Directives: { ifDefined } } = LitHtml;\nexport class AddressInputChangedEvent extends Event {\n    static eventName = 'addressinputchanged';\n    data;\n    constructor(address, mode) {\n        super(AddressInputChangedEvent.eventName);\n        this.data = { address, mode };\n    }\n}\nexport class PageNavigationEvent extends Event {\n    static eventName = 'pagenavigation';\n    data;\n    constructor(navigation) {\n        super(PageNavigationEvent.eventName, {});\n        this.data = navigation;\n    }\n}\nexport class HistoryNavigationEvent extends Event {\n    static eventName = 'historynavigation';\n    data;\n    constructor(navigation) {\n        super(HistoryNavigationEvent.eventName, {});\n        this.data = navigation;\n    }\n}\nexport class RefreshRequestedEvent extends Event {\n    static eventName = 'refreshrequested';\n    constructor() {\n        super(RefreshRequestedEvent.eventName, {});\n    }\n}\nexport class LinearMemoryNavigator extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #address = '0';\n    #error = undefined;\n    #valid = true;\n    #canGoBackInHistory = false;\n    #canGoForwardInHistory = false;\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [linearMemoryNavigatorStyles];\n    }\n    set data(data) {\n        this.#address = data.address;\n        this.#error = data.error;\n        this.#valid = data.valid;\n        this.#canGoBackInHistory = data.canGoBackInHistory;\n        this.#canGoForwardInHistory = data.canGoForwardInHistory;\n        this.#render();\n        const addressInput = this.#shadow.querySelector('.address-input');\n        if (addressInput) {\n            if (data.mode === \"Submitted\" /* Mode.SUBMITTED */) {\n                addressInput.blur();\n            }\n            else if (data.mode === \"InvalidSubmit\" /* Mode.INVALID_SUBMIT */) {\n                addressInput.select();\n            }\n        }\n    }\n    #render() {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        const result = html `\n      <div class=\"navigator\">\n        <div class=\"navigator-item\">\n          ${this.#createButton({ icon: 'undo', title: i18nString(UIStrings.goBackInAddressHistory),\n            event: new HistoryNavigationEvent(\"Backward\" /* Navigation.BACKWARD */), enabled: this.#canGoBackInHistory,\n            jslogContext: 'linear-memory-inspector.history-back' })}\n          ${this.#createButton({ icon: 'redo', title: i18nString(UIStrings.goForwardInAddressHistory),\n            event: new HistoryNavigationEvent(\"Forward\" /* Navigation.FORWARD */), enabled: this.#canGoForwardInHistory,\n            jslogContext: 'linear-memory-inspector.history-forward' })}\n        </div>\n        <div class=\"navigator-item\">\n          ${this.#createButton({ icon: 'chevron-left', title: i18nString(UIStrings.previousPage),\n            event: new PageNavigationEvent(\"Backward\" /* Navigation.BACKWARD */), enabled: true,\n            jslogContext: 'linear-memory-inspector.previous-page' })}\n          ${this.#createAddressInput()}\n          ${this.#createButton({ icon: 'chevron-right', title: i18nString(UIStrings.nextPage),\n            event: new PageNavigationEvent(\"Forward\" /* Navigation.FORWARD */), enabled: true,\n            jslogContext: 'linear-memory-inspector.next-page' })}\n        </div>\n        ${this.#createButton({ icon: 'refresh', title: i18nString(UIStrings.refresh),\n            event: new RefreshRequestedEvent(), enabled: true,\n            jslogContext: 'linear-memory-inspector.refresh' })}\n      </div>\n      `;\n        render(result, this.#shadow, { host: this });\n        // clang-format on\n    }\n    #createAddressInput() {\n        const classMap = {\n            'address-input': true,\n            invalid: !this.#valid,\n        };\n        return html `\n      <input class=${LitHtml.Directives.classMap(classMap)} data-input=\"true\" .value=${this.#address}\n        jslog=${VisualLogging.textField('linear-memory-inspector.address').track({\n            change: true,\n        })}\n        title=${ifDefined(this.#valid ? i18nString(UIStrings.enterAddress) : this.#error)} @change=${this.#onAddressChange.bind(this, \"Submitted\" /* Mode.SUBMITTED */)} @input=${this.#onAddressChange.bind(this, \"Edit\" /* Mode.EDIT */)}/>`;\n    }\n    #onAddressChange(mode, event) {\n        const addressInput = event.target;\n        this.dispatchEvent(new AddressInputChangedEvent(addressInput.value, mode));\n    }\n    #createButton(data) {\n        return html `\n      <button class=\"navigator-button\" ?disabled=${!data.enabled}\n        jslog=${VisualLogging.action().track({ click: true, keydown: 'Enter' }).context(data.jslogContext)}\n        data-button=${data.event.type} title=${data.title}\n        @click=${this.dispatchEvent.bind(this, data.event)}>\n        <devtools-icon name=${data.icon}></devtools-icon>\n      </button>`;\n    }\n}\ncustomElements.define('devtools-linear-memory-inspector-navigator', LinearMemoryNavigator);\n//# sourceMappingURL=LinearMemoryNavigator.js.map","// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as LinearMemoryInspectorComponents from './components/components.js';\nimport { LinearMemoryInspectorController } from './LinearMemoryInspectorController.js';\nconst UIStrings = {\n    /**\n     *@description Label in the Linear Memory inspector tool that serves as a placeholder if no inspections are open (i.e. nothing to see here).\n     *             Inspection hereby refers to viewing, navigating and understanding the memory through this tool.\n     */\n    noOpenInspections: 'No open inspections',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/linear_memory_inspector/LinearMemoryInspectorPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet inspectorInstance;\nexport class LinearMemoryInspectorPane extends Common.ObjectWrapper.eventMixin(UI.Widget.VBox) {\n    #tabbedPane;\n    constructor() {\n        super(false);\n        this.element.setAttribute('jslog', `${VisualLogging.panel('linear-memory-inspector').track({ resize: true })}`);\n        const placeholder = document.createElement('div');\n        placeholder.textContent = i18nString(UIStrings.noOpenInspections);\n        placeholder.style.display = 'flex';\n        this.#tabbedPane = new UI.TabbedPane.TabbedPane();\n        this.#tabbedPane.setPlaceholderElement(placeholder);\n        this.#tabbedPane.setCloseableTabs(true);\n        this.#tabbedPane.setAllowTabReorder(true, true);\n        this.#tabbedPane.addEventListener(UI.TabbedPane.Events.TabClosed, this.#tabClosed, this);\n        this.#tabbedPane.show(this.contentElement);\n        this.#tabbedPane.headerElement().setAttribute('jslog', `${VisualLogging.toolbar().track({ keydown: 'ArrowUp|ArrowLeft|ArrowDown|ArrowRight|Enter|Space' })}`);\n    }\n    static instance() {\n        if (!inspectorInstance) {\n            inspectorInstance = new LinearMemoryInspectorPane();\n        }\n        return inspectorInstance;\n    }\n    #tabView(tabId) {\n        const view = this.#tabbedPane.tabView(tabId);\n        if (view === null) {\n            throw new Error(`No linear memory inspector view for the given tab id: ${tabId}`);\n        }\n        return view;\n    }\n    create(tabId, title, arrayWrapper, address) {\n        const inspectorView = new LinearMemoryInspectorView(arrayWrapper, address, tabId);\n        this.#tabbedPane.appendTab(tabId, title, inspectorView, undefined, false, true);\n        this.#tabbedPane.selectTab(tabId);\n    }\n    close(tabId) {\n        this.#tabbedPane.closeTab(tabId, false);\n    }\n    reveal(tabId, address) {\n        const view = this.#tabView(tabId);\n        if (address !== undefined) {\n            view.updateAddress(address);\n        }\n        this.refreshView(tabId);\n        this.#tabbedPane.selectTab(tabId);\n    }\n    refreshView(tabId) {\n        const view = this.#tabView(tabId);\n        view.refreshData();\n    }\n    #tabClosed(event) {\n        const { tabId } = event.data;\n        this.dispatchEventToListeners(\"ViewClosed\" /* Events.VIEW_CLOSED */, tabId);\n    }\n}\nexport class LinearMemoryInspectorView extends UI.Widget.VBox {\n    #memoryWrapper;\n    #address;\n    #tabId;\n    #inspector;\n    firstTimeOpen;\n    #hideValueInspector;\n    constructor(memoryWrapper, address = 0, tabId, hideValueInspector) {\n        super(false);\n        if (address < 0 || address >= memoryWrapper.length()) {\n            throw new Error('Requested address is out of bounds.');\n        }\n        this.#memoryWrapper = memoryWrapper;\n        this.#address = address;\n        this.#tabId = tabId;\n        this.#hideValueInspector = Boolean(hideValueInspector);\n        this.#inspector = new LinearMemoryInspectorComponents.LinearMemoryInspector.LinearMemoryInspector();\n        this.#inspector.addEventListener(LinearMemoryInspectorComponents.LinearMemoryInspector.MemoryRequestEvent.eventName, (event) => {\n            this.#memoryRequested(event);\n        });\n        this.#inspector.addEventListener(LinearMemoryInspectorComponents.LinearMemoryInspector.AddressChangedEvent.eventName, (event) => {\n            this.updateAddress(event.data);\n        });\n        this.#inspector.addEventListener(LinearMemoryInspectorComponents.LinearMemoryInspector.SettingsChangedEvent.eventName, (event) => {\n            // Stop event from bubbling up, since no element further up needs the event.\n            event.stopPropagation();\n            this.saveSettings(event.data);\n        });\n        this.#inspector.addEventListener(LinearMemoryInspectorComponents.LinearMemoryHighlightChipList.DeleteMemoryHighlightEvent.eventName, (event) => {\n            LinearMemoryInspectorController.instance().removeHighlight(this.#tabId, event.data);\n            this.refreshData();\n        });\n        this.contentElement.appendChild(this.#inspector);\n        this.firstTimeOpen = true;\n    }\n    wasShown() {\n        this.refreshData();\n    }\n    saveSettings(settings) {\n        LinearMemoryInspectorController.instance().saveSettings(settings);\n    }\n    updateAddress(address) {\n        if (address < 0 || address >= this.#memoryWrapper.length()) {\n            throw new Error('Requested address is out of bounds.');\n        }\n        this.#address = address;\n    }\n    refreshData() {\n        void LinearMemoryInspectorController.getMemoryForAddress(this.#memoryWrapper, this.#address).then(({ memory, offset, }) => {\n            let valueTypes;\n            let valueTypeModes;\n            let endianness;\n            if (this.firstTimeOpen) {\n                const settings = LinearMemoryInspectorController.instance().loadSettings();\n                valueTypes = settings.valueTypes;\n                valueTypeModes = settings.modes;\n                endianness = settings.endianness;\n                this.firstTimeOpen = false;\n            }\n            this.#inspector.data = {\n                memory,\n                address: this.#address,\n                memoryOffset: offset,\n                outerMemoryLength: this.#memoryWrapper.length(),\n                valueTypes,\n                valueTypeModes,\n                endianness,\n                highlightInfo: this.#getHighlightInfo(),\n                hideValueInspector: this.#hideValueInspector,\n            };\n        });\n    }\n    #memoryRequested(event) {\n        const { start, end, address } = event.data;\n        if (address < start || address >= end) {\n            throw new Error('Requested address is out of bounds.');\n        }\n        void LinearMemoryInspectorController.getMemoryRange(this.#memoryWrapper, start, end).then(memory => {\n            this.#inspector.data = {\n                memory,\n                address,\n                memoryOffset: start,\n                outerMemoryLength: this.#memoryWrapper.length(),\n                highlightInfo: this.#getHighlightInfo(),\n                hideValueInspector: this.#hideValueInspector,\n            };\n        });\n    }\n    #getHighlightInfo() {\n        const highlightInfo = LinearMemoryInspectorController.instance().getHighlightInfo(this.#tabId);\n        if (highlightInfo !== undefined) {\n            if (highlightInfo.startAddress < 0 || highlightInfo.startAddress >= this.#memoryWrapper.length()) {\n                throw new Error('HighlightInfo start address is out of bounds.');\n            }\n            if (highlightInfo.size <= 0) {\n                throw new Error('Highlight size must be a positive number.');\n            }\n        }\n        return highlightInfo;\n    }\n}\n//# sourceMappingURL=LinearMemoryInspectorPane.js.map","// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LinearMemoryInspectorComponents from './components/components.js';\nimport { LinearMemoryInspectorPane } from './LinearMemoryInspectorPane.js';\nconst UIStrings = {\n    /**\n     *@description Error message that shows up in the console if a buffer to be opened in the linear memory inspector cannot be found.\n     */\n    couldNotOpenLinearMemory: 'Could not open linear memory inspector: failed locating buffer.',\n    /**\n     *@description A context menu item in the Scope View of the Sources Panel\n     */\n    revealInMemoryInspectorPanel: 'Reveal in Memory inspector panel',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/linear_memory_inspector/LinearMemoryInspectorController.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst LINEAR_MEMORY_INSPECTOR_OBJECT_GROUP = 'linear-memory-inspector';\nconst MEMORY_TRANSFER_MIN_CHUNK_SIZE = 1000;\nlet controllerInstance;\nexport class RemoteArrayBufferWrapper {\n    #remoteArrayBuffer;\n    constructor(arrayBuffer) {\n        this.#remoteArrayBuffer = arrayBuffer;\n    }\n    length() {\n        return this.#remoteArrayBuffer.byteLength();\n    }\n    async getRange(start, end) {\n        const newEnd = Math.min(end, this.length());\n        if (start < 0 || start > newEnd) {\n            console.error(`Requesting invalid range of memory: (${start}, ${end})`);\n            return new Uint8Array(0);\n        }\n        const array = await this.#remoteArrayBuffer.bytes(start, newEnd);\n        return new Uint8Array(array);\n    }\n}\nasync function getBufferFromObject(obj) {\n    const response = await obj.runtimeModel().agent.invoke_callFunctionOn({\n        objectId: obj.objectId,\n        functionDeclaration: 'function() { return this instanceof ArrayBuffer || (typeof SharedArrayBuffer !== \\'undefined\\' && this instanceof SharedArrayBuffer) ? this : this.buffer; }',\n        silent: true,\n        // Set object group in order to bind the object lifetime to the linear memory inspector.\n        objectGroup: LINEAR_MEMORY_INSPECTOR_OBJECT_GROUP,\n    });\n    const error = response.getError();\n    if (error) {\n        throw new Error(`Remote object representing ArrayBuffer could not be retrieved: ${error}`);\n    }\n    obj = obj.runtimeModel().createRemoteObject(response.result);\n    return new SDK.RemoteObject.RemoteArrayBuffer(obj);\n}\nexport function isDWARFMemoryObject(obj) {\n    if (obj instanceof Bindings.DebuggerLanguagePlugins.ExtensionRemoteObject) {\n        return obj.linearMemoryAddress !== undefined;\n    }\n    return false;\n}\nexport class LinearMemoryInspectorController extends SDK.TargetManager.SDKModelObserver {\n    #paneInstance = LinearMemoryInspectorPane.instance();\n    #bufferIdToRemoteObject = new Map();\n    #bufferIdToHighlightInfo = new Map();\n    #settings;\n    constructor() {\n        super();\n        SDK.TargetManager.TargetManager.instance().observeModels(SDK.RuntimeModel.RuntimeModel, this);\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.GlobalObjectCleared, this.#onGlobalObjectClear, this);\n        this.#paneInstance.addEventListener(\"ViewClosed\" /* LmiEvents.VIEW_CLOSED */, this.#viewClosed.bind(this));\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerPaused, this.#onDebuggerPause, this);\n        const defaultValueTypeModes = LinearMemoryInspectorComponents.ValueInterpreterDisplayUtils.getDefaultValueTypeMapping();\n        const defaultSettings = {\n            valueTypes: Array.from(defaultValueTypeModes.keys()),\n            valueTypeModes: Array.from(defaultValueTypeModes),\n            endianness: \"Little Endian\" /* LinearMemoryInspectorComponents.ValueInterpreterDisplayUtils.Endianness.LITTLE */,\n        };\n        this.#settings = Common.Settings.Settings.instance().createSetting('lmi-interpreter-settings', defaultSettings);\n    }\n    static instance() {\n        if (controllerInstance) {\n            return controllerInstance;\n        }\n        controllerInstance = new LinearMemoryInspectorController();\n        return controllerInstance;\n    }\n    static async getMemoryForAddress(memoryWrapper, address) {\n        // Provide a chunk of memory that covers the address to show and some before and after\n        // as 1. the address shown is not necessarily at the beginning of a page and\n        // 2. to allow for fewer memory requests.\n        const memoryChunkStart = Math.max(0, address - MEMORY_TRANSFER_MIN_CHUNK_SIZE / 2);\n        const memoryChunkEnd = memoryChunkStart + MEMORY_TRANSFER_MIN_CHUNK_SIZE;\n        const memory = await memoryWrapper.getRange(memoryChunkStart, memoryChunkEnd);\n        return { memory, offset: memoryChunkStart };\n    }\n    static async getMemoryRange(memoryWrapper, start, end) {\n        // Check that the requested start is within bounds.\n        // If the requested end is larger than the actual\n        // memory, it will be automatically capped when\n        // requesting the range.\n        if (start < 0 || start > end || start >= memoryWrapper.length()) {\n            throw new Error('Requested range is out of bounds.');\n        }\n        const chunkEnd = Math.max(end, start + MEMORY_TRANSFER_MIN_CHUNK_SIZE);\n        return await memoryWrapper.getRange(start, chunkEnd);\n    }\n    async evaluateExpression(callFrame, expressionName) {\n        const result = await callFrame.evaluate({ expression: expressionName });\n        if ('error' in result) {\n            console.error(`Tried to evaluate the expression '${expressionName}' but got an error: ${result.error}`);\n            return undefined;\n        }\n        if ('exceptionDetails' in result && result?.exceptionDetails?.text) {\n            console.error(`Tried to evaluate the expression '${expressionName}' but got an exception: ${result.exceptionDetails.text}`);\n            return undefined;\n        }\n        return result.object;\n    }\n    saveSettings(data) {\n        const valueTypes = Array.from(data.valueTypes);\n        const modes = [...data.modes];\n        this.#settings.set({ valueTypes, valueTypeModes: modes, endianness: data.endianness });\n    }\n    loadSettings() {\n        const settings = this.#settings.get();\n        return {\n            valueTypes: new Set(settings.valueTypes),\n            modes: new Map(settings.valueTypeModes),\n            endianness: settings.endianness,\n        };\n    }\n    getHighlightInfo(bufferId) {\n        return this.#bufferIdToHighlightInfo.get(bufferId);\n    }\n    removeHighlight(bufferId, highlightInfo) {\n        const currentHighlight = this.getHighlightInfo(bufferId);\n        if (currentHighlight === highlightInfo) {\n            this.#bufferIdToHighlightInfo.delete(bufferId);\n        }\n    }\n    setHighlightInfo(bufferId, highlightInfo) {\n        this.#bufferIdToHighlightInfo.set(bufferId, highlightInfo);\n    }\n    #resetHighlightInfo(bufferId) {\n        this.#bufferIdToHighlightInfo.delete(bufferId);\n    }\n    static async retrieveDWARFMemoryObjectAndAddress(obj) {\n        if (!(obj instanceof Bindings.DebuggerLanguagePlugins.ExtensionRemoteObject)) {\n            return undefined;\n        }\n        const valueNode = obj;\n        const address = obj.linearMemoryAddress;\n        if (address === undefined) {\n            return undefined;\n        }\n        const callFrame = valueNode.callFrame;\n        const response = await obj.debuggerModel().agent.invoke_evaluateOnCallFrame({\n            callFrameId: callFrame.id,\n            expression: 'memories[0]',\n        });\n        const error = response.getError();\n        if (error) {\n            console.error(error);\n            Common.Console.Console.instance().error(i18nString(UIStrings.couldNotOpenLinearMemory));\n        }\n        const runtimeModel = obj.debuggerModel().runtimeModel();\n        return { obj: runtimeModel.createRemoteObject(response.result), address };\n    }\n    // This function returns the size of the source language value represented by the ValueNode or ExtensionRemoteObject.\n    // If the value is a pointer, the function returns the size of the pointed-to value. If the pointed-to value is also a\n    // pointer, it returns the size of the pointer (usually 4 bytes). This is the convention taken by the DWARF extension.\n    // > double x = 42.0;\n    // > double *ptr = &x;\n    // > double **dblptr = &ptr;\n    //\n    // retrieveObjectSize(ptr_ValueNode) -> 8, the size of a double\n    // retrieveObjectSize(dblptr_ValueNode) -> 4, the size of a pointer\n    static extractObjectSize(obj) {\n        return obj.linearMemorySize ?? 0;\n    }\n    // The object type description corresponds to the type of the highlighted memory\n    // that the user sees in the memory inspector. For pointers, we highlight the pointed to object.\n    //\n    // Example: The variable `x` has the type `int *`. Assume that `x` points to the value 3.\n    // -> The memory inspector will jump to the address where 3 is stored.\n    // -> The memory inspector will highlight the bytes that represent the 3.\n    // -> The object type description of what we show will thus be `int` and not `int *`.\n    static extractObjectTypeDescription(obj) {\n        const objType = obj.description;\n        if (!objType) {\n            return '';\n        }\n        const lastChar = objType.charAt(objType.length - 1);\n        const secondToLastChar = objType.charAt(objType.length - 2);\n        const isPointerType = lastChar === '*' || lastChar === '&';\n        const isOneLevelPointer = secondToLastChar === ' ';\n        if (!isPointerType) {\n            return objType;\n        }\n        if (isOneLevelPointer) {\n            // For example, 'int *'and 'int &' become 'int'.\n            return objType.slice(0, objType.length - 2);\n        }\n        // For example, 'int **' becomes 'int *'.\n        return objType.slice(0, objType.length - 1);\n    }\n    // When inspecting a pointer variable, we indicate that we display the pointed-to object in the viewer\n    // by prepending an asterisk to the pointer expression's name (mimicking C++ dereferencing).\n    // If the object isn't a pointer, we return the expression unchanged.\n    //\n    // Examples:\n    // (int *) myNumber -> (int) *myNumber\n    // (int[]) numbers -> (int[]) numbers\n    static extractObjectName(obj, expression) {\n        const lastChar = obj.description?.charAt(obj.description.length - 1);\n        const isPointerType = lastChar === '*';\n        if (isPointerType) {\n            return '*' + expression;\n        }\n        return expression;\n    }\n    async reveal({ object, expression }, omitFocus) {\n        const response = await LinearMemoryInspectorController.retrieveDWARFMemoryObjectAndAddress(object);\n        let memoryObject = object;\n        let memoryAddress = undefined;\n        if (response !== undefined) {\n            memoryAddress = response.address;\n            memoryObject = response.obj;\n        }\n        const buffer = await getBufferFromObject(memoryObject);\n        const { internalProperties } = await buffer.object().getOwnProperties(false);\n        const idProperty = internalProperties?.find(({ name }) => name === '[[ArrayBufferData]]');\n        const id = idProperty?.value?.value;\n        if (!id) {\n            throw new Error('Unable to find backing store id for array buffer');\n        }\n        const memoryProperty = internalProperties?.find(({ name }) => name === '[[WebAssemblyMemory]]');\n        const memory = memoryProperty?.value;\n        const highlightInfo = LinearMemoryInspectorController.extractHighlightInfo(object, expression);\n        if (highlightInfo) {\n            this.setHighlightInfo(id, highlightInfo);\n        }\n        else {\n            this.#resetHighlightInfo(id);\n        }\n        if (this.#bufferIdToRemoteObject.has(id)) {\n            this.#paneInstance.reveal(id, memoryAddress);\n            void UI.ViewManager.ViewManager.instance().showView('linear-memory-inspector', omitFocus);\n            return;\n        }\n        const title = String(memory ? memory.description : buffer.object().description);\n        this.#bufferIdToRemoteObject.set(id, buffer.object());\n        const arrayBufferWrapper = new RemoteArrayBufferWrapper(buffer);\n        this.#paneInstance.create(id, title, arrayBufferWrapper, memoryAddress);\n        void UI.ViewManager.ViewManager.instance().showView('linear-memory-inspector', omitFocus);\n    }\n    appendApplicableItems(_event, contextMenu, target) {\n        if (target.property.value?.isLinearMemoryInspectable()) {\n            const expression = target.path();\n            const object = target.property.value;\n            contextMenu.debugSection().appendItem(i18nString(UIStrings.revealInMemoryInspectorPanel), this.reveal.bind(this, new SDK.RemoteObject.LinearMemoryInspectable(object, expression)), { jslogContext: 'reveal-in-memory-inspector' });\n        }\n    }\n    static extractHighlightInfo(obj, expression) {\n        if (!(obj instanceof Bindings.DebuggerLanguagePlugins.ExtensionRemoteObject)) {\n            return undefined;\n        }\n        const startAddress = obj.linearMemoryAddress ?? 0;\n        let highlightInfo;\n        try {\n            highlightInfo = {\n                startAddress,\n                size: LinearMemoryInspectorController.extractObjectSize(obj),\n                name: expression ? LinearMemoryInspectorController.extractObjectName(obj, expression) : expression,\n                type: LinearMemoryInspectorController.extractObjectTypeDescription(obj),\n            };\n        }\n        catch (err) {\n            highlightInfo = undefined;\n        }\n        return highlightInfo;\n    }\n    modelRemoved(model) {\n        for (const [bufferId, remoteObject] of this.#bufferIdToRemoteObject) {\n            if (model === remoteObject.runtimeModel()) {\n                this.#bufferIdToRemoteObject.delete(bufferId);\n                this.#resetHighlightInfo(bufferId);\n                this.#paneInstance.close(bufferId);\n            }\n        }\n    }\n    #onDebuggerPause(event) {\n        const debuggerModel = event.data;\n        for (const [bufferId, remoteObject] of this.#bufferIdToRemoteObject) {\n            if (debuggerModel.runtimeModel() === remoteObject.runtimeModel()) {\n                const topCallFrame = debuggerModel.debuggerPausedDetails()?.callFrames[0];\n                if (topCallFrame) {\n                    void this\n                        .updateHighlightedMemory(bufferId, topCallFrame)\n                        // Need to call refreshView in the callback to trigger re-render.\n                        .then(() => this.#paneInstance.refreshView(bufferId));\n                }\n                else {\n                    this.#resetHighlightInfo(bufferId);\n                    this.#paneInstance.refreshView(bufferId);\n                }\n            }\n        }\n    }\n    #onGlobalObjectClear(event) {\n        this.modelRemoved(event.data.runtimeModel());\n    }\n    #viewClosed({ data: bufferId }) {\n        const remoteObj = this.#bufferIdToRemoteObject.get(bufferId);\n        if (remoteObj) {\n            remoteObj.release();\n        }\n        this.#bufferIdToRemoteObject.delete(bufferId);\n        this.#resetHighlightInfo(bufferId);\n    }\n    async updateHighlightedMemory(bufferId, callFrame) {\n        const oldHighlightInfo = this.getHighlightInfo(bufferId);\n        const expressionName = oldHighlightInfo?.name;\n        if (!oldHighlightInfo || !expressionName) {\n            this.#resetHighlightInfo(bufferId);\n            return;\n        }\n        const obj = await this.evaluateExpression(callFrame, expressionName);\n        if (!obj) {\n            this.#resetHighlightInfo(bufferId);\n            return;\n        }\n        const newHighlightInfo = LinearMemoryInspectorController.extractHighlightInfo(obj, expressionName);\n        if (!newHighlightInfo || !this.#pointToSameMemoryObject(newHighlightInfo, oldHighlightInfo)) {\n            this.#resetHighlightInfo(bufferId);\n        }\n        else {\n            this.setHighlightInfo(bufferId, newHighlightInfo);\n        }\n    }\n    #pointToSameMemoryObject(highlightInfoA, highlightInfoB) {\n        return highlightInfoA.type === highlightInfoB.type && highlightInfoA.startAddress === highlightInfoB.startAddress;\n    }\n}\n//# sourceMappingURL=LinearMemoryInspectorController.js.map"],"names":["SimpleHistoryManager","#entries","#activeEntryIndex","#coalescingReadonly","#historyDepth","historyDepth","revealIndex","filterOutCallback","filteredEntries","removedBeforeActiveEntry","i","entry","styles","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","render","html","LitHtml","DeleteMemoryHighlightEvent","highlightInfo","JumpToHighlightedMemoryEvent","address","LinearMemoryHighlightChipList","#shadow","#highlightedAreas","#focusedMemoryHighlight","linearMemoryHighlightChipListStyles","data","#render","chips","#createChip","result","expressionName","expressionType","classMap","LitHtml.Directives.classMap","VisualLogging.action","#onJumpToHighlightClick","#onDeleteHighlightClick","startAddress","highlight","VALUE_INTEPRETER_MAX_NUM_BYTES","getDefaultValueTypeMapping","DEFAULT_MODE_MAPPING","VALUE_TYPE_MODE_LIST","valueTypeToLocalizedString","valueType","i18n.i18n.lockedString","isValidMode","type","mode","Platform.assertNever","isNumber","getPointerAddress","buffer","endianness","isPointer","dataView","isLittleEndian","format","formatData","valueView","value","formatInteger","formatFloat","SORTED_VALUE_TYPES","ValueTypeModeChangedEvent","JumpToPointerAddressEvent","ValueInterpreterDisplay","#endianness","#buffer","#valueTypes","#valueTypeModeConfig","#memoryLength","inspectorCommonStyles","valueInterpreterDisplayStyles","#showValue","#renderNumberValues","#renderPointerValue","unsignedValue","#parse","jumpDisabled","buttonTitle","iconColor","#onJumpToAddressClicked","VisualLogging.dropDown","#onValueTypeModeChange","x","VisualLogging.item","#renderSignedAndUnsigned","signedValue","showSignedAndUnsigned","unsignedRendered","showInMultipleLines","signedRendered","event","GROUP_TO_TYPES","valueTypeGroupToLocalizedString","group","TypeToggleEvent","checked","ValueInterpreterSettings","Input.checkboxStyles","valueInterpreterSettingsStyles","VisualLogging.pane","#plotTypeSelections","types","e","#onTypeToggle","VisualLogging.toggle","Platform.StringUtilities.toKebabCase","checkbox","EndiannessChangedEvent","ValueTypeToggledEvent","LinearMemoryValueInterpreter","#showSettings","linearMemoryValueInterpreterStyles","#renderEndiannessSetting","#onSettingsToggle","VisualLogging.toggleSubpane","#onEndiannessChange","onEnumSettingChange","HEXADECIMAL_REGEXP","DECIMAL_REGEXP","toHexString","upperHex","formatAddress","parseAddress","hexMatch","decMatch","newAddress","ByteSelectedEvent","ResizeEvent","numBytesPerPage","BYTE_GROUP_MARGIN","BYTE_GROUP_SIZE","LinearMemoryViewer","#resizeObserver","#resize","#isObservingResize","#memory","#address","#memoryOffset","#highlightInfo","#numRows","#numBytesInRow","#focusOnByte","#lastKeyUpdateSent","#update","linearMemoryViewerStyles","#updateDimensions","#focusOnView","#engageResizeObserver","view","firstByteCell","textCell","divider","rowElement","addressText","byteCellWidth","textCellWidth","groupWidth","dividerWidth","addressTextAndDividerWidth","widthToFill","jslog","VisualLogging.section","#onKeyDown","#renderView","keyboardEvent","itemTemplates","#renderRow","row","startIndex","endIndex","#renderByteValues","#renderCharacterValues","cells","actualIndex","addMargin","selected","shouldBeHighlighted","#shouldBeHighlighted","focusedMemoryArea","#isFocusedArea","isSelectableCell","byteValue","onSelectedByte","#onSelectedByte","VisualLogging.tableCell","#toAscii","byte","index","MemoryRequestEvent","start","end","AddressChangedEvent","SettingsChangedEvent","settings","AddressHistoryEntry","#callback","callback","LinearMemoryInspector","#history","Common.SimpleHistoryManager.SimpleHistoryManager","#outerMemoryLength","#currentNavigatorMode","#currentNavigatorAddressLine","#numBytesPerPage","#valueTypeModes","#hideValueInspector","linearMemoryInspectorStyles","#setAddress","#getPageRangeForAddress","navigatorAddressToShow","navigatorAddressIsValid","#isValidAddress","invalidAddressMsg","errorMsg","canGoBackInHistory","canGoForwardInHistory","highlightedMemoryAreas","focusedMemoryHighlight","#getSmallestEnclosingMemoryHighlight","#onRefreshRequest","#onAddressChange","#navigatePage","#navigateHistory","#onJumpToAddress","#onByteSelected","LitHtml.nothing","#onValueTypeToggled","#onValueTypeModeChanged","#onEndiannessChanged","addressInRange","#jumpToAddress","#createSettings","isValid","pageStartAddress","pageEndAddress","historyEntry","smallestEnclosingHighlight","highlightedMemory","ifDefined","AddressInputChangedEvent","PageNavigationEvent","navigation","HistoryNavigationEvent","RefreshRequestedEvent","LinearMemoryNavigator","#error","#valid","#canGoBackInHistory","#canGoForwardInHistory","linearMemoryNavigatorStyles","addressInput","#createButton","#createAddressInput","VisualLogging.textField","inspectorInstance","LinearMemoryInspectorPane","Common.ObjectWrapper.eventMixin","UI.Widget.VBox","#tabbedPane","VisualLogging.panel","placeholder","UI.TabbedPane.TabbedPane","UI.TabbedPane.Events","#tabClosed","VisualLogging.toolbar","#tabView","tabId","title","arrayWrapper","inspectorView","LinearMemoryInspectorView","#memoryWrapper","#tabId","#inspector","memoryWrapper","hideValueInspector","LinearMemoryInspectorComponents.LinearMemoryInspector.LinearMemoryInspector","LinearMemoryInspectorComponents.LinearMemoryInspector.MemoryRequestEvent","#memoryRequested","LinearMemoryInspectorComponents.LinearMemoryInspector.AddressChangedEvent","LinearMemoryInspectorComponents.LinearMemoryInspector.SettingsChangedEvent","LinearMemoryInspectorComponents.LinearMemoryHighlightChipList.DeleteMemoryHighlightEvent","LinearMemoryInspectorController","memory","offset","valueTypes","valueTypeModes","#getHighlightInfo","LINEAR_MEMORY_INSPECTOR_OBJECT_GROUP","MEMORY_TRANSFER_MIN_CHUNK_SIZE","controllerInstance","RemoteArrayBufferWrapper","#remoteArrayBuffer","arrayBuffer","newEnd","array","getBufferFromObject","obj","response","error","SDK.RemoteObject.RemoteArrayBuffer","isDWARFMemoryObject","Bindings.DebuggerLanguagePlugins.ExtensionRemoteObject","SDK.TargetManager.SDKModelObserver","#paneInstance","#bufferIdToRemoteObject","#bufferIdToHighlightInfo","#settings","SDK.TargetManager.TargetManager","SDK.RuntimeModel.RuntimeModel","SDK.DebuggerModel.DebuggerModel","SDK.DebuggerModel.Events","#onGlobalObjectClear","#viewClosed","#onDebuggerPause","defaultValueTypeModes","LinearMemoryInspectorComponents.ValueInterpreterDisplayUtils.getDefaultValueTypeMapping","defaultSettings","Common.Settings.Settings","memoryChunkStart","memoryChunkEnd","chunkEnd","callFrame","modes","bufferId","#resetHighlightInfo","valueNode","Common.Console.Console","objType","lastChar","secondToLastChar","isPointerType","isOneLevelPointer","expression","object","omitFocus","memoryObject","memoryAddress","internalProperties","id","name","UI.ViewManager.ViewManager","arrayBufferWrapper","_event","contextMenu","target","SDK.RemoteObject.LinearMemoryInspectable","model","remoteObject","debuggerModel","topCallFrame","remoteObj","oldHighlightInfo","newHighlightInfo","#pointToSameMemoryObject","highlightInfoA","highlightInfoB"],"mappings":"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"}