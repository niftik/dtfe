{"version":3,"file":"screencast-R1gJLhUw.js","sources":["../../panels/screencast/InputModel.js","../../panels/screencast/screencastView.css.js","../../panels/screencast/ScreencastView.js","../../panels/screencast/ScreencastApp.js"],"sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../../core/sdk/sdk.js';\nconst BUTTONS = [\n    \"left\" /* Protocol.Input.MouseButton.Left */,\n    \"middle\" /* Protocol.Input.MouseButton.Middle */,\n    \"right\" /* Protocol.Input.MouseButton.Right */,\n    \"back\" /* Protocol.Input.MouseButton.Back */,\n    \"forward\" /* Protocol.Input.MouseButton.Forward */,\n];\nconst MOUSE_EVENT_TYPES = {\n    mousedown: \"mousePressed\" /* Protocol.Input.DispatchMouseEventRequestType.MousePressed */,\n    mouseup: \"mouseReleased\" /* Protocol.Input.DispatchMouseEventRequestType.MouseReleased */,\n    mousemove: \"mouseMoved\" /* Protocol.Input.DispatchMouseEventRequestType.MouseMoved */,\n};\nexport class InputModel extends SDK.SDKModel.SDKModel {\n    inputAgent;\n    activeMouseOffsetTop;\n    constructor(target) {\n        super(target);\n        this.inputAgent = target.inputAgent();\n        this.activeMouseOffsetTop = null;\n    }\n    emitKeyEvent(event) {\n        let type;\n        switch (event.type) {\n            case 'keydown':\n                type = \"keyDown\" /* Protocol.Input.DispatchKeyEventRequestType.KeyDown */;\n                break;\n            case 'keyup':\n                type = \"keyUp\" /* Protocol.Input.DispatchKeyEventRequestType.KeyUp */;\n                break;\n            case 'keypress':\n                type = \"char\" /* Protocol.Input.DispatchKeyEventRequestType.Char */;\n                break;\n            default:\n                return;\n        }\n        const text = event.type === 'keypress' ? String.fromCharCode(event.charCode) : undefined;\n        void this.inputAgent.invoke_dispatchKeyEvent({\n            type,\n            modifiers: this.modifiersForEvent(event),\n            text,\n            unmodifiedText: text ? text.toLowerCase() : undefined,\n            keyIdentifier: event.keyIdentifier,\n            code: event.code,\n            key: event.key,\n            windowsVirtualKeyCode: event.keyCode,\n            nativeVirtualKeyCode: event.keyCode,\n            autoRepeat: event.repeat,\n            isKeypad: event.location === 3,\n            isSystemKey: false,\n            location: event.location !== 3 ? event.location : undefined,\n        });\n    }\n    emitMouseEvent(event, offsetTop, zoom) {\n        if (!(event.type in MOUSE_EVENT_TYPES)) {\n            return;\n        }\n        if (event.type === 'mousedown' || this.activeMouseOffsetTop === null) {\n            this.activeMouseOffsetTop = offsetTop;\n        }\n        void this.inputAgent.invoke_dispatchMouseEvent({\n            type: MOUSE_EVENT_TYPES[event.type],\n            x: Math.round(event.offsetX / zoom),\n            y: Math.round(event.offsetY / zoom - this.activeMouseOffsetTop),\n            modifiers: this.modifiersForEvent(event),\n            button: BUTTONS[event.button],\n            clickCount: event.detail,\n        });\n        if (event.type === 'mouseup') {\n            this.activeMouseOffsetTop = null;\n        }\n    }\n    emitWheelEvent(event, offsetTop, zoom) {\n        if (this.activeMouseOffsetTop === null) {\n            this.activeMouseOffsetTop = offsetTop;\n        }\n        void this.inputAgent.invoke_dispatchMouseEvent({\n            type: \"mouseWheel\" /* Protocol.Input.DispatchMouseEventRequestType.MouseWheel */,\n            x: Math.round(event.offsetX / zoom),\n            y: Math.round(event.offsetY / zoom - this.activeMouseOffsetTop),\n            modifiers: this.modifiersForEvent(event),\n            button: BUTTONS[event.button],\n            clickCount: event.detail,\n            deltaX: event.deltaX / zoom,\n            deltaY: event.deltaY / zoom,\n        });\n    }\n    modifiersForEvent(event) {\n        return Number(event.getModifierState('Alt')) | (Number(event.getModifierState('Control')) << 1) |\n            (Number(event.getModifierState('Meta')) << 2) | (Number(event.getModifierState('Shift')) << 3);\n    }\n}\nSDK.SDKModel.SDKModel.register(InputModel, {\n    capabilities: 1024 /* SDK.Target.Capability.INPUT */,\n    autostart: false,\n});\n//# sourceMappingURL=InputModel.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n.screencast {\n  overflow: hidden;\n}\n\n.screencast-navigation {\n  flex-direction: row;\n  display: flex;\n  align-items: center;\n  position: relative;\n  padding-left: 1px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  background-origin: padding-box;\n  background-clip: padding-box;\n}\n\n.screencast-navigation button {\n  border-width: 0;\n  padding: 5px;\n  width: 28px;\n  height: 26px;\n  background: none;\n}\n\n.screencast-navigation button devtools-icon {\n  width: 100%;\n  height: 100%;\n}\n\n.screencast-navigation button[disabled].navigation {\n  opacity: 50%;\n}\n\n.screencast-navigation input {\n  flex: 1;\n  margin: 2px;\n  max-height: 19px;\n}\n\n.screencast-navigation .progress {\n  background-color: var(--sys-color-primary-bright);\n  height: 3px;\n  left: 0;\n  position: absolute;\n  top: 100%;  /* Align with the bottom edge of the parent. */\n  width: 0;\n  z-index: 2;  /* Above .screencast-glasspane. */\n}\n\n.screencast-viewport {\n  display: flex;\n  border: 0px solid var(--sys-color-divider);\n  border-radius: 0px;\n  flex: none;\n  padding: 0px;\n  margin: 0px;\n  align-self: center;\n  width: 100%;\n  background-color: var(--sys-color-surface-variant);\n}\n\n.screencast-canvas-container {\n  flex: auto;\n  display: flex;\n  border: 0px solid var(--sys-color-divider);\n  position: relative;\n}\n\n.screencast-canvas-container.touchable {\n  cursor: image-set(var(--image-file-touchCursor) 1x, var(--image-file-touchCursor_2x) 2x), default;\n}\n\n.screencast canvas {\n  flex: auto;\n  position: relative;\n}\n\n.screencast-element-title {\n  position: absolute;\n  z-index: 10;\n}\n\n.screencast-tag-name {\n  color: var(--sys-color-token-tag);\n}\n\n.screencast-attribute {\n  color: var(--sys-color-token-attribute);\n}\n\n.screencast-dimension {\n  /* Keep this in sync with tool_highlight.css (.dimensions) */\n  color: var(--sys-color-outline);\n}\n\n.screencast-glasspane {\n  background-color: var(--color-background-opacity-80);\n  font-size: 30px;\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n/*# sourceURL=screencastView.css */\n`);\n\nexport default styles;\n","/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport { InputModel } from './InputModel.js';\nimport screencastViewStyles from './screencastView.css.js';\nconst UIStrings = {\n    /**\n     *@description Accessible alt text for the screencast canvas rendering of the debug target webpage\n     */\n    screencastViewOfDebugTarget: 'Screencast view of debug target',\n    /**\n     *@description Glass pane element text content in Screencast View of the Remote Devices tab when toggling screencast\n     */\n    theTabIsInactive: 'The tab is inactive',\n    /**\n     *@description Glass pane element text content in Screencast View of the Remote Devices tab when toggling screencast\n     */\n    profilingInProgress: 'Profiling in progress',\n    /**\n     *@description Accessible text for the screencast back button\n     */\n    back: 'back',\n    /**\n     *@description Accessible text for the screencast forward button\n     */\n    forward: 'forward',\n    /**\n     *@description Accessible text for the screencast reload button\n     */\n    reload: 'reload',\n    /**\n     *@description Accessible text for the address bar in screencast view\n     */\n    addressBar: 'Address bar',\n    /**\n     *@description Accessible text for the touch emulation button.\n     */\n    touchInput: 'Use touch',\n    /**\n     *@description Accessible text for the mouse emulation button.\n     */\n    mouseInput: 'Use mouse',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/screencast/ScreencastView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ScreencastView extends UI.Widget.VBox {\n    screenCaptureModel;\n    domModel;\n    overlayModel;\n    resourceTreeModel;\n    networkManager;\n    inputModel;\n    shortcuts;\n    scrollOffsetX;\n    scrollOffsetY;\n    screenZoom;\n    screenOffsetTop;\n    pageScaleFactor;\n    imageElement;\n    viewportElement;\n    glassPaneElement;\n    canvasElement;\n    titleElement;\n    context;\n    imageZoom;\n    tagNameElement;\n    attributeElement;\n    nodeWidthElement;\n    nodeHeightElement;\n    model;\n    highlightConfig;\n    navigationUrl;\n    navigationBack;\n    navigationForward;\n    canvasContainerElement;\n    isCasting;\n    checkerboardPattern;\n    targetInactive;\n    deferredCasting;\n    highlightNode;\n    config;\n    node;\n    inspectModeConfig;\n    navigationBar;\n    navigationReload;\n    navigationProgressBar;\n    touchInputToggle;\n    mouseInputToggle;\n    touchInputToggleIcon;\n    mouseInputToggleIcon;\n    historyIndex;\n    historyEntries;\n    constructor(screenCaptureModel) {\n        super();\n        this.screenCaptureModel = screenCaptureModel;\n        this.domModel = screenCaptureModel.target().model(SDK.DOMModel.DOMModel);\n        this.overlayModel = screenCaptureModel.target().model(SDK.OverlayModel.OverlayModel);\n        this.resourceTreeModel = screenCaptureModel.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n        this.networkManager = screenCaptureModel.target().model(SDK.NetworkManager.NetworkManager);\n        this.inputModel = screenCaptureModel.target().model(InputModel);\n        this.setMinimumSize(150, 150);\n        this.shortcuts = {};\n        this.scrollOffsetX = 0;\n        this.scrollOffsetY = 0;\n        this.screenZoom = 1;\n        this.screenOffsetTop = 0;\n        this.pageScaleFactor = 1;\n        this.imageZoom = 1;\n    }\n    initialize() {\n        this.element.classList.add('screencast');\n        this.createNavigationBar();\n        this.viewportElement = this.element.createChild('div', 'screencast-viewport hidden');\n        this.canvasContainerElement = this.viewportElement.createChild('div', 'screencast-canvas-container');\n        this.glassPaneElement =\n            this.canvasContainerElement.createChild('div', 'screencast-glasspane fill hidden');\n        this.canvasElement = this.canvasContainerElement.createChild('canvas');\n        UI.ARIAUtils.setLabel(this.canvasElement, i18nString(UIStrings.screencastViewOfDebugTarget));\n        this.canvasElement.tabIndex = 0;\n        this.canvasElement.addEventListener('mousedown', this.handleMouseEvent.bind(this), false);\n        this.canvasElement.addEventListener('mouseup', this.handleMouseEvent.bind(this), false);\n        this.canvasElement.addEventListener('mousemove', this.handleMouseEvent.bind(this), false);\n        this.canvasElement.addEventListener('wheel', this.handleWheelEvent.bind(this), false);\n        this.canvasElement.addEventListener('click', this.handleMouseEvent.bind(this), false);\n        this.canvasElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), false);\n        this.canvasElement.addEventListener('keydown', this.handleKeyEvent.bind(this), false);\n        this.canvasElement.addEventListener('keyup', this.handleKeyEvent.bind(this), false);\n        this.canvasElement.addEventListener('keypress', this.handleKeyEvent.bind(this), false);\n        this.canvasElement.addEventListener('blur', this.handleBlurEvent.bind(this), false);\n        this.titleElement =\n            this.canvasContainerElement.createChild('div', 'screencast-element-title monospace hidden');\n        this.tagNameElement = this.titleElement.createChild('span', 'screencast-tag-name');\n        this.attributeElement = this.titleElement.createChild('span', 'screencast-attribute');\n        UI.UIUtils.createTextChild(this.titleElement, ' ');\n        const dimension = this.titleElement.createChild('span', 'screencast-dimension');\n        this.nodeWidthElement = dimension.createChild('span');\n        UI.UIUtils.createTextChild(dimension, ' × ');\n        this.nodeHeightElement = dimension.createChild('span');\n        this.titleElement.style.top = '0';\n        this.titleElement.style.left = '0';\n        this.imageElement = new Image();\n        this.isCasting = false;\n        this.context = this.canvasElement.getContext('2d');\n        this.checkerboardPattern = this.createCheckerboardPattern(this.context);\n        this.shortcuts[UI.KeyboardShortcut.KeyboardShortcut.makeKey('l', UI.KeyboardShortcut.Modifiers.Ctrl)] =\n            this.focusNavigationBar.bind(this);\n        SDK.TargetManager.TargetManager.instance().addEventListener(\"SuspendStateChanged\" /* SDK.TargetManager.Events.SUSPEND_STATE_CHANGED */, this.onSuspendStateChange, this);\n        this.updateGlasspane();\n    }\n    wasShown() {\n        this.startCasting();\n        this.registerCSSFiles([screencastViewStyles]);\n    }\n    willHide() {\n        this.stopCasting();\n    }\n    startCasting() {\n        if (SDK.TargetManager.TargetManager.instance().allTargetsSuspended()) {\n            return;\n        }\n        if (this.isCasting) {\n            return;\n        }\n        this.isCasting = true;\n        const maxImageDimension = 2048;\n        const dimensions = this.viewportDimensions();\n        if (dimensions.width < 0 || dimensions.height < 0) {\n            this.isCasting = false;\n            return;\n        }\n        dimensions.width *= window.devicePixelRatio;\n        dimensions.height *= window.devicePixelRatio;\n        // Note: startScreencast width and height are expected to be integers so must be floored.\n        this.screenCaptureModel.startScreencast(\"jpeg\" /* Protocol.Page.StartScreencastRequestFormat.Jpeg */, 80, Math.floor(Math.min(maxImageDimension, dimensions.width)), Math.floor(Math.min(maxImageDimension, dimensions.height)), undefined, this.screencastFrame.bind(this), this.screencastVisibilityChanged.bind(this));\n        if (this.overlayModel) {\n            this.overlayModel.setHighlighter(this);\n        }\n    }\n    stopCasting() {\n        if (!this.isCasting) {\n            return;\n        }\n        this.isCasting = false;\n        this.screenCaptureModel.stopScreencast();\n        for (const emulationModel of SDK.TargetManager.TargetManager.instance().models(SDK.EmulationModel.EmulationModel)) {\n            void emulationModel.overrideEmulateTouch(false);\n        }\n        if (this.overlayModel) {\n            this.overlayModel.setHighlighter(null);\n        }\n    }\n    screencastFrame(base64Data, metadata) {\n        this.imageElement.onload = () => {\n            this.pageScaleFactor = metadata.pageScaleFactor;\n            this.screenOffsetTop = metadata.offsetTop;\n            this.scrollOffsetX = metadata.scrollOffsetX;\n            this.scrollOffsetY = metadata.scrollOffsetY;\n            const deviceSizeRatio = metadata.deviceHeight / metadata.deviceWidth;\n            const dimensionsCSS = this.viewportDimensions();\n            this.imageZoom = Math.min(dimensionsCSS.width / this.imageElement.naturalWidth, dimensionsCSS.height / (this.imageElement.naturalWidth * deviceSizeRatio));\n            this.viewportElement.classList.remove('hidden');\n            const bordersSize = BORDERS_SIZE;\n            if (this.imageZoom < 1.01 / window.devicePixelRatio) {\n                this.imageZoom = 1 / window.devicePixelRatio;\n            }\n            this.screenZoom = this.imageElement.naturalWidth * this.imageZoom / metadata.deviceWidth;\n            this.viewportElement.style.width = metadata.deviceWidth * this.screenZoom + bordersSize + 'px';\n            this.viewportElement.style.height = metadata.deviceHeight * this.screenZoom + bordersSize + 'px';\n            const data = this.highlightNode ? { node: this.highlightNode, selectorList: undefined } : { clear: true };\n            void this.updateHighlightInOverlayAndRepaint(data, this.highlightConfig);\n        };\n        this.imageElement.src = 'data:image/jpg;base64,' + base64Data;\n    }\n    isGlassPaneActive() {\n        return !this.glassPaneElement.classList.contains('hidden');\n    }\n    screencastVisibilityChanged(visible) {\n        this.targetInactive = !visible;\n        this.updateGlasspane();\n    }\n    onSuspendStateChange() {\n        if (SDK.TargetManager.TargetManager.instance().allTargetsSuspended()) {\n            this.stopCasting();\n        }\n        else {\n            this.startCasting();\n        }\n        this.updateGlasspane();\n    }\n    updateGlasspane() {\n        if (this.targetInactive) {\n            this.glassPaneElement.textContent = i18nString(UIStrings.theTabIsInactive);\n            this.glassPaneElement.classList.remove('hidden');\n        }\n        else if (SDK.TargetManager.TargetManager.instance().allTargetsSuspended()) {\n            this.glassPaneElement.textContent = i18nString(UIStrings.profilingInProgress);\n            this.glassPaneElement.classList.remove('hidden');\n        }\n        else {\n            this.glassPaneElement.classList.add('hidden');\n        }\n    }\n    async handleMouseEvent(event) {\n        if (this.isGlassPaneActive()) {\n            event.consume();\n            return;\n        }\n        if (!this.pageScaleFactor || !this.domModel) {\n            return;\n        }\n        if (!this.inspectModeConfig) {\n            if (this.inputModel) {\n                this.inputModel.emitMouseEvent(event, this.screenOffsetTop, this.screenZoom);\n            }\n            event.preventDefault();\n            if (event.type === 'mousedown') {\n                this.canvasElement.focus();\n            }\n            return;\n        }\n        const position = this.convertIntoScreenSpace(event);\n        const node = await this.domModel.nodeForLocation(Math.floor(position.x / this.pageScaleFactor + this.scrollOffsetX), Math.floor(position.y / this.pageScaleFactor + this.scrollOffsetY), Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom').get());\n        if (!node) {\n            return;\n        }\n        if (event.type === 'mousemove') {\n            void this.updateHighlightInOverlayAndRepaint({ node, selectorList: undefined }, this.inspectModeConfig);\n            this.domModel.overlayModel().nodeHighlightRequested({ nodeId: node.id });\n        }\n        else if (event.type === 'click') {\n            this.domModel.overlayModel().inspectNodeRequested({ backendNodeId: node.backendNodeId() });\n        }\n    }\n    async handleWheelEvent(event) {\n        if (this.isGlassPaneActive()) {\n            event.consume();\n            return;\n        }\n        if (!this.pageScaleFactor || !this.domModel) {\n            return;\n        }\n        if (this.inputModel) {\n            this.inputModel.emitWheelEvent(event, this.screenOffsetTop, this.screenZoom);\n        }\n        event.preventDefault();\n    }\n    handleKeyEvent(event) {\n        if (this.isGlassPaneActive()) {\n            event.consume();\n            return;\n        }\n        const shortcutKey = UI.KeyboardShortcut.KeyboardShortcut.makeKeyFromEvent(event);\n        const handler = this.shortcuts[shortcutKey];\n        if (handler && handler(event)) {\n            event.consume();\n            return;\n        }\n        if (this.inputModel) {\n            this.inputModel.emitKeyEvent(event);\n        }\n        event.consume();\n        this.canvasElement.focus();\n    }\n    handleBlurEvent() {\n        if (this.inputModel && this.mouseInputToggle?.disabled) {\n            const event = new MouseEvent('mouseup');\n            this.inputModel.emitMouseEvent(event, this.screenOffsetTop, this.screenZoom);\n        }\n    }\n    handleContextMenuEvent(event) {\n        event.consume(true);\n    }\n    convertIntoScreenSpace(event) {\n        return {\n            x: Math.round(event.offsetX / this.screenZoom),\n            y: Math.round(event.offsetY / this.screenZoom - this.screenOffsetTop),\n        };\n    }\n    onResize() {\n        if (this.deferredCasting) {\n            clearTimeout(this.deferredCasting);\n            delete this.deferredCasting;\n        }\n        this.stopCasting();\n        this.deferredCasting = window.setTimeout(this.startCasting.bind(this), 100);\n    }\n    highlightInOverlay(data, config) {\n        void this.updateHighlightInOverlayAndRepaint(data, config);\n    }\n    async updateHighlightInOverlayAndRepaint(data, config) {\n        let node = null;\n        if ('node' in data) {\n            node = data.node;\n        }\n        if (!node && 'deferredNode' in data) {\n            node = await data.deferredNode.resolvePromise();\n        }\n        if (!node && 'object' in data) {\n            const domModel = data.object.runtimeModel().target().model(SDK.DOMModel.DOMModel);\n            if (domModel) {\n                node = await domModel.pushObjectAsNodeToFrontend(data.object);\n            }\n        }\n        this.highlightNode = node;\n        this.highlightConfig = config;\n        if (!node) {\n            this.model = null;\n            this.config = null;\n            this.node = null;\n            this.titleElement.classList.add('hidden');\n            this.repaint();\n            return;\n        }\n        this.node = node;\n        void node.boxModel().then(model => {\n            if (!model || !this.pageScaleFactor) {\n                this.repaint();\n                return;\n            }\n            this.model = this.scaleModel(model);\n            this.config = config;\n            this.repaint();\n        });\n    }\n    scaleModel(model) {\n        function scaleQuad(quad) {\n            for (let i = 0; i < quad.length; i += 2) {\n                quad[i] = quad[i] * this.pageScaleFactor * this.screenZoom;\n                quad[i + 1] = (quad[i + 1] * this.pageScaleFactor + this.screenOffsetTop) * this.screenZoom;\n            }\n        }\n        scaleQuad.call(this, model.content);\n        scaleQuad.call(this, model.padding);\n        scaleQuad.call(this, model.border);\n        scaleQuad.call(this, model.margin);\n        return model;\n    }\n    repaint() {\n        const model = this.model;\n        const config = this.config;\n        const canvasWidth = this.canvasElement.getBoundingClientRect().width;\n        const canvasHeight = this.canvasElement.getBoundingClientRect().height;\n        this.canvasElement.width = window.devicePixelRatio * canvasWidth;\n        this.canvasElement.height = window.devicePixelRatio * canvasHeight;\n        this.context.save();\n        this.context.scale(window.devicePixelRatio, window.devicePixelRatio);\n        // Paint top and bottom gutter.\n        this.context.save();\n        if (this.checkerboardPattern) {\n            this.context.fillStyle = this.checkerboardPattern;\n        }\n        this.context.fillRect(0, 0, canvasWidth, this.screenOffsetTop * this.screenZoom);\n        this.context.fillRect(0, this.screenOffsetTop * this.screenZoom + this.imageElement.naturalHeight * this.imageZoom, canvasWidth, canvasHeight);\n        this.context.restore();\n        if (model && config) {\n            this.context.save();\n            const quads = [];\n            const isTransparent = (color) => Boolean(color.a && color.a === 0);\n            if (model.content && config.contentColor && !isTransparent(config.contentColor)) {\n                quads.push({ quad: model.content, color: config.contentColor });\n            }\n            if (model.padding && config.paddingColor && !isTransparent(config.paddingColor)) {\n                quads.push({ quad: model.padding, color: config.paddingColor });\n            }\n            if (model.border && config.borderColor && !isTransparent(config.borderColor)) {\n                quads.push({ quad: model.border, color: config.borderColor });\n            }\n            if (model.margin && config.marginColor && !isTransparent(config.marginColor)) {\n                quads.push({ quad: model.margin, color: config.marginColor });\n            }\n            for (let i = quads.length - 1; i > 0; --i) {\n                this.drawOutlinedQuadWithClip(quads[i].quad, quads[i - 1].quad, quads[i].color);\n            }\n            if (quads.length > 0) {\n                this.drawOutlinedQuad(quads[0].quad, quads[0].color);\n            }\n            this.context.restore();\n            this.drawElementTitle();\n            this.context.globalCompositeOperation = 'destination-over';\n        }\n        this.context.drawImage(this.imageElement, 0, this.screenOffsetTop * this.screenZoom, this.imageElement.naturalWidth * this.imageZoom, this.imageElement.naturalHeight * this.imageZoom);\n        this.context.restore();\n    }\n    cssColor(color) {\n        if (!color) {\n            return 'transparent';\n        }\n        return Common.Color.Legacy.fromRGBA([color.r, color.g, color.b, color.a !== undefined ? color.a : 1])\n            .asString(\"rgba\" /* Common.Color.Format.RGBA */) ||\n            '';\n    }\n    quadToPath(quad) {\n        this.context.beginPath();\n        this.context.moveTo(quad[0], quad[1]);\n        this.context.lineTo(quad[2], quad[3]);\n        this.context.lineTo(quad[4], quad[5]);\n        this.context.lineTo(quad[6], quad[7]);\n        this.context.closePath();\n        return this.context;\n    }\n    drawOutlinedQuad(quad, fillColor) {\n        this.context.save();\n        this.context.lineWidth = 2;\n        this.quadToPath(quad).clip();\n        this.context.fillStyle = this.cssColor(fillColor);\n        this.context.fill();\n        this.context.restore();\n    }\n    drawOutlinedQuadWithClip(quad, clipQuad, fillColor) {\n        this.context.fillStyle = this.cssColor(fillColor);\n        this.context.save();\n        this.context.lineWidth = 0;\n        this.quadToPath(quad).fill();\n        this.context.globalCompositeOperation = 'destination-out';\n        this.context.fillStyle = 'red';\n        this.quadToPath(clipQuad).fill();\n        this.context.restore();\n    }\n    drawElementTitle() {\n        if (!this.node) {\n            return;\n        }\n        const canvasWidth = this.canvasElement.getBoundingClientRect().width;\n        const canvasHeight = this.canvasElement.getBoundingClientRect().height;\n        const lowerCaseName = this.node.localName() || this.node.nodeName().toLowerCase();\n        this.tagNameElement.textContent = lowerCaseName;\n        this.attributeElement.textContent = getAttributesForElementTitle(this.node);\n        this.nodeWidthElement.textContent = String(this.model ? this.model.width : 0);\n        this.nodeHeightElement.textContent = String(this.model ? this.model.height : 0);\n        this.titleElement.classList.remove('hidden');\n        const titleWidth = this.titleElement.offsetWidth + 6;\n        const titleHeight = this.titleElement.offsetHeight + 4;\n        const anchorTop = this.model ? this.model.margin[1] : 0;\n        const anchorBottom = this.model ? this.model.margin[7] : 0;\n        const arrowHeight = 7;\n        let renderArrowUp = false;\n        let renderArrowDown = false;\n        let boxX = Math.max(2, this.model ? this.model.margin[0] : 0);\n        if (boxX + titleWidth > canvasWidth) {\n            boxX = canvasWidth - titleWidth - 2;\n        }\n        let boxY;\n        if (anchorTop > canvasHeight) {\n            boxY = canvasHeight - titleHeight - arrowHeight;\n            renderArrowDown = true;\n        }\n        else if (anchorBottom < 0) {\n            boxY = arrowHeight;\n            renderArrowUp = true;\n        }\n        else if (anchorBottom + titleHeight + arrowHeight < canvasHeight) {\n            boxY = anchorBottom + arrowHeight - 4;\n            renderArrowUp = true;\n        }\n        else if (anchorTop - titleHeight - arrowHeight > 0) {\n            boxY = anchorTop - titleHeight - arrowHeight + 3;\n            renderArrowDown = true;\n        }\n        else {\n            boxY = arrowHeight;\n        }\n        this.context.save();\n        this.context.translate(0.5, 0.5);\n        this.context.beginPath();\n        this.context.moveTo(boxX, boxY);\n        if (renderArrowUp) {\n            this.context.lineTo(boxX + 2 * arrowHeight, boxY);\n            this.context.lineTo(boxX + 3 * arrowHeight, boxY - arrowHeight);\n            this.context.lineTo(boxX + 4 * arrowHeight, boxY);\n        }\n        this.context.lineTo(boxX + titleWidth, boxY);\n        this.context.lineTo(boxX + titleWidth, boxY + titleHeight);\n        if (renderArrowDown) {\n            this.context.lineTo(boxX + 4 * arrowHeight, boxY + titleHeight);\n            this.context.lineTo(boxX + 3 * arrowHeight, boxY + titleHeight + arrowHeight);\n            this.context.lineTo(boxX + 2 * arrowHeight, boxY + titleHeight);\n        }\n        this.context.lineTo(boxX, boxY + titleHeight);\n        this.context.closePath();\n        this.context.fillStyle = 'var(--sys-color-yellow-container)';\n        this.context.fill();\n        this.context.strokeStyle = 'var(--sys-color-outline)';\n        this.context.stroke();\n        this.context.restore();\n        this.titleElement.style.top = (boxY + 3) + 'px';\n        this.titleElement.style.left = (boxX + 3) + 'px';\n    }\n    viewportDimensions() {\n        const gutterSize = 0;\n        const bordersSize = BORDERS_SIZE;\n        const width = this.element.offsetWidth - bordersSize - gutterSize;\n        const height = this.element.offsetHeight - bordersSize - gutterSize - NAVBAR_HEIGHT;\n        return { width, height };\n    }\n    setInspectMode(mode, config) {\n        this.inspectModeConfig = mode !== \"none\" /* Protocol.Overlay.InspectMode.None */ ? config : null;\n        return Promise.resolve();\n    }\n    highlightFrame(_frameId) {\n    }\n    createCheckerboardPattern(context) {\n        const pattern = document.createElement('canvas');\n        const size = 32;\n        pattern.width = size * 2;\n        pattern.height = size * 2;\n        const pctx = pattern.getContext('2d');\n        pctx.fillStyle = 'var(--sys-color-neutral-outline)';\n        pctx.fillRect(0, 0, size * 2, size * 2);\n        pctx.fillStyle = 'var(--sys-color-surface-variant)';\n        pctx.fillRect(0, 0, size, size);\n        pctx.fillRect(size, size, size, size);\n        return context.createPattern(pattern, 'repeat');\n    }\n    createNavigationBar() {\n        this.navigationBar = this.element.createChild('div', 'screencast-navigation');\n        this.navigationBack = this.navigationBar.createChild('button', 'navigation');\n        {\n            const icon = this.navigationBack.appendChild(new IconButton.Icon.Icon());\n            icon.data = { color: 'var(--icon-default)', iconName: 'arrow-back' };\n        }\n        this.navigationBack.disabled = true;\n        UI.ARIAUtils.setLabel(this.navigationBack, i18nString(UIStrings.back));\n        this.navigationForward = this.navigationBar.createChild('button', 'navigation');\n        {\n            const icon = this.navigationForward.appendChild(new IconButton.Icon.Icon());\n            icon.data = { color: 'var(--icon-default)', iconName: 'arrow-forward' };\n        }\n        this.navigationForward.disabled = true;\n        UI.ARIAUtils.setLabel(this.navigationForward, i18nString(UIStrings.forward));\n        this.navigationReload = this.navigationBar.createChild('button', 'navigation');\n        {\n            const icon = this.navigationReload.appendChild(new IconButton.Icon.Icon());\n            icon.data = { color: 'var(--icon-default)', iconName: 'refresh' };\n        }\n        UI.ARIAUtils.setLabel(this.navigationReload, i18nString(UIStrings.reload));\n        this.navigationUrl = this.navigationBar.appendChild(UI.UIUtils.createInput());\n        this.navigationUrl.type = 'text';\n        UI.ARIAUtils.setLabel(this.navigationUrl, i18nString(UIStrings.addressBar));\n        this.mouseInputToggle = this.navigationBar.createChild('button');\n        this.mouseInputToggle.disabled = true;\n        {\n            this.mouseInputToggleIcon = this.mouseInputToggle.appendChild(new IconButton.Icon.Icon());\n            this.mouseInputToggleIcon.data = { color: 'var(--icon-toggled)', iconName: 'mouse' };\n        }\n        UI.ARIAUtils.setLabel(this.mouseInputToggle, i18nString(UIStrings.mouseInput));\n        this.touchInputToggle = this.navigationBar.createChild('button');\n        {\n            this.touchInputToggleIcon = this.touchInputToggle.appendChild(new IconButton.Icon.Icon());\n            this.touchInputToggleIcon.data = { color: 'var(--icon-default)', iconName: 'touch-app' };\n        }\n        UI.ARIAUtils.setLabel(this.touchInputToggle, i18nString(UIStrings.touchInput));\n        this.navigationProgressBar = new ProgressTracker(this.resourceTreeModel, this.networkManager, this.navigationBar.createChild('div', 'progress'));\n        if (this.resourceTreeModel) {\n            this.navigationBack.addEventListener('click', this.navigateToHistoryEntry.bind(this, -1), false);\n            this.navigationForward.addEventListener('click', this.navigateToHistoryEntry.bind(this, 1), false);\n            this.navigationReload.addEventListener('click', this.navigateReload.bind(this), false);\n            this.navigationUrl.addEventListener('keyup', this.navigationUrlKeyUp.bind(this), true);\n            this.touchInputToggle.addEventListener('click', this.#toggleTouchEmulation.bind(this, true), false);\n            this.mouseInputToggle.addEventListener('click', this.#toggleTouchEmulation.bind(this, false), false);\n            void this.requestNavigationHistory();\n            this.resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.PrimaryPageChanged, this.requestNavigationHistoryEvent, this);\n            this.resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.CachedResourcesLoaded, this.requestNavigationHistoryEvent, this);\n        }\n    }\n    navigateToHistoryEntry(offset) {\n        if (!this.resourceTreeModel) {\n            return;\n        }\n        const newIndex = (this.historyIndex || 0) + offset;\n        if (!this.historyEntries || newIndex < 0 || newIndex >= this.historyEntries.length) {\n            return;\n        }\n        this.resourceTreeModel.navigateToHistoryEntry(this.historyEntries[newIndex]);\n        void this.requestNavigationHistory();\n    }\n    navigateReload() {\n        if (!this.resourceTreeModel) {\n            return;\n        }\n        this.resourceTreeModel.reloadPage();\n    }\n    navigationUrlKeyUp(event) {\n        if (event.key !== 'Enter') {\n            return;\n        }\n        let url = this.navigationUrl.value;\n        if (!url) {\n            return;\n        }\n        if (!url.match(SCHEME_REGEX)) {\n            url = 'http://' + url;\n        }\n        if (this.resourceTreeModel) {\n            void this.resourceTreeModel.navigate(url);\n        }\n        this.canvasElement.focus();\n    }\n    #toggleTouchEmulation(value) {\n        if (!this.canvasContainerElement || !this.isCasting || !this.mouseInputToggle || !this.touchInputToggle ||\n            !this.mouseInputToggleIcon || !this.touchInputToggleIcon) {\n            return;\n        }\n        const models = SDK.TargetManager.TargetManager.instance().models(SDK.EmulationModel.EmulationModel);\n        for (const model of models) {\n            void model.overrideEmulateTouch(value);\n        }\n        this.mouseInputToggle.disabled = !value;\n        this.touchInputToggle.disabled = value;\n        this.mouseInputToggleIcon.data = {\n            ...this.mouseInputToggleIcon.data,\n            color: this.mouseInputToggle.disabled ? 'var(--icon-toggled)' : 'var(--icon-default)',\n        };\n        this.touchInputToggleIcon.data = {\n            ...this.touchInputToggleIcon.data,\n            color: this.touchInputToggle.disabled ? 'var(--icon-toggled)' : 'var(--icon-default)',\n        };\n        this.canvasContainerElement.classList.toggle('touchable', value);\n    }\n    requestNavigationHistoryEvent() {\n        void this.requestNavigationHistory();\n    }\n    async requestNavigationHistory() {\n        const history = this.resourceTreeModel ? await this.resourceTreeModel.navigationHistory() : null;\n        if (!history) {\n            return;\n        }\n        this.historyIndex = history.currentIndex;\n        this.historyEntries = history.entries;\n        this.navigationBack.disabled = this.historyIndex === 0;\n        this.navigationForward.disabled = this.historyIndex === (this.historyEntries.length - 1);\n        let url = this.historyEntries[this.historyIndex].url;\n        const match = url.match(HTTP_REGEX);\n        if (match) {\n            url = match[1];\n        }\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.inspectedURLChanged(url);\n        this.navigationUrl.value = decodeURI(url);\n    }\n    focusNavigationBar() {\n        this.navigationUrl.focus();\n        this.navigationUrl.select();\n        return true;\n    }\n}\nexport const BORDERS_SIZE = 0;\nexport const NAVBAR_HEIGHT = 29;\nexport const HTTP_REGEX = /^http:\\/\\/(.+)/;\nexport const SCHEME_REGEX = /^(https?|about|chrome):/;\nexport class ProgressTracker {\n    element;\n    requestIds;\n    startedRequests;\n    finishedRequests;\n    maxDisplayedProgress;\n    constructor(resourceTreeModel, networkManager, element) {\n        this.element = element;\n        if (resourceTreeModel) {\n            resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.PrimaryPageChanged, this.onPrimaryPageChanged, this);\n            resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, this.onLoad, this);\n        }\n        if (networkManager) {\n            networkManager.addEventListener(SDK.NetworkManager.Events.RequestStarted, this.onRequestStarted, this);\n            networkManager.addEventListener(SDK.NetworkManager.Events.RequestFinished, this.onRequestFinished, this);\n        }\n        this.requestIds = null;\n        this.startedRequests = 0;\n        this.finishedRequests = 0;\n        this.maxDisplayedProgress = 0;\n    }\n    onPrimaryPageChanged() {\n        this.requestIds = new Map();\n        this.startedRequests = 0;\n        this.finishedRequests = 0;\n        this.maxDisplayedProgress = 0;\n        this.updateProgress(0.1); // Display first 10% on navigation start.\n    }\n    onLoad() {\n        this.requestIds = null;\n        this.updateProgress(1); // Display 100% progress on load, hide it in 0.5s.\n        window.setTimeout(() => {\n            if (!this.navigationProgressVisible()) {\n                this.displayProgress(0);\n            }\n        }, 500);\n    }\n    navigationProgressVisible() {\n        return this.requestIds !== null;\n    }\n    onRequestStarted(event) {\n        if (!this.navigationProgressVisible()) {\n            return;\n        }\n        const request = event.data.request;\n        // Ignore long-living WebSockets for the sake of progress indicator, as we won't be waiting them anyway.\n        if (request.resourceType() === Common.ResourceType.resourceTypes.WebSocket) {\n            return;\n        }\n        if (this.requestIds) {\n            this.requestIds.set(request.requestId(), request);\n        }\n        ++this.startedRequests;\n    }\n    onRequestFinished(event) {\n        if (!this.navigationProgressVisible()) {\n            return;\n        }\n        const request = event.data;\n        if (this.requestIds && !this.requestIds.has(request.requestId())) {\n            return;\n        }\n        ++this.finishedRequests;\n        window.setTimeout(() => {\n            this.updateProgress(this.finishedRequests / this.startedRequests * 0.9); // Finished requests drive the progress up to 90%.\n        }, 500); // Delay to give the new requests time to start. This makes the progress smoother.\n    }\n    updateProgress(progress) {\n        if (!this.navigationProgressVisible()) {\n            return;\n        }\n        if (this.maxDisplayedProgress >= progress) {\n            return;\n        }\n        this.maxDisplayedProgress = progress;\n        this.displayProgress(progress);\n    }\n    displayProgress(progress) {\n        this.element.style.width = (100 * progress) + '%';\n    }\n}\nfunction getAttributesForElementTitle(node) {\n    const id = node.getAttribute('id');\n    const className = node.getAttribute('class');\n    let selector = id ? '#' + id : '';\n    if (className) {\n        selector += '.' + className.trim().replace(/\\s+/g, '.');\n    }\n    if (selector.length > 50) {\n        selector = selector.substring(0, 50) + '…';\n    }\n    return selector;\n}\n//# sourceMappingURL=ScreencastView.js.map","// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport { ScreencastView } from './ScreencastView.js';\nconst UIStrings = {\n    /**\n     *@description Tooltip text that appears when hovering over largeicon phone button in Screencast App of the Remote Devices tab when toggling screencast\n     */\n    toggleScreencast: 'Toggle screencast',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/screencast/ScreencastApp.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet appInstance;\nexport class ScreencastApp {\n    enabledSetting;\n    toggleButton;\n    screenCaptureModel;\n    screencastView;\n    rootView;\n    constructor() {\n        this.enabledSetting = Common.Settings.Settings.instance().createSetting('screencast-enabled', true);\n        this.toggleButton = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleScreencast), 'devices');\n        this.toggleButton.setToggled(this.enabledSetting.get());\n        this.toggleButton.setEnabled(false);\n        this.toggleButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.toggleButtonClicked, this);\n        SDK.TargetManager.TargetManager.instance().observeModels(SDK.ScreenCaptureModel.ScreenCaptureModel, this);\n    }\n    static instance() {\n        if (!appInstance) {\n            appInstance = new ScreencastApp();\n        }\n        return appInstance;\n    }\n    presentUI(document) {\n        this.rootView = new UI.RootView.RootView();\n        this.rootView.attachToDocument(document);\n        this.rootView.focus();\n    }\n    modelAdded(screenCaptureModel) {\n        if (screenCaptureModel.target() !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n            return;\n        }\n        this.screenCaptureModel = screenCaptureModel;\n        this.toggleButton.setEnabled(true);\n        this.screencastView = new ScreencastView(screenCaptureModel);\n        if (this?.rootView?.element) {\n            this.screencastView.show(this.rootView.element);\n        }\n        this.screencastView.initialize();\n        this.onScreencastEnabledChanged();\n    }\n    modelRemoved(screenCaptureModel) {\n        if (this.screenCaptureModel !== screenCaptureModel) {\n            return;\n        }\n        delete this.screenCaptureModel;\n        this.toggleButton.setEnabled(false);\n        if (this.screencastView) {\n            this.screencastView.detach();\n            delete this.screencastView;\n        }\n        this.onScreencastEnabledChanged();\n    }\n    toggleButtonClicked() {\n        const enabled = this.toggleButton.isToggled();\n        this.enabledSetting.set(enabled);\n        this.onScreencastEnabledChanged();\n    }\n    onScreencastEnabledChanged() {\n        const enabled = Boolean(this.enabledSetting.get() && this.screencastView);\n        this.toggleButton.setToggled(enabled);\n    }\n}\nlet toolbarButtonProviderInstance;\nexport class ToolbarButtonProvider {\n    static instance(opts = { forceNew: false }) {\n        const { forceNew } = opts;\n        if (!toolbarButtonProviderInstance || forceNew) {\n            toolbarButtonProviderInstance = new ToolbarButtonProvider();\n        }\n        return toolbarButtonProviderInstance;\n    }\n    item() {\n        return ScreencastApp.instance().toggleButton;\n    }\n}\nlet screencastAppProviderInstance;\nexport class ScreencastAppProvider {\n    static instance(opts = { forceNew: false }) {\n        const { forceNew } = opts;\n        if (!screencastAppProviderInstance || forceNew) {\n            screencastAppProviderInstance = new ScreencastAppProvider();\n        }\n        return screencastAppProviderInstance;\n    }\n    createApp() {\n        return ScreencastApp.instance();\n    }\n}\n//# sourceMappingURL=ScreencastApp.js.map"],"names":["BUTTONS","MOUSE_EVENT_TYPES","InputModel","SDK.SDKModel.SDKModel","target","event","type","text","offsetTop","zoom","styles","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","ScreencastView","UI.Widget.VBox","screenCaptureModel","SDK.DOMModel.DOMModel","SDK.OverlayModel.OverlayModel","SDK.ResourceTreeModel.ResourceTreeModel","SDK.NetworkManager.NetworkManager","UI.ARIAUtils.setLabel","UI.UIUtils.createTextChild","dimension","UI.KeyboardShortcut.KeyboardShortcut","UI.KeyboardShortcut.Modifiers","SDK.TargetManager.TargetManager","screencastViewStyles","maxImageDimension","dimensions","emulationModel","SDK.EmulationModel.EmulationModel","base64Data","metadata","deviceSizeRatio","dimensionsCSS","bordersSize","BORDERS_SIZE","data","visible","position","node","Common.Settings.Settings","shortcutKey","handler","config","domModel","model","scaleQuad","quad","i","canvasWidth","canvasHeight","quads","isTransparent","color","Common.Color.Legacy","fillColor","clipQuad","lowerCaseName","getAttributesForElementTitle","titleWidth","titleHeight","anchorTop","anchorBottom","arrowHeight","renderArrowUp","renderArrowDown","boxX","boxY","width","height","NAVBAR_HEIGHT","mode","_frameId","context","pattern","size","pctx","icon","IconButton.Icon.Icon","UI.UIUtils.createInput","ProgressTracker","#toggleTouchEmulation","SDK.ResourceTreeModel.Events","offset","newIndex","url","SCHEME_REGEX","value","models","history","match","HTTP_REGEX","Host.InspectorFrontendHost.InspectorFrontendHostInstance","resourceTreeModel","networkManager","element","SDK.NetworkManager.Events","request","Common.ResourceType.resourceTypes","progress","id","className","selector","appInstance","ScreencastApp","UI.Toolbar.ToolbarToggle","SDK.ScreenCaptureModel.ScreenCaptureModel","document","UI.RootView.RootView","enabled","toolbarButtonProviderInstance","ToolbarButtonProvider","opts","forceNew","screencastAppProviderInstance","ScreencastAppProvider"],"mappings":"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"}