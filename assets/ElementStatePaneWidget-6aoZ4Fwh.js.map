{"version":3,"file":"ElementStatePaneWidget-6aoZ4Fwh.js","sources":["../../ui/legacy/components/inline_editor/SwatchPopoverHelper.js","../../panels/elements/AccessibilityTreeUtils.js","../../panels/elements/accessibilityTreeView.css.js","../../panels/elements/AccessibilityTreeView.js","../../panels/elements/ColorSwatchPopoverIcon.js","../../panels/elements/ComputedStyleModel.js","../../panels/elements/computedStyleSidebarPane.css.js","../../panels/elements/ImagePreviewPopover.js","../../panels/elements/platformFontsWidget.css.js","../../panels/elements/PlatformFontsWidget.js","../../panels/elements/PropertyMatchers.js","../../panels/elements/PropertyNameCategories.js","../../panels/elements/ElementsSidebarPane.js","../../panels/elements/layersWidget.css.js","../../panels/elements/LayersWidget.js","../../panels/elements/CSSRuleValidatorHelper.js","../../panels/elements/CSSRuleValidator.js","../../panels/elements/StylePropertyUtils.js","../../panels/elements/StylePropertyTreeElement.js","../../panels/elements/StyleEditorWidget.js","../../panels/elements/domLinkifier.css.js","../../panels/elements/DOMLinkifier.js","../../panels/elements/stylePropertiesTreeOutline.css.js","../../panels/elements/StylePropertiesSection.js","../../panels/elements/StylePropertyHighlighter.js","../../panels/elements/stylesSidebarPane.css.js","../../panels/elements/WebCustomData.js","../../panels/elements/StylesSidebarPane.js","../../panels/elements/PropertyRenderer.js","../../panels/elements/ComputedStyleWidget.js","../../panels/elements/elementsPanel.css.js","../../ui/components/highlighting/highlighting.css.js","../../ui/components/highlighting/HighlightManager.js","../../panels/elements/DOMPath.js","../../panels/elements/elementsTreeOutline.css.js","../../panels/elements/TopLayerContainer.js","../../panels/elements/ElementsTreeOutline.js","../../panels/elements/MarkerDecorator.js","../../panels/elements/ElementsTreeElement.js","../../panels/elements/ElementsTreeElementHighlighter.js","../../panels/elements/metricsSidebarPane.css.js","../../panels/elements/MetricsSidebarPane.js","../../panels/elements/ElementsPanel.js","../../panels/elements/EventListenersWidget.js","../../panels/elements/propertiesWidget.css.js","../../panels/elements/PropertiesWidget.js","../../panels/elements/nodeStackTraceWidget.css.js","../../panels/elements/NodeStackTraceWidget.js","../../panels/elements/classesPaneWidget.css.js","../../panels/elements/ClassesPaneWidget.js","../../panels/elements/elementStatePaneWidget.css.js","../../panels/elements/ElementStatePaneWidget.js"],"sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../../core/common/common.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\nimport { ColorSwatch } from './ColorSwatch.js';\nimport swatchPopoverStyles from './swatchPopover.css.js';\nexport class SwatchPopoverHelper extends Common.ObjectWrapper.ObjectWrapper {\n    popover;\n    hideProxy;\n    boundOnKeyDown;\n    boundFocusOut;\n    isHidden;\n    anchorElement;\n    view;\n    hiddenCallback;\n    focusRestorer;\n    constructor() {\n        super();\n        this.popover = new UI.GlassPane.GlassPane();\n        this.popover.setSizeBehavior(\"MeasureContent\" /* UI.GlassPane.SizeBehavior.MEASURE_CONTENT */);\n        this.popover.setMarginBehavior(\"Arrow\" /* UI.GlassPane.MarginBehavior.ARROW */);\n        this.popover.element.addEventListener('mousedown', e => e.consume(), false);\n        this.hideProxy = this.hide.bind(this, true);\n        this.boundOnKeyDown = this.onKeyDown.bind(this);\n        this.boundFocusOut = this.onFocusOut.bind(this);\n        this.isHidden = true;\n        this.anchorElement = null;\n    }\n    onFocusOut(event) {\n        const relatedTarget = event.relatedTarget;\n        if (this.isHidden || !relatedTarget || !this.view || relatedTarget.isSelfOrDescendant(this.view.contentElement)) {\n            return;\n        }\n        this.hideProxy();\n    }\n    setAnchorElement(anchorElement) {\n        this.anchorElement = anchorElement;\n    }\n    isShowing(view) {\n        return this.popover.isShowing() && ((view && this.view === view) || !view);\n    }\n    show(view, anchorElement, hiddenCallback) {\n        if (this.popover.isShowing()) {\n            if (this.anchorElement === anchorElement) {\n                return;\n            }\n            // Reopen the picker for another anchor element.\n            this.hide(true);\n        }\n        VisualLogging.setMappedParent(view.contentElement, anchorElement);\n        this.popover.registerCSSFiles([swatchPopoverStyles]);\n        this.dispatchEventToListeners(\"WillShowPopover\" /* Events.WILL_SHOW_POPOVER */);\n        this.isHidden = false;\n        this.anchorElement = anchorElement;\n        this.view = view;\n        this.hiddenCallback = hiddenCallback;\n        this.reposition();\n        view.focus();\n        const document = this.popover.element.ownerDocument;\n        document.addEventListener('mousedown', this.hideProxy, false);\n        if (document.defaultView) {\n            document.defaultView.addEventListener('resize', this.hideProxy, false);\n        }\n        this.view.contentElement.addEventListener('keydown', this.boundOnKeyDown, false);\n    }\n    reposition() {\n        // This protects against trying to reposition the popover after it has been hidden.\n        if (this.isHidden || !this.view) {\n            return;\n        }\n        // Unbind \"blur\" listener to avoid reenterability: |popover.show()| will hide the popover and trigger it synchronously.\n        this.view.contentElement.removeEventListener('focusout', this.boundFocusOut, false);\n        this.view.show(this.popover.contentElement);\n        if (this.anchorElement) {\n            let anchorBox = this.anchorElement.boxInWindow();\n            if (ColorSwatch.isColorSwatch(this.anchorElement)) {\n                const swatch = this.anchorElement;\n                if (!swatch.anchorBox) {\n                    return;\n                }\n                anchorBox = swatch.anchorBox;\n            }\n            this.popover.setContentAnchorBox(anchorBox);\n            this.popover.show(this.anchorElement.ownerDocument);\n        }\n        this.view.contentElement.addEventListener('focusout', this.boundFocusOut, false);\n        if (!this.focusRestorer) {\n            this.focusRestorer = new UI.Widget.WidgetFocusRestorer(this.view);\n        }\n    }\n    hide(commitEdit) {\n        if (this.isHidden) {\n            return;\n        }\n        const document = this.popover.element.ownerDocument;\n        this.isHidden = true;\n        this.popover.hide();\n        document.removeEventListener('mousedown', this.hideProxy, false);\n        if (document.defaultView) {\n            document.defaultView.removeEventListener('resize', this.hideProxy, false);\n        }\n        if (this.hiddenCallback) {\n            this.hiddenCallback.call(null, Boolean(commitEdit));\n        }\n        if (this.focusRestorer) {\n            this.focusRestorer.restore();\n        }\n        this.anchorElement = null;\n        if (this.view) {\n            this.view.detach();\n            this.view.contentElement.removeEventListener('keydown', this.boundOnKeyDown, false);\n            this.view.contentElement.removeEventListener('focusout', this.boundFocusOut, false);\n            delete this.view;\n        }\n    }\n    onKeyDown(event) {\n        if (event.key === 'Enter') {\n            this.hide(true);\n            event.consume(true);\n            return;\n        }\n        if (event.key === Platform.KeyboardUtilities.ESCAPE_KEY) {\n            this.hide(false);\n            event.consume(true);\n        }\n    }\n}\n//# sourceMappingURL=SwatchPopoverHelper.js.map","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport './components/components.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\nconst { html } = LitHtml;\nfunction isLeafNode(node) {\n    return node.numChildren() === 0 && node.role()?.value !== 'Iframe';\n}\nfunction getModel(frameId) {\n    const frame = SDK.FrameManager.FrameManager.instance().getFrame(frameId);\n    const model = frame?.resourceTreeModel().target().model(SDK.AccessibilityModel.AccessibilityModel);\n    if (!model) {\n        throw Error('Could not instantiate model for frameId');\n    }\n    return model;\n}\nexport async function getRootNode(frameId) {\n    const model = getModel(frameId);\n    const root = await model.requestRootNode(frameId);\n    if (!root) {\n        throw Error('No accessibility root for frame');\n    }\n    return root;\n}\nfunction getFrameIdForNodeOrDocument(node) {\n    let frameId;\n    if (node instanceof SDK.DOMModel.DOMDocument) {\n        frameId = node.body?.frameId();\n    }\n    else {\n        frameId = node.frameId();\n    }\n    if (!frameId) {\n        throw Error('No frameId for DOM node');\n    }\n    return frameId;\n}\nexport async function getNodeAndAncestorsFromDOMNode(domNode) {\n    let frameId = getFrameIdForNodeOrDocument(domNode);\n    const model = getModel(frameId);\n    const result = await model.requestAndLoadSubTreeToNode(domNode);\n    if (!result) {\n        throw Error('Could not retrieve accessibility node for inspected DOM node');\n    }\n    const outermostFrameId = SDK.FrameManager.FrameManager.instance().getOutermostFrame()?.id;\n    if (!outermostFrameId) {\n        return result;\n    }\n    while (frameId !== outermostFrameId) {\n        const node = await SDK.FrameManager.FrameManager.instance().getFrame(frameId)?.getOwnerDOMNodeOrDocument();\n        if (!node) {\n            break;\n        }\n        frameId = getFrameIdForNodeOrDocument(node);\n        const model = getModel(frameId);\n        const ancestors = await model.requestAndLoadSubTreeToNode(node);\n        result.push(...ancestors || []);\n    }\n    return result;\n}\nasync function getChildren(node) {\n    if (node.role()?.value === 'Iframe') {\n        const domNode = await node.deferredDOMNode()?.resolvePromise();\n        if (!domNode) {\n            throw new Error('Could not find corresponding DOMNode');\n        }\n        const frameId = domNode.frameOwnerFrameId();\n        if (!frameId) {\n            throw Error('No owner frameId on iframe node');\n        }\n        const localRoot = await getRootNode(frameId);\n        return [localRoot];\n    }\n    return node.accessibilityModel().requestAXChildren(node.id(), node.getFrameId() || undefined);\n}\nexport async function sdkNodeToAXTreeNodes(sdkNode) {\n    const treeNodeData = sdkNode;\n    if (isLeafNode(sdkNode)) {\n        return [{\n                treeNodeData,\n                id: getNodeId(sdkNode),\n            }];\n    }\n    return [{\n            treeNodeData,\n            children: async () => {\n                const childNodes = await getChildren(sdkNode);\n                const childTreeNodes = await Promise.all(childNodes.map(childNode => sdkNodeToAXTreeNodes(childNode)));\n                return childTreeNodes.flat(1);\n            },\n            id: getNodeId(sdkNode),\n        }];\n}\nexport function accessibilityNodeRenderer(node) {\n    const sdkNode = node.treeNodeData;\n    const name = sdkNode.name()?.value || '';\n    const role = sdkNode.role()?.value || '';\n    const properties = sdkNode.properties() || [];\n    const ignored = sdkNode.ignored();\n    const id = getNodeId(sdkNode);\n    return html `<devtools-accessibility-tree-node .data=${{ name, role, ignored, properties, id }}></devtools-accessibility-tree-node>`;\n}\nexport function getNodeId(node) {\n    return node.getFrameId() + '#' + node.id();\n}\n//# sourceMappingURL=AccessibilityTreeUtils.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/**\n * Copyright 2022 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.accessibility-tree-view-container {\n  height: 100%;\n  overflow: auto;\n}\n\n/*# sourceURL=accessibilityTreeView.css */\n`);\n\nexport default styles;\n","// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TreeOutline from '../../ui/components/tree_outline/tree_outline.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as AccessibilityTreeUtils from './AccessibilityTreeUtils.js';\nimport accessibilityTreeViewStyles from './accessibilityTreeView.css.js';\nimport { ElementsPanel } from './ElementsPanel.js';\nexport class AccessibilityTreeView extends UI.Widget.VBox {\n    accessibilityTreeComponent;\n    toggleButton;\n    inspectedDOMNode = null;\n    root = null;\n    constructor(toggleButton, accessibilityTreeComponent) {\n        super();\n        // toggleButton is bound to a click handler on ElementsPanel to switch between the DOM tree\n        // and accessibility tree views.\n        this.toggleButton = toggleButton;\n        this.accessibilityTreeComponent = accessibilityTreeComponent;\n        const container = this.contentElement.createChild('div');\n        container.classList.add('accessibility-tree-view-container');\n        container.setAttribute('jslog', `${VisualLogging.tree('full-accessibility')}`);\n        container.appendChild(this.toggleButton);\n        container.appendChild(this.accessibilityTreeComponent);\n        SDK.TargetManager.TargetManager.instance().observeModels(SDK.AccessibilityModel.AccessibilityModel, this, { scoped: true });\n        // The DOM tree and accessibility are kept in sync as much as possible, so\n        // on node selection, update the currently inspected node and reveal in the\n        // DOM tree.\n        this.accessibilityTreeComponent.addEventListener('itemselected', (event) => {\n            const evt = event;\n            const axNode = evt.data.node.treeNodeData;\n            if (!axNode.isDOMNode()) {\n                return;\n            }\n            const deferredNode = axNode.deferredDOMNode();\n            if (deferredNode) {\n                deferredNode.resolve(domNode => {\n                    if (domNode) {\n                        this.inspectedDOMNode = domNode;\n                        void ElementsPanel.instance().revealAndSelectNode(domNode, true, false);\n                    }\n                });\n            }\n        });\n        this.accessibilityTreeComponent.addEventListener('itemmouseover', (event) => {\n            const evt = event;\n            evt.data.node.treeNodeData.highlightDOMNode();\n        });\n        this.accessibilityTreeComponent.addEventListener('itemmouseout', () => {\n            SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n        });\n    }\n    async wasShown() {\n        await this.refreshAccessibilityTree();\n        if (this.inspectedDOMNode) {\n            await this.loadSubTreeIntoAccessibilityModel(this.inspectedDOMNode);\n        }\n        this.registerCSSFiles([accessibilityTreeViewStyles]);\n    }\n    async refreshAccessibilityTree() {\n        if (!this.root) {\n            const frameId = SDK.FrameManager.FrameManager.instance().getOutermostFrame()?.id;\n            if (!frameId) {\n                throw Error('No top frame');\n            }\n            this.root = await AccessibilityTreeUtils.getRootNode(frameId);\n            if (!this.root) {\n                throw Error('No root');\n            }\n        }\n        await this.renderTree();\n        await this.accessibilityTreeComponent.expandRecursively(1);\n    }\n    async renderTree() {\n        if (!this.root) {\n            return;\n        }\n        const treeData = await AccessibilityTreeUtils.sdkNodeToAXTreeNodes(this.root);\n        this.accessibilityTreeComponent.data = {\n            defaultRenderer: AccessibilityTreeUtils.accessibilityNodeRenderer,\n            tree: treeData,\n            filter: node => {\n                return node.ignored() || (node.role()?.value === 'generic' && !node.name()?.value) ?\n                    \"FLATTEN\" /* TreeOutline.TreeOutline.FilterOption.FLATTEN */ :\n                    \"SHOW\" /* TreeOutline.TreeOutline.FilterOption.SHOW */;\n            },\n        };\n    }\n    // Given a selected DOM node, asks the model to load the missing subtree from the root to the\n    // selected node and then re-renders the tree.\n    async loadSubTreeIntoAccessibilityModel(selectedNode) {\n        const ancestors = await AccessibilityTreeUtils.getNodeAndAncestorsFromDOMNode(selectedNode);\n        const inspectedAXNode = ancestors.find(node => node.backendDOMNodeId() === selectedNode.backendNodeId());\n        if (!inspectedAXNode) {\n            return;\n        }\n        await this.accessibilityTreeComponent.expandNodeIds(ancestors.map(node => node.getFrameId() + '#' + node.id()));\n        await this.accessibilityTreeComponent.focusNodeId(AccessibilityTreeUtils.getNodeId(inspectedAXNode));\n    }\n    // A node was revealed through the elements picker.\n    async revealAndSelectNode(inspectedNode) {\n        if (inspectedNode === this.inspectedDOMNode) {\n            return;\n        }\n        this.inspectedDOMNode = inspectedNode;\n        // We only want to load nodes into the model when the AccessibilityTree is visible.\n        if (this.isShowing()) {\n            await this.loadSubTreeIntoAccessibilityModel(inspectedNode);\n        }\n    }\n    // Selected node in the DOM tree has changed.\n    async selectedNodeChanged(inspectedNode) {\n        if (this.isShowing() || (inspectedNode === this.inspectedDOMNode)) {\n            return;\n        }\n        if (inspectedNode.ownerDocument && (inspectedNode.nodeName() === 'HTML' || inspectedNode.nodeName() === 'BODY')) {\n            this.inspectedDOMNode = inspectedNode.ownerDocument;\n        }\n        else {\n            this.inspectedDOMNode = inspectedNode;\n        }\n    }\n    treeUpdated({ data }) {\n        if (!data.root) {\n            void this.renderTree();\n            return;\n        }\n        const outermostFrameId = SDK.FrameManager.FrameManager.instance().getOutermostFrame()?.id;\n        if (data.root?.getFrameId() !== outermostFrameId) {\n            void this.renderTree();\n            return;\n        }\n        this.root = data.root;\n        void this.accessibilityTreeComponent.collapseAllNodes();\n        void this.refreshAccessibilityTree();\n    }\n    modelAdded(model) {\n        model.addEventListener(\"TreeUpdated\" /* SDK.AccessibilityModel.Events.TREE_UPDATED */, this.treeUpdated, this);\n    }\n    modelRemoved(model) {\n        model.removeEventListener(\"TreeUpdated\" /* SDK.AccessibilityModel.Events.TREE_UPDATED */, this.treeUpdated, this);\n    }\n}\n//# sourceMappingURL=AccessibilityTreeView.js.map","// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as ColorPicker from '../../ui/legacy/components/color_picker/color_picker.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nconst UIStrings = {\n    /**\n     * @description Tooltip text for an icon that opens the cubic bezier editor, which is a tool that\n     * allows the user to edit cubic-bezier CSS properties directly.\n     */\n    openCubicBezierEditor: 'Open cubic bezier editor',\n    /**\n     * @description Tooltip text for an icon that opens shadow editor. The shadow editor is a tool\n     * which allows the user to edit CSS shadow properties.\n     */\n    openShadowEditor: 'Open shadow editor',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ColorSwatchPopoverIcon.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class BezierPopoverIcon {\n    treeElement;\n    swatchPopoverHelper;\n    swatch;\n    boundBezierChanged;\n    boundOnScroll;\n    bezierEditor;\n    scrollerElement;\n    originalPropertyText;\n    constructor({ treeElement, swatchPopoverHelper, swatch, }) {\n        this.treeElement = treeElement;\n        this.swatchPopoverHelper = swatchPopoverHelper;\n        this.swatch = swatch;\n        UI.Tooltip.Tooltip.install(this.swatch.iconElement(), i18nString(UIStrings.openCubicBezierEditor));\n        this.swatch.iconElement().addEventListener('click', this.iconClick.bind(this), false);\n        this.swatch.iconElement().addEventListener('mousedown', (event) => event.consume(), false);\n        this.boundBezierChanged = this.bezierChanged.bind(this);\n        this.boundOnScroll = this.onScroll.bind(this);\n    }\n    iconClick(event) {\n        event.consume(true);\n        if (this.swatchPopoverHelper.isShowing()) {\n            this.swatchPopoverHelper.hide(true);\n            return;\n        }\n        const model = InlineEditor.AnimationTimingModel.AnimationTimingModel.parse(this.swatch.bezierText()) ||\n            InlineEditor.AnimationTimingModel.LINEAR_BEZIER;\n        this.bezierEditor = new InlineEditor.BezierEditor.BezierEditor(model);\n        this.bezierEditor.addEventListener(\"BezierChanged\" /* InlineEditor.BezierEditor.Events.BEZIER_CHANGED */, this.boundBezierChanged);\n        this.swatchPopoverHelper.show(this.bezierEditor, this.swatch.iconElement(), this.onPopoverHidden.bind(this));\n        this.scrollerElement = this.swatch.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n        if (this.scrollerElement) {\n            this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n        }\n        this.originalPropertyText = this.treeElement.property.propertyText;\n        this.treeElement.parentPane().setEditingStyle(true);\n        const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(this.treeElement.property, false /* forName */);\n        if (uiLocation) {\n            void Common.Revealer.reveal(uiLocation, true /* omitFocus */);\n        }\n    }\n    bezierChanged(event) {\n        this.swatch.setBezierText(event.data);\n        void this.treeElement.applyStyleText(this.treeElement.renderedPropertyText(), false);\n    }\n    onScroll(_event) {\n        this.swatchPopoverHelper.hide(true);\n    }\n    onPopoverHidden(commitEdit) {\n        if (this.scrollerElement) {\n            this.scrollerElement.removeEventListener('scroll', this.boundOnScroll, false);\n        }\n        if (this.bezierEditor) {\n            this.bezierEditor.removeEventListener(\"BezierChanged\" /* InlineEditor.BezierEditor.Events.BEZIER_CHANGED */, this.boundBezierChanged);\n        }\n        this.bezierEditor = undefined;\n        const propertyText = commitEdit ? this.treeElement.renderedPropertyText() : this.originalPropertyText || '';\n        void this.treeElement.applyStyleText(propertyText, true);\n        this.treeElement.parentPane().setEditingStyle(false);\n        delete this.originalPropertyText;\n    }\n}\nexport class ColorSwatchPopoverIcon extends Common.ObjectWrapper.ObjectWrapper {\n    treeElement;\n    swatchPopoverHelper;\n    swatch;\n    contrastInfo;\n    boundSpectrumChanged;\n    boundOnScroll;\n    spectrum;\n    scrollerElement;\n    originalPropertyText;\n    constructor(treeElement, swatchPopoverHelper, swatch) {\n        super();\n        this.treeElement = treeElement;\n        this.swatchPopoverHelper = swatchPopoverHelper;\n        this.swatch = swatch;\n        this.swatch.addEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, this.iconClick.bind(this));\n        this.contrastInfo = null;\n        this.boundSpectrumChanged = this.spectrumChanged.bind(this);\n        this.boundOnScroll = this.onScroll.bind(this);\n    }\n    generateCSSVariablesPalette() {\n        const matchedStyles = this.treeElement.matchedStyles();\n        const style = this.treeElement.property.ownerStyle;\n        const cssVariables = matchedStyles.availableCSSVariables(style);\n        const colors = [];\n        const colorNames = [];\n        for (const cssVariable of cssVariables) {\n            if (cssVariable === this.treeElement.property.name) {\n                continue;\n            }\n            const value = matchedStyles.computeCSSVariable(style, cssVariable);\n            if (!value) {\n                continue;\n            }\n            const color = Common.Color.parse(value.value);\n            if (!color) {\n                continue;\n            }\n            colors.push(value.value);\n            colorNames.push(cssVariable);\n        }\n        return { title: 'CSS Variables', mutable: false, matchUserFormat: true, colors, colorNames };\n    }\n    setContrastInfo(contrastInfo) {\n        this.contrastInfo = contrastInfo;\n    }\n    iconClick(event) {\n        event.consume(true);\n        this.showPopover();\n    }\n    async toggleEyeDropper() {\n        await this.spectrum?.toggleColorPicker();\n    }\n    showPopover() {\n        if (this.swatchPopoverHelper.isShowing()) {\n            this.swatchPopoverHelper.hide(true);\n            return;\n        }\n        const color = this.swatch.getColor();\n        if (!color) {\n            return;\n        }\n        this.spectrum = new ColorPicker.Spectrum.Spectrum(this.contrastInfo);\n        this.spectrum.setColor(color);\n        this.spectrum.addPalette(this.generateCSSVariablesPalette());\n        this.spectrum.addEventListener(\"SizeChanged\" /* ColorPicker.Spectrum.Events.SIZE_CHANGED */, this.spectrumResized, this);\n        this.spectrum.addEventListener(\"ColorChanged\" /* ColorPicker.Spectrum.Events.COLOR_CHANGED */, this.boundSpectrumChanged);\n        this.swatchPopoverHelper.show(this.spectrum, this.swatch, this.onPopoverHidden.bind(this));\n        this.scrollerElement = this.swatch.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n        if (this.scrollerElement) {\n            this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n        }\n        this.originalPropertyText = this.treeElement.property.propertyText;\n        this.treeElement.parentPane().setEditingStyle(true);\n        const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(this.treeElement.property, false /* forName */);\n        if (uiLocation) {\n            void Common.Revealer.reveal(uiLocation, true /* omitFocus */);\n        }\n        UI.Context.Context.instance().setFlavor(ColorSwatchPopoverIcon, this);\n        Host.userMetrics.colorPickerOpenedFrom(1 /* Host.UserMetrics.ColorPickerOpenedFrom.STYLES_TAB */);\n    }\n    spectrumResized() {\n        this.swatchPopoverHelper.reposition();\n    }\n    async spectrumChanged(event) {\n        const color = Common.Color.parse(event.data);\n        if (!color) {\n            return;\n        }\n        const colorName = this.spectrum ? this.spectrum.colorName() : undefined;\n        const text = colorName && colorName.startsWith('--') ? `var(${colorName})` : (color.getAuthoredText() ?? color.asString());\n        this.swatch.renderColor(color);\n        const value = this.swatch.firstElementChild;\n        if (value) {\n            value.remove();\n            this.swatch.createChild('span').textContent = text;\n        }\n        // `asString` somehow can return null.\n        if (text) {\n            this.dispatchEventToListeners(\"colorchanged\" /* ColorSwatchPopoverIconEvents.COLOR_CHANGED */, text);\n        }\n    }\n    onScroll(_event) {\n        this.swatchPopoverHelper.hide(true);\n    }\n    onPopoverHidden(commitEdit) {\n        if (this.scrollerElement) {\n            this.scrollerElement.removeEventListener('scroll', this.boundOnScroll, false);\n        }\n        if (this.spectrum) {\n            this.spectrum.removeEventListener(\"ColorChanged\" /* ColorPicker.Spectrum.Events.COLOR_CHANGED */, this.boundSpectrumChanged);\n        }\n        this.spectrum = undefined;\n        const propertyText = commitEdit ? this.treeElement.renderedPropertyText() : this.originalPropertyText || '';\n        void this.treeElement.applyStyleText(propertyText, true);\n        this.treeElement.parentPane().setEditingStyle(false);\n        delete this.originalPropertyText;\n        UI.Context.Context.instance().setFlavor(ColorSwatchPopoverIcon, null);\n    }\n}\nexport class ShadowSwatchPopoverHelper extends Common.ObjectWrapper.ObjectWrapper {\n    treeElement;\n    swatchPopoverHelper;\n    shadowSwatch;\n    iconElement;\n    boundShadowChanged;\n    boundOnScroll;\n    cssShadowEditor;\n    scrollerElement;\n    originalPropertyText;\n    constructor(treeElement, swatchPopoverHelper, shadowSwatch) {\n        super();\n        this.treeElement = treeElement;\n        this.swatchPopoverHelper = swatchPopoverHelper;\n        this.shadowSwatch = shadowSwatch;\n        this.iconElement = shadowSwatch.iconElement();\n        UI.Tooltip.Tooltip.install(this.iconElement, i18nString(UIStrings.openShadowEditor));\n        this.iconElement.addEventListener('click', this.iconClick.bind(this), false);\n        this.iconElement.addEventListener('mousedown', event => event.consume(), false);\n        this.boundShadowChanged = this.shadowChanged.bind(this);\n        this.boundOnScroll = this.onScroll.bind(this);\n    }\n    iconClick(event) {\n        event.consume(true);\n        this.showPopover();\n    }\n    showPopover() {\n        if (this.swatchPopoverHelper.isShowing()) {\n            this.swatchPopoverHelper.hide(true);\n            return;\n        }\n        this.cssShadowEditor = new InlineEditor.CSSShadowEditor.CSSShadowEditor();\n        this.cssShadowEditor.setModel(this.shadowSwatch.model());\n        this.cssShadowEditor.addEventListener(\"ShadowChanged\" /* InlineEditor.CSSShadowEditor.Events.SHADOW_CHANGED */, this.boundShadowChanged);\n        this.swatchPopoverHelper.show(this.cssShadowEditor, this.iconElement, this.onPopoverHidden.bind(this));\n        this.scrollerElement = this.iconElement.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n        if (this.scrollerElement) {\n            this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n        }\n        this.originalPropertyText = this.treeElement.property.propertyText;\n        this.treeElement.parentPane().setEditingStyle(true);\n        const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(this.treeElement.property, false /* forName */);\n        if (uiLocation) {\n            void Common.Revealer.reveal(uiLocation, true /* omitFocus */);\n        }\n    }\n    shadowChanged(event) {\n        this.dispatchEventToListeners(\"shadowChanged\" /* ShadowEvents.SHADOW_CHANGED */, event.data);\n    }\n    onScroll(_event) {\n        this.swatchPopoverHelper.hide(true);\n    }\n    onPopoverHidden(commitEdit) {\n        if (this.scrollerElement) {\n            this.scrollerElement.removeEventListener('scroll', this.boundOnScroll, false);\n        }\n        if (this.cssShadowEditor) {\n            this.cssShadowEditor.removeEventListener(\"ShadowChanged\" /* InlineEditor.CSSShadowEditor.Events.SHADOW_CHANGED */, this.boundShadowChanged);\n        }\n        this.cssShadowEditor = undefined;\n        const propertyText = commitEdit ? this.treeElement.renderedPropertyText() : this.originalPropertyText || '';\n        void this.treeElement.applyStyleText(propertyText, true);\n        this.treeElement.parentPane().setEditingStyle(false);\n        delete this.originalPropertyText;\n    }\n}\nexport class FontEditorSectionManager {\n    treeElementMap;\n    swatchPopoverHelper;\n    section;\n    parentPane;\n    fontEditor;\n    scrollerElement;\n    boundFontChanged;\n    boundOnScroll;\n    boundResized;\n    constructor(swatchPopoverHelper, section) {\n        this.treeElementMap = new Map();\n        this.swatchPopoverHelper = swatchPopoverHelper;\n        this.section = section;\n        this.parentPane = null;\n        this.fontEditor = null;\n        this.scrollerElement = null;\n        this.boundFontChanged = this.fontChanged.bind(this);\n        this.boundOnScroll = this.onScroll.bind(this);\n        this.boundResized = this.fontEditorResized.bind(this);\n    }\n    fontChanged(event) {\n        const { propertyName, value } = event.data;\n        const treeElement = this.treeElementMap.get(propertyName);\n        void this.updateFontProperty(propertyName, value, treeElement);\n    }\n    async updateFontProperty(propertyName, value, treeElement) {\n        if (treeElement && treeElement.treeOutline && treeElement.valueElement && treeElement.property.parsedOk &&\n            treeElement.property.range) {\n            let elementRemoved = false;\n            treeElement.valueElement.textContent = value;\n            treeElement.property.value = value;\n            let styleText;\n            const propertyName = treeElement.property.name;\n            if (value.length) {\n                styleText = treeElement.renderedPropertyText();\n            }\n            else {\n                styleText = '';\n                elementRemoved = true;\n                this.fixIndex(treeElement.property.index);\n            }\n            this.treeElementMap.set(propertyName, treeElement);\n            await treeElement.applyStyleText(styleText, true);\n            if (elementRemoved) {\n                this.treeElementMap.delete(propertyName);\n            }\n        }\n        else if (value.length) {\n            const newProperty = this.section.addNewBlankProperty();\n            if (newProperty) {\n                newProperty.property.name = propertyName;\n                newProperty.property.value = value;\n                newProperty.updateTitle();\n                await newProperty.applyStyleText(newProperty.renderedPropertyText(), true);\n                this.treeElementMap.set(newProperty.property.name, newProperty);\n            }\n        }\n        this.section.onpopulate();\n        this.swatchPopoverHelper.reposition();\n        return;\n    }\n    fontEditorResized() {\n        this.swatchPopoverHelper.reposition();\n    }\n    fixIndex(removedIndex) {\n        for (const treeElement of this.treeElementMap.values()) {\n            if (treeElement.property.index > removedIndex) {\n                treeElement.property.index -= 1;\n            }\n        }\n    }\n    createPropertyValueMap() {\n        const propertyMap = new Map();\n        for (const fontProperty of this.treeElementMap) {\n            const propertyName = fontProperty[0];\n            const treeElement = fontProperty[1];\n            if (treeElement.property.value.length) {\n                propertyMap.set(propertyName, treeElement.property.value);\n            }\n            else {\n                this.treeElementMap.delete(propertyName);\n            }\n        }\n        return propertyMap;\n    }\n    registerFontProperty(treeElement) {\n        const propertyName = treeElement.property.name;\n        if (this.treeElementMap.has(propertyName)) {\n            const treeElementFromMap = this.treeElementMap.get(propertyName);\n            if (!treeElement.overloaded() || (treeElementFromMap && treeElementFromMap.overloaded())) {\n                this.treeElementMap.set(propertyName, treeElement);\n            }\n        }\n        else {\n            this.treeElementMap.set(propertyName, treeElement);\n        }\n    }\n    async showPopover(iconElement, parentPane) {\n        if (this.swatchPopoverHelper.isShowing()) {\n            this.swatchPopoverHelper.hide(true);\n            return;\n        }\n        this.parentPane = parentPane;\n        const propertyValueMap = this.createPropertyValueMap();\n        this.fontEditor = new InlineEditor.FontEditor.FontEditor(propertyValueMap);\n        this.fontEditor.addEventListener(\"FontChanged\" /* InlineEditor.FontEditor.Events.FONT_CHANGED */, this.boundFontChanged);\n        this.fontEditor.addEventListener(\"FontEditorResized\" /* InlineEditor.FontEditor.Events.FONT_EDITOR_RESIZED */, this.boundResized);\n        this.swatchPopoverHelper.show(this.fontEditor, iconElement, this.onPopoverHidden.bind(this));\n        this.scrollerElement = iconElement.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n        if (this.scrollerElement) {\n            this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n        }\n        this.parentPane.setEditingStyle(true);\n    }\n    onScroll() {\n        this.swatchPopoverHelper.hide(true);\n    }\n    onPopoverHidden() {\n        if (this.scrollerElement) {\n            this.scrollerElement.removeEventListener('scroll', this.boundOnScroll, false);\n        }\n        this.section.onpopulate();\n        if (this.fontEditor) {\n            this.fontEditor.removeEventListener(\"FontChanged\" /* InlineEditor.FontEditor.Events.FONT_CHANGED */, this.boundFontChanged);\n        }\n        this.fontEditor = null;\n        if (this.parentPane) {\n            this.parentPane.setEditingStyle(false);\n        }\n        this.section.resetToolbars();\n        this.section.onpopulate();\n    }\n}\n//# sourceMappingURL=ColorSwatchPopoverIcon.js.map","// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nexport class ComputedStyleModel extends Common.ObjectWrapper.ObjectWrapper {\n    nodeInternal;\n    cssModelInternal;\n    eventListeners;\n    frameResizedTimer;\n    computedStylePromise;\n    constructor() {\n        super();\n        this.nodeInternal = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n        this.cssModelInternal = null;\n        this.eventListeners = [];\n        UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.onNodeChanged, this);\n    }\n    node() {\n        return this.nodeInternal;\n    }\n    cssModel() {\n        return this.cssModelInternal && this.cssModelInternal.isEnabled() ? this.cssModelInternal : null;\n    }\n    onNodeChanged(event) {\n        this.nodeInternal = event.data;\n        this.updateModel(this.nodeInternal ? this.nodeInternal.domModel().cssModel() : null);\n        this.onComputedStyleChanged(null);\n    }\n    updateModel(cssModel) {\n        if (this.cssModelInternal === cssModel) {\n            return;\n        }\n        Common.EventTarget.removeEventListeners(this.eventListeners);\n        this.cssModelInternal = cssModel;\n        const domModel = cssModel ? cssModel.domModel() : null;\n        const resourceTreeModel = cssModel ? cssModel.target().model(SDK.ResourceTreeModel.ResourceTreeModel) : null;\n        if (cssModel && domModel && resourceTreeModel) {\n            this.eventListeners = [\n                cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetAdded, this.onComputedStyleChanged, this),\n                cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetRemoved, this.onComputedStyleChanged, this),\n                cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.onComputedStyleChanged, this),\n                cssModel.addEventListener(SDK.CSSModel.Events.FontsUpdated, this.onComputedStyleChanged, this),\n                cssModel.addEventListener(SDK.CSSModel.Events.MediaQueryResultChanged, this.onComputedStyleChanged, this),\n                cssModel.addEventListener(SDK.CSSModel.Events.PseudoStateForced, this.onComputedStyleChanged, this),\n                cssModel.addEventListener(SDK.CSSModel.Events.ModelWasEnabled, this.onComputedStyleChanged, this),\n                domModel.addEventListener(SDK.DOMModel.Events.DOMMutated, this.onDOMModelChanged, this),\n                resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameResized, this.onFrameResized, this),\n            ];\n        }\n    }\n    onComputedStyleChanged(event) {\n        delete this.computedStylePromise;\n        this.dispatchEventToListeners(\"ComputedStyleChanged\" /* Events.COMPUTED_STYLE_CHANGED */, event?.data ?? null);\n    }\n    onDOMModelChanged(event) {\n        // Any attribute removal or modification can affect the styles of \"related\" nodes.\n        const node = event.data;\n        if (!this.nodeInternal ||\n            this.nodeInternal !== node && node.parentNode !== this.nodeInternal.parentNode &&\n                !node.isAncestor(this.nodeInternal)) {\n            return;\n        }\n        this.onComputedStyleChanged(null);\n    }\n    onFrameResized() {\n        function refreshContents() {\n            this.onComputedStyleChanged(null);\n            delete this.frameResizedTimer;\n        }\n        if (this.frameResizedTimer) {\n            clearTimeout(this.frameResizedTimer);\n        }\n        this.frameResizedTimer = window.setTimeout(refreshContents.bind(this), 100);\n    }\n    elementNode() {\n        const node = this.node();\n        if (!node) {\n            return null;\n        }\n        return node.enclosingElementOrSelf();\n    }\n    async fetchComputedStyle() {\n        const elementNode = this.elementNode();\n        const cssModel = this.cssModel();\n        if (!elementNode || !cssModel) {\n            return null;\n        }\n        const nodeId = elementNode.id;\n        if (!nodeId) {\n            return null;\n        }\n        if (!this.computedStylePromise) {\n            this.computedStylePromise = cssModel.getComputedStyle(nodeId).then(verifyOutdated.bind(this, elementNode));\n        }\n        return this.computedStylePromise;\n        function verifyOutdated(elementNode, style) {\n            return elementNode === this.elementNode() && style ? new ComputedStyle(elementNode, style) :\n                null;\n        }\n    }\n}\nexport class ComputedStyle {\n    node;\n    computedStyle;\n    constructor(node, computedStyle) {\n        this.node = node;\n        this.computedStyle = computedStyle;\n    }\n}\n//# sourceMappingURL=ComputedStyleModel.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (c) 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.styles-sidebar-pane-toolbar {\n  border-bottom: 1px solid var(--sys-color-divider);\n  flex-shrink: 0;\n}\n\n.styles-sidebar-computed-style-widget {\n  min-height: auto;\n}\n\n.styles-pane-toolbar {\n  width: 100%;\n}\n\n/*# sourceURL=computedStyleSidebarPane.css */\n`);\n\nexport default styles;\n","// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n/**\n * ImagePreviewPopover sets listeners on the container element to display\n * an image preview if needed. The image URL comes from the event (mouseover) target\n * in a propery identified by HrefSymbol. To enable preview for any child element\n * set the property HrefSymbol.\n */\nexport class ImagePreviewPopover {\n    getLinkElement;\n    getDOMNode;\n    popover;\n    constructor(container, getLinkElement, getDOMNode) {\n        this.getLinkElement = getLinkElement;\n        this.getDOMNode = getDOMNode;\n        this.popover =\n            new UI.PopoverHelper.PopoverHelper(container, this.handleRequest.bind(this), 'elements.image-preview');\n        this.popover.setHasPadding(true);\n        this.popover.setTimeout(0, 100);\n    }\n    handleRequest(event) {\n        const link = this.getLinkElement(event);\n        if (!link) {\n            return null;\n        }\n        const href = elementToURLMap.get(link);\n        if (!href) {\n            return null;\n        }\n        return {\n            box: link.boxInWindow(),\n            hide: undefined,\n            show: async (popover) => {\n                const node = this.getDOMNode(link);\n                if (!node) {\n                    return false;\n                }\n                const precomputedFeatures = await Components.ImagePreview.ImagePreview.loadDimensionsForNode(node);\n                const preview = await Components.ImagePreview.ImagePreview.build(node.domModel().target(), href, true, {\n                    imageAltText: undefined,\n                    precomputedFeatures,\n                    align: \"center\" /* Components.ImagePreview.Align.CENTER */,\n                });\n                if (preview) {\n                    popover.contentElement.appendChild(preview);\n                }\n                return Boolean(preview);\n            },\n        };\n    }\n    hide() {\n        this.popover.hidePopover();\n    }\n    static setImageUrl(element, url) {\n        elementToURLMap.set(element, url);\n        return element;\n    }\n    static getImageURL(element) {\n        return elementToURLMap.get(element);\n    }\n}\nconst elementToURLMap = new WeakMap();\n//# sourceMappingURL=ImagePreviewPopover.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/**\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  user-select: text;\n}\n\n.platform-fonts {\n  flex-shrink: 0;\n}\n\n.font-usage {\n  color: var(--sys-color-token-subtle);\n  padding-left: 3px;\n}\n\n.title {\n  padding: 0 5px;\n  border-top: 1px solid;\n  border-bottom: 1px solid;\n  border-color: var(--sys-color-divider);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  height: 24px;\n  background-color: var(--sys-color-surface2);\n  display: flex;\n  align-items: center;\n}\n\n.font-stats-item {\n  padding: 5px 1em;\n\n  div {\n    margin-bottom: 2px;\n  }\n\n  &:not(:last-child) {\n    border-bottom: 1px solid var(--sys-color-divider);\n  }\n}\n\n/*# sourceURL=platformFontsWidget.css */\n`);\n\nexport default styles;\n","/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as i18n from '../../core/i18n/i18n.js';\nimport platformFontsWidgetStyles from './platformFontsWidget.css.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nconst UIStrings = {\n    /**\n     *@description Section title text content in Platform Fonts Widget of the Elements panel\n     */\n    renderedFonts: 'Rendered Fonts',\n    /**\n     *@description Font property title text content in Platform Fonts Widget of the Elements panel\n     */\n    familyName: 'Family name',\n    /**\n     *@description Font property title text content in Platform Fonts Widget of the Elements panel\n     */\n    postScriptName: 'PostScript name',\n    /**\n     *@description Font property title text content in Platform Fonts Widget of the Elements panel\n     */\n    fontOrigin: 'Font origin',\n    /**\n     *@description Text in Platform Fonts Widget of the Elements panel\n     */\n    networkResource: 'Network resource',\n    /**\n     *@description Text in Platform Fonts Widget of the Elements panel\n     */\n    localFile: 'Local file',\n    /**\n     *@description Text in Platform Fonts Widget of the Elements panel. Indicates a number of glyphs (characters) .\n     */\n    dGlyphs: '{n, plural, =1 {(# glyph)} other {(# glyphs)}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/PlatformFontsWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class PlatformFontsWidget extends UI.ThrottledWidget.ThrottledWidget {\n    sharedModel;\n    sectionTitle;\n    fontStatsSection;\n    constructor(sharedModel) {\n        super(true);\n        this.sharedModel = sharedModel;\n        this.sharedModel.addEventListener(\"ComputedStyleChanged\" /* Events.COMPUTED_STYLE_CHANGED */, this.update, this);\n        this.sectionTitle = document.createElement('div');\n        this.sectionTitle.classList.add('title');\n        this.contentElement.classList.add('platform-fonts');\n        this.contentElement.appendChild(this.sectionTitle);\n        this.sectionTitle.textContent = i18nString(UIStrings.renderedFonts);\n        this.fontStatsSection = this.contentElement.createChild('div', 'stats-section');\n    }\n    doUpdate() {\n        const cssModel = this.sharedModel.cssModel();\n        const node = this.sharedModel.node();\n        if (!node || !cssModel) {\n            return Promise.resolve();\n        }\n        return cssModel.getPlatformFonts(node.id).then(this.refreshUI.bind(this, node));\n    }\n    refreshUI(node, platformFonts) {\n        if (this.sharedModel.node() !== node) {\n            return;\n        }\n        this.fontStatsSection.removeChildren();\n        const isEmptySection = !platformFonts || !platformFonts.length;\n        this.sectionTitle.classList.toggle('hidden', isEmptySection);\n        if (isEmptySection || !platformFonts) {\n            return;\n        }\n        platformFonts.sort(function (a, b) {\n            return b.glyphCount - a.glyphCount;\n        });\n        for (const platformFont of platformFonts) {\n            const fontStatElement = this.fontStatsSection.createChild('div', 'font-stats-item');\n            const familyNameElement = fontStatElement.createChild('div');\n            familyNameElement.textContent = `${UIStrings.familyName}: ${platformFont.familyName}`;\n            const postScriptNameElement = fontStatElement.createChild('div');\n            postScriptNameElement.textContent = `${UIStrings.postScriptName}: ${platformFont.postScriptName}`;\n            const fontOriginElement = fontStatElement.createChild('div');\n            const fontOrigin = platformFont.isCustomFont ? i18nString(UIStrings.networkResource) : i18nString(UIStrings.localFile);\n            fontOriginElement.textContent = `${UIStrings.fontOrigin}: ${fontOrigin}`;\n            const fontUsageElement = fontOriginElement.createChild('span', 'font-usage');\n            const usage = platformFont.glyphCount;\n            fontUsageElement.textContent = i18nString(UIStrings.dGlyphs, { n: usage });\n        }\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([platformFontsWidgetStyles]);\n    }\n}\n//# sourceMappingURL=PlatformFontsWidget.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nconst ASTUtils = SDK.CSSPropertyParser.ASTUtils;\nconst matcherBase = SDK.CSSPropertyParser.matcherBase;\nconst tokenizeDeclaration = SDK.CSSPropertyParser.tokenizeDeclaration;\nexport class AngleMatch {\n    text;\n    node;\n    constructor(text, node) {\n        this.text = text;\n        this.node = node;\n    }\n    computedText() {\n        return this.text;\n    }\n}\n// clang-format off\nexport class AngleMatcher extends matcherBase(AngleMatch) {\n    // clang-format on\n    accepts(propertyName) {\n        return SDK.CSSMetadata.cssMetadata().isAngleAwareProperty(propertyName);\n    }\n    matches(node, matching) {\n        if (node.name !== 'NumberLiteral') {\n            return null;\n        }\n        const unit = node.getChild('Unit');\n        // TODO(crbug/1138628) handle unitless 0\n        if (!unit || !['deg', 'grad', 'rad', 'turn'].includes(matching.ast.text(unit))) {\n            return null;\n        }\n        return new AngleMatch(matching.ast.text(node), node);\n    }\n}\nfunction literalToNumber(node, ast) {\n    if (node.type.name !== 'NumberLiteral') {\n        return null;\n    }\n    const text = ast.text(node);\n    return Number(text.substring(0, text.length - ast.text(node.getChild('Unit')).length));\n}\nexport class ColorMixMatch {\n    text;\n    node;\n    space;\n    color1;\n    color2;\n    constructor(text, node, space, color1, color2) {\n        this.text = text;\n        this.node = node;\n        this.space = space;\n        this.color1 = color1;\n        this.color2 = color2;\n    }\n}\n// clang-format off\nexport class ColorMixMatcher extends matcherBase(ColorMixMatch) {\n    // clang-format on\n    accepts(propertyName) {\n        return SDK.CSSMetadata.cssMetadata().isColorAwareProperty(propertyName);\n    }\n    matches(node, matching) {\n        if (node.name !== 'CallExpression' || matching.ast.text(node.getChild('Callee')) !== 'color-mix') {\n            return null;\n        }\n        const computedValueTree = tokenizeDeclaration('--property', matching.getComputedText(node));\n        if (!computedValueTree) {\n            return null;\n        }\n        const value = ASTUtils.declValue(computedValueTree.tree);\n        if (!value) {\n            return null;\n        }\n        const computedValueArgs = ASTUtils.callArgs(value);\n        if (computedValueArgs.length !== 3) {\n            return null;\n        }\n        const [space, color1, color2] = computedValueArgs;\n        // Verify that all arguments are there, and that the space starts with a literal `in`.\n        if (space.length < 2 || computedValueTree.text(ASTUtils.stripComments(space).next().value) !== 'in' ||\n            color1.length < 1 || color2.length < 1) {\n            return null;\n        }\n        // Verify there's at most one percentage value for each color.\n        const p1 = color1.filter(n => n.type.name === 'NumberLiteral' && computedValueTree.text(n.getChild('Unit')) === '%');\n        const p2 = color2.filter(n => n.type.name === 'NumberLiteral' && computedValueTree.text(n.getChild('Unit')) === '%');\n        if (p1.length > 1 || p2.length > 1) {\n            return null;\n        }\n        // Verify that if both colors carry percentages, they aren't both zero (which is an invalid property value).\n        if (p1[0] && p2[0] && (literalToNumber(p1[0], computedValueTree) ?? 0) === 0 &&\n            (literalToNumber(p2[0], computedValueTree) ?? 0) === 0) {\n            return null;\n        }\n        const args = ASTUtils.callArgs(node);\n        if (args.length !== 3) {\n            return null;\n        }\n        return new ColorMixMatch(matching.ast.text(node), node, args[0], args[1], args[2]);\n    }\n}\n// clang-format off\nexport class URLMatch {\n    url;\n    text;\n    node;\n    constructor(url, text, node) {\n        this.url = url;\n        this.text = text;\n        this.node = node;\n    }\n}\n// clang-format off\nexport class URLMatcher extends matcherBase(URLMatch) {\n    // clang-format on\n    matches(node, matching) {\n        if (node.name !== 'CallLiteral') {\n            return null;\n        }\n        const callee = node.getChild('CallTag');\n        if (!callee || matching.ast.text(callee) !== 'url') {\n            return null;\n        }\n        const [, lparenNode, urlNode, rparenNode] = ASTUtils.siblings(callee);\n        if (matching.ast.text(lparenNode) !== '(' ||\n            (urlNode.name !== 'ParenthesizedContent' && urlNode.name !== 'StringLiteral') ||\n            matching.ast.text(rparenNode) !== ')') {\n            return null;\n        }\n        const text = matching.ast.text(urlNode);\n        const url = (urlNode.name === 'StringLiteral' ? text.substr(1, text.length - 2) : text.trim());\n        return new URLMatch(url, matching.ast.text(node), node);\n    }\n}\nexport class LinearGradientMatch {\n    text;\n    node;\n    constructor(text, node) {\n        this.text = text;\n        this.node = node;\n    }\n}\n// clang-format off\nexport class LinearGradientMatcher extends matcherBase(LinearGradientMatch) {\n    // clang-format on\n    matches(node, matching) {\n        const text = matching.ast.text(node);\n        if (node.name === 'CallExpression' && matching.ast.text(node.getChild('Callee')) === 'linear-gradient') {\n            return new LinearGradientMatch(text, node);\n        }\n        return null;\n    }\n    accepts(propertyName) {\n        return ['background', 'background-image', '-webkit-mask-image'].includes(propertyName);\n    }\n}\nexport class ColorMatch {\n    text;\n    node;\n    currentColorCallback;\n    computedText;\n    constructor(text, node, currentColorCallback) {\n        this.text = text;\n        this.node = node;\n        this.currentColorCallback = currentColorCallback;\n        this.computedText = currentColorCallback;\n    }\n}\n// clang-format off\nexport class ColorMatcher extends matcherBase(ColorMatch) {\n    currentColorCallback;\n    constructor(currentColorCallback) {\n        super();\n        this.currentColorCallback = currentColorCallback;\n    }\n    // clang-format on\n    accepts(propertyName) {\n        return SDK.CSSMetadata.cssMetadata().isColorAwareProperty(propertyName);\n    }\n    matches(node, matching) {\n        const text = matching.ast.text(node);\n        if (node.name === 'ColorLiteral') {\n            return new ColorMatch(text, node);\n        }\n        if (node.name === 'ValueName') {\n            if (Common.Color.Nicknames.has(text)) {\n                return new ColorMatch(text, node);\n            }\n            if (text.toLowerCase() === 'currentcolor' && this.currentColorCallback) {\n                const callback = this.currentColorCallback;\n                return new ColorMatch(text, node, () => callback() ?? text);\n            }\n        }\n        if (node.name === 'CallExpression') {\n            const callee = node.getChild('Callee');\n            if (callee && matching.ast.text(callee).match(/^(rgba?|hsla?|hwba?|lab|lch|oklab|oklch|color)$/)) {\n                return new ColorMatch(text, node);\n            }\n        }\n        return null;\n    }\n}\nexport class LightDarkColorMatch {\n    text;\n    node;\n    light;\n    dark;\n    constructor(text, node, light, dark) {\n        this.text = text;\n        this.node = node;\n        this.light = light;\n        this.dark = dark;\n    }\n}\n// clang-format off\nexport class LightDarkColorMatcher extends matcherBase(LightDarkColorMatch) {\n    // clang-format on\n    accepts(propertyName) {\n        return SDK.CSSMetadata.cssMetadata().isColorAwareProperty(propertyName);\n    }\n    matches(node, matching) {\n        if (node.name !== 'CallExpression' || matching.ast.text(node.getChild('Callee')) !== 'light-dark') {\n            return null;\n        }\n        const args = ASTUtils.callArgs(node);\n        if (args.length !== 2 || args[0].length === 0 || args[1].length === 0) {\n            return null;\n        }\n        return new LightDarkColorMatch(matching.ast.text(node), node, args[0], args[1]);\n    }\n}\nexport class LinkableNameMatch {\n    text;\n    node;\n    propertyName;\n    constructor(text, node, propertyName) {\n        this.text = text;\n        this.node = node;\n        this.propertyName = propertyName;\n    }\n}\n// clang-format off\nexport class LinkableNameMatcher extends matcherBase(LinkableNameMatch) {\n    // clang-format on\n    static isLinkableNameProperty(propertyName) {\n        const names = [\n            \"animation\" /* LinkableNameProperties.ANIMATION */,\n            \"animation-name\" /* LinkableNameProperties.ANIMATION_NAME */,\n            \"font-palette\" /* LinkableNameProperties.FONT_PALETTE */,\n            \"position-try-fallbacks\" /* LinkableNameProperties.POSITION_TRY_FALLBACKS */,\n            \"position-try\" /* LinkableNameProperties.POSITION_TRY */,\n        ];\n        return names.includes(propertyName);\n    }\n    static identifierAnimationLonghandMap = new Map(Object.entries({\n        normal: \"direction\" /* AnimationLonghandPart.DIRECTION */,\n        alternate: \"direction\" /* AnimationLonghandPart.DIRECTION */,\n        reverse: \"direction\" /* AnimationLonghandPart.DIRECTION */,\n        'alternate-reverse': \"direction\" /* AnimationLonghandPart.DIRECTION */,\n        none: \"fill-mode\" /* AnimationLonghandPart.FILL_MODE */,\n        forwards: \"fill-mode\" /* AnimationLonghandPart.FILL_MODE */,\n        backwards: \"fill-mode\" /* AnimationLonghandPart.FILL_MODE */,\n        both: \"fill-mode\" /* AnimationLonghandPart.FILL_MODE */,\n        running: \"play-state\" /* AnimationLonghandPart.PLAY_STATE */,\n        paused: \"play-state\" /* AnimationLonghandPart.PLAY_STATE */,\n        infinite: \"iteration-count\" /* AnimationLonghandPart.ITERATION_COUNT */,\n        linear: \"easing-function\" /* AnimationLonghandPart.EASING_FUNCTION */,\n        ease: \"easing-function\" /* AnimationLonghandPart.EASING_FUNCTION */,\n        'ease-in': \"easing-function\" /* AnimationLonghandPart.EASING_FUNCTION */,\n        'ease-out': \"easing-function\" /* AnimationLonghandPart.EASING_FUNCTION */,\n        'ease-in-out': \"easing-function\" /* AnimationLonghandPart.EASING_FUNCTION */,\n    }));\n    matchAnimationNameInShorthand(node, matching) {\n        // Order is important within each animation definition for distinguishing <keyframes-name> values from other keywords.\n        // When parsing, keywords that are valid for properties other than animation-name\n        // whose values were not found earlier in the shorthand must be accepted for those properties rather than for animation-name.\n        // See the details in: https://w3c.github.io/csswg-drafts/css-animations/#animation.\n        const text = matching.ast.text(node);\n        // This is not a known identifier, so return it as `animation-name`.\n        if (!LinkableNameMatcher.identifierAnimationLonghandMap.has(text)) {\n            return new LinkableNameMatch(text, node, \"animation\" /* LinkableNameProperties.ANIMATION */);\n        }\n        // There can be multiple `animation` declarations splitted by a comma.\n        // So, we find the declaration nodes that are related to the node argument.\n        const declarations = ASTUtils.split(ASTUtils.siblings(ASTUtils.declValue(matching.ast.tree)));\n        const currentDeclarationNodes = declarations.find(declaration => declaration[0].from <= node.from && declaration[declaration.length - 1].to >= node.to);\n        if (!currentDeclarationNodes) {\n            return null;\n        }\n        // We reparse here until the node argument since a variable might be\n        // providing a meaningful value such as a timing keyword,\n        // that might change the meaning of the node.\n        const computedText = matching.getComputedTextRange(currentDeclarationNodes[0], node);\n        const tokenized = tokenizeDeclaration('--p', computedText);\n        if (!tokenized) {\n            return null;\n        }\n        const identifierCategory = LinkableNameMatcher.identifierAnimationLonghandMap.get(text); // The category of the node argument\n        for (let itNode = ASTUtils.declValue(tokenized.tree); itNode?.nextSibling; itNode = itNode.nextSibling) {\n            // Run through all the nodes that come before node argument\n            // and check whether a value in the same category is found.\n            // if so, it means our identifier is an `animation-name` keyword.\n            if (itNode.name === 'ValueName') {\n                const categoryValue = LinkableNameMatcher.identifierAnimationLonghandMap.get(tokenized.text(itNode));\n                if (categoryValue && categoryValue === identifierCategory) {\n                    return new LinkableNameMatch(text, node, \"animation\" /* LinkableNameProperties.ANIMATION */);\n                }\n            }\n        }\n        return null;\n    }\n    accepts(propertyName) {\n        return LinkableNameMatcher.isLinkableNameProperty(propertyName);\n    }\n    matches(node, matching) {\n        const { propertyName } = matching.ast;\n        const text = matching.ast.text(node);\n        const parentNode = node.parent;\n        if (!parentNode) {\n            return null;\n        }\n        const isParentADeclaration = parentNode.name === 'Declaration';\n        const isInsideVarCall = parentNode.name === 'ArgList' && parentNode.prevSibling?.name === 'Callee' &&\n            matching.ast.text(parentNode.prevSibling) === 'var';\n        const isAParentDeclarationOrVarCall = isParentADeclaration || isInsideVarCall;\n        // `position-try-fallbacks` and `position-try` only accept names with dashed ident.\n        const shouldMatchOnlyVariableName = propertyName === \"position-try\" /* LinkableNameProperties.POSITION_TRY */ ||\n            propertyName === \"position-try-fallbacks\" /* LinkableNameProperties.POSITION_TRY_FALLBACKS */;\n        // We only mark top level nodes or nodes that are inside `var()` expressions as linkable names.\n        if (!propertyName || (node.name !== 'ValueName' && node.name !== 'VariableName') ||\n            !isAParentDeclarationOrVarCall || (node.name === 'ValueName' && shouldMatchOnlyVariableName)) {\n            return null;\n        }\n        if (propertyName === 'animation') {\n            return this.matchAnimationNameInShorthand(node, matching);\n        }\n        // The assertion here is safe since this matcher only runs for\n        // properties with names inside `LinkableNameProperties` (See the `accepts` function.)\n        return new LinkableNameMatch(text, node, propertyName);\n    }\n}\nexport class BezierMatch {\n    text;\n    node;\n    constructor(text, node) {\n        this.text = text;\n        this.node = node;\n    }\n}\n// clang-format off\nexport class BezierMatcher extends matcherBase(BezierMatch) {\n    // clang-format on\n    accepts(propertyName) {\n        return SDK.CSSMetadata.cssMetadata().isBezierAwareProperty(propertyName);\n    }\n    matches(node, matching) {\n        const text = matching.ast.text(node);\n        const isCubicBezierKeyword = node.name === 'ValueName' && UI.Geometry.CubicBezier.KeywordValues.has(text);\n        const isCubicBezierOrLinearFunction = node.name === 'CallExpression' &&\n            ['cubic-bezier', 'linear'].includes(matching.ast.text(node.getChild('Callee')));\n        if (!isCubicBezierKeyword && !isCubicBezierOrLinearFunction) {\n            return null;\n        }\n        if (!InlineEditor.AnimationTimingModel.AnimationTimingModel.parse(text)) {\n            return null;\n        }\n        return new BezierMatch(text, node);\n    }\n}\nexport class StringMatch {\n    text;\n    node;\n    constructor(text, node) {\n        this.text = text;\n        this.node = node;\n    }\n}\n// clang-format off\nexport class StringMatcher extends matcherBase(StringMatch) {\n    // clang-format on\n    matches(node, matching) {\n        return node.name === 'StringLiteral' ? new StringMatch(matching.ast.text(node), node) : null;\n    }\n}\nexport class ShadowMatch {\n    text;\n    node;\n    shadowType;\n    constructor(text, node, shadowType) {\n        this.text = text;\n        this.node = node;\n        this.shadowType = shadowType;\n    }\n}\n// clang-format off\nexport class ShadowMatcher extends matcherBase(ShadowMatch) {\n    // clang-format on\n    accepts(propertyName) {\n        return SDK.CSSMetadata.cssMetadata().isShadowProperty(propertyName);\n    }\n    matches(node, matching) {\n        if (node.name !== 'Declaration') {\n            return null;\n        }\n        const valueNodes = ASTUtils.siblings(ASTUtils.declValue(node));\n        const valueText = matching.ast.textRange(valueNodes[0], valueNodes[valueNodes.length - 1]);\n        return new ShadowMatch(valueText, node, matching.ast.propertyName === 'text-shadow' ? \"textShadow\" /* ShadowType.TEXT_SHADOW */ : \"boxShadow\" /* ShadowType.BOX_SHADOW */);\n    }\n}\nexport class FontMatch {\n    text;\n    node;\n    constructor(text, node) {\n        this.text = text;\n        this.node = node;\n    }\n}\n// clang-format off\nexport class FontMatcher extends matcherBase(FontMatch) {\n    // clang-format on\n    accepts(propertyName) {\n        return SDK.CSSMetadata.cssMetadata().isFontAwareProperty(propertyName);\n    }\n    matches(node, matching) {\n        if (node.name === 'Declaration') {\n            return null;\n        }\n        const regex = matching.ast.propertyName === 'font-family' ? InlineEditor.FontEditorUtils.FontFamilyRegex :\n            InlineEditor.FontEditorUtils.FontPropertiesRegex;\n        const text = matching.ast.text(node);\n        return regex.test(text) ? new FontMatch(text, node) : null;\n    }\n}\nexport class LengthMatch {\n    text;\n    node;\n    constructor(text, node) {\n        this.text = text;\n        this.node = node;\n    }\n}\n// clang-format off\nexport class LengthMatcher extends matcherBase(LengthMatch) {\n    // clang-format on\n    matches(node, matching) {\n        const text = matching.ast.text(node);\n        const regexp = new RegExp(`^${InlineEditor.CSSLength.CSS_LENGTH_REGEX.source}$`);\n        const match = regexp.exec(text);\n        if (!match || match.index !== 0) {\n            return null;\n        }\n        return new LengthMatch(match[0], node);\n    }\n}\nexport class FlexGridMatch {\n    text;\n    node;\n    isFlex;\n    constructor(text, node, isFlex) {\n        this.text = text;\n        this.node = node;\n        this.isFlex = isFlex;\n    }\n}\n// clang-format off\nexport class FlexGridMatcher extends matcherBase(FlexGridMatch) {\n    // clang-format on\n    static FLEX = ['flex', 'inline-flex', 'block flex', 'inline flex'];\n    static GRID = ['grid', 'inline-grid', 'block grid', 'inline grid'];\n    accepts(propertyName) {\n        return propertyName === 'display';\n    }\n    matches(node, matching) {\n        if (node.name !== 'Declaration') {\n            return null;\n        }\n        const valueNodes = ASTUtils.siblings(ASTUtils.declValue(node));\n        if (valueNodes.length < 1) {\n            return null;\n        }\n        const values = valueNodes.filter(node => node.name !== 'Important')\n            .map(node => matching.getComputedText(node).trim())\n            .filter(value => value);\n        const text = values.join(' ');\n        if (FlexGridMatcher.FLEX.includes(text)) {\n            return new FlexGridMatch(matching.ast.text(node), node, true);\n        }\n        if (FlexGridMatcher.GRID.includes(text)) {\n            return new FlexGridMatch(matching.ast.text(node), node, false);\n        }\n        return null;\n    }\n}\nexport class GridTemplateMatch {\n    text;\n    node;\n    lines;\n    constructor(text, node, lines) {\n        this.text = text;\n        this.node = node;\n        this.lines = lines;\n    }\n}\n// clang-format off\nexport class GridTemplateMatcher extends matcherBase(GridTemplateMatch) {\n    // clang-format on\n    accepts(propertyName) {\n        return SDK.CSSMetadata.cssMetadata().isGridAreaDefiningProperty(propertyName);\n    }\n    matches(node, matching) {\n        if (node.name !== 'Declaration' || matching.hasUnresolvedVars(node)) {\n            return null;\n        }\n        const lines = [];\n        let curLine = [];\n        // The following two states are designed to consume different cases of LineNames:\n        // 1. no LineNames in between StringLiterals;\n        // 2. one LineNames in between, which means the LineNames belongs to the current line;\n        // 3. two LineNames in between, which means the second LineNames starts a new line.\n        // `hasLeadingLineNames` tracks if the current row already starts with a LineNames and\n        // with no following StringLiteral yet, which means that the next StringLiteral should\n        // be appended to the same `curLine`, instead of creating a new line.\n        let hasLeadingLineNames = false;\n        // `needClosingLineNames` tracks if the current row can still consume an optional LineNames,\n        // which will decide if we should start a new line or not when a LineNames is encountered.\n        let needClosingLineNames = false;\n        // Gather row definitions of [<line-names>? <string> <track-size>? <line-names>?], which\n        // be rendered into separate lines.\n        function parseNodes(nodes, varParsingMode = false) {\n            for (const curNode of nodes) {\n                if (matching.getMatch(curNode) instanceof SDK.CSSPropertyParser.VariableMatch) {\n                    const computedValueTree = tokenizeDeclaration('--property', matching.getComputedText(curNode));\n                    if (!computedValueTree) {\n                        continue;\n                    }\n                    const varNodes = ASTUtils.siblings(ASTUtils.declValue(computedValueTree.tree));\n                    if (varNodes.length === 0) {\n                        continue;\n                    }\n                    if ((varNodes[0].name === 'StringLiteral' && !hasLeadingLineNames) ||\n                        (varNodes[0].name === 'LineNames' && !needClosingLineNames)) {\n                        // The variable value either starts with a string, or with a line name that belongs to a new row;\n                        // therefore we start a new line with the variable.\n                        lines.push(curLine);\n                        curLine = [curNode];\n                    }\n                    else {\n                        curLine.push(curNode);\n                    }\n                    // We parse computed nodes of this variable to correctly advance local states, but\n                    // these computed nodes won't be added to the lines.\n                    parseNodes(varNodes, true);\n                }\n                else if (curNode.name === 'BinaryExpression') {\n                    parseNodes(ASTUtils.siblings(curNode.firstChild));\n                }\n                else if (curNode.name === 'StringLiteral') {\n                    if (!varParsingMode) {\n                        if (hasLeadingLineNames) {\n                            curLine.push(curNode);\n                        }\n                        else {\n                            lines.push(curLine);\n                            curLine = [curNode];\n                        }\n                    }\n                    needClosingLineNames = true;\n                    hasLeadingLineNames = false;\n                }\n                else if (curNode.name === 'LineNames') {\n                    if (!varParsingMode) {\n                        if (needClosingLineNames) {\n                            curLine.push(curNode);\n                        }\n                        else {\n                            lines.push(curLine);\n                            curLine = [curNode];\n                        }\n                    }\n                    hasLeadingLineNames = !needClosingLineNames;\n                    needClosingLineNames = !needClosingLineNames;\n                }\n                else if (!varParsingMode) {\n                    curLine.push(curNode);\n                }\n            }\n        }\n        const valueNodes = ASTUtils.siblings(ASTUtils.declValue(node));\n        parseNodes(valueNodes);\n        lines.push(curLine);\n        const valueText = matching.ast.textRange(valueNodes[0], valueNodes[valueNodes.length - 1]);\n        return new GridTemplateMatch(valueText, node, lines.filter(line => line.length > 0));\n    }\n}\nexport class AnchorFunctionMatch {\n    text;\n    node;\n    functionName;\n    constructor(text, node, functionName) {\n        this.text = text;\n        this.node = node;\n        this.functionName = functionName;\n    }\n}\n// clang-format off\nexport class AnchorFunctionMatcher extends matcherBase(AnchorFunctionMatch) {\n    // clang-format on\n    anchorFunction(node, matching) {\n        if (node.name !== 'CallExpression') {\n            return null;\n        }\n        const calleeText = matching.ast.text(node.getChild('Callee'));\n        if (calleeText === 'anchor' || calleeText === 'anchor-size') {\n            return calleeText;\n        }\n        return null;\n    }\n    matches(node, matching) {\n        if (node.name === 'VariableName') {\n            // Double-dashed anchor reference to be rendered with a link to its matching anchor.\n            let parent = node.parent;\n            if (!parent || parent.name !== 'ArgList') {\n                return null;\n            }\n            parent = parent.parent;\n            if (!parent || !this.anchorFunction(parent, matching)) {\n                return null;\n            }\n            return new AnchorFunctionMatch(matching.ast.text(node), node, null);\n        }\n        const calleeText = this.anchorFunction(node, matching);\n        if (!calleeText) {\n            return null;\n        }\n        // Match if the anchor/anchor-size function implicitly references an anchor.\n        const args = ASTUtils.children(node.getChild('ArgList'));\n        if (calleeText === 'anchor' && args.length <= 2) {\n            return null;\n        }\n        if (args.find(arg => arg.name === 'VariableName')) {\n            // We have an explicit anchor reference, no need to render swatch.\n            return null;\n        }\n        return new AnchorFunctionMatch(matching.ast.text(node), node, calleeText);\n    }\n}\n// For linking `position-anchor: --anchor-name`.\nexport class PositionAnchorMatch {\n    text;\n    matching;\n    node;\n    constructor(text, matching, node) {\n        this.text = text;\n        this.matching = matching;\n        this.node = node;\n    }\n}\n// clang-format off\nexport class PositionAnchorMatcher extends matcherBase(PositionAnchorMatch) {\n    // clang-format on\n    accepts(propertyName) {\n        return propertyName === 'position-anchor';\n    }\n    matches(node, matching) {\n        if (node.name !== 'VariableName') {\n            return null;\n        }\n        const dashedIdentifier = matching.ast.text(node);\n        return new PositionAnchorMatch(dashedIdentifier, matching, node);\n    }\n}\nexport class CSSWideKeywordMatch {\n    text;\n    node;\n    property;\n    matchedStyles;\n    constructor(text, node, property, matchedStyles) {\n        this.text = text;\n        this.node = node;\n        this.property = property;\n        this.matchedStyles = matchedStyles;\n    }\n    resolveProperty() {\n        return this.matchedStyles.resolveGlobalKeyword(this.property, this.text);\n    }\n    computedText() {\n        return this.resolveProperty()?.value ?? null;\n    }\n}\n// clang-format off\nexport class CSSWideKeywordMatcher extends matcherBase(CSSWideKeywordMatch) {\n    property;\n    matchedStyles;\n    // clang-format on\n    constructor(property, matchedStyles) {\n        super();\n        this.property = property;\n        this.matchedStyles = matchedStyles;\n    }\n    matches(node, matching) {\n        const parentNode = node.parent;\n        if (node.name !== 'ValueName' || parentNode?.name !== 'Declaration') {\n            return null;\n        }\n        if (Array.from(ASTUtils.stripComments(ASTUtils.siblings(ASTUtils.declValue(parentNode))))\n            .some(child => !ASTUtils.equals(child, node))) {\n            return null;\n        }\n        const text = matching.ast.text(node);\n        if (!SDK.CSSMetadata.CSSMetadata.isCSSWideKeyword(text)) {\n            return null;\n        }\n        return new CSSWideKeywordMatch(text, node, this.property, this.matchedStyles);\n    }\n}\nexport class PositionTryMatch {\n    text;\n    node;\n    preamble;\n    fallbacks;\n    constructor(text, node, preamble, fallbacks) {\n        this.text = text;\n        this.node = node;\n        this.preamble = preamble;\n        this.fallbacks = fallbacks;\n    }\n}\n// clang-format off\nexport class PositionTryMatcher extends matcherBase(PositionTryMatch) {\n    // clang-format on\n    accepts(propertyName) {\n        return propertyName === \"position-try\" /* LinkableNameProperties.POSITION_TRY */ ||\n            propertyName === \"position-try-fallbacks\" /* LinkableNameProperties.POSITION_TRY_FALLBACKS */;\n    }\n    matches(node, matching) {\n        if (node.name !== 'Declaration') {\n            return null;\n        }\n        let preamble = [];\n        const valueNodes = ASTUtils.siblings(ASTUtils.declValue(node));\n        const fallbacks = ASTUtils.split(valueNodes);\n        if (matching.ast.propertyName === \"position-try\" /* LinkableNameProperties.POSITION_TRY */) {\n            for (const [i, n] of fallbacks[0].entries()) {\n                const computedText = matching.getComputedText(n);\n                if (SDK.CSSMetadata.CSSMetadata.isCSSWideKeyword(computedText)) {\n                    return null;\n                }\n                if (SDK.CSSMetadata.CSSMetadata.isPositionTryOrderKeyword(computedText)) {\n                    preamble = fallbacks[0].splice(0, i + 1);\n                    break;\n                }\n            }\n        }\n        const valueText = matching.ast.textRange(valueNodes[0], valueNodes[valueNodes.length - 1]);\n        return new PositionTryMatch(valueText, node, preamble, fallbacks);\n    }\n}\n//# sourceMappingURL=PropertyMatchers.js.map","// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../../core/sdk/sdk.js';\nexport const DefaultCategoryOrder = [\n    \"Layout\" /* Category.LAYOUT */,\n    \"Text\" /* Category.TEXT */,\n    \"Appearance\" /* Category.APPEARANCE */,\n    \"Animation\" /* Category.ANIMATION */,\n    \"CSS Variables\" /* Category.CSS_VARIABLES */,\n    \"Grid\" /* Category.GRID */,\n    \"Flex\" /* Category.FLEX */,\n    \"Table\" /* Category.TABLE */,\n    \"Generated Content\" /* Category.GENERATED_CONTENT */,\n    \"Other\" /* Category.OTHER */,\n];\n// These categories are manually updated for now. In the future\n// we can try to find a way to automatically categorize them\n// or find an authoritative source for the categorization:\n// https://crbug.com/1117405\nconst CategorizedProperties = new Map([\n    [\n        \"Layout\" /* Category.LAYOUT */,\n        [\n            'display', 'margin', 'padding', 'height', 'width', 'position',\n            'top', 'right', 'bottom', 'left', 'z-index', 'float',\n            'clear', 'overflow', 'resize', 'clip', 'visibility', 'box-sizing',\n            'align-content', 'align-items', 'align-self', 'flex', 'flex-basis', 'flex-direction',\n            'flex-flow', 'flex-grow', 'flex-shrink', 'flex-wrap', 'justify-content', 'order',\n            'inline-size', 'block-size', 'min-inline-size', 'min-block-size', 'max-inline-size', 'max-block-size',\n            'min-width', 'max-width', 'min-height', 'max-height',\n        ],\n    ],\n    [\n        \"Text\" /* Category.TEXT */,\n        [\n            'font',\n            'font-family',\n            'font-size',\n            'font-size-adjust',\n            'font-stretch',\n            'font-style',\n            'font-variant',\n            'font-weight',\n            'font-smoothing',\n            'direction',\n            'tab-size',\n            'text-align',\n            'text-align-last',\n            'text-decoration',\n            'text-decoration-color',\n            'text-decoration-line',\n            'text-decoration-style',\n            'text-indent',\n            'text-justify',\n            'text-overflow',\n            'text-shadow',\n            'text-transform',\n            'text-size-adjust',\n            'line-height',\n            'vertical-align',\n            'letter-spacing',\n            'word-spacing',\n            'white-space',\n            'word-break',\n            'word-wrap',\n        ],\n    ],\n    [\n        \"Appearance\" /* Category.APPEARANCE */,\n        [\n            'color',\n            'outline',\n            'outline-color',\n            'outline-offset',\n            'outline-style',\n            'Outline-width',\n            'border',\n            'border-image',\n            'background',\n            'cursor',\n            'box-shadow',\n            '≈',\n            'tap-highlight-color',\n        ],\n    ],\n    [\n        \"Animation\" /* Category.ANIMATION */,\n        [\n            'animation',\n            'animation-delay',\n            'animation-direction',\n            'animation-duration',\n            'animation-fill-mode',\n            'animation-iteration-count',\n            'animation-name',\n            'animation-play-state',\n            'animation-timing-function',\n            'transition',\n            'transition-delay',\n            'transition-duration',\n            'transition-property',\n            'transition-timing-function',\n        ],\n    ],\n    [\n        \"Grid\" /* Category.GRID */,\n        [\n            'grid',\n            'grid-column',\n            'grid-row',\n            'order',\n            'place-items',\n            'place-content',\n            'place-self',\n        ],\n    ],\n    [\n        \"Flex\" /* Category.FLEX */,\n        [\n            'flex',\n            'order',\n            'place-items',\n            'place-content',\n            'place-self',\n        ],\n    ],\n    [\n        \"Table\" /* Category.TABLE */,\n        [\n            'border-collapse',\n            'border-spacing',\n            'caption-side',\n            'empty-cells',\n            'table-layout',\n        ],\n    ],\n    [\n        \"Generated Content\" /* Category.GENERATED_CONTENT */,\n        [\n            'content',\n            'quotes',\n            'counter-reset',\n            'counter-increment',\n        ],\n    ],\n]);\nconst CategoriesByPropertyName = new Map();\nfor (const [category, styleNames] of CategorizedProperties) {\n    for (const styleName of styleNames) {\n        if (!CategoriesByPropertyName.has(styleName)) {\n            CategoriesByPropertyName.set(styleName, []);\n        }\n        const categories = CategoriesByPropertyName.get(styleName);\n        categories.push(category);\n    }\n}\nconst matchCategoriesByPropertyName = (propertyName) => {\n    if (CategoriesByPropertyName.has(propertyName)) {\n        return CategoriesByPropertyName.get(propertyName);\n    }\n    if (propertyName.startsWith('--')) {\n        return [\"CSS Variables\" /* Category.CSS_VARIABLES */];\n    }\n    return [];\n};\n/**\n * Categorize a given property name to one or more categories.\n *\n * It matches against the static CategoriesByPropertyName first. It then\n * matches against several dynamic rules. It then tries to use the canonical\n * name's shorthands for matching. If nothing matches, it returns the \"Other\"\n * category.\n */\nexport const categorizePropertyName = (propertyName) => {\n    const cssMetadata = SDK.CSSMetadata.cssMetadata();\n    const canonicalName = cssMetadata.canonicalPropertyName(propertyName);\n    const categories = matchCategoriesByPropertyName(canonicalName);\n    if (categories.length > 0) {\n        return categories;\n    }\n    const shorthands = cssMetadata.getShorthands(canonicalName);\n    if (shorthands) {\n        for (const shorthand of shorthands) {\n            const shorthandCategories = matchCategoriesByPropertyName(shorthand);\n            if (shorthandCategories.length > 0) {\n                return shorthandCategories;\n            }\n        }\n    }\n    return [\"Other\" /* Category.OTHER */];\n};\n//# sourceMappingURL=PropertyNameCategories.js.map","// Copyright (c) 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport { ComputedStyleModel } from './ComputedStyleModel.js';\nexport class ElementsSidebarPane extends UI.Widget.VBox {\n    computedStyleModelInternal;\n    updateThrottler;\n    updateWhenVisible;\n    constructor(delegatesFocus) {\n        super(true, delegatesFocus);\n        this.element.classList.add('flex-none');\n        this.computedStyleModelInternal = new ComputedStyleModel();\n        this.computedStyleModelInternal.addEventListener(\"ComputedStyleChanged\" /* Events.COMPUTED_STYLE_CHANGED */, this.onCSSModelChanged, this);\n        this.updateThrottler = new Common.Throttler.Throttler(100);\n        this.updateWhenVisible = false;\n    }\n    node() {\n        return this.computedStyleModelInternal.node();\n    }\n    cssModel() {\n        return this.computedStyleModelInternal.cssModel();\n    }\n    computedStyleModel() {\n        return this.computedStyleModelInternal;\n    }\n    async doUpdate() {\n        return;\n    }\n    update() {\n        this.updateWhenVisible = !this.isShowing();\n        if (this.updateWhenVisible) {\n            return;\n        }\n        void this.updateThrottler.schedule(innerUpdate.bind(this));\n        function innerUpdate() {\n            return this.isShowing() ? this.doUpdate() : Promise.resolve();\n        }\n    }\n    wasShown() {\n        super.wasShown();\n        if (this.updateWhenVisible) {\n            this.update();\n        }\n    }\n    onCSSModelChanged(_event) {\n    }\n}\n//# sourceMappingURL=ElementsSidebarPane.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/**\n * Copyright 2022 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.styles-layers-pane {\n  overflow: hidden;\n  padding-left: 2px;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n  margin-top: 0;\n  padding-bottom: 2px;\n}\n\n.styles-layers-pane > div {\n  font-weight: bold;\n  margin: 8px 4px 6px;\n}\n\n.styles-layers-pane > table {\n  width: 100%;\n  border-spacing: 0;\n}\n\n.styles-layers-pane td {\n  padding: 0;\n}\n\n/*# sourceURL=layersWidget.css */\n`);\n\nexport default styles;\n","// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TreeOutline from '../../ui/components/tree_outline/tree_outline.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { ElementsPanel } from './ElementsPanel.js';\nimport layersWidgetStyles from './layersWidget.css.js';\nconst UIStrings = {\n    /**\n     * @description Title of a section in the Element State Pane Widget of the Elements panel.\n     * The widget shows the layers present in the context of the currently selected node.\n     * */\n    cssLayersTitle: 'CSS layers',\n    /**\n     * @description Tooltip text in Element State Pane Widget of the Elements panel.\n     * For a button that opens a tool that shows the layers present in the current document.\n     */\n    toggleCSSLayers: 'Toggle CSS Layers view',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/LayersWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet layersWidgetInstance;\nexport class LayersWidget extends UI.Widget.Widget {\n    cssModel;\n    layerTreeComponent = new TreeOutline.TreeOutline.TreeOutline();\n    constructor() {\n        super(true);\n        this.contentElement.className = 'styles-layers-pane';\n        this.contentElement.setAttribute('jslog', `${VisualLogging.pane('css-layers')}`);\n        UI.UIUtils.createTextChild(this.contentElement.createChild('div'), i18nString(UIStrings.cssLayersTitle));\n        this.contentElement.appendChild(this.layerTreeComponent);\n        UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n    }\n    updateModel(cssModel) {\n        if (this.cssModel === cssModel) {\n            return;\n        }\n        if (this.cssModel) {\n            this.cssModel.removeEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.update, this);\n        }\n        this.cssModel = cssModel;\n        if (this.cssModel) {\n            this.cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.update, this);\n        }\n    }\n    async wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([layersWidgetStyles]);\n        return this.update();\n    }\n    async update() {\n        if (!this.isShowing()) {\n            return;\n        }\n        let node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n        if (node) {\n            node = node.enclosingElementOrSelf();\n        }\n        if (!node) {\n            // do something meaningful?\n            return;\n        }\n        this.updateModel(node.domModel().cssModel());\n        if (!this.cssModel) {\n            return;\n        }\n        const makeTreeNode = (parentId) => (layer) => {\n            const subLayers = layer.subLayers;\n            const name = SDK.CSSModel.CSSModel.readableLayerName(layer.name);\n            const treeNodeData = layer.order + ': ' + name;\n            const id = parentId ? parentId + '.' + name : name;\n            if (!subLayers) {\n                return { treeNodeData, id };\n            }\n            return {\n                treeNodeData,\n                id,\n                children: () => Promise.resolve(subLayers.sort((layer1, layer2) => layer1.order - layer2.order).map(makeTreeNode(id))),\n            };\n        };\n        const rootLayer = await this.cssModel.getRootLayer(node.id);\n        this.layerTreeComponent.data = {\n            defaultRenderer: TreeOutline.TreeOutline.defaultRenderer,\n            tree: [makeTreeNode('')(rootLayer)],\n        };\n        // We only expand the first 5 user-defined layers to not make the\n        // view too overwhelming.\n        await this.layerTreeComponent.expandRecursively(5);\n    }\n    async revealLayer(layerName) {\n        if (!this.isShowing()) {\n            ElementsPanel.instance().showToolbarPane(this, ButtonProvider.instance().item());\n        }\n        await this.update();\n        return this.layerTreeComponent.expandToAndSelectTreeNodeId('implicit outer layer.' + layerName);\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!layersWidgetInstance || forceNew) {\n            layersWidgetInstance = new LayersWidget();\n        }\n        return layersWidgetInstance;\n    }\n}\nlet buttonProviderInstance;\nexport class ButtonProvider {\n    button;\n    constructor() {\n        this.button = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleCSSLayers), 'layers', 'layers-filled');\n        this.button.setVisible(false);\n        this.button.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.clicked, this);\n        this.button.element.classList.add('monospace');\n        this.button.element.setAttribute('jslog', `${VisualLogging.toggleSubpane('css-layers').track({ click: true })}`);\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!buttonProviderInstance || forceNew) {\n            buttonProviderInstance = new ButtonProvider();\n        }\n        return buttonProviderInstance;\n    }\n    clicked() {\n        const view = LayersWidget.instance();\n        ElementsPanel.instance().showToolbarPane(!view.isShowing() ? view : null, this.button);\n    }\n    item() {\n        return this.button;\n    }\n}\n//# sourceMappingURL=LayersWidget.js.map","// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nexport const buildPropertyDefinitionText = (property, value) => {\n    if (value === undefined) {\n        return buildPropertyName(property);\n    }\n    return '<code class=\"unbreakable-text\"><span class=\"property\">' + property + '</span>: ' + value + '</code>';\n};\nexport const buildPropertyName = (property) => {\n    return '<code class=\"unbreakable-text\"><span class=\"property\">' + property + '</span></code>';\n};\nexport const buildPropertyValue = (property) => {\n    return '<code class=\"unbreakable-text\">' + property + '</code>';\n};\nexport const isFlexContainer = (computedStyles) => {\n    if (!computedStyles) {\n        return false;\n    }\n    const display = computedStyles.get('display');\n    return display === 'flex' || display === 'inline-flex';\n};\nconst blockContainerDisplayValueSet = new Set([\n    'block',\n    'flow-root',\n    'inline-block',\n    'list-item',\n    'table-caption',\n    'table-cell',\n]);\nexport const isBlockContainer = (computedStyles) => {\n    if (!computedStyles) {\n        return false;\n    }\n    const displayValue = computedStyles.get('display');\n    if (!displayValue) {\n        return false;\n    }\n    const split = displayValue.split(' ');\n    if (split.length > 3) {\n        return false;\n    }\n    // The order of keywords is canonicalized to \"outside? inside? list-item?\"\n    // If the number of keywords is 3, it must be 'inline flow-root list-item'.\n    if (split.length === 3) {\n        return split[2] === 'list-item';\n    }\n    if (split.length === 2) {\n        return split[1] === 'list-item' && split[0] !== 'inline';\n    }\n    return blockContainerDisplayValueSet.has(split[0]);\n};\nexport const isInlineElement = (computedStyles) => {\n    if (!computedStyles) {\n        return false;\n    }\n    return computedStyles.get('display') === 'inline';\n};\n// See https://html.spec.whatwg.org/multipage/rendering.html#replaced-elements\nconst possiblyReplacedElements = new Set([\n    'audio',\n    'canvas',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'object',\n    'video',\n]);\nexport const isPossiblyReplacedElement = (nodeName) => {\n    if (!nodeName) {\n        return false;\n    }\n    return possiblyReplacedElements.has(nodeName);\n};\nexport const isGridContainer = (computedStyles) => {\n    if (!computedStyles) {\n        return false;\n    }\n    const display = computedStyles.get('display');\n    return display === 'grid' || display === 'inline-grid';\n};\nexport const isMulticolContainer = (computedStyles) => {\n    if (!computedStyles) {\n        return false;\n    }\n    const columnWidth = computedStyles.get('column-width');\n    const columnCount = computedStyles.get('column-count');\n    return columnWidth !== 'auto' || columnCount !== 'auto';\n};\n//# sourceMappingURL=CSSRuleValidatorHelper.js.map","// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport { buildPropertyDefinitionText, buildPropertyName, buildPropertyValue, isBlockContainer, isFlexContainer, isGridContainer, isInlineElement, isMulticolContainer, isPossiblyReplacedElement, } from './CSSRuleValidatorHelper.js';\nconst UIStrings = {\n    /**\n     *@description The message shown in the Style pane when the user hovers over a property that has no effect due to some other property.\n     *@example {flex-wrap: nowrap} REASON_PROPERTY_DECLARATION_CODE\n     *@example {align-content} AFFECTED_PROPERTY_DECLARATION_CODE\n     */\n    ruleViolatedBySameElementRuleReason: 'The {REASON_PROPERTY_DECLARATION_CODE} property prevents {AFFECTED_PROPERTY_DECLARATION_CODE} from having an effect.',\n    /**\n     *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to some other property.\n     *@example {flex-wrap} PROPERTY_NAME\n      @example {nowrap} PROPERTY_VALUE\n     */\n    ruleViolatedBySameElementRuleFix: 'Try setting {PROPERTY_NAME} to something other than {PROPERTY_VALUE}.',\n    /**\n     *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to not being a flex or grid container.\n     *@example {display: grid} DISPLAY_GRID_RULE\n     *@example {display: flex} DISPLAY_FLEX_RULE\n     */\n    ruleViolatedBySameElementRuleChangeFlexOrGrid: 'Try adding {DISPLAY_GRID_RULE} or {DISPLAY_FLEX_RULE} to make this element into a container.',\n    /**\n     *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to the current property value.\n     *@example {display: block} EXISTING_PROPERTY_DECLARATION\n     *@example {display: flex} TARGET_PROPERTY_DECLARATION\n     */\n    ruleViolatedBySameElementRuleChangeSuggestion: 'Try setting the {EXISTING_PROPERTY_DECLARATION} property to {TARGET_PROPERTY_DECLARATION}.',\n    /**\n     *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to properties of the parent element.\n     *@example {display: block} REASON_PROPERTY_DECLARATION_CODE\n     *@example {flex} AFFECTED_PROPERTY_DECLARATION_CODE\n     */\n    ruleViolatedByParentElementRuleReason: 'The {REASON_PROPERTY_DECLARATION_CODE} property on the parent element prevents {AFFECTED_PROPERTY_DECLARATION_CODE} from having an effect.',\n    /**\n     *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to the properties of the parent element.\n     *@example {display: block} EXISTING_PARENT_ELEMENT_RULE\n     *@example {display: flex} TARGET_PARENT_ELEMENT_RULE\n     */\n    ruleViolatedByParentElementRuleFix: 'Try setting the {EXISTING_PARENT_ELEMENT_RULE} property on the parent to {TARGET_PARENT_ELEMENT_RULE}.',\n    /**\n     *@description The warning text shown in Elements panel when font-variation-settings don't match allowed values\n     *@example {wdth} PH1\n     *@example {100} PH2\n     *@example {10} PH3\n     *@example {20} PH4\n     *@example {Arial} PH5\n     */\n    fontVariationSettingsWarning: 'Value for setting “{PH1}” {PH2} is outside the supported range [{PH3}, {PH4}] for font-family “{PH5}”.',\n    /**\n     *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect on flex or grid child items.\n     *@example {flex} CONTAINER_DISPLAY_NAME\n     *@example {align-contents} PROPERTY_NAME\n     */\n    flexGridContainerPropertyRuleReason: 'This element is a {CONTAINER_DISPLAY_NAME} item, i.e. a child of a {CONTAINER_DISPLAY_NAME} container, but {PROPERTY_NAME} only applies to containers.',\n    /**\n     *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect on flex or grid child items.\n     *@example {align-contents} PROPERTY_NAME\n     *@example {align-self} ALTERNATIVE_PROPERTY_NAME\n     */\n    flexGridContainerPropertyRuleFix: 'Try setting the {PROPERTY_NAME} on the container element or use {ALTERNATIVE_PROPERTY_NAME} instead.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/CSSRuleValidator.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class Hint {\n    #hintMessage;\n    #possibleFixMessage;\n    #learnMoreLink;\n    constructor(hintMessage, possibleFixMessage, learnMoreLink) {\n        this.#hintMessage = hintMessage;\n        this.#possibleFixMessage = possibleFixMessage;\n        this.#learnMoreLink = learnMoreLink;\n    }\n    getMessage() {\n        return this.#hintMessage;\n    }\n    getPossibleFixMessage() {\n        return this.#possibleFixMessage;\n    }\n    getLearnMoreLink() {\n        return this.#learnMoreLink;\n    }\n}\nexport class CSSRuleValidator {\n    getMetricType() {\n        return 0 /* Host.UserMetrics.CSSHintType.OTHER */;\n    }\n    #affectedProperties;\n    constructor(affectedProperties) {\n        this.#affectedProperties = affectedProperties;\n    }\n    getApplicableProperties() {\n        return this.#affectedProperties;\n    }\n}\nexport class AlignContentValidator extends CSSRuleValidator {\n    constructor() {\n        super(['align-content']);\n    }\n    getMetricType() {\n        return 1 /* Host.UserMetrics.CSSHintType.ALIGN_CONTENT */;\n    }\n    getHint(_propertyName, computedStyles) {\n        if (!computedStyles) {\n            return;\n        }\n        const isFlex = isFlexContainer(computedStyles);\n        if (!isFlex && !isBlockContainer(computedStyles) && !isGridContainer(computedStyles)) {\n            const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n            const affectedPropertyDeclarationCode = buildPropertyName('align-content');\n            return new Hint(i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n                REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n                AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n            }), i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n                PROPERTY_NAME: buildPropertyName('display'),\n                PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display')),\n            }));\n        }\n        if (!isFlex) {\n            return;\n        }\n        if (computedStyles.get('flex-wrap') !== 'nowrap') {\n            return;\n        }\n        const reasonPropertyDeclaration = buildPropertyDefinitionText('flex-wrap', 'nowrap');\n        const affectedPropertyDeclarationCode = buildPropertyName('align-content');\n        return new Hint(i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }), i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n            PROPERTY_NAME: buildPropertyName('flex-wrap'),\n            PROPERTY_VALUE: buildPropertyValue('nowrap'),\n        }));\n    }\n}\nexport class FlexItemValidator extends CSSRuleValidator {\n    constructor() {\n        super(['flex', 'flex-basis', 'flex-grow', 'flex-shrink']);\n    }\n    getMetricType() {\n        return 2 /* Host.UserMetrics.CSSHintType.FLEX_ITEM */;\n    }\n    getHint(propertyName, computedStyles, parentComputedStyles) {\n        if (!parentComputedStyles) {\n            return;\n        }\n        if (isFlexContainer(parentComputedStyles)) {\n            return;\n        }\n        const reasonPropertyDeclaration = buildPropertyDefinitionText('display', parentComputedStyles?.get('display'));\n        const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n        const targetParentPropertyDeclaration = buildPropertyDefinitionText('display', 'flex');\n        return new Hint(i18nString(UIStrings.ruleViolatedByParentElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }), i18nString(UIStrings.ruleViolatedByParentElementRuleFix, {\n            EXISTING_PARENT_ELEMENT_RULE: reasonPropertyDeclaration,\n            TARGET_PARENT_ELEMENT_RULE: targetParentPropertyDeclaration,\n        }));\n    }\n}\nexport class FlexContainerValidator extends CSSRuleValidator {\n    constructor() {\n        super(['flex-direction', 'flex-flow', 'flex-wrap']);\n    }\n    getMetricType() {\n        return 3 /* Host.UserMetrics.CSSHintType.FLEX_CONTAINER */;\n    }\n    getHint(propertyName, computedStyles) {\n        if (!computedStyles) {\n            return;\n        }\n        if (isFlexContainer(computedStyles)) {\n            return;\n        }\n        const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n        const targetRuleCode = buildPropertyDefinitionText('display', 'flex');\n        const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n        return new Hint(i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }), i18nString(UIStrings.ruleViolatedBySameElementRuleChangeSuggestion, {\n            EXISTING_PROPERTY_DECLARATION: reasonPropertyDeclaration,\n            TARGET_PROPERTY_DECLARATION: targetRuleCode,\n        }));\n    }\n}\nexport class GridContainerValidator extends CSSRuleValidator {\n    constructor() {\n        super([\n            'grid',\n            'grid-auto-columns',\n            'grid-auto-flow',\n            'grid-auto-rows',\n            'grid-template',\n            'grid-template-areas',\n            'grid-template-columns',\n            'grid-template-rows',\n        ]);\n    }\n    getMetricType() {\n        return 4 /* Host.UserMetrics.CSSHintType.GRID_CONTAINER */;\n    }\n    getHint(propertyName, computedStyles) {\n        if (isGridContainer(computedStyles)) {\n            return;\n        }\n        const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n        const targetRuleCode = buildPropertyDefinitionText('display', 'grid');\n        const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n        return new Hint(i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }), i18nString(UIStrings.ruleViolatedBySameElementRuleChangeSuggestion, {\n            EXISTING_PROPERTY_DECLARATION: reasonPropertyDeclaration,\n            TARGET_PROPERTY_DECLARATION: targetRuleCode,\n        }));\n    }\n}\nexport class GridItemValidator extends CSSRuleValidator {\n    constructor() {\n        super([\n            'grid-area',\n            'grid-column',\n            'grid-row',\n            'grid-row-end',\n            'grid-row-start',\n            // At the time of writing (November 2022), `justify-self` is only in effect in grid layout.\n            // There are no other browsers that support `justify-self` in other layouts.\n            // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Alignment/Box_Alignment_In_Block_Abspos_Tables\n            // TODO: move `justify-self` to other validator or change pop-over text if Chrome supports CSS Align in other layouts.\n            'justify-self',\n        ]);\n    }\n    getMetricType() {\n        return 5 /* Host.UserMetrics.CSSHintType.GRID_ITEM */;\n    }\n    getHint(propertyName, computedStyles, parentComputedStyles) {\n        if (!parentComputedStyles) {\n            return;\n        }\n        if (isGridContainer(parentComputedStyles)) {\n            return;\n        }\n        const reasonPropertyDeclaration = buildPropertyDefinitionText('display', parentComputedStyles?.get('display'));\n        const targetParentPropertyDeclaration = buildPropertyDefinitionText('display', 'grid');\n        const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n        return new Hint(i18nString(UIStrings.ruleViolatedByParentElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }), i18nString(UIStrings.ruleViolatedByParentElementRuleFix, {\n            EXISTING_PARENT_ELEMENT_RULE: reasonPropertyDeclaration,\n            TARGET_PARENT_ELEMENT_RULE: targetParentPropertyDeclaration,\n        }));\n    }\n}\nexport class FlexOrGridItemValidator extends CSSRuleValidator {\n    constructor() {\n        super([\n            'place-self',\n            'align-self',\n            'order',\n        ]);\n    }\n    getMetricType() {\n        return 12 /* Host.UserMetrics.CSSHintType.FLEX_OR_GRID_ITEM */;\n    }\n    getHint(propertyName, computedStyles, parentComputedStyles) {\n        if (!parentComputedStyles) {\n            return;\n        }\n        if (isFlexContainer(parentComputedStyles) || isGridContainer(parentComputedStyles)) {\n            return;\n        }\n        const reasonPropertyDeclaration = buildPropertyDefinitionText('display', parentComputedStyles?.get('display'));\n        const targetParentPropertyDeclaration = `${buildPropertyDefinitionText('display', 'flex')} or ${buildPropertyDefinitionText('display', 'grid')}`;\n        const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n        return new Hint(i18nString(UIStrings.ruleViolatedByParentElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }), i18nString(UIStrings.ruleViolatedByParentElementRuleFix, {\n            EXISTING_PARENT_ELEMENT_RULE: reasonPropertyDeclaration,\n            TARGET_PARENT_ELEMENT_RULE: targetParentPropertyDeclaration,\n        }));\n    }\n}\nexport class FlexGridValidator extends CSSRuleValidator {\n    constructor() {\n        super([\n            'justify-content',\n            'place-content', // Shorthand\t<'align-content'> <'justify-content'>?\n            'align-items',\n        ]);\n    }\n    getMetricType() {\n        return 6 /* Host.UserMetrics.CSSHintType.FLEX_GRID */;\n    }\n    getHint(propertyName, computedStyles, parentComputedStyles) {\n        if (!computedStyles) {\n            return;\n        }\n        if (isFlexContainer(computedStyles) || isGridContainer(computedStyles)) {\n            return;\n        }\n        if (parentComputedStyles && (isFlexContainer(parentComputedStyles) || isGridContainer(parentComputedStyles))) {\n            const reasonContainerDisplayName = buildPropertyValue(parentComputedStyles.get('display'));\n            const reasonPropertyName = buildPropertyName(propertyName);\n            const reasonAlternativePropertyName = buildPropertyName(propertyName === 'justify-content' ? 'justify-self' : 'align-self');\n            return new Hint(i18nString(UIStrings.flexGridContainerPropertyRuleReason, {\n                CONTAINER_DISPLAY_NAME: reasonContainerDisplayName,\n                PROPERTY_NAME: reasonPropertyName,\n            }), i18nString(UIStrings.flexGridContainerPropertyRuleFix, {\n                PROPERTY_NAME: reasonPropertyName,\n                ALTERNATIVE_PROPERTY_NAME: reasonAlternativePropertyName,\n            }));\n        }\n        const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles.get('display'));\n        const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n        return new Hint(i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }), i18nString(UIStrings.ruleViolatedBySameElementRuleChangeFlexOrGrid, {\n            DISPLAY_GRID_RULE: buildPropertyDefinitionText('display', 'grid'),\n            DISPLAY_FLEX_RULE: buildPropertyDefinitionText('display', 'flex'),\n        }));\n    }\n}\nexport class MulticolFlexGridValidator extends CSSRuleValidator {\n    constructor() {\n        super([\n            'gap',\n            'column-gap',\n            'row-gap',\n            'grid-gap',\n            'grid-column-gap',\n            'grid-column-end',\n            'grid-row-gap',\n        ]);\n    }\n    getMetricType() {\n        return 7 /* Host.UserMetrics.CSSHintType.MULTICOL_FLEX_GRID */;\n    }\n    getHint(propertyName, computedStyles) {\n        if (!computedStyles) {\n            return;\n        }\n        if (isMulticolContainer(computedStyles) || isFlexContainer(computedStyles) || isGridContainer(computedStyles)) {\n            return;\n        }\n        const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n        const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n        return new Hint(i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }), i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n            PROPERTY_NAME: buildPropertyName('display'),\n            PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display')),\n        }));\n    }\n}\nexport class PaddingValidator extends CSSRuleValidator {\n    constructor() {\n        super([\n            'padding',\n            'padding-top',\n            'padding-right',\n            'padding-bottom',\n            'padding-left',\n        ]);\n    }\n    getMetricType() {\n        return 8 /* Host.UserMetrics.CSSHintType.PADDING */;\n    }\n    getHint(propertyName, computedStyles) {\n        const display = computedStyles?.get('display');\n        if (!display) {\n            return;\n        }\n        const tableAttributes = [\n            'table-row-group',\n            'table-header-group',\n            'table-footer-group',\n            'table-row',\n            'table-column-group',\n            'table-column',\n        ];\n        if (!tableAttributes.includes(display)) {\n            return;\n        }\n        const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n        const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n        return new Hint(i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }), i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n            PROPERTY_NAME: buildPropertyName('display'),\n            PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display')),\n        }));\n    }\n}\nexport class PositionValidator extends CSSRuleValidator {\n    constructor() {\n        super([\n            'top',\n            'right',\n            'bottom',\n            'left',\n        ]);\n    }\n    getMetricType() {\n        return 9 /* Host.UserMetrics.CSSHintType.POSITION */;\n    }\n    getHint(propertyName, computedStyles) {\n        const position = computedStyles?.get('position');\n        if (!position) {\n            return;\n        }\n        if (position !== 'static') {\n            return;\n        }\n        const reasonPropertyDeclaration = buildPropertyDefinitionText('position', computedStyles?.get('position'));\n        const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n        return new Hint(i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }), i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n            PROPERTY_NAME: buildPropertyName('position'),\n            PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('position')),\n        }));\n    }\n}\nexport class ZIndexValidator extends CSSRuleValidator {\n    constructor() {\n        super([\n            'z-index',\n        ]);\n    }\n    getMetricType() {\n        return 10 /* Host.UserMetrics.CSSHintType.Z_INDEX */;\n    }\n    getHint(propertyName, computedStyles, parentComputedStyles) {\n        const position = computedStyles?.get('position');\n        if (!position) {\n            return;\n        }\n        if (['absolute', 'relative', 'fixed', 'sticky'].includes(position) || isFlexContainer(parentComputedStyles) ||\n            isGridContainer(parentComputedStyles)) {\n            return;\n        }\n        const reasonPropertyDeclaration = buildPropertyDefinitionText('position', computedStyles?.get('position'));\n        const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n        return new Hint(i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }), i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n            PROPERTY_NAME: buildPropertyName('position'),\n            PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('position')),\n        }));\n    }\n}\n/**\n * Validates if CSS width/height are having an effect on an element.\n * See \"Applies to\" in https://www.w3.org/TR/css-sizing-3/#propdef-width.\n * See \"Applies to\" in https://www.w3.org/TR/css-sizing-3/#propdef-height.\n */\nexport class SizingValidator extends CSSRuleValidator {\n    constructor() {\n        super([\n            'width',\n            'height',\n        ]);\n    }\n    getMetricType() {\n        return 11 /* Host.UserMetrics.CSSHintType.SIZING */;\n    }\n    getHint(propertyName, computedStyles, parentComputedStyles, nodeName) {\n        if (!computedStyles || !nodeName) {\n            return;\n        }\n        if (!isInlineElement(computedStyles)) {\n            return;\n        }\n        // See https://html.spec.whatwg.org/multipage/rendering.html#replaced-elements.\n        if (isPossiblyReplacedElement(nodeName)) {\n            return;\n        }\n        const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n        const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n        return new Hint(i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n            REASON_PROPERTY_DECLARATION_CODE: reasonPropertyDeclaration,\n            AFFECTED_PROPERTY_DECLARATION_CODE: affectedPropertyDeclarationCode,\n        }), i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n            PROPERTY_NAME: buildPropertyName('display'),\n            PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display')),\n        }));\n    }\n}\n/**\n * Checks that font variation settings are applicable to the actual font.\n */\nexport class FontVariationSettingsValidator extends CSSRuleValidator {\n    constructor() {\n        super([\n            'font-variation-settings',\n        ]);\n    }\n    getMetricType() {\n        return 13 /* Host.UserMetrics.CSSHintType.FONT_VARIATION_SETTINGS */;\n    }\n    getHint(propertyName, computedStyles, parentComputedStyles, nodeName, fontFaces) {\n        if (!computedStyles) {\n            return;\n        }\n        const value = computedStyles.get('font-variation-settings');\n        if (!value) {\n            return;\n        }\n        const fontFamily = computedStyles.get('font-family');\n        if (!fontFamily) {\n            return;\n        }\n        const fontFamilies = new Set(SDK.CSSPropertyParser.parseFontFamily(fontFamily));\n        const matchingFontFaces = (fontFaces || []).filter(f => fontFamilies.has(f.getFontFamily()));\n        const variationSettings = SDK.CSSPropertyParser.parseFontVariationSettings(value);\n        const warnings = [];\n        for (const elementSetting of variationSettings) {\n            for (const font of matchingFontFaces) {\n                const fontSetting = font.getVariationAxisByTag(elementSetting.tag);\n                if (!fontSetting) {\n                    continue;\n                }\n                if (elementSetting.value < fontSetting.minValue || elementSetting.value > fontSetting.maxValue) {\n                    warnings.push(i18nString(UIStrings.fontVariationSettingsWarning, {\n                        PH1: elementSetting.tag,\n                        PH2: elementSetting.value,\n                        PH3: fontSetting.minValue,\n                        PH4: fontSetting.maxValue,\n                        PH5: font.getFontFamily(),\n                    }));\n                }\n            }\n        }\n        if (!warnings.length) {\n            return;\n        }\n        return new Hint(warnings.join(' '), '');\n    }\n}\nconst CSS_RULE_VALIDATORS = [\n    AlignContentValidator,\n    FlexContainerValidator,\n    FlexGridValidator,\n    FlexItemValidator,\n    FlexOrGridItemValidator,\n    FontVariationSettingsValidator,\n    GridContainerValidator,\n    GridItemValidator,\n    MulticolFlexGridValidator,\n    PaddingValidator,\n    PositionValidator,\n    SizingValidator,\n    ZIndexValidator,\n];\nconst setupCSSRulesValidators = () => {\n    const validatorsMap = new Map();\n    for (const validatorClass of CSS_RULE_VALIDATORS) {\n        const validator = new validatorClass();\n        const affectedProperties = validator.getApplicableProperties();\n        for (const affectedProperty of affectedProperties) {\n            let propertyValidators = validatorsMap.get(affectedProperty);\n            if (propertyValidators === undefined) {\n                propertyValidators = [];\n            }\n            propertyValidators.push(validator);\n            validatorsMap.set(affectedProperty, propertyValidators);\n        }\n    }\n    return validatorsMap;\n};\nexport const cssRuleValidatorsMap = setupCSSRulesValidators();\n//# sourceMappingURL=CSSRuleValidator.js.map","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nexport function getCssDeclarationAsJavascriptProperty(declaration) {\n    const { name, value } = declaration;\n    const declarationNameAsJs = name.startsWith('--') ? `'${name}'` : name.replace(/-([a-z])/gi, (_str, group) => group.toUpperCase());\n    const declarationAsJs = `'${value.replaceAll('\\'', '\\\\\\'')}'`;\n    return `${declarationNameAsJs}: ${declarationAsJs}`;\n}\n//# sourceMappingURL=StylePropertyUtils.js.map","// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as ColorPicker from '../../ui/legacy/components/color_picker/color_picker.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { BezierPopoverIcon, ColorSwatchPopoverIcon, ShadowSwatchPopoverHelper, } from './ColorSwatchPopoverIcon.js';\nimport * as ElementsComponents from './components/components.js';\nimport { cssRuleValidatorsMap } from './CSSRuleValidator.js';\nimport { ElementsPanel } from './ElementsPanel.js';\nimport { AnchorFunctionMatcher, AngleMatch, AngleMatcher, BezierMatcher, ColorMatch, ColorMatcher, ColorMixMatch, ColorMixMatcher, CSSWideKeywordMatcher, FlexGridMatcher, FontMatcher, GridTemplateMatcher, LengthMatcher, LightDarkColorMatcher, LinearGradientMatcher, LinkableNameMatcher, PositionAnchorMatcher, PositionTryMatcher, ShadowMatcher, } from './PropertyMatchers.js';\nimport { Renderer, RenderingContext, StringRenderer, URLRenderer } from './PropertyRenderer.js';\nimport { StyleEditorWidget } from './StyleEditorWidget.js';\nimport { getCssDeclarationAsJavascriptProperty } from './StylePropertyUtils.js';\nimport { CSSPropertyPrompt, REGISTERED_PROPERTY_SECTION_NAME, StylesSidebarPane, } from './StylesSidebarPane.js';\nconst ASTUtils = SDK.CSSPropertyParser.ASTUtils;\nconst FlexboxEditor = ElementsComponents.StylePropertyEditor.FlexboxEditor;\nconst GridEditor = ElementsComponents.StylePropertyEditor.GridEditor;\nexport const activeHints = new WeakMap();\nconst UIStrings = {\n    /**\n     *@description Text in Color Swatch Popover Icon of the Elements panel\n     */\n    shiftClickToChangeColorFormat: 'Shift + Click to change color format.',\n    /**\n     *@description Swatch icon element title in Color Swatch Popover Icon of the Elements panel\n     *@example {Shift + Click to change color format.} PH1\n     */\n    openColorPickerS: 'Open color picker. {PH1}',\n    /**\n     *@description Context menu item for style property in edit mode\n     */\n    togglePropertyAndContinueEditing: 'Toggle property and continue editing',\n    /**\n     *@description Context menu item for style property in edit mode\n     */\n    revealInSourcesPanel: 'Reveal in Sources panel',\n    /**\n     *@description A context menu item in Styles panel to copy CSS declaration\n     */\n    copyDeclaration: 'Copy declaration',\n    /**\n     *@description A context menu item in Styles panel to copy CSS property\n     */\n    copyProperty: 'Copy property',\n    /**\n     *@description A context menu item in the Watch Expressions Sidebar Pane of the Sources panel and Network pane request.\n     */\n    copyValue: 'Copy value',\n    /**\n     *@description A context menu item in Styles panel to copy CSS rule\n     */\n    copyRule: 'Copy rule',\n    /**\n     *@description A context menu item in Styles panel to copy all CSS declarations\n     */\n    copyAllDeclarations: 'Copy all declarations',\n    /**\n     *@description  A context menu item in Styles panel to copy all the CSS changes\n     */\n    copyAllCSSChanges: 'Copy all CSS changes',\n    /**\n     *@description A context menu item in Styles panel to view the computed CSS property value.\n     */\n    viewComputedValue: 'View computed value',\n    /**\n     * @description Title of the button that opens the flexbox editor in the Styles panel.\n     */\n    flexboxEditorButton: 'Open `flexbox` editor',\n    /**\n     * @description Title of the button that opens the CSS Grid editor in the Styles panel.\n     */\n    gridEditorButton: 'Open `grid` editor',\n    /**\n     *@description A context menu item in Styles panel to copy CSS declaration as JavaScript property.\n     */\n    copyCssDeclarationAsJs: 'Copy declaration as JS',\n    /**\n     *@description A context menu item in Styles panel to copy all declarations of CSS rule as JavaScript properties.\n     */\n    copyAllCssDeclarationsAsJs: 'Copy all declarations as JS',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/StylePropertyTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst parentMap = new WeakMap();\nexport class FlexGridRenderer {\n    #treeElement;\n    constructor(treeElement) {\n        this.#treeElement = treeElement;\n    }\n    matcher() {\n        return new FlexGridMatcher();\n    }\n    render(match, context) {\n        const key = `${this.#treeElement.section().getSectionIdx()}_${this.#treeElement.section().nextEditorTriggerButtonIdx}`;\n        const button = StyleEditorWidget.createTriggerButton(this.#treeElement.parentPane(), this.#treeElement.section(), match.isFlex ? FlexboxEditor : GridEditor, match.isFlex ? i18nString(UIStrings.flexboxEditorButton) : i18nString(UIStrings.gridEditorButton), key);\n        button.setAttribute('jslog', `${VisualLogging.showStyleEditor().track({ click: true }).context(match.isFlex ? 'flex' : 'grid')}`);\n        this.#treeElement.section().nextEditorTriggerButtonIdx++;\n        button.addEventListener('click', () => {\n            Host.userMetrics.swatchActivated(match.isFlex ? 6 /* Host.UserMetrics.SwatchType.FLEX */ : 5 /* Host.UserMetrics.SwatchType.GRID */);\n        });\n        const helper = this.#treeElement.parentPane().swatchPopoverHelper();\n        if (helper.isShowing(StyleEditorWidget.instance()) && StyleEditorWidget.instance().getTriggerKey() === key) {\n            helper.setAnchorElement(button);\n        }\n        return [...Renderer.render(ASTUtils.siblings(ASTUtils.declValue(match.node)), context).nodes, button];\n    }\n}\nexport class CSSWideKeywordRenderer {\n    #treeElement;\n    constructor(treeElement) {\n        this.#treeElement = treeElement;\n    }\n    matcher() {\n        return new CSSWideKeywordMatcher(this.#treeElement.property, this.#treeElement.matchedStyles());\n    }\n    render(match, context) {\n        const resolvedProperty = match.resolveProperty();\n        if (!resolvedProperty) {\n            return [document.createTextNode(match.text)];\n        }\n        const swatch = new InlineEditor.LinkSwatch.LinkSwatch();\n        UI.UIUtils.createTextChild(swatch, match.text);\n        swatch.data = {\n            text: match.text,\n            isDefined: Boolean(resolvedProperty),\n            onLinkActivate: () => resolvedProperty && this.#treeElement.parentPane().jumpToDeclaration(resolvedProperty),\n            jslogContext: 'css-wide-keyword-link',\n        };\n        if (SDK.CSSMetadata.cssMetadata().isColorAwareProperty(resolvedProperty.name) ||\n            SDK.CSSMetadata.cssMetadata().isCustomProperty(resolvedProperty.name)) {\n            const color = Common.Color.parse(context.matchedResult.getComputedText(match.node));\n            if (color) {\n                return [new ColorRenderer(this.#treeElement).renderColorSwatch(color, swatch)];\n            }\n        }\n        return [swatch];\n    }\n}\nexport class VariableRenderer {\n    #treeElement;\n    #style;\n    constructor(treeElement, style) {\n        this.#treeElement = treeElement;\n        this.#style = style;\n    }\n    matcher() {\n        return new SDK.CSSPropertyParser.VariableMatcher(this.computedText.bind(this));\n    }\n    resolveVariable(match) {\n        return this.#matchedStyles.computeCSSVariable(this.#style, match.name);\n    }\n    fallbackValue(match) {\n        if (match.fallback.length === 0 ||\n            match.matching.hasUnresolvedVarsRange(match.fallback[0], match.fallback[match.fallback.length - 1])) {\n            return null;\n        }\n        return match.matching.getComputedTextRange(match.fallback[0], match.fallback[match.fallback.length - 1]);\n    }\n    // clang-format off\n    computedText(match) {\n        return this.resolveVariable(match)?.value ?? this.fallbackValue(match);\n    }\n    // clang-format on\n    render(match, context) {\n        const renderedFallback = match.fallback.length > 0 ? Renderer.render(match.fallback, context) : undefined;\n        const { declaration, value: variableValue } = this.resolveVariable(match) ?? {};\n        const fromFallback = !variableValue;\n        const computedValue = variableValue ?? this.fallbackValue(match);\n        const varSwatch = new InlineEditor.LinkSwatch.CSSVarSwatch();\n        varSwatch.data = {\n            computedValue,\n            variableName: match.name,\n            fromFallback,\n            fallbackText: match.fallback.map(n => context.ast.text(n)).join(' '),\n            onLinkActivate: name => this.#handleVarDefinitionActivate(declaration ?? name),\n        };\n        if (renderedFallback?.nodes.length) {\n            // When slotting someting into the fallback slot, also emit text children so that .textContent produces the\n            // correct var value.\n            varSwatch.appendChild(document.createTextNode(`var(${match.name}`));\n            const span = varSwatch.appendChild(document.createElement('span'));\n            span.appendChild(document.createTextNode(', '));\n            span.slot = 'fallback';\n            renderedFallback.nodes.forEach(n => span.appendChild(n));\n            varSwatch.appendChild(document.createTextNode(')'));\n        }\n        else {\n            UI.UIUtils.createTextChild(varSwatch, match.text);\n        }\n        if (varSwatch.link) {\n            this.#pane.addPopover(varSwatch.link, {\n                contents: () => this.#treeElement.getVariablePopoverContents(match.name, variableValue ?? null),\n                jslogContext: 'elements.css-var',\n            });\n        }\n        const color = computedValue && Common.Color.parse(computedValue);\n        if (!color) {\n            return [varSwatch];\n        }\n        const colorSwatch = new ColorRenderer(this.#treeElement).renderColorSwatch(color, varSwatch);\n        context.addControl('color', colorSwatch);\n        if (fromFallback) {\n            renderedFallback?.cssControls.get('color')?.forEach(innerSwatch => innerSwatch.addEventListener(InlineEditor.ColorSwatch.ColorChangedEvent.eventName, ev => {\n                colorSwatch.setColor(ev.data.color);\n            }));\n        }\n        return [colorSwatch];\n    }\n    get #pane() {\n        return this.#treeElement.parentPane();\n    }\n    get #matchedStyles() {\n        return this.#treeElement.matchedStyles();\n    }\n    #handleVarDefinitionActivate(variable) {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.CustomPropertyLinkClicked);\n        Host.userMetrics.swatchActivated(0 /* Host.UserMetrics.SwatchType.VAR_LINK */);\n        if (typeof variable === 'string') {\n            this.#pane.jumpToProperty(variable) ||\n                this.#pane.jumpToProperty('initial-value', variable, REGISTERED_PROPERTY_SECTION_NAME);\n        }\n        else if (variable.declaration instanceof SDK.CSSProperty.CSSProperty) {\n            this.#pane.revealProperty(variable.declaration);\n        }\n        else if (variable.declaration instanceof SDK.CSSMatchedStyles.CSSRegisteredProperty) {\n            this.#pane.jumpToProperty('initial-value', variable.name, REGISTERED_PROPERTY_SECTION_NAME);\n        }\n    }\n}\nexport class LinearGradientRenderer {\n    matcher() {\n        return new LinearGradientMatcher();\n    }\n    render(match, context) {\n        const children = ASTUtils.children(match.node);\n        const { nodes, cssControls } = Renderer.render(children, context);\n        const angles = cssControls.get('angle');\n        const angle = angles?.length === 1 ? angles[0] : null;\n        if (angle instanceof InlineEditor.CSSAngle.CSSAngle) {\n            angle.updateProperty(context.matchedResult.getComputedText(match.node));\n            const args = ASTUtils.callArgs(match.node);\n            const angleNode = args[0]?.find(node => context.matchedResult.getMatch(node) instanceof AngleMatch);\n            const angleMatch = angleNode && context.matchedResult.getMatch(angleNode);\n            if (angleMatch) {\n                angle.addEventListener(InlineEditor.InlineEditorUtils.ValueChangedEvent.eventName, ev => {\n                    angle.updateProperty(context.matchedResult.getComputedText(match.node, new Map([[angleMatch, ev.data.value]])));\n                });\n            }\n        }\n        return nodes;\n    }\n}\nexport class ColorRenderer {\n    treeElement;\n    constructor(treeElement) {\n        this.treeElement = treeElement;\n    }\n    matcher() {\n        const getCurrentColorCallback = () => this.treeElement.getComputedStyle('color');\n        return new ColorMatcher(getCurrentColorCallback);\n    }\n    #getValueChild(match, context) {\n        const valueChild = document.createElement('span');\n        if (match.node.name === 'ColorLiteral' || match.node.name === 'ValueName') {\n            valueChild.appendChild(document.createTextNode(match.text));\n            return { valueChild };\n        }\n        const { cssControls } = Renderer.renderInto(ASTUtils.children(match.node), context, valueChild);\n        return { valueChild, cssControls };\n    }\n    render(match, context) {\n        const { valueChild, cssControls } = this.#getValueChild(match, context);\n        let colorText = context.matchedResult.getComputedText(match.node);\n        // Evaluate relative color values\n        if (match.node.name === 'CallExpression' && colorText.match(/^[^)]*\\(\\W*from\\W+/) &&\n            !context.matchedResult.hasUnresolvedVars(match.node) && CSS.supports('color', colorText)) {\n            const fakeSpan = document.body.appendChild(document.createElement('span'));\n            fakeSpan.style.backgroundColor = colorText;\n            colorText = window.getComputedStyle(fakeSpan).backgroundColor?.toString() || colorText;\n            fakeSpan.remove();\n        }\n        // Now try render a color swatch if the result is parsable.\n        const color = Common.Color.parse(colorText);\n        if (!color) {\n            return [document.createTextNode(colorText)];\n        }\n        const swatch = this.renderColorSwatch(color, valueChild);\n        context.addControl('color', swatch);\n        // For hsl/hwb colors, hook up the angle swatch for the hue.\n        if (cssControls && match.node.name === 'CallExpression' &&\n            context.ast.text(match.node.getChild('Callee')).match(/^(hsla?|hwba?)/)) {\n            const [angle] = cssControls.get('angle') ?? [];\n            if (angle instanceof InlineEditor.CSSAngle.CSSAngle) {\n                angle.updateProperty(swatch.getColor()?.asString() ?? '');\n                angle.addEventListener(InlineEditor.InlineEditorUtils.ValueChangedEvent.eventName, ev => {\n                    const hue = Common.Color.parseHueNumeric(ev.data.value);\n                    const color = swatch.getColor();\n                    if (!hue || !color) {\n                        return;\n                    }\n                    if (color.is(\"hsl\" /* Common.Color.Format.HSL */) || color.is(\"hsla\" /* Common.Color.Format.HSLA */)) {\n                        swatch.setColor(new Common.Color.HSL(hue, color.s, color.l, color.alpha));\n                    }\n                    else if (color.is(\"hwb\" /* Common.Color.Format.HWB */) || color.is(\"hwba\" /* Common.Color.Format.HWBA */)) {\n                        swatch.setColor(new Common.Color.HWB(hue, color.w, color.b, color.alpha));\n                    }\n                    angle.updateProperty(swatch.getColor()?.asString() ?? '');\n                });\n            }\n        }\n        return [swatch];\n    }\n    renderColorSwatch(color, valueChild) {\n        const editable = this.treeElement.editable();\n        const shiftClickMessage = i18nString(UIStrings.shiftClickToChangeColorFormat);\n        const tooltip = editable ? i18nString(UIStrings.openColorPickerS, { PH1: shiftClickMessage }) : '';\n        const swatch = new InlineEditor.ColorSwatch.ColorSwatch(tooltip);\n        swatch.setReadonly(!editable);\n        if (color) {\n            swatch.renderColor(color);\n        }\n        if (!valueChild) {\n            valueChild = swatch.createChild('span');\n            if (color) {\n                valueChild.textContent = color.getAuthoredText() ?? color.asString();\n            }\n        }\n        swatch.appendChild(valueChild);\n        const onColorChanged = () => {\n            void this.treeElement.applyStyleText(this.treeElement.renderedPropertyText(), false);\n        };\n        swatch.addEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, () => {\n            Host.userMetrics.swatchActivated(2 /* Host.UserMetrics.SwatchType.COLOR */);\n        });\n        swatch.addEventListener(InlineEditor.ColorSwatch.ColorChangedEvent.eventName, onColorChanged);\n        if (editable) {\n            const swatchIcon = new ColorSwatchPopoverIcon(this.treeElement, this.treeElement.parentPane().swatchPopoverHelper(), swatch);\n            swatchIcon.addEventListener(\"colorchanged\" /* ColorSwatchPopoverIconEvents.COLOR_CHANGED */, ev => {\n                const color = Common.Color.parse(ev.data);\n                if (color) {\n                    swatch.setColorText(color);\n                }\n            });\n            void this.#addColorContrastInfo(swatchIcon);\n        }\n        return swatch;\n    }\n    async #addColorContrastInfo(swatchIcon) {\n        const cssModel = this.treeElement.parentPane().cssModel();\n        const node = this.treeElement.node();\n        if (this.treeElement.property.name !== 'color' || !cssModel || !node || typeof node.id === 'undefined') {\n            return;\n        }\n        const contrastInfo = new ColorPicker.ContrastInfo.ContrastInfo(await cssModel.getBackgroundColors(node.id));\n        swatchIcon.setContrastInfo(contrastInfo);\n    }\n}\nexport class LightDarkColorRenderer {\n    #treeElement;\n    constructor(treeElement) {\n        this.#treeElement = treeElement;\n    }\n    matcher() {\n        return new LightDarkColorMatcher();\n    }\n    render(match, context) {\n        const content = document.createElement('span');\n        content.appendChild(document.createTextNode('light-dark('));\n        const light = content.appendChild(document.createElement('span'));\n        content.appendChild(document.createTextNode(', '));\n        const dark = content.appendChild(document.createElement('span'));\n        content.appendChild(document.createTextNode(')'));\n        const { cssControls: lightControls } = Renderer.renderInto(match.light, context, light);\n        const { cssControls: darkControls } = Renderer.renderInto(match.dark, context, dark);\n        if (context.matchedResult.hasUnresolvedVars(match.node)) {\n            return [content];\n        }\n        const color = Common.Color.parse(context.matchedResult.getComputedTextRange(match.light[0], match.light[match.light.length - 1]));\n        if (!color) {\n            return [content];\n        }\n        // Pass an undefined color here to insert a placeholder swatch that will be filled in from the async\n        // applyColorScheme below.\n        const colorSwatch = new ColorRenderer(this.#treeElement).renderColorSwatch(undefined, content);\n        context.addControl('color', colorSwatch);\n        void this.applyColorScheme(match, context, colorSwatch, light, dark, lightControls, darkControls);\n        return [colorSwatch];\n    }\n    async applyColorScheme(match, context, colorSwatch, light, dark, lightControls, darkControls) {\n        const activeColor = await this.#activeColor(match);\n        if (!activeColor) {\n            return;\n        }\n        const activeColorSwatches = (activeColor === match.light ? lightControls : darkControls).get('color');\n        activeColorSwatches?.forEach(swatch => swatch.addEventListener(InlineEditor.ColorSwatch.ColorChangedEvent.eventName, ev => colorSwatch.setColor(ev.data.color)));\n        const inactiveColor = (activeColor === match.light) ? dark : light;\n        const colorText = context.matchedResult.getComputedTextRange(activeColor[0], activeColor[activeColor.length - 1]);\n        const color = colorText && Common.Color.parse(colorText);\n        inactiveColor.style.textDecoration = 'line-through';\n        if (color) {\n            colorSwatch.renderColor(color);\n        }\n    }\n    // Returns the syntax node group corresponding the active color scheme:\n    // If the element has color-scheme set to light or dark, return the respective group.\n    // If the element has color-scheme set to both light and dark, we check the prefers-color-scheme media query.\n    async #activeColor(match) {\n        const activeColorSchemes = this.#treeElement.getComputedStyle('color-scheme')?.split(' ') ?? [];\n        const hasLight = activeColorSchemes.includes(\"light\" /* SDK.CSSModel.ColorScheme.LIGHT */);\n        const hasDark = activeColorSchemes.includes(\"dark\" /* SDK.CSSModel.ColorScheme.DARK */);\n        if (!hasDark && !hasLight) {\n            return match.light;\n        }\n        if (!hasLight) {\n            return match.dark;\n        }\n        if (!hasDark) {\n            return match.light;\n        }\n        switch (await this.#treeElement.parentPane().cssModel()?.colorScheme()) {\n            case \"dark\" /* SDK.CSSModel.ColorScheme.DARK */:\n                return match.dark;\n            case \"light\" /* SDK.CSSModel.ColorScheme.LIGHT */:\n                return match.light;\n            default:\n                return undefined;\n        }\n    }\n}\nexport class ColorMixRenderer {\n    #pane;\n    constructor(pane) {\n        this.#pane = pane;\n    }\n    render(match, context) {\n        const hookUpColorArg = (node, onChange) => {\n            if (node instanceof InlineEditor.ColorMixSwatch.ColorMixSwatch ||\n                node instanceof InlineEditor.ColorSwatch.ColorSwatch) {\n                if (node instanceof InlineEditor.ColorSwatch.ColorSwatch) {\n                    node.addEventListener(InlineEditor.ColorSwatch.ColorChangedEvent.eventName, ev => onChange(ev.data.color.getAuthoredText() ?? ev.data.color.asString()));\n                }\n                else {\n                    node.addEventListener(\"colorChanged\" /* InlineEditor.ColorMixSwatch.Events.COLOR_CHANGED */, ev => onChange(ev.data.text));\n                }\n                const color = node.getText();\n                if (color) {\n                    onChange(color);\n                    return true;\n                }\n            }\n            return false;\n        };\n        const contentChild = document.createElement('span');\n        contentChild.appendChild(document.createTextNode('color-mix('));\n        Renderer.renderInto(match.space, context, contentChild);\n        contentChild.appendChild(document.createTextNode(', '));\n        const color1 = Renderer.renderInto(match.color1, context, contentChild).cssControls.get('color') ?? [];\n        contentChild.appendChild(document.createTextNode(', '));\n        const color2 = Renderer.renderInto(match.color2, context, contentChild).cssControls.get('color') ?? [];\n        contentChild.appendChild(document.createTextNode(')'));\n        if (context.matchedResult.hasUnresolvedVars(match.node) || color1.length !== 1 || color2.length !== 1) {\n            return [contentChild];\n        }\n        const swatch = new InlineEditor.ColorMixSwatch.ColorMixSwatch();\n        if (!hookUpColorArg(color1[0], text => swatch.setFirstColor(text)) ||\n            !hookUpColorArg(color2[0], text => swatch.setSecondColor(text))) {\n            return [contentChild];\n        }\n        const space = match.space.map(space => context.matchedResult.getComputedText(space)).join(' ');\n        const color1Text = match.color1.map(color => context.matchedResult.getComputedText(color)).join(' ');\n        const color2Text = match.color2.map(color => context.matchedResult.getComputedText(color)).join(' ');\n        swatch.appendChild(contentChild);\n        swatch.setColorMixText(`color-mix(${space}, ${color1Text}, ${color2Text})`);\n        swatch.setRegisterPopoverCallback(swatch => {\n            if (swatch.icon) {\n                this.#pane.addPopover(swatch.icon, {\n                    contents: () => {\n                        const color = swatch.mixedColor();\n                        if (!color) {\n                            return undefined;\n                        }\n                        const span = document.createElement('span');\n                        span.style.padding = '11px 7px';\n                        const rgb = color.as(\"hex\" /* Common.Color.Format.HEX */);\n                        const text = rgb.isGamutClipped() ? color.asString() : rgb.asString();\n                        if (!text) {\n                            return undefined;\n                        }\n                        span.appendChild(document.createTextNode(text));\n                        return span;\n                    },\n                    jslogContext: 'elements.css-color-mix',\n                });\n            }\n        });\n        context.addControl('color', swatch);\n        return [swatch];\n    }\n    matcher() {\n        return new ColorMixMatcher();\n    }\n}\nexport class AngleRenderer {\n    #treeElement;\n    constructor(treeElement) {\n        this.#treeElement = treeElement;\n    }\n    render(match, context) {\n        const angleText = match.text;\n        if (!this.#treeElement.editable()) {\n            return [document.createTextNode(angleText)];\n        }\n        const cssAngle = new InlineEditor.CSSAngle.CSSAngle();\n        cssAngle.setAttribute('jslog', `${VisualLogging.showStyleEditor().track({ click: true }).context('css-angle')}`);\n        const valueElement = document.createElement('span');\n        valueElement.textContent = angleText;\n        cssAngle.data = {\n            angleText,\n            containingPane: this.#treeElement.parentPane().element.enclosingNodeOrSelfWithClass('style-panes-wrapper'),\n        };\n        cssAngle.append(valueElement);\n        cssAngle.addEventListener('popovertoggled', ({ data }) => {\n            const section = this.#treeElement.section();\n            if (!section) {\n                return;\n            }\n            if (data.open) {\n                this.#treeElement.parentPane().hideAllPopovers();\n                this.#treeElement.parentPane().activeCSSAngle = cssAngle;\n                Host.userMetrics.swatchActivated(7 /* Host.UserMetrics.SwatchType.ANGLE */);\n            }\n            section.element.classList.toggle('has-open-popover', data.open);\n            this.#treeElement.parentPane().setEditingStyle(data.open);\n            // Commit the value as a major change after the angle popover is closed.\n            if (!data.open) {\n                void this.#treeElement.applyStyleText(this.#treeElement.renderedPropertyText(), true);\n            }\n        });\n        cssAngle.addEventListener('valuechanged', async ({ data }) => {\n            valueElement.textContent = data.value;\n            await this.#treeElement.applyStyleText(this.#treeElement.renderedPropertyText(), false);\n        });\n        cssAngle.addEventListener('unitchanged', ({ data }) => {\n            valueElement.textContent = data.value;\n        });\n        context.addControl('angle', cssAngle);\n        return [cssAngle];\n    }\n    matcher() {\n        return new AngleMatcher();\n    }\n}\nexport class LinkableNameRenderer {\n    #treeElement;\n    constructor(treeElement) {\n        this.#treeElement = treeElement;\n    }\n    #getLinkData(match) {\n        switch (match.propertyName) {\n            case \"animation\" /* LinkableNameProperties.ANIMATION */:\n            case \"animation-name\" /* LinkableNameProperties.ANIMATION_NAME */:\n                return {\n                    jslogContext: 'css-animation-name',\n                    metric: 1 /* Host.UserMetrics.SwatchType.ANIMATION_NAME_LINK */,\n                    ruleBlock: '@keyframes',\n                    isDefined: Boolean(this.#treeElement.matchedStyles().keyframes().find(kf => kf.name().text === match.text)),\n                };\n            case \"font-palette\" /* LinkableNameProperties.FONT_PALETTE */:\n                return {\n                    jslogContext: 'css-font-palette',\n                    metric: null,\n                    ruleBlock: '@font-palette-values',\n                    isDefined: this.#treeElement.matchedStyles().fontPaletteValuesRule()?.name().text === match.text,\n                };\n            case \"position-try\" /* LinkableNameProperties.POSITION_TRY */:\n            case \"position-try-fallbacks\" /* LinkableNameProperties.POSITION_TRY_FALLBACKS */:\n                return {\n                    jslogContext: 'css-position-try',\n                    metric: 10 /* Host.UserMetrics.SwatchType.POSITION_TRY_LINK */,\n                    ruleBlock: '@position-try',\n                    isDefined: Boolean(this.#treeElement.matchedStyles().positionTryRules().find(pt => pt.name().text === match.text)),\n                };\n        }\n    }\n    render(match) {\n        const swatch = new InlineEditor.LinkSwatch.LinkSwatch();\n        UI.UIUtils.createTextChild(swatch, match.text);\n        const { metric, jslogContext, ruleBlock, isDefined } = this.#getLinkData(match);\n        swatch.data = {\n            text: match.text,\n            isDefined,\n            onLinkActivate: () => {\n                metric && Host.userMetrics.swatchActivated(metric);\n                this.#treeElement.parentPane().jumpToSectionBlock(`${ruleBlock} ${match.text}`);\n            },\n            jslogContext,\n        };\n        return [swatch];\n    }\n    matcher() {\n        return new LinkableNameMatcher();\n    }\n}\nexport class BezierRenderer {\n    #treeElement;\n    constructor(treeElement) {\n        this.#treeElement = treeElement;\n    }\n    render(match) {\n        return [this.renderSwatch(match)];\n    }\n    renderSwatch(match) {\n        if (!this.#treeElement.editable()) {\n            return document.createTextNode(match.text);\n        }\n        const swatchPopoverHelper = this.#treeElement.parentPane().swatchPopoverHelper();\n        const swatch = InlineEditor.Swatches.BezierSwatch.create();\n        swatch.iconElement().addEventListener('click', () => {\n            Host.userMetrics.swatchActivated(3 /* Host.UserMetrics.SwatchType.ANIMATION_TIMING */);\n        });\n        swatch.setBezierText(match.text);\n        new BezierPopoverIcon({ treeElement: this.#treeElement, swatchPopoverHelper, swatch });\n        return swatch;\n    }\n    matcher() {\n        return new BezierMatcher();\n    }\n}\n// The shadow model is an abstraction over the various shadow properties on the one hand and the order they were defined\n// in on the other, so that modifications through the shadow editor can retain the property order in the authored text.\n// The model also looks through var()s by keeping a mapping between individual properties and any var()s they are coming\n// from, replacing the var() functions as needed with concrete values when edited.\nexport class ShadowModel {\n    #properties;\n    #shadowType;\n    #context;\n    constructor(shadowType, properties, context) {\n        this.#shadowType = shadowType;\n        this.#properties = properties;\n        this.#context = context;\n    }\n    isBoxShadow() {\n        return this.#shadowType === \"boxShadow\" /* ShadowType.BOX_SHADOW */;\n    }\n    inset() {\n        return Boolean(this.#properties.find(property => property.propertyType === \"inset\" /* ShadowPropertyType.INSET */));\n    }\n    #length(lengthType) {\n        return this.#properties.find((property) => property.propertyType === lengthType)\n            ?.length ??\n            InlineEditor.CSSShadowEditor.CSSLength.zero();\n    }\n    offsetX() {\n        return this.#length(\"x\" /* ShadowPropertyType.X */);\n    }\n    offsetY() {\n        return this.#length(\"y\" /* ShadowPropertyType.Y */);\n    }\n    blurRadius() {\n        return this.#length(\"blur\" /* ShadowPropertyType.BLUR */);\n    }\n    spreadRadius() {\n        return this.#length(\"spread\" /* ShadowPropertyType.SPREAD */);\n    }\n    #needsExpansion(property) {\n        return Boolean(property.expansionContext && property.source);\n    }\n    #expandPropertyIfNeeded(property) {\n        if (this.#needsExpansion(property)) {\n            // Rendering prefers `source` if present. It's sufficient to clear it in order to switch rendering to render the\n            // individual properties directly.\n            const source = property.source;\n            this.#properties.filter(property => property.source === source).forEach(property => {\n                property.source = null;\n            });\n        }\n    }\n    #expandOrGetProperty(propertyType) {\n        const index = this.#properties.findIndex(property => property.propertyType === propertyType);\n        const property = index >= 0 ? this.#properties[index] : undefined;\n        property && this.#expandPropertyIfNeeded(property);\n        return { property, index };\n    }\n    setInset(inset) {\n        if (!this.isBoxShadow()) {\n            return;\n        }\n        const { property, index } = this.#expandOrGetProperty(\"inset\" /* ShadowPropertyType.INSET */);\n        if (property) {\n            // For `inset`, remove the entry if value is false, otherwise don't touch it.\n            if (!inset) {\n                this.#properties.splice(index, 1);\n            }\n        }\n        else {\n            this.#properties.unshift({ value: 'inset', source: null, expansionContext: null, propertyType: \"inset\" /* ShadowPropertyType.INSET */ });\n        }\n    }\n    #setLength(value, propertyType) {\n        const { property } = this.#expandOrGetProperty(propertyType);\n        if (property) {\n            property.value = value.asCSSText();\n            property.length = value;\n            property.source = null;\n        }\n        else {\n            // Lengths are ordered X, Y, Blur, Spread, with the latter two being optional. When inserting an optional property\n            // we need to insert it after Y or after Blur, depending on what's being inserted and which properties are\n            // present.\n            const insertionIdx = 1 +\n                this.#properties.findLastIndex(property => property.propertyType === \"y\" /* ShadowPropertyType.Y */ ||\n                    (propertyType === \"spread\" /* ShadowPropertyType.SPREAD */ && property.propertyType === \"blur\" /* ShadowPropertyType.BLUR */));\n            if (insertionIdx > 0 && insertionIdx < this.#properties.length &&\n                this.#needsExpansion(this.#properties[insertionIdx]) &&\n                this.#properties[insertionIdx - 1].source === this.#properties[insertionIdx].source) {\n                // This prevents the edge case where insertion after the last length would break up a group of values that\n                // require expansion.\n                this.#expandPropertyIfNeeded(this.#properties[insertionIdx]);\n            }\n            this.#properties.splice(insertionIdx, 0, { value: value.asCSSText(), length: value, source: null, expansionContext: null, propertyType });\n        }\n    }\n    setOffsetX(value) {\n        this.#setLength(value, \"x\" /* ShadowPropertyType.X */);\n    }\n    setOffsetY(value) {\n        this.#setLength(value, \"y\" /* ShadowPropertyType.Y */);\n    }\n    setBlurRadius(value) {\n        this.#setLength(value, \"blur\" /* ShadowPropertyType.BLUR */);\n    }\n    setSpreadRadius(value) {\n        if (this.isBoxShadow()) {\n            this.#setLength(value, \"spread\" /* ShadowPropertyType.SPREAD */);\n        }\n    }\n    renderContents(parent) {\n        parent.removeChildren();\n        const span = parent.createChild('span');\n        let previousSource = null;\n        for (const property of this.#properties) {\n            if (!property.source || property.source !== previousSource) {\n                if (property !== this.#properties[0]) {\n                    span.append(' ');\n                }\n                // If `source` is present on the property that means it came from a var() and we'll use that to render.\n                if (property.source) {\n                    span.append(...Renderer.render(property.source, this.#context).nodes);\n                }\n                else if (typeof property.value === 'string') {\n                    span.append(property.value);\n                }\n                else {\n                    span.append(...Renderer.render(property.value, property.expansionContext ?? this.#context).nodes);\n                }\n            }\n            previousSource = property.source;\n        }\n    }\n}\nexport class ShadowRenderer {\n    #treeElement;\n    constructor(treeElement) {\n        this.#treeElement = treeElement;\n    }\n    shadowModel(shadow, shadowType, context) {\n        const properties = [];\n        const missingLengths = [\"spread\" /* ShadowPropertyType.SPREAD */, \"blur\" /* ShadowPropertyType.BLUR */, \"y\" /* ShadowPropertyType.Y */, \"x\" /* ShadowPropertyType.X */];\n        let stillAcceptsLengths = true;\n        // We're parsing the individual shadow properties into an array here retaining the ordering. This also looks through\n        // var() functions by re-parsing the variable values on the fly. For properties coming from a var() we're keeping\n        // track of their origin to allow for adhoc expansion when one of those properties is edited.\n        const queue = shadow.map(value => ({ value, source: value, match: context.matchedResult.getMatch(value), expansionContext: null }));\n        for (let item = queue.shift(); item; item = queue.shift()) {\n            const { value, source, match, expansionContext } = item;\n            const text = (expansionContext ?? context).ast.text(value);\n            if (value.name === 'NumberLiteral') {\n                if (!stillAcceptsLengths) {\n                    return null;\n                }\n                const propertyType = missingLengths.pop();\n                if (propertyType === undefined ||\n                    (propertyType === \"spread\" /* ShadowPropertyType.SPREAD */ && shadowType === \"textShadow\" /* ShadowType.TEXT_SHADOW */)) {\n                    return null;\n                }\n                const length = InlineEditor.CSSShadowEditor.CSSLength.parse(text);\n                if (!length) {\n                    return null;\n                }\n                properties.push({ value, source, length, propertyType, expansionContext });\n            }\n            else if (match instanceof SDK.CSSPropertyParser.VariableMatch) {\n                // This doesn't come from any computed text, so we can rely on context here\n                const computedValue = context.matchedResult.getComputedText(value);\n                const computedValueAst = SDK.CSSPropertyParser.tokenizeDeclaration('--property', computedValue);\n                if (!computedValueAst) {\n                    return null;\n                }\n                const matches = SDK.CSSPropertyParser.BottomUpTreeMatching.walkExcludingSuccessors(computedValueAst, [new ColorMatcher()]);\n                if (matches.hasUnresolvedVars(matches.ast.tree)) {\n                    return null;\n                }\n                queue.unshift(...ASTUtils.siblings(ASTUtils.declValue(matches.ast.tree))\n                    .map(matchedNode => ({\n                    value: matchedNode,\n                    source: value,\n                    match: matches.getMatch(matchedNode),\n                    expansionContext: new RenderingContext(computedValueAst, context.renderers, matches),\n                })));\n            }\n            else {\n                // The length properties must come in one block, so if there were any lengths before, followed by a non-length\n                // property, we will not allow any future lengths.\n                stillAcceptsLengths = missingLengths.length === 4;\n                if (value.name === 'ValueName' && text.toLowerCase() === 'inset') {\n                    if (shadowType === \"textShadow\" /* ShadowType.TEXT_SHADOW */ ||\n                        properties.find(({ propertyType }) => propertyType === \"inset\" /* ShadowPropertyType.INSET */)) {\n                        return null;\n                    }\n                    properties.push({ value, source, propertyType: \"inset\" /* ShadowPropertyType.INSET */, expansionContext });\n                }\n                else if (match instanceof ColorMatch || match instanceof ColorMixMatch) {\n                    if (properties.find(({ propertyType }) => propertyType === \"color\" /* ShadowPropertyType.COLOR */)) {\n                        return null;\n                    }\n                    properties.push({ value, source, propertyType: \"color\" /* ShadowPropertyType.COLOR */, expansionContext });\n                }\n                else if (value.name !== 'Comment' && value.name !== 'Important') {\n                    return null;\n                }\n            }\n        }\n        if (missingLengths.length > 2) {\n            // X and Y are mandatory\n            return null;\n        }\n        return new ShadowModel(shadowType, properties, context);\n    }\n    render(match, context) {\n        const shadows = ASTUtils.split(ASTUtils.siblings(ASTUtils.declValue(match.node)));\n        const result = [];\n        for (const shadow of shadows) {\n            const model = this.shadowModel(shadow, match.shadowType, context);\n            const isImportant = shadow.find(node => node.name === 'Important');\n            if (shadow !== shadows[0]) {\n                result.push(document.createTextNode(', '));\n            }\n            if (!model) {\n                const { nodes } = Renderer.render(shadow, context);\n                result.push(...nodes);\n                continue;\n            }\n            const swatch = new InlineEditor.Swatches.CSSShadowSwatch(model);\n            swatch.setAttribute('jslog', `${VisualLogging.showStyleEditor('css-shadow').track({ click: true })}`);\n            swatch.iconElement().addEventListener('click', () => {\n                Host.userMetrics.swatchActivated(4 /* Host.UserMetrics.SwatchType.SHADOW */);\n            });\n            model.renderContents(swatch);\n            const popoverHelper = new ShadowSwatchPopoverHelper(this.#treeElement, this.#treeElement.parentPane().swatchPopoverHelper(), swatch);\n            popoverHelper.addEventListener(\"shadowChanged\" /* ShadowEvents.SHADOW_CHANGED */, () => {\n                model.renderContents(swatch);\n                void this.#treeElement.applyStyleText(this.#treeElement.renderedPropertyText(), false);\n            });\n            result.push(swatch);\n            if (isImportant) {\n                result.push(...[document.createTextNode(' '), ...Renderer.render(isImportant, context).nodes]);\n            }\n        }\n        return result;\n    }\n    matcher() {\n        return new ShadowMatcher();\n    }\n}\nexport class FontRenderer {\n    treeElement;\n    constructor(treeElement) {\n        this.treeElement = treeElement;\n    }\n    render(match) {\n        this.treeElement.section().registerFontProperty(this.treeElement);\n        return [document.createTextNode(match.text)];\n    }\n    matcher() {\n        return new FontMatcher();\n    }\n}\nexport class GridTemplateRenderer {\n    render(match, context) {\n        if (match.lines.length <= 1) {\n            return Renderer.render(ASTUtils.siblings(ASTUtils.declValue(match.node)), context).nodes;\n        }\n        const indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n        const container = document.createDocumentFragment();\n        for (const line of match.lines) {\n            const value = Renderer.render(line, context);\n            const lineBreak = UI.Fragment.html `<br /><span class='styles-clipboard-only'>${indent.repeat(2)}</span>`;\n            container.append(lineBreak, ...value.nodes);\n        }\n        return [container];\n    }\n    matcher() {\n        return new GridTemplateMatcher();\n    }\n}\nexport class LengthRenderer {\n    #treeElement;\n    constructor(treeElement) {\n        this.#treeElement = treeElement;\n    }\n    render(match, _context) {\n        const lengthText = match.text;\n        if (!this.#treeElement.editable()) {\n            return [document.createTextNode(lengthText)];\n        }\n        const cssLength = new InlineEditor.CSSLength.CSSLength();\n        const valueElement = document.createElement('span');\n        valueElement.textContent = lengthText;\n        cssLength.data = { lengthText };\n        cssLength.append(valueElement);\n        const onValueChanged = (event) => {\n            const { data } = event;\n            valueElement.textContent = data.value;\n            this.#treeElement.parentPane().setEditingStyle(true);\n            void this.#treeElement.applyStyleText(this.#treeElement.renderedPropertyText(), false);\n        };\n        const onDraggingFinished = () => {\n            this.#treeElement.parentPane().setEditingStyle(false);\n        };\n        cssLength.addEventListener('valuechanged', onValueChanged);\n        cssLength.addEventListener('draggingfinished', onDraggingFinished);\n        return [cssLength];\n    }\n    matcher() {\n        return new LengthMatcher();\n    }\n}\nasync function decorateAnchorForAnchorLink(container, treeElement, options) {\n    const anchorNode = await treeElement.node()?.getAnchorBySpecifier(options.identifier) ?? undefined;\n    const link = new ElementsComponents.AnchorFunctionLinkSwatch.AnchorFunctionLinkSwatch({\n        identifier: options.identifier,\n        anchorNode,\n        needsSpace: options.needsSpace,\n        onLinkActivate: () => {\n            if (!anchorNode) {\n                return;\n            }\n            void Common.Revealer.reveal(anchorNode, false);\n        },\n        onMouseEnter: () => {\n            anchorNode?.highlight();\n        },\n        onMouseLeave: () => {\n            SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n        },\n    });\n    container.removeChildren();\n    container.appendChild(link);\n}\nexport class AnchorFunctionRenderer {\n    #treeElement;\n    constructor(treeElement) {\n        this.#treeElement = treeElement;\n    }\n    anchorDecoratedForTest() {\n    }\n    async #decorateAnchor(container, addSpace, identifier) {\n        await decorateAnchorForAnchorLink(container, this.#treeElement, {\n            identifier,\n            needsSpace: addSpace,\n        });\n        this.anchorDecoratedForTest();\n    }\n    render(match, context) {\n        const content = document.createElement('span');\n        if (match.node.name === 'VariableName') {\n            // Link an anchor double-dashed ident to its matching anchor element.\n            content.appendChild(document.createTextNode(match.text));\n            void this.#decorateAnchor(content, /* addSpace */ false, match.text);\n        }\n        else {\n            // The matcher passes a 'CallExpression' node with a functionName\n            // ('anchor' or 'anchor-size') if the arguments need to have an implicit\n            // anchor link swatch rendered.\n            content.appendChild(document.createTextNode(`${match.functionName}(`));\n            const swatchContainer = document.createElement('span');\n            content.appendChild(swatchContainer);\n            const args = ASTUtils.children(match.node.getChild('ArgList'));\n            const remainingArgs = args.splice(1);\n            void this.#decorateAnchor(swatchContainer, /* addSpace */ remainingArgs.length > 1);\n            Renderer.renderInto(remainingArgs, context, content);\n        }\n        return [content];\n    }\n    matcher() {\n        return new AnchorFunctionMatcher();\n    }\n}\nexport class PositionAnchorRenderer {\n    #treeElement;\n    constructor(treeElement) {\n        this.#treeElement = treeElement;\n    }\n    anchorDecoratedForTest() {\n    }\n    render(match) {\n        const content = document.createElement('span');\n        content.appendChild(document.createTextNode(match.text));\n        void decorateAnchorForAnchorLink(content, this.#treeElement, {\n            identifier: match.text,\n            needsSpace: false,\n        }).then(() => this.anchorDecoratedForTest());\n        return [content];\n    }\n    matcher() {\n        return new PositionAnchorMatcher();\n    }\n}\nexport class PositionTryRenderer {\n    #treeElement;\n    constructor(treeElement) {\n        this.#treeElement = treeElement;\n    }\n    render(match, context) {\n        const content = [];\n        if (match.preamble.length > 0) {\n            const { nodes } = Renderer.render(match.preamble, context);\n            content.push(...nodes);\n        }\n        for (const [i, fallback] of match.fallbacks.entries()) {\n            const fallbackContent = document.createElement('span');\n            if (i > 0) {\n                fallbackContent.appendChild(document.createTextNode(', '));\n            }\n            if (i !== this.#treeElement.matchedStyles().activePositionFallbackIndex()) {\n                fallbackContent.style.textDecoration = 'line-through';\n            }\n            Renderer.renderInto(fallback, context, fallbackContent);\n            content.push(fallbackContent);\n        }\n        return content;\n    }\n    matcher() {\n        return new PositionTryMatcher();\n    }\n}\nexport class StylePropertyTreeElement extends UI.TreeOutline.TreeElement {\n    style;\n    matchedStylesInternal;\n    property;\n    inheritedInternal;\n    overloadedInternal;\n    parentPaneInternal;\n    #parentSection;\n    isShorthand;\n    applyStyleThrottler;\n    newProperty;\n    expandedDueToFilter;\n    valueElement;\n    nameElement;\n    expandElement;\n    originalPropertyText;\n    hasBeenEditedIncrementally;\n    prompt;\n    lastComputedValue;\n    computedStyles = null;\n    parentsComputedStyles = null;\n    contextForTest;\n    #propertyTextFromSource;\n    #gridNames = undefined;\n    constructor({ stylesPane, section, matchedStyles, property, isShorthand, inherited, overloaded, newProperty }) {\n        // Pass an empty title, the title gets made later in onattach.\n        const jslogContext = property.name.startsWith('--') ? 'custom-property' : property.name;\n        super('', isShorthand, jslogContext);\n        this.style = property.ownerStyle;\n        this.matchedStylesInternal = matchedStyles;\n        this.property = property;\n        this.inheritedInternal = inherited;\n        this.overloadedInternal = overloaded;\n        this.selectable = false;\n        this.parentPaneInternal = stylesPane;\n        this.#parentSection = section;\n        this.isShorthand = isShorthand;\n        this.applyStyleThrottler = new Common.Throttler.Throttler(0);\n        this.newProperty = newProperty;\n        if (this.newProperty) {\n            this.listItemElement.textContent = '';\n        }\n        this.expandedDueToFilter = false;\n        this.valueElement = null;\n        this.nameElement = null;\n        this.expandElement = null;\n        this.originalPropertyText = '';\n        this.hasBeenEditedIncrementally = false;\n        this.prompt = null;\n        this.lastComputedValue = null;\n        this.#propertyTextFromSource = property.propertyText || '';\n    }\n    async gridNames() {\n        if (!SDK.CSSMetadata.cssMetadata().isGridNameAwareProperty(this.name)) {\n            return new Set();\n        }\n        for (let node = this.parentPaneInternal.node()?.parentNode; node; node = node?.parentNode) {\n            const style = await this.parentPaneInternal.cssModel()?.getComputedStyle(node.id);\n            const display = style?.get('display');\n            const isGrid = display === 'grid' || display === 'inline-grid';\n            if (!isGrid) {\n                continue;\n            }\n            const getNames = (propertyName, astNodeName) => {\n                const propertyValue = style?.get(propertyName);\n                if (!propertyValue) {\n                    return [];\n                }\n                const ast = SDK.CSSPropertyParser.tokenizeDeclaration(propertyName, propertyValue);\n                if (!ast) {\n                    return [];\n                }\n                return SDK.CSSPropertyParser.TreeSearch.findAll(ast, node => node.name === astNodeName)\n                    .map(node => ast.text(node));\n            };\n            if (SDK.CSSMetadata.cssMetadata().isGridAreaNameAwareProperty(this.name)) {\n                return new Set(getNames('grid-template-areas', 'StringLiteral')\n                    ?.flatMap(row => row.substring(1, row.length - 1).split(/\\s+/).filter(cell => !cell.match(/^\\.*$/))));\n            }\n            if (SDK.CSSMetadata.cssMetadata().isGridColumnNameAwareProperty(this.name)) {\n                return new Set(getNames('grid-template-columns', 'LineName'));\n            }\n            return new Set(getNames('grid-template-rows', 'LineName'));\n        }\n        return new Set();\n    }\n    matchedStyles() {\n        return this.matchedStylesInternal;\n    }\n    editable() {\n        const isLonghandInsideShorthand = this.parent instanceof StylePropertyTreeElement && this.parent.isShorthand;\n        const hasSourceData = Boolean(this.style.styleSheetId && this.style.range);\n        return !isLonghandInsideShorthand && hasSourceData;\n    }\n    inherited() {\n        return this.inheritedInternal;\n    }\n    overloaded() {\n        return this.overloadedInternal;\n    }\n    setOverloaded(x) {\n        if (x === this.overloadedInternal) {\n            return;\n        }\n        this.overloadedInternal = x;\n        this.updateState();\n    }\n    setComputedStyles(computedStyles) {\n        this.computedStyles = computedStyles;\n    }\n    getComputedStyle(property) {\n        return this.computedStyles?.get(property) ?? null;\n    }\n    setParentsComputedStyles(parentsComputedStyles) {\n        this.parentsComputedStyles = parentsComputedStyles;\n    }\n    get name() {\n        return this.property.name;\n    }\n    get value() {\n        return this.property.value;\n    }\n    updateFilter() {\n        const regex = this.parentPaneInternal.filterRegex();\n        const matches = regex !== null && (regex.test(this.property.name) || regex.test(this.property.value));\n        this.listItemElement.classList.toggle('filter-match', matches);\n        void this.onpopulate();\n        let hasMatchingChildren = false;\n        for (let i = 0; i < this.childCount(); ++i) {\n            const child = this.childAt(i);\n            if (!child || (child && !child.updateFilter())) {\n                continue;\n            }\n            hasMatchingChildren = true;\n        }\n        if (!regex) {\n            if (this.expandedDueToFilter) {\n                this.collapse();\n            }\n            this.expandedDueToFilter = false;\n        }\n        else if (hasMatchingChildren && !this.expanded) {\n            this.expand();\n            this.expandedDueToFilter = true;\n        }\n        else if (!hasMatchingChildren && this.expanded && this.expandedDueToFilter) {\n            this.collapse();\n            this.expandedDueToFilter = false;\n        }\n        return matches;\n    }\n    renderedPropertyText() {\n        if (!this.nameElement || !this.valueElement) {\n            return '';\n        }\n        return this.nameElement.textContent + ': ' + this.valueElement.textContent;\n    }\n    updateState() {\n        if (!this.listItemElement) {\n            return;\n        }\n        if (this.style.isPropertyImplicit(this.name)) {\n            this.listItemElement.classList.add('implicit');\n        }\n        else {\n            this.listItemElement.classList.remove('implicit');\n        }\n        const hasIgnorableError = !this.property.parsedOk && StylesSidebarPane.ignoreErrorsForProperty(this.property);\n        if (hasIgnorableError) {\n            this.listItemElement.classList.add('has-ignorable-error');\n        }\n        else {\n            this.listItemElement.classList.remove('has-ignorable-error');\n        }\n        if (this.inherited()) {\n            this.listItemElement.classList.add('inherited');\n        }\n        else {\n            this.listItemElement.classList.remove('inherited');\n        }\n        if (this.overloaded()) {\n            this.listItemElement.classList.add('overloaded');\n        }\n        else {\n            this.listItemElement.classList.remove('overloaded');\n        }\n        if (this.property.disabled) {\n            this.listItemElement.classList.add('disabled');\n        }\n        else {\n            this.listItemElement.classList.remove('disabled');\n        }\n        this.listItemElement.classList.toggle('changed', this.isPropertyChanged(this.property));\n    }\n    node() {\n        return this.parentPaneInternal.node();\n    }\n    parentPane() {\n        return this.parentPaneInternal;\n    }\n    section() {\n        return this.#parentSection;\n    }\n    updatePane() {\n        this.#parentSection.refreshUpdate(this);\n    }\n    async toggleDisabled(disabled) {\n        const oldStyleRange = this.style.range;\n        if (!oldStyleRange) {\n            return;\n        }\n        this.parentPaneInternal.setUserOperation(true);\n        const success = await this.property.setDisabled(disabled);\n        this.parentPaneInternal.setUserOperation(false);\n        if (!success) {\n            return;\n        }\n        this.matchedStylesInternal.resetActiveProperties();\n        this.updatePane();\n        this.styleTextAppliedForTest();\n    }\n    isPropertyChanged(property) {\n        if (!Root.Runtime.experiments.isEnabled(\"styles-pane-css-changes\" /* Root.Runtime.ExperimentName.STYLES_PANE_CSS_CHANGES */)) {\n            return false;\n        }\n        // Check local cache first, then check against diffs from the workspace.\n        return this.#propertyTextFromSource !== property.propertyText || this.parentPane().isPropertyChanged(property);\n    }\n    async onpopulate() {\n        if (!this.#gridNames) {\n            this.#gridNames = await this.gridNames();\n        }\n        // Only populate once and if this property is a shorthand.\n        if (this.childCount() || !this.isShorthand) {\n            return;\n        }\n        const longhandProperties = this.property.getLonghandProperties();\n        const leadingProperties = this.style.leadingProperties();\n        for (const property of longhandProperties) {\n            const name = property.name;\n            let inherited = false;\n            let overloaded = false;\n            inherited = this.#parentSection.isPropertyInherited(name);\n            overloaded = this.matchedStylesInternal.propertyState(property) === \"Overloaded\" /* SDK.CSSMatchedStyles.PropertyState.OVERLOADED */;\n            const leadingProperty = leadingProperties.find(property => property.name === name && property.activeInStyle());\n            if (leadingProperty) {\n                overloaded = true;\n            }\n            const item = new StylePropertyTreeElement({\n                stylesPane: this.parentPaneInternal,\n                section: this.#parentSection,\n                matchedStyles: this.matchedStylesInternal,\n                property,\n                isShorthand: false,\n                inherited,\n                overloaded,\n                newProperty: false,\n            });\n            item.setComputedStyles(this.computedStyles);\n            item.setParentsComputedStyles(this.parentsComputedStyles);\n            this.appendChild(item);\n        }\n    }\n    onattach() {\n        this.updateTitle();\n        this.listItemElement.addEventListener('mousedown', event => {\n            if (event.button === 0) {\n                parentMap.set(this.parentPaneInternal, this);\n            }\n        }, false);\n        this.listItemElement.addEventListener('mouseup', this.mouseUp.bind(this));\n        this.listItemElement.addEventListener('click', event => {\n            if (!event.target) {\n                return;\n            }\n            const node = event.target;\n            if (!node.hasSelection() && event.target !== this.listItemElement) {\n                event.consume(true);\n            }\n        });\n        // Copy context menu.\n        this.listItemElement.addEventListener('contextmenu', this.handleCopyContextMenuEvent.bind(this));\n    }\n    onexpand() {\n        this.updateExpandElement();\n    }\n    oncollapse() {\n        this.updateExpandElement();\n    }\n    updateExpandElement() {\n        if (!this.expandElement) {\n            return;\n        }\n        if (this.expanded) {\n            this.expandElement.name = 'triangle-down';\n        }\n        else {\n            this.expandElement.name = 'triangle-right';\n        }\n    }\n    #getRegisteredPropertyDetails(variableName) {\n        const registration = this.matchedStyles().getRegisteredProperty(variableName);\n        const goToDefinition = () => this.parentPaneInternal.jumpToSection(variableName, REGISTERED_PROPERTY_SECTION_NAME);\n        return registration ? { registration, goToDefinition } : undefined;\n    }\n    getVariablePopoverContents(variableName, computedValue) {\n        return new ElementsComponents.CSSVariableValueView.CSSVariableValueView({\n            variableName,\n            value: computedValue ?? undefined,\n            details: this.#getRegisteredPropertyDetails(variableName),\n        });\n    }\n    // Resolves a CSS expression to its computed value with `var()` calls updated.\n    // Still returns the string even when a `var()` call is not resolved.\n    #computeCSSExpression(style, text) {\n        const ast = SDK.CSSPropertyParser.tokenizeDeclaration('--unused', text);\n        if (!ast) {\n            return null;\n        }\n        const matching = SDK.CSSPropertyParser.BottomUpTreeMatching.walk(ast, [new SDK.CSSPropertyParser.VariableMatcher((match) => {\n                const variableValue = this.matchedStylesInternal.computeCSSVariable(style, match.name)?.value;\n                if (variableValue !== undefined) {\n                    return variableValue;\n                }\n                if (match.fallback.length === 0 ||\n                    match.matching.hasUnresolvedVarsRange(match.fallback[0], match.fallback[match.fallback.length - 1])) {\n                    return null;\n                }\n                return match.matching.getComputedTextRange(match.fallback[0], match.fallback[match.fallback.length - 1]);\n            })]);\n        const decl = SDK.CSSPropertyParser.ASTUtils.siblings(SDK.CSSPropertyParser.ASTUtils.declValue(matching.ast.tree));\n        return matching.getComputedTextRange(decl[0], decl[decl.length - 1]);\n    }\n    refreshIfComputedValueChanged() {\n        this.#gridNames = undefined;\n        const computedValue = this.#computeCSSExpression(this.property.ownerStyle, this.property.value);\n        if (computedValue === this.lastComputedValue) {\n            return;\n        }\n        this.lastComputedValue = computedValue;\n        this.innerUpdateTitle();\n    }\n    updateTitle() {\n        this.lastComputedValue = this.#computeCSSExpression(this.property.ownerStyle, this.property.value);\n        this.innerUpdateTitle();\n    }\n    innerUpdateTitle() {\n        this.updateState();\n        if (this.isExpandable()) {\n            this.expandElement = IconButton.Icon.create('triangle-right', 'expand-icon');\n            this.expandElement.setAttribute('jslog', `${VisualLogging.expand().track({ click: true })}`);\n        }\n        const renderers = this.property.parsedOk ?\n            [\n                new VariableRenderer(this, this.style),\n                new ColorRenderer(this),\n                new ColorMixRenderer(this.parentPaneInternal),\n                new URLRenderer(this.style.parentRule, this.node()),\n                new AngleRenderer(this),\n                new LinkableNameRenderer(this),\n                new BezierRenderer(this),\n                new StringRenderer(),\n                new ShadowRenderer(this),\n                new CSSWideKeywordRenderer(this),\n                new LightDarkColorRenderer(this),\n                new GridTemplateRenderer(),\n                new LinearGradientRenderer(),\n                new AnchorFunctionRenderer(this),\n                new PositionAnchorRenderer(this),\n                new FlexGridRenderer(this),\n                new PositionTryRenderer(this),\n                new FontRenderer(this),\n            ] :\n            [];\n        if (!Root.Runtime.experiments.isEnabled('css-type-component-length-deprecate') && this.property.parsedOk) {\n            renderers.push(new LengthRenderer(this));\n        }\n        this.listItemElement.removeChildren();\n        this.valueElement = Renderer.renderValueElement(this.name, this.value, renderers);\n        this.nameElement = Renderer.renderNameElement(this.name);\n        if (this.property.name.startsWith('--') && this.nameElement) {\n            this.parentPaneInternal.addPopover(this.nameElement, {\n                contents: () => this.getVariablePopoverContents(this.property.name, this.matchedStylesInternal.computeCSSVariable(this.style, this.property.name)?.value ?? null),\n                jslogContext: 'elements.css-var',\n            });\n        }\n        if (!this.treeOutline) {\n            return;\n        }\n        const indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n        UI.UIUtils.createTextChild(this.listItemElement.createChild('span', 'styles-clipboard-only'), indent.repeat(this.section().nestingLevel + 1) + (this.property.disabled ? '/* ' : ''));\n        if (this.nameElement) {\n            this.listItemElement.appendChild(this.nameElement);\n        }\n        if (this.valueElement) {\n            const lineBreakValue = this.valueElement.firstElementChild && this.valueElement.firstElementChild.tagName === 'BR';\n            const separator = lineBreakValue ? ':' : ': ';\n            this.listItemElement.createChild('span', 'styles-name-value-separator').textContent = separator;\n            if (this.expandElement) {\n                this.listItemElement.appendChild(this.expandElement);\n                this.updateExpandElement();\n            }\n            this.listItemElement.appendChild(this.valueElement);\n            const semicolon = this.listItemElement.createChild('span', 'styles-semicolon');\n            semicolon.textContent = ';';\n            semicolon.onmouseup = this.mouseUp.bind(this);\n            if (this.property.disabled) {\n                UI.UIUtils.createTextChild(this.listItemElement.createChild('span', 'styles-clipboard-only'), ' */');\n            }\n        }\n        if (this.property.parsedOk) {\n            this.updateAuthoringHint();\n        }\n        else {\n            // Avoid having longhands under an invalid shorthand.\n            this.listItemElement.classList.add('not-parsed-ok');\n            const registrationDetails = this.#getRegisteredPropertyDetails(this.property.name);\n            const tooltip = registrationDetails ?\n                new ElementsComponents.CSSVariableValueView.CSSVariableParserError(registrationDetails) :\n                null;\n            // Add a separate exclamation mark IMG element with a tooltip.\n            this.listItemElement.insertBefore(this.parentPaneInternal.createExclamationMark(this.property, tooltip), this.listItemElement.firstChild);\n            // When the property is valid but the property value is invalid,\n            // add line-through only to the property value.\n            const invalidPropertyValue = SDK.CSSMetadata.cssMetadata().isCSSPropertyName(this.property.name);\n            if (invalidPropertyValue) {\n                this.listItemElement.classList.add('invalid-property-value');\n            }\n        }\n        if (!this.property.activeInStyle()) {\n            this.listItemElement.classList.add('inactive');\n        }\n        this.updateFilter();\n        if (this.property.parsedOk && this.parent && this.parent.root) {\n            const enabledCheckboxElement = document.createElement('input');\n            enabledCheckboxElement.classList.add('enabled-button', 'small');\n            enabledCheckboxElement.type = 'checkbox';\n            enabledCheckboxElement.checked = !this.property.disabled;\n            enabledCheckboxElement.setAttribute('jslog', `${VisualLogging.toggle().track({ click: true })}`);\n            enabledCheckboxElement.addEventListener('mousedown', event => event.consume(), false);\n            enabledCheckboxElement.addEventListener('click', event => {\n                void this.toggleDisabled(!this.property.disabled);\n                event.consume();\n            }, false);\n            if (this.nameElement && this.valueElement) {\n                UI.ARIAUtils.setLabel(enabledCheckboxElement, `${this.nameElement.textContent} ${this.valueElement.textContent}`);\n            }\n            const copyIcon = IconButton.Icon.create('copy', 'copy');\n            UI.Tooltip.Tooltip.install(copyIcon, i18nString(UIStrings.copyDeclaration));\n            copyIcon.addEventListener('click', () => {\n                const propertyText = `${this.property.name}: ${this.property.value};`;\n                Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(propertyText);\n                Host.userMetrics.styleTextCopied(1 /* Host.UserMetrics.StyleTextCopied.DECLARATION_VIA_CHANGED_LINE */);\n            });\n            this.listItemElement.append(copyIcon);\n            this.listItemElement.insertBefore(enabledCheckboxElement, this.listItemElement.firstChild);\n        }\n    }\n    updateAuthoringHint() {\n        this.listItemElement.classList.remove('inactive-property');\n        const existingElement = this.listItemElement.querySelector('.hint');\n        if (existingElement) {\n            activeHints.delete(existingElement);\n            existingElement?.closest('.hint-wrapper')?.remove();\n        }\n        const propertyName = this.property.name;\n        if (!cssRuleValidatorsMap.has(propertyName)) {\n            return;\n        }\n        // Different rules apply to SVG nodes altogether. We currently don't have SVG-specific hints.\n        if (this.node()?.isSVGNode()) {\n            return;\n        }\n        const cssModel = this.parentPaneInternal.cssModel();\n        const fontFaces = cssModel?.fontFaces() || [];\n        const localName = this.node()?.localName();\n        for (const validator of cssRuleValidatorsMap.get(propertyName) || []) {\n            const hint = validator.getHint(propertyName, this.computedStyles || undefined, this.parentsComputedStyles || undefined, localName?.toLowerCase(), fontFaces);\n            if (hint) {\n                Host.userMetrics.cssHintShown(validator.getMetricType());\n                const wrapper = document.createElement('span');\n                wrapper.classList.add('hint-wrapper');\n                const hintIcon = new IconButton.Icon.Icon();\n                hintIcon.data = { iconName: 'info', color: 'var(--icon-default)', width: '14px', height: '14px' };\n                hintIcon.classList.add('hint');\n                wrapper.append(hintIcon);\n                activeHints.set(hintIcon, hint);\n                this.listItemElement.append(wrapper);\n                this.listItemElement.classList.add('inactive-property');\n                break;\n            }\n        }\n    }\n    mouseUp(event) {\n        const activeTreeElement = parentMap.get(this.parentPaneInternal);\n        parentMap.delete(this.parentPaneInternal);\n        if (!activeTreeElement) {\n            return;\n        }\n        if (this.listItemElement.hasSelection()) {\n            return;\n        }\n        if (UI.UIUtils.isBeingEdited(event.target)) {\n            return;\n        }\n        if (event.composedPath()[0] instanceof HTMLButtonElement) {\n            return;\n        }\n        event.consume(true);\n        if (event.target === this.listItemElement) {\n            return;\n        }\n        let selectedElement = event.target;\n        if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(event) && this.#parentSection.navigable) {\n            this.navigateToSource(selectedElement);\n            return;\n        }\n        if (this.expandElement && selectedElement === this.expandElement) {\n            return;\n        }\n        if (!this.#parentSection.editable) {\n            return;\n        }\n        selectedElement = selectedElement.enclosingNodeOrSelfWithClass('webkit-css-property') ||\n            selectedElement.enclosingNodeOrSelfWithClass('value') ||\n            selectedElement.enclosingNodeOrSelfWithClass('styles-semicolon');\n        if (!selectedElement || selectedElement === this.nameElement) {\n            VisualLogging.logClick(this.nameElement, event);\n            this.startEditingName();\n        }\n        else {\n            VisualLogging.logClick(this.valueElement, event);\n            this.startEditingValue();\n        }\n    }\n    handleContextMenuEvent(context, event) {\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        if (this.property.parsedOk && this.parent && this.parent.root) {\n            const sectionIndex = this.parentPaneInternal.focusedSectionIndex();\n            contextMenu.defaultSection().appendCheckboxItem(i18nString(UIStrings.togglePropertyAndContinueEditing), async () => {\n                if (this.treeOutline) {\n                    const propertyIndex = this.treeOutline.rootElement().indexOfChild(this);\n                    // order matters here: this.editingCancelled may invalidate this.treeOutline.\n                    this.editingCancelled(null, context);\n                    await this.toggleDisabled(!this.property.disabled);\n                    event.consume();\n                    this.parentPaneInternal.continueEditingElement(sectionIndex, propertyIndex);\n                }\n            }, { checked: !this.property.disabled, jslogContext: 'toggle-property-and-continue-editing' });\n        }\n        const revealCallback = this.navigateToSource.bind(this);\n        contextMenu.defaultSection().appendItem(i18nString(UIStrings.revealInSourcesPanel), revealCallback, { jslogContext: 'reveal-in-sources-panel' });\n        void contextMenu.show();\n    }\n    handleCopyContextMenuEvent(event) {\n        const target = event.target;\n        if (!target) {\n            return;\n        }\n        const contextMenu = this.createCopyContextMenu(event);\n        void contextMenu.show();\n    }\n    createCopyContextMenu(event) {\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        contextMenu.headerSection().appendItem(i18nString(UIStrings.copyDeclaration), () => {\n            const propertyText = `${this.property.name}: ${this.property.value};`;\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(propertyText);\n            Host.userMetrics.styleTextCopied(3 /* Host.UserMetrics.StyleTextCopied.DECLARATION_VIA_CONTEXT_MENU */);\n        }, { jslogContext: 'copy-declaration' });\n        contextMenu.headerSection().appendItem(i18nString(UIStrings.copyProperty), () => {\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.property.name);\n            Host.userMetrics.styleTextCopied(4 /* Host.UserMetrics.StyleTextCopied.PROPERTY_VIA_CONTEXT_MENU */);\n        }, { jslogContext: 'copy-property' });\n        contextMenu.headerSection().appendItem(i18nString(UIStrings.copyValue), () => {\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.property.value);\n            Host.userMetrics.styleTextCopied(5 /* Host.UserMetrics.StyleTextCopied.VALUE_VIA_CONTEXT_MENU */);\n        }, { jslogContext: 'copy-value' });\n        contextMenu.headerSection().appendItem(i18nString(UIStrings.copyRule), () => {\n            const ruleText = StylesSidebarPane.formatLeadingProperties(this.#parentSection).ruleText;\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(ruleText);\n            Host.userMetrics.styleTextCopied(7 /* Host.UserMetrics.StyleTextCopied.RULE_VIA_CONTEXT_MENU */);\n        }, { jslogContext: 'copy-rule' });\n        contextMenu.headerSection().appendItem(i18nString(UIStrings.copyCssDeclarationAsJs), this.copyCssDeclarationAsJs.bind(this), { jslogContext: 'copy-css-declaration-as-js' });\n        contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyAllDeclarations), () => {\n            const allDeclarationText = StylesSidebarPane.formatLeadingProperties(this.#parentSection).allDeclarationText;\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(allDeclarationText);\n            Host.userMetrics.styleTextCopied(8 /* Host.UserMetrics.StyleTextCopied.ALL_DECLARATIONS_VIA_CONTEXT_MENU */);\n        }, { jslogContext: 'copy-all-declarations' });\n        contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyAllCssDeclarationsAsJs), this.copyAllCssDeclarationAsJs.bind(this), { jslogContext: 'copy-all-css-declarations-as-js' });\n        // TODO(changhaohan): conditionally add this item only when there are changes to copy\n        contextMenu.defaultSection().appendItem(i18nString(UIStrings.copyAllCSSChanges), async () => {\n            const allChanges = await this.parentPane().getFormattedChanges();\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(allChanges);\n            Host.userMetrics.styleTextCopied(2 /* Host.UserMetrics.StyleTextCopied.ALL_CHANGES_VIA_STYLES_TAB */);\n        }, { jslogContext: 'copy-all-css-changes' });\n        contextMenu.footerSection().appendItem(i18nString(UIStrings.viewComputedValue), () => {\n            void this.viewComputedValue();\n        }, { jslogContext: 'view-computed-value' });\n        return contextMenu;\n    }\n    async viewComputedValue() {\n        const computedStyleWidget = ElementsPanel.instance().getComputedStyleWidget();\n        if (!computedStyleWidget.isShowing()) {\n            await UI.ViewManager.ViewManager.instance().showView('Computed');\n        }\n        let propertyNamePattern = '';\n        if (this.isShorthand) {\n            propertyNamePattern = '^' + this.property.name + '-';\n        }\n        else {\n            propertyNamePattern = '^' + this.property.name + '$';\n        }\n        const regex = new RegExp(propertyNamePattern, 'i');\n        await computedStyleWidget.filterComputedStyles(regex);\n        computedStyleWidget.input.setValue(this.property.name);\n        computedStyleWidget.input.element.focus();\n    }\n    copyCssDeclarationAsJs() {\n        const cssDeclarationValue = getCssDeclarationAsJavascriptProperty(this.property);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(cssDeclarationValue);\n        Host.userMetrics.styleTextCopied(6 /* Host.UserMetrics.StyleTextCopied.DECLARATION_AS_JS_VIA_CONTEXT_MENU */);\n    }\n    copyAllCssDeclarationAsJs() {\n        const leadingProperties = this.#parentSection.style().leadingProperties();\n        const cssDeclarationsAsJsProperties = leadingProperties.filter(property => !property.disabled).map(getCssDeclarationAsJavascriptProperty);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(cssDeclarationsAsJsProperties.join(',\\n'));\n        Host.userMetrics.styleTextCopied(9 /* Host.UserMetrics.StyleTextCopied.ALL_DECLARATINS_AS_JS_VIA_CONTEXT_MENU */);\n    }\n    navigateToSource(element, omitFocus) {\n        if (!this.#parentSection.navigable) {\n            return;\n        }\n        const propertyNameClicked = element === this.nameElement;\n        const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(this.property, propertyNameClicked);\n        if (uiLocation) {\n            void Common.Revealer.reveal(uiLocation, omitFocus);\n        }\n    }\n    startEditingValue() {\n        const context = {\n            expanded: this.expanded,\n            hasChildren: this.isExpandable(),\n            isEditingName: false,\n            originalProperty: this.property,\n            previousContent: this.value,\n        };\n        // Grid definitions are often multiline. Instead of showing the authored text reformat it a little bit nicer.\n        if (SDK.CSSMetadata.cssMetadata().isGridAreaDefiningProperty(this.name)) {\n            const splitResult = TextUtils.TextUtils.Utils.splitStringByRegexes(this.value, [SDK.CSSMetadata.GridAreaRowRegex]);\n            context.previousContent = splitResult.map(result => result.value.trim()).join('\\n');\n        }\n        this.#startEditing(context);\n    }\n    startEditingName() {\n        const context = {\n            expanded: this.expanded,\n            hasChildren: this.isExpandable(),\n            isEditingName: true,\n            originalProperty: this.property,\n            previousContent: this.name.split('\\n').map(l => l.trim()).join('\\n'),\n        };\n        this.#startEditing(context);\n    }\n    #startEditing(context) {\n        this.contextForTest = context;\n        // FIXME: we don't allow editing of longhand properties under a shorthand right now.\n        if (this.parent instanceof StylePropertyTreeElement && this.parent.isShorthand) {\n            return;\n        }\n        const selectedElement = context.isEditingName ? this.nameElement : this.valueElement;\n        if (!selectedElement) {\n            return;\n        }\n        if (UI.UIUtils.isBeingEdited(selectedElement)) {\n            return;\n        }\n        // Lie about our children to prevent expanding on double click and to collapse shorthands.\n        this.setExpandable(false);\n        selectedElement.parentElement?.classList.add('child-editing');\n        selectedElement.textContent = context.previousContent; // remove color swatch and the like\n        function pasteHandler(context, event) {\n            const clipboardEvent = event;\n            const clipboardData = clipboardEvent.clipboardData;\n            if (!clipboardData) {\n                return;\n            }\n            const data = clipboardData.getData('Text');\n            if (!data) {\n                return;\n            }\n            const colonIdx = data.indexOf(':');\n            if (colonIdx < 0) {\n                return;\n            }\n            const name = data.substring(0, colonIdx).trim();\n            const value = data.substring(colonIdx + 1).trim();\n            event.preventDefault();\n            if (typeof context.originalName === 'undefined') {\n                if (this.nameElement) {\n                    context.originalName = this.nameElement.textContent || '';\n                }\n                if (this.valueElement) {\n                    context.originalValue = this.valueElement.textContent || '';\n                }\n            }\n            this.property.name = name;\n            this.property.value = value;\n            if (this.nameElement) {\n                this.nameElement.textContent = name;\n                this.nameElement.normalize();\n            }\n            if (this.valueElement) {\n                this.valueElement.textContent = value;\n                this.valueElement.normalize();\n            }\n            const target = event.target;\n            void this.editingCommitted(target.textContent || '', context, 'forward');\n        }\n        function blurListener(context, event) {\n            const target = event.target;\n            let text = target.textContent;\n            if (!context.isEditingName) {\n                text = this.value || text;\n            }\n            void this.editingCommitted(text || '', context, '');\n        }\n        this.originalPropertyText = this.property.propertyText || '';\n        this.parentPaneInternal.setEditingStyle(true, this);\n        selectedElement.parentElement?.scrollIntoViewIfNeeded(false);\n        this.prompt = new CSSPropertyPrompt(this, context.isEditingName, Array.from(this.#gridNames ?? []));\n        this.prompt.setAutocompletionTimeout(0);\n        this.prompt.addEventListener(\"TextChanged\" /* UI.TextPrompt.Events.TEXT_CHANGED */, () => {\n            void this.applyFreeFlowStyleTextEdit(context);\n        });\n        const invalidString = this.property.getInvalidStringForInvalidProperty();\n        if (invalidString) {\n            UI.ARIAUtils.alert(invalidString);\n        }\n        const proxyElement = this.prompt.attachAndStartEditing(selectedElement, blurListener.bind(this, context));\n        this.navigateToSource(selectedElement, true);\n        proxyElement.addEventListener('keydown', this.editingNameValueKeyDown.bind(this, context), false);\n        proxyElement.addEventListener('keypress', this.editingNameValueKeyPress.bind(this, context), false);\n        if (context.isEditingName) {\n            proxyElement.addEventListener('paste', pasteHandler.bind(this, context), false);\n            proxyElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this, context), false);\n        }\n        selectedElement.getComponentSelection()?.selectAllChildren(selectedElement);\n    }\n    editingNameValueKeyDown(context, event) {\n        if (event.handled) {\n            return;\n        }\n        const keyboardEvent = event;\n        const target = keyboardEvent.target;\n        let result;\n        if ((keyboardEvent.key === 'Enter' && !keyboardEvent.shiftKey) ||\n            (context.isEditingName && keyboardEvent.key === ' ')) {\n            result = 'forward';\n        }\n        else if (keyboardEvent.keyCode === UI.KeyboardShortcut.Keys.Esc.code ||\n            keyboardEvent.key === Platform.KeyboardUtilities.ESCAPE_KEY) {\n            result = 'cancel';\n        }\n        else if (!context.isEditingName && this.newProperty &&\n            keyboardEvent.keyCode === UI.KeyboardShortcut.Keys.Backspace.code) {\n            // For a new property, when Backspace is pressed at the beginning of new property value, move back to the property name.\n            const selection = target.getComponentSelection();\n            if (selection && selection.isCollapsed && !selection.focusOffset) {\n                event.preventDefault();\n                result = 'backward';\n            }\n        }\n        else if (keyboardEvent.key === 'Tab') {\n            result = keyboardEvent.shiftKey ? 'backward' : 'forward';\n            event.preventDefault();\n        }\n        if (result) {\n            switch (result) {\n                case 'cancel':\n                    this.editingCancelled(null, context);\n                    break;\n                case 'forward':\n                case 'backward':\n                    void this.editingCommitted(target.textContent || '', context, result);\n                    break;\n            }\n            event.consume();\n            return;\n        }\n    }\n    editingNameValueKeyPress(context, event) {\n        function shouldCommitValueSemicolon(text, cursorPosition) {\n            // FIXME: should this account for semicolons inside comments?\n            let openQuote = '';\n            for (let i = 0; i < cursorPosition; ++i) {\n                const ch = text[i];\n                if (ch === '\\\\' && openQuote !== '') {\n                    ++i;\n                } // skip next character inside string\n                else if (!openQuote && (ch === '\"' || ch === '\\'')) {\n                    openQuote = ch;\n                }\n                else if (openQuote === ch) {\n                    openQuote = '';\n                }\n            }\n            return !openQuote;\n        }\n        const keyboardEvent = event;\n        const target = keyboardEvent.target;\n        const keyChar = String.fromCharCode(keyboardEvent.charCode);\n        const selectionLeftOffset = this.#selectionLeftOffset(target);\n        const isFieldInputTerminated = (context.isEditingName ? keyChar === ':' :\n            keyChar === ';' && selectionLeftOffset !== null &&\n                shouldCommitValueSemicolon(target.textContent || '', selectionLeftOffset));\n        if (isFieldInputTerminated) {\n            // Enter or colon (for name)/semicolon outside of string (for value).\n            event.consume(true);\n            void this.editingCommitted(target.textContent || '', context, 'forward');\n            return;\n        }\n    }\n    /** @returns Selection offset relative to `element` */\n    #selectionLeftOffset(element) {\n        const selection = element.getComponentSelection();\n        if (!selection?.containsNode(element, true)) {\n            return null;\n        }\n        let leftOffset = selection.anchorOffset;\n        let node = selection.anchorNode;\n        while (node !== element) {\n            while (node?.previousSibling) {\n                node = node.previousSibling;\n                leftOffset += node.textContent?.length ?? 0;\n            }\n            node = node?.parentNodeOrShadowHost() ?? null;\n        }\n        return leftOffset;\n    }\n    async applyFreeFlowStyleTextEdit(context) {\n        if (!this.prompt || !this.parentPaneInternal.node()) {\n            return;\n        }\n        const enteredText = this.prompt.text();\n        if (context.isEditingName && enteredText.includes(':')) {\n            void this.editingCommitted(enteredText, context, 'forward');\n            return;\n        }\n        const valueText = this.prompt.textWithCurrentSuggestion();\n        if (valueText.includes(';')) {\n            return;\n        }\n        // Prevent destructive side-effects during live-edit. crbug.com/433889\n        const parentNode = this.parentPaneInternal.node();\n        if (parentNode) {\n            const isPseudo = Boolean(parentNode.pseudoType());\n            if (isPseudo) {\n                if (this.name.toLowerCase() === 'content') {\n                    return;\n                }\n                const lowerValueText = valueText.trim().toLowerCase();\n                if (lowerValueText.startsWith('content:') || lowerValueText === 'display: none') {\n                    return;\n                }\n            }\n        }\n        if (context.isEditingName) {\n            if (valueText.includes(':')) {\n                await this.applyStyleText(valueText, false);\n            }\n            else if (this.hasBeenEditedIncrementally) {\n                await this.applyOriginalStyle(context);\n            }\n        }\n        else {\n            if (this.nameElement) {\n                await this.applyStyleText(`${this.nameElement.textContent}: ${valueText}`, false);\n            }\n        }\n    }\n    kickFreeFlowStyleEditForTest() {\n        const context = this.contextForTest;\n        return this.applyFreeFlowStyleTextEdit(context);\n    }\n    editingEnded(context) {\n        this.setExpandable(context.hasChildren);\n        if (context.expanded) {\n            this.expand();\n        }\n        const editedElement = context.isEditingName ? this.nameElement : this.valueElement;\n        // The proxyElement has been deleted, no need to remove listener.\n        if (editedElement && editedElement.parentElement) {\n            editedElement.parentElement.classList.remove('child-editing');\n        }\n        this.parentPaneInternal.setEditingStyle(false);\n    }\n    editingCancelled(element, context) {\n        this.removePrompt();\n        if (this.hasBeenEditedIncrementally) {\n            void this.applyOriginalStyle(context);\n        }\n        else if (this.newProperty && this.treeOutline) {\n            this.treeOutline.removeChild(this);\n        }\n        this.updateTitle();\n        // This should happen last, as it clears the info necessary to restore the property value after [Page]Up/Down changes.\n        this.editingEnded(context);\n    }\n    async applyOriginalStyle(context) {\n        await this.applyStyleText(this.originalPropertyText, false, context.originalProperty);\n    }\n    findSibling(moveDirection) {\n        let target = this;\n        do {\n            const sibling = moveDirection === 'forward' ? target.nextSibling : target.previousSibling;\n            target = sibling instanceof StylePropertyTreeElement ? sibling : null;\n        } while (target && target.inherited());\n        return target;\n    }\n    async editingCommitted(userInput, context, moveDirection) {\n        this.removePrompt();\n        this.editingEnded(context);\n        const isEditingName = context.isEditingName;\n        // If the underlying property has been ripped out, always assume that the value having been entered was\n        // a name-value pair and attempt to process it via the SDK.\n        if (!this.nameElement || !this.valueElement) {\n            return;\n        }\n        const nameElementValue = this.nameElement.textContent || '';\n        const nameValueEntered = (isEditingName && nameElementValue.includes(':')) || !this.property;\n        // Determine where to move to before making changes\n        let createNewProperty = false;\n        let moveToSelector = false;\n        const isDataPasted = typeof context.originalName !== 'undefined';\n        const isDirtyViaPaste = isDataPasted &&\n            (this.nameElement.textContent !== context.originalName ||\n                this.valueElement.textContent !== context.originalValue);\n        const isPropertySplitPaste = isDataPasted && isEditingName && this.valueElement.textContent !== context.originalValue;\n        let moveTo = this;\n        const moveToOther = (isEditingName !== (moveDirection === 'forward'));\n        const abandonNewProperty = this.newProperty && !userInput && (moveToOther || isEditingName);\n        if (moveDirection === 'forward' && (!isEditingName || isPropertySplitPaste) ||\n            moveDirection === 'backward' && isEditingName) {\n            moveTo = moveTo.findSibling(moveDirection);\n            if (!moveTo) {\n                if (moveDirection === 'forward' && (!this.newProperty || userInput)) {\n                    createNewProperty = true;\n                }\n                else if (moveDirection === 'backward') {\n                    moveToSelector = true;\n                }\n            }\n        }\n        // Make the Changes and trigger the moveToNextCallback after updating.\n        let moveToIndex = -1;\n        if (moveTo !== null && this.treeOutline) {\n            moveToIndex = this.treeOutline.rootElement().indexOfChild(moveTo);\n        }\n        const blankInput = Platform.StringUtilities.isWhitespace(userInput);\n        const shouldCommitNewProperty = this.newProperty &&\n            (isPropertySplitPaste || moveToOther || (!moveDirection && !isEditingName) || (isEditingName && blankInput) ||\n                nameValueEntered);\n        if (((userInput !== context.previousContent || isDirtyViaPaste) && !this.newProperty) || shouldCommitNewProperty) {\n            let propertyText;\n            if (nameValueEntered) {\n                propertyText = this.nameElement.textContent;\n            }\n            else if (blankInput ||\n                (this.newProperty && Platform.StringUtilities.isWhitespace(this.valueElement.textContent || ''))) {\n                propertyText = '';\n            }\n            else {\n                if (isEditingName) {\n                    propertyText = userInput + ': ' + this.property.value;\n                }\n                else {\n                    propertyText = this.property.name + ': ' + userInput;\n                }\n            }\n            await this.applyStyleText(propertyText || '', true);\n            moveToNextCallback.call(this, this.newProperty, !blankInput, this.#parentSection);\n        }\n        else {\n            if (isEditingName) {\n                this.property.name = userInput;\n            }\n            else {\n                this.property.value = userInput;\n            }\n            if (!isDataPasted && !this.newProperty) {\n                this.updateTitle();\n            }\n            moveToNextCallback.call(this, this.newProperty, false, this.#parentSection);\n        }\n        /**\n         * The Callback to start editing the next/previous property/selector.\n         */\n        function moveToNextCallback(alreadyNew, valueChanged, section) {\n            if (!moveDirection) {\n                this.parentPaneInternal.resetFocus();\n                return;\n            }\n            // User just tabbed through without changes.\n            if (moveTo && moveTo.parent) {\n                if (isEditingName) {\n                    moveTo.startEditingValue();\n                }\n                else {\n                    moveTo.startEditingName();\n                }\n                return;\n            }\n            // User has made a change then tabbed, wiping all the original treeElements.\n            // Recalculate the new treeElement for the same property we were going to edit next.\n            if (moveTo && !moveTo.parent) {\n                const rootElement = section.propertiesTreeOutline.rootElement();\n                if (moveDirection === 'forward' && blankInput && !isEditingName) {\n                    --moveToIndex;\n                }\n                if (moveToIndex >= rootElement.childCount() && !this.newProperty) {\n                    createNewProperty = true;\n                }\n                else {\n                    const treeElement = (moveToIndex >= 0 ? rootElement.childAt(moveToIndex) : null);\n                    if (treeElement) {\n                        if (alreadyNew && blankInput) {\n                            if (moveDirection === 'forward') {\n                                treeElement.startEditingName();\n                            }\n                            else {\n                                treeElement.startEditingValue();\n                            }\n                        }\n                        else if (!isEditingName || isPropertySplitPaste) {\n                            treeElement.startEditingName();\n                        }\n                        else {\n                            treeElement.startEditingValue();\n                        }\n                        return;\n                    }\n                    if (!alreadyNew) {\n                        moveToSelector = true;\n                    }\n                }\n            }\n            // Create a new attribute in this section (or move to next editable selector if possible).\n            if (createNewProperty) {\n                if (alreadyNew && !valueChanged && (isEditingName !== (moveDirection === 'backward'))) {\n                    return;\n                }\n                section.addNewBlankProperty().startEditingName();\n                return;\n            }\n            if (abandonNewProperty) {\n                moveTo = this.findSibling(moveDirection);\n                const sectionToEdit = (moveTo || moveDirection === 'backward') ? section : section.nextEditableSibling();\n                if (sectionToEdit) {\n                    if (sectionToEdit.style().parentRule) {\n                        sectionToEdit.startEditingSelector();\n                    }\n                    else {\n                        sectionToEdit.moveEditorFromSelector(moveDirection);\n                    }\n                }\n                return;\n            }\n            if (moveToSelector) {\n                if (section.style().parentRule) {\n                    section.startEditingSelector();\n                }\n                else {\n                    section.moveEditorFromSelector(moveDirection);\n                }\n            }\n        }\n    }\n    removePrompt() {\n        // BUG 53242. This cannot go into editingEnded(), as it should always happen first for any editing outcome.\n        if (this.prompt) {\n            this.prompt.detach();\n            this.prompt = null;\n        }\n    }\n    styleTextAppliedForTest() {\n    }\n    applyStyleText(styleText, majorChange, property) {\n        return this.applyStyleThrottler.schedule(this.innerApplyStyleText.bind(this, styleText, majorChange, property));\n    }\n    async innerApplyStyleText(styleText, majorChange, property) {\n        // this.property might have been nulled at the end of the last innerApplyStyleText\n        if (!this.treeOutline || !this.property) {\n            return;\n        }\n        const oldStyleRange = this.style.range;\n        if (!oldStyleRange) {\n            return;\n        }\n        const hasBeenEditedIncrementally = this.hasBeenEditedIncrementally;\n        styleText = styleText.replace(/[\\xA0\\t]/g, ' ').trim(); // Replace &nbsp; with whitespace.\n        if (!styleText.length && majorChange && this.newProperty && !hasBeenEditedIncrementally) {\n            // The user deleted everything and never applied a new property value via Up/Down scrolling/live editing, so remove the tree element and update.\n            this.parent && this.parent.removeChild(this);\n            return;\n        }\n        const currentNode = this.parentPaneInternal.node();\n        this.parentPaneInternal.setUserOperation(true);\n        styleText += Platform.StringUtilities.findUnclosedCssQuote(styleText);\n        styleText += ')'.repeat(Platform.StringUtilities.countUnmatchedLeftParentheses(styleText));\n        // Append a \";\" if the new text does not end in \";\".\n        // FIXME: this does not handle trailing comments.\n        if (styleText.length && !/;\\s*$/.test(styleText)) {\n            styleText += ';';\n        }\n        const overwriteProperty = !this.newProperty || hasBeenEditedIncrementally;\n        let success = await this.property.setText(styleText, majorChange, overwriteProperty);\n        // Revert to the original text if applying the new text failed\n        if (hasBeenEditedIncrementally && majorChange && !success) {\n            majorChange = false;\n            success = await this.property.setText(this.originalPropertyText, majorChange, overwriteProperty);\n        }\n        this.parentPaneInternal.setUserOperation(false);\n        // TODO: using this.property.index to access its containing StyleDeclaration's property will result in\n        // off-by-1 errors when the containing StyleDeclaration's respective property has already been deleted.\n        // These referencing logic needs to be updated to be more robust.\n        const updatedProperty = property || this.style.propertyAt(this.property.index);\n        const isPropertyWithinBounds = this.property.index < this.style.allProperties().length;\n        if (!success || (!updatedProperty && isPropertyWithinBounds)) {\n            if (majorChange) {\n                // It did not apply, cancel editing.\n                if (this.newProperty) {\n                    this.treeOutline.removeChild(this);\n                }\n                else {\n                    this.updateTitle();\n                }\n            }\n            this.styleTextAppliedForTest();\n            return;\n        }\n        if (updatedProperty) {\n            this.listItemElement.classList.toggle('changed', this.isPropertyChanged(updatedProperty));\n            this.parentPane().updateChangeStatus();\n        }\n        this.matchedStylesInternal.resetActiveProperties();\n        this.hasBeenEditedIncrementally = true;\n        // null check for updatedProperty before setting this.property as the code never expects this.property to be undefined or null.\n        // This occurs when deleting the last index of a StylePropertiesSection as this.style._allProperties array gets updated\n        // before we index it when setting the value for updatedProperty\n        const deleteProperty = majorChange && !styleText.length;\n        if (deleteProperty) {\n            this.#parentSection.resetToolbars();\n        }\n        else if (!deleteProperty && updatedProperty) {\n            this.property = updatedProperty;\n        }\n        if (currentNode === this.node()) {\n            this.updatePane();\n        }\n        this.styleTextAppliedForTest();\n    }\n    ondblclick() {\n        return true; // handled\n    }\n    isEventWithinDisclosureTriangle(event) {\n        return event.target === this.expandElement;\n    }\n}\n//# sourceMappingURL=StylePropertyTreeElement.js.map","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport { StylePropertyTreeElement } from './StylePropertyTreeElement.js';\nlet instance = null;\n/**\n * Thin UI.Widget wrapper around style editors to allow using it as a popover.\n */\nexport class StyleEditorWidget extends UI.Widget.VBox {\n    editor;\n    pane;\n    section;\n    editorContainer;\n    #triggerKey;\n    constructor() {\n        super(true);\n        this.contentElement.tabIndex = 0;\n        this.setDefaultFocusedElement(this.contentElement);\n        this.editorContainer = document.createElement('div');\n        this.contentElement.appendChild(this.editorContainer);\n        this.onPropertySelected = this.onPropertySelected.bind(this);\n        this.onPropertyDeselected = this.onPropertyDeselected.bind(this);\n    }\n    getSection() {\n        return this.section;\n    }\n    async onPropertySelected(event) {\n        if (!this.section) {\n            return;\n        }\n        const target = ensureTreeElementForProperty(this.section, event.data.name);\n        target.property.value = event.data.value;\n        target.updateTitle();\n        await target.applyStyleText(target.renderedPropertyText(), false);\n        await this.render();\n    }\n    async onPropertyDeselected(event) {\n        if (!this.section) {\n            return;\n        }\n        const target = ensureTreeElementForProperty(this.section, event.data.name);\n        await target.applyStyleText('', false);\n        await this.render();\n    }\n    bindContext(pane, section) {\n        this.pane = pane;\n        this.section = section;\n        this.editor?.addEventListener('propertyselected', this.onPropertySelected);\n        this.editor?.addEventListener('propertydeselected', this.onPropertyDeselected);\n    }\n    setTriggerKey(value) {\n        this.#triggerKey = value;\n    }\n    getTriggerKey() {\n        return this.#triggerKey;\n    }\n    unbindContext() {\n        this.pane = undefined;\n        this.section = undefined;\n        this.editor?.removeEventListener('propertyselected', this.onPropertySelected);\n        this.editor?.removeEventListener('propertydeselected', this.onPropertyDeselected);\n    }\n    async render() {\n        if (!this.editor) {\n            return;\n        }\n        this.editor.data = {\n            authoredProperties: this.section ? getAuthoredStyles(this.section, this.editor.getEditableProperties()) :\n                new Map(),\n            computedProperties: this.pane ? await fetchComputedStyles(this.pane) : new Map(),\n        };\n    }\n    static instance() {\n        if (!instance) {\n            instance = new StyleEditorWidget();\n        }\n        return instance;\n    }\n    setEditor(editorClass) {\n        if (!(this.editor instanceof editorClass)) {\n            this.contentElement.removeChildren();\n            this.editor = new editorClass();\n            this.contentElement.appendChild(this.editor);\n        }\n    }\n    static createTriggerButton(pane, section, editorClass, buttonTitle, triggerKey) {\n        const triggerButton = createButton(buttonTitle);\n        triggerButton.onclick = async (event) => {\n            event.stopPropagation();\n            const popoverHelper = pane.swatchPopoverHelper();\n            const widget = StyleEditorWidget.instance();\n            widget.setEditor(editorClass);\n            widget.bindContext(pane, section);\n            widget.setTriggerKey(triggerKey);\n            await widget.render();\n            const scrollerElement = triggerButton.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n            const onScroll = () => {\n                popoverHelper.hide(true);\n            };\n            popoverHelper.show(widget, triggerButton, () => {\n                widget.unbindContext();\n                if (scrollerElement) {\n                    scrollerElement.removeEventListener('scroll', onScroll);\n                }\n            });\n            if (scrollerElement) {\n                scrollerElement.addEventListener('scroll', onScroll);\n            }\n        };\n        return triggerButton;\n    }\n}\nfunction createButton(buttonTitle) {\n    const button = new Buttons.Button.Button();\n    button.data = {\n        variant: \"icon\" /* Buttons.Button.Variant.ICON */,\n        size: \"SMALL\" /* Buttons.Button.Size.SMALL */,\n        iconName: 'flex-wrap',\n        title: buttonTitle,\n        jslogContext: 'flex-wrap',\n    };\n    button.classList.add('styles-pane-button');\n    button.onmouseup = event => {\n        // Stop propagation to prevent the property editor from being activated.\n        event.stopPropagation();\n    };\n    return button;\n}\nfunction ensureTreeElementForProperty(section, propertyName) {\n    const target = section.propertiesTreeOutline.rootElement().children().find(child => child instanceof StylePropertyTreeElement && child.property.name === propertyName);\n    if (target) {\n        return target;\n    }\n    const newTarget = section.addNewBlankProperty();\n    newTarget.property.name = propertyName;\n    return newTarget;\n}\nasync function fetchComputedStyles(pane) {\n    const computedStyleModel = pane.computedStyleModel();\n    const style = await computedStyleModel.fetchComputedStyle();\n    return style ? style.computedStyle : new Map();\n}\nfunction getAuthoredStyles(section, editableProperties) {\n    const authoredProperties = new Map();\n    const editablePropertiesSet = new Set(editableProperties.map(prop => prop.propertyName));\n    for (const prop of section.style().leadingProperties()) {\n        if (editablePropertiesSet.has(prop.name)) {\n            authoredProperties.set(prop.name, prop.value);\n        }\n    }\n    return authoredProperties;\n}\n//# sourceMappingURL=StyleEditorWidget.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2018 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  display: inline;\n}\n\n.node-link {\n  cursor: pointer;\n  display: inline;\n  pointer-events: auto;\n  outline-offset: 2px;\n\n  /* If the element has lots of classes, don't let the label get too wide */\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: min(100%, 550px);\n\n  &:focus-visible {\n    outline-width: unset;\n  }\n\n  &.dynamic-link:hover {\n    text-decoration: underline;\n  }\n}\n\n.node-label-name {\n  color: var(--sys-color-token-property-special);\n\n  .dynamic-link & {\n    color: var(--text-link);\n  }\n}\n\n.node-label-class,\n.node-label-pseudo {\n  color: var(--sys-color-token-attribute);\n}\n\n/*# sourceURL=domLinkifier.css */\n`);\n\nexport default styles;\n","// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport domLinkifierStyles from './domLinkifier.css.js';\nconst UIStrings = {\n    /**\n     * @description Text displayed when trying to create a link to a node in the UI, but the node\n     * location could not be found so we display this placeholder instead. Node refers to a DOM node.\n     * This should be translated if appropriate.\n     */\n    node: '<node>',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/DOMLinkifier.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport const decorateNodeLabel = function (node, parentElement, options) {\n    const originalNode = node;\n    const isPseudo = node.nodeType() === Node.ELEMENT_NODE && node.pseudoType();\n    if (isPseudo && node.parentNode) {\n        node = node.parentNode;\n    }\n    // Special case rendering the node links for view transition pseudo elements.\n    // We don't include the ancestor name in the node link because\n    // they always have the same ancestor. See crbug.com/340633630.\n    if (node.isViewTransitionPseudoNode()) {\n        const pseudoElement = parentElement.createChild('span', 'extra node-label-pseudo');\n        const viewTransitionPseudoText = `::${originalNode.pseudoType()}(${originalNode.pseudoIdentifier()})`;\n        UI.UIUtils.createTextChild(pseudoElement, viewTransitionPseudoText);\n        UI.Tooltip.Tooltip.install(parentElement, options.tooltip || viewTransitionPseudoText);\n        return;\n    }\n    const nameElement = parentElement.createChild('span', 'node-label-name');\n    if (options.textContent) {\n        nameElement.textContent = options.textContent;\n        UI.Tooltip.Tooltip.install(parentElement, options.tooltip || options.textContent);\n        return;\n    }\n    let title = node.nodeNameInCorrectCase();\n    nameElement.textContent = title;\n    const idAttribute = node.getAttribute('id');\n    if (idAttribute) {\n        const idElement = parentElement.createChild('span', 'node-label-id');\n        const part = '#' + idAttribute;\n        title += part;\n        UI.UIUtils.createTextChild(idElement, part);\n        // Mark the name as extra, since the ID is more important.\n        nameElement.classList.add('extra');\n    }\n    const classAttribute = node.getAttribute('class');\n    if (classAttribute) {\n        const classes = classAttribute.split(/\\s+/);\n        if (classes.length) {\n            const foundClasses = new Set();\n            const classesElement = parentElement.createChild('span', 'extra node-label-class');\n            for (let i = 0; i < classes.length; ++i) {\n                const className = classes[i];\n                if (className && !foundClasses.has(className)) {\n                    const part = '.' + className;\n                    title += part;\n                    UI.UIUtils.createTextChild(classesElement, part);\n                    foundClasses.add(className);\n                }\n            }\n        }\n    }\n    if (isPseudo) {\n        const pseudoIdentifier = originalNode.pseudoIdentifier();\n        const pseudoElement = parentElement.createChild('span', 'extra node-label-pseudo');\n        let pseudoText = '::' + originalNode.pseudoType();\n        if (pseudoIdentifier) {\n            pseudoText += `(${pseudoIdentifier})`;\n        }\n        UI.UIUtils.createTextChild(pseudoElement, pseudoText);\n        title += pseudoText;\n    }\n    UI.Tooltip.Tooltip.install(parentElement, options.tooltip || title);\n};\nexport const linkifyNodeReference = function (node, options = {\n    tooltip: undefined,\n    preventKeyboardFocus: undefined,\n    textContent: undefined,\n    isDynamicLink: false,\n}) {\n    if (!node) {\n        return document.createTextNode(i18nString(UIStrings.node));\n    }\n    const root = document.createElement('span');\n    root.classList.add('monospace');\n    const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(root, { cssFile: [domLinkifierStyles], delegatesFocus: undefined });\n    const link = shadowRoot.createChild('button', 'node-link text-button link-style');\n    link.classList.toggle('dynamic-link', options.isDynamicLink);\n    link.setAttribute('jslog', `${VisualLogging.link('node').track({ click: true, keydown: 'Enter' })}`);\n    decorateNodeLabel(node, link, options);\n    link.addEventListener('click', () => {\n        void Common.Revealer.reveal(node, false);\n        return false;\n    }, false);\n    link.addEventListener('mouseover', node.highlight.bind(node, undefined), false);\n    link.addEventListener('mouseleave', () => SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight(), false);\n    if (options.preventKeyboardFocus) {\n        link.tabIndex = -1;\n    }\n    return root;\n};\nexport const linkifyDeferredNodeReference = function (deferredNode, options = {\n    tooltip: undefined,\n    preventKeyboardFocus: undefined,\n}) {\n    const root = document.createElement('div');\n    const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(root, { cssFile: [domLinkifierStyles], delegatesFocus: undefined });\n    const link = shadowRoot.createChild('button', 'node-link text-button link-style');\n    link.setAttribute('jslog', `${VisualLogging.link('node').track({ click: true })}`);\n    link.createChild('slot');\n    link.addEventListener('click', deferredNode.resolve.bind(deferredNode, onDeferredNodeResolved), false);\n    link.addEventListener('mousedown', e => e.consume(), false);\n    if (options.preventKeyboardFocus) {\n        link.tabIndex = -1;\n    }\n    function onDeferredNodeResolved(node) {\n        void Common.Revealer.reveal(node);\n    }\n    return root;\n};\nlet linkifierInstance;\nexport class Linkifier {\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!linkifierInstance || forceNew) {\n            linkifierInstance = new Linkifier();\n        }\n        return linkifierInstance;\n    }\n    linkify(object, options) {\n        if (object instanceof SDK.DOMModel.DOMNode) {\n            return linkifyNodeReference(object, options);\n        }\n        if (object instanceof SDK.DOMModel.DeferredDOMNode) {\n            return linkifyDeferredNodeReference(object, options);\n        }\n        throw new Error('Can\\'t linkify non-node');\n    }\n}\n//# sourceMappingURL=DOMLinkifier.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.has-ignorable-error .webkit-css-property {\n  color: inherit;\n}\n\n.tree-outline {\n  padding: 0;\n}\n\n.tree-outline li {\n  margin-left: 12px;\n  padding-left: 22px;\n  white-space: normal;\n  text-overflow: ellipsis;\n  cursor: auto;\n  display: block;\n\n  &::before {\n    display: none;\n  }\n\n  .webkit-css-property {\n    margin-left: -22px; /* outdent the first line of longhand properties (in an expanded shorthand) to compensate for the \"padding-left\" shift in .tree-outline li */\n  }\n\n  &.not-parsed-ok {\n    margin-left: 0;\n\n    .exclamation-mark {\n      display: inline-block;\n      position: relative;\n      width: 11px;\n      height: 10px;\n      margin: 0 7px 0 0;\n      top: 1px;\n      left: -36px; /* outdent to compensate for the top-level property indent */\n      user-select: none;\n      cursor: default;\n      z-index: 1;\n      mask: var(--image-file-warning-filled) center / 14px no-repeat;\n      background-color: var(--icon-warning);\n    }\n\n    &.has-ignorable-error .exclamation-mark {\n      background-color: unset;\n    }\n  }\n\n  &.filter-match {\n    background-color: var(--sys-color-tonal-container);\n  }\n\n  &.editing {\n    margin-left: 10px;\n    text-overflow: clip;\n  }\n\n  &.editing-sub-part {\n    padding: 3px 6px 8px 18px;\n    margin: -1px -6px -8px;\n    text-overflow: clip;\n  }\n\n  &.child-editing {\n    word-wrap: break-word !important; /* stylelint-disable-line declaration-no-important */\n    white-space: normal !important; /* stylelint-disable-line declaration-no-important */\n    padding-left: 0;\n  }\n\n  .info {\n    padding-top: 4px;\n    padding-bottom: 3px;\n  }\n}\n\n.tree-outline > li {\n  padding-left: 38px;\n  clear: both;\n  min-height: 14px;\n\n  .webkit-css-property {\n    margin-left: -38px; /* outdent the first line of the top-level properties to compensate for the \"padding-left\" shift in .tree-outline > li */\n  }\n\n  &.child-editing {\n    .text-prompt {\n      white-space: pre-wrap;\n    }\n\n    .webkit-css-property {\n      margin-left: 0;\n    }\n  }\n}\n\nol:not(.tree-outline) {\n  display: none;\n  margin: 0;\n  padding-inline-start: 12px;\n  list-style: none;\n}\n\nol.expanded {\n  display: block;\n}\n\n.enabled-button {\n  visibility: hidden;\n  float: left;\n  font-size: 10px;\n  margin: 0;\n  vertical-align: top;\n  position: relative;\n  z-index: 1;\n  width: 18px;\n  left: -40px; /* original -2px + (-38px) to compensate for the first line outdent */\n  top: 0.5px;\n  height: 13px;\n}\n\ninput.enabled-button.small {\n  &:hover::after,\n  &:active::before {\n    left: 3px;\n  }\n}\n\n.overloaded:not(.has-ignorable-error, .invalid-property-value),\n.inactive:not(.invalid-property-value),\n.disabled,\n.not-parsed-ok:not(.has-ignorable-error, .invalid-property-value),\n.not-parsed-ok.invalid-property-value .value {\n  text-decoration: line-through;\n}\n\n.implicit,\n.inherited,\n.inactive-property {\n  opacity: 50%;\n}\n\n.changed {\n  background-color: var(--sys-color-tertiary-container);\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    left: -4px;\n    top: 0;\n    width: 2px;\n    height: 100%;\n    background-color: var(--sys-color-tertiary);\n  }\n}\n\n.copy {\n  display: none;\n\n  .changed:hover & {\n    position: absolute;\n    right: -4px;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    display: inline-block;\n    cursor: pointer;\n    transform: scale(0.9);\n  }\n}\n\n.hint-wrapper {\n  align-items: center;\n  display: inline-block;\n  margin-left: 3px;\n  max-height: 13px;\n  max-width: 13px;\n  vertical-align: middle;\n}\n\n.hint {\n  cursor: pointer;\n  display: block;\n  position: relative;\n  left: -1.5px;\n  top: -1.5px;\n}\n\n.has-ignorable-error {\n  color: var(--sys-color-state-disabled);\n}\n\n:host-context(.no-affect) .tree-outline li {\n  opacity: 50%;\n\n  &.editing {\n    opacity: 100%;\n  }\n}\n\n:host-context(.styles-panel-hovered:not(.read-only)) .webkit-css-property:hover,\n:host-context(.styles-panel-hovered:not(.read-only)) .value:hover {\n  text-decoration: underline;\n  cursor: default;\n}\n\n.styles-name-value-separator {\n  display: inline-block;\n  width: 14px;\n  text-decoration: inherit;\n  white-space: pre;\n}\n\n.styles-clipboard-only {\n  display: inline-block;\n  width: 0;\n  opacity: 0%;\n  pointer-events: none;\n  white-space: pre;\n\n  .tree-outline li.child-editing & {\n    display: none;\n  }\n}\n\n.styles-pane-button {\n  height: 15px;\n  margin: 0 0 0 6px;\n  position: absolute;\n  top: -1px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n}\n/* Matched styles */\n\n:host-context(.matched-styles) .tree-outline li {\n  margin-left: 0 !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.expand-icon {\n  user-select: none;\n  margin-left: -6px;\n  margin-right: 2px;\n  margin-bottom: -4px;\n\n  .tree-outline li:not(.parent) & {\n    display: none;\n  }\n}\n\n:host-context(.matched-styles:not(.read-only):hover) li:not(.child-editing) .enabled-button,\n:host-context(.matched-styles:not(.read-only)) .tree-outline li.disabled:not(.child-editing) .enabled-button {\n  visibility: visible;\n}\n\n:host-context(.matched-styles) ol.expanded {\n  margin-left: 16px;\n}\n\n.devtools-link-styled-trim {\n  display: inline-block;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 80%;\n  vertical-align: bottom;\n}\n\ndevtools-css-angle,\ndevtools-css-length {\n  display: inline-block;\n}\n\n/*# sourceURL=stylePropertiesTreeOutline.css */\n`);\n\nexport default styles;\n","// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { FontEditorSectionManager } from './ColorSwatchPopoverIcon.js';\nimport * as ElementsComponents from './components/components.js';\nimport { linkifyDeferredNodeReference } from './DOMLinkifier.js';\nimport { ElementsPanel } from './ElementsPanel.js';\nimport stylePropertiesTreeOutlineStyles from './stylePropertiesTreeOutline.css.js';\nimport { StylePropertyTreeElement } from './StylePropertyTreeElement.js';\nimport { StylesSidebarPane } from './StylesSidebarPane.js';\nconst UIStrings = {\n    /**\n     *@description Tooltip text that appears when hovering over the largeicon add button in the Styles Sidebar Pane of the Elements panel\n     */\n    insertStyleRuleBelow: 'Insert style rule below',\n    /**\n     *@description Text in Styles Sidebar Pane of the Elements panel\n     */\n    constructedStylesheet: 'constructed stylesheet',\n    /**\n     *@description Text in Styles Sidebar Pane of the Elements panel\n     */\n    userAgentStylesheet: 'user agent stylesheet',\n    /**\n     *@description Text in Styles Sidebar Pane of the Elements panel\n     */\n    injectedStylesheet: 'injected stylesheet',\n    /**\n     *@description Text in Styles Sidebar Pane of the Elements panel\n     */\n    viaInspector: 'via inspector',\n    /**\n     *@description Text in Styles Sidebar Pane of the Elements panel\n     */\n    styleAttribute: '`style` attribute',\n    /**\n     *@description Text in Styles Sidebar Pane of the Elements panel\n     *@example {html} PH1\n     */\n    sattributesStyle: '{PH1}[Attributes Style]',\n    /**\n     *@description Show all button text content in Styles Sidebar Pane of the Elements panel\n     *@example {3} PH1\n     */\n    showAllPropertiesSMore: 'Show all properties ({PH1} more)',\n    /**\n     *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n     */\n    copySelector: 'Copy `selector`',\n    /**\n     *@description A context menu item in Styles panel to copy CSS rule\n     */\n    copyRule: 'Copy rule',\n    /**\n     *@description A context menu item in Styles panel to copy all CSS declarations\n     */\n    copyAllDeclarations: 'Copy all declarations',\n    /**\n     *@description  A context menu item in Styles panel to copy all the CSS changes\n     */\n    copyAllCSSChanges: 'Copy all CSS changes',\n    /**\n     *@description Text that is announced by the screen reader when the user focuses on an input field for editing the name of a CSS selector in the Styles panel\n     */\n    cssSelector: '`CSS` selector',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/StylePropertiesSection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst STYLE_TAG = '<style>';\nconst DEFAULT_MAX_PROPERTIES = 50;\nexport class StylePropertiesSection {\n    parentPane;\n    styleInternal;\n    matchedStyles;\n    computedStyles;\n    parentsComputedStyles;\n    editable;\n    hoverTimer;\n    willCauseCancelEditing;\n    forceShowAll;\n    originalPropertiesCount;\n    element;\n    #styleRuleElement;\n    titleElement;\n    propertiesTreeOutline;\n    showAllButton;\n    selectorElement;\n    newStyleRuleToolbar;\n    fontEditorToolbar;\n    fontEditorSectionManager;\n    fontEditorButton;\n    selectedSinceMouseDown;\n    elementToSelectorIndex;\n    navigable;\n    selectorRefElement;\n    hoverableSelectorsMode;\n    isHiddenInternal;\n    nestingLevel = 0;\n    #ancestorRuleListElement;\n    #ancestorClosingBracesElement;\n    // Used to identify buttons that trigger a flexbox or grid editor.\n    nextEditorTriggerButtonIdx = 1;\n    sectionIdx = 0;\n    // Used to keep track of Specificity Information\n    static #nodeElementToSpecificity = new WeakMap();\n    #customHeaderText;\n    constructor(parentPane, matchedStyles, style, sectionIdx, computedStyles, parentsComputedStyles, customHeaderText) {\n        this.#customHeaderText = customHeaderText;\n        this.parentPane = parentPane;\n        this.sectionIdx = sectionIdx;\n        this.styleInternal = style;\n        this.matchedStyles = matchedStyles;\n        this.computedStyles = computedStyles;\n        this.parentsComputedStyles = parentsComputedStyles;\n        this.editable = Boolean(style.styleSheetId && style.range);\n        this.hoverTimer = null;\n        this.willCauseCancelEditing = false;\n        this.forceShowAll = false;\n        this.originalPropertiesCount = style.leadingProperties().length;\n        const rule = style.parentRule;\n        const headerText = this.headerText();\n        this.element = document.createElement('div');\n        this.element.classList.add('styles-section');\n        this.element.classList.add('matched-styles');\n        this.element.classList.add('monospace');\n        this.element.setAttribute('jslog', `${VisualLogging.section('style-properties').track({\n            keydown: 'ArrowUp|ArrowDown|ArrowLeft|ArrowRight|Enter|Space',\n        })}`);\n        UI.ARIAUtils.setLabel(this.element, `${headerText}, css selector`);\n        this.element.tabIndex = -1;\n        UI.ARIAUtils.markAsListitem(this.element);\n        this.element.addEventListener('keydown', this.onKeyDown.bind(this), false);\n        parentPane.sectionByElement.set(this.element, this);\n        this.#styleRuleElement = this.element.createChild('div', 'style-rule');\n        this.#ancestorRuleListElement = document.createElement('div');\n        this.#ancestorRuleListElement.classList.add('ancestor-rule-list');\n        this.element.prepend(this.#ancestorRuleListElement);\n        this.#ancestorClosingBracesElement = document.createElement('div');\n        this.#ancestorClosingBracesElement.classList.add('ancestor-closing-braces');\n        this.element.append(this.#ancestorClosingBracesElement);\n        this.updateAncestorRuleList();\n        this.titleElement =\n            this.#styleRuleElement.createChild('div', 'styles-section-title ' + (rule ? 'styles-selector' : ''));\n        this.propertiesTreeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n        this.propertiesTreeOutline.setFocusable(false);\n        this.propertiesTreeOutline.registerCSSFiles([stylePropertiesTreeOutlineStyles]);\n        this.propertiesTreeOutline.element.classList.add('style-properties', 'matched-styles', 'monospace');\n        this.#styleRuleElement.appendChild(this.propertiesTreeOutline.element);\n        this.showAllButton = UI.UIUtils.createTextButton('', this.showAllItems.bind(this), {\n            className: 'styles-show-all',\n            jslogContext: 'elements.show-all-style-properties',\n        });\n        this.#styleRuleElement.appendChild(this.showAllButton);\n        const indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n        const selectorContainer = document.createElement('div');\n        selectorContainer.createChild('span', 'styles-clipboard-only').textContent = indent.repeat(this.nestingLevel);\n        selectorContainer.classList.add('selector-container');\n        this.selectorElement = document.createElement('span');\n        UI.ARIAUtils.setLabel(this.selectorElement, i18nString(UIStrings.cssSelector));\n        this.selectorElement.classList.add('selector');\n        this.selectorElement.textContent = headerText;\n        selectorContainer.appendChild(this.selectorElement);\n        this.selectorElement.addEventListener('mouseenter', this.onMouseEnterSelector.bind(this), false);\n        this.selectorElement.addEventListener('mouseleave', this.onMouseOutSelector.bind(this), false);\n        // We only add braces for style rules with selectors and non-style rules, which create their own sections.\n        if (headerText.length > 0 || !(rule instanceof SDK.CSSRule.CSSStyleRule)) {\n            const openBrace = selectorContainer.createChild('span', 'sidebar-pane-open-brace');\n            openBrace.textContent = headerText.length > 0 ? ' {' : '{'; // We don't add spacing when there is no selector.\n            const closeBrace = this.#styleRuleElement.createChild('div', 'sidebar-pane-closing-brace');\n            closeBrace.createChild('span', 'styles-clipboard-only').textContent = indent.repeat(this.nestingLevel);\n            closeBrace.createChild('span').textContent = '}';\n        }\n        else {\n            this.titleElement.classList.add('hidden');\n        }\n        if (rule) {\n            const newRuleButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.insertStyleRuleBelow), 'plus', undefined, 'elements.new-style-rule');\n            newRuleButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.onNewRuleClick, this);\n            newRuleButton.setSize(\"SMALL\" /* Buttons.Button.Size.SMALL */);\n            newRuleButton.element.tabIndex = -1;\n            if (!this.newStyleRuleToolbar) {\n                this.newStyleRuleToolbar =\n                    new UI.Toolbar.Toolbar('sidebar-pane-section-toolbar new-rule-toolbar', this.element);\n            }\n            this.newStyleRuleToolbar.appendToolbarItem(newRuleButton);\n            UI.ARIAUtils.markAsHidden(this.newStyleRuleToolbar.element);\n        }\n        if (Root.Runtime.experiments.isEnabled('font-editor') && this.editable) {\n            this.fontEditorToolbar = new UI.Toolbar.Toolbar('sidebar-pane-section-toolbar', this.#styleRuleElement);\n            this.fontEditorSectionManager = new FontEditorSectionManager(this.parentPane.swatchPopoverHelper(), this);\n            this.fontEditorButton =\n                new UI.Toolbar.ToolbarButton('Font Editor', 'custom-typography', undefined, 'font-editor');\n            this.fontEditorButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, () => {\n                this.onFontEditorButtonClicked();\n            }, this);\n            this.fontEditorButton.element.addEventListener('keydown', event => {\n                if (Platform.KeyboardUtilities.isEnterOrSpaceKey(event)) {\n                    event.consume(true);\n                    this.onFontEditorButtonClicked();\n                }\n            }, false);\n            this.fontEditorToolbar.appendToolbarItem(this.fontEditorButton);\n            if (this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Inline) {\n                if (this.newStyleRuleToolbar) {\n                    this.newStyleRuleToolbar.element.classList.add('shifted-toolbar');\n                }\n            }\n            else {\n                this.fontEditorToolbar.element.classList.add('font-toolbar-hidden');\n            }\n        }\n        this.selectorElement.addEventListener('click', this.handleSelectorClick.bind(this), false);\n        this.selectorElement.setAttribute('jslog', `${VisualLogging.cssRuleHeader('selector').track({ click: true, change: true })}`);\n        this.element.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), false);\n        this.element.addEventListener('mousedown', this.handleEmptySpaceMouseDown.bind(this), false);\n        this.element.addEventListener('click', this.handleEmptySpaceClick.bind(this), false);\n        this.element.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n        this.element.addEventListener('mouseleave', this.onMouseLeave.bind(this), false);\n        this.selectedSinceMouseDown = false;\n        this.elementToSelectorIndex = new WeakMap();\n        if (rule) {\n            // Prevent editing the user agent and user rules.\n            if (rule.isUserAgent() || rule.isInjected()) {\n                this.editable = false;\n            }\n            else {\n                // Check this is a real CSSRule, not a bogus object coming from BlankStylePropertiesSection.\n                if (rule.styleSheetId) {\n                    const header = rule.cssModel().styleSheetHeaderForId(rule.styleSheetId);\n                    this.navigable = header && !header.isAnonymousInlineStyleSheet();\n                }\n            }\n        }\n        this.selectorRefElement = document.createElement('div');\n        this.selectorRefElement.classList.add('styles-section-subtitle');\n        this.element.prepend(this.selectorRefElement);\n        this.updateRuleOrigin();\n        this.titleElement.appendChild(selectorContainer);\n        if (this.navigable) {\n            this.element.classList.add('navigable');\n        }\n        if (!this.editable) {\n            this.element.classList.add('read-only');\n            this.propertiesTreeOutline.element.classList.add('read-only');\n        }\n        this.hoverableSelectorsMode = false;\n        this.isHiddenInternal = false;\n        this.markSelectorMatches();\n        this.onpopulate();\n    }\n    setComputedStyles(computedStyles) {\n        this.computedStyles = computedStyles;\n    }\n    setParentsComputedStyles(parentsComputedStyles) {\n        this.parentsComputedStyles = parentsComputedStyles;\n    }\n    updateAuthoringHint() {\n        let child = this.propertiesTreeOutline.firstChild();\n        while (child) {\n            if (child instanceof StylePropertyTreeElement) {\n                child.setComputedStyles(this.computedStyles);\n                child.setParentsComputedStyles(this.parentsComputedStyles);\n                child.updateAuthoringHint();\n            }\n            child = child.nextSibling;\n        }\n    }\n    setSectionIdx(sectionIdx) {\n        this.sectionIdx = sectionIdx;\n        this.onpopulate();\n    }\n    getSectionIdx() {\n        return this.sectionIdx;\n    }\n    registerFontProperty(treeElement) {\n        if (this.fontEditorSectionManager) {\n            this.fontEditorSectionManager.registerFontProperty(treeElement);\n        }\n        if (this.fontEditorToolbar) {\n            this.fontEditorToolbar.element.classList.remove('font-toolbar-hidden');\n            if (this.newStyleRuleToolbar) {\n                this.newStyleRuleToolbar.element.classList.add('shifted-toolbar');\n            }\n        }\n    }\n    resetToolbars() {\n        if (this.parentPane.swatchPopoverHelper().isShowing() ||\n            this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Inline) {\n            return;\n        }\n        if (this.fontEditorToolbar) {\n            this.fontEditorToolbar.element.classList.add('font-toolbar-hidden');\n        }\n        if (this.newStyleRuleToolbar) {\n            this.newStyleRuleToolbar.element.classList.remove('shifted-toolbar');\n        }\n    }\n    static createRuleOriginNode(matchedStyles, linkifier, rule) {\n        if (!rule) {\n            return document.createTextNode('');\n        }\n        const ruleLocation = StylePropertiesSection.getRuleLocationFromCSSRule(rule);\n        const header = rule.styleSheetId ? matchedStyles.cssModel().styleSheetHeaderForId(rule.styleSheetId) : null;\n        function linkifyRuleLocation() {\n            if (!rule) {\n                return null;\n            }\n            if (ruleLocation && rule.styleSheetId && header &&\n                (!header.isAnonymousInlineStyleSheet() ||\n                    matchedStyles.cssModel().sourceMapManager().sourceMapForClient(header))) {\n                return StylePropertiesSection.linkifyRuleLocation(matchedStyles.cssModel(), linkifier, rule.styleSheetId, ruleLocation);\n            }\n            return null;\n        }\n        function linkifyNode(label) {\n            if (header?.ownerNode) {\n                const link = linkifyDeferredNodeReference(header.ownerNode, {\n                    preventKeyboardFocus: false,\n                    tooltip: undefined,\n                });\n                link.textContent = label;\n                return link;\n            }\n            return null;\n        }\n        if (header?.isMutable && !header.isViaInspector()) {\n            const location = header.isConstructedByNew() && !header.sourceMapURL ? null : linkifyRuleLocation();\n            if (location) {\n                return location;\n            }\n            const label = header.isConstructedByNew() ? i18nString(UIStrings.constructedStylesheet) : STYLE_TAG;\n            const node = linkifyNode(label);\n            if (node) {\n                return node;\n            }\n            return document.createTextNode(label);\n        }\n        const location = linkifyRuleLocation();\n        if (location) {\n            return location;\n        }\n        if (rule.isUserAgent()) {\n            return document.createTextNode(i18nString(UIStrings.userAgentStylesheet));\n        }\n        if (rule.isInjected()) {\n            return document.createTextNode(i18nString(UIStrings.injectedStylesheet));\n        }\n        if (rule.isViaInspector()) {\n            return document.createTextNode(i18nString(UIStrings.viaInspector));\n        }\n        const node = linkifyNode(STYLE_TAG);\n        if (node) {\n            return node;\n        }\n        return document.createTextNode('');\n    }\n    createRuleOriginNode(matchedStyles, linkifier, rule) {\n        return StylePropertiesSection.createRuleOriginNode(matchedStyles, linkifier, rule);\n    }\n    static getRuleLocationFromCSSRule(rule) {\n        let ruleLocation;\n        if (rule instanceof SDK.CSSRule.CSSStyleRule) {\n            ruleLocation = rule.style.range;\n        }\n        else if (rule instanceof SDK.CSSRule.CSSKeyframeRule) {\n            ruleLocation = rule.key().range;\n        }\n        return ruleLocation;\n    }\n    static tryNavigateToRuleLocation(matchedStyles, rule) {\n        if (!rule) {\n            return;\n        }\n        const ruleLocation = this.getRuleLocationFromCSSRule(rule);\n        const header = rule.styleSheetId ? matchedStyles.cssModel().styleSheetHeaderForId(rule.styleSheetId) : null;\n        if (ruleLocation && rule.styleSheetId && header && !header.isAnonymousInlineStyleSheet()) {\n            const matchingSelectorLocation = this.getCSSSelectorLocation(matchedStyles.cssModel(), rule.styleSheetId, ruleLocation);\n            this.revealSelectorSource(matchingSelectorLocation, true);\n        }\n    }\n    static linkifyRuleLocation(cssModel, linkifier, styleSheetId, ruleLocation) {\n        const matchingSelectorLocation = this.getCSSSelectorLocation(cssModel, styleSheetId, ruleLocation);\n        return linkifier.linkifyCSSLocation(matchingSelectorLocation);\n    }\n    static getCSSSelectorLocation(cssModel, styleSheetId, ruleLocation) {\n        const styleSheetHeader = cssModel.styleSheetHeaderForId(styleSheetId);\n        const lineNumber = styleSheetHeader.lineNumberInSource(ruleLocation.startLine);\n        const columnNumber = styleSheetHeader.columnNumberInSource(ruleLocation.startLine, ruleLocation.startColumn);\n        return new SDK.CSSModel.CSSLocation(styleSheetHeader, lineNumber, columnNumber);\n    }\n    getFocused() {\n        return this.propertiesTreeOutline.shadowRoot.activeElement || null;\n    }\n    focusNext(element) {\n        // Clear remembered focused item (if any).\n        const focused = this.getFocused();\n        if (focused) {\n            focused.tabIndex = -1;\n        }\n        // Focus the next item and remember it (if in our subtree).\n        element.focus();\n        if (this.propertiesTreeOutline.shadowRoot.contains(element)) {\n            element.tabIndex = 0;\n        }\n    }\n    ruleNavigation(keyboardEvent) {\n        if (keyboardEvent.altKey || keyboardEvent.ctrlKey || keyboardEvent.metaKey || keyboardEvent.shiftKey) {\n            return;\n        }\n        const focused = this.getFocused();\n        let focusNext = null;\n        const focusable = Array.from(this.propertiesTreeOutline.shadowRoot.querySelectorAll('[tabindex]'));\n        if (focusable.length === 0) {\n            return;\n        }\n        const focusedIndex = focused ? focusable.indexOf(focused) : -1;\n        if (keyboardEvent.key === 'ArrowLeft') {\n            focusNext = focusable[focusedIndex - 1] || this.element;\n        }\n        else if (keyboardEvent.key === 'ArrowRight') {\n            focusNext = focusable[focusedIndex + 1] || this.element;\n        }\n        else if (keyboardEvent.key === 'ArrowUp' || keyboardEvent.key === 'ArrowDown') {\n            this.focusNext(this.element);\n            return;\n        }\n        if (focusNext) {\n            this.focusNext(focusNext);\n            keyboardEvent.consume(true);\n        }\n    }\n    onKeyDown(event) {\n        const keyboardEvent = event;\n        if (UI.UIUtils.isEditing() || !this.editable || keyboardEvent.altKey || keyboardEvent.ctrlKey ||\n            keyboardEvent.metaKey) {\n            return;\n        }\n        switch (keyboardEvent.key) {\n            case 'Enter':\n            case ' ':\n                this.startEditingAtFirstPosition();\n                keyboardEvent.consume(true);\n                break;\n            case 'ArrowLeft':\n            case 'ArrowRight':\n            case 'ArrowUp':\n            case 'ArrowDown':\n                this.ruleNavigation(keyboardEvent);\n                break;\n            default:\n                // Filter out non-printable key strokes.\n                if (keyboardEvent.key.length === 1) {\n                    this.addNewBlankProperty(0).startEditingName();\n                }\n                break;\n        }\n    }\n    setSectionHovered(isHovered) {\n        this.element.classList.toggle('styles-panel-hovered', isHovered);\n        this.propertiesTreeOutline.element.classList.toggle('styles-panel-hovered', isHovered);\n        if (this.hoverableSelectorsMode !== isHovered) {\n            this.hoverableSelectorsMode = isHovered;\n            this.markSelectorMatches();\n        }\n    }\n    onMouseLeave(_event) {\n        this.setSectionHovered(false);\n        this.parentPane.setActiveProperty(null);\n    }\n    onMouseMove(event) {\n        const hasCtrlOrMeta = UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(event);\n        this.setSectionHovered(hasCtrlOrMeta);\n        const treeElement = this.propertiesTreeOutline.treeElementFromEvent(event);\n        if (treeElement instanceof StylePropertyTreeElement) {\n            this.parentPane.setActiveProperty(treeElement);\n        }\n        else {\n            this.parentPane.setActiveProperty(null);\n        }\n        const selection = this.element.getComponentSelection();\n        if (!this.selectedSinceMouseDown && selection && selection.toString()) {\n            this.selectedSinceMouseDown = true;\n        }\n    }\n    onFontEditorButtonClicked() {\n        if (this.fontEditorSectionManager && this.fontEditorButton) {\n            void this.fontEditorSectionManager.showPopover(this.fontEditorButton.element, this.parentPane);\n        }\n    }\n    style() {\n        return this.styleInternal;\n    }\n    headerText() {\n        if (this.#customHeaderText) {\n            return this.#customHeaderText;\n        }\n        const node = this.matchedStyles.nodeForStyle(this.styleInternal);\n        if (this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Inline) {\n            return this.matchedStyles.isInherited(this.styleInternal) ? i18nString(UIStrings.styleAttribute) :\n                'element.style';\n        }\n        if (node && this.styleInternal.type === SDK.CSSStyleDeclaration.Type.Attributes) {\n            return i18nString(UIStrings.sattributesStyle, { PH1: node.nodeNameInCorrectCase() });\n        }\n        if (this.styleInternal.parentRule instanceof SDK.CSSRule.CSSStyleRule) {\n            return this.styleInternal.parentRule.selectorText();\n        }\n        return '';\n    }\n    onMouseOutSelector() {\n        if (this.hoverTimer) {\n            clearTimeout(this.hoverTimer);\n        }\n        SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n    onMouseEnterSelector() {\n        if (this.hoverTimer) {\n            clearTimeout(this.hoverTimer);\n        }\n        this.hoverTimer = window.setTimeout(this.highlight.bind(this), 300);\n    }\n    highlight(mode = 'all') {\n        SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n        const node = this.parentPane.node();\n        if (!node) {\n            return;\n        }\n        const selectorList = this.styleInternal.parentRule && this.styleInternal.parentRule instanceof SDK.CSSRule.CSSStyleRule ?\n            this.styleInternal.parentRule.selectorText() :\n            undefined;\n        node.domModel().overlayModel().highlightInOverlay({ node, selectorList }, mode);\n    }\n    firstSibling() {\n        const parent = this.element.parentElement;\n        if (!parent) {\n            return null;\n        }\n        let childElement = parent.firstChild;\n        while (childElement) {\n            const childSection = this.parentPane.sectionByElement.get(childElement);\n            if (childSection) {\n                return childSection;\n            }\n            childElement = childElement.nextSibling;\n        }\n        return null;\n    }\n    findCurrentOrNextVisible(willIterateForward, originalSection) {\n        if (!this.isHidden()) {\n            return this;\n        }\n        if (this === originalSection) {\n            return null;\n        }\n        if (!originalSection) {\n            originalSection = this;\n        }\n        let visibleSibling = null;\n        const nextSibling = willIterateForward ? this.nextSibling() : this.previousSibling();\n        if (nextSibling) {\n            visibleSibling = nextSibling.findCurrentOrNextVisible(willIterateForward, originalSection);\n        }\n        else {\n            const loopSibling = willIterateForward ? this.firstSibling() : this.lastSibling();\n            if (loopSibling) {\n                visibleSibling = loopSibling.findCurrentOrNextVisible(willIterateForward, originalSection);\n            }\n        }\n        return visibleSibling;\n    }\n    lastSibling() {\n        const parent = this.element.parentElement;\n        if (!parent) {\n            return null;\n        }\n        let childElement = parent.lastChild;\n        while (childElement) {\n            const childSection = this.parentPane.sectionByElement.get(childElement);\n            if (childSection) {\n                return childSection;\n            }\n            childElement = childElement.previousSibling;\n        }\n        return null;\n    }\n    nextSibling() {\n        let curElement = this.element;\n        do {\n            curElement = curElement.nextSibling;\n        } while (curElement && !this.parentPane.sectionByElement.has(curElement));\n        if (curElement) {\n            return this.parentPane.sectionByElement.get(curElement);\n        }\n        return;\n    }\n    previousSibling() {\n        let curElement = this.element;\n        do {\n            curElement = curElement.previousSibling;\n        } while (curElement && !this.parentPane.sectionByElement.has(curElement));\n        if (curElement) {\n            return this.parentPane.sectionByElement.get(curElement);\n        }\n        return;\n    }\n    onNewRuleClick(event) {\n        event.data.consume();\n        const rule = this.styleInternal.parentRule;\n        if (!rule || !rule.style.range || rule.styleSheetId === undefined) {\n            return;\n        }\n        const range = TextUtils.TextRange.TextRange.createFromLocation(rule.style.range.endLine, rule.style.range.endColumn + 1);\n        this.parentPane.addBlankSection(this, rule.styleSheetId, range);\n    }\n    styleSheetEdited(edit) {\n        const rule = this.styleInternal.parentRule;\n        if (rule) {\n            rule.rebase(edit);\n        }\n        else {\n            this.styleInternal.rebase(edit);\n        }\n        this.updateAncestorRuleList();\n        this.updateRuleOrigin();\n    }\n    createAncestorRules(rule) {\n        let mediaIndex = 0;\n        let containerIndex = 0;\n        let scopeIndex = 0;\n        let supportsIndex = 0;\n        let nestingIndex = 0;\n        this.nestingLevel = 0;\n        const indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n        for (const ruleType of rule.ruleTypes) {\n            let ancestorRuleElement;\n            switch (ruleType) {\n                case \"MediaRule\" /* Protocol.CSS.CSSRuleType.MediaRule */:\n                    ancestorRuleElement = this.createMediaElement(rule.media[mediaIndex++]);\n                    break;\n                case \"ContainerRule\" /* Protocol.CSS.CSSRuleType.ContainerRule */:\n                    ancestorRuleElement = this.createContainerQueryElement(rule.containerQueries[containerIndex++]);\n                    break;\n                case \"ScopeRule\" /* Protocol.CSS.CSSRuleType.ScopeRule */:\n                    ancestorRuleElement = this.createScopeElement(rule.scopes[scopeIndex++]);\n                    break;\n                case \"SupportsRule\" /* Protocol.CSS.CSSRuleType.SupportsRule */:\n                    ancestorRuleElement = this.createSupportsElement(rule.supports[supportsIndex++]);\n                    break;\n                case \"StyleRule\" /* Protocol.CSS.CSSRuleType.StyleRule */:\n                    ancestorRuleElement = this.createNestingElement(rule.nestingSelectors?.[nestingIndex++]);\n                    break;\n            }\n            if (ancestorRuleElement) {\n                this.#ancestorRuleListElement.prepend(ancestorRuleElement);\n                const closingBrace = document.createElement('div');\n                closingBrace.createChild('span', 'styles-clipboard-only').textContent = indent.repeat(this.nestingLevel);\n                closingBrace.style.paddingLeft = `${this.nestingLevel}ch`;\n                closingBrace.append('}');\n                this.#ancestorClosingBracesElement.prepend(closingBrace);\n                this.nestingLevel++;\n            }\n        }\n        if (this.headerText().length === 0) {\n            // We reduce one level since no selector means one less pair of braces are added for declarations.\n            this.nestingLevel--;\n        }\n        let curNestingLevel = 0;\n        for (const element of this.#ancestorRuleListElement.children) {\n            const indentElement = document.createElement('span');\n            indentElement.classList.add('styles-clipboard-only');\n            indentElement.setAttribute('slot', 'indent');\n            indentElement.textContent = indent.repeat(curNestingLevel);\n            element.prepend(indentElement);\n            element.style.paddingLeft = `${curNestingLevel}ch`;\n            curNestingLevel++;\n        }\n    }\n    createMediaElement(media) {\n        // Don't display trivial non-print media types.\n        const isMedia = !media.text || !media.text.includes('(') && media.text !== 'print';\n        if (isMedia) {\n            return;\n        }\n        let queryPrefix = '';\n        let queryText = '';\n        let onQueryTextClick;\n        switch (media.source) {\n            case SDK.CSSMedia.Source.LINKED_SHEET:\n            case SDK.CSSMedia.Source.INLINE_SHEET: {\n                queryText = `media=\"${media.text}\"`;\n                break;\n            }\n            case SDK.CSSMedia.Source.MEDIA_RULE: {\n                queryPrefix = '@media';\n                queryText = media.text;\n                if (media.styleSheetId) {\n                    onQueryTextClick = this.handleQueryRuleClick.bind(this, media);\n                }\n                break;\n            }\n            case SDK.CSSMedia.Source.IMPORT_RULE: {\n                queryText = `@import ${media.text}`;\n                break;\n            }\n        }\n        const mediaQueryElement = new ElementsComponents.CSSQuery.CSSQuery();\n        mediaQueryElement.data = {\n            queryPrefix,\n            queryText,\n            onQueryTextClick,\n            jslogContext: 'media-query',\n        };\n        return mediaQueryElement;\n    }\n    createContainerQueryElement(containerQuery) {\n        if (!containerQuery.text) {\n            return;\n        }\n        let onQueryTextClick;\n        if (containerQuery.styleSheetId) {\n            onQueryTextClick = this.handleQueryRuleClick.bind(this, containerQuery);\n        }\n        const containerQueryElement = new ElementsComponents.CSSQuery.CSSQuery();\n        containerQueryElement.data = {\n            queryPrefix: '@container',\n            queryName: containerQuery.name,\n            queryText: containerQuery.text,\n            onQueryTextClick,\n            jslogContext: 'container-query',\n        };\n        if (!/^style\\(.*\\)/.test(containerQuery.text)) {\n            // We only add container element for non-style queries.\n            void this.addContainerForContainerQuery(containerQuery);\n        }\n        return containerQueryElement;\n    }\n    createScopeElement(scope) {\n        let onQueryTextClick;\n        if (scope.styleSheetId) {\n            onQueryTextClick = this.handleQueryRuleClick.bind(this, scope);\n        }\n        const scopeElement = new ElementsComponents.CSSQuery.CSSQuery();\n        scopeElement.data = {\n            queryPrefix: '@scope',\n            queryText: scope.text,\n            onQueryTextClick,\n            jslogContext: 'scope',\n        };\n        return scopeElement;\n    }\n    createSupportsElement(supports) {\n        if (!supports.text) {\n            return;\n        }\n        let onQueryTextClick;\n        if (supports.styleSheetId) {\n            onQueryTextClick = this.handleQueryRuleClick.bind(this, supports);\n        }\n        const supportsElement = new ElementsComponents.CSSQuery.CSSQuery();\n        supportsElement.data = {\n            queryPrefix: '@supports',\n            queryText: supports.text,\n            onQueryTextClick,\n            jslogContext: 'supports',\n        };\n        return supportsElement;\n    }\n    createNestingElement(nestingSelector) {\n        if (!nestingSelector) {\n            return;\n        }\n        const nestingElement = document.createElement('div');\n        nestingElement.textContent = `${nestingSelector} {`;\n        return nestingElement;\n    }\n    async addContainerForContainerQuery(containerQuery) {\n        const container = await containerQuery.getContainerForNode(this.matchedStyles.node().id);\n        if (!container) {\n            return;\n        }\n        const containerElement = new ElementsComponents.QueryContainer.QueryContainer();\n        containerElement.data = {\n            container: ElementsComponents.Helper.legacyNodeToElementsComponentsNode(container.containerNode),\n            queryName: containerQuery.name,\n            onContainerLinkClick: event => {\n                event.preventDefault();\n                void ElementsPanel.instance().revealAndSelectNode(container.containerNode, true, true);\n                void container.containerNode.scrollIntoView();\n            },\n        };\n        containerElement.addEventListener('queriedsizerequested', async () => {\n            const details = await container.getContainerSizeDetails();\n            if (details) {\n                containerElement.updateContainerQueriedSizeDetails(details);\n            }\n        });\n        this.#ancestorRuleListElement.prepend(containerElement);\n    }\n    updateAncestorRuleList() {\n        this.#ancestorRuleListElement.removeChildren();\n        this.#ancestorClosingBracesElement.removeChildren();\n        if (this.styleInternal.parentRule && this.styleInternal.parentRule instanceof SDK.CSSRule.CSSStyleRule) {\n            this.createAncestorRules(this.styleInternal.parentRule);\n        }\n        this.#styleRuleElement.style.paddingLeft = `${this.nestingLevel}ch`;\n    }\n    isPropertyInherited(propertyName) {\n        if (this.matchedStyles.isInherited(this.styleInternal)) {\n            // While rendering inherited stylesheet, reverse meaning of this property.\n            // Render truly inherited properties with black, i.e. return them as non-inherited.\n            return !SDK.CSSMetadata.cssMetadata().isPropertyInherited(propertyName);\n        }\n        return false;\n    }\n    nextEditableSibling() {\n        let curSection = this;\n        do {\n            curSection = curSection.nextSibling();\n        } while (curSection && !curSection.editable);\n        if (!curSection) {\n            curSection = this.firstSibling();\n            while (curSection && !curSection.editable) {\n                curSection = curSection.nextSibling();\n            }\n        }\n        return (curSection && curSection.editable) ? curSection : null;\n    }\n    previousEditableSibling() {\n        let curSection = this;\n        do {\n            curSection = curSection.previousSibling();\n        } while (curSection && !curSection.editable);\n        if (!curSection) {\n            curSection = this.lastSibling();\n            while (curSection && !curSection.editable) {\n                curSection = curSection.previousSibling();\n            }\n        }\n        return (curSection && curSection.editable) ? curSection : null;\n    }\n    refreshUpdate(editedTreeElement) {\n        this.parentPane.refreshUpdate(this, editedTreeElement);\n    }\n    updateVarFunctions(editedTreeElement) {\n        if (!editedTreeElement.property.name.startsWith('--')) {\n            return;\n        }\n        let child = this.propertiesTreeOutline.firstChild();\n        while (child) {\n            if (child !== editedTreeElement && child instanceof StylePropertyTreeElement) {\n                child.refreshIfComputedValueChanged();\n            }\n            child = child.traverseNextTreeElement(false /* skipUnrevealed */, null /* stayWithin */, true /* dontPopulate */);\n        }\n    }\n    update(full) {\n        const headerText = this.headerText();\n        this.selectorElement.textContent = headerText;\n        this.titleElement.classList.toggle('hidden', headerText.length === 0);\n        this.markSelectorMatches();\n        if (full) {\n            this.onpopulate();\n        }\n        else {\n            let child = this.propertiesTreeOutline.firstChild();\n            while (child && child instanceof StylePropertyTreeElement) {\n                child.setOverloaded(this.isPropertyOverloaded(child.property));\n                child =\n                    child.traverseNextTreeElement(false /* skipUnrevealed */, null /* stayWithin */, true /* dontPopulate */);\n            }\n        }\n    }\n    showAllItems(event) {\n        if (event) {\n            event.consume();\n        }\n        if (this.forceShowAll) {\n            return;\n        }\n        this.forceShowAll = true;\n        this.onpopulate();\n    }\n    onpopulate() {\n        this.parentPane.setActiveProperty(null);\n        this.nextEditorTriggerButtonIdx = 1;\n        this.propertiesTreeOutline.removeChildren();\n        const style = this.styleInternal;\n        let count = 0;\n        const properties = style.leadingProperties();\n        const maxProperties = DEFAULT_MAX_PROPERTIES + properties.length - this.originalPropertiesCount;\n        for (const property of properties) {\n            if (!this.forceShowAll && count >= maxProperties) {\n                break;\n            }\n            count++;\n            const isShorthand = property.getLonghandProperties().length > 0;\n            const inherited = this.isPropertyInherited(property.name);\n            const overloaded = this.isPropertyOverloaded(property);\n            if (style.parentRule && style.parentRule.isUserAgent() && inherited) {\n                continue;\n            }\n            const item = new StylePropertyTreeElement({\n                stylesPane: this.parentPane,\n                section: this,\n                matchedStyles: this.matchedStyles,\n                property,\n                isShorthand,\n                inherited,\n                overloaded,\n                newProperty: false,\n            });\n            item.setComputedStyles(this.computedStyles);\n            item.setParentsComputedStyles(this.parentsComputedStyles);\n            this.propertiesTreeOutline.appendChild(item);\n        }\n        if (count < properties.length) {\n            this.showAllButton.classList.remove('hidden');\n            this.showAllButton.textContent = i18nString(UIStrings.showAllPropertiesSMore, { PH1: properties.length - count });\n        }\n        else {\n            this.showAllButton.classList.add('hidden');\n        }\n    }\n    isPropertyOverloaded(property) {\n        return this.matchedStyles.propertyState(property) === \"Overloaded\" /* SDK.CSSMatchedStyles.PropertyState.OVERLOADED */;\n    }\n    updateFilter() {\n        let hasMatchingChild = false;\n        this.showAllItems();\n        for (const child of this.propertiesTreeOutline.rootElement().children()) {\n            if (child instanceof StylePropertyTreeElement) {\n                const childHasMatches = child.updateFilter();\n                hasMatchingChild = hasMatchingChild || childHasMatches;\n            }\n        }\n        const regex = this.parentPane.filterRegex();\n        const hideRule = !hasMatchingChild && regex !== null && !regex.test(this.element.deepTextContent());\n        this.isHiddenInternal = hideRule;\n        this.element.classList.toggle('hidden', hideRule);\n        if (!hideRule && this.styleInternal.parentRule) {\n            this.markSelectorHighlights();\n        }\n        return !hideRule;\n    }\n    isHidden() {\n        return this.isHiddenInternal;\n    }\n    markSelectorMatches() {\n        const rule = this.styleInternal.parentRule;\n        if (!rule || !(rule instanceof SDK.CSSRule.CSSStyleRule)) {\n            return;\n        }\n        const matchingSelectorIndexes = this.matchedStyles.getMatchingSelectors(rule);\n        const matchingSelectors = new Array(rule.selectors.length).fill(false);\n        for (const matchingIndex of matchingSelectorIndexes) {\n            matchingSelectors[matchingIndex] = true;\n        }\n        if (this.parentPane.isEditingStyle) {\n            return;\n        }\n        const fragment = StylePropertiesSection.renderSelectors(rule.selectors, matchingSelectors, this.elementToSelectorIndex);\n        this.selectorElement.removeChildren();\n        this.selectorElement.appendChild(fragment);\n        this.markSelectorHighlights();\n    }\n    static getSpecificityStoredForNodeElement(element) {\n        return StylePropertiesSection.#nodeElementToSpecificity.get(element);\n    }\n    static renderSelectors(selectors, matchingSelectors, elementToSelectorIndex) {\n        const fragment = document.createDocumentFragment();\n        for (const [i, selector] of selectors.entries()) {\n            if (i) {\n                UI.UIUtils.createTextChild(fragment, ', ');\n            }\n            const selectorElement = document.createElement('span');\n            selectorElement.classList.add('simple-selector');\n            selectorElement.classList.toggle('selector-matches', matchingSelectors[i]);\n            if (selector.specificity) {\n                StylePropertiesSection.#nodeElementToSpecificity.set(selectorElement, selector.specificity);\n            }\n            elementToSelectorIndex.set(selectorElement, i);\n            selectorElement.textContent = selectors[i].text;\n            fragment.append(selectorElement);\n        }\n        return fragment;\n    }\n    markSelectorHighlights() {\n        const selectors = this.selectorElement.getElementsByClassName('simple-selector');\n        const regex = this.parentPane.filterRegex();\n        for (let i = 0; i < selectors.length; ++i) {\n            const selectorMatchesFilter = regex !== null && regex.test(selectors[i].textContent || '');\n            selectors[i].classList.toggle('filter-match', selectorMatchesFilter);\n        }\n    }\n    addNewBlankProperty(index = this.propertiesTreeOutline.rootElement().childCount()) {\n        const property = this.styleInternal.newBlankProperty(index);\n        const item = new StylePropertyTreeElement({\n            stylesPane: this.parentPane,\n            section: this,\n            matchedStyles: this.matchedStyles,\n            property,\n            isShorthand: false,\n            inherited: false,\n            overloaded: false,\n            newProperty: true,\n        });\n        this.propertiesTreeOutline.insertChild(item, property.index);\n        return item;\n    }\n    handleEmptySpaceMouseDown() {\n        this.willCauseCancelEditing = this.parentPane.isEditingStyle;\n        this.selectedSinceMouseDown = false;\n    }\n    handleEmptySpaceClick(event) {\n        // `this.willCauseCancelEditing` is a hacky way to understand whether we should\n        // create a new property or not on empty space click.\n        // For empty space clicks, the order of events are:\n        // when there isn't an edit operation going on:\n        //     * empty space mousedown -> empty space click\n        // when there is an edit operation going on:\n        //     * empty space mousedown -> text prompt blur -> empty space click\n        // text prompt blur sets the `isEditingStyle` to be `false` in parent pane.\n        // If we check `isEditingStyle` inside empty space click handler, it will\n        // always say `false` and will always cause a new blank property to be added.\n        // Because of this, we're checking and saving whether there is an ongoing\n        // edit operation inside empty space mousedown handler.\n        if (!this.editable || this.element.hasSelection() || this.willCauseCancelEditing || this.selectedSinceMouseDown) {\n            return;\n        }\n        const target = event.target;\n        if (target.classList.contains('header') || this.element.classList.contains('read-only') ||\n            target.enclosingNodeOrSelfWithClass('ancestor-rule-list')) {\n            event.consume();\n            return;\n        }\n        const deepTarget = UI.UIUtils.deepElementFromEvent(event);\n        const treeElement = deepTarget && UI.TreeOutline.TreeElement.getTreeElementBylistItemNode(deepTarget);\n        if (treeElement && treeElement instanceof StylePropertyTreeElement) {\n            this.addNewBlankProperty(treeElement.property.index + 1).startEditingName();\n        }\n        else if (target.classList.contains('selector-container') || target.classList.contains('styles-section-subtitle')) {\n            this.addNewBlankProperty(0).startEditingName();\n        }\n        else {\n            this.addNewBlankProperty().startEditingName();\n        }\n        event.consume(true);\n    }\n    handleQueryRuleClick(query, event) {\n        const element = event.currentTarget;\n        if (UI.UIUtils.isBeingEdited(element)) {\n            return;\n        }\n        if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(event) && this.navigable) {\n            const location = query.rawLocation();\n            if (!location) {\n                event.consume(true);\n                return;\n            }\n            const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().rawLocationToUILocation(location);\n            if (uiLocation) {\n                void Common.Revealer.reveal(uiLocation);\n            }\n            event.consume(true);\n            return;\n        }\n        if (!this.editable) {\n            return;\n        }\n        const config = new UI.InplaceEditor.Config(this.editingMediaCommitted.bind(this, query), this.editingMediaCancelled.bind(this, element), undefined, this.editingMediaBlurHandler.bind(this));\n        UI.InplaceEditor.InplaceEditor.startEditing(element, config);\n        const selection = element.getComponentSelection();\n        if (selection) {\n            selection.selectAllChildren(element);\n        }\n        this.parentPane.setEditingStyle(true);\n        const parentMediaElement = element.enclosingNodeOrSelfWithClass('query');\n        parentMediaElement.classList.add('editing-query');\n        event.consume(true);\n    }\n    editingMediaFinished(element) {\n        this.parentPane.setEditingStyle(false);\n        const parentMediaElement = element.enclosingNodeOrSelfWithClass('query');\n        parentMediaElement.classList.remove('editing-query');\n    }\n    editingMediaCancelled(element) {\n        this.editingMediaFinished(element);\n        // Mark the selectors in group if necessary.\n        // This is overridden by BlankStylePropertiesSection.\n        this.markSelectorMatches();\n        const selection = element.getComponentSelection();\n        if (selection) {\n            selection.collapse(element, 0);\n        }\n    }\n    editingMediaBlurHandler() {\n        return true;\n    }\n    async editingMediaCommitted(query, element, newContent, _oldContent, _context, _moveDirection) {\n        this.parentPane.setEditingStyle(false);\n        this.editingMediaFinished(element);\n        if (newContent) {\n            newContent = newContent.trim();\n        }\n        // This gets deleted in finishOperation(), which is called both on success and failure.\n        this.parentPane.setUserOperation(true);\n        const cssModel = this.parentPane.cssModel();\n        if (cssModel && query.styleSheetId) {\n            const range = query.range;\n            let success = false;\n            if (query instanceof SDK.CSSContainerQuery.CSSContainerQuery) {\n                success = await cssModel.setContainerQueryText(query.styleSheetId, range, newContent);\n            }\n            else if (query instanceof SDK.CSSSupports.CSSSupports) {\n                success = await cssModel.setSupportsText(query.styleSheetId, range, newContent);\n            }\n            else if (query instanceof SDK.CSSScope.CSSScope) {\n                success = await cssModel.setScopeText(query.styleSheetId, range, newContent);\n            }\n            else {\n                success = await cssModel.setMediaText(query.styleSheetId, range, newContent);\n            }\n            if (success) {\n                this.matchedStyles.resetActiveProperties();\n                this.parentPane.refreshUpdate(this);\n            }\n            this.parentPane.setUserOperation(false);\n            this.editingMediaTextCommittedForTest();\n        }\n    }\n    editingMediaTextCommittedForTest() {\n    }\n    handleSelectorClick(event) {\n        const target = event.target;\n        if (!target) {\n            return;\n        }\n        if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(event) && this.navigable &&\n            target.classList.contains('simple-selector')) {\n            const selectorIndex = this.elementToSelectorIndex.get(target);\n            if (selectorIndex) {\n                this.navigateToSelectorSource(selectorIndex, true);\n            }\n            event.consume(true);\n            return;\n        }\n        if (this.element.hasSelection()) {\n            return;\n        }\n        this.startEditingAtFirstPosition();\n        event.consume(true);\n    }\n    handleContextMenuEvent(event) {\n        const target = event.target;\n        if (!target) {\n            return;\n        }\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copySelector), () => {\n            const selectorText = this.headerText();\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(selectorText);\n            Host.userMetrics.styleTextCopied(10 /* Host.UserMetrics.StyleTextCopied.SELECTOR_VIA_CONTEXT_MENU */);\n        }, { jslogContext: 'copy-selector' });\n        contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyRule), () => {\n            const ruleText = StylesSidebarPane.formatLeadingProperties(this).ruleText;\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(ruleText);\n            Host.userMetrics.styleTextCopied(7 /* Host.UserMetrics.StyleTextCopied.RULE_VIA_CONTEXT_MENU */);\n        }, { jslogContext: 'copy-rule' });\n        contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyAllDeclarations), () => {\n            const allDeclarationText = StylesSidebarPane.formatLeadingProperties(this).allDeclarationText;\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(allDeclarationText);\n            Host.userMetrics.styleTextCopied(8 /* Host.UserMetrics.StyleTextCopied.ALL_DECLARATIONS_VIA_CONTEXT_MENU */);\n        }, { jslogContext: 'copy-all-declarations' });\n        // TODO(changhaohan): conditionally add this item only when there are changes to copy\n        contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyAllCSSChanges), async () => {\n            const allChanges = await this.parentPane.getFormattedChanges();\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(allChanges);\n            Host.userMetrics.styleTextCopied(2 /* Host.UserMetrics.StyleTextCopied.ALL_CHANGES_VIA_STYLES_TAB */);\n        }, { jslogContext: 'copy-all-css-changes' });\n        void contextMenu.show();\n    }\n    navigateToSelectorSource(index, focus) {\n        const cssModel = this.parentPane.cssModel();\n        if (!cssModel) {\n            return;\n        }\n        const rule = this.styleInternal.parentRule;\n        if (!rule || rule.styleSheetId === undefined) {\n            return;\n        }\n        const header = cssModel.styleSheetHeaderForId(rule.styleSheetId);\n        if (!header) {\n            return;\n        }\n        const rawLocation = new SDK.CSSModel.CSSLocation(header, rule.lineNumberInSource(index), rule.columnNumberInSource(index));\n        StylePropertiesSection.revealSelectorSource(rawLocation, focus);\n    }\n    static revealSelectorSource(rawLocation, focus) {\n        const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().rawLocationToUILocation(rawLocation);\n        if (uiLocation) {\n            void Common.Revealer.reveal(uiLocation, !focus);\n        }\n    }\n    startEditingAtFirstPosition() {\n        if (!this.editable) {\n            return;\n        }\n        if (!this.styleInternal.parentRule) {\n            this.moveEditorFromSelector('forward');\n            return;\n        }\n        this.startEditingSelector();\n    }\n    startEditingSelector() {\n        const element = this.selectorElement;\n        if (UI.UIUtils.isBeingEdited(element)) {\n            return;\n        }\n        element.scrollIntoViewIfNeeded(false);\n        // Reset selector marks in group, and normalize whitespace.\n        const textContent = element.textContent;\n        if (textContent !== null) {\n            element.textContent = textContent.replace(/\\s+/g, ' ').trim();\n        }\n        const config = new UI.InplaceEditor.Config(this.editingSelectorCommitted.bind(this), this.editingSelectorCancelled.bind(this));\n        UI.InplaceEditor.InplaceEditor.startEditing(this.selectorElement, config);\n        const selection = element.getComponentSelection();\n        if (selection) {\n            selection.selectAllChildren(element);\n        }\n        this.parentPane.setEditingStyle(true);\n        if (element.classList.contains('simple-selector')) {\n            this.navigateToSelectorSource(0, false);\n        }\n    }\n    moveEditorFromSelector(moveDirection) {\n        this.markSelectorMatches();\n        if (!moveDirection) {\n            return;\n        }\n        if (moveDirection === 'forward') {\n            const firstChild = this.propertiesTreeOutline.firstChild();\n            let currentChild = firstChild;\n            while (currentChild && currentChild.inherited()) {\n                const sibling = currentChild.nextSibling;\n                currentChild = sibling instanceof StylePropertyTreeElement ? sibling : null;\n            }\n            if (!currentChild) {\n                this.addNewBlankProperty().startEditingName();\n            }\n            else {\n                currentChild.startEditingName();\n            }\n        }\n        else {\n            const previousSection = this.previousEditableSibling();\n            if (!previousSection) {\n                return;\n            }\n            previousSection.addNewBlankProperty().startEditingName();\n        }\n    }\n    editingSelectorCommitted(element, newContent, oldContent, context, moveDirection) {\n        this.editingSelectorEnded();\n        if (newContent) {\n            newContent = newContent.trim();\n        }\n        if (newContent === oldContent) {\n            // Revert to a trimmed version of the selector if need be.\n            this.selectorElement.textContent = newContent;\n            this.moveEditorFromSelector(moveDirection);\n            return;\n        }\n        const rule = this.styleInternal.parentRule;\n        if (!rule) {\n            return;\n        }\n        function headerTextCommitted() {\n            this.parentPane.setUserOperation(false);\n            this.moveEditorFromSelector(moveDirection);\n            this.editingSelectorCommittedForTest();\n        }\n        // This gets deleted in finishOperationAndMoveEditor(), which is called both on success and failure.\n        this.parentPane.setUserOperation(true);\n        void this.setHeaderText(rule, newContent).then(headerTextCommitted.bind(this));\n    }\n    setHeaderText(rule, newContent) {\n        function onSelectorsUpdated(rule, success) {\n            if (!success) {\n                return Promise.resolve();\n            }\n            return this.matchedStyles.recomputeMatchingSelectors(rule).then(updateSourceRanges.bind(this, rule));\n        }\n        function updateSourceRanges(rule) {\n            const doesAffectSelectedNode = this.matchedStyles.getMatchingSelectors(rule).length > 0;\n            this.propertiesTreeOutline.element.classList.toggle('no-affect', !doesAffectSelectedNode);\n            this.matchedStyles.resetActiveProperties();\n            this.parentPane.refreshUpdate(this);\n        }\n        if (!(rule instanceof SDK.CSSRule.CSSStyleRule)) {\n            return Promise.resolve();\n        }\n        const oldSelectorRange = rule.selectorRange();\n        if (!oldSelectorRange) {\n            return Promise.resolve();\n        }\n        this.#customHeaderText = undefined;\n        return rule.setSelectorText(newContent).then(onSelectorsUpdated.bind(this, rule, Boolean(oldSelectorRange)));\n    }\n    editingSelectorCommittedForTest() {\n    }\n    updateRuleOrigin() {\n        this.selectorRefElement.removeChildren();\n        this.selectorRefElement.appendChild(this.createRuleOriginNode(this.matchedStyles, this.parentPane.linkifier, this.styleInternal.parentRule));\n    }\n    editingSelectorEnded() {\n        this.parentPane.setEditingStyle(false);\n    }\n    editingSelectorCancelled() {\n        this.editingSelectorEnded();\n        // Mark the selectors in group if necessary.\n        // This is overridden by BlankStylePropertiesSection.\n        this.markSelectorMatches();\n    }\n    /**\n     * A property at or near an index and suitable for subsequent editing.\n     * Either the last property, if index out-of-upper-bound,\n     * or property at index, if such a property exists,\n     * or otherwise, null.\n     */\n    closestPropertyForEditing(propertyIndex) {\n        const rootElement = this.propertiesTreeOutline.rootElement();\n        if (propertyIndex >= rootElement.childCount()) {\n            return rootElement.lastChild();\n        }\n        return rootElement.childAt(propertyIndex);\n    }\n}\nexport class BlankStylePropertiesSection extends StylePropertiesSection {\n    normal;\n    ruleLocation;\n    styleSheetId;\n    constructor(stylesPane, matchedStyles, defaultSelectorText, styleSheetId, ruleLocation, insertAfterStyle, sectionIdx) {\n        const cssModel = stylesPane.cssModel();\n        const rule = SDK.CSSRule.CSSStyleRule.createDummyRule(cssModel, defaultSelectorText);\n        super(stylesPane, matchedStyles, rule.style, sectionIdx, null, null);\n        this.normal = false;\n        this.ruleLocation = ruleLocation;\n        this.styleSheetId = styleSheetId;\n        this.selectorRefElement.removeChildren();\n        this.selectorRefElement.appendChild(StylePropertiesSection.linkifyRuleLocation(cssModel, this.parentPane.linkifier, styleSheetId, this.actualRuleLocation()));\n        if (insertAfterStyle && insertAfterStyle.parentRule &&\n            insertAfterStyle.parentRule instanceof SDK.CSSRule.CSSStyleRule) {\n            this.createAncestorRules(insertAfterStyle.parentRule);\n        }\n        this.element.classList.add('blank-section');\n    }\n    actualRuleLocation() {\n        const prefix = this.rulePrefix();\n        const lines = prefix.split('\\n');\n        const lastLine = lines[lines.length - 1];\n        const editRange = new TextUtils.TextRange.TextRange(0, 0, lines.length - 1, lastLine ? lastLine.length : 0);\n        return this.ruleLocation.rebaseAfterTextEdit(TextUtils.TextRange.TextRange.createFromLocation(0, 0), editRange);\n    }\n    rulePrefix() {\n        return this.ruleLocation.startLine === 0 && this.ruleLocation.startColumn === 0 ? '' : '\\n\\n';\n    }\n    get isBlank() {\n        return !this.normal;\n    }\n    editingSelectorCommitted(element, newContent, oldContent, context, moveDirection) {\n        if (!this.isBlank) {\n            super.editingSelectorCommitted(element, newContent, oldContent, context, moveDirection);\n            return;\n        }\n        function onRuleAdded(newRule) {\n            if (!newRule) {\n                this.editingSelectorCancelled();\n                this.editingSelectorCommittedForTest();\n                return Promise.resolve();\n            }\n            return this.matchedStyles.addNewRule(newRule, this.matchedStyles.node())\n                .then(onAddedToCascade.bind(this, newRule));\n        }\n        function onAddedToCascade(newRule) {\n            const doesSelectorAffectSelectedNode = this.matchedStyles.getMatchingSelectors(newRule).length > 0;\n            this.makeNormal(newRule);\n            if (!doesSelectorAffectSelectedNode) {\n                this.propertiesTreeOutline.element.classList.add('no-affect');\n            }\n            this.updateRuleOrigin();\n            this.parentPane.setUserOperation(false);\n            this.editingSelectorEnded();\n            if (this.element.parentElement) // Might have been detached already.\n             {\n                this.moveEditorFromSelector(moveDirection);\n            }\n            this.markSelectorMatches();\n            this.editingSelectorCommittedForTest();\n        }\n        if (newContent) {\n            newContent = newContent.trim();\n        }\n        this.parentPane.setUserOperation(true);\n        const cssModel = this.parentPane.cssModel();\n        const ruleText = this.rulePrefix() + newContent + ' {}';\n        if (cssModel) {\n            void cssModel.addRule(this.styleSheetId, ruleText, this.ruleLocation).then(onRuleAdded.bind(this));\n        }\n    }\n    editingSelectorCancelled() {\n        this.parentPane.setUserOperation(false);\n        if (!this.isBlank) {\n            super.editingSelectorCancelled();\n            return;\n        }\n        this.editingSelectorEnded();\n        this.parentPane.removeSection(this);\n    }\n    makeNormal(newRule) {\n        this.element.classList.remove('blank-section');\n        this.styleInternal = newRule.style;\n        // FIXME: replace this instance by a normal StylePropertiesSection.\n        this.normal = true;\n    }\n}\nexport class RegisteredPropertiesSection extends StylePropertiesSection {\n    constructor(stylesPane, matchedStyles, style, sectionIdx, propertyName, expandedByDefault) {\n        super(stylesPane, matchedStyles, style, sectionIdx, null, null, propertyName);\n        if (!expandedByDefault) {\n            this.element.classList.add('hidden');\n        }\n        this.selectorElement.className = 'property-registration-key';\n    }\n    async setHeaderText(rule, newContent) {\n        if (!(rule instanceof SDK.CSSRule.CSSPropertyRule)) {\n            return;\n        }\n        const oldRange = rule.propertyName().range;\n        if (!oldRange) {\n            return;\n        }\n        if (await rule.setPropertyName(newContent)) {\n            this.parentPane.forceUpdate();\n        }\n    }\n    createRuleOriginNode(matchedStyles, linkifier, rule) {\n        if (rule) {\n            return super.createRuleOriginNode(matchedStyles, linkifier, rule);\n        }\n        return document.createTextNode('CSS.registerProperty');\n    }\n}\nexport class FontPaletteValuesRuleSection extends StylePropertiesSection {\n    constructor(stylesPane, matchedStyles, style, sectionIdx) {\n        super(stylesPane, matchedStyles, style, sectionIdx, null, null);\n        this.selectorElement.className = 'font-palette-values-key';\n    }\n}\nexport class PositionTryRuleSection extends StylePropertiesSection {\n    constructor(stylesPane, matchedStyles, style, sectionIdx, active) {\n        super(stylesPane, matchedStyles, style, sectionIdx, null, null);\n        this.selectorElement.className = 'position-try-values-key';\n        this.propertiesTreeOutline.element.classList.toggle('no-affect', !active);\n    }\n}\nexport class KeyframePropertiesSection extends StylePropertiesSection {\n    constructor(stylesPane, matchedStyles, style, sectionIdx) {\n        super(stylesPane, matchedStyles, style, sectionIdx, null, null);\n        this.selectorElement.className = 'keyframe-key';\n    }\n    headerText() {\n        if (this.styleInternal.parentRule instanceof SDK.CSSRule.CSSKeyframeRule) {\n            return this.styleInternal.parentRule.key().text;\n        }\n        return '';\n    }\n    setHeaderText(rule, newContent) {\n        function updateSourceRanges(success) {\n            if (!success) {\n                return;\n            }\n            this.parentPane.refreshUpdate(this);\n        }\n        if (!(rule instanceof SDK.CSSRule.CSSKeyframeRule)) {\n            return Promise.resolve();\n        }\n        const oldRange = rule.key().range;\n        if (!oldRange) {\n            return Promise.resolve();\n        }\n        return rule.setKeyText(newContent).then(updateSourceRanges.bind(this));\n    }\n    isPropertyInherited(_propertyName) {\n        return false;\n    }\n    isPropertyOverloaded(_property) {\n        return false;\n    }\n    markSelectorHighlights() {\n    }\n    markSelectorMatches() {\n        if (this.styleInternal.parentRule instanceof SDK.CSSRule.CSSKeyframeRule) {\n            this.selectorElement.textContent = this.styleInternal.parentRule.key().text;\n        }\n    }\n    highlight() {\n    }\n}\nexport class HighlightPseudoStylePropertiesSection extends StylePropertiesSection {\n    isPropertyInherited(_propertyName) {\n        // For highlight pseudos, all valid properties are treated as inherited.\n        // Note that the meaning is reversed in this context; the result of\n        // returning false here is that properties of inherited pseudos will never\n        // be shown in the darker style of non-inherited properties.\n        return false;\n    }\n}\n//# sourceMappingURL=StylePropertiesSection.js.map","// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport { PanelUtils } from '../utils/utils.js';\nimport { StylePropertyTreeElement } from './StylePropertyTreeElement.js';\nexport class StylePropertyHighlighter {\n    styleSidebarPane;\n    constructor(ssp) {\n        this.styleSidebarPane = ssp;\n    }\n    /**\n     * Expand all shorthands, find the given property, scroll to it and highlight it.\n     */\n    highlightProperty(cssProperty) {\n        // Expand all shorthands.\n        for (const section of this.styleSidebarPane.allSections()) {\n            for (let treeElement = section.propertiesTreeOutline.firstChild(); treeElement; treeElement = treeElement.nextSibling) {\n                void treeElement.onpopulate();\n            }\n        }\n        const section = this.styleSidebarPane.allSections().find(section => section.style().leadingProperties().includes(cssProperty));\n        if (!section) {\n            return;\n        }\n        section.showAllItems();\n        const treeElement = this.findTreeElementFromSection(treeElement => treeElement.property === cssProperty, section);\n        if (treeElement) {\n            treeElement.parent && treeElement.parent.expand();\n            this.scrollAndHighlightTreeElement(treeElement);\n            section.element.focus();\n        }\n    }\n    findAndHighlightSectionBlock(sectionBlockName) {\n        const block = this.styleSidebarPane.getSectionBlockByName(sectionBlockName);\n        if (!block || block.sections.length === 0) {\n            return;\n        }\n        const [section] = block.sections;\n        section.showAllItems();\n        PanelUtils.highlightElement(block.titleElement());\n    }\n    findAndHighlightSection(sectionName, blockName) {\n        const block = this.styleSidebarPane.getSectionBlockByName(blockName);\n        const section = block?.sections.find(section => section.headerText() === sectionName);\n        if (!section || !block) {\n            return;\n        }\n        block.expand(true);\n        section.showAllItems();\n        PanelUtils.highlightElement(section.element);\n    }\n    /**\n     * Find the first non-overridden property that matches the provided name, scroll to it and highlight it.\n     */\n    findAndHighlightPropertyName(propertyName, sectionName, blockName) {\n        const block = blockName ? this.styleSidebarPane.getSectionBlockByName(blockName) : undefined;\n        const sections = block?.sections ?? this.styleSidebarPane.allSections();\n        if (!sections) {\n            return false;\n        }\n        for (const section of sections) {\n            if (sectionName && section.headerText() !== sectionName) {\n                continue;\n            }\n            if (!section.style().hasActiveProperty(propertyName)) {\n                continue;\n            }\n            block?.expand(true);\n            section.showAllItems();\n            const treeElement = this.findTreeElementFromSection(treeElement => treeElement.property.name === propertyName && !treeElement.overloaded(), section);\n            if (treeElement) {\n                this.scrollAndHighlightTreeElement(treeElement);\n                section.element.focus();\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Traverse the styles pane tree, execute the provided callback for every tree element found, and\n     * return the first tree element and corresponding section for which the callback returns a truthy value.\n     */\n    findTreeElementAndSection(compareCb) {\n        for (const section of this.styleSidebarPane.allSections()) {\n            const treeElement = this.findTreeElementFromSection(compareCb, section);\n            if (treeElement) {\n                return { treeElement, section };\n            }\n        }\n        return { treeElement: null, section: null };\n    }\n    findTreeElementFromSection(compareCb, section) {\n        let treeElement = section.propertiesTreeOutline.firstChild();\n        while (treeElement && (treeElement instanceof StylePropertyTreeElement)) {\n            if (compareCb(treeElement)) {\n                return treeElement;\n            }\n            treeElement = treeElement.traverseNextTreeElement(false, null, true);\n        }\n        return null;\n    }\n    scrollAndHighlightTreeElement(treeElement) {\n        PanelUtils.highlightElement(treeElement.listItemElement);\n    }\n}\n//# sourceMappingURL=StylePropertyHighlighter.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/**\n * Copyright 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.styles-section {\n  min-height: 18px;\n  white-space: nowrap;\n  user-select: text;\n  border-bottom: 1px solid var(--sys-color-divider);\n  position: relative;\n  overflow: hidden;\n  padding: 2px 2px 4px 4px;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  &.has-open-popover {\n    z-index: 1;\n  }\n\n  &.read-only {\n    background-color: var(--sys-color-cdt-base-container);\n    font-style: italic;\n  }\n\n  &:focus-visible,\n  &.read-only:focus-visible {\n    background-color: var(--sys-color-state-focus-highlight);\n  }\n\n  .simple-selector.filter-match {\n    background-color: var(--sys-color-tonal-container);\n    color: var(--sys-color-on-surface);\n  }\n\n  .devtools-link {\n    user-select: none;\n  }\n\n  .styles-section-subtitle devtools-icon {\n    margin-bottom: -4px;\n  }\n\n  .styles-section-subtitle .devtools-link {\n    color: var(--sys-color-on-surface);\n    text-decoration-color: var(--sys-color-neutral-bright);\n    outline-offset: 0;\n  }\n\n  .selector,\n  .try-rule-selector-element,\n  .ancestor-rule-list,\n  .ancestor-closing-braces {\n    color: var(--app-color-element-sidebar-subtitle);\n  }\n\n  .ancestor-rule-list,\n  .styles-section-title {\n    overflow-wrap: break-word;\n    white-space: normal;\n  }\n\n  .ancestor-rule-list devtools-css-query {\n    display: block;\n  }\n\n  .simple-selector.selector-matches,\n  &.keyframe-key {\n    color: var(--sys-color-on-surface);\n  }\n\n  .style-properties {\n    margin: 0;\n    padding: 2px 4px 0 0;\n    list-style: none;\n    clear: both;\n    display: flex;\n  }\n\n  &.matched-styles .style-properties {\n    padding-left: 0;\n  }\n\n  & span.simple-selector:hover {\n    text-decoration: var(--override-styles-section-text-hover-text-decoration);\n    cursor: var(--override-styles-section-text-hover-cursor);\n  }\n\n  &.styles-panel-hovered:not(.read-only),\n  &.styles-panel-hovered:not(.read-only) devtools-css-query {\n    --override-styles-section-text-hover-text-decoration: underline;\n    --override-styles-section-text-hover-cursor: default;\n  }\n}\n\n.sidebar-pane-closing-brace {\n  clear: both;\n}\n\n.styles-section-subtitle {\n  color: var(--sys-color-token-subtle);\n  float: right;\n  padding: var(--sys-size-2) var(--sys-size-2) 0 var(--sys-size-8);\n  max-width: 100%;\n  height: 15px;\n  margin-bottom: -1px;\n}\n\n.styles-section-subtitle * {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 100%;\n}\n\n.sidebar-pane-open-brace,\n.sidebar-pane-closing-brace {\n  color: var(--sys-color-on-surface);\n}\n\n@keyframes styles-element-state-pane-slidein {\n  from {\n    margin-top: -60px;\n  }\n\n  to {\n    margin-top: 0;\n  }\n}\n\n@keyframes styles-element-state-pane-slideout {\n  from {\n    margin-top: 0;\n  }\n\n  to {\n    margin-top: -60px;\n  }\n}\n\n.styles-sidebar-toolbar-pane {\n  position: relative;\n  animation-duration: 0.1s;\n  animation-direction: normal;\n}\n\n.styles-sidebar-toolbar-pane-container {\n  position: relative;\n  overflow: hidden;\n  flex-shrink: 0;\n}\n\n.styles-selector {\n  cursor: text;\n}\n\n/* TODO(changhaohan): restructure this in relation to stylePropertiesTreeOutline.css. */\n.styles-clipboard-only {\n  display: inline-block;\n  width: 0;\n  opacity: 0%;\n  pointer-events: none;\n  white-space: pre;\n}\n\n.styles-sidebar-pane-toolbar-container {\n  flex-shrink: 0;\n  overflow: hidden;\n  position: sticky;\n  top: 0;\n  background-color: var(--sys-color-cdt-base-container);\n  z-index: 2;\n}\n\n.styles-sidebar-pane-toolbar {\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.styles-pane-toolbar {\n  width: 100%;\n}\n\n.font-toolbar-hidden {\n  visibility: hidden;\n}\n\n.sidebar-separator {\n  background-color: var(--sys-color-surface2);\n  padding: 0 5px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  color: var(--sys-color-on-surface-subtle);\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  line-height: 22px;\n\n  > span.monospace {\n    max-width: 180px;\n    display: inline-block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    vertical-align: middle;\n    margin-left: 2px;\n  }\n\n  &.layer-separator {\n    display: flex;\n  }\n\n  &.empty-section {\n    border-bottom: none;\n  }\n}\n\n.sidebar-pane-section-toolbar {\n  position: absolute;\n  right: 0;\n  bottom: -1px;\n  z-index: 0;\n\n  &.new-rule-toolbar {\n    visibility: hidden;\n    margin-bottom: 5px;\n\n    --toolbar-height: 16px;\n  }\n\n  &.shifted-toolbar {\n    padding-right: 32px;\n  }\n}\n\n.styles-pane:not(.is-editing-style) .styles-section.matched-styles:not(.read-only):hover .sidebar-pane-section-toolbar.new-rule-toolbar {\n  visibility: visible;\n}\n\n.styles-show-all {\n  padding: 4px;\n  margin-left: 16px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: -webkit-fill-available;\n}\n\n@media (forced-colors: active) {\n  .sidebar-pane-section-toolbar {\n    forced-color-adjust: none;\n    border-color: 1px solid ButtonText;\n    background-color: ButtonFace;\n  }\n\n  .styles-section {\n    &:focus-visible,\n    &.read-only:focus-visible {\n      forced-color-adjust: none;\n      background-color: Highlight;\n    }\n\n    .styles-section-subtitle {\n      .devtools-link {\n        color: linktext;\n        text-decoration-color: linktext;\n\n        &:focus-visible {\n          color: HighlightText;\n        }\n      }\n    }\n\n    &:focus-visible *,\n    &.read-only:focus-visible *,\n    &:focus-visible .styles-section-subtitle .devtools-link {\n      color: HighlightText;\n      text-decoration-color: HighlightText;\n    }\n\n    &:focus-visible .sidebar-pane-section-toolbar {\n      background-color: ButtonFace;\n    }\n\n    &:focus-visible {\n      --webkit-css-property-color: HighlightText;\n    }\n  }\n}\n\n.spinner::before {\n  --dimension: 24px;\n\n  margin-top: 2em;\n  left: calc(50% - var(--dimension) / 2);\n}\n\n.section-block-expand-icon {\n  margin-bottom: -4px;\n}\n\n/*# sourceURL=stylesSidebarPane.css */\n`);\n\nexport default styles;\n","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Root from '../../core/root/root.js';\n/**\n * Lazily loads the vscode.web-custom-data/browser.css-data.json and allows\n * lookup by property name.\n *\n * The class intentionally doesn't return any promise to the loaded data.\n * Otherwise clients would need to Promise.race against a timeout to handle\n * the case where the data is not yet available.\n */\nexport class WebCustomData {\n    #data = new Map();\n    /** The test actually needs to wait for the result */\n    fetchPromiseForTest;\n    constructor(remoteBase) {\n        if (!remoteBase) {\n            this.fetchPromiseForTest = Promise.resolve();\n            return;\n        }\n        this.fetchPromiseForTest = fetch(`${remoteBase}third_party/vscode.web-custom-data/browsers.css-data.json`)\n            .then(response => response.json())\n            .then((json) => {\n            for (const property of json.properties) {\n                this.#data.set(property.name, property);\n            }\n        })\n            .catch();\n    }\n    /**\n     * Creates a fresh `WebCustomData` instance using the standard\n     * DevTools remote base.\n     * Throws if no valid remoteBase was found.\n     */\n    static create() {\n        const remoteBase = Root.Runtime.getRemoteBase();\n        // Silently skip loading of the CSS data if remoteBase is not set properly.\n        return new WebCustomData(remoteBase?.base ?? '');\n    }\n    /**\n     * Returns the documentation for the CSS property `name` or `undefined` if\n     * no such property is documented. Also returns `undefined` if data hasn't\n     * finished loading or failed to load.\n     */\n    findCssProperty(name) {\n        return this.#data.get(name);\n    }\n}\n//# sourceMappingURL=WebCustomData.js.map","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport { assertNotNullOrUndefined } from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport { PanelUtils } from '../../panels/utils/utils.js';\nimport * as DiffView from '../../ui/components/diff_view/diff_view.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as ElementsComponents from './components/components.js';\nimport { ComputedStyleModel } from './ComputedStyleModel.js';\nimport { ElementsPanel } from './ElementsPanel.js';\nimport { ElementsSidebarPane } from './ElementsSidebarPane.js';\nimport { ImagePreviewPopover } from './ImagePreviewPopover.js';\nimport * as LayersWidget from './LayersWidget.js';\nimport { StyleEditorWidget } from './StyleEditorWidget.js';\nimport { BlankStylePropertiesSection, FontPaletteValuesRuleSection, HighlightPseudoStylePropertiesSection, KeyframePropertiesSection, PositionTryRuleSection, RegisteredPropertiesSection, StylePropertiesSection, } from './StylePropertiesSection.js';\nimport { StylePropertyHighlighter } from './StylePropertyHighlighter.js';\nimport { activeHints } from './StylePropertyTreeElement.js';\nimport stylesSidebarPaneStyles from './stylesSidebarPane.css.js';\nimport { WebCustomData } from './WebCustomData.js';\nconst UIStrings = {\n    /**\n     *@description No matches element text content in Styles Sidebar Pane of the Elements panel\n     */\n    noMatchingSelectorOrStyle: 'No matching selector or style',\n    /**\n    /**\n     *@description Text to announce the result of the filter input in the Styles Sidebar Pane of the Elements panel\n     */\n    visibleSelectors: '{n, plural, =1 {# visible selector listed below} other {# visible selectors listed below}}',\n    /**\n     *@description Text in Styles Sidebar Pane of the Elements panel\n     */\n    invalidPropertyValue: 'Invalid property value',\n    /**\n     *@description Text in Styles Sidebar Pane of the Elements panel\n     */\n    unknownPropertyName: 'Unknown property name',\n    /**\n     *@description Separator element text content in Styles Sidebar Pane of the Elements panel\n     *@example {scrollbar-corner} PH1\n     */\n    pseudoSElement: 'Pseudo ::{PH1} element',\n    /**\n     *@description Text of a DOM element in Styles Sidebar Pane of the Elements panel\n     */\n    inheritedFroms: 'Inherited from ',\n    /**\n     *@description Text of an inherited psuedo element in Styles Sidebar Pane of the Elements panel\n     *@example {highlight} PH1\n     */\n    inheritedFromSPseudoOf: 'Inherited from ::{PH1} pseudo of ',\n    /**\n     *@description Title of  in styles sidebar pane of the elements panel\n     *@example {Ctrl} PH1\n     *@example {Alt} PH2\n     */\n    incrementdecrementWithMousewheelOne: 'Increment/decrement with mousewheel or up/down keys. {PH1}: R ±1, Shift: G ±1, {PH2}: B ±1',\n    /**\n     *@description Title of  in styles sidebar pane of the elements panel\n     *@example {Ctrl} PH1\n     *@example {Alt} PH2\n     */\n    incrementdecrementWithMousewheelHundred: 'Increment/decrement with mousewheel or up/down keys. {PH1}: ±100, Shift: ±10, {PH2}: ±0.1',\n    /**\n     *@description Announcement string for invalid properties.\n     *@example {Invalid property value} PH1\n     *@example {font-size} PH2\n     *@example {invalidValue} PH3\n     */\n    invalidString: '{PH1}, property name: {PH2}, property value: {PH3}',\n    /**\n     *@description Tooltip text that appears when hovering over the rendering button in the Styles Sidebar Pane of the Elements panel\n     */\n    toggleRenderingEmulations: 'Toggle common rendering emulations',\n    /**\n     *@description Rendering emulation option for toggling the automatic dark mode\n     */\n    automaticDarkMode: 'Automatic dark mode',\n    /**\n     *@description Tooltip text that appears when hovering over the css changes button in the Styles Sidebar Pane of the Elements panel\n     */\n    copyAllCSSChanges: 'Copy CSS changes',\n    /**\n     *@description Tooltip text that appears after clicking on the copy CSS changes button\n     */\n    copiedToClipboard: 'Copied to clipboard',\n    /**\n     *@description Text displayed on layer separators in the styles sidebar pane.\n     */\n    layer: 'Layer',\n    /**\n     *@description Tooltip text for the link in the sidebar pane layer separators that reveals the layer in the layer tree view.\n     */\n    clickToRevealLayer: 'Click to reveal layer in layer tree',\n    /**\n     *@description Text displayed in tooltip that shows specificity information.\n     *@example {(0,0,1)} PH1\n     */\n    specificity: 'Specificity: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/StylesSidebarPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n// Number of ms elapsed with no keypresses to determine is the input is finished, to announce results\nconst FILTER_IDLE_PERIOD = 500;\n// Minimum number of @property rules for the @property section block to be folded initially\nconst MIN_FOLDED_SECTIONS_COUNT = 5;\n// Title of the registered properties section\nexport const REGISTERED_PROPERTY_SECTION_NAME = '@property';\n// Highlightable properties are those that can be hovered in the sidebar to trigger a specific\n// highlighting mode on the current element.\nconst HIGHLIGHTABLE_PROPERTIES = [\n    { mode: 'padding', properties: ['padding'] },\n    { mode: 'border', properties: ['border'] },\n    { mode: 'margin', properties: ['margin'] },\n    { mode: 'gap', properties: ['gap', 'grid-gap'] },\n    { mode: 'column-gap', properties: ['column-gap', 'grid-column-gap'] },\n    { mode: 'row-gap', properties: ['row-gap', 'grid-row-gap'] },\n    { mode: 'grid-template-columns', properties: ['grid-template-columns'] },\n    { mode: 'grid-template-rows', properties: ['grid-template-rows'] },\n    { mode: 'grid-template-areas', properties: ['grid-areas'] },\n    { mode: 'justify-content', properties: ['justify-content'] },\n    { mode: 'align-content', properties: ['align-content'] },\n    { mode: 'align-items', properties: ['align-items'] },\n    { mode: 'flexibility', properties: ['flex', 'flex-basis', 'flex-grow', 'flex-shrink'] },\n];\nlet stylesSidebarPaneInstance;\nexport class StylesSidebarPane extends Common.ObjectWrapper.eventMixin(ElementsSidebarPane) {\n    currentToolbarPane;\n    animatedToolbarPane;\n    pendingWidget;\n    pendingWidgetToggle;\n    toolbar;\n    toolbarPaneElement;\n    lastFilterChange;\n    visibleSections;\n    noMatchesElement;\n    sectionsContainer;\n    sectionByElement;\n    swatchPopoverHelperInternal;\n    linkifier;\n    decorator;\n    lastRevealedProperty;\n    userOperation;\n    isEditingStyle;\n    filterRegexInternal;\n    isActivePropertyHighlighted;\n    initialUpdateCompleted;\n    hasMatchedStyles;\n    sectionBlocks;\n    idleCallbackManager;\n    needsForceUpdate;\n    resizeThrottler;\n    scrollerElement;\n    boundOnScroll;\n    imagePreviewPopover;\n    #webCustomData;\n    #hintPopoverHelper;\n    #genericPopoverHelper;\n    #elementPopoverHooks = new WeakMap();\n    activeCSSAngle;\n    #urlToChangeTracker = new Map();\n    #copyChangesButton;\n    #updateAbortController;\n    #updateComputedStylesAbortController;\n    static instance(opts) {\n        if (!stylesSidebarPaneInstance || opts?.forceNew) {\n            stylesSidebarPaneInstance = new StylesSidebarPane();\n        }\n        return stylesSidebarPaneInstance;\n    }\n    constructor() {\n        super(true /* delegatesFocus */);\n        this.setMinimumSize(96, 26);\n        this.registerCSSFiles([stylesSidebarPaneStyles]);\n        Common.Settings.Settings.instance().moduleSetting('text-editor-indent').addChangeListener(this.update.bind(this));\n        this.currentToolbarPane = null;\n        this.animatedToolbarPane = null;\n        this.pendingWidget = null;\n        this.pendingWidgetToggle = null;\n        this.toolbar = null;\n        this.lastFilterChange = null;\n        this.visibleSections = null;\n        this.toolbarPaneElement = this.createStylesSidebarToolbar();\n        this.computedStyleModelInternal = new ComputedStyleModel();\n        this.noMatchesElement = this.contentElement.createChild('div', 'gray-info-message hidden');\n        this.noMatchesElement.textContent = i18nString(UIStrings.noMatchingSelectorOrStyle);\n        this.sectionsContainer = this.contentElement.createChild('div');\n        UI.ARIAUtils.markAsList(this.sectionsContainer);\n        this.sectionsContainer.addEventListener('keydown', this.sectionsContainerKeyDown.bind(this), false);\n        this.sectionsContainer.addEventListener('focusin', this.sectionsContainerFocusChanged.bind(this), false);\n        this.sectionsContainer.addEventListener('focusout', this.sectionsContainerFocusChanged.bind(this), false);\n        this.sectionByElement = new WeakMap();\n        this.swatchPopoverHelperInternal = new InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper();\n        this.swatchPopoverHelperInternal.addEventListener(\"WillShowPopover\" /* InlineEditor.SwatchPopoverHelper.Events.WILL_SHOW_POPOVER */, this.hideAllPopovers, this);\n        this.linkifier = new Components.Linkifier.Linkifier(MAX_LINK_LENGTH, /* useLinkDecorator */ true);\n        this.decorator = new StylePropertyHighlighter(this);\n        this.lastRevealedProperty = null;\n        this.userOperation = false;\n        this.isEditingStyle = false;\n        this.filterRegexInternal = null;\n        this.isActivePropertyHighlighted = false;\n        this.initialUpdateCompleted = false;\n        this.hasMatchedStyles = false;\n        this.contentElement.classList.add('styles-pane');\n        this.sectionBlocks = [];\n        this.idleCallbackManager = null;\n        this.needsForceUpdate = false;\n        stylesSidebarPaneInstance = this;\n        UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.forceUpdate, this);\n        this.contentElement.addEventListener('copy', this.clipboardCopy.bind(this));\n        this.resizeThrottler = new Common.Throttler.Throttler(100);\n        this.boundOnScroll = this.onScroll.bind(this);\n        this.imagePreviewPopover = new ImagePreviewPopover(this.contentElement, event => {\n            const link = event.composedPath()[0];\n            if (link instanceof Element) {\n                return link;\n            }\n            return null;\n        }, () => this.node());\n        this.activeCSSAngle = null;\n        const showDocumentationSetting = Common.Settings.Settings.instance().moduleSetting('show-css-property-documentation-on-hover');\n        showDocumentationSetting.addChangeListener(event => {\n            const metricType = Boolean(event.data) ? 1 /* Host.UserMetrics.CSSPropertyDocumentation.TOGGLED_ON */ :\n                2 /* Host.UserMetrics.CSSPropertyDocumentation.TOGGLED_OFF */;\n            Host.userMetrics.cssPropertyDocumentation(metricType);\n        });\n        this.#hintPopoverHelper = new UI.PopoverHelper.PopoverHelper(this.contentElement, event => {\n            const hoveredNode = event.composedPath()[0];\n            // This is a workaround to fix hint popover not showing after icon update.\n            // Previously our `.hint` element was an icon itself and `composedPath()[0]` was referring to it.\n            // However, our `Icon` component now is an element with shadow root and `event.composedPath()[0]`\n            // refers to the markup inside shadow root. Though we want a reference to the `.hint` element itself.\n            // So we trace back and reach to the possible `.hint` element from inside the shadow root.\n            const possibleHintNodeFromHintIcon = event.composedPath()[2];\n            if (!hoveredNode || !(hoveredNode instanceof Element)) {\n                return null;\n            }\n            if (possibleHintNodeFromHintIcon instanceof Element && possibleHintNodeFromHintIcon.matches('.hint')) {\n                const hint = activeHints.get(possibleHintNodeFromHintIcon);\n                if (hint) {\n                    this.#hintPopoverHelper.jslogContext = 'elements.css-hint';\n                    return {\n                        box: hoveredNode.boxInWindow(),\n                        show: async (popover) => {\n                            const popupElement = new ElementsComponents.CSSHintDetailsView.CSSHintDetailsView(hint);\n                            popover.contentElement.appendChild(popupElement);\n                            return true;\n                        },\n                    };\n                }\n            }\n            if (showDocumentationSetting.get() && hoveredNode.matches('.webkit-css-property')) {\n                if (!this.#webCustomData) {\n                    this.#webCustomData = WebCustomData.create();\n                }\n                const cssPropertyName = hoveredNode.textContent;\n                const cssProperty = cssPropertyName && this.#webCustomData.findCssProperty(cssPropertyName);\n                if (cssProperty) {\n                    this.#hintPopoverHelper.jslogContext = 'elements.css-property-doc';\n                    return {\n                        box: hoveredNode.boxInWindow(),\n                        show: async (popover) => {\n                            const popupElement = new ElementsComponents.CSSPropertyDocsView.CSSPropertyDocsView(cssProperty);\n                            popover.contentElement.appendChild(popupElement);\n                            Host.userMetrics.cssPropertyDocumentation(0 /* Host.UserMetrics.CSSPropertyDocumentation.SHOWN */);\n                            return true;\n                        },\n                    };\n                }\n            }\n            if (hoveredNode.matches('.simple-selector')) {\n                const specificity = StylePropertiesSection.getSpecificityStoredForNodeElement(hoveredNode);\n                this.#hintPopoverHelper.jslogContext = 'elements.css-selector-specificity';\n                return {\n                    box: hoveredNode.boxInWindow(),\n                    show: async (popover) => {\n                        popover.setIgnoreLeftMargin(true);\n                        const element = document.createElement('span');\n                        element.textContent = i18nString(UIStrings.specificity, { PH1: specificity ? `(${specificity.a},${specificity.b},${specificity.c})` : '(?,?,?)' });\n                        popover.contentElement.appendChild(element);\n                        return true;\n                    },\n                };\n            }\n            return null;\n        });\n        this.#hintPopoverHelper.setDisableOnClick(true);\n        this.#hintPopoverHelper.setTimeout(300);\n        this.#hintPopoverHelper.setHasPadding(true);\n        this.#genericPopoverHelper = new UI.PopoverHelper.PopoverHelper(this.contentElement, event => {\n            for (let e = event.composedPath().length - 1; e >= 0; --e) {\n                const element = event.composedPath()[e];\n                const hook = this.#elementPopoverHooks.get(element);\n                const contents = hook ? hook.contents() : undefined;\n                if (contents) {\n                    return {\n                        box: element.boxInWindow(),\n                        show: async (popover) => {\n                            popover.setJsLog(`${VisualLogging.popover(`${hook?.jslogContext ?? 'elements.generic-sidebar-popover'}`)\n                                .parent('popoverParent')}`);\n                            popover.contentElement.classList.add('borderless-popover');\n                            popover.contentElement.appendChild(contents);\n                            return true;\n                        },\n                    };\n                }\n            }\n            return null;\n        }, 'elements.generic-sidebar-popover');\n        this.#genericPopoverHelper.setDisableOnClick(true);\n        this.#genericPopoverHelper.setTimeout(500, 200);\n    }\n    addPopover(element, popover) {\n        this.#elementPopoverHooks.set(element, popover);\n    }\n    onScroll(_event) {\n        this.hideAllPopovers();\n    }\n    swatchPopoverHelper() {\n        return this.swatchPopoverHelperInternal;\n    }\n    setUserOperation(userOperation) {\n        this.userOperation = userOperation;\n    }\n    createExclamationMark(property, title) {\n        const exclamationElement = document.createElement('span');\n        exclamationElement.classList.add('exclamation-mark');\n        const invalidMessage = SDK.CSSMetadata.cssMetadata().isCSSPropertyName(property.name) ?\n            i18nString(UIStrings.invalidPropertyValue) :\n            i18nString(UIStrings.unknownPropertyName);\n        if (title === null) {\n            UI.Tooltip.Tooltip.install(exclamationElement, invalidMessage);\n        }\n        else {\n            this.addPopover(exclamationElement, { contents: () => title });\n        }\n        const invalidString = i18nString(UIStrings.invalidString, { PH1: invalidMessage, PH2: property.name, PH3: property.value });\n        // Storing the invalidString for future screen reader support when editing the property\n        property.setDisplayedStringForInvalidProperty(invalidString);\n        return exclamationElement;\n    }\n    static ignoreErrorsForProperty(property) {\n        function hasUnknownVendorPrefix(string) {\n            return !string.startsWith('-webkit-') && /^[-_][\\w\\d]+-\\w/.test(string);\n        }\n        const name = property.name.toLowerCase();\n        // IE hack.\n        if (name.charAt(0) === '_') {\n            return true;\n        }\n        // IE has a different format for this.\n        if (name === 'filter') {\n            return true;\n        }\n        // Common IE-specific property prefix.\n        if (name.startsWith('scrollbar-')) {\n            return true;\n        }\n        if (hasUnknownVendorPrefix(name)) {\n            return true;\n        }\n        const value = property.value.toLowerCase();\n        // IE hack.\n        if (value.endsWith('\\\\9')) {\n            return true;\n        }\n        if (hasUnknownVendorPrefix(value)) {\n            return true;\n        }\n        return false;\n    }\n    static formatLeadingProperties(section) {\n        const selectorText = section.headerText();\n        const indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n        const style = section.style();\n        const lines = [];\n        // Invalid property should also be copied.\n        // For example: *display: inline.\n        for (const property of style.leadingProperties()) {\n            if (property.disabled) {\n                lines.push(`${indent}/* ${property.name}: ${property.value}; */`);\n            }\n            else {\n                lines.push(`${indent}${property.name}: ${property.value};`);\n            }\n        }\n        const allDeclarationText = lines.join('\\n');\n        const ruleText = `${selectorText} {\\n${allDeclarationText}\\n}`;\n        return {\n            allDeclarationText,\n            ruleText,\n        };\n    }\n    revealProperty(cssProperty) {\n        this.decorator.highlightProperty(cssProperty);\n        this.lastRevealedProperty = cssProperty;\n        this.update();\n    }\n    jumpToProperty(propertyName, sectionName, blockName) {\n        return this.decorator.findAndHighlightPropertyName(propertyName, sectionName, blockName);\n    }\n    jumpToDeclaration(valueSource) {\n        if (valueSource.declaration instanceof SDK.CSSProperty.CSSProperty) {\n            this.revealProperty(valueSource.declaration);\n        }\n        else {\n            this.jumpToProperty('initial-value', valueSource.name, REGISTERED_PROPERTY_SECTION_NAME);\n        }\n    }\n    jumpToSection(sectionName, blockName) {\n        this.decorator.findAndHighlightSection(sectionName, blockName);\n    }\n    jumpToSectionBlock(section) {\n        this.decorator.findAndHighlightSectionBlock(section);\n    }\n    forceUpdate() {\n        this.needsForceUpdate = true;\n        this.swatchPopoverHelperInternal.hide();\n        this.#updateAbortController?.abort();\n        this.resetCache();\n        this.update();\n    }\n    sectionsContainerKeyDown(event) {\n        const activeElement = Platform.DOMUtilities.deepActiveElement(this.sectionsContainer.ownerDocument);\n        if (!activeElement) {\n            return;\n        }\n        const section = this.sectionByElement.get(activeElement);\n        if (!section) {\n            return;\n        }\n        let sectionToFocus = null;\n        let willIterateForward = false;\n        switch (event.key) {\n            case 'ArrowUp':\n            case 'ArrowLeft': {\n                sectionToFocus = section.previousSibling() || section.lastSibling();\n                willIterateForward = false;\n                break;\n            }\n            case 'ArrowDown':\n            case 'ArrowRight': {\n                sectionToFocus = section.nextSibling() || section.firstSibling();\n                willIterateForward = true;\n                break;\n            }\n            case 'Home': {\n                sectionToFocus = section.firstSibling();\n                willIterateForward = true;\n                break;\n            }\n            case 'End': {\n                sectionToFocus = section.lastSibling();\n                willIterateForward = false;\n                break;\n            }\n        }\n        if (sectionToFocus && this.filterRegexInternal) {\n            sectionToFocus = sectionToFocus.findCurrentOrNextVisible(/* willIterateForward= */ willIterateForward);\n        }\n        if (sectionToFocus) {\n            sectionToFocus.element.focus();\n            event.consume(true);\n        }\n    }\n    sectionsContainerFocusChanged() {\n        this.resetFocus();\n    }\n    resetFocus() {\n        // When a styles section is focused, shift+tab should leave the section.\n        // Leaving tabIndex = 0 on the first element would cause it to be focused instead.\n        if (!this.noMatchesElement.classList.contains('hidden')) {\n            return;\n        }\n        if (this.sectionBlocks[0] && this.sectionBlocks[0].sections[0]) {\n            const firstVisibleSection = this.sectionBlocks[0].sections[0].findCurrentOrNextVisible(/* willIterateForward= */ true);\n            if (firstVisibleSection) {\n                firstVisibleSection.element.tabIndex = this.sectionsContainer.hasFocus() ? -1 : 0;\n            }\n        }\n    }\n    onAddButtonLongClick(event) {\n        const cssModel = this.cssModel();\n        if (!cssModel) {\n            return;\n        }\n        const headers = cssModel.styleSheetHeaders().filter(styleSheetResourceHeader);\n        const contextMenuDescriptors = [];\n        for (let i = 0; i < headers.length; ++i) {\n            const header = headers[i];\n            const handler = this.createNewRuleInStyleSheet.bind(this, header);\n            contextMenuDescriptors.push({ text: Bindings.ResourceUtils.displayNameForURL(header.resourceURL()), handler });\n        }\n        contextMenuDescriptors.sort(compareDescriptors);\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        for (let i = 0; i < contextMenuDescriptors.length; ++i) {\n            const descriptor = contextMenuDescriptors[i];\n            contextMenu.defaultSection().appendItem(descriptor.text, descriptor.handler, { jslogContext: 'style-sheet-header' });\n        }\n        contextMenu.footerSection().appendItem('inspector-stylesheet', this.createNewRuleInViaInspectorStyleSheet.bind(this), { jslogContext: 'inspector-stylesheet' });\n        void contextMenu.show();\n        function compareDescriptors(descriptor1, descriptor2) {\n            return Platform.StringUtilities.naturalOrderComparator(descriptor1.text, descriptor2.text);\n        }\n        function styleSheetResourceHeader(header) {\n            return !header.isViaInspector() && !header.isInline && Boolean(header.resourceURL());\n        }\n    }\n    onFilterChanged(event) {\n        const regex = event.data ? new RegExp(Platform.StringUtilities.escapeForRegExp(event.data), 'i') : null;\n        this.lastFilterChange = Date.now();\n        this.filterRegexInternal = regex;\n        this.updateFilter();\n        this.resetFocus();\n        setTimeout(() => {\n            if (this.lastFilterChange) {\n                const stillTyping = Date.now() - this.lastFilterChange < FILTER_IDLE_PERIOD;\n                if (!stillTyping) {\n                    UI.ARIAUtils.alert(this.visibleSections ? i18nString(UIStrings.visibleSelectors, { n: this.visibleSections }) :\n                        i18nString(UIStrings.noMatchingSelectorOrStyle));\n                }\n            }\n        }, FILTER_IDLE_PERIOD);\n    }\n    refreshUpdate(editedSection, editedTreeElement) {\n        if (editedTreeElement) {\n            for (const section of this.allSections()) {\n                if (section instanceof BlankStylePropertiesSection && section.isBlank) {\n                    continue;\n                }\n                section.updateVarFunctions(editedTreeElement);\n            }\n        }\n        if (this.isEditingStyle) {\n            return;\n        }\n        const node = this.node();\n        if (!node) {\n            return;\n        }\n        for (const section of this.allSections()) {\n            if (section instanceof BlankStylePropertiesSection && section.isBlank) {\n                continue;\n            }\n            section.update(section === editedSection);\n        }\n        if (this.filterRegexInternal) {\n            this.updateFilter();\n        }\n        this.swatchPopoverHelper().reposition();\n        this.nodeStylesUpdatedForTest(node, false);\n    }\n    async doUpdate() {\n        this.#updateAbortController?.abort();\n        this.#updateAbortController = new AbortController();\n        await this.#innerDoUpdate(this.#updateAbortController.signal);\n        // Hide all popovers when scrolling.\n        // Styles and Computed panels both have popover (e.g. imagePreviewPopover),\n        // so we need to bind both scroll events.\n        const scrollerElementLists = this?.contentElement?.enclosingNodeOrSelfWithClass('style-panes-wrapper')\n            ?.parentElement?.querySelectorAll('.style-panes-wrapper');\n        if (scrollerElementLists.length > 0) {\n            for (const element of scrollerElementLists) {\n                this.scrollerElement = element;\n                this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n            }\n        }\n    }\n    async #innerDoUpdate(signal) {\n        if (!this.initialUpdateCompleted) {\n            window.setTimeout(() => {\n                if (signal.aborted) {\n                    return;\n                }\n                if (!this.initialUpdateCompleted) {\n                    // the spinner will get automatically removed when innerRebuildUpdate is called\n                    this.sectionsContainer.createChild('span', 'spinner');\n                }\n            }, 200 /* only spin for loading time > 200ms to avoid unpleasant render flashes */);\n        }\n        const matchedStyles = await this.fetchMatchedCascade();\n        if (signal.aborted) {\n            return;\n        }\n        const nodeId = this.node()?.id;\n        const parentNodeId = matchedStyles?.getParentLayoutNodeId();\n        const [computedStyles, parentsComputedStyles] = await Promise.all([this.fetchComputedStylesFor(nodeId), this.fetchComputedStylesFor(parentNodeId)]);\n        if (signal.aborted) {\n            return;\n        }\n        await this.innerRebuildUpdate(signal, matchedStyles, computedStyles, parentsComputedStyles);\n        if (signal.aborted) {\n            return;\n        }\n        if (!this.initialUpdateCompleted) {\n            this.initialUpdateCompleted = true;\n            this.appendToolbarItem(this.createRenderingShortcuts());\n            if (Root.Runtime.experiments.isEnabled(\"styles-pane-css-changes\" /* Root.Runtime.ExperimentName.STYLES_PANE_CSS_CHANGES */)) {\n                this.#copyChangesButton = this.createCopyAllChangesButton();\n                this.appendToolbarItem(this.#copyChangesButton);\n                this.#copyChangesButton.element.classList.add('hidden');\n            }\n            this.dispatchEventToListeners(\"InitialUpdateCompleted\" /* Events.INITIAL_UPDATE_COMPLETED */);\n        }\n        this.nodeStylesUpdatedForTest(this.node(), true);\n        this.dispatchEventToListeners(\"StylesUpdateCompleted\" /* Events.STYLES_UPDATE_COMPLETED */, { hasMatchedStyles: this.hasMatchedStyles });\n    }\n    async fetchComputedStylesFor(nodeId) {\n        const node = this.node();\n        if (node === null || nodeId === undefined) {\n            return null;\n        }\n        return await node.domModel().cssModel().getComputedStyle(nodeId);\n    }\n    onResize() {\n        void this.resizeThrottler.schedule(this.innerResize.bind(this));\n    }\n    innerResize() {\n        const width = this.contentElement.getBoundingClientRect().width + 'px';\n        this.allSections().forEach(section => {\n            section.propertiesTreeOutline.element.style.width = width;\n        });\n        this.hideAllPopovers();\n        return Promise.resolve();\n    }\n    resetCache() {\n        const cssModel = this.cssModel();\n        if (cssModel) {\n            cssModel.discardCachedMatchedCascade();\n        }\n    }\n    fetchMatchedCascade() {\n        const node = this.node();\n        if (!node || !this.cssModel()) {\n            return Promise.resolve(null);\n        }\n        const cssModel = this.cssModel();\n        if (!cssModel) {\n            return Promise.resolve(null);\n        }\n        return cssModel.cachedMatchedCascadeForNode(node).then(validateStyles.bind(this));\n        function validateStyles(matchedStyles) {\n            return matchedStyles && matchedStyles.node() === this.node() ? matchedStyles : null;\n        }\n    }\n    setEditingStyle(editing, _treeElement) {\n        if (this.isEditingStyle === editing) {\n            return;\n        }\n        this.contentElement.classList.toggle('is-editing-style', editing);\n        this.isEditingStyle = editing;\n        this.setActiveProperty(null);\n    }\n    setActiveProperty(treeElement) {\n        if (this.isActivePropertyHighlighted) {\n            SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n        }\n        this.isActivePropertyHighlighted = false;\n        if (!this.node()) {\n            return;\n        }\n        if (!treeElement || treeElement.overloaded() || treeElement.inherited()) {\n            return;\n        }\n        const rule = treeElement.property.ownerStyle.parentRule;\n        const selectorList = (rule instanceof SDK.CSSRule.CSSStyleRule) ? rule.selectorText() : undefined;\n        for (const { properties, mode } of HIGHLIGHTABLE_PROPERTIES) {\n            if (!properties.includes(treeElement.name)) {\n                continue;\n            }\n            const node = this.node();\n            if (!node) {\n                continue;\n            }\n            node.domModel().overlayModel().highlightInOverlay({ node: this.node(), selectorList }, mode);\n            this.isActivePropertyHighlighted = true;\n            break;\n        }\n    }\n    onCSSModelChanged(event) {\n        const edit = event?.data && 'edit' in event.data ? event.data.edit : null;\n        if (edit) {\n            for (const section of this.allSections()) {\n                section.styleSheetEdited(edit);\n            }\n            void this.refreshComputedStyles();\n            return;\n        }\n        if (this.userOperation || this.isEditingStyle) {\n            void this.refreshComputedStyles();\n            return;\n        }\n        this.resetCache();\n        this.update();\n    }\n    async refreshComputedStyles() {\n        this.#updateComputedStylesAbortController?.abort();\n        this.#updateAbortController = new AbortController();\n        const signal = this.#updateAbortController.signal;\n        const matchedStyles = await this.fetchMatchedCascade();\n        const nodeId = this.node()?.id;\n        const parentNodeId = matchedStyles?.getParentLayoutNodeId();\n        const [computedStyles, parentsComputedStyles] = await Promise.all([this.fetchComputedStylesFor(nodeId), this.fetchComputedStylesFor(parentNodeId)]);\n        if (signal.aborted) {\n            return;\n        }\n        for (const section of this.allSections()) {\n            section.setComputedStyles(computedStyles);\n            section.setParentsComputedStyles(parentsComputedStyles);\n            section.updateAuthoringHint();\n        }\n    }\n    focusedSectionIndex() {\n        let index = 0;\n        for (const block of this.sectionBlocks) {\n            for (const section of block.sections) {\n                if (section.element.hasFocus()) {\n                    return index;\n                }\n                index++;\n            }\n        }\n        return -1;\n    }\n    continueEditingElement(sectionIndex, propertyIndex) {\n        const section = this.allSections()[sectionIndex];\n        if (section) {\n            const element = section.closestPropertyForEditing(propertyIndex);\n            if (!element) {\n                section.element.focus();\n                return;\n            }\n            element.startEditingName();\n        }\n    }\n    async innerRebuildUpdate(signal, matchedStyles, computedStyles, parentsComputedStyles) {\n        // ElementsSidebarPane's throttler schedules this method. Usually,\n        // rebuild is suppressed while editing (see onCSSModelChanged()), but we need a\n        // 'force' flag since the currently running throttler process cannot be canceled.\n        if (this.needsForceUpdate) {\n            this.needsForceUpdate = false;\n        }\n        else if (this.isEditingStyle || this.userOperation) {\n            return;\n        }\n        const focusedIndex = this.focusedSectionIndex();\n        this.linkifier.reset();\n        const prevSections = this.sectionBlocks.map(block => block.sections).flat();\n        this.sectionBlocks = [];\n        const node = this.node();\n        this.hasMatchedStyles = matchedStyles !== null && node !== null;\n        if (!this.hasMatchedStyles) {\n            this.sectionsContainer.removeChildren();\n            this.noMatchesElement.classList.remove('hidden');\n            return;\n        }\n        const blocks = await this.rebuildSectionsForMatchedStyleRules(matchedStyles, computedStyles, parentsComputedStyles);\n        if (signal.aborted) {\n            return;\n        }\n        this.sectionBlocks = blocks;\n        // Style sections maybe re-created when flexbox editor is activated.\n        // With the following code we re-bind the flexbox editor to the new\n        // section with the same index as the previous section had.\n        const newSections = this.sectionBlocks.map(block => block.sections).flat();\n        const styleEditorWidget = StyleEditorWidget.instance();\n        const boundSection = styleEditorWidget.getSection();\n        if (boundSection) {\n            styleEditorWidget.unbindContext();\n            for (const [index, prevSection] of prevSections.entries()) {\n                if (boundSection === prevSection && index < newSections.length) {\n                    styleEditorWidget.bindContext(this, newSections[index]);\n                }\n            }\n        }\n        this.sectionsContainer.removeChildren();\n        const fragment = document.createDocumentFragment();\n        let index = 0;\n        let elementToFocus = null;\n        for (const block of this.sectionBlocks) {\n            const titleElement = block.titleElement();\n            if (titleElement) {\n                fragment.appendChild(titleElement);\n            }\n            for (const section of block.sections) {\n                fragment.appendChild(section.element);\n                if (index === focusedIndex) {\n                    elementToFocus = section.element;\n                }\n                index++;\n            }\n        }\n        this.sectionsContainer.appendChild(fragment);\n        if (elementToFocus) {\n            elementToFocus.focus();\n        }\n        if (focusedIndex >= index) {\n            this.sectionBlocks[0].sections[0].element.focus();\n        }\n        this.sectionsContainerFocusChanged();\n        if (this.filterRegexInternal) {\n            this.updateFilter();\n        }\n        else {\n            this.noMatchesElement.classList.toggle('hidden', this.sectionBlocks.length > 0);\n        }\n        if (this.lastRevealedProperty) {\n            this.decorator.highlightProperty(this.lastRevealedProperty);\n            this.lastRevealedProperty = null;\n        }\n        this.swatchPopoverHelper().reposition();\n        // Record the elements tool load time after the sidepane has loaded.\n        Host.userMetrics.panelLoaded('elements', 'DevTools.Launch.Elements');\n        this.dispatchEventToListeners(\"StylesUpdateCompleted\" /* Events.STYLES_UPDATE_COMPLETED */, { hasMatchedStyles: false });\n    }\n    nodeStylesUpdatedForTest(_node, _rebuild) {\n        // For sniffing in tests.\n    }\n    rebuildSectionsForMatchedStyleRulesForTest(matchedStyles, computedStyles, parentsComputedStyles) {\n        return this.rebuildSectionsForMatchedStyleRules(matchedStyles, computedStyles, parentsComputedStyles);\n    }\n    async rebuildSectionsForMatchedStyleRules(matchedStyles, computedStyles, parentsComputedStyles) {\n        if (this.idleCallbackManager) {\n            this.idleCallbackManager.discard();\n        }\n        this.idleCallbackManager = new IdleCallbackManager();\n        const blocks = [new SectionBlock(null)];\n        let sectionIdx = 0;\n        let lastParentNode = null;\n        let lastLayers = null;\n        let sawLayers = false;\n        const addLayerSeparator = (style) => {\n            const parentRule = style.parentRule;\n            if (parentRule instanceof SDK.CSSRule.CSSStyleRule) {\n                const layers = parentRule.layers;\n                if ((layers.length || lastLayers) && lastLayers !== layers) {\n                    const block = SectionBlock.createLayerBlock(parentRule);\n                    blocks.push(block);\n                    sawLayers = true;\n                    lastLayers = layers;\n                }\n            }\n        };\n        // We disable the layer widget initially. If we see a layer in\n        // the matched styles we reenable the button.\n        LayersWidget.ButtonProvider.instance().item().setVisible(false);\n        const refreshedURLs = new Set();\n        for (const style of matchedStyles.nodeStyles()) {\n            if (Root.Runtime.experiments.isEnabled(\"styles-pane-css-changes\" /* Root.Runtime.ExperimentName.STYLES_PANE_CSS_CHANGES */) && style.parentRule) {\n                const url = style.parentRule.resourceURL();\n                if (url && !refreshedURLs.has(url)) {\n                    await this.trackURLForChanges(url);\n                    refreshedURLs.add(url);\n                }\n            }\n            const parentNode = matchedStyles.isInherited(style) ? matchedStyles.nodeForStyle(style) : null;\n            if (parentNode && parentNode !== lastParentNode) {\n                lastParentNode = parentNode;\n                const block = await SectionBlock.createInheritedNodeBlock(lastParentNode);\n                blocks.push(block);\n            }\n            addLayerSeparator(style);\n            const lastBlock = blocks[blocks.length - 1];\n            if (lastBlock) {\n                this.idleCallbackManager.schedule(() => {\n                    const section = new StylePropertiesSection(this, matchedStyles, style, sectionIdx, computedStyles, parentsComputedStyles);\n                    sectionIdx++;\n                    lastBlock.sections.push(section);\n                });\n            }\n        }\n        const customHighlightPseudoRulesets = Array.from(matchedStyles.customHighlightPseudoNames()).map(highlightName => {\n            return {\n                highlightName,\n                pseudoType: \"highlight\" /* Protocol.DOM.PseudoType.Highlight */,\n                pseudoStyles: matchedStyles.customHighlightPseudoStyles(highlightName),\n            };\n        });\n        const otherPseudoRulesets = [...matchedStyles.pseudoTypes()].map(pseudoType => {\n            return { highlightName: null, pseudoType, pseudoStyles: matchedStyles.pseudoStyles(pseudoType) };\n        });\n        const pseudoRulesets = customHighlightPseudoRulesets.concat(otherPseudoRulesets).sort((a, b) => {\n            // We want to show the ::before pseudos first, followed by the remaining pseudos\n            // in alphabetical order.\n            if (a.pseudoType === \"before\" /* Protocol.DOM.PseudoType.Before */ && b.pseudoType !== \"before\" /* Protocol.DOM.PseudoType.Before */) {\n                return -1;\n            }\n            if (a.pseudoType !== \"before\" /* Protocol.DOM.PseudoType.Before */ && b.pseudoType === \"before\" /* Protocol.DOM.PseudoType.Before */) {\n                return 1;\n            }\n            if (a.pseudoType < b.pseudoType) {\n                return -1;\n            }\n            if (a.pseudoType > b.pseudoType) {\n                return 1;\n            }\n            return 0;\n        });\n        for (const pseudo of pseudoRulesets) {\n            lastParentNode = null;\n            for (let i = 0; i < pseudo.pseudoStyles.length; ++i) {\n                const style = pseudo.pseudoStyles[i];\n                const parentNode = matchedStyles.isInherited(style) ? matchedStyles.nodeForStyle(style) : null;\n                // Start a new SectionBlock if this is the first rule for this pseudo type, or if this\n                // rule is inherited from a different parent than the previous rule.\n                if (i === 0 || parentNode !== lastParentNode) {\n                    lastLayers = null;\n                    if (parentNode) {\n                        const block = await SectionBlock.createInheritedPseudoTypeBlock(pseudo.pseudoType, pseudo.highlightName, parentNode);\n                        blocks.push(block);\n                    }\n                    else {\n                        const block = SectionBlock.createPseudoTypeBlock(pseudo.pseudoType, pseudo.highlightName);\n                        blocks.push(block);\n                    }\n                }\n                lastParentNode = parentNode;\n                addLayerSeparator(style);\n                const lastBlock = blocks[blocks.length - 1];\n                this.idleCallbackManager.schedule(() => {\n                    const section = new HighlightPseudoStylePropertiesSection(this, matchedStyles, style, sectionIdx, computedStyles, parentsComputedStyles);\n                    sectionIdx++;\n                    lastBlock.sections.push(section);\n                });\n            }\n        }\n        for (const keyframesRule of matchedStyles.keyframes()) {\n            const block = SectionBlock.createKeyframesBlock(keyframesRule.name().text);\n            for (const keyframe of keyframesRule.keyframes()) {\n                this.idleCallbackManager.schedule(() => {\n                    block.sections.push(new KeyframePropertiesSection(this, matchedStyles, keyframe.style, sectionIdx));\n                    sectionIdx++;\n                });\n            }\n            blocks.push(block);\n        }\n        const fontPaletteValuesRule = matchedStyles.fontPaletteValuesRule();\n        if (fontPaletteValuesRule) {\n            const block = SectionBlock.createFontPaletteValuesRuleBlock(fontPaletteValuesRule.name().text);\n            this.idleCallbackManager.schedule(() => {\n                block.sections.push(new FontPaletteValuesRuleSection(this, matchedStyles, fontPaletteValuesRule.style, sectionIdx));\n                sectionIdx++;\n            });\n            blocks.push(block);\n        }\n        for (const positionTryRule of matchedStyles.positionTryRules()) {\n            const block = SectionBlock.createPositionTryBlock(positionTryRule.name().text);\n            this.idleCallbackManager.schedule(() => {\n                block.sections.push(new PositionTryRuleSection(this, matchedStyles, positionTryRule.style, sectionIdx, positionTryRule.active()));\n                sectionIdx++;\n            });\n            blocks.push(block);\n        }\n        if (matchedStyles.registeredProperties().length > 0) {\n            const expandedByDefault = matchedStyles.registeredProperties().length <= MIN_FOLDED_SECTIONS_COUNT;\n            const block = SectionBlock.createRegisteredPropertiesBlock(expandedByDefault);\n            for (const propertyRule of matchedStyles.registeredProperties()) {\n                this.idleCallbackManager.schedule(() => {\n                    block.sections.push(new RegisteredPropertiesSection(this, matchedStyles, propertyRule.style(), sectionIdx, propertyRule.propertyName(), expandedByDefault));\n                    sectionIdx++;\n                });\n            }\n            blocks.push(block);\n        }\n        // If we have seen a layer in matched styles we enable\n        // the layer widget button.\n        if (sawLayers) {\n            LayersWidget.ButtonProvider.instance().item().setVisible(true);\n        }\n        else if (LayersWidget.LayersWidget.instance().isShowing()) {\n            // Since the button for toggling the layers view is now hidden\n            // we ensure that the layers view is not currently toggled.\n            ElementsPanel.instance().showToolbarPane(null, LayersWidget.ButtonProvider.instance().item());\n        }\n        await this.idleCallbackManager.awaitDone();\n        return blocks;\n    }\n    async createNewRuleInViaInspectorStyleSheet() {\n        const cssModel = this.cssModel();\n        const node = this.node();\n        if (!cssModel || !node) {\n            return;\n        }\n        this.setUserOperation(true);\n        const styleSheetHeader = await cssModel.requestViaInspectorStylesheet(node.frameId());\n        this.setUserOperation(false);\n        await this.createNewRuleInStyleSheet(styleSheetHeader);\n    }\n    async createNewRuleInStyleSheet(styleSheetHeader) {\n        if (!styleSheetHeader) {\n            return;\n        }\n        const text = (await styleSheetHeader.requestContent()).content || '';\n        const lines = text.split('\\n');\n        const range = TextUtils.TextRange.TextRange.createFromLocation(lines.length - 1, lines[lines.length - 1].length);\n        if (this.sectionBlocks && this.sectionBlocks.length > 0) {\n            this.addBlankSection(this.sectionBlocks[0].sections[0], styleSheetHeader.id, range);\n        }\n    }\n    addBlankSection(insertAfterSection, styleSheetId, ruleLocation) {\n        const node = this.node();\n        const blankSection = new BlankStylePropertiesSection(this, insertAfterSection.matchedStyles, node ? node.simpleSelector() : '', styleSheetId, ruleLocation, insertAfterSection.style(), 0);\n        this.sectionsContainer.insertBefore(blankSection.element, insertAfterSection.element.nextSibling);\n        for (const block of this.sectionBlocks) {\n            const index = block.sections.indexOf(insertAfterSection);\n            if (index === -1) {\n                continue;\n            }\n            block.sections.splice(index + 1, 0, blankSection);\n            blankSection.startEditingSelector();\n        }\n        let sectionIdx = 0;\n        for (const block of this.sectionBlocks) {\n            for (const section of block.sections) {\n                section.setSectionIdx(sectionIdx);\n                sectionIdx++;\n            }\n        }\n    }\n    removeSection(section) {\n        for (const block of this.sectionBlocks) {\n            const index = block.sections.indexOf(section);\n            if (index === -1) {\n                continue;\n            }\n            block.sections.splice(index, 1);\n            section.element.remove();\n        }\n    }\n    filterRegex() {\n        return this.filterRegexInternal;\n    }\n    updateFilter() {\n        let hasAnyVisibleBlock = false;\n        let visibleSections = 0;\n        for (const block of this.sectionBlocks) {\n            visibleSections += block.updateFilter();\n            hasAnyVisibleBlock = Boolean(visibleSections) || hasAnyVisibleBlock;\n        }\n        this.noMatchesElement.classList.toggle('hidden', Boolean(hasAnyVisibleBlock));\n        this.visibleSections = visibleSections;\n    }\n    wasShown() {\n        UI.Context.Context.instance().setFlavor(StylesSidebarPane, this);\n        super.wasShown();\n    }\n    willHide() {\n        this.hideAllPopovers();\n        super.willHide();\n        UI.Context.Context.instance().setFlavor(StylesSidebarPane, null);\n    }\n    hideAllPopovers() {\n        this.swatchPopoverHelperInternal.hide();\n        this.imagePreviewPopover.hide();\n        if (this.activeCSSAngle) {\n            this.activeCSSAngle.minify();\n            this.activeCSSAngle = null;\n        }\n        this.#hintPopoverHelper?.hidePopover();\n        this.#genericPopoverHelper?.hidePopover();\n    }\n    getSectionBlockByName(name) {\n        return this.sectionBlocks.find(block => block.titleElement()?.textContent === name);\n    }\n    allSections() {\n        let sections = [];\n        for (const block of this.sectionBlocks) {\n            sections = sections.concat(block.sections);\n        }\n        return sections;\n    }\n    async trackURLForChanges(url) {\n        const currentTracker = this.#urlToChangeTracker.get(url);\n        if (currentTracker) {\n            WorkspaceDiff.WorkspaceDiff.workspaceDiff().unsubscribeFromDiffChange(currentTracker.uiSourceCode, currentTracker.diffChangeCallback);\n        }\n        // We get a refreshed uiSourceCode each time because the underlying instance may be recreated.\n        const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(url);\n        if (!uiSourceCode) {\n            return;\n        }\n        const diffChangeCallback = this.refreshChangedLines.bind(this, uiSourceCode);\n        WorkspaceDiff.WorkspaceDiff.workspaceDiff().subscribeToDiffChange(uiSourceCode, diffChangeCallback);\n        const newTracker = {\n            uiSourceCode,\n            changedLines: new Set(),\n            diffChangeCallback,\n        };\n        this.#urlToChangeTracker.set(url, newTracker);\n        await this.refreshChangedLines(newTracker.uiSourceCode);\n    }\n    isPropertyChanged(property) {\n        const url = property.ownerStyle.parentRule?.resourceURL();\n        if (!url) {\n            return false;\n        }\n        const changeTracker = this.#urlToChangeTracker.get(url);\n        if (!changeTracker) {\n            return false;\n        }\n        const { changedLines, formattedCurrentMapping } = changeTracker;\n        const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(property, true);\n        if (!uiLocation) {\n            return false;\n        }\n        if (!formattedCurrentMapping) {\n            // UILocation's lineNumber starts at 0, but changedLines start at 1.\n            return changedLines.has(uiLocation.lineNumber + 1);\n        }\n        const formattedLineNumber = formattedCurrentMapping.originalToFormatted(uiLocation.lineNumber, uiLocation.columnNumber)[0];\n        return changedLines.has(formattedLineNumber + 1);\n    }\n    updateChangeStatus() {\n        if (!this.#copyChangesButton) {\n            return;\n        }\n        let hasChangedStyles = false;\n        for (const changeTracker of this.#urlToChangeTracker.values()) {\n            if (changeTracker.changedLines.size > 0) {\n                hasChangedStyles = true;\n                break;\n            }\n        }\n        this.#copyChangesButton.element.classList.toggle('hidden', !hasChangedStyles);\n    }\n    async refreshChangedLines(uiSourceCode) {\n        const changeTracker = this.#urlToChangeTracker.get(uiSourceCode.url());\n        if (!changeTracker) {\n            return;\n        }\n        const diffResponse = await WorkspaceDiff.WorkspaceDiff.workspaceDiff().requestDiff(uiSourceCode, { shouldFormatDiff: true });\n        const changedLines = new Set();\n        changeTracker.changedLines = changedLines;\n        if (!diffResponse) {\n            return;\n        }\n        const { diff, formattedCurrentMapping } = diffResponse;\n        const { rows } = DiffView.DiffView.buildDiffRows(diff);\n        for (const row of rows) {\n            if (row.type === \"addition\" /* DiffView.DiffView.RowType.ADDITION */) {\n                changedLines.add(row.currentLineNumber);\n            }\n        }\n        changeTracker.formattedCurrentMapping = formattedCurrentMapping;\n    }\n    async getFormattedChanges() {\n        let allChanges = '';\n        for (const [url, { uiSourceCode }] of this.#urlToChangeTracker) {\n            const diffResponse = await WorkspaceDiff.WorkspaceDiff.workspaceDiff().requestDiff(uiSourceCode, { shouldFormatDiff: true });\n            // Diff array with real diff will contain at least 2 lines.\n            if (!diffResponse || diffResponse?.diff.length < 2) {\n                continue;\n            }\n            const changes = await PanelUtils.formatCSSChangesFromDiff(diffResponse.diff);\n            if (changes.length > 0) {\n                allChanges += `/* ${escapeUrlAsCssComment(url)} */\\n\\n${changes}\\n\\n`;\n            }\n        }\n        return allChanges;\n    }\n    clipboardCopy(_event) {\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.StyleRuleCopied);\n    }\n    createStylesSidebarToolbar() {\n        const container = this.contentElement.createChild('div', 'styles-sidebar-pane-toolbar-container');\n        const hbox = container.createChild('div', 'hbox styles-sidebar-pane-toolbar');\n        const toolbar = new UI.Toolbar.Toolbar('styles-pane-toolbar', hbox);\n        const filterInput = new UI.Toolbar.ToolbarFilter(undefined, 1, 1, undefined, undefined, false);\n        filterInput.addEventListener(\"TextChanged\" /* UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED */, this.onFilterChanged, this);\n        toolbar.appendToolbarItem(filterInput);\n        void toolbar.appendItemsAtLocation('styles-sidebarpane-toolbar');\n        this.toolbar = toolbar;\n        const toolbarPaneContainer = container.createChild('div', 'styles-sidebar-toolbar-pane-container');\n        const toolbarPaneContent = toolbarPaneContainer.createChild('div', 'styles-sidebar-toolbar-pane');\n        return toolbarPaneContent;\n    }\n    showToolbarPane(widget, toggle) {\n        if (this.pendingWidgetToggle) {\n            this.pendingWidgetToggle.setToggled(false);\n        }\n        this.pendingWidgetToggle = toggle;\n        if (this.animatedToolbarPane) {\n            this.pendingWidget = widget;\n        }\n        else {\n            this.startToolbarPaneAnimation(widget);\n        }\n        if (widget && toggle) {\n            toggle.setToggled(true);\n        }\n    }\n    appendToolbarItem(item) {\n        if (this.toolbar) {\n            this.toolbar.appendToolbarItem(item);\n        }\n    }\n    startToolbarPaneAnimation(widget) {\n        if (widget === this.currentToolbarPane) {\n            return;\n        }\n        if (widget && this.currentToolbarPane) {\n            this.currentToolbarPane.detach();\n            widget.show(this.toolbarPaneElement);\n            this.currentToolbarPane = widget;\n            this.currentToolbarPane.focus();\n            return;\n        }\n        this.animatedToolbarPane = widget;\n        if (this.currentToolbarPane) {\n            this.toolbarPaneElement.style.animationName = 'styles-element-state-pane-slideout';\n        }\n        else if (widget) {\n            this.toolbarPaneElement.style.animationName = 'styles-element-state-pane-slidein';\n        }\n        if (widget) {\n            widget.show(this.toolbarPaneElement);\n        }\n        const listener = onAnimationEnd.bind(this);\n        this.toolbarPaneElement.addEventListener('animationend', listener, false);\n        function onAnimationEnd() {\n            this.toolbarPaneElement.style.removeProperty('animation-name');\n            this.toolbarPaneElement.removeEventListener('animationend', listener, false);\n            if (this.currentToolbarPane) {\n                this.currentToolbarPane.detach();\n            }\n            this.currentToolbarPane = this.animatedToolbarPane;\n            if (this.currentToolbarPane) {\n                this.currentToolbarPane.focus();\n            }\n            this.animatedToolbarPane = null;\n            if (this.pendingWidget) {\n                this.startToolbarPaneAnimation(this.pendingWidget);\n                this.pendingWidget = null;\n            }\n        }\n    }\n    createRenderingShortcuts() {\n        const prefersColorSchemeSetting = Common.Settings.Settings.instance().moduleSetting('emulated-css-media-feature-prefers-color-scheme');\n        const autoDarkModeSetting = Common.Settings.Settings.instance().moduleSetting('emulate-auto-dark-mode');\n        const decorateStatus = (condition, title) => `${condition ? '✓ ' : ''}${title}`;\n        const button = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleRenderingEmulations), 'brush', 'brush-filled', undefined, false);\n        button.element.setAttribute('jslog', `${VisualLogging.dropDown('rendering-emulations').track({ click: true })}`);\n        button.element.addEventListener('click', event => {\n            const boundingRect = button.element.getBoundingClientRect();\n            const menu = new UI.ContextMenu.ContextMenu(event, {\n                x: boundingRect.left,\n                y: boundingRect.bottom,\n            });\n            const preferredColorScheme = prefersColorSchemeSetting.get();\n            const isLightColorScheme = preferredColorScheme === 'light';\n            const isDarkColorScheme = preferredColorScheme === 'dark';\n            const isAutoDarkEnabled = autoDarkModeSetting.get();\n            const lightColorSchemeOption = decorateStatus(isLightColorScheme, 'prefers-color-scheme: light');\n            const darkColorSchemeOption = decorateStatus(isDarkColorScheme, 'prefers-color-scheme: dark');\n            const autoDarkModeOption = decorateStatus(isAutoDarkEnabled, i18nString(UIStrings.automaticDarkMode));\n            menu.defaultSection().appendItem(lightColorSchemeOption, () => {\n                autoDarkModeSetting.set(false);\n                prefersColorSchemeSetting.set(isLightColorScheme ? '' : 'light');\n                button.setToggled(Boolean(prefersColorSchemeSetting.get()));\n            }, { jslogContext: 'prefer-light-color-scheme' });\n            menu.defaultSection().appendItem(darkColorSchemeOption, () => {\n                autoDarkModeSetting.set(false);\n                prefersColorSchemeSetting.set(isDarkColorScheme ? '' : 'dark');\n                button.setToggled(Boolean(prefersColorSchemeSetting.get()));\n            }, { jslogContext: 'prefer-dark-color-scheme' });\n            menu.defaultSection().appendItem(autoDarkModeOption, () => {\n                autoDarkModeSetting.set(!isAutoDarkEnabled);\n                button.setToggled(Boolean(prefersColorSchemeSetting.get()));\n            }, { jslogContext: 'emulate-auto-dark-mode' });\n            void menu.show();\n            event.stopPropagation();\n        }, { capture: true });\n        return button;\n    }\n    createCopyAllChangesButton() {\n        const copyAllChangesButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.copyAllCSSChanges), 'copy');\n        // TODO(1296947): implement a dedicated component to share between all copy buttons\n        copyAllChangesButton.element.setAttribute('data-content', i18nString(UIStrings.copiedToClipboard));\n        let timeout;\n        copyAllChangesButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, async () => {\n            const allChanges = await this.getFormattedChanges();\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(allChanges);\n            Host.userMetrics.styleTextCopied(2 /* Host.UserMetrics.StyleTextCopied.ALL_CHANGES_VIA_STYLES_TAB */);\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = undefined;\n            }\n            copyAllChangesButton.element.classList.add('copied-to-clipboard');\n            timeout = window.setTimeout(() => {\n                copyAllChangesButton.element.classList.remove('copied-to-clipboard');\n                timeout = undefined;\n            }, 2000);\n        });\n        return copyAllChangesButton;\n    }\n}\nconst MAX_LINK_LENGTH = 23;\nexport class SectionBlock {\n    titleElementInternal;\n    sections;\n    #expanded = false;\n    #icon;\n    constructor(titleElement, expandable, expandedByDefault) {\n        this.titleElementInternal = titleElement;\n        this.sections = [];\n        this.#expanded = expandedByDefault ?? false;\n        if (expandable && titleElement instanceof HTMLElement) {\n            this.#icon =\n                IconButton.Icon.create(this.#expanded ? 'triangle-down' : 'triangle-right', 'section-block-expand-icon');\n            titleElement.classList.toggle('empty-section', !this.#expanded);\n            UI.ARIAUtils.setExpanded(titleElement, this.#expanded);\n            titleElement.appendChild(this.#icon);\n            // Intercept focus to avoid highlight on click.\n            titleElement.tabIndex = -1;\n            titleElement.addEventListener('click', () => this.expand(!this.#expanded), false);\n        }\n    }\n    expand(expand) {\n        if (!this.titleElementInternal || !this.#icon) {\n            return;\n        }\n        this.titleElementInternal.classList.toggle('empty-section', !expand);\n        this.#icon.name = expand ? 'triangle-down' : 'triangle-right';\n        UI.ARIAUtils.setExpanded(this.titleElementInternal, expand);\n        this.#expanded = expand;\n        this.sections.forEach(section => section.element.classList.toggle('hidden', !expand));\n    }\n    static createPseudoTypeBlock(pseudoType, pseudoArgument) {\n        const separatorElement = document.createElement('div');\n        separatorElement.className = 'sidebar-separator';\n        separatorElement.setAttribute('jslog', `${VisualLogging.sectionHeader('pseudotype')}`);\n        const pseudoArgumentString = pseudoArgument ? `(${pseudoArgument})` : '';\n        const pseudoTypeString = `${pseudoType}${pseudoArgumentString}`;\n        separatorElement.textContent = i18nString(UIStrings.pseudoSElement, { PH1: pseudoTypeString });\n        return new SectionBlock(separatorElement);\n    }\n    static async createInheritedPseudoTypeBlock(pseudoType, pseudoArgument, node) {\n        const separatorElement = document.createElement('div');\n        separatorElement.className = 'sidebar-separator';\n        separatorElement.setAttribute('jslog', `${VisualLogging.sectionHeader('inherited-pseudotype')}`);\n        const pseudoArgumentString = pseudoArgument ? `(${pseudoArgument})` : '';\n        const pseudoTypeString = `${pseudoType}${pseudoArgumentString}`;\n        UI.UIUtils.createTextChild(separatorElement, i18nString(UIStrings.inheritedFromSPseudoOf, { PH1: pseudoTypeString }));\n        const link = await Common.Linkifier.Linkifier.linkify(node, {\n            preventKeyboardFocus: true,\n            tooltip: undefined,\n        });\n        separatorElement.appendChild(link);\n        return new SectionBlock(separatorElement);\n    }\n    static createRegisteredPropertiesBlock(expandedByDefault) {\n        const separatorElement = document.createElement('div');\n        const block = new SectionBlock(separatorElement, true, expandedByDefault);\n        separatorElement.className = 'sidebar-separator';\n        separatorElement.appendChild(document.createTextNode(REGISTERED_PROPERTY_SECTION_NAME));\n        return block;\n    }\n    static createKeyframesBlock(keyframesName) {\n        const separatorElement = document.createElement('div');\n        separatorElement.className = 'sidebar-separator';\n        separatorElement.setAttribute('jslog', `${VisualLogging.sectionHeader('keyframes')}`);\n        separatorElement.textContent = `@keyframes ${keyframesName}`;\n        return new SectionBlock(separatorElement);\n    }\n    static createFontPaletteValuesRuleBlock(name) {\n        const separatorElement = document.createElement('div');\n        separatorElement.className = 'sidebar-separator';\n        separatorElement.textContent = `@font-palette-values ${name}`;\n        return new SectionBlock(separatorElement);\n    }\n    static createPositionTryBlock(positionTryName) {\n        const separatorElement = document.createElement('div');\n        separatorElement.className = 'sidebar-separator';\n        separatorElement.setAttribute('jslog', `${VisualLogging.sectionHeader('position-try')}`);\n        separatorElement.textContent = `@position-try ${positionTryName}`;\n        return new SectionBlock(separatorElement);\n    }\n    static async createInheritedNodeBlock(node) {\n        const separatorElement = document.createElement('div');\n        separatorElement.className = 'sidebar-separator';\n        separatorElement.setAttribute('jslog', `${VisualLogging.sectionHeader('inherited')}`);\n        UI.UIUtils.createTextChild(separatorElement, i18nString(UIStrings.inheritedFroms));\n        const link = await Common.Linkifier.Linkifier.linkify(node, {\n            preventKeyboardFocus: true,\n            tooltip: undefined,\n        });\n        separatorElement.appendChild(link);\n        return new SectionBlock(separatorElement);\n    }\n    static createLayerBlock(rule) {\n        const separatorElement = document.createElement('div');\n        separatorElement.className = 'sidebar-separator layer-separator';\n        separatorElement.setAttribute('jslog', `${VisualLogging.sectionHeader('layer')}`);\n        UI.UIUtils.createTextChild(separatorElement.createChild('div'), i18nString(UIStrings.layer));\n        const layers = rule.layers;\n        if (!layers.length && rule.origin === \"user-agent\" /* Protocol.CSS.StyleSheetOrigin.UserAgent */) {\n            const name = rule.origin === \"user-agent\" /* Protocol.CSS.StyleSheetOrigin.UserAgent */ ? '\\xa0user\\xa0agent\\xa0stylesheet' :\n                '\\xa0implicit\\xa0outer\\xa0layer';\n            UI.UIUtils.createTextChild(separatorElement.createChild('div'), name);\n            return new SectionBlock(separatorElement);\n        }\n        const layerLink = separatorElement.createChild('button');\n        layerLink.className = 'link';\n        layerLink.title = i18nString(UIStrings.clickToRevealLayer);\n        const name = layers.map(layer => SDK.CSSModel.CSSModel.readableLayerName(layer.text)).join('.');\n        layerLink.textContent = name;\n        layerLink.onclick = () => LayersWidget.LayersWidget.instance().revealLayer(name);\n        return new SectionBlock(separatorElement);\n    }\n    updateFilter() {\n        let hasAnyVisibleSection = false;\n        let numVisibleSections = 0;\n        for (const section of this.sections) {\n            numVisibleSections += section.updateFilter() ? 1 : 0;\n            hasAnyVisibleSection = section.updateFilter() || hasAnyVisibleSection;\n        }\n        if (this.titleElementInternal) {\n            this.titleElementInternal.classList.toggle('hidden', !hasAnyVisibleSection);\n        }\n        return numVisibleSections;\n    }\n    titleElement() {\n        return this.titleElementInternal;\n    }\n}\nexport class IdleCallbackManager {\n    discarded;\n    promises;\n    queue;\n    constructor() {\n        this.discarded = false;\n        this.promises = [];\n        this.queue = [];\n    }\n    discard() {\n        this.discarded = true;\n    }\n    schedule(fn) {\n        if (this.discarded) {\n            return;\n        }\n        const promise = new Promise((resolve, reject) => {\n            this.queue.push({ fn, resolve, reject });\n        });\n        this.promises.push(promise);\n        this.scheduleIdleCallback(/* timeout=*/ 100);\n    }\n    scheduleIdleCallback(timeout) {\n        window.requestIdleCallback(() => {\n            const next = this.queue.shift();\n            assertNotNullOrUndefined(next);\n            try {\n                if (!this.discarded) {\n                    next.fn();\n                }\n                next.resolve();\n            }\n            catch (err) {\n                next.reject(err);\n            }\n        }, { timeout });\n    }\n    awaitDone() {\n        return Promise.all(this.promises);\n    }\n}\nexport function quoteFamilyName(familyName) {\n    return `'${familyName.replaceAll('\\'', '\\\\\\'')}'`;\n}\nexport class CSSPropertyPrompt extends UI.TextPrompt.TextPrompt {\n    isColorAware;\n    cssCompletions;\n    selectedNodeComputedStyles;\n    parentNodeComputedStyles;\n    treeElement;\n    isEditingName;\n    cssVariables;\n    constructor(treeElement, isEditingName, completions = []) {\n        // Use the same callback both for applyItemCallback and acceptItemCallback.\n        super();\n        this.initialize(this.buildPropertyCompletions.bind(this), UI.UIUtils.StyleValueDelimiters);\n        const cssMetadata = SDK.CSSMetadata.cssMetadata();\n        this.isColorAware = SDK.CSSMetadata.cssMetadata().isColorAwareProperty(treeElement.property.name);\n        this.cssCompletions = [];\n        const node = treeElement.node();\n        if (isEditingName) {\n            this.cssCompletions = cssMetadata.allProperties();\n            if (node && !node.isSVGNode()) {\n                this.cssCompletions = this.cssCompletions.filter(property => !cssMetadata.isSVGProperty(property));\n            }\n        }\n        else {\n            this.cssCompletions = [...completions, ...cssMetadata.getPropertyValues(treeElement.property.name)];\n            if (node && cssMetadata.isFontFamilyProperty(treeElement.property.name)) {\n                const fontFamilies = node.domModel().cssModel().fontFaces().map(font => quoteFamilyName(font.getFontFamily()));\n                this.cssCompletions.unshift(...fontFamilies);\n            }\n        }\n        /**\n         * Computed styles cache populated for flexbox features.\n         */\n        this.selectedNodeComputedStyles = null;\n        /**\n         * Computed styles cache populated for flexbox features.\n         */\n        this.parentNodeComputedStyles = null;\n        this.treeElement = treeElement;\n        this.isEditingName = isEditingName;\n        this.cssVariables = treeElement.matchedStyles().availableCSSVariables(treeElement.property.ownerStyle);\n        if (this.cssVariables.length < 1000) {\n            this.cssVariables.sort(Platform.StringUtilities.naturalOrderComparator);\n        }\n        else {\n            this.cssVariables.sort();\n        }\n        if (!isEditingName) {\n            this.disableDefaultSuggestionForEmptyInput();\n            // If a CSS value is being edited that has a numeric or hex substring, hint that precision modifier shortcuts are available.\n            if (treeElement && treeElement.valueElement) {\n                const cssValueText = treeElement.valueElement.textContent;\n                const cmdOrCtrl = Host.Platform.isMac() ? 'Cmd' : 'Ctrl';\n                const optionOrAlt = Host.Platform.isMac() ? 'Option' : 'Alt';\n                if (cssValueText !== null) {\n                    if (cssValueText.match(/#[\\da-f]{3,6}$/i)) {\n                        this.setTitle(i18nString(UIStrings.incrementdecrementWithMousewheelOne, { PH1: cmdOrCtrl, PH2: optionOrAlt }));\n                    }\n                    else if (cssValueText.match(/\\d+/)) {\n                        this.setTitle(i18nString(UIStrings.incrementdecrementWithMousewheelHundred, { PH1: cmdOrCtrl, PH2: optionOrAlt }));\n                    }\n                }\n            }\n        }\n    }\n    onKeyDown(event) {\n        const keyboardEvent = event;\n        switch (keyboardEvent.key) {\n            case 'ArrowUp':\n            case 'ArrowDown':\n            case 'PageUp':\n            case 'PageDown':\n                if (!this.isSuggestBoxVisible() && this.handleNameOrValueUpDown(keyboardEvent)) {\n                    keyboardEvent.preventDefault();\n                    return;\n                }\n                break;\n            case 'Enter':\n                if (keyboardEvent.shiftKey) {\n                    return;\n                }\n                // Accept any available autocompletions and advance to the next field.\n                this.tabKeyPressed();\n                keyboardEvent.preventDefault();\n                return;\n            case ' ':\n                if (this.isEditingName) {\n                    // Since property names cannot contain a space\n                    // we accept available autocompletions for property name when the user presses space.\n                    this.tabKeyPressed();\n                    keyboardEvent.preventDefault();\n                    return;\n                }\n        }\n        super.onKeyDown(keyboardEvent);\n    }\n    onMouseWheel(event) {\n        if (this.handleNameOrValueUpDown(event)) {\n            event.consume(true);\n            return;\n        }\n        super.onMouseWheel(event);\n    }\n    tabKeyPressed() {\n        this.acceptAutoComplete();\n        // Always tab to the next field.\n        return false;\n    }\n    handleNameOrValueUpDown(event) {\n        function finishHandler(_originalValue, _replacementString) {\n            // Synthesize property text disregarding any comments, custom whitespace etc.\n            if (this.treeElement.nameElement && this.treeElement.valueElement) {\n                void this.treeElement.applyStyleText(this.treeElement.nameElement.textContent + ': ' + this.treeElement.valueElement.textContent, false);\n            }\n        }\n        function customNumberHandler(prefix, number, suffix) {\n            if (number !== 0 && !suffix.length &&\n                SDK.CSSMetadata.cssMetadata().isLengthProperty(this.treeElement.property.name) &&\n                !this.treeElement.property.value.toLowerCase().startsWith('calc(')) {\n                suffix = 'px';\n            }\n            return prefix + number + suffix;\n        }\n        // Handle numeric value increment/decrement only at this point.\n        if (!this.isEditingName && this.treeElement.valueElement &&\n            UI.UIUtils.handleElementValueModifications(event, this.treeElement.valueElement, finishHandler.bind(this), this.isValueSuggestion.bind(this), customNumberHandler.bind(this))) {\n            return true;\n        }\n        return false;\n    }\n    isValueSuggestion(word) {\n        if (!word) {\n            return false;\n        }\n        word = word.toLowerCase();\n        return this.cssCompletions.indexOf(word) !== -1 || word.startsWith('--');\n    }\n    async buildPropertyCompletions(expression, query, force) {\n        const lowerQuery = query.toLowerCase();\n        const editingVariable = !this.isEditingName && expression.trim().endsWith('var(');\n        if (!query && !force && !editingVariable && (this.isEditingName || expression)) {\n            return Promise.resolve([]);\n        }\n        const prefixResults = [];\n        const anywhereResults = [];\n        if (!editingVariable) {\n            this.cssCompletions.forEach(completion => filterCompletions.call(this, completion, false /* variable */));\n            // When and only when editing property names, we also include aliases for autocomplete.\n            if (this.isEditingName) {\n                SDK.CSSMetadata.cssMetadata().aliasesFor().forEach((canonicalProperty, alias) => {\n                    const index = alias.toLowerCase().indexOf(lowerQuery);\n                    if (index !== 0) {\n                        return;\n                    }\n                    const aliasResult = {\n                        text: alias,\n                        priority: SDK.CSSMetadata.cssMetadata().propertyUsageWeight(alias),\n                        isCSSVariableColor: false,\n                    };\n                    const canonicalPropertyResult = {\n                        text: canonicalProperty,\n                        priority: SDK.CSSMetadata.cssMetadata().propertyUsageWeight(canonicalProperty),\n                        subtitle: `= ${alias}`, // This explains why this canonicalProperty is prompted.\n                        isCSSVariableColor: false,\n                    };\n                    // We add aliasResult *before* the canonicalProperty one because we want to prompt\n                    // the alias one first, since it corresponds to what the user has typed.\n                    prefixResults.push(aliasResult, canonicalPropertyResult);\n                });\n            }\n        }\n        const node = this.treeElement.node();\n        if (this.isEditingName && node) {\n            const nameValuePresets = SDK.CSSMetadata.cssMetadata().nameValuePresets(node.isSVGNode());\n            nameValuePresets.forEach(preset => filterCompletions.call(this, preset, false /* variable */, true /* nameValue */));\n        }\n        if (this.isEditingName || editingVariable) {\n            this.cssVariables.forEach(variable => filterCompletions.call(this, variable, true /* variable */));\n        }\n        const results = prefixResults.concat(anywhereResults);\n        if (!this.isEditingName && !results.length && query.length > 1 && '!important'.startsWith(lowerQuery)) {\n            results.push({\n                text: '!important',\n                title: undefined,\n                subtitle: undefined,\n                priority: undefined,\n                isSecondary: undefined,\n                subtitleRenderer: undefined,\n                selectionRange: undefined,\n                hideGhostText: undefined,\n                iconElement: undefined,\n            });\n        }\n        const userEnteredText = query.replace('-', '');\n        if (userEnteredText && (userEnteredText === userEnteredText.toUpperCase())) {\n            for (let i = 0; i < results.length; ++i) {\n                if (!results[i].text.startsWith('--')) {\n                    results[i].text = results[i].text.toUpperCase();\n                }\n            }\n        }\n        for (const result of results) {\n            if (editingVariable) {\n                result.title = result.text;\n                result.text += ')';\n                continue;\n            }\n            const valuePreset = SDK.CSSMetadata.cssMetadata().getValuePreset(this.treeElement.name, result.text);\n            if (!this.isEditingName && valuePreset) {\n                result.title = result.text;\n                result.text = valuePreset.text;\n                result.selectionRange = { startColumn: valuePreset.startColumn, endColumn: valuePreset.endColumn };\n            }\n        }\n        const ensureComputedStyles = async () => {\n            if (!node || this.selectedNodeComputedStyles) {\n                return;\n            }\n            this.selectedNodeComputedStyles = await node.domModel().cssModel().getComputedStyle(node.id);\n            const parentNode = node.parentNode;\n            if (parentNode) {\n                this.parentNodeComputedStyles = await parentNode.domModel().cssModel().getComputedStyle(parentNode.id);\n            }\n        };\n        for (const result of results) {\n            await ensureComputedStyles();\n            // Using parent node's computed styles does not work in all cases. For example:\n            //\n            // <div id=\"container\" style=\"display: flex;\">\n            //  <div id=\"useless\" style=\"display: contents;\">\n            //    <div id=\"item\">item</div>\n            //  </div>\n            // </div>\n            // TODO(crbug/1139945): Find a better way to get the flex container styles.\n            const iconInfo = ElementsComponents.CSSPropertyIconResolver.findIcon(this.isEditingName ? result.text : `${this.treeElement.property.name}: ${result.text}`, this.selectedNodeComputedStyles, this.parentNodeComputedStyles);\n            if (!iconInfo) {\n                continue;\n            }\n            const icon = new IconButton.Icon.Icon();\n            const width = '12.5px';\n            const height = '12.5px';\n            icon.data = {\n                iconName: iconInfo.iconName,\n                width,\n                height,\n                color: 'var(--icon-default)',\n            };\n            icon.style.transform = `rotate(${iconInfo.rotate}deg) scale(${iconInfo.scaleX * 1.1}, ${iconInfo.scaleY * 1.1})`;\n            icon.style.maxHeight = height;\n            icon.style.maxWidth = width;\n            result.iconElement = icon;\n        }\n        if (this.isColorAware && !this.isEditingName) {\n            results.sort((a, b) => {\n                if (a.isCSSVariableColor && b.isCSSVariableColor) {\n                    return 0;\n                }\n                return a.isCSSVariableColor ? -1 : 1;\n            });\n        }\n        return Promise.resolve(results);\n        function filterCompletions(completion, variable, nameValue) {\n            const index = completion.toLowerCase().indexOf(lowerQuery);\n            const result = {\n                text: completion,\n                title: undefined,\n                subtitle: undefined,\n                priority: undefined,\n                isSecondary: undefined,\n                subtitleRenderer: undefined,\n                selectionRange: undefined,\n                hideGhostText: undefined,\n                iconElement: undefined,\n                isCSSVariableColor: false,\n            };\n            if (variable) {\n                const computedValue = this.treeElement.matchedStyles().computeCSSVariable(this.treeElement.property.ownerStyle, completion);\n                if (computedValue) {\n                    const color = Common.Color.parse(computedValue.value);\n                    if (color) {\n                        result.subtitleRenderer = colorSwatchRenderer.bind(null, color);\n                        result.isCSSVariableColor = true;\n                    }\n                    else {\n                        result.subtitleRenderer = computedValueSubtitleRenderer.bind(null, computedValue.value);\n                    }\n                }\n            }\n            if (nameValue) {\n                result.hideGhostText = true;\n            }\n            if (index === 0) {\n                result.priority = this.isEditingName ? SDK.CSSMetadata.cssMetadata().propertyUsageWeight(completion) : 1;\n                prefixResults.push(result);\n            }\n            else if (index > -1) {\n                anywhereResults.push(result);\n            }\n        }\n        function colorSwatchRenderer(color) {\n            const swatch = new InlineEditor.ColorSwatch.ColorSwatch();\n            swatch.renderColor(color);\n            swatch.style.pointerEvents = 'none';\n            return swatch;\n        }\n        function computedValueSubtitleRenderer(computedValue) {\n            const subtitleElement = document.createElement('span');\n            subtitleElement.className = 'suggestion-subtitle';\n            subtitleElement.textContent = `${computedValue}`;\n            subtitleElement.style.maxWidth = '100px';\n            subtitleElement.title = `${computedValue}`;\n            return subtitleElement;\n        }\n    }\n}\nexport function unescapeCssString(input) {\n    // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point\n    const reCssEscapeSequence = /(?<!\\\\)\\\\(?:([a-fA-F0-9]{1,6})|(.))[\\n\\t\\x20]?/gs;\n    return input.replace(reCssEscapeSequence, (_, $1, $2) => {\n        if ($2) { // Handle the single-character escape sequence.\n            return $2;\n        }\n        // Otherwise, handle the code point escape sequence.\n        const codePoint = parseInt($1, 16);\n        const isSurrogate = 0xD800 <= codePoint && codePoint <= 0xDFFF;\n        if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {\n            return '\\uFFFD';\n        }\n        return String.fromCodePoint(codePoint);\n    });\n}\nexport function escapeUrlAsCssComment(urlText) {\n    const url = new URL(urlText);\n    if (url.search) {\n        return `${url.origin}${url.pathname}${url.search.replaceAll('*/', '*%2F')}${url.hash}`;\n    }\n    return url.toString();\n}\nexport class ActionDelegate {\n    handleAction(_context, actionId) {\n        switch (actionId) {\n            case 'elements.new-style-rule': {\n                Host.userMetrics.actionTaken(Host.UserMetrics.Action.NewStyleRuleAdded);\n                void StylesSidebarPane.instance().createNewRuleInViaInspectorStyleSheet();\n                return true;\n            }\n        }\n        return false;\n    }\n}\nlet buttonProviderInstance;\nexport class ButtonProvider {\n    button;\n    constructor() {\n        this.button = UI.Toolbar.Toolbar.createActionButtonForId('elements.new-style-rule');\n        this.button.setLongClickable(true);\n        new UI.UIUtils.LongClickController(this.button.element, this.longClicked.bind(this));\n        UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, onNodeChanged.bind(this));\n        onNodeChanged.call(this);\n        function onNodeChanged() {\n            let node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n            node = node ? node.enclosingElementOrSelf() : null;\n            this.button.setEnabled(Boolean(node));\n        }\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!buttonProviderInstance || forceNew) {\n            buttonProviderInstance = new ButtonProvider();\n        }\n        return buttonProviderInstance;\n    }\n    longClicked(event) {\n        StylesSidebarPane.instance().onAddButtonLongClick(event);\n    }\n    item() {\n        return this.button;\n    }\n}\n//# sourceMappingURL=StylesSidebarPane.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { ImagePreviewPopover } from './ImagePreviewPopover.js';\nimport { StringMatcher, URLMatcher, } from './PropertyMatchers.js';\nimport { unescapeCssString } from './StylesSidebarPane.js';\nconst UIStrings = {\n    /**\n     *@description Text that is announced by the screen reader when the user focuses on an input field for entering the name of a CSS property in the Styles panel\n     *@example {margin} PH1\n     */\n    cssPropertyName: '`CSS` property name: {PH1}',\n    /**\n     *@description Text that is announced by the screen reader when the user focuses on an input field for entering the value of a CSS property in the Styles panel\n     *@example {10px} PH1\n     */\n    cssPropertyValue: '`CSS` property value: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/PropertyRenderer.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nfunction mergeWithSpacing(nodes, merge) {\n    const result = [...nodes];\n    if (SDK.CSSPropertyParser.requiresSpace(nodes, merge)) {\n        result.push(document.createTextNode(' '));\n    }\n    result.push(...merge);\n    return result;\n}\nexport class RenderingContext {\n    ast;\n    renderers;\n    matchedResult;\n    cssControls;\n    options;\n    constructor(ast, renderers, matchedResult, cssControls, options = { readonly: false }) {\n        this.ast = ast;\n        this.renderers = renderers;\n        this.matchedResult = matchedResult;\n        this.cssControls = cssControls;\n        this.options = options;\n    }\n    addControl(cssType, control) {\n        if (this.cssControls) {\n            const controls = this.cssControls.get(cssType);\n            if (!controls) {\n                this.cssControls.set(cssType, [control]);\n            }\n            else {\n                controls.push(control);\n            }\n        }\n    }\n}\nexport class Renderer extends SDK.CSSPropertyParser.TreeWalker {\n    #matchedResult;\n    #output = [];\n    #context;\n    constructor(ast, renderers, matchedResult, cssControls, options) {\n        super(ast);\n        this.#matchedResult = matchedResult;\n        this.#context = new RenderingContext(this.ast, renderers, this.#matchedResult, cssControls, options);\n    }\n    static render(nodeOrNodes, context) {\n        if (!Array.isArray(nodeOrNodes)) {\n            return this.render([nodeOrNodes], context);\n        }\n        const cssControls = new SDK.CSSPropertyParser.CSSControlMap();\n        const renderers = nodeOrNodes.map(node => this.walkExcludingSuccessors(context.ast.subtree(node), context.renderers, context.matchedResult, cssControls, context.options));\n        const nodes = renderers.map(node => node.#output).reduce(mergeWithSpacing);\n        return { nodes, cssControls };\n    }\n    static renderInto(nodeOrNodes, context, parent) {\n        const { nodes, cssControls } = this.render(nodeOrNodes, context);\n        if (parent.lastChild && SDK.CSSPropertyParser.requiresSpace([parent.lastChild], nodes)) {\n            parent.appendChild(document.createTextNode(' '));\n        }\n        nodes.map(n => parent.appendChild(n));\n        return { nodes, cssControls };\n    }\n    renderedMatchForTest(_nodes, _match) {\n    }\n    enter({ node }) {\n        const match = this.#matchedResult.getMatch(node);\n        const renderer = match &&\n            this.#context.renderers.get(match.constructor);\n        if (renderer || match instanceof SDK.CSSPropertyParser.TextMatch) {\n            const output = renderer ? renderer.render(match, this.#context) : match.render();\n            this.renderedMatchForTest(output, match);\n            this.#output = mergeWithSpacing(this.#output, output);\n            return false;\n        }\n        return true;\n    }\n    static renderNameElement(name) {\n        const nameElement = document.createElement('span');\n        nameElement.setAttribute('jslog', `${VisualLogging.key().track({\n            change: true,\n            keydown: 'ArrowLeft|ArrowUp|PageUp|Home|PageDown|ArrowRight|ArrowDown|End|Space|Tab|Enter|Escape',\n        })}`);\n        UI.ARIAUtils.setLabel(nameElement, i18nString(UIStrings.cssPropertyName, { PH1: name }));\n        nameElement.className = 'webkit-css-property';\n        nameElement.textContent = name;\n        nameElement.normalize();\n        return nameElement;\n    }\n    // This function renders a property value as HTML, customizing the presentation with a set of given AST matchers. This\n    // comprises the following steps:\n    // 1. Build an AST of the property.\n    // 2. Apply tree matchers during bottom up traversal.\n    // 3. Render the value from left to right into HTML, deferring rendering of matched subtrees to the matchers\n    //\n    // More general, longer matches take precedence over shorter, more specific matches. Whitespaces are normalized, for\n    // unmatched text and around rendered matching results.\n    static renderValueElement(propertyName, propertyValue, renderers) {\n        const valueElement = document.createElement('span');\n        valueElement.setAttribute('jslog', `${VisualLogging.value().track({\n            change: true,\n            keydown: 'ArrowLeft|ArrowUp|PageUp|Home|PageDown|ArrowRight|ArrowDown|End|Space|Tab|Enter|Escape',\n        })}`);\n        UI.ARIAUtils.setLabel(valueElement, i18nString(UIStrings.cssPropertyValue, { PH1: propertyValue }));\n        valueElement.className = 'value';\n        const ast = SDK.CSSPropertyParser.tokenizeDeclaration(propertyName, propertyValue);\n        if (!ast) {\n            valueElement.appendChild(document.createTextNode(propertyValue));\n            return valueElement;\n        }\n        const matchers = [];\n        const rendererMap = new Map();\n        for (const renderer of renderers) {\n            const matcher = renderer.matcher();\n            matchers.push(matcher);\n            rendererMap.set(matcher.matchType, renderer);\n        }\n        const matchedResult = SDK.CSSPropertyParser.BottomUpTreeMatching.walk(ast, matchers);\n        ast.trailingNodes.forEach(n => matchedResult.matchText(n));\n        const context = new RenderingContext(ast, rendererMap, matchedResult);\n        Renderer.render([ast.tree, ...ast.trailingNodes], context).nodes.forEach(node => valueElement.appendChild(node));\n        valueElement.normalize();\n        return valueElement;\n    }\n}\nexport class URLRenderer {\n    rule;\n    node;\n    constructor(rule, node) {\n        this.rule = rule;\n        this.node = node;\n    }\n    render(match) {\n        const url = unescapeCssString(match.url);\n        const container = document.createDocumentFragment();\n        UI.UIUtils.createTextChild(container, 'url(');\n        let hrefUrl = null;\n        if (this.rule && this.rule.resourceURL()) {\n            hrefUrl = Common.ParsedURL.ParsedURL.completeURL(this.rule.resourceURL(), url);\n        }\n        else if (this.node) {\n            hrefUrl = this.node.resolveURL(url);\n        }\n        const link = ImagePreviewPopover.setImageUrl(Components.Linkifier.Linkifier.linkifyURL(hrefUrl || url, {\n            text: url,\n            preventClick: false,\n            // crbug.com/1027168\n            // We rely on CSS text-overflow: ellipsis to hide long URLs in the Style panel,\n            // so that we don't have to keep two versions (original vs. trimmed) of URL\n            // at the same time, which complicates both StylesSidebarPane and StylePropertyTreeElement.\n            bypassURLTrimming: true,\n            showColumnNumber: false,\n            inlineFrameIndex: 0,\n        }), hrefUrl || url);\n        container.appendChild(link);\n        UI.UIUtils.createTextChild(container, ')');\n        return [container];\n    }\n    matcher() {\n        return new URLMatcher();\n    }\n}\nexport class StringRenderer {\n    render(match) {\n        const element = document.createElement('span');\n        element.innerText = match.text;\n        UI.Tooltip.Tooltip.install(element, unescapeCssString(match.text));\n        return [element];\n    }\n    matcher() {\n        return new StringMatcher();\n    }\n}\n//# sourceMappingURL=PropertyRenderer.js.map","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TreeOutline from '../../ui/components/tree_outline/tree_outline.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\nimport * as ElementsComponents from './components/components.js';\nimport { ComputedStyleModel } from './ComputedStyleModel.js';\nimport computedStyleSidebarPaneStyles from './computedStyleSidebarPane.css.js';\nimport { ImagePreviewPopover } from './ImagePreviewPopover.js';\nimport { PlatformFontsWidget } from './PlatformFontsWidget.js';\nimport { ColorMatcher } from './PropertyMatchers.js';\nimport { categorizePropertyName, DefaultCategoryOrder } from './PropertyNameCategories.js';\nimport { Renderer, StringRenderer, URLRenderer } from './PropertyRenderer.js';\nimport { StylePropertiesSection } from './StylePropertiesSection.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     * @description Text for a checkbox setting that controls whether the user-supplied filter text\n     * excludes all CSS propreties which are filtered out, or just greys them out. In Computed Style\n     * Widget of the Elements panel\n     */\n    showAll: 'Show all',\n    /**\n     * @description Text for a checkbox setting that controls whether similar CSS properties should be\n     * grouped together or not. In Computed Style Widget of the Elements panel.\n     */\n    group: 'Group',\n    /** [\n     * @description Text shown to the user when a filter is applied to the computed CSS properties, but\n     * no properties matched the filter and thus no results were returned.\n     */\n    noMatchingProperty: 'No matching property',\n    /**\n     * @description Context menu item in Elements panel to navigate to the source code location of the\n     * CSS selector that was clicked on.\n     */\n    navigateToSelectorSource: 'Navigate to selector source',\n    /**\n     * @description Context menu item in Elements panel to navigate to the corresponding CSS style rule\n     * for this computed property.\n     */\n    navigateToStyle: 'Navigate to style',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ComputedStyleWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * Rendering a property's name and value is expensive, and each time we do it\n * it generates a new HTML element. If we call this directly from our Lit\n * components, we will generate a brand new DOM element on each single render.\n * This is very expensive and unneccessary - for the majority of re-renders a\n * property's name and value does not change. So we cache the rest of rendering\n * the name and value in a map, where the key used is a combination of the\n * property's name and value. This ensures that we only re-generate this element\n * if the node itself changes.\n * The resulting Element nodes are inserted into the ComputedStyleProperty\n * component via <slot>s, ensuring that Lit doesn't directly render/re-render\n * the element.\n */\nconst propertyContentsCache = new Map();\nfunction renderPropertyContents(node, propertyName, propertyValue) {\n    const cacheKey = propertyName + ':' + propertyValue;\n    const valueFromCache = propertyContentsCache.get(cacheKey);\n    if (valueFromCache) {\n        return valueFromCache;\n    }\n    const name = Renderer.renderNameElement(propertyName);\n    name.slot = 'name';\n    const value = Renderer.renderValueElement(propertyName, propertyValue, [new ColorRenderer(), new URLRenderer(null, node), new StringRenderer()]);\n    value.slot = 'value';\n    propertyContentsCache.set(cacheKey, { name, value });\n    return { name, value };\n}\n/**\n * Note: this function is called for each tree node on each render, so we need\n * to ensure nothing expensive runs here, or if it does it is safely cached.\n **/\nconst createPropertyElement = (node, propertyName, propertyValue, traceable, inherited, activeProperty, onContextMenu) => {\n    const { name, value } = renderPropertyContents(node, propertyName, propertyValue);\n    // clang-format off\n    return html `<devtools-computed-style-property\n        .traceable=${traceable}\n        .inherited=${inherited}\n        @oncontextmenu=${onContextMenu}\n        @onnavigatetosource=${(event) => {\n        if (activeProperty) {\n            navigateToSource(activeProperty, event);\n        }\n    }}>\n          ${name}\n          ${value}\n      </devtools-computed-style-property>`;\n    // clang-format on\n};\nconst createTraceElement = (node, property, isPropertyOverloaded, matchedStyles, linkifier) => {\n    const trace = new ElementsComponents.ComputedStyleTrace.ComputedStyleTrace();\n    const valueElement = Renderer.renderValueElement(property.name, property.value, [new ColorRenderer(), new URLRenderer(null, node), new StringRenderer()]);\n    valueElement.slot = 'trace-value';\n    trace.appendChild(valueElement);\n    const rule = property.ownerStyle.parentRule;\n    let ruleOriginNode;\n    if (rule) {\n        ruleOriginNode = StylePropertiesSection.createRuleOriginNode(matchedStyles, linkifier, rule);\n    }\n    trace.data = {\n        selector: rule ? rule.selectorText() : 'element.style',\n        active: !isPropertyOverloaded,\n        onNavigateToSource: navigateToSource.bind(null, property),\n        ruleOriginNode,\n    };\n    return trace;\n};\nclass ColorRenderer {\n    render(match, context) {\n        const color = Common.Color.parse(match.text);\n        if (!color) {\n            return [document.createTextNode(match.text)];\n        }\n        const swatch = new InlineEditor.ColorSwatch.ColorSwatch();\n        swatch.setReadonly(true);\n        swatch.renderColor(color);\n        const valueElement = document.createElement('span');\n        valueElement.textContent = match.text;\n        swatch.append(valueElement);\n        swatch.addEventListener(InlineEditor.ColorSwatch.ColorChangedEvent.eventName, (event) => {\n            const { data: { color } } = event;\n            valueElement.textContent = color.getAuthoredText() ?? color.asString();\n        });\n        context.addControl('color', swatch);\n        return [swatch];\n    }\n    matcher() {\n        return new ColorMatcher();\n    }\n}\nconst navigateToSource = (cssProperty, event) => {\n    if (!event) {\n        return;\n    }\n    void Common.Revealer.reveal(cssProperty);\n    event.consume(true);\n};\nconst propertySorter = (propA, propB) => {\n    if (propA.startsWith('--') !== propB.startsWith('--')) {\n        return propA.startsWith('--') ? 1 : -1;\n    }\n    if (propA.startsWith('-webkit') !== propB.startsWith('-webkit')) {\n        return propA.startsWith('-webkit') ? 1 : -1;\n    }\n    const canonicalA = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propA);\n    const canonicalB = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propB);\n    return Platform.StringUtilities.compare(canonicalA, canonicalB);\n};\nexport class ComputedStyleWidget extends UI.ThrottledWidget.ThrottledWidget {\n    computedStyleModel;\n    showInheritedComputedStylePropertiesSetting;\n    groupComputedStylesSetting;\n    input;\n    filterRegex;\n    noMatchesElement;\n    linkifier;\n    imagePreviewPopover;\n    #computedStylesTree = new TreeOutline.TreeOutline.TreeOutline();\n    #treeData;\n    constructor() {\n        super(true);\n        this.contentElement.classList.add('styles-sidebar-computed-style-widget');\n        this.computedStyleModel = new ComputedStyleModel();\n        this.computedStyleModel.addEventListener(\"ComputedStyleChanged\" /* Events.COMPUTED_STYLE_CHANGED */, this.update, this);\n        this.showInheritedComputedStylePropertiesSetting =\n            Common.Settings.Settings.instance().createSetting('show-inherited-computed-style-properties', false);\n        this.showInheritedComputedStylePropertiesSetting.addChangeListener(this.update.bind(this));\n        this.groupComputedStylesSetting = Common.Settings.Settings.instance().createSetting('group-computed-styles', false);\n        this.groupComputedStylesSetting.addChangeListener(() => {\n            this.update();\n        });\n        const hbox = this.contentElement.createChild('div', 'hbox styles-sidebar-pane-toolbar');\n        const toolbar = new UI.Toolbar.Toolbar('styles-pane-toolbar', hbox);\n        const filterInput = new UI.Toolbar.ToolbarFilter(undefined, 1, 1, undefined, undefined, false);\n        filterInput.addEventListener(\"TextChanged\" /* UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED */, this.onFilterChanged, this);\n        toolbar.appendToolbarItem(filterInput);\n        this.input = filterInput;\n        this.filterRegex = null;\n        toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(this.showInheritedComputedStylePropertiesSetting, undefined, i18nString(UIStrings.showAll)));\n        toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(this.groupComputedStylesSetting, undefined, i18nString(UIStrings.group)));\n        this.noMatchesElement = this.contentElement.createChild('div', 'gray-info-message');\n        this.noMatchesElement.textContent = i18nString(UIStrings.noMatchingProperty);\n        this.contentElement.appendChild(this.#computedStylesTree);\n        this.linkifier = new Components.Linkifier.Linkifier(maxLinkLength);\n        this.imagePreviewPopover = new ImagePreviewPopover(this.contentElement, event => {\n            const link = event.composedPath()[0];\n            if (link instanceof Element) {\n                return link;\n            }\n            return null;\n        }, () => this.computedStyleModel.node());\n        const fontsWidget = new PlatformFontsWidget(this.computedStyleModel);\n        fontsWidget.show(this.contentElement);\n    }\n    onResize() {\n        const isNarrow = this.contentElement.offsetWidth < 260;\n        this.#computedStylesTree.classList.toggle('computed-narrow', isNarrow);\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([computedStyleSidebarPaneStyles]);\n    }\n    async doUpdate() {\n        const [nodeStyles, matchedStyles] = await Promise.all([this.computedStyleModel.fetchComputedStyle(), this.fetchMatchedCascade()]);\n        if (!nodeStyles || !matchedStyles) {\n            this.noMatchesElement.classList.remove('hidden');\n            return;\n        }\n        const shouldGroupComputedStyles = this.groupComputedStylesSetting.get();\n        if (shouldGroupComputedStyles) {\n            await this.rebuildGroupedList(nodeStyles, matchedStyles);\n        }\n        else {\n            await this.rebuildAlphabeticalList(nodeStyles, matchedStyles);\n        }\n    }\n    async fetchMatchedCascade() {\n        const node = this.computedStyleModel.node();\n        if (!node || !this.computedStyleModel.cssModel()) {\n            return null;\n        }\n        const cssModel = this.computedStyleModel.cssModel();\n        if (!cssModel) {\n            return null;\n        }\n        return cssModel.cachedMatchedCascadeForNode(node).then(validateStyles.bind(this));\n        function validateStyles(matchedStyles) {\n            return matchedStyles && matchedStyles.node() === this.computedStyleModel.node() ? matchedStyles : null;\n        }\n    }\n    async rebuildAlphabeticalList(nodeStyle, matchedStyles) {\n        this.imagePreviewPopover.hide();\n        this.linkifier.reset();\n        const cssModel = this.computedStyleModel.cssModel();\n        if (!cssModel) {\n            return;\n        }\n        const uniqueProperties = [...nodeStyle.computedStyle.keys()];\n        uniqueProperties.sort(propertySorter);\n        const node = nodeStyle.node;\n        const propertyTraces = this.computePropertyTraces(matchedStyles);\n        const nonInheritedProperties = this.computeNonInheritedProperties(matchedStyles);\n        const showInherited = this.showInheritedComputedStylePropertiesSetting.get();\n        const tree = [];\n        for (const propertyName of uniqueProperties) {\n            const propertyValue = nodeStyle.computedStyle.get(propertyName) || '';\n            const canonicalName = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propertyName);\n            const isInherited = !nonInheritedProperties.has(canonicalName);\n            if (!showInherited && isInherited && !alwaysShownComputedProperties.has(propertyName)) {\n                continue;\n            }\n            if (!showInherited && propertyName.startsWith('--')) {\n                continue;\n            }\n            if (propertyName !== canonicalName && propertyValue === nodeStyle.computedStyle.get(canonicalName)) {\n                continue;\n            }\n            tree.push(this.buildTreeNode(propertyTraces, propertyName, propertyValue, isInherited));\n        }\n        const defaultRenderer = this.createTreeNodeRenderer(propertyTraces, node, matchedStyles);\n        this.#treeData = {\n            tree,\n            compact: true,\n            defaultRenderer,\n        };\n        this.filterAlphabeticalList();\n    }\n    async rebuildGroupedList(nodeStyle, matchedStyles) {\n        this.imagePreviewPopover.hide();\n        this.linkifier.reset();\n        const cssModel = this.computedStyleModel.cssModel();\n        if (!nodeStyle || !matchedStyles || !cssModel) {\n            this.noMatchesElement.classList.remove('hidden');\n            return;\n        }\n        const node = nodeStyle.node;\n        const propertyTraces = this.computePropertyTraces(matchedStyles);\n        const nonInheritedProperties = this.computeNonInheritedProperties(matchedStyles);\n        const showInherited = this.showInheritedComputedStylePropertiesSetting.get();\n        const propertiesByCategory = new Map();\n        const tree = [];\n        for (const [propertyName, propertyValue] of nodeStyle.computedStyle) {\n            const canonicalName = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propertyName);\n            const isInherited = !nonInheritedProperties.has(canonicalName);\n            if (!showInherited && isInherited && !alwaysShownComputedProperties.has(propertyName)) {\n                continue;\n            }\n            if (!showInherited && propertyName.startsWith('--')) {\n                continue;\n            }\n            if (propertyName !== canonicalName && propertyValue === nodeStyle.computedStyle.get(canonicalName)) {\n                continue;\n            }\n            const categories = categorizePropertyName(propertyName);\n            for (const category of categories) {\n                if (!propertiesByCategory.has(category)) {\n                    propertiesByCategory.set(category, []);\n                }\n                propertiesByCategory.get(category)?.push(propertyName);\n            }\n        }\n        this.#computedStylesTree.removeChildren();\n        for (const category of DefaultCategoryOrder) {\n            const properties = propertiesByCategory.get(category);\n            if (properties && properties.length > 0) {\n                const propertyNodes = [];\n                for (const propertyName of properties) {\n                    const propertyValue = nodeStyle.computedStyle.get(propertyName) || '';\n                    const canonicalName = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propertyName);\n                    const isInherited = !nonInheritedProperties.has(canonicalName);\n                    propertyNodes.push(this.buildTreeNode(propertyTraces, propertyName, propertyValue, isInherited));\n                }\n                tree.push({ id: category, treeNodeData: { tag: 'category', name: category }, children: async () => propertyNodes });\n            }\n        }\n        const defaultRenderer = this.createTreeNodeRenderer(propertyTraces, node, matchedStyles);\n        this.#treeData = {\n            tree,\n            compact: true,\n            defaultRenderer,\n        };\n        return this.filterGroupLists();\n    }\n    buildTraceNode(property) {\n        const rule = property.ownerStyle.parentRule;\n        return {\n            treeNodeData: {\n                tag: 'traceElement',\n                property,\n                rule,\n            },\n            id: (rule?.origin || '') + ': ' + property.ownerStyle.styleSheetId + (property.range || property.name),\n        };\n    }\n    createTreeNodeRenderer(propertyTraces, domNode, matchedStyles) {\n        return node => {\n            const data = node.treeNodeData;\n            if (data.tag === 'property') {\n                const trace = propertyTraces.get(data.propertyName);\n                const activeProperty = trace?.find(property => matchedStyles.propertyState(property) === \"Active\" /* SDK.CSSMatchedStyles.PropertyState.ACTIVE */);\n                const propertyElement = createPropertyElement(domNode, data.propertyName, data.propertyValue, propertyTraces.has(data.propertyName), data.inherited, activeProperty, event => {\n                    if (activeProperty) {\n                        this.handleContextMenuEvent(matchedStyles, activeProperty, event);\n                    }\n                });\n                return propertyElement;\n            }\n            if (data.tag === 'traceElement') {\n                const isPropertyOverloaded = matchedStyles.propertyState(data.property) === \"Overloaded\" /* SDK.CSSMatchedStyles.PropertyState.OVERLOADED */;\n                const traceElement = createTraceElement(domNode, data.property, isPropertyOverloaded, matchedStyles, this.linkifier);\n                traceElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this, matchedStyles, data.property));\n                return html `${traceElement}`;\n            }\n            return html `<span style=\"cursor: text; color: var(--sys-color-token-subtle);\">${data.name}</span>`;\n        };\n    }\n    buildTreeNode(propertyTraces, propertyName, propertyValue, isInherited) {\n        const treeNodeData = {\n            tag: 'property',\n            propertyName,\n            propertyValue,\n            inherited: isInherited,\n        };\n        const trace = propertyTraces.get(propertyName);\n        if (!trace) {\n            return {\n                treeNodeData,\n                jslogContext: propertyName,\n                id: propertyName,\n            };\n        }\n        return {\n            treeNodeData,\n            jslogContext: propertyName,\n            id: propertyName,\n            children: async () => trace.map(this.buildTraceNode),\n        };\n    }\n    handleContextMenuEvent(matchedStyles, property, event) {\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        const rule = property.ownerStyle.parentRule;\n        if (rule) {\n            const header = rule.styleSheetId ? matchedStyles.cssModel().styleSheetHeaderForId(rule.styleSheetId) : null;\n            if (header && !header.isAnonymousInlineStyleSheet()) {\n                contextMenu.defaultSection().appendItem(i18nString(UIStrings.navigateToSelectorSource), () => {\n                    StylePropertiesSection.tryNavigateToRuleLocation(matchedStyles, rule);\n                }, { jslogContext: 'navigate-to-selector-source' });\n            }\n        }\n        contextMenu.defaultSection().appendItem(i18nString(UIStrings.navigateToStyle), () => Common.Revealer.reveal(property), { jslogContext: 'navigate-to-style' });\n        void contextMenu.show();\n    }\n    computePropertyTraces(matchedStyles) {\n        const result = new Map();\n        for (const style of matchedStyles.nodeStyles()) {\n            const allProperties = style.allProperties();\n            for (const property of allProperties) {\n                if (!property.activeInStyle() || !matchedStyles.propertyState(property)) {\n                    continue;\n                }\n                if (!result.has(property.name)) {\n                    result.set(property.name, []);\n                }\n                // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n                // @ts-expect-error\n                result.get(property.name).push(property);\n            }\n        }\n        return result;\n    }\n    computeNonInheritedProperties(matchedStyles) {\n        const result = new Set();\n        for (const style of matchedStyles.nodeStyles()) {\n            for (const property of style.allProperties()) {\n                if (!matchedStyles.propertyState(property)) {\n                    continue;\n                }\n                result.add(SDK.CSSMetadata.cssMetadata().canonicalPropertyName(property.name));\n            }\n        }\n        return result;\n    }\n    onFilterChanged(event) {\n        void this.filterComputedStyles(event.data ? new RegExp(Platform.StringUtilities.escapeForRegExp(event.data), 'i') : null);\n    }\n    async filterComputedStyles(regex) {\n        this.filterRegex = regex;\n        if (this.groupComputedStylesSetting.get()) {\n            return this.filterGroupLists();\n        }\n        return this.filterAlphabeticalList();\n    }\n    nodeFilter(node) {\n        const regex = this.filterRegex;\n        const data = node.treeNodeData;\n        if (data.tag === 'property') {\n            const matched = !regex || regex.test(data.propertyName) || regex.test(data.propertyValue);\n            return matched;\n        }\n        return true;\n    }\n    filterAlphabeticalList() {\n        if (!this.#treeData) {\n            return;\n        }\n        const tree = this.#treeData.tree.filter(this.nodeFilter.bind(this));\n        this.#computedStylesTree.data = {\n            tree,\n            defaultRenderer: this.#treeData.defaultRenderer,\n            compact: this.#treeData.compact,\n        };\n        this.noMatchesElement.classList.toggle('hidden', Boolean(tree.length));\n    }\n    async filterGroupLists() {\n        if (!this.#treeData) {\n            return;\n        }\n        const tree = [];\n        for (const group of this.#treeData.tree) {\n            const data = group.treeNodeData;\n            if (data.tag !== 'category' || !group.children) {\n                continue;\n            }\n            const properties = await group.children();\n            const filteredChildren = properties.filter(this.nodeFilter.bind(this));\n            if (filteredChildren.length) {\n                tree.push({ id: data.name, treeNodeData: { tag: 'category', name: data.name }, children: async () => filteredChildren });\n            }\n        }\n        this.#computedStylesTree.data = {\n            tree,\n            defaultRenderer: this.#treeData.defaultRenderer,\n            compact: this.#treeData.compact,\n        };\n        await this.#computedStylesTree.expandRecursively(0);\n        this.noMatchesElement.classList.toggle('hidden', Boolean(tree.length));\n    }\n}\nconst maxLinkLength = 30;\nconst alwaysShownComputedProperties = new Set(['display', 'height', 'width']);\n//# sourceMappingURL=ComputedStyleWidget.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (C) 2006, 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Anthony Ricaud <rik@webkit.org>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n#main-content {\n  position: relative;\n  flex: 1 1;\n}\n\n#elements-content {\n  overflow: auto;\n  padding: 2px 0 0;\n  height: 100%;\n}\n\n.style-panes-wrapper {\n  overflow: hidden scroll;\n  background-color: var(--sys-color-cdt-base-container);\n\n  & > div:not(:last-child) {\n    border-bottom: 1px solid var(--sys-color-divider);\n  }\n}\n\n#elements-content:not(.elements-wrap) > div {\n  display: inline-block;\n  min-width: 100%;\n}\n\n#elements-crumbs {\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n  overflow: hidden;\n  width: 100%;\n}\n\ndevtools-adorner-settings-pane {\n  margin-bottom: 10px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  overflow: auto;\n}\n\ndevtools-tree-outline {\n  overflow: auto;\n}\n\n.axtree-button {\n  position: absolute;\n  top: 16px;\n  right: 20px;\n  background-color: var(--sys-color-cdt-base-container);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n  border: 1px solid var(--sys-color-neutral-outline);\n  border-radius: 3px;\n}\n\n/*# sourceURL=elementsPanel.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n/* stylelint-disable-next-line selector-pseudo-element-no-unknown,selector-type-no-unknown */\n:root::highlight(search-highlight) {\n  background-color: var(--sys-color-yellow-outline);\n}\n\n/*# sourceURL=highlighting.css */\n`);\n\nexport default styles;\n","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport highlightingStyles from './highlighting.css.js';\nexport class RangeWalker {\n    root;\n    #offset = 0;\n    #treeWalker;\n    #eof;\n    constructor(root) {\n        this.root = root;\n        this.#treeWalker = document.createTreeWalker(root, NodeFilter.SHOW_TEXT);\n        this.#eof = !this.#treeWalker.firstChild();\n    }\n    #next() {\n        this.#offset += this.#treeWalker.currentNode.textContent?.length ?? 0;\n        this.#eof = !this.#treeWalker.nextNode();\n        return !this.#eof;\n    }\n    #goToPosition(offset) {\n        if (offset < this.#offset || this.#eof) {\n            return null;\n        }\n        // `>` here implies that, except for the first range, start offsets are left-leaning, i.e., when the offset falls\n        // between two text nodes, the preceding one is returned. This doesn't matter for Range semantics, but isn't\n        // intuitive wrt. the usual understanding of intervals. Making start offsets right-leaning but end offsets\n        // left-leaning would incur an unwarranted amount of complexity.\n        while (offset > this.#offset + (this.#treeWalker.currentNode.textContent?.length ?? 0)) {\n            if (!this.#next()) {\n                return null;\n            }\n        }\n        return this.#treeWalker.currentNode;\n    }\n    nextRange(start, length) {\n        if (length <= 0 || this.#eof) {\n            return null;\n        }\n        const startNode = this.#goToPosition(start);\n        if (!startNode) {\n            return null;\n        }\n        const offsetInStartNode = start - this.#offset;\n        const endNode = this.#goToPosition(start + length);\n        if (!endNode) {\n            return null;\n        }\n        const offsetInEndNode = start + length - this.#offset;\n        const range = new Range();\n        range.setStart(startNode, offsetInStartNode);\n        range.setEnd(endNode, offsetInEndNode);\n        return range;\n    }\n}\nexport const HIGHLIGHT_REGISTRY = 'search-highlight';\nlet highlightManagerInstance;\nexport class HighlightManager {\n    #highlights = new Highlight();\n    constructor() {\n        document.adoptedStyleSheets.push(highlightingStyles);\n        CSS.highlights.set(HIGHLIGHT_REGISTRY, this.#highlights);\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!highlightManagerInstance || forceNew) {\n            highlightManagerInstance = new HighlightManager();\n        }\n        return highlightManagerInstance;\n    }\n    addHighlights(ranges) {\n        ranges.forEach(this.addHighlight.bind(this));\n    }\n    removeHighlights(ranges) {\n        ranges.forEach(this.removeHighlight.bind(this));\n    }\n    addHighlight(range) {\n        this.#highlights.add(range);\n    }\n    removeHighlight(range) {\n        this.#highlights.delete(range);\n    }\n    highlightOrderedTextRanges(root, sourceRanges) {\n        const rangeWalker = new RangeWalker(root);\n        const ranges = sourceRanges.map(range => rangeWalker.nextRange(range.offset, range.length))\n            .filter((r) => r !== null && !r.collapsed);\n        this.addHighlights(ranges);\n        return ranges;\n    }\n}\n//# sourceMappingURL=HighlightManager.js.map","// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../../core/sdk/sdk.js';\nexport const fullQualifiedSelector = function (node, justSelector) {\n    if (node.nodeType() !== Node.ELEMENT_NODE) {\n        return node.localName() || node.nodeName().toLowerCase();\n    }\n    return cssPath(node, justSelector);\n};\nexport const cssPath = function (node, optimized) {\n    if (node.nodeType() !== Node.ELEMENT_NODE) {\n        return '';\n    }\n    const steps = [];\n    let contextNode = node;\n    while (contextNode) {\n        const step = cssPathStep(contextNode, Boolean(optimized), contextNode === node);\n        if (!step) {\n            break;\n        } // Error - bail out early.\n        steps.push(step);\n        if (step.optimized) {\n            break;\n        }\n        contextNode = contextNode.parentNode;\n    }\n    steps.reverse();\n    return steps.join(' > ');\n};\nexport const canGetJSPath = function (node) {\n    let wp = node;\n    while (wp) {\n        const shadowRoot = wp.ancestorShadowRoot();\n        if (shadowRoot && shadowRoot.shadowRootType() !== SDK.DOMModel.DOMNode.ShadowRootTypes.Open) {\n            return false;\n        }\n        wp = wp.ancestorShadowHost();\n    }\n    return true;\n};\nexport const jsPath = function (node, optimized) {\n    if (node.nodeType() !== Node.ELEMENT_NODE) {\n        return '';\n    }\n    const path = [];\n    let wp = node;\n    while (wp) {\n        path.push(cssPath(wp, optimized));\n        wp = wp.ancestorShadowHost();\n    }\n    path.reverse();\n    let result = '';\n    for (let i = 0; i < path.length; ++i) {\n        const string = JSON.stringify(path[i]);\n        if (i) {\n            result += `.shadowRoot.querySelector(${string})`;\n        }\n        else {\n            result += `document.querySelector(${string})`;\n        }\n    }\n    return result;\n};\nconst cssPathStep = function (node, optimized, isTargetNode) {\n    if (node.nodeType() !== Node.ELEMENT_NODE) {\n        return null;\n    }\n    const id = node.getAttribute('id');\n    if (optimized) {\n        if (id) {\n            return new Step(idSelector(id), true);\n        }\n        const nodeNameLower = node.nodeName().toLowerCase();\n        if (nodeNameLower === 'body' || nodeNameLower === 'head' || nodeNameLower === 'html') {\n            return new Step(node.nodeNameInCorrectCase(), true);\n        }\n    }\n    const nodeName = node.nodeNameInCorrectCase();\n    if (id) {\n        return new Step(nodeName + idSelector(id), true);\n    }\n    const parent = node.parentNode;\n    if (!parent || parent.nodeType() === Node.DOCUMENT_NODE) {\n        return new Step(nodeName, true);\n    }\n    function prefixedElementClassNames(node) {\n        const classAttribute = node.getAttribute('class');\n        if (!classAttribute) {\n            return [];\n        }\n        return classAttribute.split(/\\s+/g).filter(Boolean).map(function (name) {\n            // The prefix is required to store \"__proto__\" in a object-based map.\n            return '$' + name;\n        });\n    }\n    function idSelector(id) {\n        return '#' + CSS.escape(id);\n    }\n    const prefixedOwnClassNamesArray = prefixedElementClassNames(node);\n    let needsClassNames = false;\n    let needsNthChild = false;\n    let ownIndex = -1;\n    let elementIndex = -1;\n    const siblings = parent.children();\n    for (let i = 0; siblings && (ownIndex === -1 || !needsNthChild) && i < siblings.length; ++i) {\n        const sibling = siblings[i];\n        if (sibling.nodeType() !== Node.ELEMENT_NODE) {\n            continue;\n        }\n        elementIndex += 1;\n        if (sibling === node) {\n            ownIndex = elementIndex;\n            continue;\n        }\n        if (needsNthChild) {\n            continue;\n        }\n        if (sibling.nodeNameInCorrectCase() !== nodeName) {\n            continue;\n        }\n        needsClassNames = true;\n        const ownClassNames = new Set(prefixedOwnClassNamesArray);\n        if (!ownClassNames.size) {\n            needsNthChild = true;\n            continue;\n        }\n        const siblingClassNamesArray = prefixedElementClassNames(sibling);\n        for (let j = 0; j < siblingClassNamesArray.length; ++j) {\n            const siblingClass = siblingClassNamesArray[j];\n            if (!ownClassNames.has(siblingClass)) {\n                continue;\n            }\n            ownClassNames.delete(siblingClass);\n            if (!ownClassNames.size) {\n                needsNthChild = true;\n                break;\n            }\n        }\n    }\n    let result = nodeName;\n    if (isTargetNode && nodeName.toLowerCase() === 'input' && node.getAttribute('type') && !node.getAttribute('id') &&\n        !node.getAttribute('class')) {\n        result += '[type=' + CSS.escape((node.getAttribute('type')) || '') + ']';\n    }\n    if (needsNthChild) {\n        result += ':nth-child(' + (ownIndex + 1) + ')';\n    }\n    else if (needsClassNames) {\n        for (const prefixedName of prefixedOwnClassNamesArray) {\n            result += '.' + CSS.escape(prefixedName.slice(1));\n        }\n    }\n    return new Step(result, false);\n};\nexport const xPath = function (node, optimized) {\n    if (node.nodeType() === Node.DOCUMENT_NODE) {\n        return '/';\n    }\n    const steps = [];\n    let contextNode = node;\n    while (contextNode) {\n        const step = xPathValue(contextNode, optimized);\n        if (!step) {\n            break;\n        } // Error - bail out early.\n        steps.push(step);\n        if (step.optimized) {\n            break;\n        }\n        contextNode = contextNode.parentNode;\n    }\n    steps.reverse();\n    return (steps.length && steps[0].optimized ? '' : '/') + steps.join('/');\n};\nconst xPathValue = function (node, optimized) {\n    let ownValue;\n    const ownIndex = xPathIndex(node);\n    if (ownIndex === -1) {\n        return null;\n    } // Error.\n    switch (node.nodeType()) {\n        case Node.ELEMENT_NODE:\n            if (optimized && node.getAttribute('id')) {\n                return new Step('//*[@id=\"' + node.getAttribute('id') + '\"]', true);\n            }\n            ownValue = node.localName();\n            break;\n        case Node.ATTRIBUTE_NODE:\n            ownValue = '@' + node.nodeName();\n            break;\n        case Node.TEXT_NODE:\n        case Node.CDATA_SECTION_NODE:\n            ownValue = 'text()';\n            break;\n        case Node.PROCESSING_INSTRUCTION_NODE:\n            ownValue = 'processing-instruction()';\n            break;\n        case Node.COMMENT_NODE:\n            ownValue = 'comment()';\n            break;\n        case Node.DOCUMENT_NODE:\n            ownValue = '';\n            break;\n        default:\n            ownValue = '';\n            break;\n    }\n    if (ownIndex > 0) {\n        ownValue += '[' + ownIndex + ']';\n    }\n    return new Step(ownValue, node.nodeType() === Node.DOCUMENT_NODE);\n};\nconst xPathIndex = function (node) {\n    /**\n     * Returns -1 in case of error, 0 if no siblings matching the same expression,\n     * <XPath index among the same expression-matching sibling nodes> otherwise.\n     */\n    function areNodesSimilar(left, right) {\n        if (left === right) {\n            return true;\n        }\n        if (left.nodeType() === Node.ELEMENT_NODE && right.nodeType() === Node.ELEMENT_NODE) {\n            return left.localName() === right.localName();\n        }\n        if (left.nodeType() === right.nodeType()) {\n            return true;\n        }\n        // XPath treats CDATA as text nodes.\n        const leftType = left.nodeType() === Node.CDATA_SECTION_NODE ? Node.TEXT_NODE : left.nodeType();\n        const rightType = right.nodeType() === Node.CDATA_SECTION_NODE ? Node.TEXT_NODE : right.nodeType();\n        return leftType === rightType;\n    }\n    const siblings = node.parentNode ? node.parentNode.children() : null;\n    if (!siblings) {\n        return 0;\n    } // Root node - no siblings.\n    let hasSameNamedElements;\n    for (let i = 0; i < siblings.length; ++i) {\n        if (areNodesSimilar(node, siblings[i]) && siblings[i] !== node) {\n            hasSameNamedElements = true;\n            break;\n        }\n    }\n    if (!hasSameNamedElements) {\n        return 0;\n    }\n    let ownIndex = 1; // XPath indices start with 1.\n    for (let i = 0; i < siblings.length; ++i) {\n        if (areNodesSimilar(node, siblings[i])) {\n            if (siblings[i] === node) {\n                return ownIndex;\n            }\n            ++ownIndex;\n        }\n    }\n    return -1; // An error occurred: |node| not found in parent's children.\n};\nexport class Step {\n    value;\n    optimized;\n    constructor(value, optimized) {\n        this.value = value;\n        this.optimized = optimized || false;\n    }\n    toString() {\n        return this.value;\n    }\n}\n//# sourceMappingURL=DOMPath.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (c) 2014 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.editing {\n  box-shadow: var(--drop-shadow);\n  background-color: var(--sys-color-cdt-base-container);\n  text-overflow: clip !important; /* stylelint-disable-line declaration-no-important */\n  padding-left: 2px;\n  margin-left: -2px;\n  padding-right: 2px;\n  margin-right: -2px;\n  margin-bottom: -1px;\n  padding-bottom: 1px;\n  opacity: 100% !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.editing,\n.editing * {\n  color: var(--sys-color-on-surface) !important; /* stylelint-disable-line declaration-no-important */\n  text-decoration: none !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.editing br {\n  display: none;\n}\n\n.adorner-reveal {\n  margin: 0 3px;\n}\n\n.adorner-with-icon {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  height: 100%;\n\n  devtools-icon {\n    width: var(--sys-size-6);\n    height: var(--sys-size-6);\n    color: var(--icon-primary);\n  }\n}\n\n.adorner-with-icon *:not(:last-child) {\n  margin-right: 2px;\n}\n\n.elements-disclosure {\n  width: 100%;\n  display: inline-block;\n  line-height: normal;\n}\n\n.elements-disclosure li {\n  /** Keep margin-left & padding-left in sync with ElementsTreeElements.updateDecorations **/\n  padding: 1px 0 0 14px;\n  margin-left: -2px;\n  word-break: normal;\n  position: relative;\n  min-height: 15px;\n  line-height: 1.36;\n  min-width: 200px;\n}\n\n.elements-disclosure li::after {\n  content: \"\";\n  position: absolute;\n  inset: 0;\n  left: calc(var(--indent) * -1);\n  width: var(--indent);\n}\n\n.elements-disclosure li.parent {\n  display: flex;\n}\n\n.elements-disclosure li.parent:not(.always-parent) {\n  /** Keep it in sync with ElementsTreeElements.updateDecorations **/\n  margin-left: -12px;\n}\n\n.elements-disclosure li .ai-button-container {\n  display: none;\n  margin-left: 1ch;\n  overflow: visible;\n  max-height: var(--sys-size-6);\n  vertical-align: top;\n  margin-top: -1px;\n  position: absolute;\n  right: var(--sys-size-3);\n  bottom: 5px;\n  z-index: 999;\n}\n\n.elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) li.hovered .ai-button-container {\n  display: inline-flex;\n}\n\n.elements-disclosure li .selected-hint::before {\n  font-style: italic;\n  content: \" == $0\";\n  opacity: 0%;\n  position: absolute;\n  white-space: pre;\n}\n\n.elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) li.selected .selected-hint::before {\n  position: static;\n  opacity: 60%;\n}\n\n.elements-disclosure li.parent:not(.always-parent)::before {\n  box-sizing: border-box;\n  user-select: none;\n  mask-image: var(--image-file-triangle-right);\n  height: 14px;\n  width: 14px;\n  content: \"\\\\A0\\\\A0\";\n  color: transparent;\n  text-shadow: none;\n  margin-left: -3px;\n  background-color: var(--icon-default);\n  transition: transform 200ms;\n}\n\n.elements-disclosure li.parent.expanded::before {\n  transform: rotate(90deg);\n  margin-top: -2px;\n}\n\n.elements-disclosure li .selection {\n  display: none;\n  z-index: -1;\n}\n\n.elements-disclosure li.selected .selection {\n  display: block;\n}\n\n.elements-disclosure li.elements-drag-over .selection {\n  display: block;\n  margin-top: -2px;\n  border-top: 2px solid var(--sys-color-primary);\n}\n\n.elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) .selection {\n  background-color: var(--sys-color-neutral-container);\n}\n\n.elements-disclosure li.hovered:not(.selected) .selection {\n  display: block;\n  left: 3px;\n  right: 3px;\n  background-color: var(--sys-color-state-hover-on-subtle);\n  border-radius: 5px;\n}\n\n.elements-disclosure li .webkit-html-tag.close {\n  margin-left: -12px;\n}\n\n.elements-disclosure .elements-tree-outline.hide-selection-when-blurred .selected:focus-visible .highlight > * {\n  background: var(--sys-color-state-focus-highlight);\n  border-radius: 2px;\n  outline: 2px solid var(--sys-color-state-focus-ring);\n}\n\n.elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) li.selected:focus .selection {\n  background-color: var(--sys-color-tonal-container);\n}\n\n.elements-disclosure ol {\n  list-style-type: none;\n  /** Keep it in sync with ElementsTreeElements.updateDecorations **/\n  padding-inline-start: 12px;\n  margin: 0;\n}\n\n.elements-disclosure ol.children {\n  display: none;\n  min-width: 100%;\n}\n\n.elements-disclosure ol.children.expanded {\n  display: inline-block;\n}\n\n.elements-disclosure > ol {\n  position: relative;\n  margin: 0;\n  min-width: 100%;\n  min-height: 100%;\n  padding-left: 2px;\n}\n\n.elements-disclosure li.in-clipboard .highlight {\n  outline: 1px dotted var(--sys-color-divider);\n}\n\n.elements-tree-outline ol.shadow-root-deep {\n  background-color: transparent;\n}\n\n.elements-tree-editor {\n  box-shadow: var(--drop-shadow);\n  margin-right: 4px;\n}\n\nbutton,\ninput,\nselect {\n  font-family: inherit;\n  font-size: inherit;\n}\n\n.elements-gutter-decoration {\n  position: absolute;\n  top: 3px;\n  left: 2px;\n  height: 9px;\n  width: 9px;\n  border-radius: 5px;\n  border: 1px solid var(--sys-color-orange-bright);\n  background-color: var(--sys-color-orange-bright);\n}\n\n.elements-gutter-decoration.elements-has-decorated-children {\n  opacity: 50%;\n}\n\n.add-attribute {\n  margin-left: 1px;\n  margin-right: 1px;\n  white-space: nowrap;\n}\n\n.elements-tree-nowrap,\n.elements-tree-nowrap .li {\n  white-space: pre !important; /* stylelint-disable-line declaration-no-important */\n}\n\n.elements-disclosure .elements-tree-nowrap li {\n  word-wrap: normal;\n}\n/* DOM update highlight */\n@keyframes dom-update-highlight-animation {\n  from {\n    background-color: var(--sys-color-token-tag);\n    color: var(--sys-color-cdt-base-container);\n  }\n\n  80% {\n    background-color: var(--sys-color-token-meta);\n  }\n\n  to {\n    background-color: inherit;\n  }\n}\n\n@keyframes dom-update-highlight-animation-dark {\n  from {\n    background-color: var(--sys-color-token-tag);\n    color: var(--sys-color-cdt-base-container);\n  }\n\n  80% {\n    background-color: var(--sys-color-cdt-base-container);\n    color: inherit;\n  }\n\n  to {\n    background-color: inherit;\n  }\n}\n\n.dom-update-highlight {\n  animation: dom-update-highlight-animation 1.4s 1 cubic-bezier(0, 0, 0.2, 1);\n  border-radius: 2px;\n}\n\n:host-context(.theme-with-dark-background) .dom-update-highlight {\n  animation: dom-update-highlight-animation-dark 1.4s 1 cubic-bezier(0, 0, 0.2, 1);\n}\n\n.elements-disclosure.single-node li {\n  padding-left: 2px;\n}\n\n.elements-tree-shortcut-title,\n.elements-tree-shortcut-link {\n  color: var(--sys-color-token-subtle);\n}\n\n.elements-disclosure .gutter-container {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 15px;\n  height: 15px;\n  z-index: 1;\n}\n\n.elements-hide-gutter .gutter-container {\n  display: none;\n}\n\n.gutter-container > devtools-icon {\n  display: block;\n  visibility: hidden;\n  position: relative;\n  left: -1px;\n}\n\n.elements-disclosure li.selected .gutter-container:not(.has-decorations) > devtools-icon {\n  visibility: visible;\n}\n/** Guide line */\n\nli.hovered:not(.always-parent) + ol.children,\n.elements-tree-outline ol.shadow-root,\nli.selected:not(.always-parent) + ol.children {\n  background: linear-gradient(to right, var(--override-indentation-level-border-color), var(--override-indentation-level-border-color) 0.5px, transparent 0);\n  background-position-x: 5px;\n  background-size: 0.5px 100%;\n  background-repeat: no-repeat;\n}\n\nli.selected:not(.always-parent) + ol.children {\n  --override-indentation-level-border-color: var(--sys-color-divider) !important; /* stylelint-disable-line declaration-no-important */\n}\n\nli.hovered:not(.always-parent) + ol.children:not(.shadow-root) {\n  --override-indentation-level-border-color: color-mix(in sRGB, var(--ref-palette-neutral0) 10%, transparent);\n}\n\n.elements-tree-outline ol.shadow-root {\n  --override-indentation-level-border-color: var(--ref-palette-orange95);\n}\n\n@media (forced-colors: active) {\n  .elements-disclosure li.parent::before {\n    forced-color-adjust: none;\n    background-color: ButtonText !important; /* stylelint-disable-line declaration-no-important */\n  }\n\n  .elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) li.selected .selected-hint::before {\n    opacity: unset;\n  }\n\n  .elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) .selection,\n  .elements-disclosure li.hovered:not(.selected) .selection,\n  .elements-disclosure .elements-tree-outline:not(.hide-selection-when-blurred) li.selected:focus .selection {\n    forced-color-adjust: none;\n    background: canvas !important; /* stylelint-disable-line declaration-no-important */\n    border: 1px solid Highlight !important; /* stylelint-disable-line declaration-no-important */\n  }\n\n  .gutter-container > devtools-icon {\n    forced-color-adjust: none;\n  }\n}\n\n.violating-element {\n  background-image: var(--image-file-errorWave);\n  background-repeat: repeat-x;\n  background-position: bottom;\n  padding-bottom: 1px;\n}\n\n/*# sourceURL=elementsTreeOutline.css */\n`);\n\nexport default styles;\n","// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ElementsComponents from './components/components.js';\nimport * as ElementsTreeOutline from './ElementsTreeOutline.js';\nconst UIStrings = {\n    /**\n     *@description Link text content in Elements Tree Outline of the Elements panel. When clicked, it \"reveals\" the true location of an element.\n     */\n    reveal: 'reveal',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/TopLayerContainer.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TopLayerContainer extends UI.TreeOutline.TreeElement {\n    tree;\n    document;\n    currentTopLayerDOMNodes = new Set();\n    topLayerUpdateThrottler;\n    constructor(tree, document) {\n        super('#top-layer');\n        this.tree = tree;\n        this.document = document;\n        this.topLayerUpdateThrottler = new Common.Throttler.Throttler(1);\n    }\n    async throttledUpdateTopLayerElements() {\n        await this.topLayerUpdateThrottler.schedule(() => this.updateTopLayerElements());\n    }\n    async updateTopLayerElements() {\n        this.removeChildren();\n        this.removeCurrentTopLayerElementsAdorners();\n        this.currentTopLayerDOMNodes = new Set();\n        const domModel = this.document.domModel();\n        const newTopLayerElementsIDs = await domModel.getTopLayerElements();\n        if (!newTopLayerElementsIDs || newTopLayerElementsIDs.length === 0) {\n            return;\n        }\n        let topLayerElementIndex = 0;\n        for (let i = 0; i < newTopLayerElementsIDs.length; i++) {\n            const topLayerDOMNode = domModel.idToDOMNode.get(newTopLayerElementsIDs[i]);\n            if (!topLayerDOMNode || topLayerDOMNode.ownerDocument !== this.document) {\n                continue;\n            }\n            if (topLayerDOMNode.nodeName() !== '::backdrop') {\n                const topLayerElementShortcut = new SDK.DOMModel.DOMNodeShortcut(domModel.target(), topLayerDOMNode.backendNodeId(), 0, topLayerDOMNode.nodeName());\n                const topLayerElementRepresentation = new ElementsTreeOutline.ShortcutTreeElement(topLayerElementShortcut);\n                this.appendChild(topLayerElementRepresentation);\n                this.currentTopLayerDOMNodes.add(topLayerDOMNode);\n                // Add the element's backdrop if previous top layer element is a backdrop.\n                const previousTopLayerDOMNode = (i > 0) ? domModel.idToDOMNode.get(newTopLayerElementsIDs[i - 1]) : undefined;\n                if (previousTopLayerDOMNode && previousTopLayerDOMNode.nodeName() === '::backdrop') {\n                    const backdropElementShortcut = new SDK.DOMModel.DOMNodeShortcut(domModel.target(), previousTopLayerDOMNode.backendNodeId(), 0, previousTopLayerDOMNode.nodeName());\n                    const backdropElementRepresentation = new ElementsTreeOutline.ShortcutTreeElement(backdropElementShortcut);\n                    topLayerElementRepresentation.appendChild(backdropElementRepresentation);\n                }\n                // TODO(changhaohan): store not-yet-inserted DOMNodes and adorn them when inserted.\n                const topLayerTreeElement = this.tree.treeElementByNode.get(topLayerDOMNode);\n                if (topLayerTreeElement) {\n                    this.addTopLayerAdorner(topLayerTreeElement, topLayerElementRepresentation, ++topLayerElementIndex);\n                }\n            }\n        }\n    }\n    removeCurrentTopLayerElementsAdorners() {\n        for (const node of this.currentTopLayerDOMNodes) {\n            const topLayerTreeElement = this.tree.treeElementByNode.get(node);\n            // TODO(changhaohan): remove only top layer adorner.\n            topLayerTreeElement?.removeAllAdorners();\n        }\n    }\n    addTopLayerAdorner(element, topLayerElementRepresentation, topLayerElementIndex) {\n        const config = ElementsComponents.AdornerManager.getRegisteredAdorner(ElementsComponents.AdornerManager.RegisteredAdorners.TOP_LAYER);\n        const adornerContent = document.createElement('span');\n        adornerContent.classList.add('adorner-with-icon');\n        const linkIcon = new IconButton.Icon.Icon();\n        linkIcon.name = 'select-element';\n        const adornerText = document.createElement('span');\n        adornerText.textContent = `top-layer (${topLayerElementIndex})`;\n        adornerContent.append(linkIcon);\n        adornerContent.append(adornerText);\n        const adorner = element?.adorn(config, adornerContent);\n        if (adorner) {\n            const onClick = (() => {\n                topLayerElementRepresentation.revealAndSelect();\n            });\n            adorner.addInteraction(onClick, {\n                isToggle: false,\n                shouldPropagateOnKeydown: false,\n                ariaLabelDefault: i18nString(UIStrings.reveal),\n                ariaLabelActive: i18nString(UIStrings.reveal),\n            });\n            adorner.addEventListener('mousedown', e => e.consume(), false);\n        }\n    }\n}\n//# sourceMappingURL=TopLayerContainer.js.map","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as CodeHighlighter from '../../ui/components/code_highlighter/code_highlighter.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as ElementsComponents from './components/components.js';\nimport { ElementsPanel } from './ElementsPanel.js';\nimport { ElementsTreeElement, InitialChildrenLimit, isOpeningTag } from './ElementsTreeElement.js';\nimport elementsTreeOutlineStyles from './elementsTreeOutline.css.js';\nimport { ImagePreviewPopover } from './ImagePreviewPopover.js';\nimport { TopLayerContainer } from './TopLayerContainer.js';\nconst UIStrings = {\n    /**\n     *@description ARIA accessible name in Elements Tree Outline of the Elements panel\n     */\n    pageDom: 'Page DOM',\n    /**\n     *@description A context menu item to store a value as a global variable the Elements Panel\n     */\n    storeAsGlobalVariable: 'Store as global variable',\n    /**\n     *@description Tree element expand all button element button text content in Elements Tree Outline of the Elements panel\n     *@example {3} PH1\n     */\n    showAllNodesDMore: 'Show all nodes ({PH1} more)',\n    /**\n     *@description Link text content in Elements Tree Outline of the Elements panel\n     */\n    reveal: 'reveal',\n    /**\n     * @description A context menu item to open the badge settings pane\n     */\n    adornerSettings: 'Badge settings\\u2026',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementsTreeOutline.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst elementsTreeOutlineByDOMModel = new WeakMap();\nconst populatedTreeElements = new Set();\nexport class ElementsTreeOutline extends Common.ObjectWrapper.eventMixin(UI.TreeOutline.TreeOutline) {\n    treeElementByNode;\n    shadowRoot;\n    elementInternal;\n    includeRootDOMNode;\n    selectEnabled;\n    rootDOMNodeInternal;\n    selectedDOMNodeInternal;\n    visible;\n    imagePreviewPopover;\n    updateRecords;\n    treeElementsBeingUpdated;\n    decoratorExtensions;\n    showHTMLCommentsSetting;\n    multilineEditing;\n    visibleWidthInternal;\n    clipboardNodeData;\n    isXMLMimeTypeInternal;\n    suppressRevealAndSelect = false;\n    previousHoveredElement;\n    treeElementBeingDragged;\n    dragOverTreeElement;\n    updateModifiedNodesTimeout;\n    #genericIssues = [];\n    #topLayerContainerByParent = new Map();\n    #issuesManager;\n    #popupHelper;\n    #nodeElementToIssue = new Map();\n    constructor(omitRootDOMNode, selectEnabled, hideGutter) {\n        super();\n        if (Root.Runtime.experiments.isEnabled(\"highlight-errors-elements-panel\" /* Root.Runtime.ExperimentName.HIGHLIGHT_ERRORS_ELEMENTS_PANEL */)) {\n            this.#issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n            this.#issuesManager.addEventListener(\"IssueAdded\" /* IssuesManager.IssuesManager.Events.ISSUE_ADDED */, this.#onIssueEventReceived, this);\n            for (const issue of this.#issuesManager.issues()) {\n                if (issue instanceof IssuesManager.GenericIssue.GenericIssue) {\n                    this.#onIssueAdded(issue);\n                }\n            }\n        }\n        this.treeElementByNode = new WeakMap();\n        const shadowContainer = document.createElement('div');\n        this.shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(shadowContainer, { cssFile: [elementsTreeOutlineStyles, CodeHighlighter.Style.default], delegatesFocus: undefined });\n        const outlineDisclosureElement = this.shadowRoot.createChild('div', 'elements-disclosure');\n        this.elementInternal = this.element;\n        this.elementInternal.classList.add('elements-tree-outline', 'source-code');\n        if (hideGutter) {\n            this.elementInternal.classList.add('elements-hide-gutter');\n        }\n        UI.ARIAUtils.setLabel(this.elementInternal, i18nString(UIStrings.pageDom));\n        this.elementInternal.addEventListener('focusout', this.onfocusout.bind(this), false);\n        this.elementInternal.addEventListener('mousedown', this.onmousedown.bind(this), false);\n        this.elementInternal.addEventListener('mousemove', this.onmousemove.bind(this), false);\n        this.elementInternal.addEventListener('mouseleave', this.onmouseleave.bind(this), false);\n        this.elementInternal.addEventListener('dragstart', this.ondragstart.bind(this), false);\n        this.elementInternal.addEventListener('dragover', this.ondragover.bind(this), false);\n        this.elementInternal.addEventListener('dragleave', this.ondragleave.bind(this), false);\n        this.elementInternal.addEventListener('drop', this.ondrop.bind(this), false);\n        this.elementInternal.addEventListener('dragend', this.ondragend.bind(this), false);\n        this.elementInternal.addEventListener('contextmenu', this.contextMenuEventFired.bind(this), false);\n        this.elementInternal.addEventListener('clipboard-beforecopy', this.onBeforeCopy.bind(this), false);\n        this.elementInternal.addEventListener('clipboard-copy', this.onCopyOrCut.bind(this, false), false);\n        this.elementInternal.addEventListener('clipboard-cut', this.onCopyOrCut.bind(this, true), false);\n        this.elementInternal.addEventListener('clipboard-paste', this.onPaste.bind(this), false);\n        this.elementInternal.addEventListener('keydown', this.onKeyDown.bind(this), false);\n        outlineDisclosureElement.appendChild(this.elementInternal);\n        this.element = shadowContainer;\n        this.contentElement.setAttribute('jslog', `${VisualLogging.tree('elements')}`);\n        this.includeRootDOMNode = !omitRootDOMNode;\n        this.selectEnabled = selectEnabled;\n        this.rootDOMNodeInternal = null;\n        this.selectedDOMNodeInternal = null;\n        this.visible = false;\n        this.imagePreviewPopover = new ImagePreviewPopover(this.contentElement, event => {\n            let link = event.target;\n            while (link && !ImagePreviewPopover.getImageURL(link)) {\n                link = link.parentElementOrShadowHost();\n            }\n            return link;\n        }, link => {\n            const listItem = UI.UIUtils.enclosingNodeOrSelfWithNodeName(link, 'li');\n            if (!listItem) {\n                return null;\n            }\n            const treeElement = UI.TreeOutline.TreeElement.getTreeElementBylistItemNode(listItem);\n            if (!treeElement) {\n                return null;\n            }\n            return treeElement.node();\n        });\n        this.updateRecords = new Map();\n        this.treeElementsBeingUpdated = new Set();\n        this.decoratorExtensions = null;\n        this.showHTMLCommentsSetting = Common.Settings.Settings.instance().moduleSetting('show-html-comments');\n        this.showHTMLCommentsSetting.addChangeListener(this.onShowHTMLCommentsChange.bind(this));\n        this.setUseLightSelectionColor(true);\n        if (Root.Runtime.experiments.isEnabled(\"highlight-errors-elements-panel\" /* Root.Runtime.ExperimentName.HIGHLIGHT_ERRORS_ELEMENTS_PANEL */)) {\n            this.#popupHelper = new UI.PopoverHelper.PopoverHelper(this.elementInternal, event => {\n                const hoveredNode = event.composedPath()[0];\n                if (!hoveredNode || !hoveredNode.matches('.violating-element')) {\n                    return null;\n                }\n                const issue = this.#nodeElementToIssue.get(hoveredNode);\n                if (!issue) {\n                    return null;\n                }\n                const issueDetails = issue.details();\n                const tooltipTitle = this.#issueCodeToTooltipTitle(issueDetails.errorType);\n                const issueKindIcon = new IconButton.Icon.Icon();\n                issueKindIcon.data = IssueCounter.IssueCounter.getIssueKindIconData(issue.getKind());\n                issueKindIcon.style.cursor = 'pointer';\n                const viewIssueElement = document.createElement('a');\n                viewIssueElement.href = '#';\n                viewIssueElement.textContent = 'View issue:';\n                const issueTitle = document.createElement('span');\n                issueTitle.textContent = tooltipTitle;\n                const element = document.createElement('div');\n                element.appendChild(issueKindIcon);\n                element.appendChild(viewIssueElement);\n                element.appendChild(issueTitle);\n                element.style.display = 'flex';\n                element.style.alignItems = 'center';\n                element.style.gap = '5px';\n                return {\n                    box: hoveredNode.boxInWindow(),\n                    show: async (popover) => {\n                        popover.setIgnoreLeftMargin(true);\n                        const openIssueEvent = () => Common.Revealer.reveal(issue);\n                        viewIssueElement.addEventListener('click', () => openIssueEvent());\n                        issueKindIcon.addEventListener('click', () => openIssueEvent());\n                        popover.contentElement.appendChild(element);\n                        return true;\n                    },\n                };\n            }, 'elements.issue');\n            this.#popupHelper.setTimeout(300);\n            this.#popupHelper.setHasPadding(true);\n        }\n    }\n    #issueCodeToTooltipTitle(errorType) {\n        switch (errorType) {\n            case \"FormLabelForNameError\" /* Protocol.Audits.GenericIssueErrorType.FormLabelForNameError */:\n                return 'Incorrect use of <label for=FORM_ELEMENT>';\n            case \"FormDuplicateIdForInputError\" /* Protocol.Audits.GenericIssueErrorType.FormDuplicateIdForInputError */:\n                return 'Duplicate form field id in the same form';\n            case \"FormInputWithNoLabelError\" /* Protocol.Audits.GenericIssueErrorType.FormInputWithNoLabelError */:\n                return 'Form field without valid aria-labelledby attribute or associated label';\n            case \"FormAutocompleteAttributeEmptyError\" /* Protocol.Audits.GenericIssueErrorType.FormAutocompleteAttributeEmptyError */:\n                return 'Incorrect use of autocomplete attribute';\n            case \"FormEmptyIdAndNameAttributesForInputError\" /* Protocol.Audits.GenericIssueErrorType.FormEmptyIdAndNameAttributesForInputError */:\n                return 'A form field element should have an id or name attribute';\n            case \"FormAriaLabelledByToNonExistingId\" /* Protocol.Audits.GenericIssueErrorType.FormAriaLabelledByToNonExistingId */:\n                return 'An aria-labelledby attribute doesn\\'t match any element id';\n            case \"FormInputAssignedAutocompleteValueToIdOrNameAttributeError\" /* Protocol.Audits.GenericIssueErrorType.FormInputAssignedAutocompleteValueToIdOrNameAttributeError */:\n                return 'An element doesn\\'t have an autocomplete attribute';\n            case \"FormLabelHasNeitherForNorNestedInput\" /* Protocol.Audits.GenericIssueErrorType.FormLabelHasNeitherForNorNestedInput */:\n                return 'No label associated with a form field';\n            case \"FormLabelForMatchesNonExistingIdError\" /* Protocol.Audits.GenericIssueErrorType.FormLabelForMatchesNonExistingIdError */:\n                return 'Incorrect use of <label for=FORM_ELEMENT>';\n            case \"FormInputHasWrongButWellIntendedAutocompleteValueError\" /* Protocol.Audits.GenericIssueErrorType.FormInputHasWrongButWellIntendedAutocompleteValueError */:\n                return 'Non-standard autocomplete attribute value';\n            default:\n                return '';\n        }\n    }\n    static forDOMModel(domModel) {\n        return elementsTreeOutlineByDOMModel.get(domModel) || null;\n    }\n    async #onIssueEventReceived(event) {\n        if (event.data.issue instanceof IssuesManager.GenericIssue.GenericIssue) {\n            this.#onIssueAdded(event.data.issue);\n            await this.#addTreeElementIssue(event.data.issue);\n        }\n    }\n    #onIssueAdded(issue) {\n        this.#genericIssues.push(issue);\n    }\n    #addAllElementIssues() {\n        for (const issue of this.#genericIssues) {\n            void this.#addTreeElementIssue(issue);\n        }\n    }\n    async #addTreeElementIssue(issue) {\n        const issueDetails = issue.details();\n        const tooltipTitle = this.#issueCodeToTooltipTitle(issueDetails.errorType);\n        if (!tooltipTitle) {\n            return;\n        }\n        if (!this.rootDOMNode || !issueDetails.violatingNodeId) {\n            return;\n        }\n        const deferredDOMNode = new SDK.DOMModel.DeferredDOMNode(this.rootDOMNode.domModel().target(), issueDetails.violatingNodeId);\n        const node = await deferredDOMNode.resolvePromise();\n        if (!node) {\n            return;\n        }\n        const treeElement = this.findTreeElement(node);\n        if (treeElement) {\n            treeElement.addIssue(issue);\n            const treeElementNodeElementsToIssue = treeElement.issuesByNodeElement;\n            // This element could be the treeElement tags name or an attribute.\n            for (const [element, issue] of treeElementNodeElementsToIssue) {\n                this.#nodeElementToIssue.set(element, issue);\n            }\n        }\n    }\n    onShowHTMLCommentsChange() {\n        const selectedNode = this.selectedDOMNode();\n        if (selectedNode && selectedNode.nodeType() === Node.COMMENT_NODE && !this.showHTMLCommentsSetting.get()) {\n            this.selectDOMNode(selectedNode.parentNode);\n        }\n        this.update();\n    }\n    setWordWrap(wrap) {\n        this.elementInternal.classList.toggle('elements-tree-nowrap', !wrap);\n    }\n    setMultilineEditing(multilineEditing) {\n        this.multilineEditing = multilineEditing;\n    }\n    visibleWidth() {\n        return this.visibleWidthInternal || 0;\n    }\n    setVisibleWidth(width) {\n        this.visibleWidthInternal = width;\n        if (this.multilineEditing) {\n            this.multilineEditing.resize();\n        }\n    }\n    setClipboardData(data) {\n        if (this.clipboardNodeData) {\n            const treeElement = this.findTreeElement(this.clipboardNodeData.node);\n            if (treeElement) {\n                treeElement.setInClipboard(false);\n            }\n            delete this.clipboardNodeData;\n        }\n        if (data) {\n            const treeElement = this.findTreeElement(data.node);\n            if (treeElement) {\n                treeElement.setInClipboard(true);\n            }\n            this.clipboardNodeData = data;\n        }\n    }\n    resetClipboardIfNeeded(removedNode) {\n        if (this.clipboardNodeData && this.clipboardNodeData.node === removedNode) {\n            this.setClipboardData(null);\n        }\n    }\n    onBeforeCopy(event) {\n        event.handled = true;\n    }\n    onCopyOrCut(isCut, event) {\n        this.setClipboardData(null);\n        // @ts-ignore this bound in the main entry point\n        const originalEvent = event['original'];\n        if (!originalEvent || !originalEvent.target) {\n            return;\n        }\n        // Don't prevent the normal copy if the user has a selection.\n        if (originalEvent.target instanceof Node && originalEvent.target.hasSelection()) {\n            return;\n        }\n        // Do not interfere with text editing.\n        if (UI.UIUtils.isEditing()) {\n            return;\n        }\n        const targetNode = this.selectedDOMNode();\n        if (!targetNode) {\n            return;\n        }\n        if (!originalEvent.clipboardData) {\n            return;\n        }\n        originalEvent.clipboardData.clearData();\n        event.handled = true;\n        this.performCopyOrCut(isCut, targetNode);\n    }\n    performCopyOrCut(isCut, node) {\n        if (!node) {\n            return;\n        }\n        if (isCut && (node.isShadowRoot() || node.ancestorUserAgentShadowRoot())) {\n            return;\n        }\n        void node.copyNode();\n        this.setClipboardData({ node, isCut });\n    }\n    canPaste(targetNode) {\n        if (targetNode.isShadowRoot() || targetNode.ancestorUserAgentShadowRoot()) {\n            return false;\n        }\n        if (!this.clipboardNodeData) {\n            return false;\n        }\n        const node = this.clipboardNodeData.node;\n        if (this.clipboardNodeData.isCut && (node === targetNode || node.isAncestor(targetNode))) {\n            return false;\n        }\n        if (targetNode.domModel() !== node.domModel()) {\n            return false;\n        }\n        return true;\n    }\n    pasteNode(targetNode) {\n        if (this.canPaste(targetNode)) {\n            this.performPaste(targetNode);\n        }\n    }\n    duplicateNode(targetNode) {\n        this.performDuplicate(targetNode);\n    }\n    onPaste(event) {\n        // Do not interfere with text editing.\n        if (UI.UIUtils.isEditing()) {\n            return;\n        }\n        const targetNode = this.selectedDOMNode();\n        if (!targetNode || !this.canPaste(targetNode)) {\n            return;\n        }\n        event.handled = true;\n        this.performPaste(targetNode);\n    }\n    performPaste(targetNode) {\n        if (!this.clipboardNodeData) {\n            return;\n        }\n        if (this.clipboardNodeData.isCut) {\n            this.clipboardNodeData.node.moveTo(targetNode, null, expandCallback.bind(this));\n            this.setClipboardData(null);\n        }\n        else {\n            this.clipboardNodeData.node.copyTo(targetNode, null, expandCallback.bind(this));\n        }\n        function expandCallback(error, pastedNode) {\n            if (error || !pastedNode) {\n                return;\n            }\n            this.selectDOMNode(pastedNode);\n        }\n    }\n    performDuplicate(targetNode) {\n        if (targetNode.isInShadowTree()) {\n            return;\n        }\n        const parentNode = targetNode.parentNode ? targetNode.parentNode : targetNode;\n        if (parentNode.nodeName() === '#document') {\n            return;\n        }\n        targetNode.copyTo(parentNode, targetNode.nextSibling);\n    }\n    setVisible(visible) {\n        if (visible === this.visible) {\n            return;\n        }\n        this.visible = visible;\n        if (!this.visible) {\n            this.imagePreviewPopover.hide();\n            if (this.multilineEditing) {\n                this.multilineEditing.cancel();\n            }\n            return;\n        }\n        this.runPendingUpdates();\n        if (this.selectedDOMNodeInternal) {\n            this.revealAndSelectNode(this.selectedDOMNodeInternal, false);\n        }\n    }\n    get rootDOMNode() {\n        return this.rootDOMNodeInternal;\n    }\n    set rootDOMNode(x) {\n        if (this.rootDOMNodeInternal === x) {\n            return;\n        }\n        this.rootDOMNodeInternal = x;\n        this.isXMLMimeTypeInternal = x && x.isXMLNode();\n        this.update();\n    }\n    get isXMLMimeType() {\n        return Boolean(this.isXMLMimeTypeInternal);\n    }\n    selectedDOMNode() {\n        return this.selectedDOMNodeInternal;\n    }\n    selectDOMNode(node, focus) {\n        if (this.selectedDOMNodeInternal === node) {\n            this.revealAndSelectNode(node, !focus);\n            return;\n        }\n        this.selectedDOMNodeInternal = node;\n        this.revealAndSelectNode(node, !focus);\n        // The revealAndSelectNode() method might find a different element if there is inlined text,\n        // and the select() call would change the selectedDOMNode and reenter this setter. So to\n        // avoid calling selectedNodeChanged() twice, first check if selectedDOMNodeInternal is the same\n        // node as the one passed in.\n        if (this.selectedDOMNodeInternal === node) {\n            this.selectedNodeChanged(Boolean(focus));\n        }\n    }\n    editing() {\n        const node = this.selectedDOMNode();\n        if (!node) {\n            return false;\n        }\n        const treeElement = this.findTreeElement(node);\n        if (!treeElement) {\n            return false;\n        }\n        return treeElement.isEditing() || false;\n    }\n    update() {\n        const selectedNode = this.selectedDOMNode();\n        this.removeChildren();\n        if (!this.rootDOMNode) {\n            return;\n        }\n        if (this.includeRootDOMNode) {\n            const treeElement = this.createElementTreeElement(this.rootDOMNode);\n            this.appendChild(treeElement);\n        }\n        else {\n            // FIXME: this could use findTreeElement to reuse a tree element if it already exists\n            const children = this.visibleChildren(this.rootDOMNode);\n            for (const child of children) {\n                const treeElement = this.createElementTreeElement(child);\n                this.appendChild(treeElement);\n            }\n        }\n        if (this.rootDOMNode instanceof SDK.DOMModel.DOMDocument) {\n            void this.createTopLayerContainer(this.rootElement(), this.rootDOMNode);\n        }\n        if (selectedNode) {\n            this.revealAndSelectNode(selectedNode, true);\n        }\n    }\n    selectedNodeChanged(focus) {\n        this.dispatchEventToListeners(ElementsTreeOutline.Events.SelectedNodeChanged, { node: this.selectedDOMNodeInternal, focus });\n    }\n    fireElementsTreeUpdated(nodes) {\n        this.dispatchEventToListeners(ElementsTreeOutline.Events.ElementsTreeUpdated, nodes);\n    }\n    findTreeElement(node) {\n        let treeElement = this.lookUpTreeElement(node);\n        if (!treeElement && node.nodeType() === Node.TEXT_NODE) {\n            // The text node might have been inlined if it was short, so try to find the parent element.\n            treeElement = this.lookUpTreeElement(node.parentNode);\n        }\n        return treeElement;\n    }\n    lookUpTreeElement(node) {\n        if (!node) {\n            return null;\n        }\n        const cachedElement = this.treeElementByNode.get(node);\n        if (cachedElement) {\n            return cachedElement;\n        }\n        // Walk up the parent pointers from the desired node\n        const ancestors = [];\n        let currentNode;\n        for (currentNode = node.parentNode; currentNode; currentNode = currentNode.parentNode) {\n            ancestors.push(currentNode);\n            if (this.treeElementByNode.has(currentNode)) { // stop climbing as soon as we hit\n                break;\n            }\n        }\n        if (!currentNode) {\n            return null;\n        }\n        // Walk down to populate each ancestor's children, to fill in the tree and the cache.\n        for (let i = ancestors.length - 1; i >= 0; --i) {\n            const child = ancestors[i - 1] || node;\n            const treeElement = this.treeElementByNode.get(ancestors[i]);\n            if (treeElement) {\n                void treeElement.onpopulate(); // fill the cache with the children of treeElement\n                if (child.index && child.index >= treeElement.expandedChildrenLimit()) {\n                    this.setExpandedChildrenLimit(treeElement, child.index + 1);\n                }\n            }\n        }\n        return this.treeElementByNode.get(node) || null;\n    }\n    createTreeElementFor(node) {\n        let treeElement = this.findTreeElement(node);\n        if (treeElement) {\n            return treeElement;\n        }\n        if (!node.parentNode) {\n            return null;\n        }\n        treeElement = this.createTreeElementFor(node.parentNode);\n        return treeElement ? this.showChild(treeElement, node) : null;\n    }\n    revealAndSelectNode(node, omitFocus) {\n        if (this.suppressRevealAndSelect) {\n            return;\n        }\n        if (!this.includeRootDOMNode && node === this.rootDOMNode && this.rootDOMNode) {\n            node = this.rootDOMNode.firstChild;\n        }\n        if (!node) {\n            return;\n        }\n        const treeElement = this.createTreeElementFor(node);\n        if (!treeElement) {\n            return;\n        }\n        treeElement.revealAndSelect(omitFocus);\n    }\n    treeElementFromEventInternal(event) {\n        const scrollContainer = this.element.parentElement;\n        if (!scrollContainer) {\n            return null;\n        }\n        const x = event.pageX;\n        const y = event.pageY;\n        // Our list items have 1-pixel cracks between them vertically. We avoid\n        // the cracks by checking slightly above and slightly below the mouse\n        // and seeing if we hit the same element each time.\n        const elementUnderMouse = this.treeElementFromPoint(x, y);\n        const elementAboveMouse = this.treeElementFromPoint(x, y - 2);\n        let element;\n        if (elementUnderMouse === elementAboveMouse) {\n            element = elementUnderMouse;\n        }\n        else {\n            element = this.treeElementFromPoint(x, y + 2);\n        }\n        return element;\n    }\n    onfocusout(_event) {\n        SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n    onmousedown(event) {\n        const element = this.treeElementFromEventInternal(event);\n        if (element) {\n            element.select();\n        }\n    }\n    setHoverEffect(treeElement) {\n        if (this.previousHoveredElement === treeElement) {\n            return;\n        }\n        if (this.previousHoveredElement instanceof ElementsTreeElement) {\n            this.previousHoveredElement.hovered = false;\n            delete this.previousHoveredElement;\n        }\n        if (treeElement instanceof ElementsTreeElement) {\n            treeElement.hovered = true;\n            this.previousHoveredElement = treeElement;\n        }\n    }\n    onmousemove(event) {\n        const element = this.treeElementFromEventInternal(event);\n        if (element && this.previousHoveredElement === element) {\n            return;\n        }\n        this.setHoverEffect(element);\n        this.highlightTreeElement(element, !UI.KeyboardShortcut.KeyboardShortcut.eventHasEitherCtrlOrMeta(event));\n    }\n    highlightTreeElement(element, showInfo) {\n        if (element instanceof ElementsTreeElement) {\n            element.node().domModel().overlayModel().highlightInOverlay({ node: element.node(), selectorList: undefined }, 'all', showInfo);\n            return;\n        }\n        if (element instanceof ShortcutTreeElement) {\n            element.domModel().overlayModel().highlightInOverlay({ deferredNode: element.deferredNode(), selectorList: undefined }, 'all', showInfo);\n        }\n    }\n    onmouseleave(_event) {\n        this.setHoverEffect(null);\n        SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n    ondragstart(event) {\n        const node = event.target;\n        if (!node || node.hasSelection()) {\n            return false;\n        }\n        if (node.nodeName === 'A') {\n            return false;\n        }\n        const treeElement = this.validDragSourceOrTarget(this.treeElementFromEventInternal(event));\n        if (!treeElement) {\n            return false;\n        }\n        if (treeElement.node().nodeName() === 'BODY' || treeElement.node().nodeName() === 'HEAD') {\n            return false;\n        }\n        if (!event.dataTransfer || !treeElement.listItemElement.textContent) {\n            return;\n        }\n        event.dataTransfer.setData('text/plain', treeElement.listItemElement.textContent.replace(/\\u200b/g, ''));\n        event.dataTransfer.effectAllowed = 'copyMove';\n        this.treeElementBeingDragged = treeElement;\n        SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n        return true;\n    }\n    ondragover(event) {\n        if (!this.treeElementBeingDragged) {\n            return false;\n        }\n        const treeElement = this.validDragSourceOrTarget(this.treeElementFromEventInternal(event));\n        if (!treeElement) {\n            return false;\n        }\n        let node = treeElement.node();\n        while (node) {\n            if (node === this.treeElementBeingDragged.nodeInternal) {\n                return false;\n            }\n            node = node.parentNode;\n        }\n        treeElement.listItemElement.classList.add('elements-drag-over');\n        this.dragOverTreeElement = treeElement;\n        event.preventDefault();\n        if (event.dataTransfer) {\n            event.dataTransfer.dropEffect = 'move';\n        }\n        return false;\n    }\n    ondragleave(event) {\n        this.clearDragOverTreeElementMarker();\n        event.preventDefault();\n        return false;\n    }\n    validDragSourceOrTarget(treeElement) {\n        if (!treeElement) {\n            return null;\n        }\n        if (!(treeElement instanceof ElementsTreeElement)) {\n            return null;\n        }\n        const elementsTreeElement = treeElement;\n        const node = elementsTreeElement.node();\n        if (!node.parentNode || node.parentNode.nodeType() !== Node.ELEMENT_NODE) {\n            return null;\n        }\n        return elementsTreeElement;\n    }\n    ondrop(event) {\n        event.preventDefault();\n        const treeElement = this.treeElementFromEventInternal(event);\n        if (treeElement instanceof ElementsTreeElement) {\n            this.doMove(treeElement);\n        }\n    }\n    doMove(treeElement) {\n        if (!this.treeElementBeingDragged) {\n            return;\n        }\n        let parentNode;\n        let anchorNode;\n        if (treeElement.isClosingTag()) {\n            // Drop onto closing tag -> insert as last child.\n            parentNode = treeElement.node();\n            anchorNode = null;\n        }\n        else {\n            const dragTargetNode = treeElement.node();\n            parentNode = dragTargetNode.parentNode;\n            anchorNode = dragTargetNode;\n        }\n        if (!parentNode) {\n            return;\n        }\n        const wasExpanded = this.treeElementBeingDragged.expanded;\n        this.treeElementBeingDragged.nodeInternal.moveTo(parentNode, anchorNode, this.selectNodeAfterEdit.bind(this, wasExpanded));\n        delete this.treeElementBeingDragged;\n    }\n    ondragend(event) {\n        event.preventDefault();\n        this.clearDragOverTreeElementMarker();\n        delete this.treeElementBeingDragged;\n    }\n    clearDragOverTreeElementMarker() {\n        if (this.dragOverTreeElement) {\n            this.dragOverTreeElement.listItemElement.classList.remove('elements-drag-over');\n            delete this.dragOverTreeElement;\n        }\n    }\n    contextMenuEventFired(event) {\n        const treeElement = this.treeElementFromEventInternal(event);\n        if (treeElement instanceof ElementsTreeElement) {\n            this.showContextMenu(treeElement, event);\n        }\n    }\n    showContextMenu(treeElement, event) {\n        if (UI.UIUtils.isEditing()) {\n            return;\n        }\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        const isPseudoElement = Boolean(treeElement.node().pseudoType());\n        const isTag = treeElement.node().nodeType() === Node.ELEMENT_NODE && !isPseudoElement;\n        const node = event.target;\n        if (!node) {\n            return;\n        }\n        let textNode = node.enclosingNodeOrSelfWithClass('webkit-html-text-node');\n        if (textNode && textNode.classList.contains('bogus')) {\n            textNode = null;\n        }\n        const commentNode = node.enclosingNodeOrSelfWithClass('webkit-html-comment');\n        contextMenu.saveSection().appendItem(i18nString(UIStrings.storeAsGlobalVariable), this.saveNodeToTempVariable.bind(this, treeElement.node()), { jslogContext: 'store-as-global-variable' });\n        if (textNode) {\n            treeElement.populateTextContextMenu(contextMenu, textNode);\n        }\n        else if (isTag) {\n            treeElement.populateTagContextMenu(contextMenu, event);\n        }\n        else if (commentNode) {\n            treeElement.populateNodeContextMenu(contextMenu);\n        }\n        else if (isPseudoElement) {\n            treeElement.populatePseudoElementContextMenu(contextMenu);\n        }\n        contextMenu.viewSection().appendItem(i18nString(UIStrings.adornerSettings), () => {\n            ElementsPanel.instance().showAdornerSettingsPane();\n        }, { jslogContext: 'show-adorner-settings' });\n        contextMenu.appendApplicableItems(treeElement.node());\n        void contextMenu.show();\n    }\n    async saveNodeToTempVariable(node) {\n        const remoteObjectForConsole = await node.resolveToObject();\n        const consoleModel = remoteObjectForConsole?.runtimeModel().target()?.model(SDK.ConsoleModel.ConsoleModel);\n        await consoleModel?.saveToTempVariable(UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext), remoteObjectForConsole);\n    }\n    runPendingUpdates() {\n        this.updateModifiedNodes();\n    }\n    onKeyDown(event) {\n        const keyboardEvent = event;\n        if (UI.UIUtils.isEditing()) {\n            return;\n        }\n        const node = this.selectedDOMNode();\n        if (!node) {\n            return;\n        }\n        const treeElement = this.treeElementByNode.get(node);\n        if (!treeElement) {\n            return;\n        }\n        if (UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlEquivalentKey(keyboardEvent) && node.parentNode) {\n            if (keyboardEvent.key === 'ArrowUp' && node.previousSibling) {\n                node.moveTo(node.parentNode, node.previousSibling, this.selectNodeAfterEdit.bind(this, treeElement.expanded));\n                keyboardEvent.consume(true);\n                return;\n            }\n            if (keyboardEvent.key === 'ArrowDown' && node.nextSibling) {\n                node.moveTo(node.parentNode, node.nextSibling.nextSibling, this.selectNodeAfterEdit.bind(this, treeElement.expanded));\n                keyboardEvent.consume(true);\n                return;\n            }\n        }\n    }\n    toggleEditAsHTML(node, startEditing, callback) {\n        const treeElement = this.treeElementByNode.get(node);\n        if (!treeElement || !treeElement.hasEditableNode()) {\n            return;\n        }\n        if (node.pseudoType()) {\n            return;\n        }\n        const parentNode = node.parentNode;\n        const index = node.index;\n        const wasExpanded = treeElement.expanded;\n        treeElement.toggleEditAsHTML(editingFinished.bind(this), startEditing);\n        function editingFinished(success) {\n            if (callback) {\n                callback();\n            }\n            if (!success) {\n                return;\n            }\n            // Select it and expand if necessary. We force tree update so that it processes dom events and is up to date.\n            this.runPendingUpdates();\n            if (!index) {\n                return;\n            }\n            const children = parentNode && parentNode.children();\n            const newNode = children ? children[index] || parentNode : parentNode;\n            if (!newNode) {\n                return;\n            }\n            this.selectDOMNode(newNode, true);\n            if (wasExpanded) {\n                const newTreeItem = this.findTreeElement(newNode);\n                if (newTreeItem) {\n                    newTreeItem.expand();\n                }\n            }\n        }\n    }\n    selectNodeAfterEdit(wasExpanded, error, newNode) {\n        if (error) {\n            return null;\n        }\n        // Select it and expand if necessary. We force tree update so that it processes dom events and is up to date.\n        this.runPendingUpdates();\n        if (!newNode) {\n            return null;\n        }\n        this.selectDOMNode(newNode, true);\n        const newTreeItem = this.findTreeElement(newNode);\n        if (wasExpanded) {\n            if (newTreeItem) {\n                newTreeItem.expand();\n            }\n        }\n        return newTreeItem;\n    }\n    /**\n     * Runs a script on the node's remote object that toggles a class name on\n     * the node and injects a stylesheet into the head of the node's document\n     * containing a rule to set \"visibility: hidden\" on the class and all it's\n     * ancestors.\n     */\n    async toggleHideElement(node) {\n        const pseudoType = node.pseudoType();\n        const effectiveNode = pseudoType ? node.parentNode : node;\n        if (!effectiveNode) {\n            return;\n        }\n        const hidden = node.marker('hidden-marker');\n        const object = await effectiveNode.resolveToObject('');\n        if (!object) {\n            return;\n        }\n        await object.callFunction(toggleClassAndInjectStyleRule, [{ value: pseudoType }, { value: !hidden }]);\n        object.release();\n        node.setMarker('hidden-marker', hidden ? null : true);\n        function toggleClassAndInjectStyleRule(pseudoType, hidden) {\n            const classNamePrefix = '__web-inspector-hide';\n            const classNameSuffix = '-shortcut__';\n            const styleTagId = '__web-inspector-hide-shortcut-style__';\n            const selectors = [];\n            selectors.push('.__web-inspector-hide-shortcut__');\n            selectors.push('.__web-inspector-hide-shortcut__ *');\n            selectors.push('.__web-inspector-hidebefore-shortcut__::before');\n            selectors.push('.__web-inspector-hideafter-shortcut__::after');\n            const selector = selectors.join(', ');\n            const ruleBody = '    visibility: hidden !important;';\n            const rule = '\\n' + selector + '\\n{\\n' + ruleBody + '\\n}\\n';\n            const className = classNamePrefix + (pseudoType || '') + classNameSuffix;\n            this.classList.toggle(className, hidden);\n            let localRoot = this;\n            while (localRoot.parentNode) {\n                localRoot = localRoot.parentNode;\n            }\n            if (localRoot.nodeType === Node.DOCUMENT_NODE) {\n                localRoot = document.head;\n            }\n            let style = localRoot.querySelector('style#' + styleTagId);\n            if (style) {\n                return;\n            }\n            style = document.createElement('style');\n            style.id = styleTagId;\n            style.textContent = rule;\n            localRoot.appendChild(style);\n        }\n    }\n    isToggledToHidden(node) {\n        return Boolean(node.marker('hidden-marker'));\n    }\n    reset() {\n        this.rootDOMNode = null;\n        this.selectDOMNode(null, false);\n        this.imagePreviewPopover.hide();\n        delete this.clipboardNodeData;\n        SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n        this.updateRecords.clear();\n    }\n    wireToDOMModel(domModel) {\n        elementsTreeOutlineByDOMModel.set(domModel, this);\n        domModel.addEventListener(SDK.DOMModel.Events.MarkersChanged, this.markersChanged, this);\n        domModel.addEventListener(SDK.DOMModel.Events.NodeInserted, this.nodeInserted, this);\n        domModel.addEventListener(SDK.DOMModel.Events.NodeRemoved, this.nodeRemoved, this);\n        domModel.addEventListener(SDK.DOMModel.Events.AttrModified, this.attributeModified, this);\n        domModel.addEventListener(SDK.DOMModel.Events.AttrRemoved, this.attributeRemoved, this);\n        domModel.addEventListener(SDK.DOMModel.Events.CharacterDataModified, this.characterDataModified, this);\n        domModel.addEventListener(SDK.DOMModel.Events.DocumentUpdated, this.documentUpdated, this);\n        domModel.addEventListener(SDK.DOMModel.Events.ChildNodeCountUpdated, this.childNodeCountUpdated, this);\n        domModel.addEventListener(SDK.DOMModel.Events.DistributedNodesChanged, this.distributedNodesChanged, this);\n        domModel.addEventListener(SDK.DOMModel.Events.TopLayerElementsChanged, this.topLayerElementsChanged, this);\n        domModel.addEventListener(SDK.DOMModel.Events.ScrollableFlagUpdated, this.scrollableFlagUpdated, this);\n    }\n    unwireFromDOMModel(domModel) {\n        domModel.removeEventListener(SDK.DOMModel.Events.MarkersChanged, this.markersChanged, this);\n        domModel.removeEventListener(SDK.DOMModel.Events.NodeInserted, this.nodeInserted, this);\n        domModel.removeEventListener(SDK.DOMModel.Events.NodeRemoved, this.nodeRemoved, this);\n        domModel.removeEventListener(SDK.DOMModel.Events.AttrModified, this.attributeModified, this);\n        domModel.removeEventListener(SDK.DOMModel.Events.AttrRemoved, this.attributeRemoved, this);\n        domModel.removeEventListener(SDK.DOMModel.Events.CharacterDataModified, this.characterDataModified, this);\n        domModel.removeEventListener(SDK.DOMModel.Events.DocumentUpdated, this.documentUpdated, this);\n        domModel.removeEventListener(SDK.DOMModel.Events.ChildNodeCountUpdated, this.childNodeCountUpdated, this);\n        domModel.removeEventListener(SDK.DOMModel.Events.DistributedNodesChanged, this.distributedNodesChanged, this);\n        domModel.removeEventListener(SDK.DOMModel.Events.TopLayerElementsChanged, this.topLayerElementsChanged, this);\n        domModel.removeEventListener(SDK.DOMModel.Events.ScrollableFlagUpdated, this.scrollableFlagUpdated, this);\n        elementsTreeOutlineByDOMModel.delete(domModel);\n    }\n    addUpdateRecord(node) {\n        let record = this.updateRecords.get(node);\n        if (!record) {\n            record = new UpdateRecord();\n            this.updateRecords.set(node, record);\n        }\n        return record;\n    }\n    updateRecordForHighlight(node) {\n        if (!this.visible) {\n            return null;\n        }\n        return this.updateRecords.get(node) || null;\n    }\n    documentUpdated(event) {\n        const domModel = event.data;\n        this.reset();\n        if (domModel.existingDocument()) {\n            this.rootDOMNode = domModel.existingDocument();\n            if (Root.Runtime.experiments.isEnabled(\"highlight-errors-elements-panel\" /* Root.Runtime.ExperimentName.HIGHLIGHT_ERRORS_ELEMENTS_PANEL */)) {\n                this.#addAllElementIssues();\n            }\n        }\n    }\n    attributeModified(event) {\n        const { node } = event.data;\n        this.addUpdateRecord(node).attributeModified(event.data.name);\n        this.updateModifiedNodesSoon();\n    }\n    attributeRemoved(event) {\n        const { node } = event.data;\n        this.addUpdateRecord(node).attributeRemoved(event.data.name);\n        this.updateModifiedNodesSoon();\n    }\n    characterDataModified(event) {\n        const node = event.data;\n        this.addUpdateRecord(node).charDataModified();\n        // Text could be large and force us to render itself as the child in the tree outline.\n        if (node.parentNode && node.parentNode.firstChild === node.parentNode.lastChild) {\n            this.addUpdateRecord(node.parentNode).childrenModified();\n        }\n        this.updateModifiedNodesSoon();\n    }\n    nodeInserted(event) {\n        const node = event.data;\n        this.addUpdateRecord(node.parentNode).nodeInserted(node);\n        this.updateModifiedNodesSoon();\n    }\n    nodeRemoved(event) {\n        const { node, parent } = event.data;\n        this.resetClipboardIfNeeded(node);\n        this.addUpdateRecord(parent).nodeRemoved(node);\n        this.updateModifiedNodesSoon();\n    }\n    childNodeCountUpdated(event) {\n        const node = event.data;\n        this.addUpdateRecord(node).childrenModified();\n        this.updateModifiedNodesSoon();\n    }\n    distributedNodesChanged(event) {\n        const node = event.data;\n        this.addUpdateRecord(node).childrenModified();\n        this.updateModifiedNodesSoon();\n    }\n    updateModifiedNodesSoon() {\n        if (!this.updateRecords.size) {\n            return;\n        }\n        if (this.updateModifiedNodesTimeout) {\n            return;\n        }\n        this.updateModifiedNodesTimeout = window.setTimeout(this.updateModifiedNodes.bind(this), 50);\n    }\n    updateModifiedNodes() {\n        if (this.updateModifiedNodesTimeout) {\n            clearTimeout(this.updateModifiedNodesTimeout);\n            delete this.updateModifiedNodesTimeout;\n        }\n        const updatedNodes = [...this.updateRecords.keys()];\n        const hidePanelWhileUpdating = updatedNodes.length > 10;\n        let treeOutlineContainerElement;\n        let originalScrollTop;\n        if (hidePanelWhileUpdating) {\n            treeOutlineContainerElement = this.element.parentNode;\n            originalScrollTop = treeOutlineContainerElement ? treeOutlineContainerElement.scrollTop : 0;\n            this.elementInternal.classList.add('hidden');\n        }\n        const rootNodeUpdateRecords = this.rootDOMNodeInternal && this.updateRecords.get(this.rootDOMNodeInternal);\n        if (rootNodeUpdateRecords && rootNodeUpdateRecords.hasChangedChildren()) {\n            // Document's children have changed, perform total update.\n            this.update();\n        }\n        else {\n            for (const [node, record] of this.updateRecords) {\n                if (record.hasChangedChildren()) {\n                    this.updateModifiedParentNode(node);\n                }\n                else {\n                    this.updateModifiedNode(node);\n                }\n            }\n        }\n        if (hidePanelWhileUpdating) {\n            this.elementInternal.classList.remove('hidden');\n            if (treeOutlineContainerElement && originalScrollTop) {\n                treeOutlineContainerElement.scrollTop = originalScrollTop;\n            }\n        }\n        this.updateRecords.clear();\n        this.fireElementsTreeUpdated(updatedNodes);\n    }\n    updateModifiedNode(node) {\n        const treeElement = this.findTreeElement(node);\n        if (treeElement) {\n            treeElement.updateTitle(this.updateRecordForHighlight(node));\n        }\n    }\n    updateModifiedParentNode(node) {\n        const parentTreeElement = this.findTreeElement(node);\n        if (parentTreeElement) {\n            parentTreeElement.setExpandable(this.hasVisibleChildren(node));\n            parentTreeElement.updateTitle(this.updateRecordForHighlight(node));\n            if (populatedTreeElements.has(parentTreeElement)) {\n                this.updateChildren(parentTreeElement);\n            }\n        }\n    }\n    populateTreeElement(treeElement) {\n        if (treeElement.childCount() || !treeElement.isExpandable()) {\n            return Promise.resolve();\n        }\n        return new Promise(resolve => {\n            treeElement.node().getChildNodes(() => {\n                populatedTreeElements.add(treeElement);\n                this.updateModifiedParentNode(treeElement.node());\n                resolve();\n            });\n        });\n    }\n    async createTopLayerContainer(parent, document) {\n        if (!parent.treeOutline || !(parent.treeOutline instanceof ElementsTreeOutline)) {\n            return;\n        }\n        const container = new TopLayerContainer(parent.treeOutline, document);\n        await container.throttledUpdateTopLayerElements();\n        if (container.currentTopLayerDOMNodes.size > 0) {\n            parent.appendChild(container);\n        }\n        this.#topLayerContainerByParent.set(parent, container);\n    }\n    createElementTreeElement(node, isClosingTag) {\n        const treeElement = new ElementsTreeElement(node, isClosingTag);\n        treeElement.setExpandable(!isClosingTag && this.hasVisibleChildren(node));\n        if (node.nodeType() === Node.ELEMENT_NODE && node.parentNode && node.parentNode.nodeType() === Node.DOCUMENT_NODE &&\n            !node.parentNode.parentNode) {\n            treeElement.setCollapsible(false);\n        }\n        if (node.hasAssignedSlot()) {\n            treeElement.createSlotLink(node.assignedSlot);\n        }\n        treeElement.selectable = Boolean(this.selectEnabled);\n        return treeElement;\n    }\n    showChild(treeElement, child) {\n        if (treeElement.isClosingTag()) {\n            return null;\n        }\n        const index = this.visibleChildren(treeElement.node()).indexOf(child);\n        if (index === -1) {\n            return null;\n        }\n        if (index >= treeElement.expandedChildrenLimit()) {\n            this.setExpandedChildrenLimit(treeElement, index + 1);\n        }\n        return treeElement.childAt(index);\n    }\n    visibleChildren(node) {\n        let visibleChildren = ElementsTreeElement.visibleShadowRoots(node);\n        const contentDocument = node.contentDocument();\n        if (contentDocument) {\n            visibleChildren.push(contentDocument);\n        }\n        const templateContent = node.templateContent();\n        if (templateContent) {\n            visibleChildren.push(templateContent);\n        }\n        visibleChildren.push(...node.viewTransitionPseudoElements());\n        const markerPseudoElement = node.markerPseudoElement();\n        if (markerPseudoElement) {\n            visibleChildren.push(markerPseudoElement);\n        }\n        const beforePseudoElement = node.beforePseudoElement();\n        if (beforePseudoElement) {\n            visibleChildren.push(beforePseudoElement);\n        }\n        if (node.childNodeCount()) {\n            // Children may be stale when the outline is not wired to receive DOMModel updates.\n            let children = node.children() || [];\n            if (!this.showHTMLCommentsSetting.get()) {\n                children = children.filter(n => n.nodeType() !== Node.COMMENT_NODE);\n            }\n            visibleChildren = visibleChildren.concat(children);\n        }\n        const afterPseudoElement = node.afterPseudoElement();\n        if (afterPseudoElement) {\n            visibleChildren.push(afterPseudoElement);\n        }\n        const backdropPseudoElement = node.backdropPseudoElement();\n        if (backdropPseudoElement) {\n            visibleChildren.push(backdropPseudoElement);\n        }\n        return visibleChildren;\n    }\n    hasVisibleChildren(node) {\n        if (node.isIframe()) {\n            return true;\n        }\n        if (node.contentDocument()) {\n            return true;\n        }\n        if (node.templateContent()) {\n            return true;\n        }\n        if (ElementsTreeElement.visibleShadowRoots(node).length) {\n            return true;\n        }\n        if (node.hasPseudoElements()) {\n            return true;\n        }\n        if (node.isInsertionPoint()) {\n            return true;\n        }\n        return Boolean(node.childNodeCount()) && !ElementsTreeElement.canShowInlineText(node);\n    }\n    createExpandAllButtonTreeElement(treeElement) {\n        const button = UI.UIUtils.createTextButton('', handleLoadAllChildren.bind(this));\n        button.value = '';\n        const expandAllButtonElement = new UI.TreeOutline.TreeElement(button);\n        expandAllButtonElement.selectable = false;\n        expandAllButtonElement.button = button;\n        return expandAllButtonElement;\n        function handleLoadAllChildren(event) {\n            const visibleChildCount = this.visibleChildren(treeElement.node()).length;\n            this.setExpandedChildrenLimit(treeElement, Math.max(visibleChildCount, treeElement.expandedChildrenLimit() + InitialChildrenLimit));\n            event.consume();\n        }\n    }\n    setExpandedChildrenLimit(treeElement, expandedChildrenLimit) {\n        if (treeElement.expandedChildrenLimit() === expandedChildrenLimit) {\n            return;\n        }\n        treeElement.setExpandedChildrenLimit(expandedChildrenLimit);\n        if (treeElement.treeOutline && !this.treeElementsBeingUpdated.has(treeElement)) {\n            this.updateModifiedParentNode(treeElement.node());\n        }\n    }\n    updateChildren(treeElement) {\n        if (!treeElement.isExpandable()) {\n            if (!treeElement.treeOutline) {\n                return;\n            }\n            const selectedTreeElement = treeElement.treeOutline.selectedTreeElement;\n            if (selectedTreeElement && selectedTreeElement.hasAncestor(treeElement)) {\n                treeElement.select(true);\n            }\n            treeElement.removeChildren();\n            return;\n        }\n        console.assert(!treeElement.isClosingTag());\n        this.innerUpdateChildren(treeElement);\n    }\n    insertChildElement(treeElement, child, index, isClosingTag) {\n        const newElement = this.createElementTreeElement(child, isClosingTag);\n        treeElement.insertChild(newElement, index);\n        if (child instanceof SDK.DOMModel.DOMDocument) {\n            void this.createTopLayerContainer(newElement, child);\n        }\n        return newElement;\n    }\n    moveChild(treeElement, child, targetIndex) {\n        if (treeElement.indexOfChild(child) === targetIndex) {\n            return;\n        }\n        const wasSelected = child.selected;\n        if (child.parent) {\n            child.parent.removeChild(child);\n        }\n        treeElement.insertChild(child, targetIndex);\n        if (wasSelected) {\n            child.select();\n        }\n    }\n    innerUpdateChildren(treeElement) {\n        if (this.treeElementsBeingUpdated.has(treeElement)) {\n            return;\n        }\n        this.treeElementsBeingUpdated.add(treeElement);\n        const node = treeElement.node();\n        const visibleChildren = this.visibleChildren(node);\n        const visibleChildrenSet = new Set(visibleChildren);\n        // Remove any tree elements that no longer have this node as their parent and save\n        // all existing elements that could be reused. This also removes closing tag element.\n        const existingTreeElements = new Map();\n        for (let i = treeElement.childCount() - 1; i >= 0; --i) {\n            const existingTreeElement = treeElement.childAt(i);\n            if (!(existingTreeElement instanceof ElementsTreeElement)) {\n                // Remove expand all button and shadow host toolbar.\n                treeElement.removeChildAtIndex(i);\n                continue;\n            }\n            const elementsTreeElement = existingTreeElement;\n            const existingNode = elementsTreeElement.node();\n            if (visibleChildrenSet.has(existingNode)) {\n                existingTreeElements.set(existingNode, existingTreeElement);\n                continue;\n            }\n            treeElement.removeChildAtIndex(i);\n        }\n        for (let i = 0; i < visibleChildren.length && i < treeElement.expandedChildrenLimit(); ++i) {\n            const child = visibleChildren[i];\n            const existingTreeElement = existingTreeElements.get(child) || this.findTreeElement(child);\n            if (existingTreeElement && existingTreeElement !== treeElement) {\n                // If an existing element was found, just move it.\n                this.moveChild(treeElement, existingTreeElement, i);\n            }\n            else {\n                // No existing element found, insert a new element.\n                const newElement = this.insertChildElement(treeElement, child, i);\n                if (this.updateRecordForHighlight(node) && treeElement.expanded) {\n                    ElementsTreeElement.animateOnDOMUpdate(newElement);\n                }\n                // If a node was inserted in the middle of existing list dynamically we might need to increase the limit.\n                if (treeElement.childCount() > treeElement.expandedChildrenLimit()) {\n                    this.setExpandedChildrenLimit(treeElement, treeElement.expandedChildrenLimit() + 1);\n                }\n            }\n        }\n        // Update expand all button.\n        const expandedChildCount = treeElement.childCount();\n        if (visibleChildren.length > expandedChildCount) {\n            const targetButtonIndex = expandedChildCount;\n            if (!treeElement.expandAllButtonElement) {\n                treeElement.expandAllButtonElement = this.createExpandAllButtonTreeElement(treeElement);\n            }\n            treeElement.insertChild(treeElement.expandAllButtonElement, targetButtonIndex);\n            treeElement.expandAllButtonElement.title =\n                i18nString(UIStrings.showAllNodesDMore, { PH1: visibleChildren.length - expandedChildCount });\n        }\n        else if (treeElement.expandAllButtonElement) {\n            treeElement.expandAllButtonElement = null;\n        }\n        // Insert shortcuts to distributed children.\n        if (node.isInsertionPoint()) {\n            for (const distributedNode of node.distributedNodes()) {\n                treeElement.appendChild(new ShortcutTreeElement(distributedNode));\n            }\n        }\n        // Insert close tag.\n        if (node.nodeType() === Node.ELEMENT_NODE && !node.pseudoType() && treeElement.isExpandable()) {\n            this.insertChildElement(treeElement, node, treeElement.childCount(), true);\n        }\n        this.treeElementsBeingUpdated.delete(treeElement);\n    }\n    markersChanged(event) {\n        const node = event.data;\n        const treeElement = this.treeElementByNode.get(node);\n        if (treeElement) {\n            treeElement.updateDecorations();\n        }\n    }\n    async topLayerElementsChanged() {\n        for (const [parent, container] of this.#topLayerContainerByParent) {\n            await container.throttledUpdateTopLayerElements();\n            if (container.currentTopLayerDOMNodes.size > 0 && container.parent !== parent) {\n                parent.appendChild(container);\n            }\n            container.hidden = container.currentTopLayerDOMNodes.size === 0;\n        }\n    }\n    scrollableFlagUpdated(event) {\n        let { node } = event.data;\n        if (node.nodeName() === '#document') {\n            // We show the scroll badge of the document on the <html> element.\n            if (!node.ownerDocument?.documentElement) {\n                return;\n            }\n            node = node.ownerDocument.documentElement;\n        }\n        const treeElement = this.treeElementByNode.get(node);\n        if (treeElement && isOpeningTag(treeElement.tagTypeContext)) {\n            void treeElement.tagTypeContext.adornersThrottler.schedule(async () => treeElement.updateScrollAdorner());\n        }\n    }\n    static treeOutlineSymbol = Symbol('treeOutline');\n}\n(function (ElementsTreeOutline) {\n    let Events;\n    (function (Events) {\n        /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n        Events[\"SelectedNodeChanged\"] = \"SelectedNodeChanged\";\n        Events[\"ElementsTreeUpdated\"] = \"ElementsTreeUpdated\";\n        /* eslint-enable @typescript-eslint/naming-convention */\n    })(Events = ElementsTreeOutline.Events || (ElementsTreeOutline.Events = {}));\n})(ElementsTreeOutline || (ElementsTreeOutline = {}));\n// clang-format off\nexport const MappedCharToEntity = new Map([\n    ['\\xA0', 'nbsp'],\n    ['\\xAD', 'shy'],\n    ['\\u2002', 'ensp'],\n    ['\\u2003', 'emsp'],\n    ['\\u2009', 'thinsp'],\n    ['\\u200A', 'hairsp'],\n    ['\\u200B', 'ZeroWidthSpace'],\n    ['\\u200C', 'zwnj'],\n    ['\\u200D', 'zwj'],\n    ['\\u200E', 'lrm'],\n    ['\\u200F', 'rlm'],\n    ['\\u202A', '#x202A'],\n    ['\\u202B', '#x202B'],\n    ['\\u202C', '#x202C'],\n    ['\\u202D', '#x202D'],\n    ['\\u202E', '#x202E'],\n    ['\\u2060', 'NoBreak'],\n    ['\\uFEFF', '#xFEFF'],\n]);\n// clang-format on\nexport class UpdateRecord {\n    modifiedAttributes;\n    removedAttributes;\n    hasChangedChildrenInternal;\n    hasRemovedChildrenInternal;\n    charDataModifiedInternal;\n    attributeModified(attrName) {\n        if (this.removedAttributes && this.removedAttributes.has(attrName)) {\n            this.removedAttributes.delete(attrName);\n        }\n        if (!this.modifiedAttributes) {\n            this.modifiedAttributes = new Set();\n        }\n        this.modifiedAttributes.add(attrName);\n    }\n    attributeRemoved(attrName) {\n        if (this.modifiedAttributes && this.modifiedAttributes.has(attrName)) {\n            this.modifiedAttributes.delete(attrName);\n        }\n        if (!this.removedAttributes) {\n            this.removedAttributes = new Set();\n        }\n        this.removedAttributes.add(attrName);\n    }\n    nodeInserted(_node) {\n        this.hasChangedChildrenInternal = true;\n    }\n    nodeRemoved(_node) {\n        this.hasChangedChildrenInternal = true;\n        this.hasRemovedChildrenInternal = true;\n    }\n    charDataModified() {\n        this.charDataModifiedInternal = true;\n    }\n    childrenModified() {\n        this.hasChangedChildrenInternal = true;\n    }\n    isAttributeModified(attributeName) {\n        return this.modifiedAttributes !== null && this.modifiedAttributes !== undefined &&\n            this.modifiedAttributes.has(attributeName);\n    }\n    hasRemovedAttributes() {\n        return this.removedAttributes !== null && this.removedAttributes !== undefined &&\n            Boolean(this.removedAttributes.size);\n    }\n    isCharDataModified() {\n        return Boolean(this.charDataModifiedInternal);\n    }\n    hasChangedChildren() {\n        return Boolean(this.hasChangedChildrenInternal);\n    }\n    hasRemovedChildren() {\n        return Boolean(this.hasRemovedChildrenInternal);\n    }\n}\nlet rendererInstance;\nexport class Renderer {\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!rendererInstance || forceNew) {\n            rendererInstance = new Renderer();\n        }\n        return rendererInstance;\n    }\n    async render(object) {\n        let node = null;\n        if (object instanceof SDK.DOMModel.DOMNode) {\n            node = object;\n        }\n        else if (object instanceof SDK.DOMModel.DeferredDOMNode) {\n            node = await object.resolvePromise();\n        }\n        if (!node) {\n            // Can't render not-a-node, or couldn't resolve deferred node.\n            return null;\n        }\n        const treeOutline = new ElementsTreeOutline(\n        /* omitRootDOMNode: */ false, /* selectEnabled: */ true, /* hideGutter: */ true);\n        treeOutline.rootDOMNode = node;\n        const firstChild = treeOutline.firstChild();\n        if (firstChild && !firstChild.isExpandable()) {\n            treeOutline.element.classList.add('single-node');\n        }\n        treeOutline.setVisible(true);\n        // @ts-ignore used in console_test_runner\n        treeOutline.element.treeElementForTest = firstChild;\n        treeOutline.setShowSelectionOnKeyboardFocus(/* show: */ true, /* preventTabOrder: */ true);\n        return { node: treeOutline.element, tree: treeOutline };\n    }\n}\nexport class ShortcutTreeElement extends UI.TreeOutline.TreeElement {\n    nodeShortcut;\n    hoveredInternal;\n    constructor(nodeShortcut) {\n        super('');\n        this.listItemElement.createChild('div', 'selection fill');\n        const title = this.listItemElement.createChild('span', 'elements-tree-shortcut-title');\n        let text = nodeShortcut.nodeName.toLowerCase();\n        if (nodeShortcut.nodeType === Node.ELEMENT_NODE) {\n            text = '<' + text + '>';\n        }\n        title.textContent = '\\u21AA ' + text;\n        this.nodeShortcut = nodeShortcut;\n        this.addRevealAdorner();\n    }\n    addRevealAdorner() {\n        const adorner = new Adorners.Adorner.Adorner();\n        adorner.classList.add('adorner-reveal');\n        const config = ElementsComponents.AdornerManager.getRegisteredAdorner(ElementsComponents.AdornerManager.RegisteredAdorners.REVEAL);\n        const name = config.name;\n        const adornerContent = document.createElement('span');\n        const linkIcon = new IconButton.Icon.Icon();\n        linkIcon.name = 'select-element';\n        const slotText = document.createElement('span');\n        slotText.textContent = name;\n        adornerContent.append(linkIcon);\n        adornerContent.append(slotText);\n        adornerContent.classList.add('adorner-with-icon');\n        adorner.data = {\n            name,\n            content: adornerContent,\n            jslogContext: 'reveal',\n        };\n        this.listItemElement.appendChild(adorner);\n        const onClick = (() => {\n            this.nodeShortcut.deferredNode.resolve(node => {\n                void Common.Revealer.reveal(node);\n            });\n        });\n        adorner.addInteraction(onClick, {\n            isToggle: false,\n            shouldPropagateOnKeydown: false,\n            ariaLabelDefault: i18nString(UIStrings.reveal),\n            ariaLabelActive: i18nString(UIStrings.reveal),\n        });\n        adorner.addEventListener('mousedown', e => e.consume(), false);\n        ElementsPanel.instance().registerAdorner(adorner);\n    }\n    get hovered() {\n        return Boolean(this.hoveredInternal);\n    }\n    set hovered(x) {\n        if (this.hoveredInternal === x) {\n            return;\n        }\n        this.hoveredInternal = x;\n        this.listItemElement.classList.toggle('hovered', x);\n    }\n    deferredNode() {\n        return this.nodeShortcut.deferredNode;\n    }\n    domModel() {\n        return this.nodeShortcut.deferredNode.domModel();\n    }\n    setLeftIndentOverlay() {\n        // We use parent's `--indent` value and add 24px to account for an extra level of indent.\n        let indent = 24;\n        if (this.parent && this.parent instanceof ElementsTreeElement) {\n            const parentIndent = parseFloat(this.parent.listItemElement.style.getPropertyValue('--indent')) || 0;\n            indent += parentIndent;\n        }\n        this.listItemElement.style.setProperty('--indent', indent + 'px');\n    }\n    onattach() {\n        this.setLeftIndentOverlay();\n    }\n    onselect(selectedByUser) {\n        if (!selectedByUser) {\n            return true;\n        }\n        this.nodeShortcut.deferredNode.highlight();\n        this.nodeShortcut.deferredNode.resolve(resolved.bind(this));\n        function resolved(node) {\n            if (node && this.treeOutline instanceof ElementsTreeOutline) {\n                this.treeOutline.selectedDOMNodeInternal = node;\n                this.treeOutline.selectedNodeChanged(false);\n            }\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=ElementsTreeOutline.js.map","// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport { PseudoStateMarkerDecorator } from './ElementsPanel.js';\nconst UIStrings = {\n    /**\n     *@description Title of the Marker Decorator of Elements\n     */\n    domBreakpoint: 'DOM Breakpoint',\n    /**\n     *@description Title of the Marker Decorator of Elements\n     */\n    elementIsHidden: 'Element is hidden',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/MarkerDecorator.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nexport class GenericDecorator {\n    title;\n    color;\n    constructor(extension) {\n        if (!extension.title || !extension.color) {\n            throw new Error(`Generic decorator requires a color and a title: ${extension.marker}`);\n        }\n        this.title = extension.title();\n        this.color = extension.color;\n    }\n    decorate(_node) {\n        return { title: this.title, color: this.color };\n    }\n}\nconst domBreakpointData = {\n    marker: 'breakpoint-marker',\n    title: i18nLazyString(UIStrings.domBreakpoint),\n    color: 'var(--sys-color-primary-bright)',\n};\nconst elementIsHiddenData = {\n    marker: 'hidden-marker',\n    title: i18nLazyString(UIStrings.elementIsHidden),\n    color: 'var(--sys-color-neutral-bright)',\n};\nexport function getRegisteredDecorators() {\n    return [\n        {\n            ...domBreakpointData,\n            decorator: () => new GenericDecorator(domBreakpointData),\n        },\n        {\n            ...elementIsHiddenData,\n            decorator: () => new GenericDecorator(elementIsHiddenData),\n        },\n        {\n            decorator: PseudoStateMarkerDecorator.instance,\n            marker: 'pseudo-state-marker',\n            title: undefined,\n            color: undefined,\n        },\n    ];\n}\n//# sourceMappingURL=MarkerDecorator.js.map","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\nimport * as Adorners from '../../ui/components/adorners/adorners.js';\nimport * as CodeHighlighter from '../../ui/components/code_highlighter/code_highlighter.js';\nimport * as FloatingButton from '../../ui/components/floating_button/floating_button.js';\nimport * as Highlighting from '../../ui/components/highlighting/highlighting.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as TextEditor from '../../ui/components/text_editor/text_editor.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as Emulation from '../emulation/emulation.js';\nimport * as ElementsComponents from './components/components.js';\nimport { canGetJSPath, cssPath, jsPath, xPath } from './DOMPath.js';\nimport { ElementsPanel } from './ElementsPanel.js';\nimport { MappedCharToEntity } from './ElementsTreeOutline.js';\nimport { ImagePreviewPopover } from './ImagePreviewPopover.js';\nimport { getRegisteredDecorators } from './MarkerDecorator.js';\nconst UIStrings = {\n    /**\n     *@description Title for Ad adorner. This iframe is marked as advertisement frame.\n     */\n    thisFrameWasIdentifiedAsAnAd: 'This frame was identified as an ad frame',\n    /**\n     *@description A context menu item in the Elements panel. Force is used as a verb, indicating intention to make the state change.\n     */\n    forceState: 'Force state',\n    /**\n     *@description Hint element title in Elements Tree Element of the Elements panel\n     *@example {0} PH1\n     */\n    useSInTheConsoleToReferToThis: 'Use {PH1} in the console to refer to this element.',\n    /**\n     *@description A context menu item in the Elements Tree Element of the Elements panel\n     */\n    addAttribute: 'Add attribute',\n    /**\n     *@description Text to modify the attribute of an item\n     */\n    editAttribute: 'Edit attribute',\n    /**\n     *@description Text to focus on something\n     */\n    focus: 'Focus',\n    /**\n     *@description Text to scroll the displayed content into view\n     */\n    scrollIntoView: 'Scroll into view',\n    /**\n     *@description A context menu item in the Elements Tree Element of the Elements panel\n     */\n    editText: 'Edit text',\n    /**\n     *@description A context menu item in the Elements Tree Element of the Elements panel\n     */\n    editAsHtml: 'Edit as HTML',\n    /**\n     *@description Text to cut an element, cut should be used as a verb\n     */\n    cut: 'Cut',\n    /**\n     *@description Text for copying, copy should be used as a verb\n     */\n    copy: 'Copy',\n    /**\n     *@description Text to paste an element, paste should be used as a verb\n     */\n    paste: 'Paste',\n    /**\n     *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n     */\n    copyOuterhtml: 'Copy outerHTML',\n    /**\n     *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n     */\n    copySelector: 'Copy `selector`',\n    /**\n     *@description Text in Elements Tree Element of the Elements panel\n     */\n    copyJsPath: 'Copy JS path',\n    /**\n     *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n     */\n    copyStyles: 'Copy styles',\n    /**\n     *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n     */\n    copyXpath: 'Copy XPath',\n    /**\n     *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n     */\n    copyFullXpath: 'Copy full XPath',\n    /**\n     *@description Text in Elements Tree Element of the Elements panel, copy should be used as a verb\n     */\n    copyElement: 'Copy element',\n    /**\n     *@description A context menu item in the Elements Tree Element of the Elements panel\n     */\n    duplicateElement: 'Duplicate element',\n    /**\n     *@description Text to hide an element\n     */\n    hideElement: 'Hide element',\n    /**\n     *@description A context menu item in the Elements Tree Element of the Elements panel\n     */\n    deleteElement: 'Delete element',\n    /**\n     *@description Text to expand something recursively\n     */\n    expandRecursively: 'Expand recursively',\n    /**\n     *@description Text to collapse children of a parent group\n     */\n    collapseChildren: 'Collapse children',\n    /**\n     *@description Title of an action in the emulation tool to capture node screenshot\n     */\n    captureNodeScreenshot: 'Capture node screenshot',\n    /**\n     *@description Title of a context menu item. When clicked DevTools goes to the Application panel and shows this specific iframe's details\n     */\n    showFrameDetails: 'Show `iframe` details',\n    /**\n     *@description Text in Elements Tree Element of the Elements panel\n     */\n    valueIsTooLargeToEdit: '<value is too large to edit>',\n    /**\n     *@description Element text content in Elements Tree Element of the Elements panel\n     */\n    children: 'Children:',\n    /**\n     *@description ARIA label for Elements Tree adorners\n     */\n    enableGridMode: 'Enable grid mode',\n    /**\n     *@description ARIA label for Elements Tree adorners\n     */\n    disableGridMode: 'Disable grid mode',\n    /**\n     *@description Label of the adorner for flex elements in the Elements panel\n     */\n    enableFlexMode: 'Enable flex mode',\n    /**\n     *@description Label of the adorner for flex elements in the Elements panel\n     */\n    disableFlexMode: 'Disable flex mode',\n    /**\n     *@description Label of an adorner in the Elements panel. When clicked, it enables\n     * the overlay showing CSS scroll snapping for the current element.\n     */\n    enableScrollSnap: 'Enable scroll-snap overlay',\n    /**\n     *@description Label of an adorner in the Elements panel. When clicked, it disables\n     * the overlay showing CSS scroll snapping for the current element.\n     */\n    disableScrollSnap: 'Disable scroll-snap overlay',\n    /**\n     *@description Label of an adorner in the Elements panel. When clicked, it redirects\n     * to the Media Panel.\n     */\n    openMediaPanel: 'Jump to Media panel',\n    /**\n     *@description Text of a tooltip to redirect to another element in the Elements panel\n     */\n    showPopoverTarget: 'Show popover target',\n    /**\n     *@description Text of the tooltip for scroll adorner.\n     */\n    elementHasScrollableOverflow: 'This element has a scrollable overflow',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementsTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport function isOpeningTag(context) {\n    return context.tagType === \"OPENING_TAG\" /* TagType.OPENING */;\n}\nexport class ElementsTreeElement extends UI.TreeOutline.TreeElement {\n    nodeInternal;\n    treeOutline;\n    gutterContainer;\n    decorationsElement;\n    searchQuery;\n    expandedChildrenLimitInternal;\n    decorationsThrottler;\n    inClipboard;\n    hoveredInternal;\n    editing;\n    htmlEditElement;\n    expandAllButtonElement;\n    selectionElement;\n    hintElement;\n    aiButtonContainer;\n    contentElement;\n    #elementIssues = new Map();\n    #nodeElementToIssue = new Map();\n    #highlights = [];\n    tagTypeContext;\n    constructor(node, isClosingTag) {\n        // The title will be updated in onattach.\n        super();\n        this.nodeInternal = node;\n        this.treeOutline = null;\n        this.listItemElement.setAttribute('jslog', `${VisualLogging.treeItem().parent('elementsTreeOutline').track({\n            keydown: 'ArrowUp|ArrowDown|ArrowLeft|ArrowRight|Backspace|Delete|Enter|Space|Home|End',\n            drag: true,\n            click: true,\n        })}`);\n        this.contentElement = this.listItemElement.createChild('div');\n        this.gutterContainer = this.contentElement.createChild('div', 'gutter-container');\n        this.gutterContainer.addEventListener('click', this.showContextMenu.bind(this));\n        const gutterMenuIcon = new IconButton.Icon.Icon();\n        gutterMenuIcon.data = {\n            color: 'var(--icon-default)',\n            iconName: 'dots-horizontal',\n            height: '16px',\n            width: '16px',\n        };\n        this.gutterContainer.append(gutterMenuIcon);\n        this.decorationsElement = this.gutterContainer.createChild('div', 'hidden');\n        this.searchQuery = null;\n        this.expandedChildrenLimitInternal = InitialChildrenLimit;\n        this.decorationsThrottler = new Common.Throttler.Throttler(100);\n        this.inClipboard = false;\n        this.hoveredInternal = false;\n        this.editing = null;\n        if (isClosingTag) {\n            this.tagTypeContext = { tagType: \"CLOSING_TAG\" /* TagType.CLOSING */ };\n        }\n        else {\n            this.tagTypeContext = {\n                tagType: \"OPENING_TAG\" /* TagType.OPENING */,\n                adornerContainer: this.contentElement.createChild('div', 'adorner-container hidden'),\n                adorners: [],\n                styleAdorners: [],\n                adornersThrottler: new Common.Throttler.Throttler(100),\n                canAddAttributes: this.nodeInternal.nodeType() === Node.ELEMENT_NODE,\n            };\n            void this.updateStyleAdorners();\n            if (node.isAdFrameNode()) {\n                const config = ElementsComponents.AdornerManager.getRegisteredAdorner(ElementsComponents.AdornerManager.RegisteredAdorners.AD);\n                const adorner = this.adorn(config);\n                UI.Tooltip.Tooltip.install(adorner, i18nString(UIStrings.thisFrameWasIdentifiedAsAnAd));\n            }\n            void this.updateScrollAdorner();\n        }\n        this.expandAllButtonElement = null;\n    }\n    static animateOnDOMUpdate(treeElement) {\n        const tagName = treeElement.listItemElement.querySelector('.webkit-html-tag-name');\n        UI.UIUtils.runCSSAnimationOnce(tagName || treeElement.listItemElement, 'dom-update-highlight');\n    }\n    static visibleShadowRoots(node) {\n        let roots = node.shadowRoots();\n        if (roots.length && !Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom').get()) {\n            roots = roots.filter(filter);\n        }\n        function filter(root) {\n            return root.shadowRootType() !== SDK.DOMModel.DOMNode.ShadowRootTypes.UserAgent;\n        }\n        return roots;\n    }\n    static canShowInlineText(node) {\n        if (node.contentDocument() || node.templateContent() || ElementsTreeElement.visibleShadowRoots(node).length ||\n            node.hasPseudoElements()) {\n            return false;\n        }\n        if (node.nodeType() !== Node.ELEMENT_NODE) {\n            return false;\n        }\n        if (!node.firstChild || node.firstChild !== node.lastChild || node.firstChild.nodeType() !== Node.TEXT_NODE) {\n            return false;\n        }\n        const textChild = node.firstChild;\n        const maxInlineTextChildLength = 80;\n        if (textChild.nodeValue().length < maxInlineTextChildLength) {\n            return true;\n        }\n        return false;\n    }\n    static populateForcedPseudoStateItems(contextMenu, node) {\n        const pseudoClasses = ['active', 'hover', 'focus', 'visited', 'focus-within', 'focus-visible'];\n        const forcedPseudoState = node.domModel().cssModel().pseudoState(node);\n        const stateMenu = contextMenu.debugSection().appendSubMenuItem(i18nString(UIStrings.forceState), false, 'force-state');\n        for (const pseudoClass of pseudoClasses) {\n            const pseudoClassForced = forcedPseudoState ? forcedPseudoState.indexOf(pseudoClass) >= 0 : false;\n            stateMenu.defaultSection().appendCheckboxItem(':' + pseudoClass, setPseudoStateCallback.bind(null, pseudoClass, !pseudoClassForced), { checked: pseudoClassForced, jslogContext: pseudoClass });\n        }\n        function setPseudoStateCallback(pseudoState, enabled) {\n            node.domModel().cssModel().forcePseudoState(node, pseudoState, enabled);\n        }\n    }\n    isClosingTag() {\n        return !isOpeningTag(this.tagTypeContext);\n    }\n    node() {\n        return this.nodeInternal;\n    }\n    isEditing() {\n        return Boolean(this.editing);\n    }\n    highlightSearchResults(searchQuery) {\n        this.searchQuery = searchQuery;\n        if (!this.editing) {\n            this.highlightSearchResultsInternal();\n        }\n    }\n    hideSearchHighlights() {\n        Highlighting.HighlightManager.HighlightManager.instance().removeHighlights(this.#highlights);\n        this.#highlights = [];\n    }\n    setInClipboard(inClipboard) {\n        if (this.inClipboard === inClipboard) {\n            return;\n        }\n        this.inClipboard = inClipboard;\n        this.listItemElement.classList.toggle('in-clipboard', inClipboard);\n    }\n    get hovered() {\n        return this.hoveredInternal;\n    }\n    set hovered(isHovered) {\n        if (this.hoveredInternal === isHovered) {\n            return;\n        }\n        if (isHovered && !this.aiButtonContainer) {\n            this.createAiButton();\n        }\n        else if (!isHovered && this.aiButtonContainer) {\n            this.aiButtonContainer.remove();\n            delete this.aiButtonContainer;\n        }\n        this.hoveredInternal = isHovered;\n        if (this.listItemElement) {\n            if (isHovered) {\n                this.createSelection();\n                this.listItemElement.classList.add('hovered');\n            }\n            else {\n                this.listItemElement.classList.remove('hovered');\n            }\n        }\n    }\n    addIssue(newIssue) {\n        if (this.#elementIssues.has(newIssue.primaryKey())) {\n            return;\n        }\n        this.#elementIssues.set(newIssue.primaryKey(), newIssue);\n        this.#applyIssueStyleAndTooltip(newIssue);\n    }\n    #applyIssueStyleAndTooltip(issue) {\n        const issueDetails = issue.details();\n        if (issueDetails.violatingNodeAttribute) {\n            this.#highlightViolatingAttr(issueDetails.violatingNodeAttribute, issue);\n        }\n        else {\n            this.#highlightTagAsViolating(issue);\n        }\n    }\n    get issuesByNodeElement() {\n        return this.#nodeElementToIssue;\n    }\n    #highlightViolatingAttr(name, issue) {\n        const tag = this.listItemElement.getElementsByClassName('webkit-html-tag')[0];\n        const attributes = tag.getElementsByClassName('webkit-html-attribute');\n        for (const attribute of attributes) {\n            if (attribute.getElementsByClassName('webkit-html-attribute-name')[0].textContent === name) {\n                const attributeElement = attribute.getElementsByClassName('webkit-html-attribute-name')[0];\n                attributeElement.classList.add('violating-element');\n                this.#nodeElementToIssue.set(attributeElement, issue);\n            }\n        }\n    }\n    #highlightTagAsViolating(issue) {\n        const tagElement = this.listItemElement.getElementsByClassName('webkit-html-tag-name')[0];\n        tagElement.classList.add('violating-element');\n        this.#nodeElementToIssue.set(tagElement, issue);\n    }\n    expandedChildrenLimit() {\n        return this.expandedChildrenLimitInternal;\n    }\n    setExpandedChildrenLimit(expandedChildrenLimit) {\n        this.expandedChildrenLimitInternal = expandedChildrenLimit;\n    }\n    createSlotLink(nodeShortcut) {\n        if (!isOpeningTag(this.tagTypeContext)) {\n            return;\n        }\n        if (nodeShortcut) {\n            const config = ElementsComponents.AdornerManager.getRegisteredAdorner(ElementsComponents.AdornerManager.RegisteredAdorners.SLOT);\n            this.tagTypeContext.slot = this.adornSlot(config, this.tagTypeContext);\n            const deferredNode = nodeShortcut.deferredNode;\n            this.tagTypeContext.slot.addEventListener('click', () => {\n                deferredNode.resolve(node => {\n                    void Common.Revealer.reveal(node);\n                });\n            });\n            this.tagTypeContext.slot.addEventListener('mousedown', e => e.consume(), false);\n        }\n    }\n    createSelection() {\n        const contentElement = this.contentElement;\n        if (!contentElement) {\n            return;\n        }\n        if (!this.selectionElement) {\n            this.selectionElement = document.createElement('div');\n            this.selectionElement.className = 'selection fill';\n            this.selectionElement.style.setProperty('margin-left', (-this.computeLeftIndent()) + 'px');\n            contentElement.prepend(this.selectionElement);\n        }\n    }\n    createHint() {\n        if (this.contentElement && !this.hintElement) {\n            this.hintElement = this.contentElement.createChild('span', 'selected-hint');\n            const selectedElementCommand = '$0';\n            UI.Tooltip.Tooltip.install(this.hintElement, i18nString(UIStrings.useSInTheConsoleToReferToThis, { PH1: selectedElementCommand }));\n            UI.ARIAUtils.markAsHidden(this.hintElement);\n        }\n    }\n    createAiButton() {\n        const isElementNode = this.node().nodeType() === Node.ELEMENT_NODE;\n        if (!isElementNode ||\n            !UI.ActionRegistry.ActionRegistry.instance().hasAction('freestyler.elements-floating-button')) {\n            return;\n        }\n        const action = UI.ActionRegistry.ActionRegistry.instance().getAction('freestyler.elements-floating-button');\n        if (this.contentElement && !this.aiButtonContainer) {\n            this.aiButtonContainer = this.contentElement.createChild('span', 'ai-button-container');\n            const floatingButton = new FloatingButton.FloatingButton.FloatingButton({\n                iconName: 'smart-assistant',\n            });\n            floatingButton.addEventListener('click', ev => {\n                ev.stopPropagation();\n                this.select(true, false);\n                void action.execute();\n            }, { capture: true });\n            floatingButton.addEventListener('mousedown', ev => {\n                ev.stopPropagation();\n            }, { capture: true });\n            this.aiButtonContainer.appendChild(floatingButton);\n        }\n    }\n    onbind() {\n        if (this.treeOutline && !this.isClosingTag()) {\n            this.treeOutline.treeElementByNode.set(this.nodeInternal, this);\n        }\n    }\n    onunbind() {\n        if (this.editing) {\n            this.editing.cancel();\n        }\n        if (this.treeOutline && this.treeOutline.treeElementByNode.get(this.nodeInternal) === this) {\n            this.treeOutline.treeElementByNode.delete(this.nodeInternal);\n        }\n    }\n    onattach() {\n        if (this.hoveredInternal) {\n            this.createSelection();\n            this.listItemElement.classList.add('hovered');\n        }\n        this.updateTitle();\n        this.listItemElement.draggable = true;\n    }\n    async onpopulate() {\n        if (this.treeOutline) {\n            return this.treeOutline.populateTreeElement(this);\n        }\n    }\n    async expandRecursively() {\n        await this.nodeInternal.getSubtree(-1, true);\n        await super.expandRecursively(Number.MAX_VALUE);\n    }\n    onexpand() {\n        if (this.isClosingTag()) {\n            return;\n        }\n        this.updateTitle();\n    }\n    oncollapse() {\n        if (this.isClosingTag()) {\n            return;\n        }\n        this.updateTitle();\n    }\n    select(omitFocus, selectedByUser) {\n        if (this.editing) {\n            return false;\n        }\n        return super.select(omitFocus, selectedByUser);\n    }\n    onselect(selectedByUser) {\n        if (!this.treeOutline) {\n            return false;\n        }\n        this.treeOutline.suppressRevealAndSelect = true;\n        this.treeOutline.selectDOMNode(this.nodeInternal, selectedByUser);\n        if (selectedByUser) {\n            this.nodeInternal.highlight();\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.ChangeInspectedNodeInElementsPanel);\n        }\n        this.createSelection();\n        this.createHint();\n        this.treeOutline.suppressRevealAndSelect = false;\n        return true;\n    }\n    ondelete() {\n        if (!this.treeOutline) {\n            return false;\n        }\n        const startTagTreeElement = this.treeOutline.findTreeElement(this.nodeInternal);\n        startTagTreeElement ? startTagTreeElement.remove() : this.remove();\n        return true;\n    }\n    onenter() {\n        // On Enter or Return start editing the first attribute\n        // or create a new attribute on the selected element.\n        if (this.editing) {\n            return false;\n        }\n        this.startEditing();\n        // prevent a newline from being immediately inserted\n        return true;\n    }\n    selectOnMouseDown(event) {\n        super.selectOnMouseDown(event);\n        if (this.editing) {\n            return;\n        }\n        // Prevent selecting the nearest word on double click.\n        if (event.detail >= 2) {\n            event.preventDefault();\n        }\n    }\n    ondblclick(event) {\n        if (this.editing || this.isClosingTag()) {\n            return false;\n        }\n        if (this.startEditingTarget(event.target)) {\n            return false;\n        }\n        if (this.isExpandable() && !this.expanded) {\n            this.expand();\n        }\n        return false;\n    }\n    hasEditableNode() {\n        return !this.nodeInternal.isShadowRoot() && !this.nodeInternal.ancestorUserAgentShadowRoot();\n    }\n    insertInLastAttributePosition(tag, node) {\n        if (tag.getElementsByClassName('webkit-html-attribute').length > 0) {\n            tag.insertBefore(node, tag.lastChild);\n        }\n        else if (tag.textContent !== null) {\n            const matchResult = tag.textContent.match(/^<(.*?)>$/);\n            if (!matchResult) {\n                return;\n            }\n            const nodeName = matchResult[1];\n            tag.textContent = '';\n            UI.UIUtils.createTextChild(tag, '<' + nodeName);\n            tag.appendChild(node);\n            UI.UIUtils.createTextChild(tag, '>');\n        }\n    }\n    startEditingTarget(eventTarget) {\n        if (!this.treeOutline || this.treeOutline.selectedDOMNode() !== this.nodeInternal) {\n            return false;\n        }\n        if (this.nodeInternal.nodeType() !== Node.ELEMENT_NODE && this.nodeInternal.nodeType() !== Node.TEXT_NODE) {\n            return false;\n        }\n        const textNode = eventTarget.enclosingNodeOrSelfWithClass('webkit-html-text-node');\n        if (textNode) {\n            return this.startEditingTextNode(textNode);\n        }\n        const attribute = eventTarget.enclosingNodeOrSelfWithClass('webkit-html-attribute');\n        if (attribute) {\n            return this.startEditingAttribute(attribute, eventTarget);\n        }\n        const tagName = eventTarget.enclosingNodeOrSelfWithClass('webkit-html-tag-name');\n        if (tagName) {\n            return this.startEditingTagName(tagName);\n        }\n        const newAttribute = eventTarget.enclosingNodeOrSelfWithClass('add-attribute');\n        if (newAttribute) {\n            return this.addNewAttribute();\n        }\n        return false;\n    }\n    showContextMenu(event) {\n        this.treeOutline && this.treeOutline.showContextMenu(this, event);\n    }\n    populateTagContextMenu(contextMenu, event) {\n        // Add attribute-related actions.\n        const treeElement = this.isClosingTag() && this.treeOutline ? this.treeOutline.findTreeElement(this.nodeInternal) : this;\n        if (!treeElement) {\n            return;\n        }\n        contextMenu.editSection().appendItem(i18nString(UIStrings.addAttribute), treeElement.addNewAttribute.bind(treeElement), { jslogContext: 'add-attribute' });\n        const target = event.target;\n        const attribute = target.enclosingNodeOrSelfWithClass('webkit-html-attribute');\n        const newAttribute = target.enclosingNodeOrSelfWithClass('add-attribute');\n        if (attribute && !newAttribute) {\n            contextMenu.editSection().appendItem(i18nString(UIStrings.editAttribute), this.startEditingAttribute.bind(this, attribute, target), { jslogContext: 'edit-attribute' });\n        }\n        this.populateNodeContextMenu(contextMenu);\n        ElementsTreeElement.populateForcedPseudoStateItems(contextMenu, treeElement.node());\n        this.populateScrollIntoView(contextMenu);\n        contextMenu.viewSection().appendItem(i18nString(UIStrings.focus), async () => {\n            await this.nodeInternal.focus();\n        }, { jslogContext: 'focus' });\n    }\n    populatePseudoElementContextMenu(contextMenu) {\n        if (this.childCount() !== 0) {\n            this.populateExpandRecursively(contextMenu);\n        }\n        this.populateScrollIntoView(contextMenu);\n    }\n    populateExpandRecursively(contextMenu) {\n        contextMenu.viewSection().appendItem(i18nString(UIStrings.expandRecursively), this.expandRecursively.bind(this), { jslogContext: 'expand-recursively' });\n    }\n    populateScrollIntoView(contextMenu) {\n        contextMenu.viewSection().appendItem(i18nString(UIStrings.scrollIntoView), () => this.nodeInternal.scrollIntoView(), { jslogContext: 'scroll-into-view' });\n    }\n    populateTextContextMenu(contextMenu, textNode) {\n        if (!this.editing) {\n            contextMenu.editSection().appendItem(i18nString(UIStrings.editText), this.startEditingTextNode.bind(this, textNode), { jslogContext: 'edit-text' });\n        }\n        this.populateNodeContextMenu(contextMenu);\n    }\n    populateNodeContextMenu(contextMenu) {\n        // Add free-form node-related actions.\n        const isEditable = this.hasEditableNode();\n        // clang-format off\n        if (isEditable && !this.editing) {\n            contextMenu.editSection().appendItem(i18nString(UIStrings.editAsHtml), this.editAsHTML.bind(this), { jslogContext: 'elements.edit-as-html' });\n        }\n        // clang-format on\n        const isShadowRoot = this.nodeInternal.isShadowRoot();\n        const createShortcut = UI.KeyboardShortcut.KeyboardShortcut.shortcutToString.bind(null);\n        const modifier = UI.KeyboardShortcut.Modifiers.CtrlOrMeta;\n        const treeOutline = this.treeOutline;\n        if (!treeOutline) {\n            return;\n        }\n        let menuItem;\n        if (UI.ActionRegistry.ActionRegistry.instance().hasAction('freestyler.element-panel-context')) {\n            contextMenu.headerSection().appendAction('freestyler.element-panel-context');\n        }\n        menuItem = contextMenu.clipboardSection().appendItem(i18nString(UIStrings.cut), treeOutline.performCopyOrCut.bind(treeOutline, true, this.nodeInternal), { disabled: !this.hasEditableNode(), jslogContext: 'cut' });\n        menuItem.setShortcut(createShortcut('X', modifier));\n        // Place it here so that all \"Copy\"-ing items stick together.\n        const copyMenu = contextMenu.clipboardSection().appendSubMenuItem(i18nString(UIStrings.copy), false, 'copy');\n        const section = copyMenu.section();\n        if (!isShadowRoot) {\n            menuItem = section.appendItem(i18nString(UIStrings.copyOuterhtml), treeOutline.performCopyOrCut.bind(treeOutline, false, this.nodeInternal), { jslogContext: 'copy-outer-html' });\n            menuItem.setShortcut(createShortcut('V', modifier));\n        }\n        if (this.nodeInternal.nodeType() === Node.ELEMENT_NODE) {\n            section.appendItem(i18nString(UIStrings.copySelector), this.copyCSSPath.bind(this), { jslogContext: 'copy-selector' });\n            section.appendItem(i18nString(UIStrings.copyJsPath), this.copyJSPath.bind(this), { disabled: !canGetJSPath(this.nodeInternal), jslogContext: 'copy-js-path' });\n            section.appendItem(i18nString(UIStrings.copyStyles), this.copyStyles.bind(this), { jslogContext: 'elements.copy-styles' });\n        }\n        if (!isShadowRoot) {\n            section.appendItem(i18nString(UIStrings.copyXpath), this.copyXPath.bind(this), { jslogContext: 'copy-xpath' });\n            section.appendItem(i18nString(UIStrings.copyFullXpath), this.copyFullXPath.bind(this), { jslogContext: 'copy-full-xpath' });\n        }\n        if (!isShadowRoot) {\n            menuItem = copyMenu.clipboardSection().appendItem(i18nString(UIStrings.copyElement), treeOutline.performCopyOrCut.bind(treeOutline, false, this.nodeInternal), { jslogContext: 'copy-element' });\n            menuItem.setShortcut(createShortcut('C', modifier));\n            // Duplicate element, disabled on root element and ShadowDOM.\n            const isRootElement = !this.nodeInternal.parentNode || this.nodeInternal.parentNode.nodeName() === '#document';\n            menuItem = contextMenu.editSection().appendItem(i18nString(UIStrings.duplicateElement), treeOutline.duplicateNode.bind(treeOutline, this.nodeInternal), {\n                disabled: (this.nodeInternal.isInShadowTree() || isRootElement),\n                jslogContext: 'elements.duplicate-element',\n            });\n        }\n        menuItem = contextMenu.clipboardSection().appendItem(i18nString(UIStrings.paste), treeOutline.pasteNode.bind(treeOutline, this.nodeInternal), { disabled: !treeOutline.canPaste(this.nodeInternal), jslogContext: 'paste' });\n        menuItem.setShortcut(createShortcut('V', modifier));\n        menuItem = contextMenu.debugSection().appendCheckboxItem(i18nString(UIStrings.hideElement), treeOutline.toggleHideElement.bind(treeOutline, this.nodeInternal), { checked: treeOutline.isToggledToHidden(this.nodeInternal), jslogContext: 'elements.hide-element' });\n        menuItem.setShortcut(UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutTitleForAction('elements.hide-element') || '');\n        if (isEditable) {\n            contextMenu.editSection().appendItem(i18nString(UIStrings.deleteElement), this.remove.bind(this), { jslogContext: 'delete-element' });\n        }\n        this.populateExpandRecursively(contextMenu);\n        contextMenu.viewSection().appendItem(i18nString(UIStrings.collapseChildren), this.collapseChildren.bind(this), { jslogContext: 'collapse-children' });\n        const deviceModeWrapperAction = new Emulation.DeviceModeWrapper.ActionDelegate();\n        contextMenu.viewSection().appendItem(i18nString(UIStrings.captureNodeScreenshot), deviceModeWrapperAction.handleAction.bind(null, UI.Context.Context.instance(), 'emulation.capture-node-screenshot'), { jslogContext: 'emulation.capture-node-screenshot' });\n        if (this.nodeInternal.frameOwnerFrameId()) {\n            contextMenu.viewSection().appendItem(i18nString(UIStrings.showFrameDetails), () => {\n                const frameOwnerFrameId = this.nodeInternal.frameOwnerFrameId();\n                if (frameOwnerFrameId) {\n                    const frame = SDK.FrameManager.FrameManager.instance().getFrame(frameOwnerFrameId);\n                    void Common.Revealer.reveal(frame);\n                }\n            }, { jslogContext: 'show-frame-details' });\n        }\n    }\n    startEditing() {\n        if (!this.treeOutline || this.treeOutline.selectedDOMNode() !== this.nodeInternal) {\n            return;\n        }\n        const listItem = this.listItemElement;\n        if (isOpeningTag(this.tagTypeContext) && this.tagTypeContext.canAddAttributes) {\n            const attribute = listItem.getElementsByClassName('webkit-html-attribute')[0];\n            if (attribute) {\n                return this.startEditingAttribute(attribute, attribute.getElementsByClassName('webkit-html-attribute-value')[0]);\n            }\n            return this.addNewAttribute();\n        }\n        if (this.nodeInternal.nodeType() === Node.TEXT_NODE) {\n            const textNode = listItem.getElementsByClassName('webkit-html-text-node')[0];\n            if (textNode) {\n                return this.startEditingTextNode(textNode);\n            }\n        }\n        return;\n    }\n    addNewAttribute() {\n        // Cannot just convert the textual html into an element without\n        // a parent node. Use a temporary span container for the HTML.\n        const container = document.createElement('span');\n        const attr = this.buildAttributeDOM(container, ' ', '', null);\n        attr.style.marginLeft = '2px'; // overrides the .editing margin rule\n        attr.style.marginRight = '2px'; // overrides the .editing margin rule\n        attr.setAttribute('jslog', `${VisualLogging.value('new-attribute').track({ change: true, resize: true })}`);\n        const tag = this.listItemElement.getElementsByClassName('webkit-html-tag')[0];\n        this.insertInLastAttributePosition(tag, attr);\n        attr.scrollIntoViewIfNeeded(true);\n        return this.startEditingAttribute(attr, attr);\n    }\n    triggerEditAttribute(attributeName) {\n        const attributeElements = this.listItemElement.getElementsByClassName('webkit-html-attribute-name');\n        for (let i = 0, len = attributeElements.length; i < len; ++i) {\n            if (attributeElements[i].textContent === attributeName) {\n                for (let elem = attributeElements[i].nextSibling; elem; elem = elem.nextSibling) {\n                    if (elem.nodeType !== Node.ELEMENT_NODE) {\n                        continue;\n                    }\n                    if (elem.classList.contains('webkit-html-attribute-value')) {\n                        return this.startEditingAttribute(elem.parentElement, elem);\n                    }\n                }\n            }\n        }\n        return;\n    }\n    startEditingAttribute(attribute, elementForSelection) {\n        console.assert(this.listItemElement.isAncestor(attribute));\n        if (UI.UIUtils.isBeingEdited(attribute)) {\n            return true;\n        }\n        const attributeNameElement = attribute.getElementsByClassName('webkit-html-attribute-name')[0];\n        if (!attributeNameElement) {\n            return false;\n        }\n        const attributeName = attributeNameElement.textContent;\n        const attributeValueElement = attribute.getElementsByClassName('webkit-html-attribute-value')[0];\n        // Make sure elementForSelection is not a child of attributeValueElement.\n        elementForSelection =\n            attributeValueElement.isAncestor(elementForSelection) ? attributeValueElement : elementForSelection;\n        function removeZeroWidthSpaceRecursive(node) {\n            if (node.nodeType === Node.TEXT_NODE) {\n                node.nodeValue = node.nodeValue ? node.nodeValue.replace(/\\u200B/g, '') : '';\n                return;\n            }\n            if (node.nodeType !== Node.ELEMENT_NODE) {\n                return;\n            }\n            for (let child = node.firstChild; child; child = child.nextSibling) {\n                removeZeroWidthSpaceRecursive(child);\n            }\n        }\n        const attributeValue = attributeName && attributeValueElement ?\n            this.nodeInternal.getAttribute(attributeName)?.replaceAll('\"', '&quot;') :\n            undefined;\n        if (attributeValue !== undefined) {\n            attributeValueElement.setTextContentTruncatedIfNeeded(attributeValue, i18nString(UIStrings.valueIsTooLargeToEdit));\n        }\n        // Remove zero-width spaces that were added by nodeTitleInfo.\n        removeZeroWidthSpaceRecursive(attribute);\n        const config = new UI.InplaceEditor.Config(this.attributeEditingCommitted.bind(this), this.editingCancelled.bind(this), attributeName || undefined);\n        function postKeyDownFinishHandler(event) {\n            UI.UIUtils.handleElementValueModifications(event, attribute);\n            return '';\n        }\n        if (!Common.ParsedURL.ParsedURL.fromString(attributeValueElement.textContent || '')) {\n            config.setPostKeydownFinishHandler(postKeyDownFinishHandler);\n        }\n        this.updateEditorHandles(attribute, config);\n        const componentSelection = this.listItemElement.getComponentSelection();\n        componentSelection && componentSelection.selectAllChildren(elementForSelection);\n        return true;\n    }\n    startEditingTextNode(textNodeElement) {\n        if (UI.UIUtils.isBeingEdited(textNodeElement)) {\n            return true;\n        }\n        let textNode = this.nodeInternal;\n        // We only show text nodes inline in elements if the element only\n        // has a single child, and that child is a text node.\n        if (textNode.nodeType() === Node.ELEMENT_NODE && textNode.firstChild) {\n            textNode = textNode.firstChild;\n        }\n        const container = textNodeElement.enclosingNodeOrSelfWithClass('webkit-html-text-node');\n        if (container) {\n            container.textContent = textNode.nodeValue();\n        } // Strip the CSS or JS highlighting if present.\n        const config = new UI.InplaceEditor.Config(this.textNodeEditingCommitted.bind(this, textNode), this.editingCancelled.bind(this));\n        this.updateEditorHandles(textNodeElement, config);\n        const componentSelection = this.listItemElement.getComponentSelection();\n        componentSelection && componentSelection.selectAllChildren(textNodeElement);\n        return true;\n    }\n    startEditingTagName(tagNameElement) {\n        if (!tagNameElement) {\n            tagNameElement = this.listItemElement.getElementsByClassName('webkit-html-tag-name')[0];\n            if (!tagNameElement) {\n                return false;\n            }\n        }\n        const tagName = tagNameElement.textContent;\n        if (tagName !== null && EditTagBlocklist.has(tagName.toLowerCase())) {\n            return false;\n        }\n        if (UI.UIUtils.isBeingEdited(tagNameElement)) {\n            return true;\n        }\n        const closingTagElement = this.distinctClosingTagElement();\n        function keyupListener() {\n            if (closingTagElement && tagNameElement) {\n                closingTagElement.textContent = '</' + tagNameElement.textContent + '>';\n            }\n        }\n        const keydownListener = (event) => {\n            if (event.key !== ' ') {\n                return;\n            }\n            this.editing && this.editing.commit();\n            event.consume(true);\n        };\n        function editingCommitted(element, newTagName, oldText, tagName, moveDirection) {\n            if (!tagNameElement) {\n                return;\n            }\n            tagNameElement.removeEventListener('keyup', keyupListener, false);\n            tagNameElement.removeEventListener('keydown', keydownListener, false);\n            this.tagNameEditingCommitted(element, newTagName, oldText, tagName, moveDirection);\n        }\n        function editingCancelled(element, tagName) {\n            if (!tagNameElement) {\n                return;\n            }\n            tagNameElement.removeEventListener('keyup', keyupListener, false);\n            tagNameElement.removeEventListener('keydown', keydownListener, false);\n            this.editingCancelled(element, tagName);\n        }\n        tagNameElement.addEventListener('keyup', keyupListener, false);\n        tagNameElement.addEventListener('keydown', keydownListener, false);\n        const config = new UI.InplaceEditor.Config(editingCommitted.bind(this), editingCancelled.bind(this), tagName);\n        this.updateEditorHandles(tagNameElement, config);\n        const componentSelection = this.listItemElement.getComponentSelection();\n        componentSelection && componentSelection.selectAllChildren(tagNameElement);\n        return true;\n    }\n    updateEditorHandles(element, config) {\n        const editorHandles = UI.InplaceEditor.InplaceEditor.startEditing(element, config);\n        if (!editorHandles) {\n            this.editing = null;\n        }\n        else {\n            this.editing = {\n                commit: editorHandles.commit,\n                cancel: editorHandles.cancel,\n                editor: undefined,\n                resize: () => { },\n            };\n        }\n    }\n    async startEditingAsHTML(commitCallback, disposeCallback, maybeInitialValue) {\n        if (maybeInitialValue === null) {\n            return;\n        }\n        if (this.editing) {\n            return;\n        }\n        const initialValue = this.convertWhitespaceToEntities(maybeInitialValue).text;\n        this.htmlEditElement = document.createElement('div');\n        this.htmlEditElement.className = 'source-code elements-tree-editor';\n        // Hide header items.\n        let child = this.listItemElement.firstChild;\n        while (child) {\n            child.style.display = 'none';\n            child = child.nextSibling;\n        }\n        // Hide children item.\n        if (this.childrenListElement) {\n            this.childrenListElement.style.display = 'none';\n        }\n        // Append editor.\n        this.listItemElement.append(this.htmlEditElement);\n        this.htmlEditElement.addEventListener('keydown', event => {\n            if (event.key === 'Escape') {\n                event.consume(true);\n            }\n        });\n        const editor = new TextEditor.TextEditor.TextEditor(CodeMirror.EditorState.create({\n            doc: initialValue,\n            extensions: [\n                CodeMirror.keymap.of([\n                    {\n                        key: 'Mod-Enter',\n                        run: () => {\n                            this.editing?.commit();\n                            return true;\n                        },\n                    },\n                    {\n                        key: 'Escape',\n                        run: () => {\n                            this.editing?.cancel();\n                            return true;\n                        },\n                    },\n                ]),\n                TextEditor.Config.baseConfiguration(initialValue),\n                TextEditor.Config.closeBrackets.instance(),\n                TextEditor.Config.autocompletion.instance(),\n                CodeMirror.html.html({ autoCloseTags: false, selfClosingTags: true }),\n                TextEditor.Config.domWordWrap.instance(),\n                CodeMirror.EditorView.theme({\n                    '&.cm-editor': { maxHeight: '300px' },\n                    '.cm-scroller': { overflowY: 'auto' },\n                }),\n                CodeMirror.EditorView.domEventHandlers({\n                    focusout: event => {\n                        // The relatedTarget is null when no element gains focus, e.g. switching windows.\n                        const relatedTarget = event.relatedTarget;\n                        if (relatedTarget && !relatedTarget.isSelfOrDescendant(editor)) {\n                            this.editing && this.editing.commit();\n                        }\n                    },\n                }),\n            ],\n        }));\n        this.editing = { commit: commit.bind(this), cancel: dispose.bind(this), editor, resize: resize.bind(this) };\n        resize.call(this);\n        this.htmlEditElement.appendChild(editor);\n        editor.editor.focus();\n        this.treeOutline && this.treeOutline.setMultilineEditing(this.editing);\n        function resize() {\n            if (this.treeOutline && this.htmlEditElement) {\n                this.htmlEditElement.style.width = this.treeOutline.visibleWidth() - this.computeLeftIndent() - 30 + 'px';\n            }\n        }\n        function commit() {\n            if (this.editing && this.editing.editor) {\n                commitCallback(initialValue, this.editing.editor.state.doc.toString());\n            }\n            dispose.call(this);\n        }\n        function dispose() {\n            if (!this.editing || !this.editing.editor) {\n                return;\n            }\n            this.editing = null;\n            // Remove editor.\n            if (this.htmlEditElement) {\n                this.listItemElement.removeChild(this.htmlEditElement);\n            }\n            this.htmlEditElement = undefined;\n            // Unhide children item.\n            if (this.childrenListElement) {\n                this.childrenListElement.style.removeProperty('display');\n            }\n            // Unhide header items.\n            let child = this.listItemElement.firstChild;\n            while (child) {\n                child.style.removeProperty('display');\n                child = child.nextSibling;\n            }\n            if (this.treeOutline) {\n                this.treeOutline.setMultilineEditing(null);\n                this.treeOutline.focus();\n            }\n            disposeCallback();\n        }\n    }\n    attributeEditingCommitted(element, newText, oldText, attributeName, moveDirection) {\n        this.editing = null;\n        const treeOutline = this.treeOutline;\n        function moveToNextAttributeIfNeeded(error) {\n            if (error) {\n                this.editingCancelled(element, attributeName);\n            }\n            if (!moveDirection) {\n                return;\n            }\n            if (treeOutline) {\n                treeOutline.runPendingUpdates();\n                treeOutline.focus();\n            }\n            // Search for the attribute's position, and then decide where to move to.\n            const attributes = this.nodeInternal.attributes();\n            for (let i = 0; i < attributes.length; ++i) {\n                if (attributes[i].name !== attributeName) {\n                    continue;\n                }\n                if (moveDirection === 'backward') {\n                    if (i === 0) {\n                        this.startEditingTagName();\n                    }\n                    else {\n                        this.triggerEditAttribute(attributes[i - 1].name);\n                    }\n                }\n                else {\n                    if (i === attributes.length - 1) {\n                        this.addNewAttribute();\n                    }\n                    else {\n                        this.triggerEditAttribute(attributes[i + 1].name);\n                    }\n                }\n                return;\n            }\n            // Moving From the \"New Attribute\" position.\n            if (moveDirection === 'backward') {\n                if (newText === ' ') {\n                    // Moving from \"New Attribute\" that was not edited\n                    if (attributes.length > 0) {\n                        this.triggerEditAttribute(attributes[attributes.length - 1].name);\n                    }\n                }\n                else {\n                    // Moving from \"New Attribute\" that holds new value\n                    if (attributes.length > 1) {\n                        this.triggerEditAttribute(attributes[attributes.length - 2].name);\n                    }\n                }\n            }\n            else if (moveDirection === 'forward') {\n                if (!Platform.StringUtilities.isWhitespace(newText)) {\n                    this.addNewAttribute();\n                }\n                else {\n                    this.startEditingTagName();\n                }\n            }\n        }\n        if ((attributeName.trim() || newText.trim()) && oldText !== newText) {\n            this.nodeInternal.setAttribute(attributeName, newText, moveToNextAttributeIfNeeded.bind(this));\n            return;\n        }\n        this.updateTitle();\n        moveToNextAttributeIfNeeded.call(this);\n    }\n    tagNameEditingCommitted(element, newText, oldText, tagName, moveDirection) {\n        this.editing = null;\n        const self = this;\n        function cancel() {\n            const closingTagElement = self.distinctClosingTagElement();\n            if (closingTagElement) {\n                closingTagElement.textContent = '</' + tagName + '>';\n            }\n            self.editingCancelled(element, tagName);\n            moveToNextAttributeIfNeeded.call(self);\n        }\n        function moveToNextAttributeIfNeeded() {\n            if (moveDirection !== 'forward') {\n                this.addNewAttribute();\n                return;\n            }\n            const attributes = this.nodeInternal.attributes();\n            if (attributes.length > 0) {\n                this.triggerEditAttribute(attributes[0].name);\n            }\n            else {\n                this.addNewAttribute();\n            }\n        }\n        newText = newText.trim();\n        if (newText === oldText) {\n            cancel();\n            return;\n        }\n        const treeOutline = this.treeOutline;\n        const wasExpanded = this.expanded;\n        this.nodeInternal.setNodeName(newText, (error, newNode) => {\n            if (error || !newNode) {\n                cancel();\n                return;\n            }\n            if (!treeOutline) {\n                return;\n            }\n            const newTreeItem = treeOutline.selectNodeAfterEdit(wasExpanded, error, newNode);\n            // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n            // @ts-expect-error\n            moveToNextAttributeIfNeeded.call(newTreeItem);\n        });\n    }\n    textNodeEditingCommitted(textNode, element, newText) {\n        this.editing = null;\n        function callback() {\n            this.updateTitle();\n        }\n        textNode.setNodeValue(newText, callback.bind(this));\n    }\n    editingCancelled(_element, _tagName) {\n        this.editing = null;\n        // Need to restore attributes structure.\n        this.updateTitle();\n    }\n    distinctClosingTagElement() {\n        // FIXME: Improve the Tree Element / Outline Abstraction to prevent crawling the DOM\n        // For an expanded element, it will be the last element with class \"close\"\n        // in the child element list.\n        if (this.expanded) {\n            const closers = this.childrenListElement.querySelectorAll('.close');\n            return closers[closers.length - 1];\n        }\n        // Remaining cases are single line non-expanded elements with a closing\n        // tag, or HTML elements without a closing tag (such as <br>). Return\n        // null in the case where there isn't a closing tag.\n        const tags = this.listItemElement.getElementsByClassName('webkit-html-tag');\n        return tags.length === 1 ? null : tags[tags.length - 1];\n    }\n    updateTitle(updateRecord) {\n        // If we are editing, return early to prevent canceling the edit.\n        // After editing is committed updateTitle will be called.\n        if (this.editing) {\n            return;\n        }\n        const nodeInfo = this.nodeTitleInfo(updateRecord || null);\n        if (this.nodeInternal.nodeType() === Node.DOCUMENT_FRAGMENT_NODE && this.nodeInternal.isInShadowTree() &&\n            this.nodeInternal.shadowRootType()) {\n            this.childrenListElement.classList.add('shadow-root');\n            let depth = 4;\n            for (let node = this.nodeInternal; depth && node; node = node.parentNode) {\n                if (node.nodeType() === Node.DOCUMENT_FRAGMENT_NODE) {\n                    depth--;\n                }\n            }\n            if (!depth) {\n                this.childrenListElement.classList.add('shadow-root-deep');\n            }\n            else {\n                this.childrenListElement.classList.add('shadow-root-depth-' + depth);\n            }\n        }\n        this.contentElement.removeChildren();\n        const highlightElement = this.contentElement.createChild('span', 'highlight');\n        highlightElement.append(nodeInfo);\n        // fixme: make it clear that `this.title = x` is a setter with significant side effects\n        this.title = this.contentElement;\n        this.updateDecorations();\n        this.contentElement.prepend(this.gutterContainer);\n        if (isOpeningTag(this.tagTypeContext)) {\n            this.contentElement.append(this.tagTypeContext.adornerContainer);\n            if (this.tagTypeContext.slot) {\n                this.contentElement.append(this.tagTypeContext.slot);\n            }\n        }\n        delete this.selectionElement;\n        delete this.hintElement;\n        delete this.aiButtonContainer;\n        if (this.selected) {\n            this.createSelection();\n            this.createHint();\n        }\n        // If there is an issue with this node, make sure to update it.\n        for (const issue of this.#elementIssues.values()) {\n            this.#applyIssueStyleAndTooltip(issue);\n        }\n        this.highlightSearchResultsInternal();\n    }\n    computeLeftIndent() {\n        let treeElement = this.parent;\n        let depth = 0;\n        while (treeElement !== null) {\n            depth++;\n            treeElement = treeElement.parent;\n        }\n        /** Keep it in sync with elementsTreeOutline.css **/\n        return 12 * (depth - 2) + (this.isExpandable() && this.isCollapsible() ? 1 : 12);\n    }\n    updateDecorations() {\n        const indent = this.computeLeftIndent();\n        this.gutterContainer.style.left = (-indent) + 'px';\n        this.listItemElement.style.setProperty('--indent', indent + 'px');\n        if (this.isClosingTag()) {\n            return;\n        }\n        if (this.nodeInternal.nodeType() !== Node.ELEMENT_NODE) {\n            return;\n        }\n        void this.decorationsThrottler.schedule(this.updateDecorationsInternal.bind(this));\n    }\n    updateDecorationsInternal() {\n        if (!this.treeOutline) {\n            return Promise.resolve();\n        }\n        const node = this.nodeInternal;\n        if (!this.treeOutline.decoratorExtensions) {\n            this.treeOutline.decoratorExtensions = getRegisteredDecorators();\n        }\n        const markerToExtension = new Map();\n        for (const decoratorExtension of this.treeOutline.decoratorExtensions) {\n            markerToExtension.set(decoratorExtension.marker, decoratorExtension);\n        }\n        const promises = [];\n        const decorations = [];\n        const descendantDecorations = [];\n        node.traverseMarkers(visitor);\n        function visitor(n, marker) {\n            const extension = markerToExtension.get(marker);\n            if (!extension) {\n                return;\n            }\n            promises.push(Promise.resolve(extension.decorator()).then(collectDecoration.bind(null, n)));\n        }\n        function collectDecoration(n, decorator) {\n            const decoration = decorator.decorate(n);\n            if (!decoration) {\n                return;\n            }\n            (n === node ? decorations : descendantDecorations).push(decoration);\n        }\n        return Promise.all(promises).then(updateDecorationsUI.bind(this));\n        function updateDecorationsUI() {\n            this.decorationsElement.removeChildren();\n            this.decorationsElement.classList.add('hidden');\n            this.gutterContainer.classList.toggle('has-decorations', Boolean(decorations.length || descendantDecorations.length));\n            UI.ARIAUtils.setLabel(this.decorationsElement, '');\n            if (!decorations.length && !descendantDecorations.length) {\n                return;\n            }\n            const colors = new Set();\n            const titles = document.createElement('div');\n            for (const decoration of decorations) {\n                const titleElement = titles.createChild('div');\n                titleElement.textContent = decoration.title;\n                colors.add(decoration.color);\n            }\n            if (this.expanded && !decorations.length) {\n                return;\n            }\n            const descendantColors = new Set();\n            if (descendantDecorations.length) {\n                let element = titles.createChild('div');\n                element.textContent = i18nString(UIStrings.children);\n                for (const decoration of descendantDecorations) {\n                    element = titles.createChild('div');\n                    element.style.marginLeft = '15px';\n                    element.textContent = decoration.title;\n                    descendantColors.add(decoration.color);\n                }\n            }\n            let offset = 0;\n            processColors.call(this, colors, 'elements-gutter-decoration');\n            if (!this.expanded) {\n                processColors.call(this, descendantColors, 'elements-gutter-decoration elements-has-decorated-children');\n            }\n            UI.Tooltip.Tooltip.install(this.decorationsElement, titles.textContent);\n            UI.ARIAUtils.setLabel(this.decorationsElement, titles.textContent || '');\n            function processColors(colors, className) {\n                for (const color of colors) {\n                    const child = this.decorationsElement.createChild('div', className);\n                    this.decorationsElement.classList.remove('hidden');\n                    child.style.backgroundColor = color;\n                    child.style.borderColor = color;\n                    if (offset) {\n                        child.style.marginLeft = offset + 'px';\n                    }\n                    offset += 3;\n                }\n            }\n        }\n    }\n    buildAttributeDOM(parentElement, name, value, updateRecord, forceValue, node) {\n        const closingPunctuationRegex = /[\\/;:\\)\\]\\}]/g;\n        let highlightIndex = 0;\n        let highlightCount = 0;\n        let additionalHighlightOffset = 0;\n        function setValueWithEntities(element, value) {\n            const result = this.convertWhitespaceToEntities(value);\n            highlightCount = result.entityRanges.length;\n            value = result.text.replace(closingPunctuationRegex, (match, replaceOffset) => {\n                while (highlightIndex < highlightCount && result.entityRanges[highlightIndex].offset < replaceOffset) {\n                    result.entityRanges[highlightIndex].offset += additionalHighlightOffset;\n                    ++highlightIndex;\n                }\n                additionalHighlightOffset += 1;\n                return match + '\\u200B';\n            });\n            while (highlightIndex < highlightCount) {\n                result.entityRanges[highlightIndex].offset += additionalHighlightOffset;\n                ++highlightIndex;\n            }\n            element.setTextContentTruncatedIfNeeded(value);\n            UI.UIUtils.highlightRangesWithStyleClass(element, result.entityRanges, 'webkit-html-entity-value');\n        }\n        const hasText = (forceValue || value.length > 0);\n        const attrSpanElement = parentElement.createChild('span', 'webkit-html-attribute');\n        attrSpanElement.setAttribute('jslog', `${VisualLogging.value(name === 'style' ? 'style-attribute' : 'attribute').track({\n            change: true,\n            dblclick: true,\n        })}`);\n        const attrNameElement = attrSpanElement.createChild('span', 'webkit-html-attribute-name');\n        attrNameElement.textContent = name;\n        if (hasText) {\n            UI.UIUtils.createTextChild(attrSpanElement, '=\\u200B\"');\n        }\n        const attrValueElement = attrSpanElement.createChild('span', 'webkit-html-attribute-value');\n        if (updateRecord && updateRecord.isAttributeModified(name)) {\n            UI.UIUtils.runCSSAnimationOnce(hasText ? attrValueElement : attrNameElement, 'dom-update-highlight');\n        }\n        function linkifyValue(value) {\n            const rewrittenHref = node ? node.resolveURL(value) : null;\n            if (rewrittenHref === null) {\n                const span = document.createElement('span');\n                setValueWithEntities.call(this, span, value);\n                return span;\n            }\n            value = value.replace(closingPunctuationRegex, '$&\\u200B');\n            if (value.startsWith('data:')) {\n                value = Platform.StringUtilities.trimMiddle(value, 60);\n            }\n            const link = node && node.nodeName().toLowerCase() === 'a' ?\n                UI.XLink.XLink.create(rewrittenHref, value, '', true /* preventClick */, 'image-url') :\n                Components.Linkifier.Linkifier.linkifyURL(rewrittenHref, {\n                    text: value,\n                    preventClick: true,\n                    showColumnNumber: false,\n                    inlineFrameIndex: 0,\n                });\n            return ImagePreviewPopover.setImageUrl(link, rewrittenHref);\n        }\n        const nodeName = node ? node.nodeName().toLowerCase() : '';\n        // If the href/src attribute has a value, attempt to link it.\n        // There's no point trying to link it if the value is empty (e.g. <a href=''>).\n        if (nodeName && (name === 'src' || name === 'href') && value) {\n            attrValueElement.appendChild(linkifyValue.call(this, value));\n        }\n        else if ((nodeName === 'img' || nodeName === 'source') && name === 'srcset') {\n            attrValueElement.appendChild(linkifySrcset.call(this, value));\n        }\n        else if (nodeName === 'image' && (name === 'xlink:href' || name === 'href')) {\n            attrValueElement.appendChild(linkifySrcset.call(this, value));\n        }\n        else {\n            setValueWithEntities.call(this, attrValueElement, value);\n        }\n        if (name === 'popovertarget') {\n            const linkedPart = value ? attrValueElement : attrNameElement;\n            void this.linkifyElementByRelation(linkedPart, \"PopoverTarget\" /* Protocol.DOM.GetElementByRelationRequestRelation.PopoverTarget */, i18nString(UIStrings.showPopoverTarget));\n        }\n        if (hasText) {\n            UI.UIUtils.createTextChild(attrSpanElement, '\"');\n        }\n        function linkifySrcset(value) {\n            // Splitting normally on commas or spaces will break on valid srcsets \"foo 1x,bar 2x\" and \"data:,foo 1x\".\n            // 1) Let the index of the next space be `indexOfSpace`.\n            // 2a) If the character at `indexOfSpace - 1` is a comma, collect the preceding characters up to\n            //     `indexOfSpace - 1` as a URL and repeat step 1).\n            // 2b) Else, collect the preceding characters as a URL.\n            // 3) Collect the characters from `indexOfSpace` up to the next comma as the size descriptor and repeat step 1).\n            // https://html.spec.whatwg.org/C/#parse-a-srcset-attribute\n            const fragment = document.createDocumentFragment();\n            let i = 0;\n            while (value.length) {\n                if (i++ > 0) {\n                    UI.UIUtils.createTextChild(fragment, ' ');\n                }\n                value = value.trim();\n                // The url and descriptor may end with a separating comma.\n                let url = '';\n                let descriptor = '';\n                const indexOfSpace = value.search(/\\s/);\n                if (indexOfSpace === -1) {\n                    url = value;\n                }\n                else if (indexOfSpace > 0 && value[indexOfSpace - 1] === ',') {\n                    url = value.substring(0, indexOfSpace);\n                }\n                else {\n                    url = value.substring(0, indexOfSpace);\n                    const indexOfComma = value.indexOf(',', indexOfSpace);\n                    if (indexOfComma !== -1) {\n                        descriptor = value.substring(indexOfSpace, indexOfComma + 1);\n                    }\n                    else {\n                        descriptor = value.substring(indexOfSpace);\n                    }\n                }\n                if (url) {\n                    // Up to one trailing comma should be removed from `url`.\n                    if (url.endsWith(',')) {\n                        fragment.appendChild(linkifyValue.call(this, url.substring(0, url.length - 1)));\n                        UI.UIUtils.createTextChild(fragment, ',');\n                    }\n                    else {\n                        fragment.appendChild(linkifyValue.call(this, url));\n                    }\n                }\n                if (descriptor) {\n                    UI.UIUtils.createTextChild(fragment, descriptor);\n                }\n                value = value.substring(url.length + descriptor.length);\n            }\n            return fragment;\n        }\n        return attrSpanElement;\n    }\n    async linkifyElementByRelation(linkContainer, relation, tooltip) {\n        const relatedElementId = await this.nodeInternal.domModel().getElementByRelation(this.nodeInternal.id, relation);\n        const relatedElement = this.nodeInternal.domModel().nodeForId(relatedElementId);\n        if (!relatedElement) {\n            return;\n        }\n        const link = await Common.Linkifier.Linkifier.linkify(relatedElement, {\n            preventKeyboardFocus: true,\n            tooltip,\n            textContent: linkContainer.textContent || undefined,\n            isDynamicLink: true,\n        });\n        linkContainer.removeChildren();\n        linkContainer.append(link);\n    }\n    buildPseudoElementDOM(parentElement, pseudoElementName) {\n        const pseudoElement = parentElement.createChild('span', 'webkit-html-pseudo-element');\n        pseudoElement.textContent = '::' + pseudoElementName;\n        UI.UIUtils.createTextChild(parentElement, '\\u200B');\n    }\n    buildTagDOM(parentElement, tagName, isClosingTag, isDistinctTreeElement, updateRecord) {\n        const node = this.nodeInternal;\n        const classes = ['webkit-html-tag'];\n        if (isClosingTag && isDistinctTreeElement) {\n            classes.push('close');\n        }\n        const tagElement = parentElement.createChild('span', classes.join(' '));\n        UI.UIUtils.createTextChild(tagElement, '<');\n        const tagNameElement = tagElement.createChild('span', isClosingTag ? 'webkit-html-close-tag-name' : 'webkit-html-tag-name');\n        if (!isClosingTag) {\n            tagNameElement.setAttribute('jslog', `${VisualLogging.value('tag-name').track({ change: true, dblclick: true })}`);\n        }\n        tagNameElement.textContent = (isClosingTag ? '/' : '') + tagName;\n        if (!isClosingTag) {\n            if (node.hasAttributes()) {\n                const attributes = node.attributes();\n                for (let i = 0; i < attributes.length; ++i) {\n                    const attr = attributes[i];\n                    UI.UIUtils.createTextChild(tagElement, ' ');\n                    this.buildAttributeDOM(tagElement, attr.name, attr.value, updateRecord, false, node);\n                }\n            }\n            if (updateRecord) {\n                let hasUpdates = updateRecord.hasRemovedAttributes() || updateRecord.hasRemovedChildren();\n                hasUpdates = hasUpdates || (!this.expanded && updateRecord.hasChangedChildren());\n                if (hasUpdates) {\n                    UI.UIUtils.runCSSAnimationOnce(tagNameElement, 'dom-update-highlight');\n                }\n            }\n        }\n        UI.UIUtils.createTextChild(tagElement, '>');\n        UI.UIUtils.createTextChild(parentElement, '\\u200B');\n        if (tagElement.textContent) {\n            UI.ARIAUtils.setLabel(tagElement, tagElement.textContent);\n        }\n    }\n    convertWhitespaceToEntities(text) {\n        let result = '';\n        let lastIndexAfterEntity = 0;\n        const entityRanges = [];\n        const charToEntity = MappedCharToEntity;\n        for (let i = 0, size = text.length; i < size; ++i) {\n            const char = text.charAt(i);\n            if (charToEntity.has(char)) {\n                result += text.substring(lastIndexAfterEntity, i);\n                const entityValue = '&' + charToEntity.get(char) + ';';\n                entityRanges.push(new TextUtils.TextRange.SourceRange(result.length, entityValue.length));\n                result += entityValue;\n                lastIndexAfterEntity = i + 1;\n            }\n        }\n        if (result) {\n            result += text.substring(lastIndexAfterEntity);\n        }\n        return { text: result || text, entityRanges };\n    }\n    nodeTitleInfo(updateRecord) {\n        const node = this.nodeInternal;\n        const titleDOM = document.createDocumentFragment();\n        const updateSearchHighlight = () => {\n            this.highlightSearchResultsInternal();\n        };\n        switch (node.nodeType()) {\n            case Node.ATTRIBUTE_NODE:\n                this.buildAttributeDOM(titleDOM, node.name, node.value, updateRecord, true);\n                break;\n            case Node.ELEMENT_NODE: {\n                let pseudoElementName = node.pseudoType();\n                if (pseudoElementName) {\n                    const pseudoIdentifier = node.pseudoIdentifier();\n                    if (pseudoIdentifier) {\n                        pseudoElementName += `(${pseudoIdentifier})`;\n                    }\n                    this.buildPseudoElementDOM(titleDOM, pseudoElementName);\n                    break;\n                }\n                const tagName = node.nodeNameInCorrectCase();\n                if (this.isClosingTag()) {\n                    this.buildTagDOM(titleDOM, tagName, true, true, updateRecord);\n                    break;\n                }\n                this.buildTagDOM(titleDOM, tagName, false, false, updateRecord);\n                if (this.isExpandable()) {\n                    if (!this.expanded) {\n                        const expandButton = new ElementsComponents.ElementsTreeExpandButton.ElementsTreeExpandButton();\n                        expandButton.data = {\n                            clickHandler: () => this.expand(),\n                        };\n                        titleDOM.appendChild(expandButton);\n                        // This hidden span with … is for blink layout tests.\n                        // The method dumpElementsTree(front_end/legacy_test_runner/elements_test_runner/ElementsTestRunner.js)\n                        // dumps … to identify expandable element.\n                        const hidden = document.createElement('span');\n                        hidden.textContent = '…';\n                        hidden.style.fontSize = '0';\n                        titleDOM.appendChild(hidden);\n                        UI.UIUtils.createTextChild(titleDOM, '\\u200B');\n                        this.buildTagDOM(titleDOM, tagName, true, false, updateRecord);\n                    }\n                    break;\n                }\n                if (ElementsTreeElement.canShowInlineText(node)) {\n                    const textNodeElement = titleDOM.createChild('span', 'webkit-html-text-node');\n                    textNodeElement.setAttribute('jslog', `${VisualLogging.value('text-node').track({ change: true, dblclick: true })}`);\n                    const firstChild = node.firstChild;\n                    if (!firstChild) {\n                        throw new Error('ElementsTreeElement._nodeTitleInfo expects node.firstChild to be defined.');\n                    }\n                    const result = this.convertWhitespaceToEntities(firstChild.nodeValue());\n                    textNodeElement.textContent = Platform.StringUtilities.collapseWhitespace(result.text);\n                    UI.UIUtils.highlightRangesWithStyleClass(textNodeElement, result.entityRanges, 'webkit-html-entity-value');\n                    UI.UIUtils.createTextChild(titleDOM, '\\u200B');\n                    this.buildTagDOM(titleDOM, tagName, true, false, updateRecord);\n                    if (updateRecord && updateRecord.hasChangedChildren()) {\n                        UI.UIUtils.runCSSAnimationOnce(textNodeElement, 'dom-update-highlight');\n                    }\n                    if (updateRecord && updateRecord.isCharDataModified()) {\n                        UI.UIUtils.runCSSAnimationOnce(textNodeElement, 'dom-update-highlight');\n                    }\n                    break;\n                }\n                if (this.treeOutline && this.treeOutline.isXMLMimeType || !ForbiddenClosingTagElements.has(tagName)) {\n                    this.buildTagDOM(titleDOM, tagName, true, false, updateRecord);\n                }\n                break;\n            }\n            case Node.TEXT_NODE:\n                if (node.parentNode && node.parentNode.nodeName().toLowerCase() === 'script') {\n                    const newNode = titleDOM.createChild('span', 'webkit-html-text-node webkit-html-js-node');\n                    newNode.setAttribute('jslog', `${VisualLogging.value('script-text-node').track({ change: true, dblclick: true })}`);\n                    const text = node.nodeValue();\n                    newNode.textContent = text.replace(/^[\\n\\r]+|\\s+$/g, '');\n                    void CodeHighlighter.CodeHighlighter.highlightNode(newNode, 'text/javascript').then(updateSearchHighlight);\n                }\n                else if (node.parentNode && node.parentNode.nodeName().toLowerCase() === 'style') {\n                    const newNode = titleDOM.createChild('span', 'webkit-html-text-node webkit-html-css-node');\n                    newNode.setAttribute('jslog', `${VisualLogging.value('css-text-node').track({ change: true, dblclick: true })}`);\n                    const text = node.nodeValue();\n                    newNode.textContent = text.replace(/^[\\n\\r]+|\\s+$/g, '');\n                    void CodeHighlighter.CodeHighlighter.highlightNode(newNode, 'text/css').then(updateSearchHighlight);\n                }\n                else {\n                    UI.UIUtils.createTextChild(titleDOM, '\"');\n                    const textNodeElement = titleDOM.createChild('span', 'webkit-html-text-node');\n                    textNodeElement.setAttribute('jslog', `${VisualLogging.value('text-node').track({ change: true, dblclick: true })}`);\n                    const result = this.convertWhitespaceToEntities(node.nodeValue());\n                    textNodeElement.textContent = Platform.StringUtilities.collapseWhitespace(result.text);\n                    UI.UIUtils.highlightRangesWithStyleClass(textNodeElement, result.entityRanges, 'webkit-html-entity-value');\n                    UI.UIUtils.createTextChild(titleDOM, '\"');\n                    if (updateRecord && updateRecord.isCharDataModified()) {\n                        UI.UIUtils.runCSSAnimationOnce(textNodeElement, 'dom-update-highlight');\n                    }\n                }\n                break;\n            case Node.COMMENT_NODE: {\n                const commentElement = titleDOM.createChild('span', 'webkit-html-comment');\n                UI.UIUtils.createTextChild(commentElement, '<!--' + node.nodeValue() + '-->');\n                break;\n            }\n            case Node.DOCUMENT_TYPE_NODE: {\n                const docTypeElement = titleDOM.createChild('span', 'webkit-html-doctype');\n                UI.UIUtils.createTextChild(docTypeElement, '<!DOCTYPE ' + node.nodeName());\n                if (node.publicId) {\n                    UI.UIUtils.createTextChild(docTypeElement, ' PUBLIC \"' + node.publicId + '\"');\n                    if (node.systemId) {\n                        UI.UIUtils.createTextChild(docTypeElement, ' \"' + node.systemId + '\"');\n                    }\n                }\n                else if (node.systemId) {\n                    UI.UIUtils.createTextChild(docTypeElement, ' SYSTEM \"' + node.systemId + '\"');\n                }\n                if (node.internalSubset) {\n                    UI.UIUtils.createTextChild(docTypeElement, ' [' + node.internalSubset + ']');\n                }\n                UI.UIUtils.createTextChild(docTypeElement, '>');\n                break;\n            }\n            case Node.CDATA_SECTION_NODE: {\n                const cdataElement = titleDOM.createChild('span', 'webkit-html-text-node');\n                UI.UIUtils.createTextChild(cdataElement, '<![CDATA[' + node.nodeValue() + ']]>');\n                break;\n            }\n            case Node.DOCUMENT_NODE: {\n                const documentElement = titleDOM.createChild('span');\n                UI.UIUtils.createTextChild(documentElement, '#document (');\n                const text = node.documentURL;\n                documentElement.appendChild(Components.Linkifier.Linkifier.linkifyURL(text, {\n                    text,\n                    preventClick: true,\n                    showColumnNumber: false,\n                    inlineFrameIndex: 0,\n                }));\n                UI.UIUtils.createTextChild(documentElement, ')');\n                break;\n            }\n            case Node.DOCUMENT_FRAGMENT_NODE: {\n                const fragmentElement = titleDOM.createChild('span', 'webkit-html-fragment');\n                fragmentElement.textContent = Platform.StringUtilities.collapseWhitespace(node.nodeNameInCorrectCase());\n                break;\n            }\n            default: {\n                const nameWithSpaceCollapsed = Platform.StringUtilities.collapseWhitespace(node.nodeNameInCorrectCase());\n                UI.UIUtils.createTextChild(titleDOM, nameWithSpaceCollapsed);\n            }\n        }\n        return titleDOM;\n    }\n    remove() {\n        if (this.nodeInternal.pseudoType()) {\n            return;\n        }\n        const parentElement = this.parent;\n        if (!parentElement) {\n            return;\n        }\n        if (!this.nodeInternal.parentNode || this.nodeInternal.parentNode.nodeType() === Node.DOCUMENT_NODE) {\n            return;\n        }\n        void this.nodeInternal.removeNode();\n    }\n    toggleEditAsHTML(callback, startEditing) {\n        if (this.editing && this.htmlEditElement) {\n            this.editing.commit();\n            return;\n        }\n        if (startEditing === false) {\n            return;\n        }\n        function selectNode(error) {\n            if (callback) {\n                callback(!error);\n            }\n        }\n        function commitChange(initialValue, value) {\n            if (initialValue !== value) {\n                node.setOuterHTML(value, selectNode);\n            }\n        }\n        function disposeCallback() {\n            if (callback) {\n                callback(false);\n            }\n        }\n        const node = this.nodeInternal;\n        void node.getOuterHTML().then(this.startEditingAsHTML.bind(this, commitChange, disposeCallback));\n    }\n    copyCSSPath() {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(cssPath(this.nodeInternal, true));\n    }\n    copyJSPath() {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(jsPath(this.nodeInternal, true));\n    }\n    copyXPath() {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(xPath(this.nodeInternal, true));\n    }\n    copyFullXPath() {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(xPath(this.nodeInternal, false));\n    }\n    async copyStyles() {\n        const node = this.nodeInternal;\n        const cssModel = node.domModel().cssModel();\n        const cascade = await cssModel.cachedMatchedCascadeForNode(node);\n        if (!cascade) {\n            return;\n        }\n        const indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n        const lines = [];\n        for (const style of cascade.nodeStyles().reverse()) {\n            for (const property of style.leadingProperties()) {\n                if (!property.parsedOk || property.disabled || !property.activeInStyle() || property.implicit) {\n                    continue;\n                }\n                if (cascade.isInherited(style) && !SDK.CSSMetadata.cssMetadata().isPropertyInherited(property.name)) {\n                    continue;\n                }\n                if (style.parentRule && style.parentRule.isUserAgent()) {\n                    continue;\n                }\n                if (cascade.propertyState(property) !== \"Active\" /* SDK.CSSMatchedStyles.PropertyState.ACTIVE */) {\n                    continue;\n                }\n                lines.push(`${indent}${property.name}: ${property.value};`);\n            }\n        }\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(lines.join('\\n'));\n    }\n    highlightSearchResultsInternal() {\n        this.hideSearchHighlights();\n        if (!this.searchQuery) {\n            return;\n        }\n        const text = this.listItemElement.textContent || '';\n        const regexObject = Platform.StringUtilities.createPlainTextSearchRegex(this.searchQuery, 'gi');\n        const matchRanges = [];\n        let match = regexObject.exec(text);\n        while (match) {\n            matchRanges.push(new TextUtils.TextRange.SourceRange(match.index, match[0].length));\n            match = regexObject.exec(text);\n        }\n        // Fall back for XPath, etc. matches.\n        if (!matchRanges.length) {\n            matchRanges.push(new TextUtils.TextRange.SourceRange(0, text.length));\n        }\n        this.#highlights = Highlighting.HighlightManager.HighlightManager.instance().highlightOrderedTextRanges(this.listItemElement, matchRanges);\n    }\n    editAsHTML() {\n        const promise = Common.Revealer.reveal(this.node());\n        void promise.then(() => {\n            const action = UI.ActionRegistry.ActionRegistry.instance().getAction('elements.edit-as-html');\n            return action.execute();\n        });\n    }\n    // TODO: add unit tests for adorner-related methods after component and TypeScript works are done\n    adorn({ name }, content) {\n        let adornerContent = content;\n        if (!adornerContent) {\n            adornerContent = document.createElement('span');\n            adornerContent.textContent = name;\n        }\n        const adorner = new Adorners.Adorner.Adorner();\n        adorner.data = {\n            name,\n            content: adornerContent,\n            jslogContext: name,\n        };\n        if (isOpeningTag(this.tagTypeContext)) {\n            this.tagTypeContext.adorners.push(adorner);\n            ElementsPanel.instance().registerAdorner(adorner);\n            this.updateAdorners(this.tagTypeContext);\n        }\n        return adorner;\n    }\n    adornSlot({ name }, context) {\n        const linkIcon = new IconButton.Icon.Icon();\n        linkIcon.name = 'select-element';\n        const slotText = document.createElement('span');\n        slotText.textContent = name;\n        const adornerContent = document.createElement('span');\n        adornerContent.append(linkIcon);\n        adornerContent.append(slotText);\n        adornerContent.classList.add('adorner-with-icon');\n        const adorner = new Adorners.Adorner.Adorner();\n        adorner.data = {\n            name,\n            content: adornerContent,\n            jslogContext: 'slot',\n        };\n        context.adorners.push(adorner);\n        ElementsPanel.instance().registerAdorner(adorner);\n        this.updateAdorners(context);\n        return adorner;\n    }\n    adornMedia({ name }) {\n        const adornerContent = document.createElement('span');\n        adornerContent.textContent = name;\n        adornerContent.classList.add('adorner-with-icon');\n        const linkIcon = new IconButton.Icon.Icon();\n        linkIcon.name = 'select-element';\n        adornerContent.append(linkIcon);\n        const adorner = new Adorners.Adorner.Adorner();\n        adorner.data = {\n            name,\n            content: adornerContent,\n            jslogContext: 'media',\n        };\n        if (isOpeningTag(this.tagTypeContext)) {\n            this.tagTypeContext.adorners.push(adorner);\n            ElementsPanel.instance().registerAdorner(adorner);\n            this.updateAdorners(this.tagTypeContext);\n        }\n        return adorner;\n    }\n    removeAdorner(adornerToRemove, context) {\n        const adorners = context.adorners;\n        ElementsPanel.instance().deregisterAdorner(adornerToRemove);\n        adornerToRemove.remove();\n        for (let i = 0; i < adorners.length; ++i) {\n            if (adorners[i] === adornerToRemove) {\n                adorners.splice(i, 1);\n                this.updateAdorners(context);\n                return;\n            }\n        }\n    }\n    removeAllAdorners() {\n        if (isOpeningTag(this.tagTypeContext)) {\n            for (const adorner of this.tagTypeContext.adorners) {\n                ElementsPanel.instance().deregisterAdorner(adorner);\n                adorner.remove();\n            }\n            this.tagTypeContext.adorners = [];\n            this.updateAdorners(this.tagTypeContext);\n        }\n    }\n    updateAdorners(context) {\n        void context.adornersThrottler.schedule(this.updateAdornersInternal.bind(null, context));\n    }\n    updateAdornersInternal(context) {\n        const adornerContainer = context.adornerContainer;\n        if (!adornerContainer) {\n            return Promise.resolve();\n        }\n        const adorners = context.adorners;\n        if (adorners.length === 0) {\n            adornerContainer.classList.add('hidden');\n            return Promise.resolve();\n        }\n        adorners.sort(adornerComparator);\n        adornerContainer.removeChildren();\n        for (const adorner of adorners) {\n            adornerContainer.appendChild(adorner);\n        }\n        adornerContainer.classList.remove('hidden');\n        return Promise.resolve();\n    }\n    async updateStyleAdorners() {\n        if (!isOpeningTag(this.tagTypeContext)) {\n            return;\n        }\n        const node = this.node();\n        const nodeId = node.id;\n        if (node.nodeType() === Node.COMMENT_NODE || node.nodeType() === Node.DOCUMENT_FRAGMENT_NODE ||\n            node.nodeType() === Node.TEXT_NODE || nodeId === undefined) {\n            return;\n        }\n        const styles = await node.domModel().cssModel().getComputedStyle(nodeId);\n        for (const styleAdorner of this.tagTypeContext.styleAdorners) {\n            this.removeAdorner(styleAdorner, this.tagTypeContext);\n        }\n        this.tagTypeContext.styleAdorners = [];\n        if (!styles) {\n            return;\n        }\n        const display = styles.get('display');\n        const isGrid = display === 'grid' || display === 'inline-grid';\n        const isFlex = display === 'flex' || display === 'inline-flex';\n        const isSubgrid = (isGrid &&\n            (styles.get('grid-template-columns')?.startsWith('subgrid') ||\n                styles.get('grid-template-rows')?.startsWith('subgrid'))) ??\n            false;\n        const containerType = styles.get('container-type');\n        const contain = styles.get('contain');\n        const isContainer = SDK.CSSContainerQuery.getQueryAxis(`${containerType} ${contain}`) !== \"\" /* SDK.CSSContainerQuery.QueryAxis.NONE */;\n        if (isGrid) {\n            this.pushGridAdorner(this.tagTypeContext, isSubgrid);\n        }\n        if (isFlex) {\n            this.pushFlexAdorner(this.tagTypeContext);\n        }\n        if (styles.get('scroll-snap-type') && styles.get('scroll-snap-type') !== 'none') {\n            this.pushScrollSnapAdorner(this.tagTypeContext);\n        }\n        if (isContainer) {\n            this.pushContainerAdorner(this.tagTypeContext);\n        }\n        if (node.isMediaNode()) {\n            this.pushMediaAdorner(this.tagTypeContext);\n        }\n    }\n    pushGridAdorner(context, isSubgrid) {\n        const node = this.node();\n        const nodeId = node.id;\n        if (!nodeId) {\n            return;\n        }\n        const config = ElementsComponents.AdornerManager.getRegisteredAdorner(isSubgrid ? ElementsComponents.AdornerManager.RegisteredAdorners.SUBGRID :\n            ElementsComponents.AdornerManager.RegisteredAdorners.GRID);\n        const adorner = this.adorn(config);\n        adorner.classList.add('grid');\n        const onClick = (() => {\n            if (adorner.isActive()) {\n                node.domModel().overlayModel().highlightGridInPersistentOverlay(nodeId);\n            }\n            else {\n                node.domModel().overlayModel().hideGridInPersistentOverlay(nodeId);\n            }\n        });\n        adorner.addInteraction(onClick, {\n            isToggle: true,\n            shouldPropagateOnKeydown: false,\n            ariaLabelDefault: i18nString(UIStrings.enableGridMode),\n            ariaLabelActive: i18nString(UIStrings.disableGridMode),\n        });\n        node.domModel().overlayModel().addEventListener(\"PersistentGridOverlayStateChanged\" /* SDK.OverlayModel.Events.PERSISTENT_GRID_OVERLAY_STATE_CHANGED */, event => {\n            const { nodeId: eventNodeId, enabled } = event.data;\n            if (eventNodeId !== nodeId) {\n                return;\n            }\n            adorner.toggle(enabled);\n        });\n        context.styleAdorners.push(adorner);\n        if (node.domModel().overlayModel().isHighlightedGridInPersistentOverlay(nodeId)) {\n            adorner.toggle(true);\n        }\n    }\n    pushScrollSnapAdorner(context) {\n        const node = this.node();\n        const nodeId = node.id;\n        if (!nodeId) {\n            return;\n        }\n        const config = ElementsComponents.AdornerManager.getRegisteredAdorner(ElementsComponents.AdornerManager.RegisteredAdorners.SCROLL_SNAP);\n        const adorner = this.adorn(config);\n        adorner.classList.add('scroll-snap');\n        const onClick = (() => {\n            const model = node.domModel().overlayModel();\n            if (adorner.isActive()) {\n                model.highlightScrollSnapInPersistentOverlay(nodeId);\n            }\n            else {\n                model.hideScrollSnapInPersistentOverlay(nodeId);\n            }\n        });\n        adorner.addInteraction(onClick, {\n            isToggle: true,\n            shouldPropagateOnKeydown: false,\n            ariaLabelDefault: i18nString(UIStrings.enableScrollSnap),\n            ariaLabelActive: i18nString(UIStrings.disableScrollSnap),\n        });\n        node.domModel().overlayModel().addEventListener(\"PersistentScrollSnapOverlayStateChanged\" /* SDK.OverlayModel.Events.PERSISTENT_SCROLL_SNAP_OVERLAY_STATE_CHANGED */, event => {\n            const { nodeId: eventNodeId, enabled } = event.data;\n            if (eventNodeId !== nodeId) {\n                return;\n            }\n            adorner.toggle(enabled);\n        });\n        context.styleAdorners.push(adorner);\n        if (node.domModel().overlayModel().isHighlightedScrollSnapInPersistentOverlay(nodeId)) {\n            adorner.toggle(true);\n        }\n    }\n    pushFlexAdorner(context) {\n        const node = this.node();\n        const nodeId = node.id;\n        if (!nodeId) {\n            return;\n        }\n        const config = ElementsComponents.AdornerManager.getRegisteredAdorner(ElementsComponents.AdornerManager.RegisteredAdorners.FLEX);\n        const adorner = this.adorn(config);\n        adorner.classList.add('flex');\n        const onClick = (() => {\n            const model = node.domModel().overlayModel();\n            if (adorner.isActive()) {\n                model.highlightFlexContainerInPersistentOverlay(nodeId);\n            }\n            else {\n                model.hideFlexContainerInPersistentOverlay(nodeId);\n            }\n        });\n        adorner.addInteraction(onClick, {\n            isToggle: true,\n            shouldPropagateOnKeydown: false,\n            ariaLabelDefault: i18nString(UIStrings.enableFlexMode),\n            ariaLabelActive: i18nString(UIStrings.disableFlexMode),\n        });\n        node.domModel().overlayModel().addEventListener(\"PersistentFlexContainerOverlayStateChanged\" /* SDK.OverlayModel.Events.PERSISTENT_FLEX_CONTAINER_OVERLAY_STATE_CHANGED */, event => {\n            const { nodeId: eventNodeId, enabled } = event.data;\n            if (eventNodeId !== nodeId) {\n                return;\n            }\n            adorner.toggle(enabled);\n        });\n        context.styleAdorners.push(adorner);\n        if (node.domModel().overlayModel().isHighlightedFlexContainerInPersistentOverlay(nodeId)) {\n            adorner.toggle(true);\n        }\n    }\n    pushContainerAdorner(context) {\n        const node = this.node();\n        const nodeId = node.id;\n        if (!nodeId) {\n            return;\n        }\n        const config = ElementsComponents.AdornerManager.getRegisteredAdorner(ElementsComponents.AdornerManager.RegisteredAdorners.CONTAINER);\n        const adorner = this.adorn(config);\n        adorner.classList.add('container');\n        const onClick = (() => {\n            const model = node.domModel().overlayModel();\n            if (adorner.isActive()) {\n                model.highlightContainerQueryInPersistentOverlay(nodeId);\n            }\n            else {\n                model.hideContainerQueryInPersistentOverlay(nodeId);\n            }\n        });\n        adorner.addInteraction(onClick, {\n            isToggle: true,\n            shouldPropagateOnKeydown: false,\n            ariaLabelDefault: i18nString(UIStrings.enableScrollSnap),\n            ariaLabelActive: i18nString(UIStrings.disableScrollSnap),\n        });\n        node.domModel().overlayModel().addEventListener(\"PersistentContainerQueryOverlayStateChanged\" /* SDK.OverlayModel.Events.PERSISTENT_CONTAINER_QUERY_OVERLAY_STATE_CHANGED */, event => {\n            const { nodeId: eventNodeId, enabled } = event.data;\n            if (eventNodeId !== nodeId) {\n                return;\n            }\n            adorner.toggle(enabled);\n        });\n        context.styleAdorners.push(adorner);\n        if (node.domModel().overlayModel().isHighlightedContainerQueryInPersistentOverlay(nodeId)) {\n            adorner.toggle(true);\n        }\n    }\n    pushMediaAdorner(context) {\n        const node = this.node();\n        const nodeId = node.id;\n        if (!nodeId) {\n            return;\n        }\n        const config = ElementsComponents.AdornerManager.getRegisteredAdorner(ElementsComponents.AdornerManager.RegisteredAdorners.MEDIA);\n        const adorner = this.adornMedia(config);\n        adorner.classList.add('media');\n        const onClick = (() => {\n            void UI.ViewManager.ViewManager.instance().showView('medias');\n        });\n        adorner.addInteraction(onClick, {\n            isToggle: false,\n            shouldPropagateOnKeydown: false,\n            ariaLabelDefault: i18nString(UIStrings.openMediaPanel),\n            ariaLabelActive: i18nString(UIStrings.openMediaPanel),\n        });\n        context.styleAdorners.push(adorner);\n    }\n    updateScrollAdorner() {\n        if (!isOpeningTag(this.tagTypeContext)) {\n            return;\n        }\n        const scrollAdorner = this.tagTypeContext.adorners.find(x => x.name === 'scroll');\n        // Check if the node is scrollable, or if it's the <html> element and the document is scrollable because the top-level document (#document) doesn't have a corresponding tree element.\n        const needsAScrollAdorner = (this.node().nodeName() === 'HTML' && this.node().ownerDocument?.isScrollable()) ||\n            (this.node().nodeName() !== '#document' && this.node().isScrollable());\n        if (needsAScrollAdorner && !scrollAdorner) {\n            this.pushScrollAdorner();\n        }\n        else if (!needsAScrollAdorner && scrollAdorner) {\n            this.removeAdorner(scrollAdorner, this.tagTypeContext);\n        }\n    }\n    pushScrollAdorner() {\n        const config = ElementsComponents.AdornerManager.getRegisteredAdorner(ElementsComponents.AdornerManager.RegisteredAdorners.SCROLL);\n        const adorner = this.adorn(config);\n        UI.Tooltip.Tooltip.install(adorner, i18nString(UIStrings.elementHasScrollableOverflow));\n        adorner.classList.add('scroll');\n    }\n}\nexport const InitialChildrenLimit = 500;\n// A union of HTML4 and HTML5-Draft elements that explicitly\n// or implicitly (for HTML5) forbid the closing tag.\nexport const ForbiddenClosingTagElements = new Set([\n    'area', 'base', 'basefont', 'br', 'canvas', 'col', 'command', 'embed', 'frame', 'hr',\n    'img', 'input', 'keygen', 'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr',\n]);\n// These tags we do not allow editing their tag name.\nexport const EditTagBlocklist = new Set(['html', 'head', 'body']);\nexport function adornerComparator(adornerA, adornerB) {\n    const compareCategories = ElementsComponents.AdornerManager.compareAdornerNamesByCategory(adornerB.name, adornerB.name);\n    if (compareCategories === 0) {\n        return adornerA.name.localeCompare(adornerB.name);\n    }\n    return compareCategories;\n}\n// As a privacy measure we are logging elements tree outline as a flat list where every tree item is a\n// child of a tree outline.\nfunction loggingParentProvider(e) {\n    const treeElement = UI.TreeOutline.TreeElement.getTreeElementBylistItemNode(e);\n    return treeElement?.treeOutline?.contentElement;\n}\nVisualLogging.registerParentProvider('elementsTreeOutline', loggingParentProvider);\n//# sourceMappingURL=ElementsTreeElement.js.map","// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport { ElementsTreeElement } from './ElementsTreeElement.js';\nimport { ElementsTreeOutline } from './ElementsTreeOutline.js';\nexport class ElementsTreeElementHighlighter {\n    throttler;\n    treeOutline;\n    currentHighlightedElement;\n    alreadyExpandedParentElement;\n    pendingHighlightNode;\n    isModifyingTreeOutline;\n    constructor(treeOutline, throttler) {\n        this.throttler = throttler;\n        this.treeOutline = treeOutline;\n        this.treeOutline.addEventListener(UI.TreeOutline.Events.ElementExpanded, this.clearState, this);\n        this.treeOutline.addEventListener(UI.TreeOutline.Events.ElementCollapsed, this.clearState, this);\n        this.treeOutline.addEventListener(ElementsTreeOutline.Events.SelectedNodeChanged, this.clearState, this);\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.OverlayModel.OverlayModel, \"HighlightNodeRequested\" /* SDK.OverlayModel.Events.HIGHLIGHT_NODE_REQUESTED */, this.highlightNode, this, { scoped: true });\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.OverlayModel.OverlayModel, \"InspectModeWillBeToggled\" /* SDK.OverlayModel.Events.INSPECT_MODE_WILL_BE_TOGGLED */, this.clearState, this, { scoped: true });\n        this.currentHighlightedElement = null;\n        this.alreadyExpandedParentElement = null;\n        this.pendingHighlightNode = null;\n        this.isModifyingTreeOutline = false;\n    }\n    highlightNode(event) {\n        if (!Common.Settings.Settings.instance().moduleSetting('highlight-node-on-hover-in-overlay').get()) {\n            return;\n        }\n        const domNode = event.data;\n        void this.throttler.schedule(async () => {\n            this.highlightNodeInternal(this.pendingHighlightNode);\n            this.pendingHighlightNode = null;\n        });\n        this.pendingHighlightNode =\n            this.treeOutline === ElementsTreeOutline.forDOMModel(domNode.domModel()) ? domNode : null;\n    }\n    highlightNodeInternal(node) {\n        this.isModifyingTreeOutline = true;\n        let treeElement = null;\n        if (this.currentHighlightedElement) {\n            let currentTreeElement = this.currentHighlightedElement;\n            while (currentTreeElement && currentTreeElement !== this.alreadyExpandedParentElement) {\n                if (currentTreeElement.expanded) {\n                    currentTreeElement.collapse();\n                }\n                const parent = currentTreeElement.parent;\n                currentTreeElement = parent instanceof ElementsTreeElement ? parent : null;\n            }\n        }\n        this.currentHighlightedElement = null;\n        this.alreadyExpandedParentElement = null;\n        if (node) {\n            let deepestExpandedParent = node;\n            const treeElementByNode = this.treeOutline.treeElementByNode;\n            const treeIsNotExpanded = (deepestExpandedParent) => {\n                const element = treeElementByNode.get(deepestExpandedParent);\n                return element ? !element.expanded : true;\n            };\n            while (deepestExpandedParent && treeIsNotExpanded(deepestExpandedParent)) {\n                deepestExpandedParent = deepestExpandedParent.parentNode;\n            }\n            this.alreadyExpandedParentElement =\n                deepestExpandedParent ? treeElementByNode.get(deepestExpandedParent) : this.treeOutline.rootElement();\n            treeElement = this.treeOutline.createTreeElementFor(node);\n        }\n        this.currentHighlightedElement = treeElement;\n        this.treeOutline.setHoverEffect(treeElement);\n        if (treeElement) {\n            treeElement.reveal(true);\n        }\n        this.isModifyingTreeOutline = false;\n    }\n    clearState() {\n        if (this.isModifyingTreeOutline) {\n            return;\n        }\n        this.currentHighlightedElement = null;\n        this.alreadyExpandedParentElement = null;\n        this.pendingHighlightNode = null;\n    }\n}\n//# sourceMappingURL=ElementsTreeElementHighlighter.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/**\n * Copyright 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n.metrics {\n  padding: 8px;\n  font-size: 10px;\n  text-align: center;\n  white-space: nowrap;\n  min-height: var(--metrics-height);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  /* Colors in the metrics panel need special treatment. The color of the\n  various box-model regions (margin, border, padding, content) are set in JS\n  by using the ones from the in-page overlay. They, therefore, do not depend on\n  the theme.\n  To ensure proper contrast between those colors and the 1px borders between\n  them, we use these local variables, not theme variables. */\n  --override-box-model-separator-color: var(--ref-palette-neutral0);\n  --override-box-model-text-color: var(--ref-palette-neutral10);\n}\n\n:host {\n  --metrics-height: 190px;\n\n  height: var(--metrics-height);\n  contain: strict;\n}\n\n:host(.invisible) {\n  visibility: hidden;\n  height: 0;\n}\n\n:host(.collapsed) {\n  visibility: collapse;\n  height: 0;\n}\n/* The font we use on Windows takes up more vertical space, so adjust\n * the height of the metrics sidebar pane accordingly.\n */\n:host-context(.platform-windows) {\n  --metrics-height: 214px;\n}\n\n.metrics .label {\n  position: absolute;\n  font-size: 10px;\n  left: 4px;\n}\n\n.metrics .position {\n  /* This border is different from the ones displayed between the box-moodel\n  regions because it is displayed against the pane background, so needs to be\n  visible in both light and dark theme. We therefore use a theme variable. */\n  border: 1px var(--sys-color-token-subtle) dotted;\n  background-color: var(--sys-color-cdt-base-container);\n  display: inline-block;\n  text-align: center;\n  padding: 3px;\n  margin: 3px;\n  position: relative;\n}\n\n.metrics .margin {\n  border: 1px dashed var(--override-box-model-separator-color);\n  background-color: var(--sys-color-cdt-base-container);\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  padding: 3px 6px;\n  margin: 3px;\n  position: relative;\n}\n\n.metrics .border {\n  border: 1px solid var(--override-box-model-separator-color);\n  background-color: var(--sys-color-cdt-base-container);\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  padding: 3px 6px;\n  margin: 3px;\n  position: relative;\n}\n\n.metrics .padding {\n  border: 1px dashed var(--override-box-model-separator-color);\n  background-color: var(--sys-color-cdt-base-container);\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  padding: 3px 6px;\n  margin: 3px;\n  position: relative;\n  min-width: 120px;\n}\n\n.metrics .content {\n  position: static;\n  border: 1px solid var(--override-box-model-separator-color);\n  background-color: var(--sys-color-cdt-base-container);\n  display: inline-block;\n  text-align: center;\n  vertical-align: middle;\n  padding: 3px;\n  margin: 3px;\n  min-width: 80px;\n  overflow: visible;\n}\n\n.metrics .content span {\n  display: inline-block;\n}\n\n.metrics .editing {\n  position: relative;\n  z-index: 100;\n  cursor: text;\n}\n\n.metrics .left {\n  display: inline-block;\n  vertical-align: middle;\n}\n\n.metrics .right {\n  display: inline-block;\n  vertical-align: middle;\n}\n\n.metrics .top {\n  display: inline-block;\n}\n\n.metrics .bottom {\n  display: inline-block;\n}\n\n/* In dark theme, when a specific box-model region is hovered, the other regions\nlose their background colors, so we need to give them a lighter border color so\nthat region separators remain visible against the dark panel background. */\n:host-context(.theme-with-dark-background) .margin:hover,\n:host-context(.theme-with-dark-background) .margin:hover * {\n  border-color: var(--sys-color-token-subtle);\n}\n\n/* With the exception of the position labels, labels are displayed on top of\nthe box-model region colors, so need to use the following color to remain\nvisible. */\n.metrics .highlighted:not(.position) > *:not(.border):not(.padding):not(.content) {\n  color: var(--override-box-model-text-color);\n}\n\n/*# sourceURL=metricsSidebarPane.css */\n`);\n\nexport default styles;\n","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { ElementsSidebarPane } from './ElementsSidebarPane.js';\nimport metricsSidebarPaneStyles from './metricsSidebarPane.css.js';\nexport class MetricsSidebarPane extends ElementsSidebarPane {\n    originalPropertyData;\n    previousPropertyDataCandidate;\n    inlineStyle;\n    highlightMode;\n    boxElements;\n    isEditingMetrics;\n    constructor() {\n        super();\n        this.originalPropertyData = null;\n        this.previousPropertyDataCandidate = null;\n        this.inlineStyle = null;\n        this.highlightMode = '';\n        this.boxElements = [];\n        this.contentElement.setAttribute('jslog', `${VisualLogging.pane('styles-metrics')}`);\n    }\n    doUpdate() {\n        // \"style\" attribute might have changed. Update metrics unless they are being edited\n        // (if a CSS property is added, a StyleSheetChanged event is dispatched).\n        if (this.isEditingMetrics) {\n            return Promise.resolve();\n        }\n        // FIXME: avoid updates of a collapsed pane.\n        const node = this.node();\n        const cssModel = this.cssModel();\n        if (!node || node.nodeType() !== Node.ELEMENT_NODE || !cssModel) {\n            this.contentElement.removeChildren();\n            this.element.classList.add('collapsed');\n            return Promise.resolve();\n        }\n        function callback(style) {\n            if (!style || this.node() !== node) {\n                return;\n            }\n            this.updateMetrics(style);\n        }\n        if (!node.id) {\n            return Promise.resolve();\n        }\n        const promises = [\n            cssModel.getComputedStyle(node.id).then(callback.bind(this)),\n            cssModel.getInlineStyles(node.id).then(inlineStyleResult => {\n                if (inlineStyleResult && this.node() === node) {\n                    this.inlineStyle = inlineStyleResult.inlineStyle;\n                }\n            }),\n        ];\n        return Promise.all(promises);\n    }\n    onCSSModelChanged() {\n        this.update();\n    }\n    /**\n     * Toggle the visibility of the Metrics pane. This toggle allows external\n     * callers to control the visibility of this pane, but toggling this on does\n     * not guarantee the pane will always show up, because the pane's visibility\n     * is also controlled by the internal condition that style cannot be empty.\n     */\n    toggleVisibility(isVisible) {\n        this.element.classList.toggle('invisible', !isVisible);\n    }\n    getPropertyValueAsPx(style, propertyName) {\n        const propertyValue = style.get(propertyName);\n        if (!propertyValue) {\n            return 0;\n        }\n        return Number(propertyValue.replace(/px$/, '') || 0);\n    }\n    getBox(computedStyle, componentName) {\n        const suffix = componentName === 'border' ? '-width' : '';\n        const left = this.getPropertyValueAsPx(computedStyle, componentName + '-left' + suffix);\n        const top = this.getPropertyValueAsPx(computedStyle, componentName + '-top' + suffix);\n        const right = this.getPropertyValueAsPx(computedStyle, componentName + '-right' + suffix);\n        const bottom = this.getPropertyValueAsPx(computedStyle, componentName + '-bottom' + suffix);\n        return { left, top, right, bottom };\n    }\n    highlightDOMNode(showHighlight, mode, event) {\n        event.consume();\n        const node = this.node();\n        if (showHighlight && node) {\n            if (this.highlightMode === mode) {\n                return;\n            }\n            this.highlightMode = mode;\n            node.highlight(mode);\n        }\n        else {\n            this.highlightMode = '';\n            SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n        }\n        for (const { element, name, backgroundColor } of this.boxElements) {\n            const shouldHighlight = !node || mode === 'all' || name === mode;\n            element.style.backgroundColor = shouldHighlight ? backgroundColor : '';\n            element.classList.toggle('highlighted', shouldHighlight);\n        }\n    }\n    updateMetrics(style) {\n        // Updating with computed style.\n        const metricsElement = document.createElement('div');\n        metricsElement.className = 'metrics';\n        const self = this;\n        function createBoxPartElement(style, name, side, suffix) {\n            const element = document.createElement('div');\n            element.className = side;\n            const propertyName = (name !== 'position' ? name + '-' : '') + side + suffix;\n            let value = style.get(propertyName);\n            if (value === undefined) {\n                return element;\n            }\n            if (value === '' || (name !== 'position' && value === '0px')) {\n                value = '\\u2012';\n            }\n            else if (name === 'position' && value === 'auto') {\n                value = '\\u2012';\n            }\n            value = value.replace(/px$/, '');\n            value = Platform.NumberUtilities.toFixedIfFloating(value);\n            element.textContent = value;\n            element.setAttribute('jslog', `${VisualLogging.value(propertyName).track({\n                dblclick: true,\n                keydown: 'Enter|Escape|ArrowUp|ArrowDown|PageUp|PageDown',\n                change: true,\n            })}`);\n            element.addEventListener('dblclick', this.startEditing.bind(this, element, name, propertyName, style), false);\n            return element;\n        }\n        function getContentAreaWidthPx(style) {\n            let width = style.get('width');\n            if (!width) {\n                return '';\n            }\n            width = width.replace(/px$/, '');\n            const widthValue = Number(width);\n            if (!isNaN(widthValue) && style.get('box-sizing') === 'border-box') {\n                const borderBox = self.getBox(style, 'border');\n                const paddingBox = self.getBox(style, 'padding');\n                width = (widthValue - borderBox.left - borderBox.right - paddingBox.left - paddingBox.right).toString();\n            }\n            return Platform.NumberUtilities.toFixedIfFloating(width);\n        }\n        function getContentAreaHeightPx(style) {\n            let height = style.get('height');\n            if (!height) {\n                return '';\n            }\n            height = height.replace(/px$/, '');\n            const heightValue = Number(height);\n            if (!isNaN(heightValue) && style.get('box-sizing') === 'border-box') {\n                const borderBox = self.getBox(style, 'border');\n                const paddingBox = self.getBox(style, 'padding');\n                height = (heightValue - borderBox.top - borderBox.bottom - paddingBox.top - paddingBox.bottom).toString();\n            }\n            return Platform.NumberUtilities.toFixedIfFloating(height);\n        }\n        // Display types for which margin is ignored.\n        const noMarginDisplayType = new Set([\n            'table-cell',\n            'table-column',\n            'table-column-group',\n            'table-footer-group',\n            'table-header-group',\n            'table-row',\n            'table-row-group',\n        ]);\n        // Display types for which padding is ignored.\n        const noPaddingDisplayType = new Set([\n            'table-column',\n            'table-column-group',\n            'table-footer-group',\n            'table-header-group',\n            'table-row',\n            'table-row-group',\n        ]);\n        // Position types for which top, left, bottom and right are ignored.\n        const noPositionType = new Set(['static']);\n        const boxes = ['content', 'padding', 'border', 'margin', 'position'];\n        const boxColors = [\n            Common.Color.PageHighlight.Content,\n            Common.Color.PageHighlight.Padding,\n            Common.Color.PageHighlight.Border,\n            Common.Color.PageHighlight.Margin,\n            Common.Color.Legacy.fromRGBA([0, 0, 0, 0]),\n        ];\n        const boxLabels = ['content', 'padding', 'border', 'margin', 'position'];\n        let previousBox = null;\n        this.boxElements = [];\n        for (let i = 0; i < boxes.length; ++i) {\n            const name = boxes[i];\n            const display = style.get('display');\n            const position = style.get('position');\n            if (!display || !position) {\n                continue;\n            }\n            if (name === 'margin' && noMarginDisplayType.has(display)) {\n                continue;\n            }\n            if (name === 'padding' && noPaddingDisplayType.has(display)) {\n                continue;\n            }\n            if (name === 'position' && noPositionType.has(position)) {\n                continue;\n            }\n            const boxElement = document.createElement('div');\n            boxElement.className = `${name} highlighted`;\n            const backgroundColor = boxColors[i].asString(\"rgba\" /* Common.Color.Format.RGBA */) || '';\n            boxElement.style.backgroundColor = backgroundColor;\n            boxElement.setAttribute('jslog', `${VisualLogging.metricsBox().context(name).track({ hover: true })}`);\n            boxElement.addEventListener('mouseover', this.highlightDOMNode.bind(this, true, name === 'position' ? 'all' : name), false);\n            this.boxElements.push({ element: boxElement, name, backgroundColor });\n            if (name === 'content') {\n                const widthElement = document.createElement('span');\n                widthElement.textContent = getContentAreaWidthPx(style);\n                widthElement.addEventListener('dblclick', this.startEditing.bind(this, widthElement, 'width', 'width', style), false);\n                widthElement.setAttribute('jslog', `${VisualLogging.value('width').track({\n                    dblclick: true,\n                    keydown: 'Enter|Escape|ArrowUp|ArrowDown|PageUp|PageDown',\n                    change: true,\n                })}`);\n                const heightElement = document.createElement('span');\n                heightElement.textContent = getContentAreaHeightPx(style);\n                heightElement.addEventListener('dblclick', this.startEditing.bind(this, heightElement, 'height', 'height', style), false);\n                heightElement.setAttribute('jslog', `${VisualLogging.value('height').track({\n                    dblclick: true,\n                    keydown: 'Enter|Escape|ArrowUp|ArrowDown|PageUp|PageDown',\n                    change: true,\n                })}`);\n                const timesElement = document.createElement('span');\n                timesElement.textContent = ' × ';\n                boxElement.appendChild(widthElement);\n                boxElement.appendChild(timesElement);\n                boxElement.appendChild(heightElement);\n            }\n            else {\n                const suffix = (name === 'border' ? '-width' : '');\n                const labelElement = document.createElement('div');\n                labelElement.className = 'label';\n                labelElement.textContent = boxLabels[i];\n                boxElement.appendChild(labelElement);\n                boxElement.appendChild(createBoxPartElement.call(this, style, name, 'top', suffix));\n                boxElement.appendChild(document.createElement('br'));\n                boxElement.appendChild(createBoxPartElement.call(this, style, name, 'left', suffix));\n                if (previousBox) {\n                    boxElement.appendChild(previousBox);\n                }\n                boxElement.appendChild(createBoxPartElement.call(this, style, name, 'right', suffix));\n                boxElement.appendChild(document.createElement('br'));\n                boxElement.appendChild(createBoxPartElement.call(this, style, name, 'bottom', suffix));\n            }\n            previousBox = boxElement;\n        }\n        metricsElement.appendChild(previousBox);\n        metricsElement.addEventListener('mouseover', this.highlightDOMNode.bind(this, false, 'all'), false);\n        metricsElement.addEventListener('mouseleave', this.highlightDOMNode.bind(this, false, 'all'), false);\n        this.contentElement.removeChildren();\n        this.contentElement.appendChild(metricsElement);\n        this.element.classList.remove('collapsed');\n    }\n    startEditing(targetElement, box, styleProperty, computedStyle) {\n        if (UI.UIUtils.isBeingEdited(targetElement)) {\n            return;\n        }\n        const context = { box, styleProperty, computedStyle, keyDownHandler: () => { } };\n        const boundKeyDown = this.handleKeyDown.bind(this, context);\n        context.keyDownHandler = boundKeyDown;\n        targetElement.addEventListener('keydown', boundKeyDown, false);\n        this.isEditingMetrics = true;\n        const config = new UI.InplaceEditor.Config(this.editingCommitted.bind(this), this.editingCancelled.bind(this), context);\n        UI.InplaceEditor.InplaceEditor.startEditing(targetElement, config);\n        const selection = targetElement.getComponentSelection();\n        selection && selection.selectAllChildren(targetElement);\n    }\n    handleKeyDown(context, event) {\n        const element = event.currentTarget;\n        function finishHandler(originalValue, replacementString) {\n            this.applyUserInput(element, replacementString, originalValue, context, false);\n        }\n        function customNumberHandler(prefix, number, suffix) {\n            if (context.styleProperty !== 'margin' && number < 0) {\n                number = 0;\n            }\n            return prefix + number + suffix;\n        }\n        UI.UIUtils.handleElementValueModifications(event, element, finishHandler.bind(this), undefined, customNumberHandler);\n    }\n    editingEnded(element, context) {\n        this.originalPropertyData = null;\n        this.previousPropertyDataCandidate = null;\n        element.removeEventListener('keydown', context.keyDownHandler, false);\n        delete this.isEditingMetrics;\n    }\n    editingCancelled(element, context) {\n        if (this.inlineStyle) {\n            if (!this.originalPropertyData) {\n                // An added property, remove the last property in the style.\n                const pastLastSourcePropertyIndex = this.inlineStyle.pastLastSourcePropertyIndex();\n                if (pastLastSourcePropertyIndex) {\n                    void this.inlineStyle.allProperties()[pastLastSourcePropertyIndex - 1].setText('', false);\n                }\n            }\n            else {\n                void this.inlineStyle.allProperties()[this.originalPropertyData.index].setText(this.originalPropertyData.propertyText || '', false);\n            }\n        }\n        this.editingEnded(element, context);\n        this.update();\n    }\n    applyUserInput(element, userInput, previousContent, context, commitEditor) {\n        if (!this.inlineStyle) {\n            // Element has no renderer.\n            return this.editingCancelled(element, context); // nothing changed, so cancel\n        }\n        if (commitEditor && userInput === previousContent) {\n            return this.editingCancelled(element, context);\n        } // nothing changed, so cancel\n        if (context.box !== 'position' && (!userInput || userInput === '\\u2012')) {\n            userInput = '0px';\n        }\n        else if (context.box === 'position' && (!userInput || userInput === '\\u2012')) {\n            userInput = 'auto';\n        }\n        userInput = userInput.toLowerCase();\n        // Append a \"px\" unit if the user input was just a number.\n        if (/^\\d+$/.test(userInput)) {\n            userInput += 'px';\n        }\n        const styleProperty = context.styleProperty;\n        const computedStyle = context.computedStyle;\n        if (computedStyle.get('box-sizing') === 'border-box' && (styleProperty === 'width' || styleProperty === 'height')) {\n            if (!userInput.match(/px$/)) {\n                Common.Console.Console.instance().error('For elements with box-sizing: border-box, only absolute content area dimensions can be applied');\n                return;\n            }\n            const borderBox = this.getBox(computedStyle, 'border');\n            const paddingBox = this.getBox(computedStyle, 'padding');\n            let userValuePx = Number(userInput.replace(/px$/, ''));\n            if (isNaN(userValuePx)) {\n                return;\n            }\n            if (styleProperty === 'width') {\n                userValuePx += borderBox.left + borderBox.right + paddingBox.left + paddingBox.right;\n            }\n            else {\n                userValuePx += borderBox.top + borderBox.bottom + paddingBox.top + paddingBox.bottom;\n            }\n            userInput = userValuePx + 'px';\n        }\n        this.previousPropertyDataCandidate = null;\n        const allProperties = this.inlineStyle.allProperties();\n        for (let i = 0; i < allProperties.length; ++i) {\n            const property = allProperties[i];\n            if (property.name !== context.styleProperty || !property.activeInStyle()) {\n                continue;\n            }\n            this.previousPropertyDataCandidate = property;\n            property.setValue(userInput, commitEditor, true, callback.bind(this));\n            return;\n        }\n        this.inlineStyle.appendProperty(context.styleProperty, userInput, callback.bind(this));\n        function callback(success) {\n            if (!success) {\n                return;\n            }\n            if (!this.originalPropertyData) {\n                this.originalPropertyData = this.previousPropertyDataCandidate;\n            }\n            if (this.highlightMode) {\n                const node = this.node();\n                if (!node) {\n                    return;\n                }\n                node.highlight(this.highlightMode);\n            }\n            if (commitEditor) {\n                this.update();\n            }\n        }\n    }\n    editingCommitted(element, userInput, previousContent, context) {\n        this.editingEnded(element, context);\n        this.applyUserInput(element, userInput, previousContent, context, true);\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([metricsSidebarPaneStyles]);\n    }\n}\n//# sourceMappingURL=MetricsSidebarPane.js.map","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Extensions from '../../models/extensions/extensions.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as TreeOutline from '../../ui/components/tree_outline/tree_outline.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { AccessibilityTreeView } from './AccessibilityTreeView.js';\nimport { ColorSwatchPopoverIcon } from './ColorSwatchPopoverIcon.js';\nimport * as ElementsComponents from './components/components.js';\nimport { ComputedStyleWidget } from './ComputedStyleWidget.js';\nimport elementsPanelStyles from './elementsPanel.css.js';\nimport { ElementsTreeElementHighlighter } from './ElementsTreeElementHighlighter.js';\nimport { ElementsTreeOutline } from './ElementsTreeOutline.js';\nimport { MetricsSidebarPane } from './MetricsSidebarPane.js';\nimport { StylesSidebarPane, } from './StylesSidebarPane.js';\nconst UIStrings = {\n    /**\n     * @description Placeholder text for the search box the Elements Panel. Selector refers to CSS\n     * selectors.\n     */\n    findByStringSelectorOrXpath: 'Find by string, selector, or `XPath`',\n    /**\n     * @description Button text for a button that takes the user to the Accessibility Tree View from the\n     * DOM tree view, in the Elements panel.\n     */\n    switchToAccessibilityTreeView: 'Switch to Accessibility Tree view',\n    /**\n     * @description Button text for a button that takes the user to the DOM tree view from the\n     * Accessibility Tree View, in the Elements panel.\n     */\n    switchToDomTreeView: 'Switch to DOM Tree view',\n    /**\n     * @description Tooltip for the the Computed Styles sidebar toggle in the Styles pane. Command to\n     * open/show the sidebar.\n     */\n    showComputedStylesSidebar: 'Show Computed Styles sidebar',\n    /**\n     * @description Tooltip for the the Computed Styles sidebar toggle in the Styles pane. Command to\n     * close/hide the sidebar.\n     */\n    hideComputedStylesSidebar: 'Hide Computed Styles sidebar',\n    /**\n     * @description Screen reader announcement when the computed styles sidebar is shown in the Elements panel.\n     */\n    computedStylesShown: 'Computed Styles sidebar shown',\n    /**\n     * @description Screen reader announcement when the computed styles sidebar is hidden in the Elements panel.\n     */\n    computedStylesHidden: 'Computed Styles sidebar hidden',\n    /**\n     * @description Title of a pane in the Elements panel that shows computed styles for the selected\n     * HTML element. Computed styles are the final, actual styles of the element, including all\n     * implicit and specified styles.\n     */\n    computed: 'Computed',\n    /**\n     * @description Title of a pane in the Elements panel that shows the CSS styles for the selected\n     * HTML element.\n     */\n    styles: 'Styles',\n    /**\n     * @description A context menu item to reveal a node in the DOM tree of the Elements Panel\n     */\n    revealInElementsPanel: 'Reveal in Elements panel',\n    /**\n     * @description Warning/error text displayed when a node cannot be found in the current page.\n     */\n    nodeCannotBeFoundInTheCurrent: 'Node cannot be found in the current page.',\n    /**\n     * @description Console warning when a user tries to reveal a non-node type Remote Object. A remote\n     * object is a JavaScript object that is not stored in DevTools, that DevTools has a connection to.\n     * It should correspond to a local node.\n     */\n    theRemoteObjectCouldNotBe: 'The remote object could not be resolved to a valid node.',\n    /**\n     * @description Console warning when the user tries to reveal a deferred DOM Node that resolves as\n     * null. A deferred DOM node is a node we know about but have not yet fetched from the backend (we\n     * defer the work until later).\n     */\n    theDeferredDomNodeCouldNotBe: 'The deferred `DOM` Node could not be resolved to a valid node.',\n    /**\n     * @description Text in Elements Panel of the Elements panel. Shows the current CSS Pseudo-classes\n     * applicable to the selected HTML element.\n     * @example {::after, ::before} PH1\n     */\n    elementStateS: 'Element state: {PH1}',\n    /**\n     * @description Accessible name for side panel toolbar.\n     */\n    sidePanelToolbar: 'Side panel toolbar',\n    /**\n     * @description Accessible name for side panel contents.\n     */\n    sidePanelContent: 'Side panel content',\n    /**\n     * @description Accessible name for the DOM tree explorer view.\n     */\n    domTreeExplorer: 'DOM tree explorer',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementsPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst createAccessibilityTreeToggleButton = (isActive) => {\n    const button = new Buttons.Button.Button();\n    const title = isActive ? i18nString(UIStrings.switchToDomTreeView) : i18nString(UIStrings.switchToAccessibilityTreeView);\n    button.data = {\n        active: isActive,\n        variant: \"toolbar\" /* Buttons.Button.Variant.TOOLBAR */,\n        iconUrl: new URL('../../Images/person.svg', import.meta.url).toString(),\n        title,\n        jslogContext: 'toggle-accessibility-tree',\n    };\n    button.tabIndex = 0;\n    button.classList.add('axtree-button');\n    if (isActive) {\n        button.classList.add('active');\n    }\n    return button;\n};\nlet elementsPanelInstance;\nexport class ElementsPanel extends UI.Panel.Panel {\n    splitWidget;\n    searchableViewInternal;\n    mainContainer;\n    domTreeContainer;\n    splitMode;\n    accessibilityTreeView;\n    breadcrumbs;\n    stylesWidget;\n    computedStyleWidget;\n    metricsWidget;\n    treeOutlines = new Set();\n    searchResults;\n    currentSearchResultIndex;\n    pendingNodeReveal;\n    adornerManager;\n    adornerSettingsPane;\n    adornersByName;\n    accessibilityTreeButton;\n    domTreeButton;\n    selectedNodeOnReset;\n    hasNonDefaultSelectedNode;\n    searchConfig;\n    omitDefaultSelection;\n    notFirstInspectElement;\n    sidebarPaneView;\n    stylesViewToReveal;\n    nodeInsertedTaskRunner = {\n        queue: Promise.resolve(),\n        run(task) {\n            this.queue = this.queue.then(task);\n        },\n    };\n    cssStyleTrackerByCSSModel;\n    constructor() {\n        super('elements');\n        this.splitWidget = new UI.SplitWidget.SplitWidget(true, true, 'elements-panel-split-view-state', 325, 325);\n        this.splitWidget.addEventListener(\"SidebarSizeChanged\" /* UI.SplitWidget.Events.SIDEBAR_SIZE_CHANGED */, this.updateTreeOutlineVisibleWidth.bind(this));\n        this.splitWidget.show(this.element);\n        this.searchableViewInternal = new UI.SearchableView.SearchableView(this, null);\n        this.searchableViewInternal.setMinimalSearchQuerySize(0);\n        this.searchableViewInternal.setMinimumSize(25, 28);\n        this.searchableViewInternal.setPlaceholder(i18nString(UIStrings.findByStringSelectorOrXpath));\n        const stackElement = this.searchableViewInternal.element;\n        this.mainContainer = document.createElement('div');\n        this.domTreeContainer = document.createElement('div');\n        const crumbsContainer = document.createElement('div');\n        if (Root.Runtime.experiments.isEnabled('full-accessibility-tree')) {\n            this.initializeFullAccessibilityTreeView();\n        }\n        this.mainContainer.appendChild(this.domTreeContainer);\n        stackElement.appendChild(this.mainContainer);\n        stackElement.appendChild(crumbsContainer);\n        UI.ARIAUtils.markAsMain(this.domTreeContainer);\n        UI.ARIAUtils.setLabel(this.domTreeContainer, i18nString(UIStrings.domTreeExplorer));\n        this.splitWidget.setMainWidget(this.searchableViewInternal);\n        this.splitMode = null;\n        this.mainContainer.id = 'main-content';\n        this.domTreeContainer.id = 'elements-content';\n        this.domTreeContainer.tabIndex = -1;\n        // FIXME: crbug.com/425984\n        if (Common.Settings.Settings.instance().moduleSetting('dom-word-wrap').get()) {\n            this.domTreeContainer.classList.add('elements-wrap');\n        }\n        Common.Settings.Settings.instance()\n            .moduleSetting('dom-word-wrap')\n            .addChangeListener(this.domWordWrapSettingChanged.bind(this));\n        crumbsContainer.id = 'elements-crumbs';\n        if (this.domTreeButton) {\n            this.accessibilityTreeView =\n                new AccessibilityTreeView(this.domTreeButton, new TreeOutline.TreeOutline.TreeOutline());\n        }\n        this.breadcrumbs = new ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs();\n        this.breadcrumbs.addEventListener('breadcrumbsnodeselected', event => {\n            this.crumbNodeSelected(event);\n        });\n        crumbsContainer.appendChild(this.breadcrumbs);\n        this.stylesWidget = StylesSidebarPane.instance();\n        this.computedStyleWidget = new ComputedStyleWidget();\n        this.metricsWidget = new MetricsSidebarPane();\n        Common.Settings.Settings.instance()\n            .moduleSetting('sidebar-position')\n            .addChangeListener(this.updateSidebarPosition.bind(this));\n        this.updateSidebarPosition();\n        this.cssStyleTrackerByCSSModel = new Map();\n        SDK.TargetManager.TargetManager.instance().observeModels(SDK.DOMModel.DOMModel, this, { scoped: true });\n        SDK.TargetManager.TargetManager.instance().addEventListener(\"NameChanged\" /* SDK.TargetManager.Events.NAME_CHANGED */, event => this.targetNameChanged(event.data));\n        Common.Settings.Settings.instance()\n            .moduleSetting('show-ua-shadow-dom')\n            .addChangeListener(this.showUAShadowDOMChanged.bind(this));\n        Extensions.ExtensionServer.ExtensionServer.instance().addEventListener(\"SidebarPaneAdded\" /* Extensions.ExtensionServer.Events.SidebarPaneAdded */, this.extensionSidebarPaneAdded, this);\n        this.currentSearchResultIndex = -1; // -1 represents the initial invalid state\n        this.pendingNodeReveal = false;\n        this.adornerManager = new ElementsComponents.AdornerManager.AdornerManager(Common.Settings.Settings.instance().moduleSetting('adorner-settings'));\n        this.adornerSettingsPane = null;\n        this.adornersByName = new Map();\n    }\n    initializeFullAccessibilityTreeView() {\n        this.accessibilityTreeButton = createAccessibilityTreeToggleButton(false);\n        this.accessibilityTreeButton.addEventListener('click', this.showAccessibilityTree.bind(this));\n        this.domTreeButton = createAccessibilityTreeToggleButton(true);\n        this.domTreeButton.addEventListener('click', this.showDOMTree.bind(this));\n        this.mainContainer.appendChild(this.accessibilityTreeButton);\n    }\n    showAccessibilityTree() {\n        if (this.accessibilityTreeView) {\n            this.splitWidget.setMainWidget(this.accessibilityTreeView);\n        }\n    }\n    showDOMTree() {\n        this.splitWidget.setMainWidget(this.searchableViewInternal);\n        const selectedNode = this.selectedDOMNode();\n        if (!selectedNode) {\n            return;\n        }\n        const treeElement = this.treeElementForNode(selectedNode);\n        if (!treeElement) {\n            return;\n        }\n        treeElement.select();\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!elementsPanelInstance || forceNew) {\n            elementsPanelInstance = new ElementsPanel();\n        }\n        return elementsPanelInstance;\n    }\n    revealProperty(cssProperty) {\n        if (!this.sidebarPaneView || !this.stylesViewToReveal) {\n            return Promise.resolve();\n        }\n        return this.sidebarPaneView.showView(this.stylesViewToReveal).then(() => {\n            this.stylesWidget.revealProperty(cssProperty);\n        });\n    }\n    resolveLocation(_locationName) {\n        return this.sidebarPaneView || null;\n    }\n    showToolbarPane(widget, toggle) {\n        // TODO(luoe): remove this function once its providers have an alternative way to reveal their views.\n        this.stylesWidget.showToolbarPane(widget, toggle);\n    }\n    modelAdded(domModel) {\n        const parentModel = domModel.parentModel();\n        let treeOutline = parentModel ? ElementsTreeOutline.forDOMModel(parentModel) : null;\n        if (!treeOutline) {\n            treeOutline = new ElementsTreeOutline(true, true);\n            treeOutline.setWordWrap(Common.Settings.Settings.instance().moduleSetting('dom-word-wrap').get());\n            treeOutline.addEventListener(ElementsTreeOutline.Events.SelectedNodeChanged, this.selectedNodeChanged, this);\n            treeOutline.addEventListener(ElementsTreeOutline.Events.ElementsTreeUpdated, this.updateBreadcrumbIfNeeded, this);\n            new ElementsTreeElementHighlighter(treeOutline, new Common.Throttler.Throttler(100));\n            this.treeOutlines.add(treeOutline);\n        }\n        treeOutline.wireToDOMModel(domModel);\n        this.setupStyleTracking(domModel.cssModel());\n        // Perform attach if necessary.\n        if (this.isShowing()) {\n            this.wasShown();\n        }\n        if (this.domTreeContainer.hasFocus()) {\n            treeOutline.focus();\n        }\n        domModel.addEventListener(SDK.DOMModel.Events.DocumentUpdated, this.documentUpdatedEvent, this);\n        domModel.addEventListener(SDK.DOMModel.Events.NodeInserted, this.handleNodeInserted, this);\n    }\n    handleNodeInserted(event) {\n        // Queue the task for the case when all the view transitions are added\n        // around the same time. Otherwise there is a race condition on\n        // accessing `cssText` of inspector stylesheet causing some rules\n        // to be not added.\n        this.nodeInsertedTaskRunner.run(async () => {\n            const node = event.data;\n            if (!node.isViewTransitionPseudoNode()) {\n                return;\n            }\n            const cssModel = node.domModel().cssModel();\n            const styleSheetHeader = await cssModel.requestViaInspectorStylesheet(node.frameId());\n            if (!styleSheetHeader) {\n                return;\n            }\n            const cssText = await cssModel.getStyleSheetText(styleSheetHeader.id);\n            // Do not add a rule for the view transition pseudo if there already is a rule for it.\n            if (cssText?.includes(`${node.simpleSelector()} {`)) {\n                return;\n            }\n            await cssModel.setStyleSheetText(styleSheetHeader.id, `${cssText}\\n${node.simpleSelector()} {}`, false);\n        });\n    }\n    modelRemoved(domModel) {\n        domModel.removeEventListener(SDK.DOMModel.Events.DocumentUpdated, this.documentUpdatedEvent, this);\n        domModel.removeEventListener(SDK.DOMModel.Events.NodeInserted, this.handleNodeInserted, this);\n        const treeOutline = ElementsTreeOutline.forDOMModel(domModel);\n        if (!treeOutline) {\n            return;\n        }\n        treeOutline.unwireFromDOMModel(domModel);\n        if (domModel.parentModel()) {\n            return;\n        }\n        this.treeOutlines.delete(treeOutline);\n        treeOutline.element.remove();\n        this.removeStyleTracking(domModel.cssModel());\n    }\n    targetNameChanged(target) {\n        const domModel = target.model(SDK.DOMModel.DOMModel);\n        if (!domModel) {\n            return;\n        }\n        const treeOutline = ElementsTreeOutline.forDOMModel(domModel);\n        if (!treeOutline) {\n            return;\n        }\n    }\n    updateTreeOutlineVisibleWidth() {\n        if (!this.treeOutlines.size) {\n            return;\n        }\n        let width = this.splitWidget.element.offsetWidth;\n        if (this.splitWidget.isVertical()) {\n            width -= this.splitWidget.sidebarSize();\n        }\n        for (const treeOutline of this.treeOutlines) {\n            treeOutline.setVisibleWidth(width);\n        }\n    }\n    focus() {\n        const firstTreeOutline = this.treeOutlines.values().next();\n        if (firstTreeOutline.done) {\n            this.domTreeContainer.focus();\n        }\n        else {\n            firstTreeOutline.value.focus();\n        }\n    }\n    searchableView() {\n        return this.searchableViewInternal;\n    }\n    wasShown() {\n        super.wasShown();\n        UI.Context.Context.instance().setFlavor(ElementsPanel, this);\n        this.registerCSSFiles([elementsPanelStyles]);\n        for (const treeOutline of this.treeOutlines) {\n            // Attach heavy component lazily\n            if (treeOutline.element.parentElement !== this.domTreeContainer) {\n                this.domTreeContainer.appendChild(treeOutline.element);\n            }\n        }\n        const domModels = SDK.TargetManager.TargetManager.instance().models(SDK.DOMModel.DOMModel, { scoped: true });\n        for (const domModel of domModels) {\n            if (domModel.parentModel()) {\n                continue;\n            }\n            const treeOutline = ElementsTreeOutline.forDOMModel(domModel);\n            if (!treeOutline) {\n                continue;\n            }\n            treeOutline.setVisible(true);\n            if (!treeOutline.rootDOMNode) {\n                if (domModel.existingDocument()) {\n                    treeOutline.rootDOMNode = domModel.existingDocument();\n                    this.documentUpdated(domModel);\n                }\n                else {\n                    void domModel.requestDocument();\n                }\n            }\n        }\n    }\n    willHide() {\n        SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n        for (const treeOutline of this.treeOutlines) {\n            treeOutline.setVisible(false);\n            // Detach heavy component on hide\n            this.domTreeContainer.removeChild(treeOutline.element);\n        }\n        super.willHide();\n        UI.Context.Context.instance().setFlavor(ElementsPanel, null);\n    }\n    onResize() {\n        this.element.window().requestAnimationFrame(this.updateSidebarPosition.bind(this)); // Do not force layout.\n        this.updateTreeOutlineVisibleWidth();\n    }\n    selectedNodeChanged(event) {\n        let selectedNode = event.data.node;\n        // If the selectedNode is a pseudoNode, we want to ensure that it has a valid parentNode\n        if (selectedNode && (selectedNode.pseudoType() && !selectedNode.parentNode)) {\n            selectedNode = null;\n        }\n        const { focus } = event.data;\n        for (const treeOutline of this.treeOutlines) {\n            if (!selectedNode || ElementsTreeOutline.forDOMModel(selectedNode.domModel()) !== treeOutline) {\n                treeOutline.selectDOMNode(null);\n            }\n        }\n        if (selectedNode) {\n            const activeNode = ElementsComponents.Helper.legacyNodeToElementsComponentsNode(selectedNode);\n            const crumbs = [activeNode];\n            for (let current = selectedNode.parentNode; current; current = current.parentNode) {\n                crumbs.push(ElementsComponents.Helper.legacyNodeToElementsComponentsNode(current));\n            }\n            this.breadcrumbs.data = {\n                crumbs,\n                selectedNode: ElementsComponents.Helper.legacyNodeToElementsComponentsNode(selectedNode),\n            };\n            if (this.accessibilityTreeView) {\n                void this.accessibilityTreeView.selectedNodeChanged(selectedNode);\n            }\n        }\n        else {\n            this.breadcrumbs.data = { crumbs: [], selectedNode: null };\n        }\n        UI.Context.Context.instance().setFlavor(SDK.DOMModel.DOMNode, selectedNode);\n        if (!selectedNode) {\n            return;\n        }\n        void selectedNode.setAsInspectedNode();\n        if (focus) {\n            this.selectedNodeOnReset = selectedNode;\n            this.hasNonDefaultSelectedNode = true;\n        }\n        const executionContexts = selectedNode.domModel().runtimeModel().executionContexts();\n        const nodeFrameId = selectedNode.frameId();\n        for (const context of executionContexts) {\n            if (context.frameId === nodeFrameId) {\n                UI.Context.Context.instance().setFlavor(SDK.RuntimeModel.ExecutionContext, context);\n                break;\n            }\n        }\n    }\n    documentUpdatedEvent(event) {\n        const domModel = event.data;\n        this.documentUpdated(domModel);\n        this.removeStyleTracking(domModel.cssModel());\n        this.setupStyleTracking(domModel.cssModel());\n    }\n    documentUpdated(domModel) {\n        this.searchableViewInternal.cancelSearch();\n        if (!domModel.existingDocument()) {\n            if (this.isShowing()) {\n                void domModel.requestDocument();\n            }\n            return;\n        }\n        this.hasNonDefaultSelectedNode = false;\n        if (this.omitDefaultSelection) {\n            return;\n        }\n        const savedSelectedNodeOnReset = this.selectedNodeOnReset;\n        void restoreNode.call(this, domModel, this.selectedNodeOnReset || null);\n        async function restoreNode(domModel, staleNode) {\n            const nodePath = staleNode ? staleNode.path() : null;\n            const restoredNodeId = nodePath ? await domModel.pushNodeByPathToFrontend(nodePath) : null;\n            if (savedSelectedNodeOnReset !== this.selectedNodeOnReset) {\n                return;\n            }\n            let node = restoredNodeId ? domModel.nodeForId(restoredNodeId) : null;\n            if (!node) {\n                const inspectedDocument = domModel.existingDocument();\n                node = inspectedDocument ? inspectedDocument.body || inspectedDocument.documentElement : null;\n            }\n            // If `node` is null here, the document hasn't been transmitted from the backend yet\n            // and isn't in a valid state to have a default-selected node. Another document update\n            // should be forthcoming. In the meantime, don't set the default-selected node or notify\n            // the test that it's ready, because it isn't.\n            if (node) {\n                this.setDefaultSelectedNode(node);\n                this.lastSelectedNodeSelectedForTest();\n            }\n        }\n    }\n    lastSelectedNodeSelectedForTest() {\n    }\n    setDefaultSelectedNode(node) {\n        if (!node || this.hasNonDefaultSelectedNode || this.pendingNodeReveal) {\n            return;\n        }\n        const treeOutline = ElementsTreeOutline.forDOMModel(node.domModel());\n        if (!treeOutline) {\n            return;\n        }\n        this.selectDOMNode(node);\n        if (treeOutline.selectedTreeElement) {\n            treeOutline.selectedTreeElement.expand();\n        }\n    }\n    onSearchClosed() {\n        const selectedNode = this.selectedDOMNode();\n        if (!selectedNode) {\n            return;\n        }\n        const treeElement = this.treeElementForNode(selectedNode);\n        if (!treeElement) {\n            return;\n        }\n        treeElement.select();\n    }\n    onSearchCanceled() {\n        this.searchConfig = undefined;\n        this.hideSearchHighlights();\n        this.searchableViewInternal.updateSearchMatchesCount(0);\n        this.currentSearchResultIndex = -1;\n        delete this.searchResults;\n        SDK.DOMModel.DOMModel.cancelSearch();\n    }\n    performSearch(searchConfig, shouldJump, jumpBackwards) {\n        const query = searchConfig.query;\n        const whitespaceTrimmedQuery = query.trim();\n        if (!whitespaceTrimmedQuery.length) {\n            return;\n        }\n        if (!this.searchConfig || this.searchConfig.query !== query) {\n            this.onSearchCanceled();\n        }\n        else {\n            this.hideSearchHighlights();\n        }\n        this.searchConfig = searchConfig;\n        const showUAShadowDOM = Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom').get();\n        const domModels = SDK.TargetManager.TargetManager.instance().models(SDK.DOMModel.DOMModel, { scoped: true });\n        const promises = domModels.map(domModel => domModel.performSearch(whitespaceTrimmedQuery, showUAShadowDOM));\n        void Promise.all(promises).then(resultCounts => {\n            this.searchResults = [];\n            for (let i = 0; i < resultCounts.length; ++i) {\n                const resultCount = resultCounts[i];\n                for (let j = 0; j < resultCount; ++j) {\n                    this.searchResults.push({ domModel: domModels[i], index: j, node: undefined });\n                }\n            }\n            this.searchableViewInternal.updateSearchMatchesCount(this.searchResults.length);\n            if (!this.searchResults.length) {\n                return;\n            }\n            if (this.currentSearchResultIndex >= this.searchResults.length) {\n                this.currentSearchResultIndex = -1;\n            }\n            let index = this.currentSearchResultIndex;\n            if (shouldJump) {\n                if (this.currentSearchResultIndex === -1) {\n                    index = jumpBackwards ? -1 : 0;\n                }\n                else {\n                    index = jumpBackwards ? index - 1 : index + 1;\n                }\n                this.jumpToSearchResult(index);\n            }\n        });\n    }\n    domWordWrapSettingChanged(event) {\n        this.domTreeContainer.classList.toggle('elements-wrap', event.data);\n        for (const treeOutline of this.treeOutlines) {\n            treeOutline.setWordWrap(event.data);\n        }\n    }\n    switchToAndFocus(node) {\n        // Reset search restore.\n        this.searchableViewInternal.cancelSearch();\n        void UI.ViewManager.ViewManager.instance().showView('elements').then(() => this.selectDOMNode(node, true));\n    }\n    jumpToSearchResult(index) {\n        if (!this.searchResults) {\n            return;\n        }\n        this.currentSearchResultIndex = (index + this.searchResults.length) % this.searchResults.length;\n        this.highlightCurrentSearchResult();\n    }\n    jumpToNextSearchResult() {\n        if (!this.searchResults || !this.searchConfig) {\n            return;\n        }\n        this.performSearch(this.searchConfig, true);\n    }\n    jumpToPreviousSearchResult() {\n        if (!this.searchResults || !this.searchConfig) {\n            return;\n        }\n        this.performSearch(this.searchConfig, true, true);\n    }\n    supportsCaseSensitiveSearch() {\n        return false;\n    }\n    supportsRegexSearch() {\n        return false;\n    }\n    highlightCurrentSearchResult() {\n        const index = this.currentSearchResultIndex;\n        const searchResults = this.searchResults;\n        if (!searchResults) {\n            return;\n        }\n        const searchResult = searchResults[index];\n        this.searchableViewInternal.updateCurrentMatchIndex(index);\n        if (searchResult.node === null) {\n            return;\n        }\n        if (typeof searchResult.node === 'undefined') {\n            // No data for slot, request it.\n            void searchResult.domModel.searchResult(searchResult.index).then(node => {\n                searchResult.node = node;\n                // If any of these properties are undefined or reset to an invalid value,\n                // this means the search/highlight request is outdated.\n                const highlightRequestValid = this.searchConfig && this.searchResults && (this.currentSearchResultIndex !== -1);\n                if (highlightRequestValid) {\n                    this.highlightCurrentSearchResult();\n                }\n            });\n            return;\n        }\n        const treeElement = this.treeElementForNode(searchResult.node);\n        void searchResult.node.scrollIntoView();\n        if (treeElement) {\n            this.searchConfig && treeElement.highlightSearchResults(this.searchConfig.query);\n            treeElement.reveal();\n            const matches = treeElement.listItemElement.getElementsByClassName(UI.UIUtils.highlightedSearchResultClassName);\n            if (matches.length) {\n                matches[0].scrollIntoViewIfNeeded(false);\n            }\n            treeElement.select(/* omitFocus */ true);\n        }\n    }\n    hideSearchHighlights() {\n        if (!this.searchResults || !this.searchResults.length || this.currentSearchResultIndex === -1) {\n            return;\n        }\n        const searchResult = this.searchResults[this.currentSearchResultIndex];\n        if (!searchResult.node) {\n            return;\n        }\n        const treeElement = this.treeElementForNode(searchResult.node);\n        if (treeElement) {\n            treeElement.hideSearchHighlights();\n        }\n    }\n    selectedDOMNode() {\n        for (const treeOutline of this.treeOutlines) {\n            if (treeOutline.selectedDOMNode()) {\n                return treeOutline.selectedDOMNode();\n            }\n        }\n        return null;\n    }\n    selectDOMNode(node, focus) {\n        for (const treeOutline of this.treeOutlines) {\n            const outline = ElementsTreeOutline.forDOMModel(node.domModel());\n            if (outline === treeOutline) {\n                treeOutline.selectDOMNode(node, focus);\n            }\n            else {\n                treeOutline.selectDOMNode(null);\n            }\n        }\n    }\n    selectAndShowSidebarTab(tabId) {\n        if (!this.sidebarPaneView) {\n            return;\n        }\n        this.sidebarPaneView.tabbedPane().selectTab(tabId);\n        if (!this.isShowing()) {\n            void UI.ViewManager.ViewManager.instance().showView('elements');\n        }\n    }\n    updateBreadcrumbIfNeeded(event) {\n        const nodes = event.data;\n        /* If we don't have a selected node then we can tell the breadcrumbs that & bail. */\n        const selectedNode = this.selectedDOMNode();\n        if (!selectedNode) {\n            this.breadcrumbs.data = {\n                crumbs: [],\n                selectedNode: null,\n            };\n            return;\n        }\n        /* This function gets called whenever the tree outline is updated\n         * and contains any nodes that have changed.\n         * What we need to do is construct the new set of breadcrumb nodes, combining the Nodes\n         * that we had before with the new nodes, and pass them into the breadcrumbs component.\n         */\n        // Get the current set of active crumbs\n        const activeNode = ElementsComponents.Helper.legacyNodeToElementsComponentsNode(selectedNode);\n        const existingCrumbs = [activeNode];\n        for (let current = selectedNode.parentNode; current; current = current.parentNode) {\n            existingCrumbs.push(ElementsComponents.Helper.legacyNodeToElementsComponentsNode(current));\n        }\n        /* Get the change nodes from the event & convert them to breadcrumb nodes */\n        const newNodes = nodes.map(ElementsComponents.Helper.legacyNodeToElementsComponentsNode);\n        const nodesThatHaveChangedMap = new Map();\n        newNodes.forEach(crumb => nodesThatHaveChangedMap.set(crumb.id, crumb));\n        /* Loop over our existing crumbs, and if any have an ID that matches an ID from the new nodes\n         * that we have, use the new node, rather than the one we had, because it's changed.\n         */\n        const newSetOfCrumbs = existingCrumbs.map(crumb => {\n            const replacement = nodesThatHaveChangedMap.get(crumb.id);\n            return replacement || crumb;\n        });\n        this.breadcrumbs.data = {\n            crumbs: newSetOfCrumbs,\n            selectedNode: activeNode,\n        };\n    }\n    crumbNodeSelected(event) {\n        this.selectDOMNode(event.legacyDomNode, true);\n    }\n    treeOutlineForNode(node) {\n        if (!node) {\n            return null;\n        }\n        return ElementsTreeOutline.forDOMModel(node.domModel());\n    }\n    treeElementForNode(node) {\n        const treeOutline = this.treeOutlineForNode(node);\n        if (!treeOutline) {\n            return null;\n        }\n        return treeOutline.findTreeElement(node);\n    }\n    leaveUserAgentShadowDOM(node) {\n        let userAgentShadowRoot;\n        while ((userAgentShadowRoot = node.ancestorUserAgentShadowRoot()) && userAgentShadowRoot.parentNode) {\n            node = userAgentShadowRoot.parentNode;\n        }\n        return node;\n    }\n    async revealAndSelectNode(nodeToReveal, focus, omitHighlight) {\n        this.omitDefaultSelection = true;\n        const node = Common.Settings.Settings.instance().moduleSetting('show-ua-shadow-dom').get() ?\n            nodeToReveal :\n            this.leaveUserAgentShadowDOM(nodeToReveal);\n        if (!omitHighlight) {\n            node.highlightForTwoSeconds();\n        }\n        if (this.accessibilityTreeView) {\n            void this.accessibilityTreeView.revealAndSelectNode(nodeToReveal);\n        }\n        await UI.ViewManager.ViewManager.instance().showView('elements', false, !focus);\n        this.selectDOMNode(node, focus);\n        delete this.omitDefaultSelection;\n        if (!this.notFirstInspectElement) {\n            ElementsPanel.firstInspectElementNodeNameForTest = node.nodeName();\n            ElementsPanel.firstInspectElementCompletedForTest();\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.inspectElementCompleted();\n        }\n        this.notFirstInspectElement = true;\n    }\n    showUAShadowDOMChanged() {\n        for (const treeOutline of this.treeOutlines) {\n            treeOutline.update();\n        }\n    }\n    setupTextSelectionHack(stylePaneWrapperElement) {\n        // We \"extend\" the sidebar area when dragging, in order to keep smooth text\n        // selection. It should be replaced by 'user-select: contain' in the future.\n        const uninstallHackBound = uninstallHack.bind(this);\n        // Fallback to cover unforeseen cases where text selection has ended.\n        const uninstallHackOnMousemove = (event) => {\n            if (event.buttons === 0) {\n                uninstallHack.call(this);\n            }\n        };\n        stylePaneWrapperElement.addEventListener('mousedown', (event) => {\n            if (event.button !== 0) {\n                return;\n            }\n            this.splitWidget.element.classList.add('disable-resizer-for-elements-hack');\n            stylePaneWrapperElement.style.setProperty('height', `${stylePaneWrapperElement.offsetHeight}px`);\n            const largeLength = 1000000;\n            stylePaneWrapperElement.style.setProperty('left', `${-1 * largeLength}px`);\n            stylePaneWrapperElement.style.setProperty('padding-left', `${largeLength}px`);\n            stylePaneWrapperElement.style.setProperty('width', `calc(100% + ${largeLength}px)`);\n            stylePaneWrapperElement.style.setProperty('position', 'fixed');\n            stylePaneWrapperElement.window().addEventListener('blur', uninstallHackBound);\n            stylePaneWrapperElement.window().addEventListener('contextmenu', uninstallHackBound, true);\n            stylePaneWrapperElement.window().addEventListener('dragstart', uninstallHackBound, true);\n            stylePaneWrapperElement.window().addEventListener('mousemove', uninstallHackOnMousemove, true);\n            stylePaneWrapperElement.window().addEventListener('mouseup', uninstallHackBound, true);\n            stylePaneWrapperElement.window().addEventListener('visibilitychange', uninstallHackBound);\n        }, true);\n        function uninstallHack() {\n            this.splitWidget.element.classList.remove('disable-resizer-for-elements-hack');\n            stylePaneWrapperElement.style.removeProperty('left');\n            stylePaneWrapperElement.style.removeProperty('padding-left');\n            stylePaneWrapperElement.style.removeProperty('width');\n            stylePaneWrapperElement.style.removeProperty('position');\n            stylePaneWrapperElement.window().removeEventListener('blur', uninstallHackBound);\n            stylePaneWrapperElement.window().removeEventListener('contextmenu', uninstallHackBound, true);\n            stylePaneWrapperElement.window().removeEventListener('dragstart', uninstallHackBound, true);\n            stylePaneWrapperElement.window().removeEventListener('mousemove', uninstallHackOnMousemove, true);\n            stylePaneWrapperElement.window().removeEventListener('mouseup', uninstallHackBound, true);\n            stylePaneWrapperElement.window().removeEventListener('visibilitychange', uninstallHackBound);\n        }\n    }\n    initializeSidebarPanes(splitMode) {\n        this.splitWidget.setVertical(splitMode === \"Vertical\" /* SplitMode.VERTICAL */);\n        this.showToolbarPane(null /* widget */, null /* toggle */);\n        const matchedStylePanesWrapper = new UI.Widget.VBox();\n        matchedStylePanesWrapper.element.classList.add('style-panes-wrapper');\n        matchedStylePanesWrapper.element.setAttribute('jslog', `${VisualLogging.pane('styles').track({ resize: true })}`);\n        this.stylesWidget.show(matchedStylePanesWrapper.element);\n        this.setupTextSelectionHack(matchedStylePanesWrapper.element);\n        const computedStylePanesWrapper = new UI.Widget.VBox();\n        computedStylePanesWrapper.element.classList.add('style-panes-wrapper');\n        computedStylePanesWrapper.element.setAttribute('jslog', `${VisualLogging.pane('computed').track({ resize: true })}`);\n        this.computedStyleWidget.show(computedStylePanesWrapper.element);\n        const stylesSplitWidget = new UI.SplitWidget.SplitWidget(true /* isVertical */, true /* secondIsSidebar */, 'elements.styles.sidebar.width', 100);\n        stylesSplitWidget.setMainWidget(matchedStylePanesWrapper);\n        stylesSplitWidget.hideSidebar();\n        stylesSplitWidget.enableShowModeSaving();\n        stylesSplitWidget.addEventListener(\"ShowModeChanged\" /* UI.SplitWidget.Events.SHOW_MODE_CHANGED */, () => {\n            showMetricsWidgetInStylesPane();\n        });\n        this.stylesWidget.addEventListener(\"InitialUpdateCompleted\" /* StylesSidebarPaneEvents.INITIAL_UPDATE_COMPLETED */, () => {\n            this.stylesWidget.appendToolbarItem(stylesSplitWidget.createShowHideSidebarButton(i18nString(UIStrings.showComputedStylesSidebar), i18nString(UIStrings.hideComputedStylesSidebar), i18nString(UIStrings.computedStylesShown), i18nString(UIStrings.computedStylesHidden), 'computed-styles'));\n        });\n        const showMetricsWidgetInComputedPane = () => {\n            this.metricsWidget.show(computedStylePanesWrapper.element, this.computedStyleWidget.element);\n            this.metricsWidget.toggleVisibility(true /* visible */);\n            this.stylesWidget.removeEventListener(\"StylesUpdateCompleted\" /* StylesSidebarPaneEvents.STYLES_UPDATE_COMPLETED */, toggleMetricsWidget);\n        };\n        const showMetricsWidgetInStylesPane = () => {\n            const showMergedComputedPane = stylesSplitWidget.showMode() === \"Both\" /* UI.SplitWidget.ShowMode.BOTH */;\n            if (showMergedComputedPane) {\n                showMetricsWidgetInComputedPane();\n            }\n            else {\n                this.metricsWidget.show(matchedStylePanesWrapper.element);\n                if (!this.stylesWidget.hasMatchedStyles) {\n                    this.metricsWidget.toggleVisibility(false /* invisible */);\n                }\n                this.stylesWidget.addEventListener(\"StylesUpdateCompleted\" /* StylesSidebarPaneEvents.STYLES_UPDATE_COMPLETED */, toggleMetricsWidget);\n            }\n        };\n        const toggleMetricsWidget = (event) => {\n            this.metricsWidget.toggleVisibility(event.data.hasMatchedStyles);\n        };\n        const tabSelected = (event) => {\n            const { tabId } = event.data;\n            if (tabId === \"computed\" /* SidebarPaneTabId.COMPUTED */) {\n                computedStylePanesWrapper.show(computedView.element);\n                showMetricsWidgetInComputedPane();\n            }\n            else if (tabId === \"styles\" /* SidebarPaneTabId.STYLES */) {\n                stylesSplitWidget.setSidebarWidget(computedStylePanesWrapper);\n                showMetricsWidgetInStylesPane();\n            }\n        };\n        this.sidebarPaneView = UI.ViewManager.ViewManager.instance().createTabbedLocation(() => UI.ViewManager.ViewManager.instance().showView('elements'), 'styles-pane-sidebar', true, true);\n        const tabbedPane = this.sidebarPaneView.tabbedPane();\n        tabbedPane.headerElement().setAttribute('jslog', `${VisualLogging.toolbar('sidebar').track({ keydown: 'ArrowUp|ArrowLeft|ArrowDown|ArrowRight|Enter|Space' })}`);\n        if (this.splitMode !== \"Vertical\" /* SplitMode.VERTICAL */) {\n            this.splitWidget.installResizer(tabbedPane.headerElement());\n        }\n        const headerElement = tabbedPane.headerElement();\n        UI.ARIAUtils.markAsNavigation(headerElement);\n        UI.ARIAUtils.setLabel(headerElement, i18nString(UIStrings.sidePanelToolbar));\n        const contentElement = tabbedPane.tabbedPaneContentElement();\n        UI.ARIAUtils.markAsComplementary(contentElement);\n        UI.ARIAUtils.setLabel(contentElement, i18nString(UIStrings.sidePanelContent));\n        const stylesView = new UI.View.SimpleView(i18nString(UIStrings.styles), /* useShadowDom */ undefined, \"styles\" /* SidebarPaneTabId.STYLES */);\n        this.sidebarPaneView.appendView(stylesView);\n        stylesView.element.classList.add('flex-auto');\n        stylesSplitWidget.show(stylesView.element);\n        const computedView = new UI.View.SimpleView(i18nString(UIStrings.computed), /* useShadowDom */ undefined, \"computed\" /* SidebarPaneTabId.COMPUTED */);\n        computedView.element.classList.add('composite', 'fill');\n        tabbedPane.addEventListener(UI.TabbedPane.Events.TabSelected, tabSelected, this);\n        this.sidebarPaneView.appendView(computedView);\n        this.stylesViewToReveal = stylesView;\n        this.sidebarPaneView.appendApplicableItems('elements-sidebar');\n        const extensionSidebarPanes = Extensions.ExtensionServer.ExtensionServer.instance().sidebarPanes();\n        for (let i = 0; i < extensionSidebarPanes.length; ++i) {\n            this.addExtensionSidebarPane(extensionSidebarPanes[i]);\n        }\n        this.splitWidget.setSidebarWidget(this.sidebarPaneView.tabbedPane());\n    }\n    updateSidebarPosition() {\n        if (this.sidebarPaneView && this.sidebarPaneView.tabbedPane().shouldHideOnDetach()) {\n            return;\n        } // We can't reparent extension iframes.\n        const position = Common.Settings.Settings.instance().moduleSetting('sidebar-position').get();\n        let splitMode = \"Horizontal\" /* SplitMode.HORIZONTAL */;\n        if (position === 'right' ||\n            (position === 'auto' && UI.InspectorView.InspectorView.instance().element.offsetWidth > 680)) {\n            splitMode = \"Vertical\" /* SplitMode.VERTICAL */;\n        }\n        if (!this.sidebarPaneView) {\n            this.initializeSidebarPanes(splitMode);\n            return;\n        }\n        if (splitMode === this.splitMode) {\n            return;\n        }\n        this.splitMode = splitMode;\n        const tabbedPane = this.sidebarPaneView.tabbedPane();\n        this.splitWidget.uninstallResizer(tabbedPane.headerElement());\n        this.splitWidget.setVertical(this.splitMode === \"Vertical\" /* SplitMode.VERTICAL */);\n        this.showToolbarPane(null /* widget */, null /* toggle */);\n        if (this.splitMode !== \"Vertical\" /* SplitMode.VERTICAL */) {\n            this.splitWidget.installResizer(tabbedPane.headerElement());\n        }\n    }\n    extensionSidebarPaneAdded(event) {\n        this.addExtensionSidebarPane(event.data);\n    }\n    addExtensionSidebarPane(pane) {\n        if (this.sidebarPaneView && pane.panelName() === this.name) {\n            this.sidebarPaneView.appendView(pane);\n        }\n    }\n    getComputedStyleWidget() {\n        return this.computedStyleWidget;\n    }\n    setupStyleTracking(cssModel) {\n        const cssPropertyTracker = cssModel.createCSSPropertyTracker(TrackedCSSProperties);\n        cssPropertyTracker.start();\n        this.cssStyleTrackerByCSSModel.set(cssModel, cssPropertyTracker);\n        cssPropertyTracker.addEventListener(\"TrackedCSSPropertiesUpdated\" /* SDK.CSSModel.CSSPropertyTrackerEvents.TRACKED_CSS_PROPERTIES_UPDATED */, this.trackedCSSPropertiesUpdated, this);\n    }\n    removeStyleTracking(cssModel) {\n        const cssPropertyTracker = this.cssStyleTrackerByCSSModel.get(cssModel);\n        if (!cssPropertyTracker) {\n            return;\n        }\n        cssPropertyTracker.stop();\n        this.cssStyleTrackerByCSSModel.delete(cssModel);\n        cssPropertyTracker.removeEventListener(\"TrackedCSSPropertiesUpdated\" /* SDK.CSSModel.CSSPropertyTrackerEvents.TRACKED_CSS_PROPERTIES_UPDATED */, this.trackedCSSPropertiesUpdated, this);\n    }\n    trackedCSSPropertiesUpdated({ data: domNodes }) {\n        for (const domNode of domNodes) {\n            if (!domNode) {\n                continue;\n            }\n            const treeElement = this.treeElementForNode(domNode);\n            if (treeElement) {\n                void treeElement.updateStyleAdorners();\n            }\n            void ElementsComponents.LayoutPane.LayoutPane.instance().render();\n        }\n    }\n    showAdornerSettingsPane() {\n        // Delay the initialization of the pane to the first showing\n        // since usually this pane won't be used.\n        if (!this.adornerSettingsPane) {\n            this.adornerSettingsPane = new ElementsComponents.AdornerSettingsPane.AdornerSettingsPane();\n            this.adornerSettingsPane.addEventListener('adornersettingupdated', (event) => {\n                const { adornerName, isEnabledNow, newSettings } = event.data;\n                const adornersToUpdate = this.adornersByName.get(adornerName);\n                if (adornersToUpdate) {\n                    for (const adorner of adornersToUpdate) {\n                        isEnabledNow ? adorner.show() : adorner.hide();\n                    }\n                }\n                this.adornerManager.updateSettings(newSettings);\n            });\n            this.searchableViewInternal.element.prepend(this.adornerSettingsPane);\n        }\n        const adornerSettings = this.adornerManager.getSettings();\n        this.adornerSettingsPane.data = {\n            settings: adornerSettings,\n        };\n        this.adornerSettingsPane.show();\n    }\n    isAdornerEnabled(adornerText) {\n        return this.adornerManager.isAdornerEnabled(adornerText);\n    }\n    registerAdorner(adorner) {\n        let adornerSet = this.adornersByName.get(adorner.name);\n        if (!adornerSet) {\n            adornerSet = new Set();\n            this.adornersByName.set(adorner.name, adornerSet);\n        }\n        adornerSet.add(adorner);\n        if (!this.isAdornerEnabled(adorner.name)) {\n            adorner.hide();\n        }\n    }\n    deregisterAdorner(adorner) {\n        const adornerSet = this.adornersByName.get(adorner.name);\n        if (!adornerSet) {\n            return;\n        }\n        adornerSet.delete(adorner);\n    }\n    static firstInspectElementCompletedForTest = function () { };\n    static firstInspectElementNodeNameForTest = '';\n}\n// @ts-ignore exported for Tests.js\nglobalThis.Elements = globalThis.Elements || {};\n// @ts-ignore exported for Tests.js\nglobalThis.Elements.ElementsPanel = ElementsPanel;\nconst TrackedCSSProperties = [\n    {\n        name: 'display',\n        value: 'grid',\n    },\n    {\n        name: 'display',\n        value: 'inline-grid',\n    },\n    {\n        name: 'display',\n        value: 'flex',\n    },\n    {\n        name: 'display',\n        value: 'inline-flex',\n    },\n    {\n        name: 'container-type',\n        value: 'inline-size',\n    },\n    {\n        name: 'container-type',\n        value: 'block-size',\n    },\n    {\n        name: 'container-type',\n        value: 'size',\n    },\n];\nexport class ContextMenuProvider {\n    appendApplicableItems(event, contextMenu, object) {\n        if (object instanceof SDK.RemoteObject.RemoteObject && !object.isNode()) {\n            return;\n        }\n        if (ElementsPanel.instance().element.isAncestor(event.target)) {\n            return;\n        }\n        contextMenu.revealSection().appendItem(i18nString(UIStrings.revealInElementsPanel), () => Common.Revealer.reveal(object), { jslogContext: 'elements.reveal-node' });\n    }\n}\nexport class DOMNodeRevealer {\n    reveal(node, omitFocus) {\n        const panel = ElementsPanel.instance();\n        panel.pendingNodeReveal = true;\n        return (new Promise(revealPromise)).catch((reason) => {\n            let message;\n            if (Platform.UserVisibleError.isUserVisibleError(reason)) {\n                message = reason.message;\n            }\n            else {\n                message = i18nString(UIStrings.nodeCannotBeFoundInTheCurrent);\n            }\n            Common.Console.Console.instance().warn(message);\n            // Blink tests expect an exception to be raised and unhandled here to detect that the node\n            // was actually not successfully viewed.\n            throw reason;\n        });\n        function revealPromise(resolve, reject) {\n            if (node instanceof SDK.DOMModel.DOMNode) {\n                onNodeResolved(node);\n            }\n            else if (node instanceof SDK.DOMModel.DeferredDOMNode) {\n                node.resolve(checkDeferredDOMNodeThenReveal);\n            }\n            else {\n                const domModel = node.runtimeModel().target().model(SDK.DOMModel.DOMModel);\n                if (domModel) {\n                    void domModel.pushObjectAsNodeToFrontend(node).then(checkRemoteObjectThenReveal);\n                }\n                else {\n                    const msg = i18nString(UIStrings.nodeCannotBeFoundInTheCurrent);\n                    reject(new Platform.UserVisibleError.UserVisibleError(msg));\n                }\n            }\n            function onNodeResolved(resolvedNode) {\n                panel.pendingNodeReveal = false;\n                // A detached node could still have a parent and ownerDocument\n                // properties, which means stepping up through the hierarchy to ensure\n                // that the root node is the document itself. Any break implies\n                // detachment.\n                let currentNode = resolvedNode;\n                while (currentNode.parentNode) {\n                    currentNode = currentNode.parentNode;\n                }\n                const isDetached = !(currentNode instanceof SDK.DOMModel.DOMDocument);\n                const isDocument = node instanceof SDK.DOMModel.DOMDocument;\n                if (!isDocument && isDetached) {\n                    const msg = i18nString(UIStrings.nodeCannotBeFoundInTheCurrent);\n                    reject(new Platform.UserVisibleError.UserVisibleError(msg));\n                    return;\n                }\n                if (resolvedNode) {\n                    void panel.revealAndSelectNode(resolvedNode, !omitFocus).then(resolve);\n                    return;\n                }\n                const msg = i18nString(UIStrings.nodeCannotBeFoundInTheCurrent);\n                reject(new Platform.UserVisibleError.UserVisibleError(msg));\n            }\n            function checkRemoteObjectThenReveal(resolvedNode) {\n                if (!resolvedNode) {\n                    const msg = i18nString(UIStrings.theRemoteObjectCouldNotBe);\n                    reject(new Platform.UserVisibleError.UserVisibleError(msg));\n                    return;\n                }\n                onNodeResolved(resolvedNode);\n            }\n            function checkDeferredDOMNodeThenReveal(resolvedNode) {\n                if (!resolvedNode) {\n                    const msg = i18nString(UIStrings.theDeferredDomNodeCouldNotBe);\n                    reject(new Platform.UserVisibleError.UserVisibleError(msg));\n                    return;\n                }\n                onNodeResolved(resolvedNode);\n            }\n        }\n    }\n}\nexport class CSSPropertyRevealer {\n    reveal(property) {\n        const panel = ElementsPanel.instance();\n        return panel.revealProperty(property);\n    }\n}\nexport class ElementsActionDelegate {\n    handleAction(context, actionId) {\n        const node = context.flavor(SDK.DOMModel.DOMNode);\n        if (!node) {\n            return true;\n        }\n        const treeOutline = ElementsTreeOutline.forDOMModel(node.domModel());\n        if (!treeOutline) {\n            return true;\n        }\n        switch (actionId) {\n            case 'elements.hide-element':\n                void treeOutline.toggleHideElement(node);\n                return true;\n            case 'elements.edit-as-html':\n                treeOutline.toggleEditAsHTML(node);\n                return true;\n            case 'elements.duplicate-element':\n                treeOutline.duplicateNode(node);\n                return true;\n            case 'elements.copy-styles':\n                void treeOutline.findTreeElement(node)?.copyStyles();\n                return true;\n            case 'elements.undo':\n                void SDK.DOMModel.DOMModelUndoStack.instance().undo();\n                ElementsPanel.instance().stylesWidget.forceUpdate();\n                return true;\n            case 'elements.redo':\n                void SDK.DOMModel.DOMModelUndoStack.instance().redo();\n                ElementsPanel.instance().stylesWidget.forceUpdate();\n                return true;\n            case 'elements.show-styles':\n                ElementsPanel.instance().selectAndShowSidebarTab(\"styles\" /* SidebarPaneTabId.STYLES */);\n                return true;\n            case 'elements.show-computed':\n                ElementsPanel.instance().selectAndShowSidebarTab(\"computed\" /* SidebarPaneTabId.COMPUTED */);\n                return true;\n            case 'elements.toggle-eye-dropper': {\n                const colorSwatchPopoverIcon = UI.Context.Context.instance().flavor(ColorSwatchPopoverIcon);\n                if (!colorSwatchPopoverIcon) {\n                    return false;\n                }\n                void colorSwatchPopoverIcon.toggleEyeDropper();\n            }\n        }\n        return false;\n    }\n}\nlet pseudoStateMarkerDecoratorInstance;\nexport class PseudoStateMarkerDecorator {\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!pseudoStateMarkerDecoratorInstance || forceNew) {\n            pseudoStateMarkerDecoratorInstance = new PseudoStateMarkerDecorator();\n        }\n        return pseudoStateMarkerDecoratorInstance;\n    }\n    decorate(node) {\n        const pseudoState = node.domModel().cssModel().pseudoState(node);\n        if (!pseudoState) {\n            return null;\n        }\n        return {\n            color: '--sys-color-orange-bright',\n            title: i18nString(UIStrings.elementStateS, { PH1: ':' + pseudoState.join(', :') }),\n        };\n    }\n}\n//# sourceMappingURL=ElementsPanel.js.map","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as EventListeners from '../event_listeners/event_listeners.js';\nconst UIStrings = {\n    /**\n     *@description Title of show framework listeners setting in event listeners widget of the elements panel\n     */\n    frameworkListeners: '`Framework` listeners',\n    /**\n     *@description Tooltip text that appears on the setting when hovering over it in Event Listeners Widget of the Elements panel\n     */\n    showListenersOnTheAncestors: 'Show listeners on the ancestors',\n    /**\n     *@description Alternative title text of a setting in Event Listeners Widget of the Elements panel\n     */\n    ancestors: 'Ancestors',\n    /**\n     *@description Title of dispatch filter in event listeners widget of the elements panel\n     */\n    eventListenersCategory: 'Event listeners category',\n    /**\n     *@description Text for everything\n     */\n    all: 'All',\n    /**\n     *@description Text in Event Listeners Widget of the Elements panel\n     */\n    passive: 'Passive',\n    /**\n     *@description Text in Event Listeners Widget of the Elements panel\n     */\n    blocking: 'Blocking',\n    /**\n     *@description Tooltip text that appears on the setting when hovering over it in Event Listeners Widget of the Elements panel\n     */\n    resolveEventListenersBoundWith: 'Resolve event listeners bound with framework',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/EventListenersWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet eventListenersWidgetInstance;\nexport class EventListenersWidget extends UI.ThrottledWidget.ThrottledWidget {\n    toolbarItemsInternal;\n    showForAncestorsSetting;\n    dispatchFilterBySetting;\n    showFrameworkListenersSetting;\n    eventListenersView;\n    lastRequestedNode;\n    constructor() {\n        super();\n        this.toolbarItemsInternal = [];\n        this.showForAncestorsSetting =\n            Common.Settings.Settings.instance().moduleSetting('show-event-listeners-for-ancestors');\n        this.showForAncestorsSetting.addChangeListener(this.update.bind(this));\n        this.dispatchFilterBySetting =\n            Common.Settings.Settings.instance().createSetting('event-listener-dispatch-filter-type', DispatchFilterBy.All);\n        this.dispatchFilterBySetting.addChangeListener(this.update.bind(this));\n        this.showFrameworkListenersSetting =\n            Common.Settings.Settings.instance().createSetting('show-frameowkr-listeners', true);\n        this.showFrameworkListenersSetting.setTitle(i18nString(UIStrings.frameworkListeners));\n        this.showFrameworkListenersSetting.addChangeListener(this.showFrameworkListenersChanged.bind(this));\n        this.eventListenersView = new EventListeners.EventListenersView.EventListenersView(this.update.bind(this));\n        this.eventListenersView.show(this.element);\n        this.element.setAttribute('jslog', `${VisualLogging.pane('elements.event-listeners').track({ resize: true })}`);\n        this.toolbarItemsInternal.push(UI.Toolbar.Toolbar.createActionButtonForId('elements.refresh-event-listeners'));\n        this.toolbarItemsInternal.push(new UI.Toolbar.ToolbarSettingCheckbox(this.showForAncestorsSetting, i18nString(UIStrings.showListenersOnTheAncestors), i18nString(UIStrings.ancestors)));\n        const dispatchFilter = new UI.Toolbar.ToolbarComboBox(this.onDispatchFilterTypeChanged.bind(this), i18nString(UIStrings.eventListenersCategory));\n        dispatchFilter.element.setAttribute('jslog', `${VisualLogging.filterDropdown().track({ change: true })}`);\n        function addDispatchFilterOption(name, value) {\n            const option = dispatchFilter.createOption(name, value);\n            if (value === this.dispatchFilterBySetting.get()) {\n                dispatchFilter.select(option);\n            }\n        }\n        addDispatchFilterOption.call(this, i18nString(UIStrings.all), DispatchFilterBy.All);\n        addDispatchFilterOption.call(this, i18nString(UIStrings.passive), DispatchFilterBy.Passive);\n        addDispatchFilterOption.call(this, i18nString(UIStrings.blocking), DispatchFilterBy.Blocking);\n        dispatchFilter.setMaxWidth(200);\n        this.toolbarItemsInternal.push(dispatchFilter);\n        this.toolbarItemsInternal.push(new UI.Toolbar.ToolbarSettingCheckbox(this.showFrameworkListenersSetting, i18nString(UIStrings.resolveEventListenersBoundWith)));\n        UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n        this.update();\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!eventListenersWidgetInstance || forceNew) {\n            eventListenersWidgetInstance = new EventListenersWidget();\n        }\n        return eventListenersWidgetInstance;\n    }\n    doUpdate() {\n        if (this.lastRequestedNode) {\n            this.lastRequestedNode.domModel().runtimeModel().releaseObjectGroup(objectGroupName);\n            delete this.lastRequestedNode;\n        }\n        const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n        if (!node) {\n            this.eventListenersView.reset();\n            this.eventListenersView.addEmptyHolderIfNeeded();\n            return Promise.resolve();\n        }\n        this.lastRequestedNode = node;\n        const selectedNodeOnly = !this.showForAncestorsSetting.get();\n        const promises = [];\n        promises.push(node.resolveToObject(objectGroupName));\n        if (!selectedNodeOnly) {\n            let currentNode = node.parentNode;\n            while (currentNode) {\n                promises.push(currentNode.resolveToObject(objectGroupName));\n                currentNode = currentNode.parentNode;\n            }\n            promises.push(this.windowObjectInNodeContext(node));\n        }\n        return Promise.all(promises)\n            .then(this.eventListenersView.addObjects.bind(this.eventListenersView))\n            .then(this.showFrameworkListenersChanged.bind(this));\n    }\n    wasShown() {\n        UI.Context.Context.instance().setFlavor(EventListenersWidget, this);\n        super.wasShown();\n    }\n    willHide() {\n        super.willHide();\n        UI.Context.Context.instance().setFlavor(EventListenersWidget, null);\n    }\n    toolbarItems() {\n        return this.toolbarItemsInternal;\n    }\n    onDispatchFilterTypeChanged(event) {\n        const filter = event.target;\n        this.dispatchFilterBySetting.set(filter.value);\n    }\n    showFrameworkListenersChanged() {\n        const dispatchFilter = this.dispatchFilterBySetting.get();\n        const showPassive = dispatchFilter === DispatchFilterBy.All || dispatchFilter === DispatchFilterBy.Passive;\n        const showBlocking = dispatchFilter === DispatchFilterBy.All || dispatchFilter === DispatchFilterBy.Blocking;\n        this.eventListenersView.showFrameworkListeners(this.showFrameworkListenersSetting.get(), showPassive, showBlocking);\n    }\n    windowObjectInNodeContext(node) {\n        const executionContexts = node.domModel().runtimeModel().executionContexts();\n        let context = executionContexts[0];\n        if (node.frameId()) {\n            for (let i = 0; i < executionContexts.length; ++i) {\n                const executionContext = executionContexts[i];\n                if (executionContext.frameId === node.frameId() && executionContext.isDefault) {\n                    context = executionContext;\n                }\n            }\n        }\n        return context\n            .evaluate({\n            expression: 'self',\n            objectGroup: objectGroupName,\n            includeCommandLineAPI: false,\n            silent: true,\n            returnByValue: false,\n            generatePreview: false,\n        }, \n        /* userGesture */ false, \n        /* awaitPromise */ false)\n            .then(result => {\n            if ('object' in result) {\n                return result.object;\n            }\n            return null;\n        });\n    }\n    eventListenersArrivedForTest() {\n    }\n}\nexport const DispatchFilterBy = {\n    All: 'All',\n    Blocking: 'Blocking',\n    Passive: 'Passive',\n};\nconst objectGroupName = 'event-listeners-panel';\nexport class ActionDelegate {\n    handleAction(_context, actionId) {\n        switch (actionId) {\n            case 'elements.refresh-event-listeners': {\n                EventListenersWidget.instance().update();\n                return true;\n            }\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=EventListenersWidget.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (c) 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.properties-widget-section {\n  padding: 2px 0 2px 5px;\n  flex: none;\n}\n\n.properties-widget-toolbar {\n  border-bottom: 1px solid var(--sys-color-divider);\n  flex-shrink: 0;\n}\n\n.styles-pane-toolbar {\n  width: 100%;\n}\n\n/*# sourceURL=propertiesWidget.css */\n`);\n\nexport default styles;\n","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport propertiesWidgetStyles from './propertiesWidget.css.js';\nconst OBJECT_GROUP_NAME = 'properties-sidebar-pane';\nconst UIStrings = {\n    /**\n     * @description Text on the checkbox in the Properties tab of the Elements panel, which controls whether\n     * all properties of the currently selected DOM element are shown, or only meaningful properties (i.e.\n     * excluding properties whose values aren't set for example).\n     */\n    showAll: 'Show all',\n    /**\n     * @description Tooltip on the checkbox in the Properties tab of the Elements panel, which controls whether\n     * all properties of the currently selected DOM element are shown, or only meaningful properties (i.e.\n     * excluding properties whose values aren't set for example).\n     */\n    showAllTooltip: 'When unchecked, only properties whose values are neither null nor undefined will be shown',\n    /**\n     * @description Text shown to the user when a filter is applied in the Properties tab of the Elements panel, but\n     * no properties matched the filter and thus no results were returned.\n     */\n    noMatchingProperty: 'No matching property',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/PropertiesWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class PropertiesWidget extends UI.ThrottledWidget.ThrottledWidget {\n    node;\n    showAllPropertiesSetting;\n    filterRegex = null;\n    noMatchesElement;\n    treeOutline;\n    expandController;\n    lastRequestedNode;\n    constructor(throttlingTimeout) {\n        super(true /* isWebComponent */, throttlingTimeout);\n        this.showAllPropertiesSetting = Common.Settings.Settings.instance().createSetting('show-all-properties', false);\n        this.showAllPropertiesSetting.addChangeListener(this.filterList.bind(this));\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.DOMModel.DOMModel, SDK.DOMModel.Events.AttrModified, this.onNodeChange, this, { scoped: true });\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.DOMModel.DOMModel, SDK.DOMModel.Events.AttrRemoved, this.onNodeChange, this, { scoped: true });\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.DOMModel.DOMModel, SDK.DOMModel.Events.CharacterDataModified, this.onNodeChange, this, { scoped: true });\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.DOMModel.DOMModel, SDK.DOMModel.Events.ChildNodeCountUpdated, this.onNodeChange, this, { scoped: true });\n        UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.setNode, this);\n        this.node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n        const hbox = this.contentElement.createChild('div', 'hbox properties-widget-toolbar');\n        const toolbar = new UI.Toolbar.Toolbar('styles-pane-toolbar', hbox);\n        const filterInput = new UI.Toolbar.ToolbarFilter(undefined, 1, 1, undefined, undefined, false);\n        filterInput.addEventListener(\"TextChanged\" /* UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED */, this.onFilterChanged, this);\n        toolbar.appendToolbarItem(filterInput);\n        toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(this.showAllPropertiesSetting, i18nString(UIStrings.showAllTooltip), i18nString(UIStrings.showAll)));\n        this.contentElement.setAttribute('jslog', `${VisualLogging.pane('element-properties').track({ resize: true })}`);\n        this.noMatchesElement = this.contentElement.createChild('div', 'gray-info-message hidden');\n        this.noMatchesElement.textContent = i18nString(UIStrings.noMatchingProperty);\n        this.treeOutline = new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeOutline({ readOnly: true });\n        this.treeOutline.setShowSelectionOnKeyboardFocus(/* show */ true, /* preventTabOrder */ false);\n        this.expandController =\n            new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeExpandController(this.treeOutline);\n        this.contentElement.appendChild(this.treeOutline.element);\n        this.treeOutline.addEventListener(UI.TreeOutline.Events.ElementExpanded, () => {\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.DOMPropertiesExpanded);\n        });\n        this.update();\n    }\n    onFilterChanged(event) {\n        this.filterRegex = event.data ? new RegExp(Platform.StringUtilities.escapeForRegExp(event.data), 'i') : null;\n        this.filterList();\n    }\n    filterList() {\n        let noMatches = true;\n        for (const element of this.treeOutline.rootElement().children()) {\n            const { property } = element;\n            const hidden = !property?.match({\n                includeNullOrUndefinedValues: this.showAllPropertiesSetting.get(),\n                regex: this.filterRegex,\n            });\n            if (!hidden) {\n                noMatches = false;\n            }\n            element.hidden = hidden;\n        }\n        this.noMatchesElement.classList.toggle('hidden', !noMatches);\n    }\n    setNode(event) {\n        this.node = event.data;\n        this.update();\n    }\n    async doUpdate() {\n        if (this.lastRequestedNode) {\n            this.lastRequestedNode.domModel().runtimeModel().releaseObjectGroup(OBJECT_GROUP_NAME);\n            delete this.lastRequestedNode;\n        }\n        if (!this.node) {\n            this.treeOutline.removeChildren();\n            return;\n        }\n        this.lastRequestedNode = this.node;\n        const object = await this.node.resolveToObject(OBJECT_GROUP_NAME);\n        if (!object) {\n            return;\n        }\n        const treeElement = this.treeOutline.rootElement();\n        let { properties } = await SDK.RemoteObject.RemoteObject.loadFromObjectPerProto(object, true /* generatePreview */);\n        treeElement.removeChildren();\n        if (properties === null) {\n            properties = [];\n        }\n        ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement.populateWithProperties(treeElement, properties, null, true /* skipProto */, true /* skipGettersAndSetters */, object);\n        this.filterList();\n    }\n    onNodeChange(event) {\n        if (!this.node) {\n            return;\n        }\n        const data = event.data;\n        const node = (data instanceof SDK.DOMModel.DOMNode ? data : data.node);\n        if (this.node !== node) {\n            return;\n        }\n        this.update();\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([propertiesWidgetStyles]);\n    }\n}\n//# sourceMappingURL=PropertiesWidget.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.stack-trace {\n  font-size: 11px !important; /* stylelint-disable-line declaration-no-important */\n  font-family: Menlo, monospace;\n}\n\n/*# sourceURL=nodeStackTraceWidget.css */\n`);\n\nexport default styles;\n","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport nodeStackTraceWidgetStyles from './nodeStackTraceWidget.css.js';\nconst UIStrings = {\n    /**\n     *@description Message displayed when no JavaScript stack trace is available for the DOM node in the Stack Trace widget of the Elements panel\n     */\n    noStackTraceAvailable: 'No stack trace available',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/NodeStackTraceWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class NodeStackTraceWidget extends UI.ThrottledWidget.ThrottledWidget {\n    noStackTraceElement;\n    creationStackTraceElement;\n    linkifier;\n    constructor() {\n        super(true /* isWebComponent */);\n        this.noStackTraceElement = this.contentElement.createChild('div', 'gray-info-message');\n        this.noStackTraceElement.textContent = i18nString(UIStrings.noStackTraceAvailable);\n        this.creationStackTraceElement = this.contentElement.createChild('div', 'stack-trace');\n        this.linkifier = new Components.Linkifier.Linkifier(MaxLengthForLinks);\n    }\n    wasShown() {\n        super.wasShown();\n        UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n        this.registerCSSFiles([nodeStackTraceWidgetStyles]);\n        this.update();\n    }\n    willHide() {\n        UI.Context.Context.instance().removeFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n    }\n    async doUpdate() {\n        const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n        if (!node) {\n            this.noStackTraceElement.classList.remove('hidden');\n            this.creationStackTraceElement.classList.add('hidden');\n            return;\n        }\n        const creationStackTrace = await node.creationStackTrace();\n        if (creationStackTrace) {\n            this.noStackTraceElement.classList.add('hidden');\n            this.creationStackTraceElement.classList.remove('hidden');\n            const stackTracePreview = Components.JSPresentationUtils.buildStackTracePreviewContents(node.domModel().target(), this.linkifier, { stackTrace: creationStackTrace, tabStops: undefined });\n            this.creationStackTraceElement.removeChildren();\n            this.creationStackTraceElement.appendChild(stackTracePreview.element);\n        }\n        else {\n            this.noStackTraceElement.classList.remove('hidden');\n            this.creationStackTraceElement.classList.add('hidden');\n        }\n    }\n}\nexport const MaxLengthForLinks = 40;\n//# sourceMappingURL=NodeStackTraceWidget.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/**\n * Copyright 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.styles-element-classes-pane {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding: 6px 2px 2px;\n}\n\n.styles-element-classes-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n}\n\n.styles-element-classes-pane [is=\"dt-checkbox\"] {\n  margin-right: 15px;\n}\n\n.styles-element-classes-pane .title-container {\n  padding-bottom: 2px;\n}\n\n.styles-element-classes-pane .new-class-input {\n  padding-left: 3px;\n  padding-right: 3px;\n  overflow: hidden;\n  border: 1px solid var(--sys-color-neutral-outline);\n  border-radius: 4px;\n  line-height: 15px;\n  margin-left: 3px;\n  width: calc(100% - 7px);\n  background-color: var(--sys-color-cdt-base-container);\n  cursor: text;\n\n  &:hover {\n    box-shadow: 0 0 0 1px var(--ref-palette-neutral90);\n  }\n}\n\n/*# sourceURL=classesPaneWidget.css */\n`);\n\nexport default styles;\n","// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport classesPaneWidgetStyles from './classesPaneWidget.css.js';\nimport { ElementsPanel } from './ElementsPanel.js';\nconst UIStrings = {\n    /**\n     * @description Prompt text for a text field in the Classes Pane Widget of the Elements panel.\n     * Class refers to a CSS class.\n     */\n    addNewClass: 'Add new class',\n    /**\n     * @description Screen reader announcement string when adding a CSS class via the Classes Pane Widget.\n     * @example {vbox flex-auto} PH1\n     */\n    classesSAdded: 'Classes {PH1} added',\n    /**\n     * @description Screen reader announcement string when adding a class via the Classes Pane Widget.\n     * @example {title-container} PH1\n     */\n    classSAdded: 'Class {PH1} added',\n    /**\n     * @description Accessible title read by screen readers for the Classes Pane Widget of the Elements\n     * panel. Element is a HTML DOM Element and classes refers to CSS classes.\n     */\n    elementClasses: 'Element Classes',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ClassesPaneWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ClassesPaneWidget extends UI.Widget.Widget {\n    input;\n    classesContainer;\n    prompt;\n    mutatingNodes;\n    pendingNodeClasses;\n    updateNodeThrottler;\n    previousTarget;\n    constructor() {\n        super(true);\n        this.contentElement.className = 'styles-element-classes-pane';\n        this.contentElement.setAttribute('jslog', `${VisualLogging.pane('elements-classes')}`);\n        const container = this.contentElement.createChild('div', 'title-container');\n        this.input = container.createChild('div', 'new-class-input monospace');\n        this.setDefaultFocusedElement(this.input);\n        this.classesContainer = this.contentElement.createChild('div', 'source-code');\n        this.classesContainer.classList.add('styles-element-classes-container');\n        this.prompt = new ClassNamePrompt(this.nodeClasses.bind(this));\n        this.prompt.setAutocompletionTimeout(0);\n        this.prompt.renderAsBlock();\n        const proxyElement = this.prompt.attach(this.input);\n        this.prompt.setPlaceholder(i18nString(UIStrings.addNewClass));\n        this.prompt.addEventListener(\"TextChanged\" /* UI.TextPrompt.Events.TEXT_CHANGED */, this.onTextChanged, this);\n        proxyElement.addEventListener('keydown', this.onKeyDown.bind(this), false);\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.DOMModel.DOMModel, SDK.DOMModel.Events.DOMMutated, this.onDOMMutated, this, { scoped: true });\n        this.mutatingNodes = new Set();\n        this.pendingNodeClasses = new Map();\n        this.updateNodeThrottler = new Common.Throttler.Throttler(0);\n        this.previousTarget = null;\n        UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.onSelectedNodeChanged, this);\n    }\n    splitTextIntoClasses(text) {\n        return text.split(/[,\\s]/).map(className => className.trim()).filter(className => className.length);\n    }\n    onKeyDown(event) {\n        if (!(event.key === 'Enter') && !Platform.KeyboardUtilities.isEscKey(event)) {\n            return;\n        }\n        if (event.key === 'Enter') {\n            event.consume();\n            if (this.prompt.acceptAutoComplete()) {\n                return;\n            }\n        }\n        const eventTarget = event.target;\n        let text = eventTarget.textContent;\n        if (Platform.KeyboardUtilities.isEscKey(event)) {\n            if (!Platform.StringUtilities.isWhitespace(text)) {\n                event.consume(true);\n            }\n            text = '';\n        }\n        this.prompt.clearAutocomplete();\n        eventTarget.textContent = '';\n        const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n        if (!node) {\n            return;\n        }\n        const classNames = this.splitTextIntoClasses(text);\n        if (!classNames.length) {\n            this.installNodeClasses(node);\n            return;\n        }\n        for (const className of classNames) {\n            this.toggleClass(node, className, true);\n        }\n        // annoucementString is used for screen reader to announce that the class(es) has been added successfully.\n        const joinClassString = classNames.join(' ');\n        const announcementString = classNames.length > 1 ? i18nString(UIStrings.classesSAdded, { PH1: joinClassString }) :\n            i18nString(UIStrings.classSAdded, { PH1: joinClassString });\n        UI.ARIAUtils.alert(announcementString);\n        this.installNodeClasses(node);\n        this.update();\n    }\n    onTextChanged() {\n        const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n        if (!node) {\n            return;\n        }\n        this.installNodeClasses(node);\n    }\n    onDOMMutated(event) {\n        const node = event.data;\n        if (this.mutatingNodes.has(node)) {\n            return;\n        }\n        cachedClassesMap.delete(node);\n        this.update();\n    }\n    onSelectedNodeChanged(event) {\n        if (this.previousTarget && this.prompt.text()) {\n            this.input.textContent = '';\n            this.installNodeClasses(this.previousTarget);\n        }\n        this.previousTarget = event.data;\n        this.update();\n    }\n    wasShown() {\n        super.wasShown();\n        this.update();\n        this.registerCSSFiles([classesPaneWidgetStyles]);\n    }\n    update() {\n        if (!this.isShowing()) {\n            return;\n        }\n        let node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n        if (node) {\n            node = node.enclosingElementOrSelf();\n        }\n        this.classesContainer.removeChildren();\n        // @ts-ignore this.input is a div, not an input element. So this line makes no sense at all\n        this.input.disabled = !node;\n        if (!node) {\n            return;\n        }\n        const classes = this.nodeClasses(node);\n        const keys = [...classes.keys()];\n        keys.sort(Platform.StringUtilities.caseInsensetiveComparator);\n        for (const className of keys) {\n            const label = UI.UIUtils.CheckboxLabel.create(className, classes.get(className), undefined, 'element-class', true);\n            label.classList.add('monospace');\n            label.checkboxElement.addEventListener('click', this.onClick.bind(this, className), false);\n            this.classesContainer.appendChild(label);\n        }\n    }\n    onClick(className, event) {\n        const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n        if (!node) {\n            return;\n        }\n        const enabled = event.target.checked;\n        this.toggleClass(node, className, enabled);\n        this.installNodeClasses(node);\n    }\n    nodeClasses(node) {\n        let result = cachedClassesMap.get(node);\n        if (!result) {\n            const classAttribute = node.getAttribute('class') || '';\n            const classes = classAttribute.split(/\\s/);\n            result = new Map();\n            for (let i = 0; i < classes.length; ++i) {\n                const className = classes[i].trim();\n                if (!className.length) {\n                    continue;\n                }\n                result.set(className, true);\n            }\n            cachedClassesMap.set(node, result);\n        }\n        return result;\n    }\n    toggleClass(node, className, enabled) {\n        const classes = this.nodeClasses(node);\n        classes.set(className, enabled);\n        ButtonProvider.instance().item().setChecked([...classes.values()].includes(true));\n    }\n    installNodeClasses(node) {\n        const classes = this.nodeClasses(node);\n        const activeClasses = new Set();\n        for (const className of classes.keys()) {\n            if (classes.get(className)) {\n                activeClasses.add(className);\n            }\n        }\n        const additionalClasses = this.splitTextIntoClasses(this.prompt.textWithCurrentSuggestion());\n        for (const className of additionalClasses) {\n            activeClasses.add(className);\n        }\n        const newClasses = [...activeClasses.values()].sort();\n        this.pendingNodeClasses.set(node, newClasses.join(' '));\n        void this.updateNodeThrottler.schedule(this.flushPendingClasses.bind(this));\n    }\n    async flushPendingClasses() {\n        const promises = [];\n        for (const node of this.pendingNodeClasses.keys()) {\n            this.mutatingNodes.add(node);\n            const promise = node.setAttributeValuePromise('class', this.pendingNodeClasses.get(node))\n                .then(onClassValueUpdated.bind(this, node));\n            promises.push(promise);\n        }\n        this.pendingNodeClasses.clear();\n        await Promise.all(promises);\n        function onClassValueUpdated(node) {\n            this.mutatingNodes.delete(node);\n        }\n    }\n}\nconst cachedClassesMap = new WeakMap();\nlet buttonProviderInstance;\nexport class ButtonProvider {\n    button;\n    view;\n    constructor() {\n        this.button = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.elementClasses), 'class');\n        this.button.element.style.setProperty('--dot-toggle-top', '12px');\n        this.button.element.style.setProperty('--dot-toggle-left', '18px');\n        this.button.element.setAttribute('jslog', `${VisualLogging.toggleSubpane('elements-classes').track({ click: true })}`);\n        this.button.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.clicked, this);\n        this.view = new ClassesPaneWidget();\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!buttonProviderInstance || forceNew) {\n            buttonProviderInstance = new ButtonProvider();\n        }\n        return buttonProviderInstance;\n    }\n    clicked() {\n        ElementsPanel.instance().showToolbarPane(!this.view.isShowing() ? this.view : null, this.button);\n    }\n    item() {\n        return this.button;\n    }\n}\nexport class ClassNamePrompt extends UI.TextPrompt.TextPrompt {\n    nodeClasses;\n    selectedFrameId;\n    classNamesPromise;\n    constructor(nodeClasses) {\n        super();\n        this.nodeClasses = nodeClasses;\n        this.initialize(this.buildClassNameCompletions.bind(this), ' ');\n        this.disableDefaultSuggestionForEmptyInput();\n        this.selectedFrameId = '';\n        this.classNamesPromise = null;\n    }\n    async getClassNames(selectedNode) {\n        const promises = [];\n        const completions = new Set();\n        this.selectedFrameId = selectedNode.frameId();\n        const cssModel = selectedNode.domModel().cssModel();\n        const allStyleSheets = cssModel.allStyleSheets();\n        for (const stylesheet of allStyleSheets) {\n            if (stylesheet.frameId !== this.selectedFrameId) {\n                continue;\n            }\n            const cssPromise = cssModel.getClassNames(stylesheet.id).then(classes => {\n                for (const className of classes) {\n                    completions.add(className);\n                }\n            });\n            promises.push(cssPromise);\n        }\n        const ownerDocumentId = (selectedNode.ownerDocument.id);\n        const domPromise = selectedNode.domModel().classNamesPromise(ownerDocumentId).then(classes => {\n            for (const className of classes) {\n                completions.add(className);\n            }\n        });\n        promises.push(domPromise);\n        await Promise.all(promises);\n        return [...completions];\n    }\n    async buildClassNameCompletions(expression, prefix, force) {\n        if (!prefix || force) {\n            this.classNamesPromise = null;\n        }\n        const selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n        if (!selectedNode || (!prefix && !force && !expression.trim())) {\n            return [];\n        }\n        if (!this.classNamesPromise || this.selectedFrameId !== selectedNode.frameId()) {\n            this.classNamesPromise = this.getClassNames(selectedNode);\n        }\n        let completions = await this.classNamesPromise;\n        const classesMap = this.nodeClasses(selectedNode);\n        completions = completions.filter(value => !classesMap.get(value));\n        if (prefix[0] === '.') {\n            completions = completions.map(value => '.' + value);\n        }\n        return completions.filter(value => value.startsWith(prefix)).sort().map(completion => {\n            return {\n                text: completion,\n                title: undefined,\n                subtitle: undefined,\n                priority: undefined,\n                isSecondary: undefined,\n                subtitleRenderer: undefined,\n                selectionRange: undefined,\n                hideGhostText: undefined,\n                iconElement: undefined,\n            };\n        });\n    }\n}\n//# sourceMappingURL=ClassesPaneWidget.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/**\n * Copyright 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.styles-element-state-pane {\n  overflow: hidden;\n  padding-left: 2px;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n  margin-top: 0;\n  padding-bottom: 2px;\n}\n\n.styles-element-state-pane > .page-state-checkbox {\n  margin-block: 6px;\n  display: flex;\n  align-items: center;\n  gap: 2px;\n}\n\n.styles-element-state-pane .section-header {\n  margin: 8px 4px 6px;\n  color: var(--color-text-secondary);\n}\n\n.styles-element-state-pane > table {\n  width: 100%;\n  border-spacing: 0;\n}\n\n.styles-element-state-pane td {\n  padding: 0;\n}\n\n.pseudo-states-container {\n  display: grid;\n  column-gap: 12px;\n  grid-template-columns: repeat(2, 1fr);\n  grid-auto-flow: row;\n}\n\n.pseudo-states-container.specific-pseudo-states {\n  grid-template-columns: repeat(2, 1fr);\n  margin-bottom: 4px;\n}\n\n/*# sourceURL=elementStatePaneWidget.css */\n`);\n\nexport default styles;\n","// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { ElementsPanel } from './ElementsPanel.js';\nimport elementStatePaneWidgetStyles from './elementStatePaneWidget.css.js';\nconst UIStrings = {\n    /**\n     * @description Title of a section in the Element State Pane Widget of the Elements panel. The\n     * controls in this section allow users to force a particular state on the selected element, e.g. a\n     * focused state via :focus or a hover state via :hover.\n     */\n    forceElementState: 'Force element state',\n    /**\n     * @description Tooltip text in Element State Pane Widget of the Elements panel. For a button that\n     * opens a tool that toggles the various states of the selected element on/off.\n     */\n    toggleElementState: 'Toggle Element State',\n    /**\n     * @description The name of a checkbox setting in the Element & Page State Pane Widget of the Elements panel.. This setting\n     * emulates/pretends that the webpage is focused.\n     */\n    emulateFocusedPage: 'Emulate a focused page',\n    /**\n     * @description Explanation text for the 'Emulate a focused page' setting in the Rendering tool.\n     */\n    emulatesAFocusedPage: 'Keep page focused. Commonly used for debugging disappearing elements.',\n    /**\n     * @description Similar with forceElementState but allows users to force specific state of the selected element.\n     */\n    forceElementSpecificStates: 'Force specific element state',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ElementStatePaneWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nvar SpecificPseudoStates;\n(function (SpecificPseudoStates) {\n    SpecificPseudoStates[\"ENABLED\"] = \"enabled\";\n    SpecificPseudoStates[\"DISABLED\"] = \"disabled\";\n    SpecificPseudoStates[\"VALID\"] = \"valid\";\n    SpecificPseudoStates[\"INVALID\"] = \"invalid\";\n    SpecificPseudoStates[\"USER_VALID\"] = \"user-valid\";\n    SpecificPseudoStates[\"USER_INVALID\"] = \"user-invalid\";\n    SpecificPseudoStates[\"REQUIRED\"] = \"required\";\n    SpecificPseudoStates[\"OPTIONAL\"] = \"optional\";\n    SpecificPseudoStates[\"READ_ONLY\"] = \"read-only\";\n    SpecificPseudoStates[\"READ_WRITE\"] = \"read-write\";\n    SpecificPseudoStates[\"IN_RANGE\"] = \"in-range\";\n    SpecificPseudoStates[\"OUT_OF_RANGE\"] = \"out-of-range\";\n    SpecificPseudoStates[\"VISITED\"] = \"visited\";\n    SpecificPseudoStates[\"CHECKED\"] = \"checked\";\n    SpecificPseudoStates[\"INDETERMINATE\"] = \"indeterminate\";\n    SpecificPseudoStates[\"PLACEHOLDER_SHOWN\"] = \"placeholder-shown\";\n    SpecificPseudoStates[\"AUTOFILL\"] = \"autofill\";\n})(SpecificPseudoStates || (SpecificPseudoStates = {})); // TODO(crbug.com/332914922): Also add :link and tests for :visited when the bug is fixed.\nexport class ElementStatePaneWidget extends UI.Widget.Widget {\n    inputs;\n    inputStates;\n    cssModel;\n    specificPseudoStateDivs;\n    specificHeader;\n    throttler;\n    constructor() {\n        super(true);\n        this.contentElement.className = 'styles-element-state-pane';\n        this.contentElement.setAttribute('jslog', `${VisualLogging.pane('element-states')}`);\n        const inputs = [];\n        this.inputs = inputs;\n        this.inputStates = new WeakMap();\n        const createSectionHeader = (title) => {\n            const sectionHeaderContainer = document.createElement('div');\n            sectionHeaderContainer.classList.add('section-header');\n            UI.UIUtils.createTextChild(sectionHeaderContainer.createChild('span'), title);\n            return sectionHeaderContainer;\n        };\n        const clickListener = (event) => {\n            const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n            if (!node || !(event.target instanceof HTMLInputElement)) {\n                return;\n            }\n            const state = this.inputStates.get(event.target);\n            if (!state) {\n                return;\n            }\n            node.domModel().cssModel().forcePseudoState(node, state, event.target.checked);\n        };\n        const createElementStateCheckbox = (state) => {\n            const div = document.createElement('div');\n            div.id = state;\n            const label = UI.UIUtils.CheckboxLabel.create(':' + state, undefined, undefined, undefined, true);\n            const input = label.checkboxElement;\n            this.inputStates.set(input, state);\n            input.addEventListener('click', clickListener, false);\n            input.setAttribute('jslog', `${VisualLogging.toggle().track({ change: true }).context(state)}`);\n            inputs.push(input);\n            div.appendChild(label);\n            return div;\n        };\n        const createEmulateFocusedPageCheckbox = () => {\n            const div = document.createElement('div');\n            div.classList.add('page-state-checkbox');\n            const label = UI.UIUtils.CheckboxLabel.create(i18nString(UIStrings.emulateFocusedPage), undefined, undefined, 'emulate-page-focus', true);\n            UI.SettingsUI.bindCheckbox(label.checkboxElement, Common.Settings.Settings.instance().moduleSetting('emulate-page-focus'), {\n                enable: Host.UserMetrics.Action.ToggleEmulateFocusedPageFromStylesPaneOn,\n                disable: Host.UserMetrics.Action.ToggleEmulateFocusedPageFromStylesPaneOff,\n            });\n            UI.Tooltip.Tooltip.install(label.textElement, i18nString(UIStrings.emulatesAFocusedPage));\n            const learnMoreButton = new Buttons.Button.Button();\n            learnMoreButton.data = {\n                variant: \"icon\" /* Buttons.Button.Variant.ICON */,\n                iconName: 'help',\n                size: \"SMALL\" /* Buttons.Button.Size.SMALL */,\n                jslogContext: 'learn-more',\n            };\n            learnMoreButton.addEventListener('click', () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab('https://goo.gle/devtools-emulate-focused-page'));\n            div.appendChild(label);\n            div.appendChild(learnMoreButton);\n            return div;\n        };\n        this.contentElement.className = 'styles-element-state-pane';\n        // Populate page states\n        const keepPageFocusedCheckbox = createEmulateFocusedPageCheckbox();\n        this.contentElement.appendChild(keepPageFocusedCheckbox);\n        // Populate element states\n        this.contentElement.appendChild(createSectionHeader(i18nString(UIStrings.forceElementState)));\n        const persistentContainer = document.createElement('div');\n        persistentContainer.classList.add('source-code');\n        persistentContainer.classList.add('pseudo-states-container');\n        UI.ARIAUtils.markAsPresentation(persistentContainer);\n        persistentContainer.appendChild(createElementStateCheckbox('active'));\n        persistentContainer.appendChild(createElementStateCheckbox('hover'));\n        persistentContainer.appendChild(createElementStateCheckbox('focus'));\n        persistentContainer.appendChild(createElementStateCheckbox('focus-within'));\n        persistentContainer.appendChild(createElementStateCheckbox('focus-visible'));\n        persistentContainer.appendChild(createElementStateCheckbox('target'));\n        this.contentElement.appendChild(persistentContainer);\n        const elementSpecificContainer = document.createElement('div');\n        elementSpecificContainer.classList.add('source-code');\n        elementSpecificContainer.classList.add('pseudo-states-container');\n        elementSpecificContainer.classList.add('specific-pseudo-states');\n        UI.ARIAUtils.markAsPresentation(elementSpecificContainer);\n        this.specificPseudoStateDivs = new Map();\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.ENABLED, createElementStateCheckbox(SpecificPseudoStates.ENABLED));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.DISABLED, createElementStateCheckbox(SpecificPseudoStates.DISABLED));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.VALID, createElementStateCheckbox(SpecificPseudoStates.VALID));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.INVALID, createElementStateCheckbox(SpecificPseudoStates.INVALID));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.USER_VALID, createElementStateCheckbox(SpecificPseudoStates.USER_VALID));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.USER_INVALID, createElementStateCheckbox(SpecificPseudoStates.USER_INVALID));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.REQUIRED, createElementStateCheckbox(SpecificPseudoStates.REQUIRED));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.OPTIONAL, createElementStateCheckbox(SpecificPseudoStates.OPTIONAL));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.READ_ONLY, createElementStateCheckbox(SpecificPseudoStates.READ_ONLY));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.READ_WRITE, createElementStateCheckbox(SpecificPseudoStates.READ_WRITE));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.IN_RANGE, createElementStateCheckbox(SpecificPseudoStates.IN_RANGE));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.OUT_OF_RANGE, createElementStateCheckbox(SpecificPseudoStates.OUT_OF_RANGE));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.VISITED, createElementStateCheckbox(SpecificPseudoStates.VISITED));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.CHECKED, createElementStateCheckbox(SpecificPseudoStates.CHECKED));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.INDETERMINATE, createElementStateCheckbox(SpecificPseudoStates.INDETERMINATE));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.PLACEHOLDER_SHOWN, createElementStateCheckbox(SpecificPseudoStates.PLACEHOLDER_SHOWN));\n        this.specificPseudoStateDivs.set(SpecificPseudoStates.AUTOFILL, createElementStateCheckbox(SpecificPseudoStates.AUTOFILL));\n        this.specificPseudoStateDivs.forEach(div => {\n            elementSpecificContainer.appendChild(div);\n        });\n        this.specificHeader = document.createElement('details');\n        this.specificHeader.classList.add('specific-details');\n        const sectionHeaderContainer = document.createElement('summary');\n        sectionHeaderContainer.classList.add('force-specific-element-header');\n        sectionHeaderContainer.classList.add('section-header');\n        UI.UIUtils.createTextChild(sectionHeaderContainer.createChild('span'), i18nString(UIStrings.forceElementSpecificStates));\n        this.specificHeader.appendChild(sectionHeaderContainer);\n        this.specificHeader.appendChild(elementSpecificContainer);\n        this.contentElement.appendChild(this.specificHeader);\n        this.throttler = new Common.Throttler.Throttler(100);\n        UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this.update, this);\n    }\n    updateModel(cssModel) {\n        if (this.cssModel === cssModel) {\n            return;\n        }\n        if (this.cssModel) {\n            this.cssModel.removeEventListener(SDK.CSSModel.Events.PseudoStateForced, this.update, this);\n        }\n        this.cssModel = cssModel;\n        if (this.cssModel) {\n            this.cssModel.addEventListener(SDK.CSSModel.Events.PseudoStateForced, this.update, this);\n        }\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([elementStatePaneWidgetStyles]);\n        this.update();\n    }\n    update() {\n        let node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n        if (node) {\n            node = node.enclosingElementOrSelf();\n        }\n        this.updateModel(node ? node.domModel().cssModel() : null);\n        if (node) {\n            const nodePseudoState = node.domModel().cssModel().pseudoState(node);\n            for (const input of this.inputs) {\n                input.disabled = Boolean(node.pseudoType());\n                const state = this.inputStates.get(input);\n                input.checked = nodePseudoState && state !== undefined ? nodePseudoState.indexOf(state) >= 0 : false;\n            }\n        }\n        else {\n            for (const input of this.inputs) {\n                input.disabled = true;\n                input.checked = false;\n            }\n        }\n        void this.throttler.schedule(this.updateElementSpecificStatesTable.bind(this, node));\n        ButtonProvider.instance().item().setToggled(this.inputs.some(input => input.checked));\n    }\n    async updateElementSpecificStatesTable(node = null) {\n        if (!node || node.nodeType() !== Node.ELEMENT_NODE) {\n            this.specificHeader.hidden = true;\n            this.updateElementSpecificStatesTableForTest();\n            return;\n        }\n        let showedACheckbox = false;\n        const hideSpecificCheckbox = (pseudoClass, hide) => {\n            const checkbox = this.specificPseudoStateDivs.get(pseudoClass);\n            if (checkbox) {\n                checkbox.hidden = hide;\n            }\n            showedACheckbox = showedACheckbox || !hide;\n        };\n        const isElementOfTypes = (node, types) => {\n            return types.includes(node.nodeName()?.toLowerCase());\n        };\n        const isInputWithTypeRadioOrCheckbox = (node) => {\n            return isElementOfTypes(node, ['input']) &&\n                (node.getAttribute('type') === 'checkbox' || node.getAttribute('type') === 'radio');\n        };\n        // An autonomous custom element is called a form-associated custom element if the element is associated with a custom element definition whose form-associated field is set to true.\n        // https://html.spec.whatwg.org/multipage/custom-elements.html#form-associated-custom-element\n        const isFormAssociatedCustomElement = async (node) => {\n            function getFormAssociatedField() {\n                return ('formAssociated' in this.constructor && this.constructor.formAssociated === true);\n            }\n            const response = await node.callFunction(getFormAssociatedField);\n            return response ? response.value : false;\n        };\n        const isFormAssociated = await isFormAssociatedCustomElement(node);\n        if (isElementOfTypes(node, ['button', 'input', 'select', 'textarea', 'optgroup', 'option', 'fieldset']) ||\n            isFormAssociated) {\n            hideSpecificCheckbox(SpecificPseudoStates.ENABLED, false);\n            hideSpecificCheckbox(SpecificPseudoStates.DISABLED, false);\n        }\n        else {\n            hideSpecificCheckbox(SpecificPseudoStates.ENABLED, true);\n            hideSpecificCheckbox(SpecificPseudoStates.DISABLED, true);\n        }\n        if (isElementOfTypes(node, ['button', 'fieldset', 'input', 'object', 'output', 'select', 'textarea', 'img']) ||\n            isFormAssociated) {\n            hideSpecificCheckbox(SpecificPseudoStates.VALID, false);\n            hideSpecificCheckbox(SpecificPseudoStates.INVALID, false);\n        }\n        else {\n            hideSpecificCheckbox(SpecificPseudoStates.VALID, true);\n            hideSpecificCheckbox(SpecificPseudoStates.INVALID, true);\n        }\n        if (isElementOfTypes(node, ['input', 'select', 'textarea'])) {\n            hideSpecificCheckbox(SpecificPseudoStates.USER_VALID, false);\n            hideSpecificCheckbox(SpecificPseudoStates.USER_INVALID, false);\n            hideSpecificCheckbox(SpecificPseudoStates.REQUIRED, false);\n            hideSpecificCheckbox(SpecificPseudoStates.OPTIONAL, false);\n        }\n        else {\n            hideSpecificCheckbox(SpecificPseudoStates.USER_VALID, true);\n            hideSpecificCheckbox(SpecificPseudoStates.USER_INVALID, true);\n            hideSpecificCheckbox(SpecificPseudoStates.REQUIRED, true);\n            hideSpecificCheckbox(SpecificPseudoStates.OPTIONAL, true);\n        }\n        if (isElementOfTypes(node, ['input', 'textarea'])) {\n            hideSpecificCheckbox(SpecificPseudoStates.READ_WRITE, false);\n        }\n        else {\n            hideSpecificCheckbox(SpecificPseudoStates.READ_WRITE, true);\n        }\n        if (isElementOfTypes(node, [\n            'button',\n            'datalist',\n            'fieldset',\n            'label',\n            'legend',\n            'meter',\n            'optgroup',\n            'option',\n            'output',\n            'progress',\n            'select',\n        ])) {\n            hideSpecificCheckbox(SpecificPseudoStates.READ_ONLY, false);\n        }\n        else {\n            hideSpecificCheckbox(SpecificPseudoStates.READ_ONLY, true);\n        }\n        if (isElementOfTypes(node, ['input']) &&\n            (node.getAttribute('min') !== undefined || node.getAttribute('max') !== undefined)) {\n            hideSpecificCheckbox(SpecificPseudoStates.IN_RANGE, false);\n            hideSpecificCheckbox(SpecificPseudoStates.OUT_OF_RANGE, false);\n        }\n        else {\n            hideSpecificCheckbox(SpecificPseudoStates.IN_RANGE, true);\n            hideSpecificCheckbox(SpecificPseudoStates.OUT_OF_RANGE, true);\n        }\n        if (isElementOfTypes(node, ['a', 'area']) && node.getAttribute('href') !== undefined) {\n            hideSpecificCheckbox(SpecificPseudoStates.VISITED, false);\n        }\n        else {\n            hideSpecificCheckbox(SpecificPseudoStates.VISITED, true);\n        }\n        if (isInputWithTypeRadioOrCheckbox(node) || isElementOfTypes(node, ['option'])) {\n            hideSpecificCheckbox(SpecificPseudoStates.CHECKED, false);\n        }\n        else {\n            hideSpecificCheckbox(SpecificPseudoStates.CHECKED, true);\n        }\n        if (isInputWithTypeRadioOrCheckbox(node) || isElementOfTypes(node, ['progress'])) {\n            hideSpecificCheckbox(SpecificPseudoStates.INDETERMINATE, false);\n        }\n        else {\n            hideSpecificCheckbox(SpecificPseudoStates.INDETERMINATE, true);\n        }\n        if (isElementOfTypes(node, ['input', 'textarea'])) {\n            hideSpecificCheckbox(SpecificPseudoStates.PLACEHOLDER_SHOWN, false);\n        }\n        else {\n            hideSpecificCheckbox(SpecificPseudoStates.PLACEHOLDER_SHOWN, true);\n        }\n        if (isElementOfTypes(node, ['input'])) {\n            hideSpecificCheckbox(SpecificPseudoStates.AUTOFILL, false);\n        }\n        else {\n            hideSpecificCheckbox(SpecificPseudoStates.AUTOFILL, true);\n        }\n        this.specificHeader.hidden = showedACheckbox ? false : true;\n        this.updateElementSpecificStatesTableForTest();\n    }\n    updateElementSpecificStatesTableForTest() {\n    }\n}\nlet buttonProviderInstance;\nexport class ButtonProvider {\n    button;\n    view;\n    constructor() {\n        this.button = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleElementState), 'hover');\n        this.button.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.clicked, this);\n        this.button.element.classList.add('element-state');\n        this.button.element.setAttribute('jslog', `${VisualLogging.toggleSubpane('element-states').track({ click: true })}`);\n        this.button.element.style.setProperty('--dot-toggle-top', '12px');\n        this.button.element.style.setProperty('--dot-toggle-left', '18px');\n        this.view = new ElementStatePaneWidget();\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!buttonProviderInstance || forceNew) {\n            buttonProviderInstance = new ButtonProvider();\n        }\n        return buttonProviderInstance;\n    }\n    clicked() {\n        ElementsPanel.instance().showToolbarPane(!this.view.isShowing() ? this.view : null, this.button);\n    }\n    item() {\n        return this.button;\n    }\n}\n//# sourceMappingURL=ElementStatePaneWidget.js.map"],"names":["SwatchPopoverHelper","Common.ObjectWrapper.ObjectWrapper","UI.GlassPane.GlassPane","event","relatedTarget","anchorElement","view","hiddenCallback","VisualLogging.setMappedParent","swatchPopoverStyles","document","anchorBox","ColorSwatch","swatch","UI.Widget.WidgetFocusRestorer","commitEdit","Platform.KeyboardUtilities.ESCAPE_KEY","html","LitHtml","isLeafNode","node","getModel","frameId","model","SDK.FrameManager.FrameManager","SDK.AccessibilityModel.AccessibilityModel","getRootNode","root","getFrameIdForNodeOrDocument","SDK.DOMModel.DOMDocument","getNodeAndAncestorsFromDOMNode","domNode","result","outermostFrameId","ancestors","getChildren","sdkNodeToAXTreeNodes","sdkNode","treeNodeData","getNodeId","childNodes","childNode","accessibilityNodeRenderer","name","role","properties","ignored","id","styles","AccessibilityTreeView","UI.Widget.VBox","toggleButton","accessibilityTreeComponent","container","VisualLogging.tree","SDK.TargetManager.TargetManager","axNode","deferredNode","ElementsPanel","SDK.OverlayModel.OverlayModel","accessibilityTreeViewStyles","AccessibilityTreeUtils.getRootNode","treeData","AccessibilityTreeUtils.sdkNodeToAXTreeNodes","AccessibilityTreeUtils.accessibilityNodeRenderer","selectedNode","AccessibilityTreeUtils.getNodeAndAncestorsFromDOMNode","inspectedAXNode","AccessibilityTreeUtils.getNodeId","inspectedNode","data","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","BezierPopoverIcon","treeElement","swatchPopoverHelper","UI.Tooltip.Tooltip","InlineEditor.AnimationTimingModel.AnimationTimingModel","InlineEditor.AnimationTimingModel.LINEAR_BEZIER","InlineEditor.BezierEditor.BezierEditor","uiLocation","Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding","Common.Revealer.reveal","_event","propertyText","ColorSwatchPopoverIcon","InlineEditor.ColorSwatch.ClickEvent","matchedStyles","style","cssVariables","colors","colorNames","cssVariable","value","Common.Color.parse","contrastInfo","color","ColorPicker.Spectrum.Spectrum","UI.Context.Context","Host.userMetrics","colorName","text","ShadowSwatchPopoverHelper","shadowSwatch","InlineEditor.CSSShadowEditor.CSSShadowEditor","FontEditorSectionManager","section","propertyName","elementRemoved","styleText","newProperty","removedIndex","propertyMap","fontProperty","treeElementFromMap","iconElement","parentPane","propertyValueMap","InlineEditor.FontEditor.FontEditor","ComputedStyleModel","SDK.DOMModel.DOMNode","cssModel","Common.EventTarget.removeEventListeners","domModel","resourceTreeModel","SDK.ResourceTreeModel.ResourceTreeModel","SDK.CSSModel.Events","SDK.DOMModel.Events","SDK.ResourceTreeModel.Events","refreshContents","elementNode","nodeId","verifyOutdated","ComputedStyle","computedStyle","ImagePreviewPopover","getLinkElement","getDOMNode","UI.PopoverHelper.PopoverHelper","link","href","elementToURLMap","popover","precomputedFeatures","Components.ImagePreview.ImagePreview","preview","element","url","PlatformFontsWidget","UI.ThrottledWidget.ThrottledWidget","sharedModel","platformFonts","isEmptySection","a","b","platformFont","fontStatElement","familyNameElement","postScriptNameElement","fontOriginElement","fontOrigin","fontUsageElement","usage","platformFontsWidgetStyles","ASTUtils","SDK.CSSPropertyParser.ASTUtils","matcherBase","SDK.CSSPropertyParser.matcherBase","tokenizeDeclaration","SDK.CSSPropertyParser.tokenizeDeclaration","AngleMatch","AngleMatcher","SDK.CSSMetadata.cssMetadata","matching","unit","literalToNumber","ast","ColorMixMatch","space","color1","color2","ColorMixMatcher","computedValueTree","computedValueArgs","p1","n","p2","args","URLMatch","URLMatcher","callee","lparenNode","urlNode","rparenNode","LinearGradientMatch","LinearGradientMatcher","ColorMatch","currentColorCallback","ColorMatcher","Common.Color.Nicknames","callback","LightDarkColorMatch","light","dark","LightDarkColorMatcher","LinkableNameMatch","LinkableNameMatcher","currentDeclarationNodes","declaration","computedText","tokenized","identifierCategory","itNode","categoryValue","parentNode","isParentADeclaration","isInsideVarCall","isAParentDeclarationOrVarCall","shouldMatchOnlyVariableName","BezierMatch","BezierMatcher","isCubicBezierKeyword","UI.Geometry.CubicBezier","isCubicBezierOrLinearFunction","StringMatch","StringMatcher","ShadowMatch","shadowType","ShadowMatcher","valueNodes","valueText","FontMatch","FontMatcher","regex","InlineEditor.FontEditorUtils.FontFamilyRegex","InlineEditor.FontEditorUtils.FontPropertiesRegex","LengthMatch","LengthMatcher","match","InlineEditor.CSSLength.CSS_LENGTH_REGEX","FlexGridMatch","isFlex","FlexGridMatcher","GridTemplateMatch","lines","GridTemplateMatcher","curLine","hasLeadingLineNames","needClosingLineNames","parseNodes","nodes","varParsingMode","curNode","SDK.CSSPropertyParser.VariableMatch","varNodes","line","AnchorFunctionMatch","functionName","AnchorFunctionMatcher","calleeText","parent","arg","PositionAnchorMatch","PositionAnchorMatcher","dashedIdentifier","CSSWideKeywordMatch","property","CSSWideKeywordMatcher","child","SDK.CSSMetadata.CSSMetadata","PositionTryMatch","preamble","fallbacks","PositionTryMatcher","i","DefaultCategoryOrder","CategorizedProperties","CategoriesByPropertyName","category","styleNames","styleName","matchCategoriesByPropertyName","categorizePropertyName","cssMetadata","canonicalName","categories","shorthands","shorthand","shorthandCategories","ElementsSidebarPane","delegatesFocus","Common.Throttler.Throttler","innerUpdate","layersWidgetInstance","LayersWidget","UI.Widget.Widget","TreeOutline.TreeOutline.TreeOutline","VisualLogging.pane","UI.UIUtils.createTextChild","layersWidgetStyles","makeTreeNode","parentId","layer","subLayers","SDK.CSSModel.CSSModel","layer1","layer2","rootLayer","TreeOutline.TreeOutline.defaultRenderer","layerName","ButtonProvider","opts","forceNew","buttonProviderInstance","ButtonProvider$3","UI.Toolbar.ToolbarToggle","VisualLogging.toggleSubpane","buildPropertyDefinitionText","buildPropertyName","buildPropertyValue","isFlexContainer","computedStyles","display","blockContainerDisplayValueSet","isBlockContainer","displayValue","split","isInlineElement","possiblyReplacedElements","isPossiblyReplacedElement","nodeName","isGridContainer","isMulticolContainer","columnWidth","columnCount","Hint","#hintMessage","#possibleFixMessage","#learnMoreLink","hintMessage","possibleFixMessage","learnMoreLink","CSSRuleValidator","#affectedProperties","affectedProperties","AlignContentValidator","_propertyName","reasonPropertyDeclaration","affectedPropertyDeclarationCode","FlexItemValidator","parentComputedStyles","targetParentPropertyDeclaration","FlexContainerValidator","targetRuleCode","GridContainerValidator","GridItemValidator","FlexOrGridItemValidator","FlexGridValidator","reasonContainerDisplayName","reasonPropertyName","reasonAlternativePropertyName","MulticolFlexGridValidator","PaddingValidator","PositionValidator","position","ZIndexValidator","SizingValidator","FontVariationSettingsValidator","fontFaces","fontFamily","fontFamilies","SDK.CSSPropertyParser.parseFontFamily","matchingFontFaces","f","variationSettings","SDK.CSSPropertyParser.parseFontVariationSettings","warnings","elementSetting","font","fontSetting","CSS_RULE_VALIDATORS","setupCSSRulesValidators","validatorsMap","validatorClass","validator","affectedProperty","propertyValidators","cssRuleValidatorsMap","getCssDeclarationAsJavascriptProperty","declarationNameAsJs","_str","group","declarationAsJs","FlexboxEditor","ElementsComponents.StylePropertyEditor.FlexboxEditor","GridEditor","ElementsComponents.StylePropertyEditor.GridEditor","activeHints","parentMap","FlexGridRenderer","#treeElement","context","key","button","StyleEditorWidget","VisualLogging.showStyleEditor","helper","Renderer","CSSWideKeywordRenderer","resolvedProperty","InlineEditor.LinkSwatch.LinkSwatch","ColorRenderer","VariableRenderer","#style","SDK.CSSPropertyParser.VariableMatcher","#matchedStyles","renderedFallback","variableValue","fromFallback","computedValue","varSwatch","InlineEditor.LinkSwatch.CSSVarSwatch","#handleVarDefinitionActivate","span","#pane","colorSwatch","innerSwatch","InlineEditor.ColorSwatch.ColorChangedEvent","ev","variable","Host.UserMetrics.Action","REGISTERED_PROPERTY_SECTION_NAME","SDK.CSSProperty.CSSProperty","SDK.CSSMatchedStyles.CSSRegisteredProperty","LinearGradientRenderer","children","cssControls","angles","angle","InlineEditor.CSSAngle.CSSAngle","angleNode","angleMatch","InlineEditor.InlineEditorUtils.ValueChangedEvent","ColorRenderer$1","getCurrentColorCallback","#getValueChild","valueChild","colorText","fakeSpan","hue","Common.Color.parseHueNumeric","Common.Color.HSL","Common.Color.HWB","editable","shiftClickMessage","tooltip","InlineEditor.ColorSwatch.ColorSwatch","onColorChanged","swatchIcon","#addColorContrastInfo","ColorPicker.ContrastInfo.ContrastInfo","LightDarkColorRenderer","content","lightControls","darkControls","activeColor","#activeColor","inactiveColor","activeColorSchemes","hasLight","hasDark","ColorMixRenderer","pane","hookUpColorArg","onChange","InlineEditor.ColorMixSwatch.ColorMixSwatch","contentChild","color1Text","color2Text","rgb","AngleRenderer","angleText","cssAngle","valueElement","LinkableNameRenderer","#getLinkData","kf","pt","metric","jslogContext","ruleBlock","isDefined","BezierRenderer","InlineEditor.Swatches.BezierSwatch","ShadowModel","#properties","#shadowType","#context","#length","lengthType","InlineEditor.CSSShadowEditor.CSSLength","#needsExpansion","#expandPropertyIfNeeded","source","#expandOrGetProperty","propertyType","index","inset","#setLength","insertionIdx","previousSource","ShadowRenderer","shadow","missingLengths","stillAcceptsLengths","queue","item","expansionContext","length","computedValueAst","matches","SDK.CSSPropertyParser.BottomUpTreeMatching","matchedNode","RenderingContext","shadows","isImportant","InlineEditor.Swatches.CSSShadowSwatch","FontRenderer","GridTemplateRenderer","indent","Common.Settings.Settings","lineBreak","UI.Fragment.html","LengthRenderer","_context","lengthText","cssLength","InlineEditor.CSSLength.CSSLength","onValueChanged","onDraggingFinished","decorateAnchorForAnchorLink","options","anchorNode","ElementsComponents.AnchorFunctionLinkSwatch.AnchorFunctionLinkSwatch","AnchorFunctionRenderer","#decorateAnchor","addSpace","identifier","swatchContainer","remainingArgs","PositionAnchorRenderer","PositionTryRenderer","fallback","fallbackContent","StylePropertyTreeElement","UI.TreeOutline.TreeElement","#parentSection","#propertyTextFromSource","#gridNames","stylesPane","isShorthand","inherited","overloaded","getNames","astNodeName","propertyValue","SDK.CSSPropertyParser.TreeSearch","row","cell","isLonghandInsideShorthand","hasSourceData","x","parentsComputedStyles","hasMatchingChildren","StylesSidebarPane","disabled","success","Root.Runtime.experiments","longhandProperties","leadingProperties","#getRegisteredPropertyDetails","variableName","registration","ElementsComponents.CSSVariableValueView.CSSVariableValueView","#computeCSSExpression","decl","IconButton.Icon.create","VisualLogging.expand","renderers","URLRenderer","StringRenderer","separator","semicolon","registrationDetails","ElementsComponents.CSSVariableValueView.CSSVariableParserError","enabledCheckboxElement","VisualLogging.toggle","UI.ARIAUtils.setLabel","copyIcon","Host.InspectorFrontendHost.InspectorFrontendHostInstance","existingElement","localName","hint","wrapper","hintIcon","IconButton.Icon.Icon","activeTreeElement","UI.UIUtils.isBeingEdited","selectedElement","UI.KeyboardShortcut.KeyboardShortcut","VisualLogging.logClick","contextMenu","UI.ContextMenu.ContextMenu","sectionIndex","propertyIndex","revealCallback","ruleText","allDeclarationText","allChanges","computedStyleWidget","UI.ViewManager.ViewManager","propertyNamePattern","cssDeclarationValue","cssDeclarationsAsJsProperties","omitFocus","propertyNameClicked","splitResult","TextUtils.TextUtils.Utils","SDK.CSSMetadata.GridAreaRowRegex","#startEditing","l","pasteHandler","clipboardData","colonIdx","target","blurListener","CSSPropertyPrompt","invalidString","UI.ARIAUtils.alert","proxyElement","keyboardEvent","UI.KeyboardShortcut.Keys","selection","shouldCommitValueSemicolon","cursorPosition","openQuote","ch","keyChar","selectionLeftOffset","#selectionLeftOffset","leftOffset","enteredText","lowerValueText","editedElement","moveDirection","sibling","userInput","isEditingName","nameElementValue","nameValueEntered","createNewProperty","moveToSelector","isDataPasted","isDirtyViaPaste","isPropertySplitPaste","moveTo","moveToOther","abandonNewProperty","moveToIndex","blankInput","Platform.StringUtilities.isWhitespace","shouldCommitNewProperty","moveToNextCallback","alreadyNew","valueChanged","rootElement","sectionToEdit","majorChange","hasBeenEditedIncrementally","currentNode","Platform.StringUtilities.findUnclosedCssQuote","Platform.StringUtilities.countUnmatchedLeftParentheses","overwriteProperty","updatedProperty","isPropertyWithinBounds","deleteProperty","instance","#triggerKey","ensureTreeElementForProperty","getAuthoredStyles","fetchComputedStyles","editorClass","buttonTitle","triggerKey","triggerButton","createButton","popoverHelper","widget","scrollerElement","onScroll","Buttons.Button.Button","newTarget","editableProperties","authoredProperties","editablePropertiesSet","prop","decorateNodeLabel","parentElement","originalNode","isPseudo","pseudoElement","viewTransitionPseudoText","nameElement","title","idAttribute","idElement","part","classAttribute","classes","foundClasses","classesElement","className","pseudoIdentifier","pseudoText","linkifyNodeReference","UI.UIUtils.createShadowRootWithCoreStyles","domLinkifierStyles","VisualLogging.link","linkifyDeferredNodeReference","onDeferredNodeResolved","e","linkifierInstance","Linkifier","object","SDK.DOMModel.DeferredDOMNode","STYLE_TAG","DEFAULT_MAX_PROPERTIES","StylePropertiesSection","#styleRuleElement","#ancestorRuleListElement","#ancestorClosingBracesElement","#nodeElementToSpecificity","#customHeaderText","sectionIdx","customHeaderText","rule","headerText","VisualLogging.section","UI.ARIAUtils.markAsListitem","UI.TreeOutline.TreeOutlineInShadow","stylePropertiesTreeOutlineStyles","UI.UIUtils.createTextButton","selectorContainer","SDK.CSSRule.CSSStyleRule","openBrace","closeBrace","newRuleButton","UI.Toolbar.ToolbarButton","UI.Toolbar.Toolbar","UI.ARIAUtils.markAsHidden","Platform.KeyboardUtilities.isEnterOrSpaceKey","SDK.CSSStyleDeclaration.Type","VisualLogging.cssRuleHeader","header","linkifier","ruleLocation","linkifyRuleLocation","linkifyNode","label","location","SDK.CSSRule.CSSKeyframeRule","matchingSelectorLocation","styleSheetId","styleSheetHeader","lineNumber","columnNumber","SDK.CSSModel.CSSLocation","focused","focusNext","focusable","focusedIndex","UI.UIUtils.isEditing","isHovered","hasCtrlOrMeta","mode","selectorList","childElement","childSection","willIterateForward","originalSection","visibleSibling","nextSibling","loopSibling","curElement","range","TextUtils.TextRange.TextRange","edit","mediaIndex","containerIndex","scopeIndex","supportsIndex","nestingIndex","ruleType","ancestorRuleElement","closingBrace","curNestingLevel","indentElement","media","queryPrefix","queryText","onQueryTextClick","SDK.CSSMedia.Source","mediaQueryElement","ElementsComponents.CSSQuery.CSSQuery","containerQuery","containerQueryElement","scope","scopeElement","supports","supportsElement","nestingSelector","nestingElement","containerElement","ElementsComponents.QueryContainer.QueryContainer","ElementsComponents.Helper.legacyNodeToElementsComponentsNode","details","curSection","editedTreeElement","full","count","maxProperties","hasMatchingChild","childHasMatches","hideRule","matchingSelectorIndexes","matchingSelectors","matchingIndex","fragment","selectors","elementToSelectorIndex","selector","selectorElement","selectorMatchesFilter","deepTarget","UI.UIUtils.deepElementFromEvent","query","config","UI.InplaceEditor.Config","UI.InplaceEditor.InplaceEditor","newContent","_oldContent","_moveDirection","SDK.CSSContainerQuery.CSSContainerQuery","SDK.CSSSupports.CSSSupports","SDK.CSSScope.CSSScope","selectorIndex","selectorText","focus","rawLocation","textContent","currentChild","previousSection","oldContent","headerTextCommitted","onSelectorsUpdated","updateSourceRanges","doesAffectSelectedNode","oldSelectorRange","BlankStylePropertiesSection","defaultSelectorText","insertAfterStyle","lastLine","editRange","onRuleAdded","newRule","onAddedToCascade","doesSelectorAffectSelectedNode","RegisteredPropertiesSection","expandedByDefault","SDK.CSSRule.CSSPropertyRule","FontPaletteValuesRuleSection","PositionTryRuleSection","active","KeyframePropertiesSection","_property","HighlightPseudoStylePropertiesSection","StylePropertyHighlighter","ssp","cssProperty","sectionBlockName","block","PanelUtils","sectionName","blockName","sections","compareCb","WebCustomData","#data","remoteBase","response","json","Root.Runtime.getRemoteBase","FILTER_IDLE_PERIOD","MIN_FOLDED_SECTIONS_COUNT","HIGHLIGHTABLE_PROPERTIES","stylesSidebarPaneInstance","Common.ObjectWrapper.eventMixin","#webCustomData","#hintPopoverHelper","#genericPopoverHelper","#elementPopoverHooks","#urlToChangeTracker","#copyChangesButton","#updateAbortController","#updateComputedStylesAbortController","stylesSidebarPaneStyles","UI.ARIAUtils.markAsList","InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper","Components.Linkifier.Linkifier","MAX_LINK_LENGTH","showDocumentationSetting","metricType","hoveredNode","possibleHintNodeFromHintIcon","popupElement","ElementsComponents.CSSHintDetailsView.CSSHintDetailsView","cssPropertyName","ElementsComponents.CSSPropertyDocsView.CSSPropertyDocsView","specificity","hook","contents","VisualLogging.popover","userOperation","exclamationElement","invalidMessage","hasUnknownVendorPrefix","string","valueSource","activeElement","Platform.DOMUtilities.deepActiveElement","sectionToFocus","firstVisibleSection","headers","styleSheetResourceHeader","contextMenuDescriptors","handler","Bindings.ResourceUtils.displayNameForURL","compareDescriptors","descriptor","descriptor1","descriptor2","Platform.StringUtilities.naturalOrderComparator","Platform.StringUtilities.escapeForRegExp","editedSection","#innerDoUpdate","scrollerElementLists","signal","parentNodeId","width","validateStyles","editing","_treeElement","prevSections","blocks","newSections","styleEditorWidget","boundSection","prevSection","elementToFocus","titleElement","_node","_rebuild","IdleCallbackManager","SectionBlock","lastParentNode","lastLayers","sawLayers","addLayerSeparator","parentRule","layers","LayersWidget.ButtonProvider","refreshedURLs","lastBlock","customHighlightPseudoRulesets","highlightName","otherPseudoRulesets","pseudoType","pseudoRulesets","pseudo","keyframesRule","keyframe","fontPaletteValuesRule","positionTryRule","propertyRule","LayersWidget.LayersWidget","insertAfterSection","blankSection","hasAnyVisibleBlock","visibleSections","currentTracker","WorkspaceDiff.WorkspaceDiff.workspaceDiff","uiSourceCode","Workspace.Workspace.WorkspaceImpl","diffChangeCallback","newTracker","changeTracker","changedLines","formattedCurrentMapping","formattedLineNumber","hasChangedStyles","diffResponse","diff","rows","DiffView.DiffView.buildDiffRows","changes","escapeUrlAsCssComment","hbox","toolbar","filterInput","UI.Toolbar.ToolbarFilter","toggle","listener","onAnimationEnd","prefersColorSchemeSetting","autoDarkModeSetting","decorateStatus","condition","VisualLogging.dropDown","boundingRect","menu","preferredColorScheme","isLightColorScheme","isDarkColorScheme","isAutoDarkEnabled","lightColorSchemeOption","darkColorSchemeOption","autoDarkModeOption","copyAllChangesButton","timeout","#expanded","#icon","expandable","UI.ARIAUtils.setExpanded","expand","pseudoArgument","separatorElement","VisualLogging.sectionHeader","pseudoArgumentString","pseudoTypeString","Common.Linkifier.Linkifier","keyframesName","positionTryName","layerLink","hasAnyVisibleSection","numVisibleSections","fn","promise","resolve","reject","next","assertNotNullOrUndefined","err","quoteFamilyName","familyName","UI.TextPrompt.TextPrompt","completions","UI.UIUtils.StyleValueDelimiters","cssValueText","cmdOrCtrl","Host.Platform.isMac","optionOrAlt","finishHandler","_originalValue","_replacementString","customNumberHandler","prefix","number","suffix","UI.UIUtils.handleElementValueModifications","word","expression","force","lowerQuery","editingVariable","prefixResults","anywhereResults","completion","filterCompletions","canonicalProperty","alias","aliasResult","canonicalPropertyResult","preset","results","userEnteredText","valuePreset","ensureComputedStyles","iconInfo","ElementsComponents.CSSPropertyIconResolver.findIcon","icon","height","nameValue","colorSwatchRenderer","computedValueSubtitleRenderer","subtitleElement","unescapeCssString","input","reCssEscapeSequence","_","$1","$2","codePoint","urlText","ActionDelegate$1","actionId","ButtonProvider$2","UI.UIUtils.LongClickController","onNodeChanged","mergeWithSpacing","merge","SDK.CSSPropertyParser.requiresSpace","matchedResult","cssType","control","controls","SDK.CSSPropertyParser.TreeWalker","#matchedResult","#output","nodeOrNodes","SDK.CSSPropertyParser.CSSControlMap","_nodes","_match","renderer","SDK.CSSPropertyParser.TextMatch","output","VisualLogging.key","VisualLogging.value","matchers","rendererMap","matcher","hrefUrl","Common.ParsedURL.ParsedURL","propertyContentsCache","renderPropertyContents","cacheKey","valueFromCache","createPropertyElement","traceable","activeProperty","onContextMenu","navigateToSource","createTraceElement","isPropertyOverloaded","trace","ElementsComponents.ComputedStyleTrace.ComputedStyleTrace","ruleOriginNode","propertySorter","propA","propB","canonicalA","canonicalB","Platform.StringUtilities.compare","ComputedStyleWidget","#computedStylesTree","#treeData","UI.Toolbar.ToolbarSettingCheckbox","maxLinkLength","isNarrow","computedStyleSidebarPaneStyles","nodeStyles","nodeStyle","uniqueProperties","propertyTraces","nonInheritedProperties","showInherited","tree","isInherited","alwaysShownComputedProperties","defaultRenderer","propertiesByCategory","propertyNodes","traceElement","allProperties","filteredChildren","RangeWalker","#offset","#treeWalker","#eof","#next","#goToPosition","offset","start","startNode","offsetInStartNode","endNode","offsetInEndNode","HIGHLIGHT_REGISTRY","highlightManagerInstance","HighlightManager","#highlights","highlightingStyles","ranges","sourceRanges","rangeWalker","r","fullQualifiedSelector","justSelector","cssPath","optimized","steps","contextNode","step","cssPathStep","canGetJSPath","wp","shadowRoot","jsPath","path","isTargetNode","Step","idSelector","nodeNameLower","prefixedElementClassNames","prefixedOwnClassNamesArray","needsClassNames","needsNthChild","ownIndex","elementIndex","siblings","ownClassNames","siblingClassNamesArray","j","siblingClass","prefixedName","xPath","xPathValue","ownValue","xPathIndex","areNodesSimilar","left","right","leftType","rightType","hasSameNamedElements","TopLayerContainer","newTopLayerElementsIDs","topLayerElementIndex","topLayerDOMNode","topLayerElementShortcut","SDK.DOMModel.DOMNodeShortcut","topLayerElementRepresentation","ElementsTreeOutline.ShortcutTreeElement","previousTopLayerDOMNode","backdropElementShortcut","backdropElementRepresentation","topLayerTreeElement","ElementsComponents.AdornerManager.getRegisteredAdorner","ElementsComponents.AdornerManager.RegisteredAdorners","adornerContent","linkIcon","adornerText","adorner","onClick","elementsTreeOutlineByDOMModel","populatedTreeElements","ElementsTreeOutline","UI.TreeOutline.TreeOutline","#genericIssues","#topLayerContainerByParent","#issuesManager","#popupHelper","#nodeElementToIssue","omitRootDOMNode","selectEnabled","hideGutter","IssuesManager.IssuesManager.IssuesManager","#onIssueEventReceived","issue","IssuesManager.GenericIssue.GenericIssue","#onIssueAdded","shadowContainer","elementsTreeOutlineStyles","CodeHighlighter.Style.default","outlineDisclosureElement","listItem","UI.UIUtils.enclosingNodeOrSelfWithNodeName","issueDetails","tooltipTitle","#issueCodeToTooltipTitle","issueKindIcon","IssueCounter.IssueCounter.getIssueKindIconData","viewIssueElement","issueTitle","openIssueEvent","errorType","#addTreeElementIssue","#addAllElementIssues","treeElementNodeElementsToIssue","wrap","multilineEditing","removedNode","isCut","originalEvent","targetNode","expandCallback","error","pastedNode","visible","cachedElement","y","elementUnderMouse","elementAboveMouse","ElementsTreeElement","showInfo","ShortcutTreeElement","elementsTreeElement","dragTargetNode","wasExpanded","isPseudoElement","isTag","textNode","commentNode","remoteObjectForConsole","SDK.ConsoleModel.ConsoleModel","SDK.RuntimeModel.ExecutionContext","startEditing","editingFinished","newNode","newTreeItem","effectiveNode","hidden","toggleClassAndInjectStyleRule","classNamePrefix","classNameSuffix","styleTagId","localRoot","record","UpdateRecord","updatedNodes","hidePanelWhileUpdating","treeOutlineContainerElement","originalScrollTop","rootNodeUpdateRecords","parentTreeElement","isClosingTag","visibleChildren","contentDocument","templateContent","markerPseudoElement","beforePseudoElement","afterPseudoElement","backdropPseudoElement","handleLoadAllChildren","expandAllButtonElement","visibleChildCount","InitialChildrenLimit","expandedChildrenLimit","selectedTreeElement","newElement","targetIndex","wasSelected","visibleChildrenSet","existingTreeElements","existingTreeElement","existingNode","expandedChildCount","targetButtonIndex","distributedNode","isOpeningTag","Events","MappedCharToEntity","attrName","attributeName","rendererInstance","treeOutline","firstChild","nodeShortcut","Adorners.Adorner.Adorner","slotText","parentIndent","selectedByUser","resolved","i18nLazyString","i18n.i18n.getLazilyComputedLocalizedString","GenericDecorator","extension","domBreakpointData","elementIsHiddenData","getRegisteredDecorators","PseudoStateMarkerDecorator","#elementIssues","VisualLogging.treeItem","gutterMenuIcon","tagName","UI.UIUtils.runCSSAnimationOnce","roots","filter","pseudoClasses","forcedPseudoState","stateMenu","pseudoClass","pseudoClassForced","setPseudoStateCallback","pseudoState","enabled","searchQuery","Highlighting.HighlightManager.HighlightManager","inClipboard","newIssue","#applyIssueStyleAndTooltip","#highlightViolatingAttr","#highlightTagAsViolating","attributes","attribute","attributeElement","tagElement","contentElement","UI.ActionRegistry.ActionRegistry","action","floatingButton","FloatingButton.FloatingButton.FloatingButton","startTagTreeElement","tag","matchResult","eventTarget","newAttribute","isEditable","isShadowRoot","createShortcut","modifier","UI.KeyboardShortcut.Modifiers","menuItem","copyMenu","isRootElement","UI.ShortcutRegistry.ShortcutRegistry","deviceModeWrapperAction","Emulation.DeviceModeWrapper.ActionDelegate","frameOwnerFrameId","frame","attr","attributeElements","len","elem","elementForSelection","attributeNameElement","attributeValueElement","removeZeroWidthSpaceRecursive","attributeValue","postKeyDownFinishHandler","componentSelection","textNodeElement","tagNameElement","EditTagBlocklist","closingTagElement","keyupListener","keydownListener","editingCommitted","newTagName","oldText","editingCancelled","editorHandles","commitCallback","disposeCallback","maybeInitialValue","initialValue","editor","TextEditor.TextEditor.TextEditor","CodeMirror.EditorState","CodeMirror.keymap","TextEditor.Config.baseConfiguration","TextEditor.Config.closeBrackets","TextEditor.Config.autocompletion","CodeMirror.html","TextEditor.Config.domWordWrap","CodeMirror.EditorView","commit","dispose","resize","newText","moveToNextAttributeIfNeeded","self","cancel","_element","_tagName","closers","tags","updateRecord","nodeInfo","depth","markerToExtension","decoratorExtension","promises","decorations","descendantDecorations","visitor","marker","collectDecoration","decorator","decoration","updateDecorationsUI","titles","descendantColors","processColors","forceValue","closingPunctuationRegex","highlightIndex","highlightCount","additionalHighlightOffset","setValueWithEntities","replaceOffset","UI.UIUtils.highlightRangesWithStyleClass","hasText","attrSpanElement","attrNameElement","attrValueElement","linkifyValue","rewrittenHref","Platform.StringUtilities.trimMiddle","UI.XLink.XLink","linkifySrcset","linkedPart","indexOfSpace","indexOfComma","linkContainer","relation","relatedElementId","relatedElement","pseudoElementName","isDistinctTreeElement","hasUpdates","lastIndexAfterEntity","entityRanges","charToEntity","size","char","entityValue","TextUtils.TextRange.SourceRange","titleDOM","updateSearchHighlight","expandButton","ElementsComponents.ElementsTreeExpandButton.ElementsTreeExpandButton","Platform.StringUtilities.collapseWhitespace","ForbiddenClosingTagElements","CodeHighlighter.CodeHighlighter.highlightNode","commentElement","docTypeElement","cdataElement","documentElement","fragmentElement","nameWithSpaceCollapsed","selectNode","commitChange","cascade","regexObject","Platform.StringUtilities.createPlainTextSearchRegex","matchRanges","adornerToRemove","adorners","adornerContainer","adornerComparator","styleAdorner","isGrid","isSubgrid","containerType","contain","isContainer","SDK.CSSContainerQuery.getQueryAxis","eventNodeId","scrollAdorner","needsAScrollAdorner","adornerA","adornerB","compareCategories","ElementsComponents.AdornerManager.compareAdornerNamesByCategory","loggingParentProvider","VisualLogging.registerParentProvider","ElementsTreeElementHighlighter","throttler","UI.TreeOutline.Events","currentTreeElement","deepestExpandedParent","treeElementByNode","treeIsNotExpanded","MetricsSidebarPane","inlineStyleResult","isVisible","componentName","top","bottom","showHighlight","backgroundColor","shouldHighlight","metricsElement","createBoxPartElement","side","Platform.NumberUtilities.toFixedIfFloating","getContentAreaWidthPx","widthValue","borderBox","paddingBox","getContentAreaHeightPx","heightValue","noMarginDisplayType","noPaddingDisplayType","noPositionType","boxes","boxColors","Common.Color.PageHighlight","Common.Color.Legacy","boxLabels","previousBox","boxElement","VisualLogging.metricsBox","widthElement","heightElement","timesElement","labelElement","targetElement","box","styleProperty","boundKeyDown","originalValue","replacementString","pastLastSourcePropertyIndex","previousContent","commitEditor","Common.Console.Console","userValuePx","metricsSidebarPaneStyles","createAccessibilityTreeToggleButton","isActive","elementsPanelInstance","UI.Panel.Panel","task","UI.SplitWidget.SplitWidget","UI.SearchableView.SearchableView","stackElement","crumbsContainer","UI.ARIAUtils.markAsMain","ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs","SDK.DOMModel.DOMModel","Extensions.ExtensionServer.ExtensionServer","ElementsComponents.AdornerManager.AdornerManager","_locationName","parentModel","cssText","firstTreeOutline","elementsPanelStyles","domModels","crumbs","current","executionContexts","nodeFrameId","savedSelectedNodeOnReset","restoreNode","staleNode","nodePath","restoredNodeId","inspectedDocument","searchConfig","shouldJump","jumpBackwards","whitespaceTrimmedQuery","showUAShadowDOM","resultCounts","resultCount","searchResults","searchResult","UI.UIUtils.highlightedSearchResultClassName","tabId","activeNode","existingCrumbs","newNodes","nodesThatHaveChangedMap","crumb","newSetOfCrumbs","userAgentShadowRoot","nodeToReveal","omitHighlight","stylePaneWrapperElement","uninstallHackBound","uninstallHack","uninstallHackOnMousemove","largeLength","splitMode","matchedStylePanesWrapper","computedStylePanesWrapper","stylesSplitWidget","showMetricsWidgetInStylesPane","showMetricsWidgetInComputedPane","toggleMetricsWidget","tabSelected","computedView","tabbedPane","VisualLogging.toolbar","headerElement","UI.ARIAUtils.markAsNavigation","UI.ARIAUtils.markAsComplementary","stylesView","UI.View.SimpleView","UI.TabbedPane.Events","extensionSidebarPanes","UI.InspectorView.InspectorView","cssPropertyTracker","TrackedCSSProperties","domNodes","ElementsComponents.LayoutPane.LayoutPane","ElementsComponents.AdornerSettingsPane.AdornerSettingsPane","adornerName","isEnabledNow","newSettings","adornersToUpdate","adornerSettings","adornerSet","ContextMenuProvider","SDK.RemoteObject.RemoteObject","DOMNodeRevealer","panel","revealPromise","reason","message","Platform.UserVisibleError.isUserVisibleError","onNodeResolved","checkDeferredDOMNodeThenReveal","checkRemoteObjectThenReveal","msg","Platform.UserVisibleError.UserVisibleError","resolvedNode","isDetached","CSSPropertyRevealer","ElementsActionDelegate","SDK.DOMModel.DOMModelUndoStack","colorSwatchPopoverIcon","pseudoStateMarkerDecoratorInstance","eventListenersWidgetInstance","EventListenersWidget","DispatchFilterBy","EventListeners.EventListenersView.EventListenersView","dispatchFilter","UI.Toolbar.ToolbarComboBox","VisualLogging.filterDropdown","addDispatchFilterOption","option","objectGroupName","selectedNodeOnly","showPassive","showBlocking","executionContext","ActionDelegate","OBJECT_GROUP_NAME","PropertiesWidget","throttlingTimeout","ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeOutline","ObjectUI.ObjectPropertiesSection.ObjectPropertiesSectionsTreeExpandController","noMatches","ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement","propertiesWidgetStyles","NodeStackTraceWidget","MaxLengthForLinks","nodeStackTraceWidgetStyles","creationStackTrace","stackTracePreview","Components.JSPresentationUtils.buildStackTracePreviewContents","ClassesPaneWidget","ClassNamePrompt","Platform.KeyboardUtilities.isEscKey","classNames","joinClassString","announcementString","cachedClassesMap","classesPaneWidgetStyles","keys","Platform.StringUtilities.caseInsensetiveComparator","UI.UIUtils.CheckboxLabel","activeClasses","additionalClasses","newClasses","onClassValueUpdated","ButtonProvider$1","nodeClasses","allStyleSheets","stylesheet","cssPromise","ownerDocumentId","domPromise","classesMap","SpecificPseudoStates","ElementStatePaneWidget","inputs","createSectionHeader","sectionHeaderContainer","clickListener","state","createElementStateCheckbox","div","createEmulateFocusedPageCheckbox","UI.SettingsUI.bindCheckbox","learnMoreButton","keepPageFocusedCheckbox","persistentContainer","UI.ARIAUtils.markAsPresentation","elementSpecificContainer","elementStatePaneWidgetStyles","nodePseudoState","showedACheckbox","hideSpecificCheckbox","hide","checkbox","isElementOfTypes","types","isInputWithTypeRadioOrCheckbox","isFormAssociated","getFormAssociatedField"],"mappings":"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CACrE8D,EAAWC,EAAU,CAAC,EAAE,OAAO,EAAGE,EAAI,CAAC,EACvC,KACH,CACJ,CAEL,MAAM5C,EAAYzD,EAAS,IAAI,UAAUwD,EAAW,CAAC,EAAGA,EAAWA,EAAW,OAAS,CAAC,CAAC,EACzF,OAAO,IAAIyC,GAAiBxC,EAAWrN,EAAM8P,EAAUC,CAAS,CACnE,CACL,ixBCrvBaG,GAAuB,CAChC,SACA,OACA,aACA,YACA,gBACA,OACA,OACA,QACA,oBACA,OACJ,EAKMC,GAAwB,IAAI,IAAI,CAClC,CACI,SACA,CACI,UAAW,SAAU,UAAW,SAAU,QAAS,WACnD,MAAO,QAAS,SAAU,OAAQ,UAAW,QAC7C,QAAS,WAAY,SAAU,OAAQ,aAAc,aACrD,gBAAiB,cAAe,aAAc,OAAQ,aAAc,iBACpE,YAAa,YAAa,cAAe,YAAa,kBAAmB,QACzE,cAAe,aAAc,kBAAmB,iBAAkB,kBAAmB,iBACrF,YAAa,YAAa,aAAc,YAC3C,CACJ,EACD,CACI,OACA,CACI,OACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,iBACA,YACA,WACA,aACA,kBACA,kBACA,wBACA,uBACA,wBACA,cACA,eACA,gBACA,cACA,iBACA,mBACA,cACA,iBACA,iBACA,eACA,cACA,aACA,WACH,CACJ,EACD,CACI,aACA,CACI,QACA,UACA,gBACA,iBACA,gBACA,gBACA,SACA,eACA,aACA,SACA,aACA,IACA,qBACH,CACJ,EACD,CACI,YACA,CACI,YACA,kBACA,sBACA,qBACA,sBACA,4BACA,iBACA,uBACA,4BACA,aACA,mBACA,sBACA,sBACA,4BACH,CACJ,EACD,CACI,OACA,CACI,OACA,cACA,WACA,QACA,cACA,gBACA,YACH,CACJ,EACD,CACI,OACA,CACI,OACA,QACA,cACA,gBACA,YACH,CACJ,EACD,CACI,QACA,CACI,kBACA,iBACA,eACA,cACA,cACH,CACJ,EACD,CACI,oBACA,CACI,UACA,SACA,gBACA,mBACH,CACJ,CACL,CAAC,EACKC,GAA2B,IAAI,IACrC,SAAW,CAACC,EAAUC,CAAU,IAAKH,GACjC,UAAWI,KAAaD,EACfF,GAAyB,IAAIG,CAAS,GACvCH,GAAyB,IAAIG,EAAW,CAAA,CAAE,EAE3BH,GAAyB,IAAIG,CAAS,EAC9C,KAAKF,CAAQ,EAGhC,MAAMG,GAAiC9K,GAC/B0K,GAAyB,IAAI1K,CAAY,EAClC0K,GAAyB,IAAI1K,CAAY,EAEhDA,EAAa,WAAW,IAAI,EACrB,CAAC,eAAe,EAEpB,GAUE+K,GAA0B/K,GAAiB,CACpD,MAAMgL,EAAc/G,IACdgH,EAAgBD,EAAY,sBAAsBhL,CAAY,EAC9DkL,EAAaJ,GAA8BG,CAAa,EAC9D,GAAIC,EAAW,OAAS,EACpB,OAAOA,EAEX,MAAMC,EAAaH,EAAY,cAAcC,CAAa,EAC1D,GAAIE,EACA,UAAWC,KAAaD,EAAY,CAChC,MAAME,EAAsBP,GAA8BM,CAAS,EACnE,GAAIC,EAAoB,OAAS,EAC7B,OAAOA,CAEd,CAEL,MAAO,CAAC,OAAO,CACnB,ECzLO,MAAMC,WAA4BlP,EAAe,CACpD,2BACA,gBACA,kBACA,YAAYmP,EAAgB,CACxB,MAAM,GAAMA,CAAc,EAC1B,KAAK,QAAQ,UAAU,IAAI,WAAW,EACtC,KAAK,2BAA6B,IAAI3K,GACtC,KAAK,2BAA2B,iBAAiB,uBAA4D,KAAK,kBAAmB,IAAI,EACzI,KAAK,gBAAkB,IAAI4K,GAA2B,GAAG,EACzD,KAAK,kBAAoB,EAC5B,CACD,MAAO,CACH,OAAO,KAAK,2BAA2B,MAC1C,CACD,UAAW,CACP,OAAO,KAAK,2BAA2B,UAC1C,CACD,oBAAqB,CACjB,OAAO,KAAK,0BACf,CACD,MAAM,UAAW,CAEhB,CACD,QAAS,CAEL,GADA,KAAK,kBAAoB,CAAC,KAAK,UAAS,EACpC,KAAK,kBACL,OAEC,KAAK,gBAAgB,SAASC,EAAY,KAAK,IAAI,CAAC,EACzD,SAASA,GAAc,CACnB,OAAO,KAAK,YAAc,KAAK,WAAa,QAAQ,SACvD,CACJ,CACD,UAAW,CACP,MAAM,SAAQ,EACV,KAAK,mBACL,KAAK,OAAM,CAElB,CACD,kBAAkBjN,EAAQ,CACzB,CACL,4HC3CMtC,GAAS,IAAI,cACnBA,GAAO,YACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CA8BC,EC3BD,MAAMuB,GAAY,CAKd,eAAgB,aAKhB,gBAAiB,wBACrB,EACMC,GAAOC,EAA4B,kCAAmCF,EAAS,EAC/EG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EACpE,IAAIgO,GACG,MAAMC,WAAqBC,EAAiB,CAC/C,SACA,mBAAqB,IAAIC,GACzB,aAAc,CACV,MAAM,EAAI,EACV,KAAK,eAAe,UAAY,qBAChC,KAAK,eAAe,aAAa,QAAS,GAAGC,GAAmB,YAAY,CAAC,EAAE,EAC/EC,EAA2B,KAAK,eAAe,YAAY,KAAK,EAAGnO,GAAWH,GAAU,cAAc,CAAC,EACvG,KAAK,eAAe,YAAY,KAAK,kBAAkB,EACvD8B,EAAmB,SAAQ,EAAG,wBAAwBsB,EAAsB,KAAK,OAAQ,IAAI,CAChG,CACD,YAAYC,EAAU,CACd,KAAK,WAAaA,IAGlB,KAAK,UACL,KAAK,SAAS,oBAAoBK,GAAoB,kBAAmB,KAAK,OAAQ,IAAI,EAE9F,KAAK,SAAWL,EACZ,KAAK,UACL,KAAK,SAAS,iBAAiBK,GAAoB,kBAAmB,KAAK,OAAQ,IAAI,EAE9F,CACD,MAAM,UAAW,CACb,aAAM,SAAQ,EACd,KAAK,iBAAiB,CAAC6K,EAAkB,CAAC,EACnC,KAAK,QACf,CACD,MAAM,QAAS,CACX,GAAI,CAAC,KAAK,YACN,OAEJ,IAAI1R,EAAOiF,EAAmB,SAAU,EAAC,OAAOsB,CAAoB,EASpE,GARIvG,IACAA,EAAOA,EAAK,0BAEZ,CAACA,IAIL,KAAK,YAAYA,EAAK,SAAQ,EAAG,SAAU,CAAA,EACvC,CAAC,KAAK,UACN,OAEJ,MAAM2R,EAAgBC,GAAcC,GAAU,CAC1C,MAAMC,EAAYD,EAAM,UAClBtQ,EAAOwQ,GAAsB,kBAAkBF,EAAM,IAAI,EACzD3Q,EAAe2Q,EAAM,MAAQ,KAAOtQ,EACpCI,EAAKiQ,EAAWA,EAAW,IAAMrQ,EAAOA,EAC9C,OAAKuQ,EAGE,CACH,aAAA5Q,EACA,GAAAS,EACA,SAAU,IAAM,QAAQ,QAAQmQ,EAAU,KAAK,CAACE,EAAQC,IAAWD,EAAO,MAAQC,EAAO,KAAK,EAAE,IAAIN,EAAahQ,CAAE,CAAC,CAAC,CACrI,EANuB,CAAE,aAAAT,EAAc,GAAAS,EAOvC,EACcuQ,EAAY,MAAM,KAAK,SAAS,aAAalS,EAAK,EAAE,EAC1D,KAAK,mBAAmB,KAAO,CAC3B,gBAAiBmS,GACjB,KAAM,CAACR,EAAa,EAAE,EAAEO,CAAS,CAAC,CAC9C,EAGQ,MAAM,KAAK,mBAAmB,kBAAkB,CAAC,CACpD,CACD,MAAM,YAAYE,EAAW,CACzB,OAAK,KAAK,aACN9P,EAAc,SAAU,EAAC,gBAAgB,KAAM+P,GAAe,SAAQ,EAAG,KAAI,CAAE,EAEnF,MAAM,KAAK,SACJ,KAAK,mBAAmB,4BAA4B,wBAA0BD,CAAS,CACjG,CACD,OAAO,SAASE,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAAClB,IAAwBmB,KACzBnB,GAAuB,IAAIC,IAExBD,EACV,CACL,CACA,IAAIoB,GACGC,GAAA,MAAMJ,EAAe,CACxB,OACA,aAAc,CACV,KAAK,OAAS,IAAIK,GAAyBpP,GAAWH,GAAU,eAAe,EAAG,SAAU,eAAe,EAC3G,KAAK,OAAO,WAAW,EAAK,EAC5B,KAAK,OAAO,iBAAiB,QAAqD,KAAK,QAAS,IAAI,EACpG,KAAK,OAAO,QAAQ,UAAU,IAAI,WAAW,EAC7C,KAAK,OAAO,QAAQ,aAAa,QAAS,GAAGwP,GAA4B,YAAY,EAAE,MAAM,CAAE,MAAO,EAAI,CAAE,CAAC,EAAE,CAClH,CACD,OAAO,SAASL,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAACE,IAA0BD,KAC3BC,GAAyB,IAAIH,IAE1BG,EACV,CACD,SAAU,CACN,MAAMtT,EAAOmS,GAAa,WAC1B/O,EAAc,SAAQ,EAAG,gBAAiBpD,EAAK,UAAW,EAAU,KAAPA,EAAa,KAAK,MAAM,CACxF,CACD,MAAO,CACH,OAAO,KAAK,MACf,CACL,wIChIa0T,EAA8B,CAACnD,EAAU7K,IAC9CA,IAAU,OACHiO,EAAkBpD,CAAQ,EAE9B,yDAA2DA,EAAW,YAAc7K,EAAQ,UAE1FiO,EAAqBpD,GACvB,yDAA2DA,EAAW,iBAEpEqD,GAAsBrD,GACxB,kCAAoCA,EAAW,UAE7CsD,GAAmBC,GAAmB,CAC/C,GAAI,CAACA,EACD,MAAO,GAEX,MAAMC,EAAUD,EAAe,IAAI,SAAS,EAC5C,OAAOC,IAAY,QAAUA,IAAY,aAC7C,EACMC,GAAgC,IAAI,IAAI,CAC1C,QACA,YACA,eACA,YACA,gBACA,YACJ,CAAC,EACYC,GAAoBH,GAAmB,CAChD,GAAI,CAACA,EACD,MAAO,GAEX,MAAMI,EAAeJ,EAAe,IAAI,SAAS,EACjD,GAAI,CAACI,EACD,MAAO,GAEX,MAAMC,EAAQD,EAAa,MAAM,GAAG,EACpC,OAAIC,EAAM,OAAS,EACR,GAIPA,EAAM,SAAW,EACVA,EAAM,CAAC,IAAM,YAEpBA,EAAM,SAAW,EACVA,EAAM,CAAC,IAAM,aAAeA,EAAM,CAAC,IAAM,SAE7CH,GAA8B,IAAIG,EAAM,CAAC,CAAC,CACrD,EACaC,GAAmBN,GACvBA,EAGEA,EAAe,IAAI,SAAS,IAAM,SAF9B,GAKTO,GAA2B,IAAI,IAAI,CACrC,QACA,SACA,QACA,SACA,MACA,QACA,SACA,OACJ,CAAC,EACYC,GAA6BC,GACjCA,EAGEF,GAAyB,IAAIE,CAAQ,EAFjC,GAIFC,GAAmBV,GAAmB,CAC/C,GAAI,CAACA,EACD,MAAO,GAEX,MAAMC,EAAUD,EAAe,IAAI,SAAS,EAC5C,OAAOC,IAAY,QAAUA,IAAY,aAC7C,EACaU,GAAuBX,GAAmB,CACnD,GAAI,CAACA,EACD,MAAO,GAEX,MAAMY,EAAcZ,EAAe,IAAI,cAAc,EAC/Ca,EAAcb,EAAe,IAAI,cAAc,EACrD,OAAOY,IAAgB,QAAUC,IAAgB,MACrD,EClFM1Q,EAAY,CAMd,oCAAqC,uHAMrC,iCAAkC,wEAMlC,8CAA+C,+FAM/C,8CAA+C,6FAM/C,sCAAuC,6IAMvC,mCAAoC,yGASpC,6BAA8B,yGAM9B,oCAAqC,yJAMrC,iCAAkC,sGACtC,EACMC,GAAOC,EAA4B,sCAAuCF,CAAS,EACnFG,EAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC7D,MAAM0Q,EAAK,CACdC,GACAC,GACAC,GACA,YAAYC,EAAaC,EAAoBC,EAAe,CACxD,KAAKL,GAAeG,EACpB,KAAKF,GAAsBG,EAC3B,KAAKF,GAAiBG,CACzB,CACD,YAAa,CACT,OAAO,KAAKL,EACf,CACD,uBAAwB,CACpB,OAAO,KAAKC,EACf,CACD,kBAAmB,CACf,OAAO,KAAKC,EACf,CACL,CACO,MAAMI,EAAiB,CAC1B,eAAgB,CACZ,MAAO,EACV,CACDC,GACA,YAAYC,EAAoB,CAC5B,KAAKD,GAAsBC,CAC9B,CACD,yBAA0B,CACtB,OAAO,KAAKD,EACf,CACL,CACO,MAAME,WAA8BH,EAAiB,CACxD,aAAc,CACV,MAAM,CAAC,eAAe,CAAC,CAC1B,CACD,eAAgB,CACZ,MAAO,EACV,CACD,QAAQI,EAAezB,EAAgB,CACnC,GAAI,CAACA,EACD,OAEJ,MAAMhF,EAAS+E,GAAgBC,CAAc,EAC7C,GAAI,CAAChF,GAAU,CAACmF,GAAiBH,CAAc,GAAK,CAACU,GAAgBV,CAAc,EAAG,CAClF,MAAM0B,EAA4B9B,EAA4B,UAAWI,GAAgB,IAAI,SAAS,CAAC,EACjG2B,EAAkC9B,EAAkB,eAAe,EACzE,OAAO,IAAIiB,GAAKxQ,EAAWH,EAAU,oCAAqC,CACtE,iCAAkCuR,EAClC,mCAAoCC,CACpD,CAAa,EAAGrR,EAAWH,EAAU,iCAAkC,CACvD,cAAe0P,EAAkB,SAAS,EAC1C,eAAgBC,GAAmBE,GAAgB,IAAI,SAAS,CAAC,CACpE,CAAA,CAAC,CACL,CAID,GAHI,CAAChF,GAGDgF,EAAe,IAAI,WAAW,IAAM,SACpC,OAEJ,MAAM0B,EAA4B9B,EAA4B,YAAa,QAAQ,EAC7E+B,EAAkC9B,EAAkB,eAAe,EACzE,OAAO,IAAIiB,GAAKxQ,EAAWH,EAAU,oCAAqC,CACtE,iCAAkCuR,EAClC,mCAAoCC,CAChD,CAAS,EAAGrR,EAAWH,EAAU,iCAAkC,CACvD,cAAe0P,EAAkB,WAAW,EAC5C,eAAgBC,GAAmB,QAAQ,CAC9C,CAAA,CAAC,CACL,CACL,CACO,MAAM8B,WAA0BP,EAAiB,CACpD,aAAc,CACV,MAAM,CAAC,OAAQ,aAAc,YAAa,aAAa,CAAC,CAC3D,CACD,eAAgB,CACZ,MAAO,EACV,CACD,QAAQ3O,EAAcsN,EAAgB6B,EAAsB,CAIxD,GAHI,CAACA,GAGD9B,GAAgB8B,CAAoB,EACpC,OAEJ,MAAMH,EAA4B9B,EAA4B,UAAWiC,GAAsB,IAAI,SAAS,CAAC,EACvGF,EAAkC9B,EAAkBnN,CAAY,EAChEoP,EAAkClC,EAA4B,UAAW,MAAM,EACrF,OAAO,IAAIkB,GAAKxQ,EAAWH,EAAU,sCAAuC,CACxE,iCAAkCuR,EAClC,mCAAoCC,CAChD,CAAS,EAAGrR,EAAWH,EAAU,mCAAoC,CACzD,6BAA8BuR,EAC9B,2BAA4BI,CAC/B,CAAA,CAAC,CACL,CACL,CACO,MAAMC,WAA+BV,EAAiB,CACzD,aAAc,CACV,MAAM,CAAC,iBAAkB,YAAa,WAAW,CAAC,CACrD,CACD,eAAgB,CACZ,MAAO,EACV,CACD,QAAQ3O,EAAcsN,EAAgB,CAIlC,GAHI,CAACA,GAGDD,GAAgBC,CAAc,EAC9B,OAEJ,MAAM0B,EAA4B9B,EAA4B,UAAWI,GAAgB,IAAI,SAAS,CAAC,EACjGgC,EAAiBpC,EAA4B,UAAW,MAAM,EAC9D+B,EAAkC9B,EAAkBnN,CAAY,EACtE,OAAO,IAAIoO,GAAKxQ,EAAWH,EAAU,oCAAqC,CACtE,iCAAkCuR,EAClC,mCAAoCC,CAChD,CAAS,EAAGrR,EAAWH,EAAU,8CAA+C,CACpE,8BAA+BuR,EAC/B,4BAA6BM,CAChC,CAAA,CAAC,CACL,CACL,CACO,MAAMC,WAA+BZ,EAAiB,CACzD,aAAc,CACV,MAAM,CACF,OACA,oBACA,iBACA,iBACA,gBACA,sBACA,wBACA,oBACZ,CAAS,CACJ,CACD,eAAgB,CACZ,MAAO,EACV,CACD,QAAQ3O,EAAcsN,EAAgB,CAClC,GAAIU,GAAgBV,CAAc,EAC9B,OAEJ,MAAM0B,EAA4B9B,EAA4B,UAAWI,GAAgB,IAAI,SAAS,CAAC,EACjGgC,EAAiBpC,EAA4B,UAAW,MAAM,EAC9D+B,EAAkC9B,EAAkBnN,CAAY,EACtE,OAAO,IAAIoO,GAAKxQ,EAAWH,EAAU,oCAAqC,CACtE,iCAAkCuR,EAClC,mCAAoCC,CAChD,CAAS,EAAGrR,EAAWH,EAAU,8CAA+C,CACpE,8BAA+BuR,EAC/B,4BAA6BM,CAChC,CAAA,CAAC,CACL,CACL,CACO,MAAME,WAA0Bb,EAAiB,CACpD,aAAc,CACV,MAAM,CACF,YACA,cACA,WACA,eACA,iBAKA,cACZ,CAAS,CACJ,CACD,eAAgB,CACZ,MAAO,EACV,CACD,QAAQ3O,EAAcsN,EAAgB6B,EAAsB,CAIxD,GAHI,CAACA,GAGDnB,GAAgBmB,CAAoB,EACpC,OAEJ,MAAMH,EAA4B9B,EAA4B,UAAWiC,GAAsB,IAAI,SAAS,CAAC,EACvGC,EAAkClC,EAA4B,UAAW,MAAM,EAC/E+B,EAAkC9B,EAAkBnN,CAAY,EACtE,OAAO,IAAIoO,GAAKxQ,EAAWH,EAAU,sCAAuC,CACxE,iCAAkCuR,EAClC,mCAAoCC,CAChD,CAAS,EAAGrR,EAAWH,EAAU,mCAAoC,CACzD,6BAA8BuR,EAC9B,2BAA4BI,CAC/B,CAAA,CAAC,CACL,CACL,CACO,MAAMK,WAAgCd,EAAiB,CAC1D,aAAc,CACV,MAAM,CACF,aACA,aACA,OACZ,CAAS,CACJ,CACD,eAAgB,CACZ,MAAO,GACV,CACD,QAAQ3O,EAAcsN,EAAgB6B,EAAsB,CAIxD,GAHI,CAACA,GAGD9B,GAAgB8B,CAAoB,GAAKnB,GAAgBmB,CAAoB,EAC7E,OAEJ,MAAMH,EAA4B9B,EAA4B,UAAWiC,GAAsB,IAAI,SAAS,CAAC,EACvGC,EAAkC,GAAGlC,EAA4B,UAAW,MAAM,CAAC,OAAOA,EAA4B,UAAW,MAAM,CAAC,GACxI+B,EAAkC9B,EAAkBnN,CAAY,EACtE,OAAO,IAAIoO,GAAKxQ,EAAWH,EAAU,sCAAuC,CACxE,iCAAkCuR,EAClC,mCAAoCC,CAChD,CAAS,EAAGrR,EAAWH,EAAU,mCAAoC,CACzD,6BAA8BuR,EAC9B,2BAA4BI,CAC/B,CAAA,CAAC,CACL,CACL,CACO,MAAMM,WAA0Bf,EAAiB,CACpD,aAAc,CACV,MAAM,CACF,kBACA,gBACA,aACZ,CAAS,CACJ,CACD,eAAgB,CACZ,MAAO,EACV,CACD,QAAQ3O,EAAcsN,EAAgB6B,EAAsB,CAIxD,GAHI,CAAC7B,GAGDD,GAAgBC,CAAc,GAAKU,GAAgBV,CAAc,EACjE,OAEJ,GAAI6B,IAAyB9B,GAAgB8B,CAAoB,GAAKnB,GAAgBmB,CAAoB,GAAI,CAC1G,MAAMQ,EAA6BvC,GAAmB+B,EAAqB,IAAI,SAAS,CAAC,EACnFS,EAAqBzC,EAAkBnN,CAAY,EACnD6P,EAAgC1C,EAAkBnN,IAAiB,kBAAoB,eAAiB,YAAY,EAC1H,OAAO,IAAIoO,GAAKxQ,EAAWH,EAAU,oCAAqC,CACtE,uBAAwBkS,EACxB,cAAeC,CAC/B,CAAa,EAAGhS,EAAWH,EAAU,iCAAkC,CACvD,cAAemS,EACf,0BAA2BC,CAC9B,CAAA,CAAC,CACL,CACD,MAAMb,EAA4B9B,EAA4B,UAAWI,EAAe,IAAI,SAAS,CAAC,EAChG2B,EAAkC9B,EAAkBnN,CAAY,EACtE,OAAO,IAAIoO,GAAKxQ,EAAWH,EAAU,oCAAqC,CACtE,iCAAkCuR,EAClC,mCAAoCC,CAChD,CAAS,EAAGrR,EAAWH,EAAU,8CAA+C,CACpE,kBAAmByP,EAA4B,UAAW,MAAM,EAChE,kBAAmBA,EAA4B,UAAW,MAAM,CACnE,CAAA,CAAC,CACL,CACL,CACO,MAAM4C,WAAkCnB,EAAiB,CAC5D,aAAc,CACV,MAAM,CACF,MACA,aACA,UACA,WACA,kBACA,kBACA,cACZ,CAAS,CACJ,CACD,eAAgB,CACZ,MAAO,EACV,CACD,QAAQ3O,EAAcsN,EAAgB,CAIlC,GAHI,CAACA,GAGDW,GAAoBX,CAAc,GAAKD,GAAgBC,CAAc,GAAKU,GAAgBV,CAAc,EACxG,OAEJ,MAAM0B,EAA4B9B,EAA4B,UAAWI,GAAgB,IAAI,SAAS,CAAC,EACjG2B,EAAkC9B,EAAkBnN,CAAY,EACtE,OAAO,IAAIoO,GAAKxQ,EAAWH,EAAU,oCAAqC,CACtE,iCAAkCuR,EAClC,mCAAoCC,CAChD,CAAS,EAAGrR,EAAWH,EAAU,iCAAkC,CACvD,cAAe0P,EAAkB,SAAS,EAC1C,eAAgBC,GAAmBE,GAAgB,IAAI,SAAS,CAAC,CACpE,CAAA,CAAC,CACL,CACL,CACO,MAAMyC,WAAyBpB,EAAiB,CACnD,aAAc,CACV,MAAM,CACF,UACA,cACA,gBACA,iBACA,cACZ,CAAS,CACJ,CACD,eAAgB,CACZ,MAAO,EACV,CACD,QAAQ3O,EAAcsN,EAAgB,CAClC,MAAMC,EAAUD,GAAgB,IAAI,SAAS,EAY7C,GAXI,CAACC,GAWD,CARoB,CACpB,kBACA,qBACA,qBACA,YACA,qBACA,cACZ,EAC6B,SAASA,CAAO,EACjC,OAEJ,MAAMyB,EAA4B9B,EAA4B,UAAWI,GAAgB,IAAI,SAAS,CAAC,EACjG2B,EAAkC9B,EAAkBnN,CAAY,EACtE,OAAO,IAAIoO,GAAKxQ,EAAWH,EAAU,oCAAqC,CACtE,iCAAkCuR,EAClC,mCAAoCC,CAChD,CAAS,EAAGrR,EAAWH,EAAU,iCAAkC,CACvD,cAAe0P,EAAkB,SAAS,EAC1C,eAAgBC,GAAmBE,GAAgB,IAAI,SAAS,CAAC,CACpE,CAAA,CAAC,CACL,CACL,CACO,MAAM0C,WAA0BrB,EAAiB,CACpD,aAAc,CACV,MAAM,CACF,MACA,QACA,SACA,MACZ,CAAS,CACJ,CACD,eAAgB,CACZ,MAAO,EACV,CACD,QAAQ3O,EAAcsN,EAAgB,CAClC,MAAM2C,EAAW3C,GAAgB,IAAI,UAAU,EAI/C,GAHI,CAAC2C,GAGDA,IAAa,SACb,OAEJ,MAAMjB,EAA4B9B,EAA4B,WAAYI,GAAgB,IAAI,UAAU,CAAC,EACnG2B,EAAkC9B,EAAkBnN,CAAY,EACtE,OAAO,IAAIoO,GAAKxQ,EAAWH,EAAU,oCAAqC,CACtE,iCAAkCuR,EAClC,mCAAoCC,CAChD,CAAS,EAAGrR,EAAWH,EAAU,iCAAkC,CACvD,cAAe0P,EAAkB,UAAU,EAC3C,eAAgBC,GAAmBE,GAAgB,IAAI,UAAU,CAAC,CACrE,CAAA,CAAC,CACL,CACL,CACO,MAAM4C,WAAwBvB,EAAiB,CAClD,aAAc,CACV,MAAM,CACF,SACZ,CAAS,CACJ,CACD,eAAgB,CACZ,MAAO,GACV,CACD,QAAQ3O,EAAcsN,EAAgB6B,EAAsB,CACxD,MAAMc,EAAW3C,GAAgB,IAAI,UAAU,EAI/C,GAHI,CAAC2C,GAGD,CAAC,WAAY,WAAY,QAAS,QAAQ,EAAE,SAASA,CAAQ,GAAK5C,GAAgB8B,CAAoB,GACtGnB,GAAgBmB,CAAoB,EACpC,OAEJ,MAAMH,EAA4B9B,EAA4B,WAAYI,GAAgB,IAAI,UAAU,CAAC,EACnG2B,EAAkC9B,EAAkBnN,CAAY,EACtE,OAAO,IAAIoO,GAAKxQ,EAAWH,EAAU,oCAAqC,CACtE,iCAAkCuR,EAClC,mCAAoCC,CAChD,CAAS,EAAGrR,EAAWH,EAAU,iCAAkC,CACvD,cAAe0P,EAAkB,UAAU,EAC3C,eAAgBC,GAAmBE,GAAgB,IAAI,UAAU,CAAC,CACrE,CAAA,CAAC,CACL,CACL,CAMO,MAAM6C,WAAwBxB,EAAiB,CAClD,aAAc,CACV,MAAM,CACF,QACA,QACZ,CAAS,CACJ,CACD,eAAgB,CACZ,MAAO,GACV,CACD,QAAQ3O,EAAcsN,EAAgB6B,EAAsBpB,EAAU,CAQlE,GAPI,CAACT,GAAkB,CAACS,GAGpB,CAACH,GAAgBN,CAAc,GAI/BQ,GAA0BC,CAAQ,EAClC,OAEJ,MAAMiB,EAA4B9B,EAA4B,UAAWI,GAAgB,IAAI,SAAS,CAAC,EACjG2B,EAAkC9B,EAAkBnN,CAAY,EACtE,OAAO,IAAIoO,GAAKxQ,EAAWH,EAAU,oCAAqC,CACtE,iCAAkCuR,EAClC,mCAAoCC,CAChD,CAAS,EAAGrR,EAAWH,EAAU,iCAAkC,CACvD,cAAe0P,EAAkB,SAAS,EAC1C,eAAgBC,GAAmBE,GAAgB,IAAI,SAAS,CAAC,CACpE,CAAA,CAAC,CACL,CACL,CAIO,MAAM8C,WAAuCzB,EAAiB,CACjE,aAAc,CACV,MAAM,CACF,yBACZ,CAAS,CACJ,CACD,eAAgB,CACZ,MAAO,GACV,CACD,QAAQ3O,EAAcsN,EAAgB6B,EAAsBpB,EAAUsC,EAAW,CAC7E,GAAI,CAAC/C,EACD,OAEJ,MAAMpO,EAAQoO,EAAe,IAAI,yBAAyB,EAC1D,GAAI,CAACpO,EACD,OAEJ,MAAMoR,EAAahD,EAAe,IAAI,aAAa,EACnD,GAAI,CAACgD,EACD,OAEJ,MAAMC,EAAe,IAAI,IAAIC,GAAsCF,CAAU,CAAC,EACxEG,GAAqBJ,GAAa,CAAA,GAAI,OAAOK,GAAKH,EAAa,IAAIG,EAAE,cAAa,CAAE,CAAC,EACrFC,EAAoBC,GAAiD1R,CAAK,EAC1E2R,EAAW,CAAA,EACjB,UAAWC,KAAkBH,EACzB,UAAWI,KAAQN,EAAmB,CAClC,MAAMO,EAAcD,EAAK,sBAAsBD,EAAe,GAAG,EAC5DE,IAGDF,EAAe,MAAQE,EAAY,UAAYF,EAAe,MAAQE,EAAY,WAClFH,EAAS,KAAKjT,EAAWH,EAAU,6BAA8B,CAC7D,IAAKqT,EAAe,IACpB,IAAKA,EAAe,MACpB,IAAKE,EAAY,SACjB,IAAKA,EAAY,SACjB,IAAKD,EAAK,cAAe,CAC5B,CAAA,CAAC,CAET,CAEL,GAAKF,EAAS,OAGd,OAAO,IAAIzC,GAAKyC,EAAS,KAAK,GAAG,EAAG,EAAE,CACzC,CACL,CACA,MAAMI,GAAsB,CACxBnC,GACAO,GACAK,GACAR,GACAO,GACAW,GACAb,GACAC,GACAM,GACAC,GACAC,GACAG,GACAD,EACJ,EACMgB,GAA0B,IAAM,CAClC,MAAMC,EAAgB,IAAI,IAC1B,UAAWC,KAAkBH,GAAqB,CAC9C,MAAMI,EAAY,IAAID,EAChBvC,EAAqBwC,EAAU,0BACrC,UAAWC,KAAoBzC,EAAoB,CAC/C,IAAI0C,EAAqBJ,EAAc,IAAIG,CAAgB,EACvDC,IAAuB,SACvBA,EAAqB,CAAA,GAEzBA,EAAmB,KAAKF,CAAS,EACjCF,EAAc,IAAIG,EAAkBC,CAAkB,CACzD,CACJ,CACD,OAAOJ,CACX,EACaK,GAAuBN,GAAyB,ycCpkBtD,SAASO,GAAsCpL,EAAa,CAC/D,KAAM,CAAE,KAAAxK,EAAM,MAAAqD,CAAO,EAAGmH,EAClBqL,EAAsB7V,EAAK,WAAW,IAAI,EAAI,IAAIA,CAAI,IAAMA,EAAK,QAAQ,aAAc,CAAC8V,EAAMC,IAAUA,EAAM,YAAW,CAAE,EAC3HC,EAAkB,IAAI3S,EAAM,WAAW,IAAM,KAAM,CAAC,IAC1D,MAAO,GAAGwS,CAAmB,KAAKG,CAAe,EACrD,8ICiBMpO,GAAWC,GACXoO,GAAgBC,GAChBC,GAAaC,GACNC,GAAc,IAAI,QACzBzU,EAAY,CAId,8BAA+B,wCAK/B,iBAAkB,2BAIlB,iCAAkC,uCAIlC,qBAAsB,0BAItB,gBAAiB,mBAIjB,aAAc,gBAId,UAAW,aAIX,SAAU,YAIV,oBAAqB,wBAIrB,kBAAmB,uBAInB,kBAAmB,sBAInB,oBAAqB,wBAIrB,iBAAkB,qBAIlB,uBAAwB,yBAIxB,2BAA4B,6BAChC,EACMC,GAAOC,EAA4B,8CAA+CF,CAAS,EAC3FG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC9DyU,GAAY,IAAI,QACf,MAAMC,EAAiB,CAC1BC,GACA,YAAYtU,EAAa,CACrB,KAAKsU,GAAetU,CACvB,CACD,SAAU,CACN,OAAO,IAAIwK,EACd,CACD,OAAOJ,EAAOmK,EAAS,CACnB,MAAMC,EAAM,GAAG,KAAKF,GAAa,QAAO,EAAG,cAAe,CAAA,IAAI,KAAKA,GAAa,QAAO,EAAG,0BAA0B,GAC9GG,EAASC,GAAkB,oBAAoB,KAAKJ,GAAa,WAAY,EAAE,KAAKA,GAAa,QAAO,EAAIlK,EAAM,OAAS2J,GAAgBE,GAAY7J,EAAM,OAASvK,GAAWH,EAAU,mBAAmB,EAAIG,GAAWH,EAAU,gBAAgB,EAAG8U,CAAG,EACnQC,EAAO,aAAa,QAAS,GAAGE,GAA+B,EAAC,MAAM,CAAE,MAAO,EAAI,CAAE,EAAE,QAAQvK,EAAM,OAAS,OAAS,MAAM,CAAC,EAAE,EAChI,KAAKkK,GAAa,QAAS,EAAC,6BAC5BG,EAAO,iBAAiB,QAAS,IAAM,CACnChT,EAAiB,gBAAgB2I,EAAM,OAAS,EAA2C,CAAC,CACxG,CAAS,EACD,MAAMwK,EAAS,KAAKN,GAAa,WAAY,EAAC,oBAAmB,EACjE,OAAIM,EAAO,UAAUF,GAAkB,SAAU,CAAA,GAAKA,GAAkB,SAAU,EAAC,cAAe,IAAKF,GACnGI,EAAO,iBAAiBH,CAAM,EAE3B,CAAC,GAAGI,EAAS,OAAOnP,GAAS,SAASA,GAAS,UAAU0E,EAAM,IAAI,CAAC,EAAGmK,CAAO,EAAE,MAAOE,CAAM,CACvG,CACL,CACO,MAAMK,EAAuB,CAChCR,GACA,YAAYtU,EAAa,CACrB,KAAKsU,GAAetU,CACvB,CACD,SAAU,CACN,OAAO,IAAIiM,GAAsB,KAAKqI,GAAa,SAAU,KAAKA,GAAa,cAAa,CAAE,CACjG,CACD,OAAOlK,EAAOmK,EAAS,CACnB,MAAMQ,EAAmB3K,EAAM,kBAC/B,GAAI,CAAC2K,EACD,MAAO,CAAC,SAAS,eAAe3K,EAAM,IAAI,CAAC,EAE/C,MAAMpO,EAAS,IAAIgZ,GAQnB,GAPAhH,EAA2BhS,EAAQoO,EAAM,IAAI,EAC7CpO,EAAO,KAAO,CACV,KAAMoO,EAAM,KACZ,UAAW,EAAQ2K,EACnB,eAAgB,IAAMA,GAAoB,KAAKT,GAAa,WAAY,EAAC,kBAAkBS,CAAgB,EAC3G,aAAc,uBAC1B,EACY7O,EAA6B,EAAC,qBAAqB6O,EAAiB,IAAI,GACxE7O,IAA8B,iBAAiB6O,EAAiB,IAAI,EAAG,CACvE,MAAMzT,EAAQF,GAAmBmT,EAAQ,cAAc,gBAAgBnK,EAAM,IAAI,CAAC,EAClF,GAAI9I,EACA,MAAO,CAAC,IAAI2T,GAAc,KAAKX,EAAY,EAAE,kBAAkBhT,EAAOtF,CAAM,CAAC,CAEpF,CACD,MAAO,CAACA,CAAM,CACjB,CACL,CACO,MAAMkZ,EAAiB,CAC1BZ,GACAa,GACA,YAAYnV,EAAac,EAAO,CAC5B,KAAKwT,GAAetU,EACpB,KAAKmV,GAASrU,CACjB,CACD,SAAU,CACN,OAAO,IAAIsU,GAAsC,KAAK,aAAa,KAAK,IAAI,CAAC,CAChF,CACD,gBAAgBhL,EAAO,CACnB,OAAO,KAAKiL,GAAe,mBAAmB,KAAKF,GAAQ/K,EAAM,IAAI,CACxE,CACD,cAAcA,EAAO,CACjB,OAAIA,EAAM,SAAS,SAAW,GAC1BA,EAAM,SAAS,uBAAuBA,EAAM,SAAS,CAAC,EAAGA,EAAM,SAASA,EAAM,SAAS,OAAS,CAAC,CAAC,EAC3F,KAEJA,EAAM,SAAS,qBAAqBA,EAAM,SAAS,CAAC,EAAGA,EAAM,SAASA,EAAM,SAAS,OAAS,CAAC,CAAC,CAC1G,CAED,aAAaA,EAAO,CAChB,OAAO,KAAK,gBAAgBA,CAAK,GAAG,OAAS,KAAK,cAAcA,CAAK,CACxE,CAED,OAAOA,EAAOmK,EAAS,CACnB,MAAMe,EAAmBlL,EAAM,SAAS,OAAS,EAAIyK,EAAS,OAAOzK,EAAM,SAAUmK,CAAO,EAAI,OAC1F,CAAE,YAAAjM,EAAa,MAAOiN,CAAa,EAAK,KAAK,gBAAgBnL,CAAK,GAAK,GACvEoL,EAAe,CAACD,EAChBE,EAAgBF,GAAiB,KAAK,cAAcnL,CAAK,EACzDsL,EAAY,IAAIC,GAQtB,GAPAD,EAAU,KAAO,CACb,cAAAD,EACA,aAAcrL,EAAM,KACpB,aAAAoL,EACA,aAAcpL,EAAM,SAAS,IAAIrD,GAAKwN,EAAQ,IAAI,KAAKxN,CAAC,CAAC,EAAE,KAAK,GAAG,EACnE,eAAgBjJ,GAAQ,KAAK8X,GAA6BtN,GAAexK,CAAI,CACzF,EACYwX,GAAkB,MAAM,OAAQ,CAGhCI,EAAU,YAAY,SAAS,eAAe,OAAOtL,EAAM,IAAI,EAAE,CAAC,EAClE,MAAMyL,EAAOH,EAAU,YAAY,SAAS,cAAc,MAAM,CAAC,EACjEG,EAAK,YAAY,SAAS,eAAe,IAAI,CAAC,EAC9CA,EAAK,KAAO,WACZP,EAAiB,MAAM,QAAQvO,GAAK8O,EAAK,YAAY9O,CAAC,CAAC,EACvD2O,EAAU,YAAY,SAAS,eAAe,GAAG,CAAC,CACrD,MAEG1H,EAA2B0H,EAAWtL,EAAM,IAAI,EAEhDsL,EAAU,MACV,KAAKI,GAAM,WAAWJ,EAAU,KAAM,CAClC,SAAU,IAAM,KAAKpB,GAAa,2BAA2BlK,EAAM,KAAMmL,GAAiB,IAAI,EAC9F,aAAc,kBAC9B,CAAa,EAEL,MAAMjU,EAAQmU,GAAiBrU,GAAmBqU,CAAa,EAC/D,GAAI,CAACnU,EACD,MAAO,CAACoU,CAAS,EAErB,MAAMK,EAAc,IAAId,GAAc,KAAKX,EAAY,EAAE,kBAAkBhT,EAAOoU,CAAS,EAC3F,OAAAnB,EAAQ,WAAW,QAASwB,CAAW,EACnCP,GACAF,GAAkB,YAAY,IAAI,OAAO,GAAG,QAAQU,GAAeA,EAAY,iBAAiBC,GAA2C,UAAWC,GAAM,CACxJH,EAAY,SAASG,EAAG,KAAK,KAAK,CACrC,CAAA,CAAC,EAEC,CAACH,CAAW,CACtB,CACD,GAAID,IAAQ,CACR,OAAO,KAAKxB,GAAa,YAC5B,CACD,GAAIe,IAAiB,CACjB,OAAO,KAAKf,GAAa,eAC5B,CACDsB,GAA6BO,EAAU,CACnC1U,EAAiB,YAAY2U,GAAwB,yBAAyB,EAC9E3U,EAAiB,gBAAgB,GAC7B,OAAO0U,GAAa,SACpB,KAAKL,GAAM,eAAeK,CAAQ,GAC9B,KAAKL,GAAM,eAAe,gBAAiBK,EAAUE,EAAgC,EAEpFF,EAAS,uBAAuBG,GACrC,KAAKR,GAAM,eAAeK,EAAS,WAAW,EAEzCA,EAAS,uBAAuBI,IACrC,KAAKT,GAAM,eAAe,gBAAiBK,EAAS,KAAME,EAAgC,CAEjG,CACL,CACO,MAAMG,EAAuB,CAChC,SAAU,CACN,OAAO,IAAI/O,EACd,CACD,OAAO2C,EAAOmK,EAAS,CACnB,MAAMkC,EAAW/Q,GAAS,SAAS0E,EAAM,IAAI,EACvC,CAAE,MAAAY,EAAO,YAAA0L,CAAa,EAAG7B,EAAS,OAAO4B,EAAUlC,CAAO,EAC1DoC,EAASD,EAAY,IAAI,OAAO,EAChCE,EAAQD,GAAQ,SAAW,EAAIA,EAAO,CAAC,EAAI,KACjD,GAAIC,aAAiBC,GAAgC,CACjDD,EAAM,eAAerC,EAAQ,cAAc,gBAAgBnK,EAAM,IAAI,CAAC,EAEtE,MAAM0M,EADOpR,GAAS,SAAS0E,EAAM,IAAI,EAClB,CAAC,GAAG,KAAK7N,GAAQgY,EAAQ,cAAc,SAAShY,CAAI,YAAayJ,EAAU,EAC5F+Q,EAAaD,GAAavC,EAAQ,cAAc,SAASuC,CAAS,EACpEC,GACAH,EAAM,iBAAiBI,GAAiD,UAAWd,GAAM,CACrFU,EAAM,eAAerC,EAAQ,cAAc,gBAAgBnK,EAAM,KAAM,IAAI,IAAI,CAAC,CAAC2M,EAAYb,EAAG,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAClI,CAAiB,CAER,CACD,OAAOlL,CACV,CACL,CACO,IAAAiM,GAAA,KAAoB,CACvB,YACA,YAAYjX,EAAa,CACrB,KAAK,YAAcA,CACtB,CACD,SAAU,CACN,MAAMkX,EAA0B,IAAM,KAAK,YAAY,iBAAiB,OAAO,EAC/E,OAAO,IAAItP,GAAasP,CAAuB,CAClD,CACDC,GAAe/M,EAAOmK,EAAS,CAC3B,MAAM6C,EAAa,SAAS,cAAc,MAAM,EAChD,GAAIhN,EAAM,KAAK,OAAS,gBAAkBA,EAAM,KAAK,OAAS,YAC1D,OAAAgN,EAAW,YAAY,SAAS,eAAehN,EAAM,IAAI,CAAC,EACnD,CAAE,WAAAgN,CAAU,EAEvB,KAAM,CAAE,YAAAV,CAAW,EAAK7B,EAAS,WAAWnP,GAAS,SAAS0E,EAAM,IAAI,EAAGmK,EAAS6C,CAAU,EAC9F,MAAO,CAAE,WAAAA,EAAY,YAAAV,EACxB,CACD,OAAOtM,EAAOmK,EAAS,CACnB,KAAM,CAAE,WAAA6C,EAAY,YAAAV,CAAa,EAAG,KAAKS,GAAe/M,EAAOmK,CAAO,EACtE,IAAI8C,EAAY9C,EAAQ,cAAc,gBAAgBnK,EAAM,IAAI,EAEhE,GAAIA,EAAM,KAAK,OAAS,kBAAoBiN,EAAU,MAAM,oBAAoB,GAC5E,CAAC9C,EAAQ,cAAc,kBAAkBnK,EAAM,IAAI,GAAK,IAAI,SAAS,QAASiN,CAAS,EAAG,CAC1F,MAAMC,EAAW,SAAS,KAAK,YAAY,SAAS,cAAc,MAAM,CAAC,EACzEA,EAAS,MAAM,gBAAkBD,EACjCA,EAAY,OAAO,iBAAiBC,CAAQ,EAAE,iBAAiB,SAAU,GAAID,EAC7EC,EAAS,OAAM,CAClB,CAED,MAAMhW,EAAQF,GAAmBiW,CAAS,EAC1C,GAAI,CAAC/V,EACD,MAAO,CAAC,SAAS,eAAe+V,CAAS,CAAC,EAE9C,MAAMrb,EAAS,KAAK,kBAAkBsF,EAAO8V,CAAU,EAGvD,GAFA7C,EAAQ,WAAW,QAASvY,CAAM,EAE9B0a,GAAetM,EAAM,KAAK,OAAS,kBACnCmK,EAAQ,IAAI,KAAKnK,EAAM,KAAK,SAAS,QAAQ,CAAC,EAAE,MAAM,gBAAgB,EAAG,CACzE,KAAM,CAACwM,CAAK,EAAIF,EAAY,IAAI,OAAO,GAAK,GACxCE,aAAiBC,KACjBD,EAAM,eAAe5a,EAAO,SAAU,GAAE,SAAQ,GAAM,EAAE,EACxD4a,EAAM,iBAAiBI,GAAiD,UAAWd,GAAM,CACrF,MAAMqB,EAAMC,GAA6BtB,EAAG,KAAK,KAAK,EAChD5U,EAAQtF,EAAO,WACjB,CAACub,GAAO,CAACjW,IAGTA,EAAM,GAAG,KAAK,GAAmCA,EAAM,GAAG,QAC1DtF,EAAO,SAAS,IAAIyb,GAAiBF,EAAKjW,EAAM,EAAGA,EAAM,EAAGA,EAAM,KAAK,CAAC,GAEnEA,EAAM,GAAG,KAAK,GAAmCA,EAAM,GAAG,UAC/DtF,EAAO,SAAS,IAAI0b,GAAiBH,EAAKjW,EAAM,EAAGA,EAAM,EAAGA,EAAM,KAAK,CAAC,EAE5EsV,EAAM,eAAe5a,EAAO,SAAU,GAAE,SAAQ,GAAM,EAAE,EAC5E,CAAiB,EAER,CACD,MAAO,CAACA,CAAM,CACjB,CACD,kBAAkBsF,EAAO8V,EAAY,CACjC,MAAMO,EAAW,KAAK,YAAY,SAAQ,EACpCC,EAAoB/X,GAAWH,EAAU,6BAA6B,EACtEmY,EAAUF,EAAW9X,GAAWH,EAAU,iBAAkB,CAAE,IAAKkY,EAAmB,EAAI,GAC1F5b,EAAS,IAAI8b,GAAqCD,CAAO,EAC/D7b,EAAO,YAAY,CAAC2b,CAAQ,EACxBrW,GACAtF,EAAO,YAAYsF,CAAK,EAEvB8V,IACDA,EAAapb,EAAO,YAAY,MAAM,EAClCsF,IACA8V,EAAW,YAAc9V,EAAM,gBAAe,GAAMA,EAAM,aAGlEtF,EAAO,YAAYob,CAAU,EAC7B,MAAMW,EAAiB,IAAM,CACpB,KAAK,YAAY,eAAe,KAAK,YAAY,qBAAoB,EAAI,EAAK,CAC/F,EAKQ,GAJA/b,EAAO,iBAAiB4E,GAAoC,UAAW,IAAM,CACzEa,EAAiB,gBAAgB,EAC7C,CAAS,EACDzF,EAAO,iBAAiBia,GAA2C,UAAW8B,CAAc,EACxFJ,EAAU,CACV,MAAMK,EAAa,IAAIrX,GAAuB,KAAK,YAAa,KAAK,YAAY,WAAY,EAAC,oBAAqB,EAAE3E,CAAM,EAC3Hgc,EAAW,iBAAiB,eAAiE9B,GAAM,CAC/F,MAAM5U,EAAQF,GAAmB8U,EAAG,IAAI,EACpC5U,GACAtF,EAAO,aAAasF,CAAK,CAE7C,CAAa,EACI,KAAK2W,GAAsBD,CAAU,CAC7C,CACD,OAAOhc,CACV,CACD,KAAMic,GAAsBD,EAAY,CACpC,MAAMjV,EAAW,KAAK,YAAY,WAAY,EAAC,SAAQ,EACjDxG,EAAO,KAAK,YAAY,KAAI,EAClC,GAAI,KAAK,YAAY,SAAS,OAAS,SAAW,CAACwG,GAAY,CAACxG,GAAQ,OAAOA,EAAK,GAAO,IACvF,OAEJ,MAAM8E,EAAe,IAAI6W,GAAsC,MAAMnV,EAAS,oBAAoBxG,EAAK,EAAE,CAAC,EAC1Gyb,EAAW,gBAAgB3W,CAAY,CAC1C,CACL,EACO,MAAM8W,EAAuB,CAChC7D,GACA,YAAYtU,EAAa,CACrB,KAAKsU,GAAetU,CACvB,CACD,SAAU,CACN,OAAO,IAAIkI,EACd,CACD,OAAOkC,EAAOmK,EAAS,CACnB,MAAM6D,EAAU,SAAS,cAAc,MAAM,EAC7CA,EAAQ,YAAY,SAAS,eAAe,aAAa,CAAC,EAC1D,MAAMpQ,EAAQoQ,EAAQ,YAAY,SAAS,cAAc,MAAM,CAAC,EAChEA,EAAQ,YAAY,SAAS,eAAe,IAAI,CAAC,EACjD,MAAMnQ,EAAOmQ,EAAQ,YAAY,SAAS,cAAc,MAAM,CAAC,EAC/DA,EAAQ,YAAY,SAAS,eAAe,GAAG,CAAC,EAChD,KAAM,CAAE,YAAaC,CAAa,EAAKxD,EAAS,WAAWzK,EAAM,MAAOmK,EAASvM,CAAK,EAChF,CAAE,YAAasQ,CAAY,EAAKzD,EAAS,WAAWzK,EAAM,KAAMmK,EAAStM,CAAI,EACnF,GAAIsM,EAAQ,cAAc,kBAAkBnK,EAAM,IAAI,EAClD,MAAO,CAACgO,CAAO,EAGnB,GAAI,CADUhX,GAAmBmT,EAAQ,cAAc,qBAAqBnK,EAAM,MAAM,CAAC,EAAGA,EAAM,MAAMA,EAAM,MAAM,OAAS,CAAC,CAAC,CAAC,EAE5H,MAAO,CAACgO,CAAO,EAInB,MAAMrC,EAAc,IAAId,GAAc,KAAKX,EAAY,EAAE,kBAAkB,OAAW8D,CAAO,EAC7F,OAAA7D,EAAQ,WAAW,QAASwB,CAAW,EAClC,KAAK,iBAAiB3L,EAAOmK,EAASwB,EAAa/N,EAAOC,EAAMoQ,EAAeC,CAAY,EACzF,CAACvC,CAAW,CACtB,CACD,MAAM,iBAAiB3L,EAAOmK,EAASwB,EAAa/N,EAAOC,EAAMoQ,EAAeC,EAAc,CAC1F,MAAMC,EAAc,MAAM,KAAKC,GAAapO,CAAK,EACjD,GAAI,CAACmO,EACD,QAEyBA,IAAgBnO,EAAM,MAAQiO,EAAgBC,GAAc,IAAI,OAAO,GAC/E,QAAQtc,GAAUA,EAAO,iBAAiBia,GAA2C,UAAWC,GAAMH,EAAY,SAASG,EAAG,KAAK,KAAK,CAAC,CAAC,EAC/J,MAAMuC,EAAiBF,IAAgBnO,EAAM,MAASnC,EAAOD,EACvDqP,EAAY9C,EAAQ,cAAc,qBAAqBgE,EAAY,CAAC,EAAGA,EAAYA,EAAY,OAAS,CAAC,CAAC,EAC1GjX,EAAQ+V,GAAajW,GAAmBiW,CAAS,EACvDoB,EAAc,MAAM,eAAiB,eACjCnX,GACAyU,EAAY,YAAYzU,CAAK,CAEpC,CAID,KAAMkX,GAAapO,EAAO,CACtB,MAAMsO,EAAqB,KAAKpE,GAAa,iBAAiB,cAAc,GAAG,MAAM,GAAG,GAAK,GACvFqE,EAAWD,EAAmB,SAAS,OAAO,EAC9CE,EAAUF,EAAmB,SAAS,MAAM,EAClD,GAAI,CAACE,GAAW,CAACD,EACb,OAAOvO,EAAM,MAEjB,GAAI,CAACuO,EACD,OAAOvO,EAAM,KAEjB,GAAI,CAACwO,EACD,OAAOxO,EAAM,MAEjB,OAAQ,MAAM,KAAKkK,GAAa,WAAU,EAAG,SAAU,GAAE,YAAa,EAAA,CAClE,IAAK,OACD,OAAOlK,EAAM,KACjB,IAAK,QACD,OAAOA,EAAM,MACjB,QACI,MACP,CACJ,CACL,CACO,MAAMyO,EAAiB,CAC1B/C,GACA,YAAYgD,EAAM,CACd,KAAKhD,GAAQgD,CAChB,CACD,OAAO1O,EAAOmK,EAAS,CACnB,MAAMwE,EAAiB,CAACxc,EAAMyc,IAAa,CACvC,GAAIzc,aAAgB0c,IAChB1c,aAAgBub,GAAsC,CAClDvb,aAAgBub,GAChBvb,EAAK,iBAAiB0Z,GAA2C,UAAWC,GAAM8C,EAAS9C,EAAG,KAAK,MAAM,gBAAiB,GAAIA,EAAG,KAAK,MAAM,SAAU,CAAA,CAAC,EAGvJ3Z,EAAK,iBAAiB,eAAuE2Z,GAAM8C,EAAS9C,EAAG,KAAK,IAAI,CAAC,EAE7H,MAAM5U,EAAQ/E,EAAK,UACnB,GAAI+E,EACA,OAAA0X,EAAS1X,CAAK,EACP,EAEd,CACD,MAAO,EACnB,EACc4X,EAAe,SAAS,cAAc,MAAM,EAClDA,EAAa,YAAY,SAAS,eAAe,YAAY,CAAC,EAC9DrE,EAAS,WAAWzK,EAAM,MAAOmK,EAAS2E,CAAY,EACtDA,EAAa,YAAY,SAAS,eAAe,IAAI,CAAC,EACtD,MAAMzS,EAASoO,EAAS,WAAWzK,EAAM,OAAQmK,EAAS2E,CAAY,EAAE,YAAY,IAAI,OAAO,GAAK,CAAA,EACpGA,EAAa,YAAY,SAAS,eAAe,IAAI,CAAC,EACtD,MAAMxS,EAASmO,EAAS,WAAWzK,EAAM,OAAQmK,EAAS2E,CAAY,EAAE,YAAY,IAAI,OAAO,GAAK,CAAA,EAEpG,GADAA,EAAa,YAAY,SAAS,eAAe,GAAG,CAAC,EACjD3E,EAAQ,cAAc,kBAAkBnK,EAAM,IAAI,GAAK3D,EAAO,SAAW,GAAKC,EAAO,SAAW,EAChG,MAAO,CAACwS,CAAY,EAExB,MAAMld,EAAS,IAAIid,GACnB,GAAI,CAACF,EAAetS,EAAO,CAAC,EAAG9E,GAAQ3F,EAAO,cAAc2F,CAAI,CAAC,GAC7D,CAACoX,EAAerS,EAAO,CAAC,EAAG/E,GAAQ3F,EAAO,eAAe2F,CAAI,CAAC,EAC9D,MAAO,CAACuX,CAAY,EAExB,MAAM1S,EAAQ4D,EAAM,MAAM,IAAI5D,GAAS+N,EAAQ,cAAc,gBAAgB/N,CAAK,CAAC,EAAE,KAAK,GAAG,EACvF2S,EAAa/O,EAAM,OAAO,IAAI9I,GAASiT,EAAQ,cAAc,gBAAgBjT,CAAK,CAAC,EAAE,KAAK,GAAG,EAC7F8X,EAAahP,EAAM,OAAO,IAAI9I,GAASiT,EAAQ,cAAc,gBAAgBjT,CAAK,CAAC,EAAE,KAAK,GAAG,EACnG,OAAAtF,EAAO,YAAYkd,CAAY,EAC/Bld,EAAO,gBAAgB,aAAawK,CAAK,KAAK2S,CAAU,KAAKC,CAAU,GAAG,EAC1Epd,EAAO,2BAA2BA,GAAU,CACpCA,EAAO,MACP,KAAK8Z,GAAM,WAAW9Z,EAAO,KAAM,CAC/B,SAAU,IAAM,CACZ,MAAMsF,EAAQtF,EAAO,aACrB,GAAI,CAACsF,EACD,OAEJ,MAAMuU,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,MAAM,QAAU,WACrB,MAAMwD,EAAM/X,EAAM,GAAG,KAAK,EACpBK,EAAO0X,EAAI,eAAgB,EAAG/X,EAAM,SAAU,EAAG+X,EAAI,WAC3D,GAAK1X,EAGL,OAAAkU,EAAK,YAAY,SAAS,eAAelU,CAAI,CAAC,EACvCkU,CACV,EACD,aAAc,wBAClC,CAAiB,CAEjB,CAAS,EACDtB,EAAQ,WAAW,QAASvY,CAAM,EAC3B,CAACA,CAAM,CACjB,CACD,SAAU,CACN,OAAO,IAAI2K,EACd,CACL,CACO,MAAM2S,EAAc,CACvBhF,GACA,YAAYtU,EAAa,CACrB,KAAKsU,GAAetU,CACvB,CACD,OAAOoK,EAAOmK,EAAS,CACnB,MAAMgF,EAAYnP,EAAM,KACxB,GAAI,CAAC,KAAKkK,GAAa,WACnB,MAAO,CAAC,SAAS,eAAeiF,CAAS,CAAC,EAE9C,MAAMC,EAAW,IAAI3C,GACrB2C,EAAS,aAAa,QAAS,GAAG7E,GAA+B,EAAC,MAAM,CAAE,MAAO,EAAM,CAAA,EAAE,QAAQ,WAAW,CAAC,EAAE,EAC/G,MAAM8E,EAAe,SAAS,cAAc,MAAM,EAClD,OAAAA,EAAa,YAAcF,EAC3BC,EAAS,KAAO,CACZ,UAAAD,EACA,eAAgB,KAAKjF,GAAa,WAAY,EAAC,QAAQ,6BAA6B,qBAAqB,CACrH,EACQkF,EAAS,OAAOC,CAAY,EAC5BD,EAAS,iBAAiB,iBAAkB,CAAC,CAAE,KAAA/Z,CAAI,IAAO,CACtD,MAAMuC,EAAU,KAAKsS,GAAa,QAAO,EACpCtS,IAGDvC,EAAK,OACL,KAAK6U,GAAa,WAAY,EAAC,gBAAe,EAC9C,KAAKA,GAAa,aAAa,eAAiBkF,EAChD/X,EAAiB,gBAAgB,IAErCO,EAAQ,QAAQ,UAAU,OAAO,mBAAoBvC,EAAK,IAAI,EAC9D,KAAK6U,GAAa,WAAU,EAAG,gBAAgB7U,EAAK,IAAI,EAEnDA,EAAK,MACD,KAAK6U,GAAa,eAAe,KAAKA,GAAa,qBAAoB,EAAI,EAAI,EAEpG,CAAS,EACDkF,EAAS,iBAAiB,eAAgB,MAAO,CAAE,KAAA/Z,CAAI,IAAO,CAC1Dga,EAAa,YAAcha,EAAK,MAChC,MAAM,KAAK6U,GAAa,eAAe,KAAKA,GAAa,qBAAoB,EAAI,EAAK,CAClG,CAAS,EACDkF,EAAS,iBAAiB,cAAe,CAAC,CAAE,KAAA/Z,CAAI,IAAO,CACnDga,EAAa,YAAcha,EAAK,KAC5C,CAAS,EACD8U,EAAQ,WAAW,QAASiF,CAAQ,EAC7B,CAACA,CAAQ,CACnB,CACD,SAAU,CACN,OAAO,IAAIvT,EACd,CACL,CACO,MAAMyT,EAAqB,CAC9BpF,GACA,YAAYtU,EAAa,CACrB,KAAKsU,GAAetU,CACvB,CACD2Z,GAAavP,EAAO,CAChB,OAAQA,EAAM,aAAY,CACtB,IAAK,YACL,IAAK,iBACD,MAAO,CACH,aAAc,qBACd,OAAQ,EACR,UAAW,aACX,UAAW,EAAQ,KAAKkK,GAAa,cAAa,EAAG,UAAW,EAAC,KAAKsF,GAAMA,EAAG,KAAI,EAAG,OAASxP,EAAM,IAAI,CAC7H,EACY,IAAK,eACD,MAAO,CACH,aAAc,mBACd,OAAQ,KACR,UAAW,uBACX,UAAW,KAAKkK,GAAa,cAAe,EAAC,sBAAuB,GAAE,KAAM,EAAC,OAASlK,EAAM,IAChH,EACY,IAAK,eACL,IAAK,yBACD,MAAO,CACH,aAAc,mBACd,OAAQ,GACR,UAAW,gBACX,UAAW,EAAQ,KAAKkK,GAAa,cAAa,EAAG,iBAAkB,EAAC,KAAKuF,GAAMA,EAAG,KAAI,EAAG,OAASzP,EAAM,IAAI,CACpI,CACS,CACJ,CACD,OAAOA,EAAO,CACV,MAAMpO,EAAS,IAAIgZ,GACnBhH,EAA2BhS,EAAQoO,EAAM,IAAI,EAC7C,KAAM,CAAE,OAAA0P,EAAQ,aAAAC,EAAc,UAAAC,EAAW,UAAAC,CAAS,EAAK,KAAKN,GAAavP,CAAK,EAC9E,OAAApO,EAAO,KAAO,CACV,KAAMoO,EAAM,KACZ,UAAA6P,EACA,eAAgB,IAAM,CAClBH,GAAUrY,EAAiB,gBAAgBqY,CAAM,EACjD,KAAKxF,GAAa,WAAY,EAAC,mBAAmB,GAAG0F,CAAS,IAAI5P,EAAM,IAAI,EAAE,CACjF,EACD,aAAA2P,CACZ,EACe,CAAC/d,CAAM,CACjB,CACD,SAAU,CACN,OAAO,IAAIoM,EACd,CACL,CACO,MAAM8R,EAAe,CACxB5F,GACA,YAAYtU,EAAa,CACrB,KAAKsU,GAAetU,CACvB,CACD,OAAOoK,EAAO,CACV,MAAO,CAAC,KAAK,aAAaA,CAAK,CAAC,CACnC,CACD,aAAaA,EAAO,CAChB,GAAI,CAAC,KAAKkK,GAAa,WACnB,OAAO,SAAS,eAAelK,EAAM,IAAI,EAE7C,MAAMnK,EAAsB,KAAKqU,GAAa,WAAY,EAAC,oBAAmB,EACxEtY,EAASme,GAAmC,SAClD,OAAAne,EAAO,YAAW,EAAG,iBAAiB,QAAS,IAAM,CACjDyF,EAAiB,gBAAgB,EAC7C,CAAS,EACDzF,EAAO,cAAcoO,EAAM,IAAI,EAC/B,IAAIrK,GAAkB,CAAE,YAAa,KAAKuU,GAAc,oBAAArU,EAAqB,OAAAjE,CAAM,CAAE,EAC9EA,CACV,CACD,SAAU,CACN,OAAO,IAAIkN,EACd,CACL,CAKO,MAAMkR,EAAY,CACrBC,GACAC,GACAC,GACA,YAAY9Q,EAAYzL,EAAYuW,EAAS,CACzC,KAAK+F,GAAc7Q,EACnB,KAAK4Q,GAAcrc,EACnB,KAAKuc,GAAWhG,CACnB,CACD,aAAc,CACV,OAAO,KAAK+F,KAAgB,WAC/B,CACD,OAAQ,CACJ,MAAO,EAAQ,KAAKD,GAAY,KAAKrO,GAAYA,EAAS,eAAiB,OAAO,CACrF,CACDwO,GAAQC,EAAY,CAChB,OAAO,KAAKJ,GAAY,KAAMrO,GAAaA,EAAS,eAAiByO,CAAU,GACzE,QACFC,GAAuC,KAAI,CAClD,CACD,SAAU,CACN,OAAO,KAAKF,GAAQ,IACvB,CACD,SAAU,CACN,OAAO,KAAKA,GAAQ,IACvB,CACD,YAAa,CACT,OAAO,KAAKA,GAAQ,OACvB,CACD,cAAe,CACX,OAAO,KAAKA,GAAQ,SACvB,CACDG,GAAgB3O,EAAU,CACtB,MAAO,GAAQA,EAAS,kBAAoBA,EAAS,OACxD,CACD4O,GAAwB5O,EAAU,CAC9B,GAAI,KAAK2O,GAAgB3O,CAAQ,EAAG,CAGhC,MAAM6O,EAAS7O,EAAS,OACxB,KAAKqO,GAAY,OAAOrO,GAAYA,EAAS,SAAW6O,CAAM,EAAE,QAAQ7O,GAAY,CAChFA,EAAS,OAAS,IAClC,CAAa,CACJ,CACJ,CACD8O,GAAqBC,EAAc,CAC/B,MAAMC,EAAQ,KAAKX,GAAY,UAAUrO,GAAYA,EAAS,eAAiB+O,CAAY,EACrF/O,EAAWgP,GAAS,EAAI,KAAKX,GAAYW,CAAK,EAAI,OACxD,OAAAhP,GAAY,KAAK4O,GAAwB5O,CAAQ,EAC1C,CAAE,SAAAA,EAAU,MAAAgP,EACtB,CACD,SAASC,EAAO,CACZ,GAAI,CAAC,KAAK,cACN,OAEJ,KAAM,CAAE,SAAAjP,EAAU,MAAAgP,CAAK,EAAK,KAAKF,GAAqB,SAClD9O,EAEKiP,GACD,KAAKZ,GAAY,OAAOW,EAAO,CAAC,EAIpC,KAAKX,GAAY,QAAQ,CAAE,MAAO,QAAS,OAAQ,KAAM,iBAAkB,KAAM,aAAc,OAAwC,CAAA,CAE9I,CACDa,GAAW/Z,EAAO4Z,EAAc,CAC5B,KAAM,CAAE,SAAA/O,CAAU,EAAG,KAAK8O,GAAqBC,CAAY,EAC3D,GAAI/O,EACAA,EAAS,MAAQ7K,EAAM,YACvB6K,EAAS,OAAS7K,EAClB6K,EAAS,OAAS,SAEjB,CAID,MAAMmP,EAAe,EACjB,KAAKd,GAAY,cAAcrO,GAAYA,EAAS,eAAiB,KAChE+O,IAAiB,UAA4C/O,EAAS,eAAiB,MAAqC,EACjImP,EAAe,GAAKA,EAAe,KAAKd,GAAY,QACpD,KAAKM,GAAgB,KAAKN,GAAYc,CAAY,CAAC,GACnD,KAAKd,GAAYc,EAAe,CAAC,EAAE,SAAW,KAAKd,GAAYc,CAAY,EAAE,QAG7E,KAAKP,GAAwB,KAAKP,GAAYc,CAAY,CAAC,EAE/D,KAAKd,GAAY,OAAOc,EAAc,EAAG,CAAE,MAAOha,EAAM,UAAW,EAAE,OAAQA,EAAO,OAAQ,KAAM,iBAAkB,KAAM,aAAA4Z,CAAY,CAAE,CAC3I,CACJ,CACD,WAAW5Z,EAAO,CACd,KAAK+Z,GAAW/Z,EAAO,IAC1B,CACD,WAAWA,EAAO,CACd,KAAK+Z,GAAW/Z,EAAO,IAC1B,CACD,cAAcA,EAAO,CACjB,KAAK+Z,GAAW/Z,EAAO,OAC1B,CACD,gBAAgBA,EAAO,CACf,KAAK,eACL,KAAK+Z,GAAW/Z,EAAO,SAE9B,CACD,eAAeuK,EAAQ,CACnBA,EAAO,eAAc,EACrB,MAAMmK,EAAOnK,EAAO,YAAY,MAAM,EACtC,IAAI0P,EAAiB,KACrB,UAAWpP,KAAY,KAAKqO,IACpB,CAACrO,EAAS,QAAUA,EAAS,SAAWoP,KACpCpP,IAAa,KAAKqO,GAAY,CAAC,GAC/BxE,EAAK,OAAO,GAAG,EAGf7J,EAAS,OACT6J,EAAK,OAAO,GAAGhB,EAAS,OAAO7I,EAAS,OAAQ,KAAKuO,EAAQ,EAAE,KAAK,EAE/D,OAAOvO,EAAS,OAAU,SAC/B6J,EAAK,OAAO7J,EAAS,KAAK,EAG1B6J,EAAK,OAAO,GAAGhB,EAAS,OAAO7I,EAAS,MAAOA,EAAS,kBAAoB,KAAKuO,EAAQ,EAAE,KAAK,GAGxGa,EAAiBpP,EAAS,MAEjC,CACL,CACO,MAAMqP,EAAe,CACxB/G,GACA,YAAYtU,EAAa,CACrB,KAAKsU,GAAetU,CACvB,CACD,YAAYsb,EAAQ7R,EAAY8K,EAAS,CACrC,MAAMvW,EAAa,CAAA,EACbud,EAAiB,CAAC,SAA0C,OAAsC,IAAgC,GAAG,EAC3I,IAAIC,EAAsB,GAI1B,MAAMC,EAAQH,EAAO,IAAIna,IAAU,CAAE,MAAAA,EAAO,OAAQA,EAAO,MAAOoT,EAAQ,cAAc,SAASpT,CAAK,EAAG,iBAAkB,IAAM,EAAC,EAClI,QAASua,EAAOD,EAAM,MAAK,EAAIC,EAAMA,EAAOD,EAAM,QAAS,CACvD,KAAM,CAAE,MAAAta,EAAO,OAAA0Z,EAAQ,MAAAzQ,EAAO,iBAAAuR,CAAgB,EAAKD,EAC7C/Z,GAAQga,GAAoBpH,GAAS,IAAI,KAAKpT,CAAK,EACzD,GAAIA,EAAM,OAAS,gBAAiB,CAChC,GAAI,CAACqa,EACD,OAAO,KAEX,MAAMT,EAAeQ,EAAe,MACpC,GAAIR,IAAiB,QAChBA,IAAiB,UAA4CtR,IAAe,aAC7E,OAAO,KAEX,MAAMmS,EAASlB,GAAuC,MAAM/Y,CAAI,EAChE,GAAI,CAACia,EACD,OAAO,KAEX5d,EAAW,KAAK,CAAE,MAAAmD,EAAO,OAAA0Z,EAAQ,OAAAe,EAAQ,aAAAb,EAAc,iBAAAY,CAAgB,CAAE,CAC5E,SACQvR,aAAiBe,GAAqC,CAE3D,MAAMsK,EAAgBlB,EAAQ,cAAc,gBAAgBpT,CAAK,EAC3D0a,EAAmB9V,GAA0C,aAAc0P,CAAa,EAC9F,GAAI,CAACoG,EACD,OAAO,KAEX,MAAMC,EAAUC,GAA2C,wBAAwBF,EAAkB,CAAC,IAAIjU,EAAc,CAAC,EACzH,GAAIkU,EAAQ,kBAAkBA,EAAQ,IAAI,IAAI,EAC1C,OAAO,KAEXL,EAAM,QAAQ,GAAG/V,GAAS,SAASA,GAAS,UAAUoW,EAAQ,IAAI,IAAI,CAAC,EAClE,IAAIE,IAAgB,CACrB,MAAOA,EACP,OAAQ7a,EACR,MAAO2a,EAAQ,SAASE,CAAW,EACnC,iBAAkB,IAAIC,GAAiBJ,EAAkBtH,EAAQ,UAAWuH,CAAO,CACtF,EAAC,CAAC,CACN,SAIGN,EAAsBD,EAAe,SAAW,EAC5Cpa,EAAM,OAAS,aAAeQ,EAAK,YAAa,IAAK,QAAS,CAC9D,GAAI8H,IAAe,cACfzL,EAAW,KAAK,CAAC,CAAE,aAAA+c,CAAY,IAAOA,IAAiB,SACvD,OAAO,KAEX/c,EAAW,KAAK,CAAE,MAAAmD,EAAO,OAAA0Z,EAAQ,aAAc,QAAwC,iBAAAc,CAAgB,CAAE,CAC5G,SACQvR,aAAiB1C,IAAc0C,aAAiB7D,GAAe,CACpE,GAAIvI,EAAW,KAAK,CAAC,CAAE,aAAA+c,CAAY,IAAOA,IAAiB,SACvD,OAAO,KAEX/c,EAAW,KAAK,CAAE,MAAAmD,EAAO,OAAA0Z,EAAQ,aAAc,QAAwC,iBAAAc,CAAgB,CAAE,CAC5G,SACQxa,EAAM,OAAS,WAAaA,EAAM,OAAS,YAChD,OAAO,IAGlB,CACD,OAAIoa,EAAe,OAAS,EAEjB,KAEJ,IAAInB,GAAY3Q,EAAYzL,EAAYuW,CAAO,CACzD,CACD,OAAOnK,EAAOmK,EAAS,CACnB,MAAM2H,EAAUxW,GAAS,MAAMA,GAAS,SAASA,GAAS,UAAU0E,EAAM,IAAI,CAAC,CAAC,EAC1EjN,EAAS,CAAA,EACf,UAAWme,KAAUY,EAAS,CAC1B,MAAMxf,EAAQ,KAAK,YAAY4e,EAAQlR,EAAM,WAAYmK,CAAO,EAC1D4H,EAAcb,EAAO,KAAK/e,GAAQA,EAAK,OAAS,WAAW,EAIjE,GAHI+e,IAAWY,EAAQ,CAAC,GACpB/e,EAAO,KAAK,SAAS,eAAe,IAAI,CAAC,EAEzC,CAACT,EAAO,CACR,KAAM,CAAE,MAAAsO,CAAK,EAAK6J,EAAS,OAAOyG,EAAQ/G,CAAO,EACjDpX,EAAO,KAAK,GAAG6N,CAAK,EACpB,QACH,CACD,MAAMhP,EAAS,IAAIogB,GAAsC1f,CAAK,EAC9DV,EAAO,aAAa,QAAS,GAAG2Y,GAA8B,YAAY,EAAE,MAAM,CAAE,MAAO,GAAM,CAAC,EAAE,EACpG3Y,EAAO,YAAW,EAAG,iBAAiB,QAAS,IAAM,CACjDyF,EAAiB,gBAAgB,EACjD,CAAa,EACD/E,EAAM,eAAeV,CAAM,EACL,IAAI4F,GAA0B,KAAK0S,GAAc,KAAKA,GAAa,WAAY,EAAC,oBAAqB,EAAEtY,CAAM,EACrH,iBAAiB,gBAAmD,IAAM,CACpFU,EAAM,eAAeV,CAAM,EACtB,KAAKsY,GAAa,eAAe,KAAKA,GAAa,qBAAoB,EAAI,EAAK,CACrG,CAAa,EACDnX,EAAO,KAAKnB,CAAM,EACdmgB,GACAhf,EAAO,KAAS,SAAS,eAAe,GAAG,EAAG,GAAG0X,EAAS,OAAOsH,EAAa5H,CAAO,EAAE,KAAM,CAEpG,CACD,OAAOpX,CACV,CACD,SAAU,CACN,OAAO,IAAIuM,EACd,CACL,CACO,MAAM2S,EAAa,CACtB,YACA,YAAYrc,EAAa,CACrB,KAAK,YAAcA,CACtB,CACD,OAAOoK,EAAO,CACV,YAAK,YAAY,QAAO,EAAG,qBAAqB,KAAK,WAAW,EACzD,CAAC,SAAS,eAAeA,EAAM,IAAI,CAAC,CAC9C,CACD,SAAU,CACN,OAAO,IAAIN,EACd,CACL,CACO,MAAMwS,EAAqB,CAC9B,OAAOlS,EAAOmK,EAAS,CACnB,GAAInK,EAAM,MAAM,QAAU,EACtB,OAAOyK,EAAS,OAAOnP,GAAS,SAASA,GAAS,UAAU0E,EAAM,IAAI,CAAC,EAAGmK,CAAO,EAAE,MAEvF,MAAMgI,EAASC,EAAyB,SAAQ,EAAG,cAAc,oBAAoB,EAAE,MACjFhe,EAAY,SAAS,yBAC3B,UAAW6M,KAAQjB,EAAM,MAAO,CAC5B,MAAMjJ,EAAQ0T,EAAS,OAAOxJ,EAAMkJ,CAAO,EACrCkI,EAAYC,+CAA8DH,EAAO,OAAO,CAAC,CAAC,UAChG/d,EAAU,OAAOie,EAAW,GAAGtb,EAAM,KAAK,CAC7C,CACD,MAAO,CAAC3C,CAAS,CACpB,CACD,SAAU,CACN,OAAO,IAAImM,EACd,CACL,CACO,MAAMgS,EAAe,CACxBrI,GACA,YAAYtU,EAAa,CACrB,KAAKsU,GAAetU,CACvB,CACD,OAAOoK,EAAOwS,EAAU,CACpB,MAAMC,EAAazS,EAAM,KACzB,GAAI,CAAC,KAAKkK,GAAa,WACnB,MAAO,CAAC,SAAS,eAAeuI,CAAU,CAAC,EAE/C,MAAMC,EAAY,IAAIC,GAChBtD,EAAe,SAAS,cAAc,MAAM,EAClDA,EAAa,YAAcoD,EAC3BC,EAAU,KAAO,CAAE,WAAAD,GACnBC,EAAU,OAAOrD,CAAY,EAC7B,MAAMuD,EAAkB1hB,GAAU,CAC9B,KAAM,CAAE,KAAAmE,CAAM,EAAGnE,EACjBme,EAAa,YAAcha,EAAK,MAChC,KAAK6U,GAAa,WAAY,EAAC,gBAAgB,EAAI,EAC9C,KAAKA,GAAa,eAAe,KAAKA,GAAa,qBAAoB,EAAI,EAAK,CACjG,EACc2I,EAAqB,IAAM,CAC7B,KAAK3I,GAAa,WAAY,EAAC,gBAAgB,EAAK,CAChE,EACQ,OAAAwI,EAAU,iBAAiB,eAAgBE,CAAc,EACzDF,EAAU,iBAAiB,mBAAoBG,CAAkB,EAC1D,CAACH,CAAS,CACpB,CACD,SAAU,CACN,OAAO,IAAI3S,EACd,CACL,CACA,eAAe+S,GAA4B1e,EAAWwB,EAAamd,EAAS,CACxE,MAAMC,EAAa,MAAMpd,EAAY,KAAI,GAAI,qBAAqBmd,EAAQ,UAAU,GAAK,OACnFlZ,EAAO,IAAIoZ,GAAqE,CAClF,WAAYF,EAAQ,WACpB,WAAAC,EACA,WAAYD,EAAQ,WACpB,eAAgB,IAAM,CACbC,GAGA5c,GAAuB4c,EAAY,EAAK,CAChD,EACD,aAAc,IAAM,CAChBA,GAAY,UAAS,CACxB,EACD,aAAc,IAAM,CAChBte,GAA8B,qBAAoB,CACrD,CACT,CAAK,EACDN,EAAU,eAAc,EACxBA,EAAU,YAAYyF,CAAI,CAC9B,CACO,MAAMqZ,EAAuB,CAChChJ,GACA,YAAYtU,EAAa,CACrB,KAAKsU,GAAetU,CACvB,CACD,wBAAyB,CACxB,CACD,KAAMud,GAAgB/e,EAAWgf,EAAUC,EAAY,CACnD,MAAMP,GAA4B1e,EAAW,KAAK8V,GAAc,CAC5D,WAAAmJ,EACA,WAAYD,CACxB,CAAS,EACD,KAAK,uBAAsB,CAC9B,CACD,OAAOpT,EAAOmK,EAAS,CACnB,MAAM6D,EAAU,SAAS,cAAc,MAAM,EAC7C,GAAIhO,EAAM,KAAK,OAAS,eAEpBgO,EAAQ,YAAY,SAAS,eAAehO,EAAM,IAAI,CAAC,EAClD,KAAKmT,GAAgBnF,EAAwB,GAAOhO,EAAM,IAAI,MAElE,CAIDgO,EAAQ,YAAY,SAAS,eAAe,GAAGhO,EAAM,YAAY,GAAG,CAAC,EACrE,MAAMsT,EAAkB,SAAS,cAAc,MAAM,EACrDtF,EAAQ,YAAYsF,CAAe,EAEnC,MAAMC,EADOjY,GAAS,SAAS0E,EAAM,KAAK,SAAS,SAAS,CAAC,EAClC,OAAO,CAAC,EAC9B,KAAKmT,GAAgBG,EAAgCC,EAAc,OAAS,CAAC,EAClF9I,EAAS,WAAW8I,EAAepJ,EAAS6D,CAAO,CACtD,CACD,MAAO,CAACA,CAAO,CAClB,CACD,SAAU,CACN,OAAO,IAAI5M,EACd,CACL,CACO,MAAMoS,EAAuB,CAChCtJ,GACA,YAAYtU,EAAa,CACrB,KAAKsU,GAAetU,CACvB,CACD,wBAAyB,CACxB,CACD,OAAOoK,EAAO,CACV,MAAMgO,EAAU,SAAS,cAAc,MAAM,EAC7C,OAAAA,EAAQ,YAAY,SAAS,eAAehO,EAAM,IAAI,CAAC,EAClD8S,GAA4B9E,EAAS,KAAK9D,GAAc,CACzD,WAAYlK,EAAM,KAClB,WAAY,EACf,CAAA,EAAE,KAAK,IAAM,KAAK,uBAAwB,CAAA,EACpC,CAACgO,CAAO,CAClB,CACD,SAAU,CACN,OAAO,IAAIvM,EACd,CACL,CACO,MAAMgS,EAAoB,CAC7BvJ,GACA,YAAYtU,EAAa,CACrB,KAAKsU,GAAetU,CACvB,CACD,OAAOoK,EAAOmK,EAAS,CACnB,MAAM6D,EAAU,CAAA,EAChB,GAAIhO,EAAM,SAAS,OAAS,EAAG,CAC3B,KAAM,CAAE,MAAAY,CAAK,EAAK6J,EAAS,OAAOzK,EAAM,SAAUmK,CAAO,EACzD6D,EAAQ,KAAK,GAAGpN,CAAK,CACxB,CACD,SAAW,CAAC,EAAG8S,CAAQ,IAAK1T,EAAM,UAAU,UAAW,CACnD,MAAM2T,EAAkB,SAAS,cAAc,MAAM,EACjD,EAAI,GACJA,EAAgB,YAAY,SAAS,eAAe,IAAI,CAAC,EAEzD,IAAM,KAAKzJ,GAAa,cAAe,EAAC,4BAA2B,IACnEyJ,EAAgB,MAAM,eAAiB,gBAE3ClJ,EAAS,WAAWiJ,EAAUvJ,EAASwJ,CAAe,EACtD3F,EAAQ,KAAK2F,CAAe,CAC/B,CACD,OAAO3F,CACV,CACD,SAAU,CACN,OAAO,IAAI7L,EACd,CACL,CACO,MAAMyR,UAAiCC,EAA2B,CACrE,MACA,sBACA,SACA,kBACA,mBACA,mBACAC,GACA,YACA,oBACA,YACA,oBACA,aACA,YACA,cACA,qBACA,2BACA,OACA,kBACA,eAAiB,KACjB,sBAAwB,KACxB,eACAC,GACAC,GAAa,OACb,YAAY,CAAE,WAAAC,EAAY,QAAArc,EAAS,cAAAnB,EAAe,SAAAmL,EAAU,YAAAsS,EAAa,UAAAC,EAAW,WAAAC,EAAY,YAAApc,GAAe,CAE3G,MAAM2X,EAAe/N,EAAS,KAAK,WAAW,IAAI,EAAI,kBAAoBA,EAAS,KACnF,MAAM,GAAIsS,EAAavE,CAAY,EACnC,KAAK,MAAQ/N,EAAS,WACtB,KAAK,sBAAwBnL,EAC7B,KAAK,SAAWmL,EAChB,KAAK,kBAAoBuS,EACzB,KAAK,mBAAqBC,EAC1B,KAAK,WAAa,GAClB,KAAK,mBAAqBH,EAC1B,KAAKH,GAAiBlc,EACtB,KAAK,YAAcsc,EACnB,KAAK,oBAAsB,IAAI7Q,GAA2B,CAAC,EAC3D,KAAK,YAAcrL,EACf,KAAK,cACL,KAAK,gBAAgB,YAAc,IAEvC,KAAK,oBAAsB,GAC3B,KAAK,aAAe,KACpB,KAAK,YAAc,KACnB,KAAK,cAAgB,KACrB,KAAK,qBAAuB,GAC5B,KAAK,2BAA6B,GAClC,KAAK,OAAS,KACd,KAAK,kBAAoB,KACzB,KAAK+b,GAA0BnS,EAAS,cAAgB,EAC3D,CACD,MAAM,WAAY,CACd,GAAI,CAAC9F,EAA6B,EAAC,wBAAwB,KAAK,IAAI,EAChE,OAAO,IAAI,IAEf,QAAS3J,EAAO,KAAK,mBAAmB,KAAI,GAAI,WAAYA,EAAMA,EAAOA,GAAM,WAAY,CACvF,MAAMuE,EAAQ,MAAM,KAAK,mBAAmB,SAAQ,GAAI,iBAAiBvE,EAAK,EAAE,EAC1EiT,EAAU1O,GAAO,IAAI,SAAS,EAEpC,GAAI,EADW0O,IAAY,QAAUA,IAAY,eAE7C,SAEJ,MAAMiP,EAAW,CAACxc,EAAcyc,IAAgB,CAC5C,MAAMC,EAAgB7d,GAAO,IAAImB,CAAY,EAC7C,GAAI,CAAC0c,EACD,MAAO,GAEX,MAAMrY,EAAMP,GAA0C9D,EAAc0c,CAAa,EACjF,OAAKrY,EAGEsY,GAAiC,QAAQtY,EAAK/J,GAAQA,EAAK,OAASmiB,CAAW,EACjF,IAAIniB,GAAQ+J,EAAI,KAAK/J,CAAI,CAAC,EAHpB,EAI3B,EACY,OAAI2J,EAA2B,EAAG,4BAA4B,KAAK,IAAI,EAC5D,IAAI,IAAIuY,EAAS,sBAAuB,eAAe,GACxD,QAAQI,GAAOA,EAAI,UAAU,EAAGA,EAAI,OAAS,CAAC,EAAE,MAAM,KAAK,EAAE,OAAOC,GAAQ,CAACA,EAAK,MAAM,OAAO,CAAC,CAAC,CAAC,EAExG5Y,EAA2B,EAAG,8BAA8B,KAAK,IAAI,EAC9D,IAAI,IAAIuY,EAAS,wBAAyB,UAAU,CAAC,EAEzD,IAAI,IAAIA,EAAS,qBAAsB,UAAU,CAAC,CAC5D,CACD,OAAO,IAAI,GACd,CACD,eAAgB,CACZ,OAAO,KAAK,qBACf,CACD,UAAW,CACP,MAAMM,EAA4B,KAAK,kBAAkBf,GAA4B,KAAK,OAAO,YAC3FgB,EAAgB,GAAQ,KAAK,MAAM,cAAgB,KAAK,MAAM,OACpE,MAAO,CAACD,GAA6BC,CACxC,CACD,WAAY,CACR,OAAO,KAAK,iBACf,CACD,YAAa,CACT,OAAO,KAAK,kBACf,CACD,cAAcC,EAAG,CACTA,IAAM,KAAK,qBAGf,KAAK,mBAAqBA,EAC1B,KAAK,YAAW,EACnB,CACD,kBAAkB1P,EAAgB,CAC9B,KAAK,eAAiBA,CACzB,CACD,iBAAiBvD,EAAU,CACvB,OAAO,KAAK,gBAAgB,IAAIA,CAAQ,GAAK,IAChD,CACD,yBAAyBkT,EAAuB,CAC5C,KAAK,sBAAwBA,CAChC,CACD,IAAI,MAAO,CACP,OAAO,KAAK,SAAS,IACxB,CACD,IAAI,OAAQ,CACR,OAAO,KAAK,SAAS,KACxB,CACD,cAAe,CACX,MAAMnV,EAAQ,KAAK,mBAAmB,YAAW,EAC3C+R,EAAU/R,IAAU,OAASA,EAAM,KAAK,KAAK,SAAS,IAAI,GAAKA,EAAM,KAAK,KAAK,SAAS,KAAK,GACnG,KAAK,gBAAgB,UAAU,OAAO,eAAgB+R,CAAO,EACxD,KAAK,aACV,IAAIqD,EAAsB,GAC1B,QAAS,EAAI,EAAG,EAAI,KAAK,WAAU,EAAI,EAAE,EAAG,CACxC,MAAMjT,EAAQ,KAAK,QAAQ,CAAC,EACxB,CAACA,GAAUA,GAAS,CAACA,EAAM,aAAc,IAG7CiT,EAAsB,GACzB,CACD,OAAKpV,EAMIoV,GAAuB,CAAC,KAAK,UAClC,KAAK,OAAM,EACX,KAAK,oBAAsB,IAEtB,CAACA,GAAuB,KAAK,UAAY,KAAK,sBACnD,KAAK,SAAQ,EACb,KAAK,oBAAsB,KAXvB,KAAK,qBACL,KAAK,SAAQ,EAEjB,KAAK,oBAAsB,IAUxBrD,CACV,CACD,sBAAuB,CACnB,MAAI,CAAC,KAAK,aAAe,CAAC,KAAK,aACpB,GAEJ,KAAK,YAAY,YAAc,KAAO,KAAK,aAAa,WAClE,CACD,aAAc,CACV,GAAI,CAAC,KAAK,gBACN,OAEA,KAAK,MAAM,mBAAmB,KAAK,IAAI,EACvC,KAAK,gBAAgB,UAAU,IAAI,UAAU,EAG7C,KAAK,gBAAgB,UAAU,OAAO,UAAU,EAE1B,CAAC,KAAK,SAAS,UAAYsD,GAAkB,wBAAwB,KAAK,QAAQ,EAExG,KAAK,gBAAgB,UAAU,IAAI,qBAAqB,EAGxD,KAAK,gBAAgB,UAAU,OAAO,qBAAqB,EAE3D,KAAK,YACL,KAAK,gBAAgB,UAAU,IAAI,WAAW,EAG9C,KAAK,gBAAgB,UAAU,OAAO,WAAW,EAEjD,KAAK,aACL,KAAK,gBAAgB,UAAU,IAAI,YAAY,EAG/C,KAAK,gBAAgB,UAAU,OAAO,YAAY,EAElD,KAAK,SAAS,SACd,KAAK,gBAAgB,UAAU,IAAI,UAAU,EAG7C,KAAK,gBAAgB,UAAU,OAAO,UAAU,EAEpD,KAAK,gBAAgB,UAAU,OAAO,UAAW,KAAK,kBAAkB,KAAK,QAAQ,CAAC,CACzF,CACD,MAAO,CACH,OAAO,KAAK,mBAAmB,MAClC,CACD,YAAa,CACT,OAAO,KAAK,kBACf,CACD,SAAU,CACN,OAAO,KAAKlB,EACf,CACD,YAAa,CACT,KAAKA,GAAe,cAAc,IAAI,CACzC,CACD,MAAM,eAAemB,EAAU,CAE3B,GAAI,CADkB,KAAK,MAAM,MAE7B,OAEJ,KAAK,mBAAmB,iBAAiB,EAAI,EAC7C,MAAMC,EAAU,MAAM,KAAK,SAAS,YAAYD,CAAQ,EACxD,KAAK,mBAAmB,iBAAiB,EAAK,EACzCC,IAGL,KAAK,sBAAsB,wBAC3B,KAAK,WAAU,EACf,KAAK,wBAAuB,EAC/B,CACD,kBAAkBtT,EAAU,CACxB,OAAKuT,GAAyB,UAAU,2BAIjC,KAAKpB,KAA4BnS,EAAS,cAAgB,KAAK,WAAY,EAAC,kBAAkBA,CAAQ,EAHlG,EAId,CACD,MAAM,YAAa,CAKf,GAJK,KAAKoS,KACN,KAAKA,GAAa,MAAM,KAAK,UAAS,GAGtC,KAAK,WAAU,GAAM,CAAC,KAAK,YAC3B,OAEJ,MAAMoB,EAAqB,KAAK,SAAS,sBAAqB,EACxDC,EAAoB,KAAK,MAAM,kBAAiB,EACtD,UAAWzT,KAAYwT,EAAoB,CACvC,MAAM1hB,EAAOkO,EAAS,KACtB,IAAIuS,EAAY,GACZC,EAAa,GACjBD,EAAY,KAAKL,GAAe,oBAAoBpgB,CAAI,EACxD0gB,EAAa,KAAK,sBAAsB,cAAcxS,CAAQ,IAAM,aAC5CyT,EAAkB,KAAKzT,GAAYA,EAAS,OAASlO,GAAQkO,EAAS,cAAa,CAAE,IAEzGwS,EAAa,IAEjB,MAAM9C,EAAO,IAAIsC,EAAyB,CACtC,WAAY,KAAK,mBACjB,QAAS,KAAKE,GACd,cAAe,KAAK,sBACpB,SAAAlS,EACA,YAAa,GACb,UAAAuS,EACA,WAAAC,EACA,YAAa,EAC7B,CAAa,EACD9C,EAAK,kBAAkB,KAAK,cAAc,EAC1CA,EAAK,yBAAyB,KAAK,qBAAqB,EACxD,KAAK,YAAYA,CAAI,CACxB,CACJ,CACD,UAAW,CACP,KAAK,YAAW,EAChB,KAAK,gBAAgB,iBAAiB,YAAapgB,GAAS,CACpDA,EAAM,SAAW,GACjB8Y,GAAU,IAAI,KAAK,mBAAoB,IAAI,CAElD,EAAE,EAAK,EACR,KAAK,gBAAgB,iBAAiB,UAAW,KAAK,QAAQ,KAAK,IAAI,CAAC,EACxE,KAAK,gBAAgB,iBAAiB,QAAS9Y,GAAS,CACpD,GAAI,CAACA,EAAM,OACP,OAGA,CADSA,EAAM,OACT,aAAc,GAAIA,EAAM,SAAW,KAAK,iBAC9CA,EAAM,QAAQ,EAAI,CAElC,CAAS,EAED,KAAK,gBAAgB,iBAAiB,cAAe,KAAK,2BAA2B,KAAK,IAAI,CAAC,CAClG,CACD,UAAW,CACP,KAAK,oBAAmB,CAC3B,CACD,YAAa,CACT,KAAK,oBAAmB,CAC3B,CACD,qBAAsB,CACb,KAAK,gBAGN,KAAK,SACL,KAAK,cAAc,KAAO,gBAG1B,KAAK,cAAc,KAAO,iBAEjC,CACDokB,GAA8BC,EAAc,CACxC,MAAMC,EAAe,KAAK,cAAe,EAAC,sBAAsBD,CAAY,EAE5E,OAAOC,EAAe,CAAE,aAAAA,EAAc,eADf,IAAM,KAAK,mBAAmB,cAAcD,EAActJ,EAAgC,CAC7D,EAAK,MAC5D,CACD,2BAA2BsJ,EAAclK,EAAe,CACpD,OAAO,IAAIoK,GAA6D,CACpE,aAAAF,EACA,MAAOlK,GAAiB,OACxB,QAAS,KAAKiK,GAA8BC,CAAY,CACpE,CAAS,CACJ,CAGDG,GAAsBhf,EAAOa,EAAM,CAC/B,MAAM2E,EAAMP,GAA0C,WAAYpE,CAAI,EACtE,GAAI,CAAC2E,EACD,OAAO,KAEX,MAAMH,EAAW4V,GAA2C,KAAKzV,EAAK,CAAC,IAAI8O,GAAuChL,GAAU,CACpH,MAAMmL,EAAgB,KAAK,sBAAsB,mBAAmBzU,EAAOsJ,EAAM,IAAI,GAAG,MACxF,OAAImL,IAAkB,OACXA,EAEPnL,EAAM,SAAS,SAAW,GAC1BA,EAAM,SAAS,uBAAuBA,EAAM,SAAS,CAAC,EAAGA,EAAM,SAASA,EAAM,SAAS,OAAS,CAAC,CAAC,EAC3F,KAEJA,EAAM,SAAS,qBAAqBA,EAAM,SAAS,CAAC,EAAGA,EAAM,SAASA,EAAM,SAAS,OAAS,CAAC,CAAC,CAC1G,CAAA,CAAC,CAAC,EACD2V,EAAOpa,GAA+B,SAASA,GAA+B,UAAUQ,EAAS,IAAI,IAAI,CAAC,EAChH,OAAOA,EAAS,qBAAqB4Z,EAAK,CAAC,EAAGA,EAAKA,EAAK,OAAS,CAAC,CAAC,CACtE,CACD,+BAAgC,CAC5B,KAAK3B,GAAa,OAClB,MAAM3I,EAAgB,KAAKqK,GAAsB,KAAK,SAAS,WAAY,KAAK,SAAS,KAAK,EAC1FrK,IAAkB,KAAK,oBAG3B,KAAK,kBAAoBA,EACzB,KAAK,iBAAgB,EACxB,CACD,aAAc,CACV,KAAK,kBAAoB,KAAKqK,GAAsB,KAAK,SAAS,WAAY,KAAK,SAAS,KAAK,EACjG,KAAK,iBAAgB,CACxB,CACD,kBAAmB,CACf,KAAK,YAAW,EACZ,KAAK,iBACL,KAAK,cAAgBE,GAAuB,iBAAkB,aAAa,EAC3E,KAAK,cAAc,aAAa,QAAS,GAAGC,GAAoB,EAAG,MAAM,CAAE,MAAO,GAAM,CAAC,EAAE,GAE/F,MAAMC,EAAY,KAAK,SAAS,SAC5B,CACI,IAAIhL,GAAiB,KAAM,KAAK,KAAK,EACrC,IAAID,GAAc,IAAI,EACtB,IAAI4D,GAAiB,KAAK,kBAAkB,EAC5C,IAAIsH,GAAY,KAAK,MAAM,WAAY,KAAK,MAAM,EAClD,IAAI7G,GAAc,IAAI,EACtB,IAAII,GAAqB,IAAI,EAC7B,IAAIQ,GAAe,IAAI,EACvB,IAAIkG,GACJ,IAAI/E,GAAe,IAAI,EACvB,IAAIvG,GAAuB,IAAI,EAC/B,IAAIqD,GAAuB,IAAI,EAC/B,IAAImE,GACJ,IAAI9F,GACJ,IAAI8G,GAAuB,IAAI,EAC/B,IAAIM,GAAuB,IAAI,EAC/B,IAAIvJ,GAAiB,IAAI,EACzB,IAAIwJ,GAAoB,IAAI,EAC5B,IAAIxB,GAAa,IAAI,CACxB,EACD,GAaJ,GAZI,CAACkD,GAAyB,UAAU,qCAAqC,GAAK,KAAK,SAAS,UAC5FW,EAAU,KAAK,IAAIvD,GAAe,IAAI,CAAC,EAE3C,KAAK,gBAAgB,iBACrB,KAAK,aAAe9H,EAAS,mBAAmB,KAAK,KAAM,KAAK,MAAOqL,CAAS,EAChF,KAAK,YAAcrL,EAAS,kBAAkB,KAAK,IAAI,EACnD,KAAK,SAAS,KAAK,WAAW,IAAI,GAAK,KAAK,aAC5C,KAAK,mBAAmB,WAAW,KAAK,YAAa,CACjD,SAAU,IAAM,KAAK,2BAA2B,KAAK,SAAS,KAAM,KAAK,sBAAsB,mBAAmB,KAAK,MAAO,KAAK,SAAS,IAAI,GAAG,OAAS,IAAI,EAChK,aAAc,kBAC9B,CAAa,EAED,CAAC,KAAK,YACN,OAEJ,MAAM0H,EAASC,EAAyB,SAAQ,EAAG,cAAc,oBAAoB,EAAE,MAKvF,GAJAxO,EAA2B,KAAK,gBAAgB,YAAY,OAAQ,uBAAuB,EAAGuO,EAAO,OAAO,KAAK,QAAO,EAAG,aAAe,CAAC,GAAK,KAAK,SAAS,SAAW,MAAQ,GAAG,EAChL,KAAK,aACL,KAAK,gBAAgB,YAAY,KAAK,WAAW,EAEjD,KAAK,aAAc,CAEnB,MAAM8D,EADiB,KAAK,aAAa,mBAAqB,KAAK,aAAa,kBAAkB,UAAY,KAC3E,IAAM,KACzC,KAAK,gBAAgB,YAAY,OAAQ,6BAA6B,EAAE,YAAcA,EAClF,KAAK,gBACL,KAAK,gBAAgB,YAAY,KAAK,aAAa,EACnD,KAAK,oBAAmB,GAE5B,KAAK,gBAAgB,YAAY,KAAK,YAAY,EAClD,MAAMC,EAAY,KAAK,gBAAgB,YAAY,OAAQ,kBAAkB,EAC7EA,EAAU,YAAc,IACxBA,EAAU,UAAY,KAAK,QAAQ,KAAK,IAAI,EACxC,KAAK,SAAS,UACdtS,EAA2B,KAAK,gBAAgB,YAAY,OAAQ,uBAAuB,EAAG,KAAK,CAE1G,CACD,GAAI,KAAK,SAAS,SACd,KAAK,oBAAmB,MAEvB,CAED,KAAK,gBAAgB,UAAU,IAAI,eAAe,EAClD,MAAMuS,EAAsB,KAAKb,GAA8B,KAAK,SAAS,IAAI,EAC3E7H,EAAU0I,EACZ,IAAIC,GAA+DD,CAAmB,EACtF,KAEJ,KAAK,gBAAgB,aAAa,KAAK,mBAAmB,sBAAsB,KAAK,SAAU1I,CAAO,EAAG,KAAK,gBAAgB,UAAU,EAG3G3R,IAA8B,kBAAkB,KAAK,SAAS,IAAI,GAE3F,KAAK,gBAAgB,UAAU,IAAI,wBAAwB,CAElE,CAKD,GAJK,KAAK,SAAS,iBACf,KAAK,gBAAgB,UAAU,IAAI,UAAU,EAEjD,KAAK,aAAY,EACb,KAAK,SAAS,UAAY,KAAK,QAAU,KAAK,OAAO,KAAM,CAC3D,MAAMua,EAAyB,SAAS,cAAc,OAAO,EAC7DA,EAAuB,UAAU,IAAI,iBAAkB,OAAO,EAC9DA,EAAuB,KAAO,WAC9BA,EAAuB,QAAU,CAAC,KAAK,SAAS,SAChDA,EAAuB,aAAa,QAAS,GAAGC,GAAsB,EAAC,MAAM,CAAE,MAAO,GAAM,CAAC,EAAE,EAC/FD,EAAuB,iBAAiB,YAAanlB,GAASA,EAAM,QAAO,EAAI,EAAK,EACpFmlB,EAAuB,iBAAiB,QAASnlB,GAAS,CACjD,KAAK,eAAe,CAAC,KAAK,SAAS,QAAQ,EAChDA,EAAM,QAAO,CAChB,EAAE,EAAK,EACJ,KAAK,aAAe,KAAK,cACzBqlB,GAAsBF,EAAwB,GAAG,KAAK,YAAY,WAAW,IAAI,KAAK,aAAa,WAAW,EAAE,EAEpH,MAAMG,EAAWZ,GAAuB,OAAQ,MAAM,EACtD9f,GAAmB,QAAQ0gB,EAAU/gB,GAAWH,EAAU,eAAe,CAAC,EAC1EkhB,EAAS,iBAAiB,QAAS,IAAM,CACrC,MAAMlgB,EAAe,GAAG,KAAK,SAAS,IAAI,KAAK,KAAK,SAAS,KAAK,IAClEmgB,EAAyD,SAASngB,CAAY,EAC9Ee,EAAiB,gBAAgB,EACjD,CAAa,EACD,KAAK,gBAAgB,OAAOmf,CAAQ,EACpC,KAAK,gBAAgB,aAAaH,EAAwB,KAAK,gBAAgB,UAAU,CAC5F,CACJ,CACD,qBAAsB,CAClB,KAAK,gBAAgB,UAAU,OAAO,mBAAmB,EACzD,MAAMK,EAAkB,KAAK,gBAAgB,cAAc,OAAO,EAC9DA,IACA3M,GAAY,OAAO2M,CAAe,EAClCA,GAAiB,QAAQ,eAAe,GAAG,OAAM,GAErD,MAAM7e,EAAe,KAAK,SAAS,KAKnC,GAJI,CAACwR,GAAqB,IAAIxR,CAAY,GAItC,KAAK,QAAQ,YACb,OAGJ,MAAMqQ,EADW,KAAK,mBAAmB,SAAQ,GACrB,UAAS,GAAM,CAAA,EACrCyO,EAAY,KAAK,KAAM,GAAE,UAAS,EACxC,UAAWzN,KAAaG,GAAqB,IAAIxR,CAAY,GAAK,CAAA,EAAI,CAClE,MAAM+e,EAAO1N,EAAU,QAAQrR,EAAc,KAAK,gBAAkB,OAAW,KAAK,uBAAyB,OAAW8e,GAAW,YAAa,EAAEzO,CAAS,EAC3J,GAAI0O,EAAM,CACNvf,EAAiB,aAAa6R,EAAU,cAAe,CAAA,EACvD,MAAM2N,EAAU,SAAS,cAAc,MAAM,EAC7CA,EAAQ,UAAU,IAAI,cAAc,EACpC,MAAMC,EAAW,IAAIC,GACrBD,EAAS,KAAO,CAAE,SAAU,OAAQ,MAAO,sBAAuB,MAAO,OAAQ,OAAQ,MAAM,EAC/FA,EAAS,UAAU,IAAI,MAAM,EAC7BD,EAAQ,OAAOC,CAAQ,EACvB/M,GAAY,IAAI+M,EAAUF,CAAI,EAC9B,KAAK,gBAAgB,OAAOC,CAAO,EACnC,KAAK,gBAAgB,UAAU,IAAI,mBAAmB,EACtD,KACH,CACJ,CACJ,CACD,QAAQ3lB,EAAO,CACX,MAAM8lB,EAAoBhN,GAAU,IAAI,KAAK,kBAAkB,EAe/D,GAdAA,GAAU,OAAO,KAAK,kBAAkB,EACpC,CAACgN,GAGD,KAAK,gBAAgB,gBAGrBC,GAAyB/lB,EAAM,MAAM,GAGrCA,EAAM,aAAY,EAAG,CAAC,YAAa,oBAGvCA,EAAM,QAAQ,EAAI,EACdA,EAAM,SAAW,KAAK,iBACtB,OAEJ,IAAIgmB,EAAkBhmB,EAAM,OAC5B,GAAIimB,GAAqC,0BAA0BjmB,CAAK,GAAK,KAAK4iB,GAAe,UAAW,CACxG,KAAK,iBAAiBoD,CAAe,EACrC,MACH,CACG,KAAK,eAAiBA,IAAoB,KAAK,eAG9C,KAAKpD,GAAe,WAGzBoD,EAAkBA,EAAgB,6BAA6B,qBAAqB,GAChFA,EAAgB,6BAA6B,OAAO,GACpDA,EAAgB,6BAA6B,kBAAkB,EAC/D,CAACA,GAAmBA,IAAoB,KAAK,aAC7CE,GAAuB,KAAK,YAAalmB,CAAK,EAC9C,KAAK,iBAAgB,IAGrBkmB,GAAuB,KAAK,aAAclmB,CAAK,EAC/C,KAAK,kBAAiB,GAE7B,CACD,uBAAuBiZ,EAASjZ,EAAO,CACnC,MAAMmmB,EAAc,IAAIC,GAA2BpmB,CAAK,EACxD,GAAI,KAAK,SAAS,UAAY,KAAK,QAAU,KAAK,OAAO,KAAM,CAC3D,MAAMqmB,EAAe,KAAK,mBAAmB,oBAAmB,EAChEF,EAAY,eAAc,EAAG,mBAAmB5hB,GAAWH,EAAU,gCAAgC,EAAG,SAAY,CAChH,GAAI,KAAK,YAAa,CAClB,MAAMkiB,EAAgB,KAAK,YAAY,YAAW,EAAG,aAAa,IAAI,EAEtE,KAAK,iBAAiB,KAAMrN,CAAO,EACnC,MAAM,KAAK,eAAe,CAAC,KAAK,SAAS,QAAQ,EACjDjZ,EAAM,QAAO,EACb,KAAK,mBAAmB,uBAAuBqmB,EAAcC,CAAa,CAC7E,CACjB,EAAe,CAAE,QAAS,CAAC,KAAK,SAAS,SAAU,aAAc,sCAAsC,CAAE,CAChG,CACD,MAAMC,EAAiB,KAAK,iBAAiB,KAAK,IAAI,EACtDJ,EAAY,eAAc,EAAG,WAAW5hB,GAAWH,EAAU,oBAAoB,EAAGmiB,EAAgB,CAAE,aAAc,yBAA2B,CAAA,EAC1IJ,EAAY,MACpB,CACD,2BAA2BnmB,EAAO,CAE9B,GAAI,CADWA,EAAM,OAEjB,OAEgB,KAAK,sBAAsBA,CAAK,EACnC,MACpB,CACD,sBAAsBA,EAAO,CACzB,MAAMmmB,EAAc,IAAIC,GAA2BpmB,CAAK,EACxD,OAAAmmB,EAAY,cAAa,EAAG,WAAW5hB,GAAWH,EAAU,eAAe,EAAG,IAAM,CAChF,MAAMgB,EAAe,GAAG,KAAK,SAAS,IAAI,KAAK,KAAK,SAAS,KAAK,IAClEmgB,EAAyD,SAASngB,CAAY,EAC9Ee,EAAiB,gBAAgB,EAC7C,EAAW,CAAE,aAAc,kBAAkB,CAAE,EACvCggB,EAAY,cAAa,EAAG,WAAW5hB,GAAWH,EAAU,YAAY,EAAG,IAAM,CAC7EmhB,EAAyD,SAAS,KAAK,SAAS,IAAI,EACpFpf,EAAiB,gBAAgB,EAC7C,EAAW,CAAE,aAAc,eAAe,CAAE,EACpCggB,EAAY,cAAa,EAAG,WAAW5hB,GAAWH,EAAU,SAAS,EAAG,IAAM,CAC1EmhB,EAAyD,SAAS,KAAK,SAAS,KAAK,EACrFpf,EAAiB,gBAAgB,EAC7C,EAAW,CAAE,aAAc,YAAY,CAAE,EACjCggB,EAAY,cAAa,EAAG,WAAW5hB,GAAWH,EAAU,QAAQ,EAAG,IAAM,CACzE,MAAMoiB,EAAW1C,GAAkB,wBAAwB,KAAKlB,EAAc,EAAE,SAChF2C,EAAyD,SAASiB,CAAQ,EAC1ErgB,EAAiB,gBAAgB,EAC7C,EAAW,CAAE,aAAc,WAAW,CAAE,EAChCggB,EAAY,cAAa,EAAG,WAAW5hB,GAAWH,EAAU,sBAAsB,EAAG,KAAK,uBAAuB,KAAK,IAAI,EAAG,CAAE,aAAc,4BAA4B,CAAE,EAC3K+hB,EAAY,iBAAgB,EAAG,WAAW5hB,GAAWH,EAAU,mBAAmB,EAAG,IAAM,CACvF,MAAMqiB,EAAqB3C,GAAkB,wBAAwB,KAAKlB,EAAc,EAAE,mBAC1F2C,EAAyD,SAASkB,CAAkB,EACpFtgB,EAAiB,gBAAgB,EAC7C,EAAW,CAAE,aAAc,uBAAuB,CAAE,EAC5CggB,EAAY,iBAAgB,EAAG,WAAW5hB,GAAWH,EAAU,0BAA0B,EAAG,KAAK,0BAA0B,KAAK,IAAI,EAAG,CAAE,aAAc,iCAAiC,CAAE,EAE1L+hB,EAAY,eAAc,EAAG,WAAW5hB,GAAWH,EAAU,iBAAiB,EAAG,SAAY,CACzF,MAAMsiB,EAAa,MAAM,KAAK,WAAY,EAAC,oBAAmB,EAC9DnB,EAAyD,SAASmB,CAAU,EAC5EvgB,EAAiB,gBAAgB,EAC7C,EAAW,CAAE,aAAc,sBAAsB,CAAE,EAC3CggB,EAAY,cAAa,EAAG,WAAW5hB,GAAWH,EAAU,iBAAiB,EAAG,IAAM,CAC7E,KAAK,mBACtB,EAAW,CAAE,aAAc,qBAAqB,CAAE,EACnC+hB,CACV,CACD,MAAM,mBAAoB,CACtB,MAAMQ,EAAsBpjB,EAAc,SAAU,EAAC,uBAAsB,EACtEojB,EAAoB,aACrB,MAAMC,GAA2B,SAAQ,EAAG,SAAS,UAAU,EAEnE,IAAIC,EAAsB,GACtB,KAAK,YACLA,EAAsB,IAAM,KAAK,SAAS,KAAO,IAGjDA,EAAsB,IAAM,KAAK,SAAS,KAAO,IAErD,MAAMpY,EAAQ,IAAI,OAAOoY,EAAqB,GAAG,EACjD,MAAMF,EAAoB,qBAAqBlY,CAAK,EACpDkY,EAAoB,MAAM,SAAS,KAAK,SAAS,IAAI,EACrDA,EAAoB,MAAM,QAAQ,OACrC,CACD,wBAAyB,CACrB,MAAMG,EAAsB1O,GAAsC,KAAK,QAAQ,EAC/EmN,EAAyD,SAASuB,CAAmB,EACrF3gB,EAAiB,gBAAgB,EACpC,CACD,2BAA4B,CAExB,MAAM4gB,EADoB,KAAKnE,GAAe,MAAO,EAAC,kBAAiB,EACf,OAAOlS,GAAY,CAACA,EAAS,QAAQ,EAAE,IAAI0H,EAAqC,EACxImN,EAAyD,SAASwB,EAA8B,KAAK;AAAA,CAAK,CAAC,EAC3G5gB,EAAiB,gBAAgB,EACpC,CACD,iBAAiB+C,EAAS8d,EAAW,CACjC,GAAI,CAAC,KAAKpE,GAAe,UACrB,OAEJ,MAAMqE,EAAsB/d,IAAY,KAAK,YACvClE,EAAaC,GAAiD,SAAU,EAAC,mBAAmB,KAAK,SAAUgiB,CAAmB,EAChIjiB,GACKE,GAAuBF,EAAYgiB,CAAS,CAExD,CACD,mBAAoB,CAChB,MAAM/N,EAAU,CACZ,SAAU,KAAK,SACf,YAAa,KAAK,aAAc,EAChC,cAAe,GACf,iBAAkB,KAAK,SACvB,gBAAiB,KAAK,KAClC,EAEQ,GAAIrO,EAA2B,EAAG,2BAA2B,KAAK,IAAI,EAAG,CACrE,MAAMsc,EAAcC,GAA0B,qBAAqB,KAAK,MAAO,CAACC,EAAgC,CAAC,EACjHnO,EAAQ,gBAAkBiO,EAAY,IAAIrlB,GAAUA,EAAO,MAAM,KAAM,CAAA,EAAE,KAAK;AAAA,CAAI,CACrF,CACD,KAAKwlB,GAAcpO,CAAO,CAC7B,CACD,kBAAmB,CACf,MAAMA,EAAU,CACZ,SAAU,KAAK,SACf,YAAa,KAAK,aAAc,EAChC,cAAe,GACf,iBAAkB,KAAK,SACvB,gBAAiB,KAAK,KAAK,MAAM;AAAA,CAAI,EAAE,IAAIqO,GAAKA,EAAE,KAAI,CAAE,EAAE,KAAK;AAAA,CAAI,CAC/E,EACQ,KAAKD,GAAcpO,CAAO,CAC7B,CACDoO,GAAcpO,EAAS,CAGnB,GAFA,KAAK,eAAiBA,EAElB,KAAK,kBAAkByJ,GAA4B,KAAK,OAAO,YAC/D,OAEJ,MAAMsD,EAAkB/M,EAAQ,cAAgB,KAAK,YAAc,KAAK,aAIxE,GAHI,CAAC+M,GAGDD,GAAyBC,CAAe,EACxC,OAGJ,KAAK,cAAc,EAAK,EACxBA,EAAgB,eAAe,UAAU,IAAI,eAAe,EAC5DA,EAAgB,YAAc/M,EAAQ,gBACtC,SAASsO,EAAatO,EAASjZ,EAAO,CAElC,MAAMwnB,EADiBxnB,EACc,cACrC,GAAI,CAACwnB,EACD,OAEJ,MAAMrjB,EAAOqjB,EAAc,QAAQ,MAAM,EACzC,GAAI,CAACrjB,EACD,OAEJ,MAAMsjB,EAAWtjB,EAAK,QAAQ,GAAG,EACjC,GAAIsjB,EAAW,EACX,OAEJ,MAAMjlB,EAAO2B,EAAK,UAAU,EAAGsjB,CAAQ,EAAE,OACnC5hB,EAAQ1B,EAAK,UAAUsjB,EAAW,CAAC,EAAE,OAC3CznB,EAAM,eAAc,EAChB,OAAOiZ,EAAQ,aAAiB,MAC5B,KAAK,cACLA,EAAQ,aAAe,KAAK,YAAY,aAAe,IAEvD,KAAK,eACLA,EAAQ,cAAgB,KAAK,aAAa,aAAe,KAGjE,KAAK,SAAS,KAAOzW,EACrB,KAAK,SAAS,MAAQqD,EAClB,KAAK,cACL,KAAK,YAAY,YAAcrD,EAC/B,KAAK,YAAY,aAEjB,KAAK,eACL,KAAK,aAAa,YAAcqD,EAChC,KAAK,aAAa,aAEtB,MAAM6hB,EAAS1nB,EAAM,OAChB,KAAK,iBAAiB0nB,EAAO,aAAe,GAAIzO,EAAS,SAAS,CAC1E,CACD,SAAS0O,EAAa1O,EAASjZ,EAAO,CAElC,IAAIqG,EADWrG,EAAM,OACH,YACbiZ,EAAQ,gBACT5S,EAAO,KAAK,OAASA,GAEpB,KAAK,iBAAiBA,GAAQ,GAAI4S,EAAS,EAAE,CACrD,CACD,KAAK,qBAAuB,KAAK,SAAS,cAAgB,GAC1D,KAAK,mBAAmB,gBAAgB,GAAM,IAAI,EAClD+M,EAAgB,eAAe,uBAAuB,EAAK,EAC3D,KAAK,OAAS,IAAI4B,GAAkB,KAAM3O,EAAQ,cAAe,MAAM,KAAK,KAAK6J,IAAc,CAAA,CAAE,CAAC,EAClG,KAAK,OAAO,yBAAyB,CAAC,EACtC,KAAK,OAAO,iBAAiB,cAAuD,IAAM,CACjF,KAAK,2BAA2B7J,CAAO,CACxD,CAAS,EACD,MAAM4O,EAAgB,KAAK,SAAS,mCAAkC,EAClEA,GACAC,GAAmBD,CAAa,EAEpC,MAAME,EAAe,KAAK,OAAO,sBAAsB/B,EAAiB2B,EAAa,KAAK,KAAM1O,CAAO,CAAC,EACxG,KAAK,iBAAiB+M,EAAiB,EAAI,EAC3C+B,EAAa,iBAAiB,UAAW,KAAK,wBAAwB,KAAK,KAAM9O,CAAO,EAAG,EAAK,EAChG8O,EAAa,iBAAiB,WAAY,KAAK,yBAAyB,KAAK,KAAM9O,CAAO,EAAG,EAAK,EAC9FA,EAAQ,gBACR8O,EAAa,iBAAiB,QAASR,EAAa,KAAK,KAAMtO,CAAO,EAAG,EAAK,EAC9E8O,EAAa,iBAAiB,cAAe,KAAK,uBAAuB,KAAK,KAAM9O,CAAO,EAAG,EAAK,GAEvG+M,EAAgB,sBAAqB,GAAI,kBAAkBA,CAAe,CAC7E,CACD,wBAAwB/M,EAASjZ,EAAO,CACpC,GAAIA,EAAM,QACN,OAEJ,MAAMgoB,EAAgBhoB,EAChB0nB,EAASM,EAAc,OAC7B,IAAInmB,EACJ,GAAKmmB,EAAc,MAAQ,SAAW,CAACA,EAAc,UAChD/O,EAAQ,eAAiB+O,EAAc,MAAQ,IAChDnmB,EAAS,kBAEJmmB,EAAc,UAAYC,GAAyB,IAAI,MAC5DD,EAAc,MAAQnnB,GACtBgB,EAAS,iBAEJ,CAACoX,EAAQ,eAAiB,KAAK,aACpC+O,EAAc,UAAYC,GAAyB,UAAU,KAAM,CAEnE,MAAMC,EAAYR,EAAO,wBACrBQ,GAAaA,EAAU,aAAe,CAACA,EAAU,cACjDloB,EAAM,eAAc,EACpB6B,EAAS,WAEhB,MACQmmB,EAAc,MAAQ,QAC3BnmB,EAASmmB,EAAc,SAAW,WAAa,UAC/ChoB,EAAM,eAAc,GAExB,GAAI6B,EAAQ,CACR,OAAQA,EAAM,CACV,IAAK,SACD,KAAK,iBAAiB,KAAMoX,CAAO,EACnC,MACJ,IAAK,UACL,IAAK,WACI,KAAK,iBAAiByO,EAAO,aAAe,GAAIzO,EAASpX,CAAM,EACpE,KACP,CACD7B,EAAM,QAAO,EACb,MACH,CACJ,CACD,yBAAyBiZ,EAASjZ,EAAO,CACrC,SAASmoB,EAA2B9hB,EAAM+hB,EAAgB,CAEtD,IAAIC,EAAY,GAChB,QAASnX,EAAI,EAAGA,EAAIkX,EAAgB,EAAElX,EAAG,CACrC,MAAMoX,EAAKjiB,EAAK6K,CAAC,EACboX,IAAO,MAAQD,IAAc,GAC7B,EAAEnX,EAEG,CAACmX,IAAcC,IAAO,KAAOA,IAAO,KACzCD,EAAYC,EAEPD,IAAcC,IACnBD,EAAY,GAEnB,CACD,MAAO,CAACA,CACX,CACD,MAAML,EAAgBhoB,EAChB0nB,EAASM,EAAc,OACvBO,EAAU,OAAO,aAAaP,EAAc,QAAQ,EACpDQ,EAAsB,KAAKC,GAAqBf,CAAM,EAI5D,GAHgCzO,EAAQ,cAAgBsP,IAAY,IAChEA,IAAY,KAAOC,IAAwB,MACvCL,EAA2BT,EAAO,aAAe,GAAIc,CAAmB,EACpD,CAExBxoB,EAAM,QAAQ,EAAI,EACb,KAAK,iBAAiB0nB,EAAO,aAAe,GAAIzO,EAAS,SAAS,EACvE,MACH,CACJ,CAEDwP,GAAqBvf,EAAS,CAC1B,MAAMgf,EAAYhf,EAAQ,wBAC1B,GAAI,CAACgf,GAAW,aAAahf,EAAS,EAAI,EACtC,OAAO,KAEX,IAAIwf,EAAaR,EAAU,aACvBjnB,EAAOinB,EAAU,WACrB,KAAOjnB,IAASiI,GAAS,CACrB,KAAOjI,GAAM,iBACTA,EAAOA,EAAK,gBACZynB,GAAcznB,EAAK,aAAa,QAAU,EAE9CA,EAAOA,GAAM,uBAAwB,GAAI,IAC5C,CACD,OAAOynB,CACV,CACD,MAAM,2BAA2BzP,EAAS,CACtC,GAAI,CAAC,KAAK,QAAU,CAAC,KAAK,mBAAmB,OACzC,OAEJ,MAAM0P,EAAc,KAAK,OAAO,KAAI,EACpC,GAAI1P,EAAQ,eAAiB0P,EAAY,SAAS,GAAG,EAAG,CAC/C,KAAK,iBAAiBA,EAAa1P,EAAS,SAAS,EAC1D,MACH,CACD,MAAM3K,EAAY,KAAK,OAAO,0BAAyB,EACvD,GAAIA,EAAU,SAAS,GAAG,EACtB,OAGJ,MAAMhB,EAAa,KAAK,mBAAmB,KAAI,EAC/C,GAAIA,GACiB,EAAQA,EAAW,WAAY,EAClC,CACV,GAAI,KAAK,KAAK,YAAW,IAAO,UAC5B,OAEJ,MAAMsb,EAAiBta,EAAU,KAAM,EAAC,YAAW,EACnD,GAAIsa,EAAe,WAAW,UAAU,GAAKA,IAAmB,gBAC5D,MAEP,CAED3P,EAAQ,cACJ3K,EAAU,SAAS,GAAG,EACtB,MAAM,KAAK,eAAeA,EAAW,EAAK,EAErC,KAAK,4BACV,MAAM,KAAK,mBAAmB2K,CAAO,EAIrC,KAAK,aACL,MAAM,KAAK,eAAe,GAAG,KAAK,YAAY,WAAW,KAAK3K,CAAS,GAAI,EAAK,CAG3F,CACD,8BAA+B,CAC3B,MAAM2K,EAAU,KAAK,eACrB,OAAO,KAAK,2BAA2BA,CAAO,CACjD,CACD,aAAaA,EAAS,CAClB,KAAK,cAAcA,EAAQ,WAAW,EAClCA,EAAQ,UACR,KAAK,OAAM,EAEf,MAAM4P,EAAgB5P,EAAQ,cAAgB,KAAK,YAAc,KAAK,aAElE4P,GAAiBA,EAAc,eAC/BA,EAAc,cAAc,UAAU,OAAO,eAAe,EAEhE,KAAK,mBAAmB,gBAAgB,EAAK,CAChD,CACD,iBAAiB3f,EAAS+P,EAAS,CAC/B,KAAK,aAAY,EACb,KAAK,2BACA,KAAK,mBAAmBA,CAAO,EAE/B,KAAK,aAAe,KAAK,aAC9B,KAAK,YAAY,YAAY,IAAI,EAErC,KAAK,YAAW,EAEhB,KAAK,aAAaA,CAAO,CAC5B,CACD,MAAM,mBAAmBA,EAAS,CAC9B,MAAM,KAAK,eAAe,KAAK,qBAAsB,GAAOA,EAAQ,gBAAgB,CACvF,CACD,YAAY6P,EAAe,CACvB,IAAIpB,EAAS,KACb,EAAG,CACC,MAAMqB,EAAUD,IAAkB,UAAYpB,EAAO,YAAcA,EAAO,gBAC1EA,EAASqB,aAAmBrG,EAA2BqG,EAAU,IAC7E,OAAiBrB,GAAUA,EAAO,aAC1B,OAAOA,CACV,CACD,MAAM,iBAAiBsB,EAAW/P,EAAS6P,EAAe,CACtD,KAAK,aAAY,EACjB,KAAK,aAAa7P,CAAO,EACzB,MAAMgQ,EAAgBhQ,EAAQ,cAG9B,GAAI,CAAC,KAAK,aAAe,CAAC,KAAK,aAC3B,OAEJ,MAAMiQ,EAAmB,KAAK,YAAY,aAAe,GACnDC,EAAoBF,GAAiBC,EAAiB,SAAS,GAAG,GAAM,CAAC,KAAK,SAEpF,IAAIE,EAAoB,GACpBC,EAAiB,GACrB,MAAMC,EAAe,OAAOrQ,EAAQ,aAAiB,IAC/CsQ,EAAkBD,IACnB,KAAK,YAAY,cAAgBrQ,EAAQ,cACtC,KAAK,aAAa,cAAgBA,EAAQ,eAC5CuQ,EAAuBF,GAAgBL,GAAiB,KAAK,aAAa,cAAgBhQ,EAAQ,cACxG,IAAIwQ,EAAS,KACb,MAAMC,EAAeT,KAAmBH,IAAkB,WACpDa,EAAqB,KAAK,aAAe,CAACX,IAAcU,GAAeT,IACzEH,IAAkB,YAAc,CAACG,GAAiBO,IAClDV,IAAkB,YAAcG,KAChCQ,EAASA,EAAO,YAAYX,CAAa,EACpCW,IACGX,IAAkB,YAAc,CAAC,KAAK,aAAeE,GACrDI,EAAoB,GAEfN,IAAkB,aACvBO,EAAiB,MAK7B,IAAIO,EAAc,GACdH,IAAW,MAAQ,KAAK,cACxBG,EAAc,KAAK,YAAY,YAAW,EAAG,aAAaH,CAAM,GAEpE,MAAMI,EAAaC,GAAsCd,CAAS,EAC5De,EAA0B,KAAK,cAChCP,GAAwBE,GAAgB,CAACZ,GAAiB,CAACG,GAAmBA,GAAiBY,GAC5FV,GACR,IAAMH,IAAc/P,EAAQ,iBAAmBsQ,IAAoB,CAAC,KAAK,aAAgBQ,EAAyB,CAC9G,IAAI3kB,EACA+jB,EACA/jB,EAAe,KAAK,YAAY,YAE3BykB,GACJ,KAAK,aAAeC,GAAsC,KAAK,aAAa,aAAe,EAAE,EAC9F1kB,EAAe,GAGX6jB,EACA7jB,EAAe4jB,EAAY,KAAO,KAAK,SAAS,MAGhD5jB,EAAe,KAAK,SAAS,KAAO,KAAO4jB,EAGnD,MAAM,KAAK,eAAe5jB,GAAgB,GAAI,EAAI,EAClD4kB,EAAmB,KAAK,KAAM,KAAK,YAAa,CAACH,EAAY,KAAKjH,EAAc,CACnF,MAEOqG,EACA,KAAK,SAAS,KAAOD,EAGrB,KAAK,SAAS,MAAQA,EAEtB,CAACM,GAAgB,CAAC,KAAK,aACvB,KAAK,YAAW,EAEpBU,EAAmB,KAAK,KAAM,KAAK,YAAa,GAAO,KAAKpH,EAAc,EAK9E,SAASoH,EAAmBC,EAAYC,EAAcxjB,EAAS,CAC3D,GAAI,CAACoiB,EAAe,CAChB,KAAK,mBAAmB,aACxB,MACH,CAED,GAAIW,GAAUA,EAAO,OAAQ,CACrBR,EACAQ,EAAO,kBAAiB,EAGxBA,EAAO,iBAAgB,EAE3B,MACH,CAGD,GAAIA,GAAU,CAACA,EAAO,OAAQ,CAC1B,MAAMU,EAAczjB,EAAQ,sBAAsB,YAAW,EAI7D,GAHIoiB,IAAkB,WAAae,GAAc,CAACZ,GAC9C,EAAEW,EAEFA,GAAeO,EAAY,WAAY,GAAI,CAAC,KAAK,YACjDf,EAAoB,OAEnB,CACD,MAAM1kB,GAAeklB,GAAe,EAAIO,EAAY,QAAQP,CAAW,EAAI,KAC3E,GAAIllB,GAAa,CACTulB,GAAcJ,EACVf,IAAkB,UAClBpkB,GAAY,iBAAgB,EAG5BA,GAAY,kBAAiB,EAG5B,CAACukB,GAAiBO,EACvB9kB,GAAY,iBAAgB,EAG5BA,GAAY,kBAAiB,EAEjC,MACH,CACIulB,IACDZ,EAAiB,GAExB,CACJ,CAED,GAAID,EAAmB,CACnB,GAAIa,GAAc,CAACC,GAAiBjB,KAAmBH,IAAkB,YACrE,OAEJpiB,EAAQ,sBAAsB,mBAC9B,MACH,CACD,GAAIijB,EAAoB,CACpBF,EAAS,KAAK,YAAYX,CAAa,EACvC,MAAMsB,EAAiBX,GAAUX,IAAkB,WAAcpiB,EAAUA,EAAQ,sBAC/E0jB,IACIA,EAAc,MAAO,EAAC,WACtBA,EAAc,qBAAoB,EAGlCA,EAAc,uBAAuBtB,CAAa,GAG1D,MACH,CACGO,IACI3iB,EAAQ,MAAO,EAAC,WAChBA,EAAQ,qBAAoB,EAG5BA,EAAQ,uBAAuBoiB,CAAa,EAGvD,CACJ,CACD,cAAe,CAEP,KAAK,SACL,KAAK,OAAO,SACZ,KAAK,OAAS,KAErB,CACD,yBAA0B,CACzB,CACD,eAAejiB,EAAWwjB,EAAa3Z,EAAU,CAC7C,OAAO,KAAK,oBAAoB,SAAS,KAAK,oBAAoB,KAAK,KAAM7J,EAAWwjB,EAAa3Z,CAAQ,CAAC,CACjH,CACD,MAAM,oBAAoB7J,EAAWwjB,EAAa3Z,EAAU,CAMxD,GAJI,CAAC,KAAK,aAAe,CAAC,KAAK,UAI3B,CADkB,KAAK,MAAM,MAE7B,OAEJ,MAAM4Z,EAA6B,KAAK,2BAExC,GADAzjB,EAAYA,EAAU,QAAQ,YAAa,GAAG,EAAE,OAC5C,CAACA,EAAU,QAAUwjB,GAAe,KAAK,aAAe,CAACC,EAA4B,CAErF,KAAK,QAAU,KAAK,OAAO,YAAY,IAAI,EAC3C,MACH,CACD,MAAMC,EAAc,KAAK,mBAAmB,KAAI,EAChD,KAAK,mBAAmB,iBAAiB,EAAI,EAC7C1jB,GAAa2jB,GAA8C3jB,CAAS,EACpEA,GAAa,IAAI,OAAO4jB,GAAuD5jB,CAAS,CAAC,EAGrFA,EAAU,QAAU,CAAC,QAAQ,KAAKA,CAAS,IAC3CA,GAAa,KAEjB,MAAM6jB,EAAoB,CAAC,KAAK,aAAeJ,EAC/C,IAAItG,EAAU,MAAM,KAAK,SAAS,QAAQnd,EAAWwjB,EAAaK,CAAiB,EAE/EJ,GAA8BD,GAAe,CAACrG,IAC9CqG,EAAc,GACdrG,EAAU,MAAM,KAAK,SAAS,QAAQ,KAAK,qBAAsBqG,EAAaK,CAAiB,GAEnG,KAAK,mBAAmB,iBAAiB,EAAK,EAI9C,MAAMC,EAAkBja,GAAY,KAAK,MAAM,WAAW,KAAK,SAAS,KAAK,EACvEka,EAAyB,KAAK,SAAS,MAAQ,KAAK,MAAM,cAAe,EAAC,OAChF,GAAI,CAAC5G,GAAY,CAAC2G,GAAmBC,EAAyB,CACtDP,IAEI,KAAK,YACL,KAAK,YAAY,YAAY,IAAI,EAGjC,KAAK,YAAW,GAGxB,KAAK,wBAAuB,EAC5B,MACH,CACGM,IACA,KAAK,gBAAgB,UAAU,OAAO,UAAW,KAAK,kBAAkBA,CAAe,CAAC,EACxF,KAAK,aAAa,sBAEtB,KAAK,sBAAsB,wBAC3B,KAAK,2BAA6B,GAIlC,MAAME,EAAiBR,GAAe,CAACxjB,EAAU,OAC7CgkB,EACA,KAAKjI,GAAe,gBAEf,CAACiI,GAAkBF,IACxB,KAAK,SAAWA,GAEhBJ,IAAgB,KAAK,QACrB,KAAK,WAAU,EAEnB,KAAK,wBAAuB,CAC/B,CACD,YAAa,CACT,MAAO,EACV,CACD,gCAAgCvqB,EAAO,CACnC,OAAOA,EAAM,SAAW,KAAK,aAChC,CACL,2gBC1qEA,IAAI8qB,GAAW,KAIR,MAAM1R,WAA0BrW,EAAe,CAClD,OACA,KACA,QACA,gBACAgoB,GACA,aAAc,CACV,MAAM,EAAI,EACV,KAAK,eAAe,SAAW,EAC/B,KAAK,yBAAyB,KAAK,cAAc,EACjD,KAAK,gBAAkB,SAAS,cAAc,KAAK,EACnD,KAAK,eAAe,YAAY,KAAK,eAAe,EACpD,KAAK,mBAAqB,KAAK,mBAAmB,KAAK,IAAI,EAC3D,KAAK,qBAAuB,KAAK,qBAAqB,KAAK,IAAI,CAClE,CACD,YAAa,CACT,OAAO,KAAK,OACf,CACD,MAAM,mBAAmB/qB,EAAO,CAC5B,GAAI,CAAC,KAAK,QACN,OAEJ,MAAM0nB,EAASsD,GAA6B,KAAK,QAAShrB,EAAM,KAAK,IAAI,EACzE0nB,EAAO,SAAS,MAAQ1nB,EAAM,KAAK,MACnC0nB,EAAO,YAAW,EAClB,MAAMA,EAAO,eAAeA,EAAO,qBAAsB,EAAE,EAAK,EAChE,MAAM,KAAK,QACd,CACD,MAAM,qBAAqB1nB,EAAO,CAC9B,GAAI,CAAC,KAAK,QACN,OAGJ,MADegrB,GAA6B,KAAK,QAAShrB,EAAM,KAAK,IAAI,EAC5D,eAAe,GAAI,EAAK,EACrC,MAAM,KAAK,QACd,CACD,YAAYwd,EAAM9W,EAAS,CACvB,KAAK,KAAO8W,EACZ,KAAK,QAAU9W,EACf,KAAK,QAAQ,iBAAiB,mBAAoB,KAAK,kBAAkB,EACzE,KAAK,QAAQ,iBAAiB,qBAAsB,KAAK,oBAAoB,CAChF,CACD,cAAcb,EAAO,CACjB,KAAKklB,GAAcllB,CACtB,CACD,eAAgB,CACZ,OAAO,KAAKklB,EACf,CACD,eAAgB,CACZ,KAAK,KAAO,OACZ,KAAK,QAAU,OACf,KAAK,QAAQ,oBAAoB,mBAAoB,KAAK,kBAAkB,EAC5E,KAAK,QAAQ,oBAAoB,qBAAsB,KAAK,oBAAoB,CACnF,CACD,MAAM,QAAS,CACN,KAAK,SAGV,KAAK,OAAO,KAAO,CACf,mBAAoB,KAAK,QAAUE,GAAkB,KAAK,QAAS,KAAK,OAAO,uBAAuB,EAClG,IAAI,IACR,mBAAoB,KAAK,KAAO,MAAMC,GAAoB,KAAK,IAAI,EAAI,IAAI,GACvF,EACK,CACD,OAAO,UAAW,CACd,OAAKJ,KACDA,GAAW,IAAI1R,IAEZ0R,EACV,CACD,UAAUK,EAAa,CACb,KAAK,kBAAkBA,IACzB,KAAK,eAAe,iBACpB,KAAK,OAAS,IAAIA,EAClB,KAAK,eAAe,YAAY,KAAK,MAAM,EAElD,CACD,OAAO,oBAAoB3N,EAAM9W,EAASykB,EAAaC,EAAaC,EAAY,CAC5E,MAAMC,EAAgBC,GAAaH,CAAW,EAC9C,OAAAE,EAAc,QAAU,MAAOtrB,GAAU,CACrCA,EAAM,gBAAe,EACrB,MAAMwrB,EAAgBhO,EAAK,sBACrBiO,EAASrS,GAAkB,WACjCqS,EAAO,UAAUN,CAAW,EAC5BM,EAAO,YAAYjO,EAAM9W,CAAO,EAChC+kB,EAAO,cAAcJ,CAAU,EAC/B,MAAMI,EAAO,SACb,MAAMC,EAAkBJ,EAAc,6BAA6B,qBAAqB,EAClFK,EAAW,IAAM,CACnBH,EAAc,KAAK,EAAI,CACvC,EACYA,EAAc,KAAKC,EAAQH,EAAe,IAAM,CAC5CG,EAAO,cAAa,EAChBC,GACAA,EAAgB,oBAAoB,SAAUC,CAAQ,CAE1E,CAAa,EACGD,GACAA,EAAgB,iBAAiB,SAAUC,CAAQ,CAEnE,EACeL,CACV,CACL,CACA,SAASC,GAAaH,EAAa,CAC/B,MAAMjS,EAAS,IAAIyS,GACnB,OAAAzS,EAAO,KAAO,CACV,QAAS,OACT,KAAM,QACN,SAAU,YACV,MAAOiS,EACP,aAAc,WACtB,EACIjS,EAAO,UAAU,IAAI,oBAAoB,EACzCA,EAAO,UAAYnZ,GAAS,CAExBA,EAAM,gBAAe,CAC7B,EACWmZ,CACX,CACA,SAAS6R,GAA6BtkB,EAASC,EAAc,CACzD,MAAM+gB,EAAShhB,EAAQ,sBAAsB,YAAa,EAAC,SAAQ,EAAG,KAAKkK,GAASA,aAAiB8R,GAA4B9R,EAAM,SAAS,OAASjK,CAAY,EACrK,GAAI+gB,EACA,OAAOA,EAEX,MAAMmE,EAAYnlB,EAAQ,sBAC1B,OAAAmlB,EAAU,SAAS,KAAOllB,EACnBklB,CACX,CACA,eAAeX,GAAoB1N,EAAM,CAErC,MAAMhY,EAAQ,MADagY,EAAK,qBACO,qBACvC,OAAOhY,EAAQA,EAAM,cAAgB,IAAI,GAC7C,CACA,SAASylB,GAAkBvkB,EAASolB,EAAoB,CACpD,MAAMC,EAAqB,IAAI,IACzBC,EAAwB,IAAI,IAAIF,EAAmB,IAAIG,GAAQA,EAAK,YAAY,CAAC,EACvF,UAAWA,KAAQvlB,EAAQ,MAAO,EAAC,kBAAiB,EAC5CslB,EAAsB,IAAIC,EAAK,IAAI,GACnCF,EAAmB,IAAIE,EAAK,KAAMA,EAAK,KAAK,EAGpD,OAAOF,CACX,0HCpJMlpB,GAAS,IAAI,cACnBA,GAAO,YACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CA4CC,EC1CD,MAAMuB,GAAY,CAMd,KAAM,QACV,EACMC,GAAOC,EAA4B,kCAAmCF,EAAS,EAC/EG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EACvD6nB,GAAoB,SAAUjrB,EAAMkrB,EAAetK,EAAS,CACrE,MAAMuK,EAAenrB,EACforB,EAAWprB,EAAK,SAAU,IAAK,KAAK,cAAgBA,EAAK,aAO/D,GANIorB,GAAYprB,EAAK,aACjBA,EAAOA,EAAK,YAKZA,EAAK,6BAA8B,CACnC,MAAMqrB,EAAgBH,EAAc,YAAY,OAAQ,yBAAyB,EAC3EI,EAA2B,KAAKH,EAAa,WAAU,CAAE,IAAIA,EAAa,kBAAkB,IAClG1Z,EAA2B4Z,EAAeC,CAAwB,EAClE3nB,GAAmB,QAAQunB,EAAetK,EAAQ,SAAW0K,CAAwB,EACrF,MACH,CACD,MAAMC,EAAcL,EAAc,YAAY,OAAQ,iBAAiB,EACvE,GAAItK,EAAQ,YAAa,CACrB2K,EAAY,YAAc3K,EAAQ,YAClCjd,GAAmB,QAAQunB,EAAetK,EAAQ,SAAWA,EAAQ,WAAW,EAChF,MACH,CACD,IAAI4K,EAAQxrB,EAAK,wBACjBurB,EAAY,YAAcC,EAC1B,MAAMC,EAAczrB,EAAK,aAAa,IAAI,EAC1C,GAAIyrB,EAAa,CACb,MAAMC,EAAYR,EAAc,YAAY,OAAQ,eAAe,EAC7DS,EAAO,IAAMF,EACnBD,GAASG,EACTla,EAA2Bia,EAAWC,CAAI,EAE1CJ,EAAY,UAAU,IAAI,OAAO,CACpC,CACD,MAAMK,EAAiB5rB,EAAK,aAAa,OAAO,EAChD,GAAI4rB,EAAgB,CAChB,MAAMC,EAAUD,EAAe,MAAM,KAAK,EAC1C,GAAIC,EAAQ,OAAQ,CAChB,MAAMC,EAAe,IAAI,IACnBC,EAAiBb,EAAc,YAAY,OAAQ,wBAAwB,EACjF,QAASjb,EAAI,EAAGA,EAAI4b,EAAQ,OAAQ,EAAE5b,EAAG,CACrC,MAAM+b,EAAYH,EAAQ5b,CAAC,EAC3B,GAAI+b,GAAa,CAACF,EAAa,IAAIE,CAAS,EAAG,CAC3C,MAAML,EAAO,IAAMK,EACnBR,GAASG,EACTla,EAA2Bsa,EAAgBJ,CAAI,EAC/CG,EAAa,IAAIE,CAAS,CAC7B,CACJ,CACJ,CACJ,CACD,GAAIZ,EAAU,CACV,MAAMa,EAAmBd,EAAa,mBAChCE,EAAgBH,EAAc,YAAY,OAAQ,yBAAyB,EACjF,IAAIgB,EAAa,KAAOf,EAAa,WAAU,EAC3Cc,IACAC,GAAc,IAAID,CAAgB,KAEtCxa,EAA2B4Z,EAAea,CAAU,EACpDV,GAASU,CACZ,CACDvoB,GAAmB,QAAQunB,EAAetK,EAAQ,SAAW4K,CAAK,CACtE,EACaW,GAAuB,SAAUnsB,EAAM4gB,EAAU,CAC1D,QAAS,OACT,qBAAsB,OACtB,YAAa,OACb,cAAe,EACnB,EAAG,CACC,GAAI,CAAC5gB,EACD,OAAO,SAAS,eAAesD,GAAWH,GAAU,IAAI,CAAC,EAE7D,MAAM5C,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,UAAU,IAAI,WAAW,EAE9B,MAAMmH,EADa0kB,GAA0C7rB,EAAM,CAAE,QAAS,CAAC8rB,EAAkB,EAAG,eAAgB,MAAS,CAAE,EACvG,YAAY,SAAU,kCAAkC,EAChF3kB,OAAAA,EAAK,UAAU,OAAO,eAAgBkZ,EAAQ,aAAa,EAC3DlZ,EAAK,aAAa,QAAS,GAAG4kB,GAAmB,MAAM,EAAE,MAAM,CAAE,MAAO,GAAM,QAAS,OAAO,CAAE,CAAC,EAAE,EACnGrB,GAAkBjrB,EAAM0H,EAAMkZ,CAAO,EACrClZ,EAAK,iBAAiB,QAAS,KACtBzD,GAAuBjE,EAAM,EAAK,EAChC,IACR,EAAK,EACR0H,EAAK,iBAAiB,YAAa1H,EAAK,UAAU,KAAKA,EAAM,MAAS,EAAG,EAAK,EAC9E0H,EAAK,iBAAiB,aAAc,IAAMnF,GAA8B,qBAAoB,EAAI,EAAK,EACjGqe,EAAQ,uBACRlZ,EAAK,SAAW,IAEbnH,CACX,EACagsB,GAA+B,SAAUlqB,EAAcue,EAAU,CAC1E,QAAS,OACT,qBAAsB,MAC1B,EAAG,CACC,MAAMrgB,EAAO,SAAS,cAAc,KAAK,EAEnCmH,EADa0kB,GAA0C7rB,EAAM,CAAE,QAAS,CAAC8rB,EAAkB,EAAG,eAAgB,MAAS,CAAE,EACvG,YAAY,SAAU,kCAAkC,EAChF3kB,EAAK,aAAa,QAAS,GAAG4kB,GAAmB,MAAM,EAAE,MAAM,CAAE,MAAO,GAAM,CAAC,EAAE,EACjF5kB,EAAK,YAAY,MAAM,EACvBA,EAAK,iBAAiB,QAASrF,EAAa,QAAQ,KAAKA,EAAcmqB,CAAsB,EAAG,EAAK,EACrG9kB,EAAK,iBAAiB,YAAa+kB,GAAKA,EAAE,QAAO,EAAI,EAAK,EACtD7L,EAAQ,uBACRlZ,EAAK,SAAW,IAEpB,SAAS8kB,EAAuBxsB,EAAM,CAC7BiE,GAAuBjE,CAAI,CACnC,CACD,OAAOO,CACX,EACA,IAAImsB,GACG,MAAMC,EAAU,CACnB,OAAO,SAASra,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAACoa,IAAqBna,KACtBma,GAAoB,IAAIC,IAErBD,EACV,CACD,QAAQE,EAAQhM,EAAS,CACrB,GAAIgM,aAAkBrmB,EAClB,OAAO4lB,GAAqBS,EAAQhM,CAAO,EAE/C,GAAIgM,aAAkBC,GAClB,OAAON,GAA6BK,EAAQhM,CAAO,EAEvD,MAAM,IAAI,MAAM,wBAAyB,CAC5C,CACL,+LC5IMhf,GAAS,IAAI,cACnBA,GAAO,YACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAuRC,EC7OD,MAAMuB,GAAY,CAId,qBAAsB,0BAItB,sBAAuB,yBAIvB,oBAAqB,wBAIrB,mBAAoB,sBAIpB,aAAc,gBAId,eAAgB,oBAKhB,iBAAkB,0BAKlB,uBAAwB,mCAIxB,aAAc,kBAId,SAAU,YAIV,oBAAqB,wBAIrB,kBAAmB,uBAInB,YAAa,gBACjB,EACMC,GAAOC,EAA4B,4CAA6CF,EAAS,EACzFG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC9D0pB,GAAY,UACZC,GAAyB,GACxB,MAAMC,CAAuB,CAChC,WACA,cACA,cACA,eACA,sBACA,SACA,WACA,uBACA,aACA,wBACA,QACAC,GACA,aACA,sBACA,cACA,gBACA,oBACA,kBACA,yBACA,iBACA,uBACA,uBACA,UACA,mBACA,uBACA,iBACA,aAAe,EACfC,GACAC,GAEA,2BAA6B,EAC7B,WAAa,EAEb,MAAOC,GAA4B,IAAI,QACvCC,GACA,YAAYlnB,EAAY7B,EAAeC,EAAO+oB,EAAYta,EAAgB2P,EAAuB4K,EAAkB,CAC/G,KAAKF,GAAoBE,EACzB,KAAK,WAAapnB,EAClB,KAAK,WAAamnB,EAClB,KAAK,cAAgB/oB,EACrB,KAAK,cAAgBD,EACrB,KAAK,eAAiB0O,EACtB,KAAK,sBAAwB2P,EAC7B,KAAK,SAAW,GAAQpe,EAAM,cAAgBA,EAAM,OACpD,KAAK,WAAa,KAClB,KAAK,uBAAyB,GAC9B,KAAK,aAAe,GACpB,KAAK,wBAA0BA,EAAM,kBAAiB,EAAG,OACzD,MAAMipB,EAAOjpB,EAAM,WACbkpB,EAAa,KAAK,aACxB,KAAK,QAAU,SAAS,cAAc,KAAK,EAC3C,KAAK,QAAQ,UAAU,IAAI,gBAAgB,EAC3C,KAAK,QAAQ,UAAU,IAAI,gBAAgB,EAC3C,KAAK,QAAQ,UAAU,IAAI,WAAW,EACtC,KAAK,QAAQ,aAAa,QAAS,GAAGC,GAAsB,kBAAkB,EAAE,MAAM,CAClF,QAAS,oDACrB,CAAS,CAAC,EAAE,EACJtJ,GAAsB,KAAK,QAAS,GAAGqJ,CAAU,gBAAgB,EACjE,KAAK,QAAQ,SAAW,GACxBE,GAA4B,KAAK,OAAO,EACxC,KAAK,QAAQ,iBAAiB,UAAW,KAAK,UAAU,KAAK,IAAI,EAAG,EAAK,EACzExnB,EAAW,iBAAiB,IAAI,KAAK,QAAS,IAAI,EAClD,KAAK8mB,GAAoB,KAAK,QAAQ,YAAY,MAAO,YAAY,EACrE,KAAKC,GAA2B,SAAS,cAAc,KAAK,EAC5D,KAAKA,GAAyB,UAAU,IAAI,oBAAoB,EAChE,KAAK,QAAQ,QAAQ,KAAKA,EAAwB,EAClD,KAAKC,GAAgC,SAAS,cAAc,KAAK,EACjE,KAAKA,GAA8B,UAAU,IAAI,yBAAyB,EAC1E,KAAK,QAAQ,OAAO,KAAKA,EAA6B,EACtD,KAAK,uBAAsB,EAC3B,KAAK,aACD,KAAKF,GAAkB,YAAY,MAAO,yBAA2BO,EAAO,kBAAoB,GAAG,EACvG,KAAK,sBAAwB,IAAII,GACjC,KAAK,sBAAsB,aAAa,EAAK,EAC7C,KAAK,sBAAsB,iBAAiB,CAACC,EAAgC,CAAC,EAC9E,KAAK,sBAAsB,QAAQ,UAAU,IAAI,mBAAoB,iBAAkB,WAAW,EAClG,KAAKZ,GAAkB,YAAY,KAAK,sBAAsB,OAAO,EACrE,KAAK,cAAgBa,GAA4B,GAAI,KAAK,aAAa,KAAK,IAAI,EAAG,CAC/E,UAAW,kBACX,aAAc,oCAC1B,CAAS,EACD,KAAKb,GAAkB,YAAY,KAAK,aAAa,EACrD,MAAMjN,EAASC,EAAyB,SAAQ,EAAG,cAAc,oBAAoB,EAAE,MACjF8N,EAAoB,SAAS,cAAc,KAAK,EAWtD,GAVAA,EAAkB,YAAY,OAAQ,uBAAuB,EAAE,YAAc/N,EAAO,OAAO,KAAK,YAAY,EAC5G+N,EAAkB,UAAU,IAAI,oBAAoB,EACpD,KAAK,gBAAkB,SAAS,cAAc,MAAM,EACpD3J,GAAsB,KAAK,gBAAiB9gB,GAAWH,GAAU,WAAW,CAAC,EAC7E,KAAK,gBAAgB,UAAU,IAAI,UAAU,EAC7C,KAAK,gBAAgB,YAAcsqB,EACnCM,EAAkB,YAAY,KAAK,eAAe,EAClD,KAAK,gBAAgB,iBAAiB,aAAc,KAAK,qBAAqB,KAAK,IAAI,EAAG,EAAK,EAC/F,KAAK,gBAAgB,iBAAiB,aAAc,KAAK,mBAAmB,KAAK,IAAI,EAAG,EAAK,EAEzFN,EAAW,OAAS,GAAK,EAAED,aAAgBQ,IAA2B,CACtE,MAAMC,EAAYF,EAAkB,YAAY,OAAQ,yBAAyB,EACjFE,EAAU,YAAcR,EAAW,OAAS,EAAI,KAAO,IACvD,MAAMS,EAAa,KAAKjB,GAAkB,YAAY,MAAO,4BAA4B,EACzFiB,EAAW,YAAY,OAAQ,uBAAuB,EAAE,YAAclO,EAAO,OAAO,KAAK,YAAY,EACrGkO,EAAW,YAAY,MAAM,EAAE,YAAc,GAChD,MAEG,KAAK,aAAa,UAAU,IAAI,QAAQ,EAE5C,GAAIV,EAAM,CACN,MAAMW,EAAgB,IAAIC,GAAyB9qB,GAAWH,GAAU,oBAAoB,EAAG,OAAQ,OAAW,yBAAyB,EAC3IgrB,EAAc,iBAAiB,QAAqD,KAAK,eAAgB,IAAI,EAC7GA,EAAc,QAAQ,SACtBA,EAAc,QAAQ,SAAW,GAC5B,KAAK,sBACN,KAAK,oBACD,IAAIE,GAAmB,gDAAiD,KAAK,OAAO,GAE5F,KAAK,oBAAoB,kBAAkBF,CAAa,EACxDG,GAA0B,KAAK,oBAAoB,OAAO,CAC7D,CAkCD,GAjCItL,GAAyB,UAAU,aAAa,GAAK,KAAK,WAC1D,KAAK,kBAAoB,IAAIqL,GAAmB,+BAAgC,KAAKpB,EAAiB,EACtG,KAAK,yBAA2B,IAAIznB,GAAyB,KAAK,WAAW,oBAAmB,EAAI,IAAI,EACxG,KAAK,iBACD,IAAI4oB,GAAyB,cAAe,oBAAqB,OAAW,aAAa,EAC7F,KAAK,iBAAiB,iBAAiB,QAAqD,IAAM,CAC9F,KAAK,0BAAyB,CACjC,EAAE,IAAI,EACP,KAAK,iBAAiB,QAAQ,iBAAiB,UAAWrvB,GAAS,CAC3DwvB,GAA6CxvB,CAAK,IAClDA,EAAM,QAAQ,EAAI,EAClB,KAAK,0BAAyB,EAErC,EAAE,EAAK,EACR,KAAK,kBAAkB,kBAAkB,KAAK,gBAAgB,EAC1D,KAAK,cAAc,OAASyvB,GAA6B,OACrD,KAAK,qBACL,KAAK,oBAAoB,QAAQ,UAAU,IAAI,iBAAiB,EAIpE,KAAK,kBAAkB,QAAQ,UAAU,IAAI,qBAAqB,GAG1E,KAAK,gBAAgB,iBAAiB,QAAS,KAAK,oBAAoB,KAAK,IAAI,EAAG,EAAK,EACzF,KAAK,gBAAgB,aAAa,QAAS,GAAGC,GAA4B,UAAU,EAAE,MAAM,CAAE,MAAO,GAAM,OAAQ,EAAM,CAAA,CAAC,EAAE,EAC5H,KAAK,QAAQ,iBAAiB,cAAe,KAAK,uBAAuB,KAAK,IAAI,EAAG,EAAK,EAC1F,KAAK,QAAQ,iBAAiB,YAAa,KAAK,0BAA0B,KAAK,IAAI,EAAG,EAAK,EAC3F,KAAK,QAAQ,iBAAiB,QAAS,KAAK,sBAAsB,KAAK,IAAI,EAAG,EAAK,EACnF,KAAK,QAAQ,iBAAiB,YAAa,KAAK,YAAY,KAAK,IAAI,EAAG,EAAK,EAC7E,KAAK,QAAQ,iBAAiB,aAAc,KAAK,aAAa,KAAK,IAAI,EAAG,EAAK,EAC/E,KAAK,uBAAyB,GAC9B,KAAK,uBAAyB,IAAI,QAC9BjB,GAEA,GAAIA,EAAK,YAAW,GAAMA,EAAK,WAAU,EACrC,KAAK,SAAW,WAIZA,EAAK,aAAc,CACnB,MAAMkB,EAASlB,EAAK,SAAQ,EAAG,sBAAsBA,EAAK,YAAY,EACtE,KAAK,UAAYkB,GAAU,CAACA,EAAO,4BAA2B,CACjE,EAGT,KAAK,mBAAqB,SAAS,cAAc,KAAK,EACtD,KAAK,mBAAmB,UAAU,IAAI,yBAAyB,EAC/D,KAAK,QAAQ,QAAQ,KAAK,kBAAkB,EAC5C,KAAK,iBAAgB,EACrB,KAAK,aAAa,YAAYX,CAAiB,EAC3C,KAAK,WACL,KAAK,QAAQ,UAAU,IAAI,WAAW,EAErC,KAAK,WACN,KAAK,QAAQ,UAAU,IAAI,WAAW,EACtC,KAAK,sBAAsB,QAAQ,UAAU,IAAI,WAAW,GAEhE,KAAK,uBAAyB,GAC9B,KAAK,iBAAmB,GACxB,KAAK,oBAAmB,EACxB,KAAK,WAAU,CAClB,CACD,kBAAkB/a,EAAgB,CAC9B,KAAK,eAAiBA,CACzB,CACD,yBAAyB2P,EAAuB,CAC5C,KAAK,sBAAwBA,CAChC,CACD,qBAAsB,CAClB,IAAIhT,EAAQ,KAAK,sBAAsB,WAAU,EACjD,KAAOA,GACCA,aAAiB8R,IACjB9R,EAAM,kBAAkB,KAAK,cAAc,EAC3CA,EAAM,yBAAyB,KAAK,qBAAqB,EACzDA,EAAM,oBAAmB,GAE7BA,EAAQA,EAAM,WAErB,CACD,cAAc2d,EAAY,CACtB,KAAK,WAAaA,EAClB,KAAK,WAAU,CAClB,CACD,eAAgB,CACZ,OAAO,KAAK,UACf,CACD,qBAAqB7pB,EAAa,CAC1B,KAAK,0BACL,KAAK,yBAAyB,qBAAqBA,CAAW,EAE9D,KAAK,oBACL,KAAK,kBAAkB,QAAQ,UAAU,OAAO,qBAAqB,EACjE,KAAK,qBACL,KAAK,oBAAoB,QAAQ,UAAU,IAAI,iBAAiB,EAG3E,CACD,eAAgB,CACR,KAAK,WAAW,oBAAmB,EAAG,UAAW,GACjD,KAAK,cAAc,OAAS+qB,GAA6B,SAGzD,KAAK,mBACL,KAAK,kBAAkB,QAAQ,UAAU,IAAI,qBAAqB,EAElE,KAAK,qBACL,KAAK,oBAAoB,QAAQ,UAAU,OAAO,iBAAiB,EAE1E,CACD,OAAO,qBAAqBlqB,EAAeqqB,EAAWnB,EAAM,CACxD,GAAI,CAACA,EACD,OAAO,SAAS,eAAe,EAAE,EAErC,MAAMoB,EAAe5B,EAAuB,2BAA2BQ,CAAI,EACrEkB,EAASlB,EAAK,aAAelpB,EAAc,WAAW,sBAAsBkpB,EAAK,YAAY,EAAI,KACvG,SAASqB,GAAsB,CAC3B,OAAKrB,GAGDoB,GAAgBpB,EAAK,cAAgBkB,IACpC,CAACA,EAAO,4BAA6B,GAClCpqB,EAAc,SAAQ,EAAG,iBAAkB,EAAC,mBAAmBoqB,CAAM,GAClE1B,EAAuB,oBAAoB1oB,EAAc,SAAQ,EAAIqqB,EAAWnB,EAAK,aAAcoB,CAAY,EAL/G,IAQd,CACD,SAASE,EAAYC,EAAO,CACxB,GAAIL,GAAQ,UAAW,CACnB,MAAMhnB,EAAO6kB,GAA6BmC,EAAO,UAAW,CACxD,qBAAsB,GACtB,QAAS,MAC7B,CAAiB,EACD,OAAAhnB,EAAK,YAAcqnB,EACZrnB,CACV,CACD,OAAO,IACV,CACD,GAAIgnB,GAAQ,WAAa,CAACA,EAAO,eAAc,EAAI,CAC/C,MAAMM,EAAWN,EAAO,mBAAoB,GAAI,CAACA,EAAO,aAAe,KAAOG,IAC9E,GAAIG,EACA,OAAOA,EAEX,MAAMD,EAAQL,EAAO,mBAAoB,EAAGprB,GAAWH,GAAU,qBAAqB,EAAI2pB,GACpF9sB,EAAO8uB,EAAYC,CAAK,EAC9B,OAAI/uB,GAGG,SAAS,eAAe+uB,CAAK,CACvC,CACD,MAAMC,EAAWH,IACjB,GAAIG,EACA,OAAOA,EAEX,GAAIxB,EAAK,cACL,OAAO,SAAS,eAAelqB,GAAWH,GAAU,mBAAmB,CAAC,EAE5E,GAAIqqB,EAAK,aACL,OAAO,SAAS,eAAelqB,GAAWH,GAAU,kBAAkB,CAAC,EAE3E,GAAIqqB,EAAK,iBACL,OAAO,SAAS,eAAelqB,GAAWH,GAAU,YAAY,CAAC,EAErE,MAAMnD,EAAO8uB,EAAYhC,EAAS,EAClC,OAAI9sB,GAGG,SAAS,eAAe,EAAE,CACpC,CACD,qBAAqBsE,EAAeqqB,EAAWnB,EAAM,CACjD,OAAOR,EAAuB,qBAAqB1oB,EAAeqqB,EAAWnB,CAAI,CACpF,CACD,OAAO,2BAA2BA,EAAM,CACpC,IAAIoB,EACJ,OAAIpB,aAAgBQ,GAChBY,EAAepB,EAAK,MAAM,MAErBA,aAAgByB,KACrBL,EAAepB,EAAK,IAAK,EAAC,OAEvBoB,CACV,CACD,OAAO,0BAA0BtqB,EAAekpB,EAAM,CAClD,GAAI,CAACA,EACD,OAEJ,MAAMoB,EAAe,KAAK,2BAA2BpB,CAAI,EACnDkB,EAASlB,EAAK,aAAelpB,EAAc,WAAW,sBAAsBkpB,EAAK,YAAY,EAAI,KACvG,GAAIoB,GAAgBpB,EAAK,cAAgBkB,GAAU,CAACA,EAAO,8BAA+B,CACtF,MAAMQ,EAA2B,KAAK,uBAAuB5qB,EAAc,SAAQ,EAAIkpB,EAAK,aAAcoB,CAAY,EACtH,KAAK,qBAAqBM,EAA0B,EAAI,CAC3D,CACJ,CACD,OAAO,oBAAoB1oB,EAAUmoB,EAAWQ,EAAcP,EAAc,CACxE,MAAMM,EAA2B,KAAK,uBAAuB1oB,EAAU2oB,EAAcP,CAAY,EACjG,OAAOD,EAAU,mBAAmBO,CAAwB,CAC/D,CACD,OAAO,uBAAuB1oB,EAAU2oB,EAAcP,EAAc,CAChE,MAAMQ,EAAmB5oB,EAAS,sBAAsB2oB,CAAY,EAC9DE,EAAaD,EAAiB,mBAAmBR,EAAa,SAAS,EACvEU,EAAeF,EAAiB,qBAAqBR,EAAa,UAAWA,EAAa,WAAW,EAC3G,OAAO,IAAIW,GAAyBH,EAAkBC,EAAYC,CAAY,CACjF,CACD,YAAa,CACT,OAAO,KAAK,sBAAsB,WAAW,eAAiB,IACjE,CACD,UAAUrnB,EAAS,CAEf,MAAMunB,EAAU,KAAK,aACjBA,IACAA,EAAQ,SAAW,IAGvBvnB,EAAQ,MAAK,EACT,KAAK,sBAAsB,WAAW,SAASA,CAAO,IACtDA,EAAQ,SAAW,EAE1B,CACD,eAAe8e,EAAe,CAC1B,GAAIA,EAAc,QAAUA,EAAc,SAAWA,EAAc,SAAWA,EAAc,SACxF,OAEJ,MAAMyI,EAAU,KAAK,aACrB,IAAIC,EAAY,KAChB,MAAMC,EAAY,MAAM,KAAK,KAAK,sBAAsB,WAAW,iBAAiB,YAAY,CAAC,EACjG,GAAIA,EAAU,SAAW,EACrB,OAEJ,MAAMC,EAAeH,EAAUE,EAAU,QAAQF,CAAO,EAAI,GAC5D,GAAIzI,EAAc,MAAQ,YACtB0I,EAAYC,EAAUC,EAAe,CAAC,GAAK,KAAK,gBAE3C5I,EAAc,MAAQ,aAC3B0I,EAAYC,EAAUC,EAAe,CAAC,GAAK,KAAK,gBAE3C5I,EAAc,MAAQ,WAAaA,EAAc,MAAQ,YAAa,CAC3E,KAAK,UAAU,KAAK,OAAO,EAC3B,MACH,CACG0I,IACA,KAAK,UAAUA,CAAS,EACxB1I,EAAc,QAAQ,EAAI,EAEjC,CACD,UAAUhoB,EAAO,CACb,MAAMgoB,EAAgBhoB,EACtB,GAAI6wB,EAAAA,GAAsB,GAAI,CAAC,KAAK,UAAY7I,EAAc,QAAUA,EAAc,SAClFA,EAAc,SAGlB,OAAQA,EAAc,IAAG,CACrB,IAAK,QACL,IAAK,IACD,KAAK,4BAA2B,EAChCA,EAAc,QAAQ,EAAI,EAC1B,MACJ,IAAK,YACL,IAAK,aACL,IAAK,UACL,IAAK,YACD,KAAK,eAAeA,CAAa,EACjC,MACJ,QAEQA,EAAc,IAAI,SAAW,GAC7B,KAAK,oBAAoB,CAAC,EAAE,iBAAgB,EAEhD,KACP,CACJ,CACD,kBAAkB8I,EAAW,CACzB,KAAK,QAAQ,UAAU,OAAO,uBAAwBA,CAAS,EAC/D,KAAK,sBAAsB,QAAQ,UAAU,OAAO,uBAAwBA,CAAS,EACjF,KAAK,yBAA2BA,IAChC,KAAK,uBAAyBA,EAC9B,KAAK,oBAAmB,EAE/B,CACD,aAAa3rB,EAAQ,CACjB,KAAK,kBAAkB,EAAK,EAC5B,KAAK,WAAW,kBAAkB,IAAI,CACzC,CACD,YAAYnF,EAAO,CACf,MAAM+wB,EAAgB9K,GAAqC,0BAA0BjmB,CAAK,EAC1F,KAAK,kBAAkB+wB,CAAa,EACpC,MAAMrsB,EAAc,KAAK,sBAAsB,qBAAqB1E,CAAK,EACrE0E,aAAuBge,EACvB,KAAK,WAAW,kBAAkBhe,CAAW,EAG7C,KAAK,WAAW,kBAAkB,IAAI,EAE1C,MAAMwjB,EAAY,KAAK,QAAQ,sBAAqB,EAChD,CAAC,KAAK,wBAA0BA,GAAaA,EAAU,SAAQ,IAC/D,KAAK,uBAAyB,GAErC,CACD,2BAA4B,CACpB,KAAK,0BAA4B,KAAK,kBACjC,KAAK,yBAAyB,YAAY,KAAK,iBAAiB,QAAS,KAAK,UAAU,CAEpG,CACD,OAAQ,CACJ,OAAO,KAAK,aACf,CACD,YAAa,CACT,GAAI,KAAKoG,GACL,OAAO,KAAKA,GAEhB,MAAMrtB,EAAO,KAAK,cAAc,aAAa,KAAK,aAAa,EAC/D,OAAI,KAAK,cAAc,OAASwuB,GAA6B,OAClD,KAAK,cAAc,YAAY,KAAK,aAAa,EAAIlrB,GAAWH,GAAU,cAAc,EAC3F,gBAEJnD,GAAQ,KAAK,cAAc,OAASwuB,GAA6B,WAC1DlrB,GAAWH,GAAU,iBAAkB,CAAE,IAAKnD,EAAK,sBAAuB,CAAA,CAAE,EAEnF,KAAK,cAAc,sBAAsBguB,GAClC,KAAK,cAAc,WAAW,aAAY,EAE9C,EACV,CACD,oBAAqB,CACb,KAAK,YACL,aAAa,KAAK,UAAU,EAEhCzrB,GAA8B,qBAAoB,CACrD,CACD,sBAAuB,CACf,KAAK,YACL,aAAa,KAAK,UAAU,EAEhC,KAAK,WAAa,OAAO,WAAW,KAAK,UAAU,KAAK,IAAI,EAAG,GAAG,CACrE,CACD,UAAUwtB,EAAO,MAAO,CACpBxtB,GAA8B,qBAAoB,EAClD,MAAMvC,EAAO,KAAK,WAAW,KAAI,EACjC,GAAI,CAACA,EACD,OAEJ,MAAMgwB,EAAe,KAAK,cAAc,YAAc,KAAK,cAAc,sBAAsBhC,GAC3F,KAAK,cAAc,WAAW,aAAc,EAC5C,OACJhuB,EAAK,WAAW,eAAe,mBAAmB,CAAE,KAAAA,EAAM,aAAAgwB,GAAgBD,CAAI,CACjF,CACD,cAAe,CACX,MAAM5gB,EAAS,KAAK,QAAQ,cAC5B,GAAI,CAACA,EACD,OAAO,KAEX,IAAI8gB,EAAe9gB,EAAO,WAC1B,KAAO8gB,GAAc,CACjB,MAAMC,EAAe,KAAK,WAAW,iBAAiB,IAAID,CAAY,EACtE,GAAIC,EACA,OAAOA,EAEXD,EAAeA,EAAa,WAC/B,CACD,OAAO,IACV,CACD,yBAAyBE,EAAoBC,EAAiB,CAC1D,GAAI,CAAC,KAAK,WACN,OAAO,KAEX,GAAI,OAASA,EACT,OAAO,KAENA,IACDA,EAAkB,MAEtB,IAAIC,EAAiB,KACrB,MAAMC,EAAcH,EAAqB,KAAK,YAAW,EAAK,KAAK,kBACnE,GAAIG,EACAD,EAAiBC,EAAY,yBAAyBH,EAAoBC,CAAe,MAExF,CACD,MAAMG,EAAcJ,EAAqB,KAAK,aAAY,EAAK,KAAK,cAChEI,IACAF,EAAiBE,EAAY,yBAAyBJ,EAAoBC,CAAe,EAEhG,CACD,OAAOC,CACV,CACD,aAAc,CACV,MAAMlhB,EAAS,KAAK,QAAQ,cAC5B,GAAI,CAACA,EACD,OAAO,KAEX,IAAI8gB,EAAe9gB,EAAO,UAC1B,KAAO8gB,GAAc,CACjB,MAAMC,EAAe,KAAK,WAAW,iBAAiB,IAAID,CAAY,EACtE,GAAIC,EACA,OAAOA,EAEXD,EAAeA,EAAa,eAC/B,CACD,OAAO,IACV,CACD,aAAc,CACV,IAAIO,EAAa,KAAK,QACtB,GACIA,EAAaA,EAAW,kBACnBA,GAAc,CAAC,KAAK,WAAW,iBAAiB,IAAIA,CAAU,GACvE,GAAIA,EACA,OAAO,KAAK,WAAW,iBAAiB,IAAIA,CAAU,CAG7D,CACD,iBAAkB,CACd,IAAIA,EAAa,KAAK,QACtB,GACIA,EAAaA,EAAW,sBACnBA,GAAc,CAAC,KAAK,WAAW,iBAAiB,IAAIA,CAAU,GACvE,GAAIA,EACA,OAAO,KAAK,WAAW,iBAAiB,IAAIA,CAAU,CAG7D,CACD,eAAezxB,EAAO,CAClBA,EAAM,KAAK,UACX,MAAMyuB,EAAO,KAAK,cAAc,WAChC,GAAI,CAACA,GAAQ,CAACA,EAAK,MAAM,OAASA,EAAK,eAAiB,OACpD,OAEJ,MAAMiD,EAAQC,GAA8B,mBAAmBlD,EAAK,MAAM,MAAM,QAASA,EAAK,MAAM,MAAM,UAAY,CAAC,EACvH,KAAK,WAAW,gBAAgB,KAAMA,EAAK,aAAciD,CAAK,CACjE,CACD,iBAAiBE,EAAM,CACnB,MAAMnD,EAAO,KAAK,cAAc,WAC5BA,EACAA,EAAK,OAAOmD,CAAI,EAGhB,KAAK,cAAc,OAAOA,CAAI,EAElC,KAAK,uBAAsB,EAC3B,KAAK,iBAAgB,CACxB,CACD,oBAAoBnD,EAAM,CACtB,IAAIoD,EAAa,EACbC,EAAiB,EACjBC,EAAa,EACbC,EAAgB,EAChBC,EAAe,EACnB,KAAK,aAAe,EACpB,MAAMhR,EAASC,EAAyB,SAAQ,EAAG,cAAc,oBAAoB,EAAE,MACvF,UAAWgR,KAAYzD,EAAK,UAAW,CACnC,IAAI0D,EACJ,OAAQD,EAAQ,CACZ,IAAK,YACDC,EAAsB,KAAK,mBAAmB1D,EAAK,MAAMoD,GAAY,CAAC,EACtE,MACJ,IAAK,gBACDM,EAAsB,KAAK,4BAA4B1D,EAAK,iBAAiBqD,GAAgB,CAAC,EAC9F,MACJ,IAAK,YACDK,EAAsB,KAAK,mBAAmB1D,EAAK,OAAOsD,GAAY,CAAC,EACvE,MACJ,IAAK,eACDI,EAAsB,KAAK,sBAAsB1D,EAAK,SAASuD,GAAe,CAAC,EAC/E,MACJ,IAAK,YACDG,EAAsB,KAAK,qBAAqB1D,EAAK,mBAAmBwD,GAAc,CAAC,EACvF,KACP,CACD,GAAIE,EAAqB,CACrB,KAAKhE,GAAyB,QAAQgE,CAAmB,EACzD,MAAMC,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,YAAY,OAAQ,uBAAuB,EAAE,YAAcnR,EAAO,OAAO,KAAK,YAAY,EACvGmR,EAAa,MAAM,YAAc,GAAG,KAAK,YAAY,KACrDA,EAAa,OAAO,GAAG,EACvB,KAAKhE,GAA8B,QAAQgE,CAAY,EACvD,KAAK,cACR,CACJ,CACG,KAAK,aAAa,SAAW,GAE7B,KAAK,eAET,IAAIC,EAAkB,EACtB,UAAWnpB,KAAW,KAAKilB,GAAyB,SAAU,CAC1D,MAAMmE,EAAgB,SAAS,cAAc,MAAM,EACnDA,EAAc,UAAU,IAAI,uBAAuB,EACnDA,EAAc,aAAa,OAAQ,QAAQ,EAC3CA,EAAc,YAAcrR,EAAO,OAAOoR,CAAe,EACzDnpB,EAAQ,QAAQopB,CAAa,EAC7BppB,EAAQ,MAAM,YAAc,GAAGmpB,CAAe,KAC9CA,GACH,CACJ,CACD,mBAAmBE,EAAO,CAGtB,GADgB,CAACA,EAAM,MAAQ,CAACA,EAAM,KAAK,SAAS,GAAG,GAAKA,EAAM,OAAS,QAEvE,OAEJ,IAAIC,EAAc,GACdC,EAAY,GACZC,EACJ,OAAQH,EAAM,OAAM,CAChB,KAAKI,GAAoB,aACzB,KAAKA,GAAoB,aAAc,CACnCF,EAAY,UAAUF,EAAM,IAAI,IAChC,KACH,CACD,KAAKI,GAAoB,WAAY,CACjCH,EAAc,SACdC,EAAYF,EAAM,KACdA,EAAM,eACNG,EAAmB,KAAK,qBAAqB,KAAK,KAAMH,CAAK,GAEjE,KACH,CACD,KAAKI,GAAoB,YAAa,CAClCF,EAAY,WAAWF,EAAM,IAAI,GACjC,KACH,CACJ,CACD,MAAMK,EAAoB,IAAIC,GAC9B,OAAAD,EAAkB,KAAO,CACrB,YAAAJ,EACA,UAAAC,EACA,iBAAAC,EACA,aAAc,aAC1B,EACeE,CACV,CACD,4BAA4BE,EAAgB,CACxC,GAAI,CAACA,EAAe,KAChB,OAEJ,IAAIJ,EACAI,EAAe,eACfJ,EAAmB,KAAK,qBAAqB,KAAK,KAAMI,CAAc,GAE1E,MAAMC,EAAwB,IAAIF,GAClC,OAAAE,EAAsB,KAAO,CACzB,YAAa,aACb,UAAWD,EAAe,KAC1B,UAAWA,EAAe,KAC1B,iBAAAJ,EACA,aAAc,iBAC1B,EACa,eAAe,KAAKI,EAAe,IAAI,GAEnC,KAAK,8BAA8BA,CAAc,EAEnDC,CACV,CACD,mBAAmBC,EAAO,CACtB,IAAIN,EACAM,EAAM,eACNN,EAAmB,KAAK,qBAAqB,KAAK,KAAMM,CAAK,GAEjE,MAAMC,EAAe,IAAIJ,GACzB,OAAAI,EAAa,KAAO,CAChB,YAAa,SACb,UAAWD,EAAM,KACjB,iBAAAN,EACA,aAAc,OAC1B,EACeO,CACV,CACD,sBAAsBC,EAAU,CAC5B,GAAI,CAACA,EAAS,KACV,OAEJ,IAAIR,EACAQ,EAAS,eACTR,EAAmB,KAAK,qBAAqB,KAAK,KAAMQ,CAAQ,GAEpE,MAAMC,EAAkB,IAAIN,GAC5B,OAAAM,EAAgB,KAAO,CACnB,YAAa,YACb,UAAWD,EAAS,KACpB,iBAAAR,EACA,aAAc,UAC1B,EACeS,CACV,CACD,qBAAqBC,EAAiB,CAClC,GAAI,CAACA,EACD,OAEJ,MAAMC,EAAiB,SAAS,cAAc,KAAK,EACnD,OAAAA,EAAe,YAAc,GAAGD,CAAe,KACxCC,CACV,CACD,MAAM,8BAA8BP,EAAgB,CAChD,MAAM5vB,EAAY,MAAM4vB,EAAe,oBAAoB,KAAK,cAAc,OAAO,EAAE,EACvF,GAAI,CAAC5vB,EACD,OAEJ,MAAMowB,EAAmB,IAAIC,GAC7BD,EAAiB,KAAO,CACpB,UAAWE,GAA6DtwB,EAAU,aAAa,EAC/F,UAAW4vB,EAAe,KAC1B,qBAAsB9yB,GAAS,CAC3BA,EAAM,eAAc,EACfuD,EAAc,SAAQ,EAAG,oBAAoBL,EAAU,cAAe,GAAM,EAAI,EAChFA,EAAU,cAAc,gBAChC,CACb,EACQowB,EAAiB,iBAAiB,uBAAwB,SAAY,CAClE,MAAMG,EAAU,MAAMvwB,EAAU,0BAC5BuwB,GACAH,EAAiB,kCAAkCG,CAAO,CAE1E,CAAS,EACD,KAAKtF,GAAyB,QAAQmF,CAAgB,CACzD,CACD,wBAAyB,CACrB,KAAKnF,GAAyB,iBAC9B,KAAKC,GAA8B,iBAC/B,KAAK,cAAc,YAAc,KAAK,cAAc,sBAAsBa,IAC1E,KAAK,oBAAoB,KAAK,cAAc,UAAU,EAE1D,KAAKf,GAAkB,MAAM,YAAc,GAAG,KAAK,YAAY,IAClE,CACD,oBAAoBvnB,EAAc,CAC9B,OAAI,KAAK,cAAc,YAAY,KAAK,aAAa,EAG1C,CAACiE,EAA2B,EAAG,oBAAoBjE,CAAY,EAEnE,EACV,CACD,qBAAsB,CAClB,IAAI+sB,EAAa,KACjB,GACIA,EAAaA,EAAW,oBACnBA,GAAc,CAACA,EAAW,UACnC,GAAI,CAACA,EAED,IADAA,EAAa,KAAK,eACXA,GAAc,CAACA,EAAW,UAC7BA,EAAaA,EAAW,cAGhC,OAAQA,GAAcA,EAAW,SAAYA,EAAa,IAC7D,CACD,yBAA0B,CACtB,IAAIA,EAAa,KACjB,GACIA,EAAaA,EAAW,wBACnBA,GAAc,CAACA,EAAW,UACnC,GAAI,CAACA,EAED,IADAA,EAAa,KAAK,cACXA,GAAc,CAACA,EAAW,UAC7BA,EAAaA,EAAW,kBAGhC,OAAQA,GAAcA,EAAW,SAAYA,EAAa,IAC7D,CACD,cAAcC,EAAmB,CAC7B,KAAK,WAAW,cAAc,KAAMA,CAAiB,CACxD,CACD,mBAAmBA,EAAmB,CAClC,GAAI,CAACA,EAAkB,SAAS,KAAK,WAAW,IAAI,EAChD,OAEJ,IAAI/iB,EAAQ,KAAK,sBAAsB,WAAU,EACjD,KAAOA,GACCA,IAAU+iB,GAAqB/iB,aAAiB8R,GAChD9R,EAAM,8BAA6B,EAEvCA,EAAQA,EAAM,wBAAwB,GAA4B,KAAuB,EAAI,CAEpG,CACD,OAAOgjB,EAAM,CACT,MAAMlF,EAAa,KAAK,aAIxB,GAHA,KAAK,gBAAgB,YAAcA,EACnC,KAAK,aAAa,UAAU,OAAO,SAAUA,EAAW,SAAW,CAAC,EACpE,KAAK,oBAAmB,EACpBkF,EACA,KAAK,WAAU,MAEd,CACD,IAAIhjB,EAAQ,KAAK,sBAAsB,WAAU,EACjD,KAAOA,GAASA,aAAiB8R,GAC7B9R,EAAM,cAAc,KAAK,qBAAqBA,EAAM,QAAQ,CAAC,EAC7DA,EACIA,EAAM,wBAAwB,GAA4B,KAAuB,EAAI,CAEhG,CACJ,CACD,aAAa5Q,EAAO,CACZA,GACAA,EAAM,QAAO,EAEb,MAAK,eAGT,KAAK,aAAe,GACpB,KAAK,WAAU,EAClB,CACD,YAAa,CACT,KAAK,WAAW,kBAAkB,IAAI,EACtC,KAAK,2BAA6B,EAClC,KAAK,sBAAsB,iBAC3B,MAAMwF,EAAQ,KAAK,cACnB,IAAIquB,EAAQ,EACZ,MAAMnxB,EAAa8C,EAAM,oBACnBsuB,EAAgB9F,GAAyBtrB,EAAW,OAAS,KAAK,wBACxE,UAAWgO,KAAYhO,EAAY,CAC/B,GAAI,CAAC,KAAK,cAAgBmxB,GAASC,EAC/B,MAEJD,IACA,MAAM7Q,EAActS,EAAS,sBAAqB,EAAG,OAAS,EACxDuS,EAAY,KAAK,oBAAoBvS,EAAS,IAAI,EAClDwS,EAAa,KAAK,qBAAqBxS,CAAQ,EACrD,GAAIlL,EAAM,YAAcA,EAAM,WAAW,YAAa,GAAIyd,EACtD,SAEJ,MAAM7C,EAAO,IAAIsC,EAAyB,CACtC,WAAY,KAAK,WACjB,QAAS,KACT,cAAe,KAAK,cACpB,SAAAhS,EACA,YAAAsS,EACA,UAAAC,EACA,WAAAC,EACA,YAAa,EAC7B,CAAa,EACD9C,EAAK,kBAAkB,KAAK,cAAc,EAC1CA,EAAK,yBAAyB,KAAK,qBAAqB,EACxD,KAAK,sBAAsB,YAAYA,CAAI,CAC9C,CACGyT,EAAQnxB,EAAW,QACnB,KAAK,cAAc,UAAU,OAAO,QAAQ,EAC5C,KAAK,cAAc,YAAc6B,GAAWH,GAAU,uBAAwB,CAAE,IAAK1B,EAAW,OAASmxB,CAAO,CAAA,GAGhH,KAAK,cAAc,UAAU,IAAI,QAAQ,CAEhD,CACD,qBAAqBnjB,EAAU,CAC3B,OAAO,KAAK,cAAc,cAAcA,CAAQ,IAAM,YACzD,CACD,cAAe,CACX,IAAIqjB,EAAmB,GACvB,KAAK,aAAY,EACjB,UAAWnjB,KAAS,KAAK,sBAAsB,YAAW,EAAG,WACzD,GAAIA,aAAiB8R,EAA0B,CAC3C,MAAMsR,EAAkBpjB,EAAM,eAC9BmjB,EAAmBA,GAAoBC,CAC1C,CAEL,MAAMvlB,EAAQ,KAAK,WAAW,YAAW,EACnCwlB,EAAW,CAACF,GAAoBtlB,IAAU,MAAQ,CAACA,EAAM,KAAK,KAAK,QAAQ,gBAAiB,CAAA,EAClG,YAAK,iBAAmBwlB,EACxB,KAAK,QAAQ,UAAU,OAAO,SAAUA,CAAQ,EAC5C,CAACA,GAAY,KAAK,cAAc,YAChC,KAAK,uBAAsB,EAExB,CAACA,CACX,CACD,UAAW,CACP,OAAO,KAAK,gBACf,CACD,qBAAsB,CAClB,MAAMxF,EAAO,KAAK,cAAc,WAChC,GAAI,CAACA,GAAQ,EAAEA,aAAgBQ,IAC3B,OAEJ,MAAMiF,EAA0B,KAAK,cAAc,qBAAqBzF,CAAI,EACtE0F,EAAoB,IAAI,MAAM1F,EAAK,UAAU,MAAM,EAAE,KAAK,EAAK,EACrE,UAAW2F,KAAiBF,EACxBC,EAAkBC,CAAa,EAAI,GAEvC,GAAI,KAAK,WAAW,eAChB,OAEJ,MAAMC,EAAWpG,EAAuB,gBAAgBQ,EAAK,UAAW0F,EAAmB,KAAK,sBAAsB,EACtH,KAAK,gBAAgB,iBACrB,KAAK,gBAAgB,YAAYE,CAAQ,EACzC,KAAK,uBAAsB,CAC9B,CACD,OAAO,mCAAmCnrB,EAAS,CAC/C,OAAO+kB,EAAuBI,GAA0B,IAAInlB,CAAO,CACtE,CACD,OAAO,gBAAgBorB,EAAWH,EAAmBI,EAAwB,CACzE,MAAMF,EAAW,SAAS,yBAC1B,SAAW,CAACnjB,EAAGsjB,CAAQ,IAAKF,EAAU,QAAO,EAAI,CACzCpjB,GACAwB,EAA2B2hB,EAAU,IAAI,EAE7C,MAAMI,EAAkB,SAAS,cAAc,MAAM,EACrDA,EAAgB,UAAU,IAAI,iBAAiB,EAC/CA,EAAgB,UAAU,OAAO,mBAAoBN,EAAkBjjB,CAAC,CAAC,EACrEsjB,EAAS,aACTvG,EAAuBI,GAA0B,IAAIoG,EAAiBD,EAAS,WAAW,EAE9FD,EAAuB,IAAIE,EAAiBvjB,CAAC,EAC7CujB,EAAgB,YAAcH,EAAUpjB,CAAC,EAAE,KAC3CmjB,EAAS,OAAOI,CAAe,CAClC,CACD,OAAOJ,CACV,CACD,wBAAyB,CACrB,MAAMC,EAAY,KAAK,gBAAgB,uBAAuB,iBAAiB,EACzE7lB,EAAQ,KAAK,WAAW,YAAW,EACzC,QAASyC,EAAI,EAAGA,EAAIojB,EAAU,OAAQ,EAAEpjB,EAAG,CACvC,MAAMwjB,EAAwBjmB,IAAU,MAAQA,EAAM,KAAK6lB,EAAUpjB,CAAC,EAAE,aAAe,EAAE,EACzFojB,EAAUpjB,CAAC,EAAE,UAAU,OAAO,eAAgBwjB,CAAqB,CACtE,CACJ,CACD,oBAAoBhV,EAAQ,KAAK,sBAAsB,YAAW,EAAG,aAAc,CAC/E,MAAMhP,EAAW,KAAK,cAAc,iBAAiBgP,CAAK,EACpDU,EAAO,IAAIsC,EAAyB,CACtC,WAAY,KAAK,WACjB,QAAS,KACT,cAAe,KAAK,cACpB,SAAAhS,EACA,YAAa,GACb,UAAW,GACX,WAAY,GACZ,YAAa,EACzB,CAAS,EACD,YAAK,sBAAsB,YAAY0P,EAAM1P,EAAS,KAAK,EACpD0P,CACV,CACD,2BAA4B,CACxB,KAAK,uBAAyB,KAAK,WAAW,eAC9C,KAAK,uBAAyB,EACjC,CACD,sBAAsBpgB,EAAO,CAazB,GAAI,CAAC,KAAK,UAAY,KAAK,QAAQ,aAAc,GAAI,KAAK,wBAA0B,KAAK,uBACrF,OAEJ,MAAM0nB,EAAS1nB,EAAM,OACrB,GAAI0nB,EAAO,UAAU,SAAS,QAAQ,GAAK,KAAK,QAAQ,UAAU,SAAS,WAAW,GAClFA,EAAO,6BAA6B,oBAAoB,EAAG,CAC3D1nB,EAAM,QAAO,EACb,MACH,CACD,MAAM20B,EAAaC,GAAgC50B,CAAK,EAClD0E,EAAciwB,GAAchS,GAA2B,6BAA6BgS,CAAU,EAChGjwB,GAAeA,aAAuBge,EACtC,KAAK,oBAAoBhe,EAAY,SAAS,MAAQ,CAAC,EAAE,mBAEpDgjB,EAAO,UAAU,SAAS,oBAAoB,GAAKA,EAAO,UAAU,SAAS,yBAAyB,EAC3G,KAAK,oBAAoB,CAAC,EAAE,iBAAgB,EAG5C,KAAK,sBAAsB,mBAE/B1nB,EAAM,QAAQ,EAAI,CACrB,CACD,qBAAqB60B,EAAO70B,EAAO,CAC/B,MAAMkJ,EAAUlJ,EAAM,cACtB,GAAI+lB,GAAyB7c,CAAO,EAChC,OAEJ,GAAI+c,GAAqC,0BAA0BjmB,CAAK,GAAK,KAAK,UAAW,CACzF,MAAMiwB,EAAW4E,EAAM,cACvB,GAAI,CAAC5E,EAAU,CACXjwB,EAAM,QAAQ,EAAI,EAClB,MACH,CACD,MAAMgF,EAAaC,GAAiD,SAAU,EAAC,wBAAwBgrB,CAAQ,EAC3GjrB,GACKE,GAAuBF,CAAU,EAE1ChF,EAAM,QAAQ,EAAI,EAClB,MACH,CACD,GAAI,CAAC,KAAK,SACN,OAEJ,MAAM80B,EAAS,IAAIC,GAAwB,KAAK,sBAAsB,KAAK,KAAMF,CAAK,EAAG,KAAK,sBAAsB,KAAK,KAAM3rB,CAAO,EAAG,OAAW,KAAK,wBAAwB,KAAK,IAAI,CAAC,EAC3L8rB,GAA+B,aAAa9rB,EAAS4rB,CAAM,EAC3D,MAAM5M,EAAYhf,EAAQ,wBACtBgf,GACAA,EAAU,kBAAkBhf,CAAO,EAEvC,KAAK,WAAW,gBAAgB,EAAI,EACTA,EAAQ,6BAA6B,OAAO,EACpD,UAAU,IAAI,eAAe,EAChDlJ,EAAM,QAAQ,EAAI,CACrB,CACD,qBAAqBkJ,EAAS,CAC1B,KAAK,WAAW,gBAAgB,EAAK,EACVA,EAAQ,6BAA6B,OAAO,EACpD,UAAU,OAAO,eAAe,CACtD,CACD,sBAAsBA,EAAS,CAC3B,KAAK,qBAAqBA,CAAO,EAGjC,KAAK,oBAAmB,EACxB,MAAMgf,EAAYhf,EAAQ,wBACtBgf,GACAA,EAAU,SAAShf,EAAS,CAAC,CAEpC,CACD,yBAA0B,CACtB,MAAO,EACV,CACD,MAAM,sBAAsB2rB,EAAO3rB,EAAS+rB,EAAYC,EAAa5T,EAAU6T,EAAgB,CAC3F,KAAK,WAAW,gBAAgB,EAAK,EACrC,KAAK,qBAAqBjsB,CAAO,EAC7B+rB,IACAA,EAAaA,EAAW,QAG5B,KAAK,WAAW,iBAAiB,EAAI,EACrC,MAAMxtB,EAAW,KAAK,WAAW,SAAQ,EACzC,GAAIA,GAAYotB,EAAM,aAAc,CAChC,MAAMnD,EAAQmD,EAAM,MACpB,IAAI7Q,EAAU,GACV6Q,aAAiBO,GACjBpR,EAAU,MAAMvc,EAAS,sBAAsBotB,EAAM,aAAcnD,EAAOuD,CAAU,EAE/EJ,aAAiBQ,GACtBrR,EAAU,MAAMvc,EAAS,gBAAgBotB,EAAM,aAAcnD,EAAOuD,CAAU,EAEzEJ,aAAiBS,GACtBtR,EAAU,MAAMvc,EAAS,aAAaotB,EAAM,aAAcnD,EAAOuD,CAAU,EAG3EjR,EAAU,MAAMvc,EAAS,aAAaotB,EAAM,aAAcnD,EAAOuD,CAAU,EAE3EjR,IACA,KAAK,cAAc,wBACnB,KAAK,WAAW,cAAc,IAAI,GAEtC,KAAK,WAAW,iBAAiB,EAAK,EACtC,KAAK,iCAAgC,CACxC,CACJ,CACD,kCAAmC,CAClC,CACD,oBAAoBhkB,EAAO,CACvB,MAAM0nB,EAAS1nB,EAAM,OACrB,GAAK0nB,EAGL,IAAIzB,GAAqC,0BAA0BjmB,CAAK,GAAK,KAAK,WAC9E0nB,EAAO,UAAU,SAAS,iBAAiB,EAAG,CAC9C,MAAM6N,EAAgB,KAAK,uBAAuB,IAAI7N,CAAM,EACxD6N,GACA,KAAK,yBAAyBA,EAAe,EAAI,EAErDv1B,EAAM,QAAQ,EAAI,EAClB,MACH,CACG,KAAK,QAAQ,iBAGjB,KAAK,4BAA2B,EAChCA,EAAM,QAAQ,EAAI,GACrB,CACD,uBAAuBA,EAAO,CAE1B,GAAI,CADWA,EAAM,OAEjB,OAEJ,MAAMmmB,EAAc,IAAIC,GAA2BpmB,CAAK,EACxDmmB,EAAY,iBAAgB,EAAG,WAAW5hB,GAAWH,GAAU,YAAY,EAAG,IAAM,CAChF,MAAMoxB,EAAe,KAAK,aAC1BjQ,EAAyD,SAASiQ,CAAY,EAC9ErvB,EAAiB,gBAAgB,GAC7C,EAAW,CAAE,aAAc,eAAe,CAAE,EACpCggB,EAAY,iBAAgB,EAAG,WAAW5hB,GAAWH,GAAU,QAAQ,EAAG,IAAM,CAC5E,MAAMoiB,EAAW1C,GAAkB,wBAAwB,IAAI,EAAE,SACjEyB,EAAyD,SAASiB,CAAQ,EAC1ErgB,EAAiB,gBAAgB,EAC7C,EAAW,CAAE,aAAc,WAAW,CAAE,EAChCggB,EAAY,iBAAgB,EAAG,WAAW5hB,GAAWH,GAAU,mBAAmB,EAAG,IAAM,CACvF,MAAMqiB,EAAqB3C,GAAkB,wBAAwB,IAAI,EAAE,mBAC3EyB,EAAyD,SAASkB,CAAkB,EACpFtgB,EAAiB,gBAAgB,EAC7C,EAAW,CAAE,aAAc,uBAAuB,CAAE,EAE5CggB,EAAY,iBAAgB,EAAG,WAAW5hB,GAAWH,GAAU,iBAAiB,EAAG,SAAY,CAC3F,MAAMsiB,EAAa,MAAM,KAAK,WAAW,oBAAmB,EAC5DnB,EAAyD,SAASmB,CAAU,EAC5EvgB,EAAiB,gBAAgB,EAC7C,EAAW,CAAE,aAAc,sBAAsB,CAAE,EACtCggB,EAAY,MACpB,CACD,yBAAyBzG,EAAO+V,EAAO,CACnC,MAAMhuB,EAAW,KAAK,WAAW,SAAQ,EACzC,GAAI,CAACA,EACD,OAEJ,MAAMgnB,EAAO,KAAK,cAAc,WAChC,GAAI,CAACA,GAAQA,EAAK,eAAiB,OAC/B,OAEJ,MAAMkB,EAASloB,EAAS,sBAAsBgnB,EAAK,YAAY,EAC/D,GAAI,CAACkB,EACD,OAEJ,MAAM+F,EAAc,IAAIlF,GAAyBb,EAAQlB,EAAK,mBAAmB/O,CAAK,EAAG+O,EAAK,qBAAqB/O,CAAK,CAAC,EACzHuO,EAAuB,qBAAqByH,EAAaD,CAAK,CACjE,CACD,OAAO,qBAAqBC,EAAaD,EAAO,CAC5C,MAAMzwB,EAAaC,GAAiD,SAAU,EAAC,wBAAwBywB,CAAW,EAC9G1wB,GACKE,GAAuBF,EAAY,CAACywB,CAAK,CAErD,CACD,6BAA8B,CAC1B,GAAK,KAAK,SAGV,IAAI,CAAC,KAAK,cAAc,WAAY,CAChC,KAAK,uBAAuB,SAAS,EACrC,MACH,CACD,KAAK,qBAAoB,EAC5B,CACD,sBAAuB,CACnB,MAAMvsB,EAAU,KAAK,gBACrB,GAAI6c,GAAyB7c,CAAO,EAChC,OAEJA,EAAQ,uBAAuB,EAAK,EAEpC,MAAMysB,EAAczsB,EAAQ,YACxBysB,IAAgB,OAChBzsB,EAAQ,YAAcysB,EAAY,QAAQ,OAAQ,GAAG,EAAE,QAE3D,MAAMb,EAAS,IAAIC,GAAwB,KAAK,yBAAyB,KAAK,IAAI,EAAG,KAAK,yBAAyB,KAAK,IAAI,CAAC,EAC7HC,GAA+B,aAAa,KAAK,gBAAiBF,CAAM,EACxE,MAAM5M,EAAYhf,EAAQ,wBACtBgf,GACAA,EAAU,kBAAkBhf,CAAO,EAEvC,KAAK,WAAW,gBAAgB,EAAI,EAChCA,EAAQ,UAAU,SAAS,iBAAiB,GAC5C,KAAK,yBAAyB,EAAG,EAAK,CAE7C,CACD,uBAAuB4f,EAAe,CAElC,GADA,KAAK,oBAAmB,EACpB,EAACA,EAGL,GAAIA,IAAkB,UAAW,CAE7B,IAAI8M,EADe,KAAK,sBAAsB,WAAU,EAExD,KAAOA,GAAgBA,EAAa,aAAa,CAC7C,MAAM7M,EAAU6M,EAAa,YAC7BA,EAAe7M,aAAmBrG,EAA2BqG,EAAU,IAC1E,CACI6M,EAIDA,EAAa,iBAAgB,EAH7B,KAAK,sBAAsB,kBAKlC,KACI,CACD,MAAMC,EAAkB,KAAK,0BAC7B,GAAI,CAACA,EACD,OAEJA,EAAgB,sBAAsB,kBACzC,CACJ,CACD,yBAAyB3sB,EAAS+rB,EAAYa,EAAY7c,EAAS6P,EAAe,CAK9E,GAJA,KAAK,qBAAoB,EACrBmM,IACAA,EAAaA,EAAW,QAExBA,IAAea,EAAY,CAE3B,KAAK,gBAAgB,YAAcb,EACnC,KAAK,uBAAuBnM,CAAa,EACzC,MACH,CACD,MAAM2F,EAAO,KAAK,cAAc,WAChC,GAAI,CAACA,EACD,OAEJ,SAASsH,GAAsB,CAC3B,KAAK,WAAW,iBAAiB,EAAK,EACtC,KAAK,uBAAuBjN,CAAa,EACzC,KAAK,gCAA+B,CACvC,CAED,KAAK,WAAW,iBAAiB,EAAI,EAChC,KAAK,cAAc2F,EAAMwG,CAAU,EAAE,KAAKc,EAAoB,KAAK,IAAI,CAAC,CAChF,CACD,cAActH,EAAMwG,EAAY,CAC5B,SAASe,EAAmBvH,EAAMzK,EAAS,CACvC,OAAKA,EAGE,KAAK,cAAc,2BAA2ByK,CAAI,EAAE,KAAKwH,EAAmB,KAAK,KAAMxH,CAAI,CAAC,EAFxF,QAAQ,SAGtB,CACD,SAASwH,EAAmBxH,EAAM,CAC9B,MAAMyH,EAAyB,KAAK,cAAc,qBAAqBzH,CAAI,EAAE,OAAS,EACtF,KAAK,sBAAsB,QAAQ,UAAU,OAAO,YAAa,CAACyH,CAAsB,EACxF,KAAK,cAAc,wBACnB,KAAK,WAAW,cAAc,IAAI,CACrC,CACD,GAAI,EAAEzH,aAAgBQ,IAClB,OAAO,QAAQ,UAEnB,MAAMkH,EAAmB1H,EAAK,gBAC9B,OAAK0H,GAGL,KAAK7H,GAAoB,OAClBG,EAAK,gBAAgBwG,CAAU,EAAE,KAAKe,EAAmB,KAAK,KAAMvH,EAAM,EAAQ0H,CAAiB,CAAC,GAHhG,QAAQ,SAItB,CACD,iCAAkC,CACjC,CACD,kBAAmB,CACf,KAAK,mBAAmB,iBACxB,KAAK,mBAAmB,YAAY,KAAK,qBAAqB,KAAK,cAAe,KAAK,WAAW,UAAW,KAAK,cAAc,UAAU,CAAC,CAC9I,CACD,sBAAuB,CACnB,KAAK,WAAW,gBAAgB,EAAK,CACxC,CACD,0BAA2B,CACvB,KAAK,qBAAoB,EAGzB,KAAK,oBAAmB,CAC3B,CAOD,0BAA0B7P,EAAe,CACrC,MAAM6D,EAAc,KAAK,sBAAsB,YAAW,EAC1D,OAAI7D,GAAiB6D,EAAY,aACtBA,EAAY,YAEhBA,EAAY,QAAQ7D,CAAa,CAC3C,CACL,CACO,MAAM8P,WAAoCnI,CAAuB,CACpE,OACA,aACA,aACA,YAAYlL,EAAYxd,EAAe8wB,EAAqBjG,EAAcP,EAAcyG,EAAkB/H,EAAY,CAClH,MAAM9mB,EAAWsb,EAAW,WACtB0L,EAAOQ,GAAyB,gBAAgBxnB,EAAU4uB,CAAmB,EACnF,MAAMtT,EAAYxd,EAAekpB,EAAK,MAAOF,EAAY,KAAM,IAAI,EACnE,KAAK,OAAS,GACd,KAAK,aAAesB,EACpB,KAAK,aAAeO,EACpB,KAAK,mBAAmB,iBACxB,KAAK,mBAAmB,YAAYnC,EAAuB,oBAAoBxmB,EAAU,KAAK,WAAW,UAAW2oB,EAAc,KAAK,mBAAkB,CAAE,CAAC,EACxJkG,GAAoBA,EAAiB,YACrCA,EAAiB,sBAAsBrH,IACvC,KAAK,oBAAoBqH,EAAiB,UAAU,EAExD,KAAK,QAAQ,UAAU,IAAI,eAAe,CAC7C,CACD,oBAAqB,CAEjB,MAAMlnB,EADS,KAAK,aACC,MAAM;AAAA,CAAI,EACzBmnB,EAAWnnB,EAAMA,EAAM,OAAS,CAAC,EACjConB,EAAY,IAAI7E,GAA8B,EAAG,EAAGviB,EAAM,OAAS,EAAGmnB,EAAWA,EAAS,OAAS,CAAC,EAC1G,OAAO,KAAK,aAAa,oBAAoB5E,GAA8B,mBAAmB,EAAG,CAAC,EAAG6E,CAAS,CACjH,CACD,YAAa,CACT,OAAO,KAAK,aAAa,YAAc,GAAK,KAAK,aAAa,cAAgB,EAAI,GAAK;AAAA;AAAA,CAC1F,CACD,IAAI,SAAU,CACV,MAAO,CAAC,KAAK,MAChB,CACD,yBAAyBttB,EAAS+rB,EAAYa,EAAY7c,EAAS6P,EAAe,CAC9E,GAAI,CAAC,KAAK,QAAS,CACf,MAAM,yBAAyB5f,EAAS+rB,EAAYa,EAAY7c,EAAS6P,CAAa,EACtF,MACH,CACD,SAAS2N,EAAYC,EAAS,CAC1B,OAAKA,EAKE,KAAK,cAAc,WAAWA,EAAS,KAAK,cAAc,MAAM,EAClE,KAAKC,EAAiB,KAAK,KAAMD,CAAO,CAAC,GAL1C,KAAK,yBAAwB,EAC7B,KAAK,gCAA+B,EAC7B,QAAQ,UAItB,CACD,SAASC,EAAiBD,EAAS,CAC/B,MAAME,EAAiC,KAAK,cAAc,qBAAqBF,CAAO,EAAE,OAAS,EACjG,KAAK,WAAWA,CAAO,EAClBE,GACD,KAAK,sBAAsB,QAAQ,UAAU,IAAI,WAAW,EAEhE,KAAK,iBAAgB,EACrB,KAAK,WAAW,iBAAiB,EAAK,EACtC,KAAK,qBAAoB,EACrB,KAAK,QAAQ,eAEb,KAAK,uBAAuB9N,CAAa,EAE7C,KAAK,oBAAmB,EACxB,KAAK,gCAA+B,CACvC,CACGmM,IACAA,EAAaA,EAAW,QAE5B,KAAK,WAAW,iBAAiB,EAAI,EACrC,MAAMxtB,EAAW,KAAK,WAAW,SAAQ,EACnC+e,EAAW,KAAK,WAAU,EAAKyO,EAAa,MAC9CxtB,GACKA,EAAS,QAAQ,KAAK,aAAc+e,EAAU,KAAK,YAAY,EAAE,KAAKiQ,EAAY,KAAK,IAAI,CAAC,CAExG,CACD,0BAA2B,CAEvB,GADA,KAAK,WAAW,iBAAiB,EAAK,EAClC,CAAC,KAAK,QAAS,CACf,MAAM,yBAAwB,EAC9B,MACH,CACD,KAAK,qBAAoB,EACzB,KAAK,WAAW,cAAc,IAAI,CACrC,CACD,WAAWC,EAAS,CAChB,KAAK,QAAQ,UAAU,OAAO,eAAe,EAC7C,KAAK,cAAgBA,EAAQ,MAE7B,KAAK,OAAS,EACjB,CACL,CACO,MAAMG,WAAoC5I,CAAuB,CACpE,YAAYlL,EAAYxd,EAAeC,EAAO+oB,EAAY5nB,EAAcmwB,EAAmB,CACvF,MAAM/T,EAAYxd,EAAeC,EAAO+oB,EAAY,KAAM,KAAM5nB,CAAY,EACvEmwB,GACD,KAAK,QAAQ,UAAU,IAAI,QAAQ,EAEvC,KAAK,gBAAgB,UAAY,2BACpC,CACD,MAAM,cAAcrI,EAAMwG,EAAY,CAC9B,EAAExG,aAAgBsI,KAIlB,CADatI,EAAK,aAAY,EAAG,OAIjC,MAAMA,EAAK,gBAAgBwG,CAAU,GACrC,KAAK,WAAW,aAEvB,CACD,qBAAqB1vB,EAAeqqB,EAAWnB,EAAM,CACjD,OAAIA,EACO,MAAM,qBAAqBlpB,EAAeqqB,EAAWnB,CAAI,EAE7D,SAAS,eAAe,sBAAsB,CACxD,CACL,CACO,MAAMuI,WAAqC/I,CAAuB,CACrE,YAAYlL,EAAYxd,EAAeC,EAAO+oB,EAAY,CACtD,MAAMxL,EAAYxd,EAAeC,EAAO+oB,EAAY,KAAM,IAAI,EAC9D,KAAK,gBAAgB,UAAY,yBACpC,CACL,CACO,MAAM0I,WAA+BhJ,CAAuB,CAC/D,YAAYlL,EAAYxd,EAAeC,EAAO+oB,EAAY2I,EAAQ,CAC9D,MAAMnU,EAAYxd,EAAeC,EAAO+oB,EAAY,KAAM,IAAI,EAC9D,KAAK,gBAAgB,UAAY,0BACjC,KAAK,sBAAsB,QAAQ,UAAU,OAAO,YAAa,CAAC2I,CAAM,CAC3E,CACL,CACO,MAAMC,WAAkClJ,CAAuB,CAClE,YAAYlL,EAAYxd,EAAeC,EAAO+oB,EAAY,CACtD,MAAMxL,EAAYxd,EAAeC,EAAO+oB,EAAY,KAAM,IAAI,EAC9D,KAAK,gBAAgB,UAAY,cACpC,CACD,YAAa,CACT,OAAI,KAAK,cAAc,sBAAsB2B,GAClC,KAAK,cAAc,WAAW,IAAG,EAAG,KAExC,EACV,CACD,cAAczB,EAAMwG,EAAY,CAC5B,SAASgB,EAAmBjS,EAAS,CAC5BA,GAGL,KAAK,WAAW,cAAc,IAAI,CACrC,CAKD,MAJI,EAAEyK,aAAgByB,KAIlB,CADazB,EAAK,IAAG,EAAG,MAEjB,QAAQ,UAEZA,EAAK,WAAWwG,CAAU,EAAE,KAAKgB,EAAmB,KAAK,IAAI,CAAC,CACxE,CACD,oBAAoBvgB,EAAe,CAC/B,MAAO,EACV,CACD,qBAAqB0hB,EAAW,CAC5B,MAAO,EACV,CACD,wBAAyB,CACxB,CACD,qBAAsB,CACd,KAAK,cAAc,sBAAsBlH,KACzC,KAAK,gBAAgB,YAAc,KAAK,cAAc,WAAW,IAAK,EAAC,KAE9E,CACD,WAAY,CACX,CACL,CACO,MAAMmH,WAA8CpJ,CAAuB,CAC9E,oBAAoBvY,EAAe,CAK/B,MAAO,EACV,CACL,4TC/gDO,MAAM4hB,EAAyB,CAClC,iBACA,YAAYC,EAAK,CACb,KAAK,iBAAmBA,CAC3B,CAID,kBAAkBC,EAAa,CAE3B,UAAW9wB,KAAW,KAAK,iBAAiB,YAAW,EACnD,QAAShC,EAAcgC,EAAQ,sBAAsB,WAAY,EAAEhC,EAAaA,EAAcA,EAAY,YACjGA,EAAY,aAGzB,MAAMgC,EAAU,KAAK,iBAAiB,YAAW,EAAG,KAAKA,GAAWA,EAAQ,MAAO,EAAC,kBAAiB,EAAG,SAAS8wB,CAAW,CAAC,EAC7H,GAAI,CAAC9wB,EACD,OAEJA,EAAQ,aAAY,EACpB,MAAMhC,EAAc,KAAK,2BAA2BA,GAAeA,EAAY,WAAa8yB,EAAa9wB,CAAO,EAC5GhC,IACAA,EAAY,QAAUA,EAAY,OAAO,OAAM,EAC/C,KAAK,8BAA8BA,CAAW,EAC9CgC,EAAQ,QAAQ,QAEvB,CACD,6BAA6B+wB,EAAkB,CAC3C,MAAMC,EAAQ,KAAK,iBAAiB,sBAAsBD,CAAgB,EAC1E,GAAI,CAACC,GAASA,EAAM,SAAS,SAAW,EACpC,OAEJ,KAAM,CAAChxB,CAAO,EAAIgxB,EAAM,SACxBhxB,EAAQ,aAAY,EACpBixB,GAAW,iBAAiBD,EAAM,aAAc,CAAA,CACnD,CACD,wBAAwBE,EAAaC,EAAW,CAC5C,MAAMH,EAAQ,KAAK,iBAAiB,sBAAsBG,CAAS,EAC7DnxB,EAAUgxB,GAAO,SAAS,KAAKhxB,GAAWA,EAAQ,eAAiBkxB,CAAW,EAChF,CAAClxB,GAAW,CAACgxB,IAGjBA,EAAM,OAAO,EAAI,EACjBhxB,EAAQ,aAAY,EACpBixB,GAAW,iBAAiBjxB,EAAQ,OAAO,EAC9C,CAID,6BAA6BC,EAAcixB,EAAaC,EAAW,CAC/D,MAAMH,EAAQG,EAAY,KAAK,iBAAiB,sBAAsBA,CAAS,EAAI,OAC7EC,EAAWJ,GAAO,UAAY,KAAK,iBAAiB,cAC1D,GAAI,CAACI,EACD,MAAO,GAEX,UAAWpxB,KAAWoxB,EAAU,CAI5B,GAHIF,GAAelxB,EAAQ,WAAU,IAAOkxB,GAGxC,CAAClxB,EAAQ,MAAO,EAAC,kBAAkBC,CAAY,EAC/C,SAEJ+wB,GAAO,OAAO,EAAI,EAClBhxB,EAAQ,aAAY,EACpB,MAAMhC,EAAc,KAAK,2BAA2BA,GAAeA,EAAY,SAAS,OAASiC,GAAgB,CAACjC,EAAY,WAAY,EAAEgC,CAAO,EACnJ,GAAIhC,EACA,YAAK,8BAA8BA,CAAW,EAC9CgC,EAAQ,QAAQ,QACT,EAEd,CACD,MAAO,EACV,CAKD,0BAA0BqxB,EAAW,CACjC,UAAWrxB,KAAW,KAAK,iBAAiB,YAAW,EAAI,CACvD,MAAMhC,EAAc,KAAK,2BAA2BqzB,EAAWrxB,CAAO,EACtE,GAAIhC,EACA,MAAO,CAAE,YAAAA,EAAa,QAAAgC,EAE7B,CACD,MAAO,CAAE,YAAa,KAAM,QAAS,IAAI,CAC5C,CACD,2BAA2BqxB,EAAWrxB,EAAS,CAC3C,IAAIhC,EAAcgC,EAAQ,sBAAsB,WAAU,EAC1D,KAAOhC,GAAgBA,aAAuBge,GAA2B,CACrE,GAAIqV,EAAUrzB,CAAW,EACrB,OAAOA,EAEXA,EAAcA,EAAY,wBAAwB,GAAO,KAAM,EAAI,CACtE,CACD,OAAO,IACV,CACD,8BAA8BA,EAAa,CACvCizB,GAAW,iBAAiBjzB,EAAY,eAAe,CAC1D,CACL,iICnGM7B,GAAS,IAAI,cACnxSM,MAAMm1B,EAAc,CACvBC,GAAQ,IAAI,IAEZ,oBACA,YAAYC,EAAY,CACpB,GAAI,CAACA,EAAY,CACb,KAAK,oBAAsB,QAAQ,UACnC,MACH,CACD,KAAK,oBAAsB,MAAM,GAAGA,CAAU,2DAA2D,EACpG,KAAKC,GAAYA,EAAS,MAAM,EAChC,KAAMC,GAAS,CAChB,UAAW1nB,KAAY0nB,EAAK,WACxB,KAAKH,GAAM,IAAIvnB,EAAS,KAAMA,CAAQ,CAEtD,CAAS,EACI,OACR,CAMD,OAAO,QAAS,CACZ,MAAMwnB,EAAaG,KAEnB,OAAO,IAAIL,GAAcE,GAAY,MAAQ,EAAE,CAClD,CAMD,gBAAgB11B,EAAM,CAClB,OAAO,KAAKy1B,GAAM,IAAIz1B,CAAI,CAC7B,CACL,sHCaM4B,EAAY,CAId,0BAA2B,gCAK3B,iBAAkB,6FAIlB,qBAAsB,yBAItB,oBAAqB,wBAKrB,eAAgB,yBAIhB,eAAgB,kBAKhB,uBAAwB,oCAMxB,oCAAqC,6FAMrC,wCAAyC,4FAOzC,cAAe,qDAIf,0BAA2B,qCAI3B,kBAAmB,sBAInB,kBAAmB,mBAInB,kBAAmB,sBAInB,MAAO,QAIP,mBAAoB,sCAKpB,YAAa,oBACjB,EACMC,GAAOC,EAA4B,uCAAwCF,CAAS,EACpFG,EAAaC,EAA6B,KAAK,OAAWH,EAAI,EAE9Di0B,GAAqB,IAErBC,GAA4B,EAErBxd,GAAmC,YAG1Cyd,GAA2B,CAC7B,CAAE,KAAM,UAAW,WAAY,CAAC,SAAS,CAAG,EAC5C,CAAE,KAAM,SAAU,WAAY,CAAC,QAAQ,CAAG,EAC1C,CAAE,KAAM,SAAU,WAAY,CAAC,QAAQ,CAAG,EAC1C,CAAE,KAAM,MAAO,WAAY,CAAC,MAAO,UAAU,CAAG,EAChD,CAAE,KAAM,aAAc,WAAY,CAAC,aAAc,iBAAiB,CAAG,EACrE,CAAE,KAAM,UAAW,WAAY,CAAC,UAAW,cAAc,CAAG,EAC5D,CAAE,KAAM,wBAAyB,WAAY,CAAC,uBAAuB,CAAG,EACxE,CAAE,KAAM,qBAAsB,WAAY,CAAC,oBAAoB,CAAG,EAClE,CAAE,KAAM,sBAAuB,WAAY,CAAC,YAAY,CAAG,EAC3D,CAAE,KAAM,kBAAmB,WAAY,CAAC,iBAAiB,CAAG,EAC5D,CAAE,KAAM,gBAAiB,WAAY,CAAC,eAAe,CAAG,EACxD,CAAE,KAAM,cAAe,WAAY,CAAC,aAAa,CAAG,EACpD,CAAE,KAAM,cAAe,WAAY,CAAC,OAAQ,aAAc,YAAa,aAAa,CAAG,CAC3F,EACA,IAAIC,GACG,MAAM3U,WAA0B4U,GAAgCzmB,EAAmB,CAAE,CACxF,mBACA,oBACA,cACA,oBACA,QACA,mBACA,iBACA,gBACA,iBACA,kBACA,iBACA,4BACA,UACA,UACA,qBACA,cACA,eACA,oBACA,4BACA,uBACA,iBACA,cACA,oBACA,iBACA,gBACA,gBACA,cACA,oBACA0mB,GACAC,GACAC,GACAC,GAAuB,IAAI,QAC3B,eACAC,GAAsB,IAAI,IAC1BC,GACAC,GACAC,GACA,OAAO,SAAS3lB,EAAM,CAClB,OAAI,CAACklB,IAA6BllB,GAAM,YACpCklB,GAA4B,IAAI3U,IAE7B2U,EACV,CACD,aAAc,CACV,MAAM,EAAI,EACV,KAAK,eAAe,GAAI,EAAE,EAC1B,KAAK,iBAAiB,CAACU,EAAuB,CAAC,EAC/CjY,EAAyB,SAAQ,EAAG,cAAc,oBAAoB,EAAE,kBAAkB,KAAK,OAAO,KAAK,IAAI,CAAC,EAChH,KAAK,mBAAqB,KAC1B,KAAK,oBAAsB,KAC3B,KAAK,cAAgB,KACrB,KAAK,oBAAsB,KAC3B,KAAK,QAAU,KACf,KAAK,iBAAmB,KACxB,KAAK,gBAAkB,KACvB,KAAK,mBAAqB,KAAK,6BAC/B,KAAK,2BAA6B,IAAI3Z,GACtC,KAAK,iBAAmB,KAAK,eAAe,YAAY,MAAO,0BAA0B,EACzF,KAAK,iBAAiB,YAAchD,EAAWH,EAAU,yBAAyB,EAClF,KAAK,kBAAoB,KAAK,eAAe,YAAY,KAAK,EAC9Dg1B,GAAwB,KAAK,iBAAiB,EAC9C,KAAK,kBAAkB,iBAAiB,UAAW,KAAK,yBAAyB,KAAK,IAAI,EAAG,EAAK,EAClG,KAAK,kBAAkB,iBAAiB,UAAW,KAAK,8BAA8B,KAAK,IAAI,EAAG,EAAK,EACvG,KAAK,kBAAkB,iBAAiB,WAAY,KAAK,8BAA8B,KAAK,IAAI,EAAG,EAAK,EACxG,KAAK,iBAAmB,IAAI,QAC5B,KAAK,4BAA8B,IAAIC,GACvC,KAAK,4BAA4B,iBAAiB,kBAAmF,KAAK,gBAAiB,IAAI,EAC/J,KAAK,UAAY,IAAIC,GAA+BC,GAAwC,EAAI,EAChG,KAAK,UAAY,IAAIjC,GAAyB,IAAI,EAClD,KAAK,qBAAuB,KAC5B,KAAK,cAAgB,GACrB,KAAK,eAAiB,GACtB,KAAK,oBAAsB,KAC3B,KAAK,4BAA8B,GACnC,KAAK,uBAAyB,GAC9B,KAAK,iBAAmB,GACxB,KAAK,eAAe,UAAU,IAAI,aAAa,EAC/C,KAAK,cAAgB,GACrB,KAAK,oBAAsB,KAC3B,KAAK,iBAAmB,GACxBmB,GAA4B,KAC5BvyB,EAAmB,SAAQ,EAAG,wBAAwBsB,EAAsB,KAAK,YAAa,IAAI,EAClG,KAAK,eAAe,iBAAiB,OAAQ,KAAK,cAAc,KAAK,IAAI,CAAC,EAC1E,KAAK,gBAAkB,IAAI2K,GAA2B,GAAG,EACzD,KAAK,cAAgB,KAAK,SAAS,KAAK,IAAI,EAC5C,KAAK,oBAAsB,IAAI5J,GAAoB,KAAK,eAAgBvI,GAAS,CAC7E,MAAM2I,EAAO3I,EAAM,aAAc,EAAC,CAAC,EACnC,OAAI2I,aAAgB,QACTA,EAEJ,IACnB,EAAW,IAAM,KAAK,KAAI,CAAE,EACpB,KAAK,eAAiB,KACtB,MAAM6wB,EAA2BtY,EAAyB,SAAU,EAAC,cAAc,0CAA0C,EAC7HsY,EAAyB,kBAAkBx5B,GAAS,CAChD,MAAMy5B,EAAqBz5B,EAAM,KAAQ,EACrC,EACJmG,EAAiB,yBAAyBszB,CAAU,CAChE,CAAS,EACD,KAAKb,GAAqB,IAAIlwB,GAA+B,KAAK,eAAgB1I,GAAS,CACvF,MAAM05B,EAAc15B,EAAM,aAAc,EAAC,CAAC,EAMpC25B,EAA+B35B,EAAM,aAAc,EAAC,CAAC,EAC3D,GAAI,CAAC05B,GAAe,EAAEA,aAAuB,SACzC,OAAO,KAEX,GAAIC,aAAwC,SAAWA,EAA6B,QAAQ,OAAO,EAAG,CAClG,MAAMjU,EAAO7M,GAAY,IAAI8gB,CAA4B,EACzD,GAAIjU,EACA,YAAKkT,GAAmB,aAAe,oBAChC,CACH,IAAKc,EAAY,YAAa,EAC9B,KAAM,MAAO5wB,GAAY,CACrB,MAAM8wB,EAAe,IAAIC,GAAyDnU,CAAI,EACtF,OAAA5c,EAAQ,eAAe,YAAY8wB,CAAY,EACxC,EACV,CACzB,CAEa,CACD,GAAIJ,EAAyB,IAAK,GAAIE,EAAY,QAAQ,sBAAsB,EAAG,CAC1E,KAAKf,KACN,KAAKA,GAAiBX,GAAc,UAExC,MAAM8B,EAAkBJ,EAAY,YAC9BlC,EAAcsC,GAAmB,KAAKnB,GAAe,gBAAgBmB,CAAe,EAC1F,GAAItC,EACA,YAAKoB,GAAmB,aAAe,4BAChC,CACH,IAAKc,EAAY,YAAa,EAC9B,KAAM,MAAO5wB,GAAY,CACrB,MAAM8wB,EAAe,IAAIG,GAA2DvC,CAAW,EAC/F,OAAA1uB,EAAQ,eAAe,YAAY8wB,CAAY,EAC/CzzB,EAAiB,yBAAyB,GACnC,EACV,CACzB,CAEa,CACD,GAAIuzB,EAAY,QAAQ,kBAAkB,EAAG,CACzC,MAAMM,EAAc/L,EAAuB,mCAAmCyL,CAAW,EACzF,YAAKd,GAAmB,aAAe,oCAChC,CACH,IAAKc,EAAY,YAAa,EAC9B,KAAM,MAAO5wB,GAAY,CACrBA,EAAQ,oBAAoB,EAAI,EAChC,MAAMI,EAAU,SAAS,cAAc,MAAM,EAC7C,OAAAA,EAAQ,YAAc3E,EAAWH,EAAU,YAAa,CAAE,IAAK41B,EAAc,IAAIA,EAAY,CAAC,IAAIA,EAAY,CAAC,IAAIA,EAAY,CAAC,IAAM,SAAS,CAAE,EACjJlxB,EAAQ,eAAe,YAAYI,CAAO,EACnC,EACV,CACrB,CACa,CACD,OAAO,IACnB,CAAS,EACD,KAAK0vB,GAAmB,kBAAkB,EAAI,EAC9C,KAAKA,GAAmB,WAAW,GAAG,EACtC,KAAKA,GAAmB,cAAc,EAAI,EAC1C,KAAKC,GAAwB,IAAInwB,GAA+B,KAAK,eAAgB1I,GAAS,CAC1F,QAAS0tB,EAAI1tB,EAAM,aAAc,EAAC,OAAS,EAAG0tB,GAAK,EAAG,EAAEA,EAAG,CACvD,MAAMxkB,EAAUlJ,EAAM,aAAc,EAAC0tB,CAAC,EAChCuM,EAAO,KAAKnB,GAAqB,IAAI5vB,CAAO,EAC5CgxB,EAAWD,EAAOA,EAAK,SAAQ,EAAK,OAC1C,GAAIC,EACA,MAAO,CACH,IAAKhxB,EAAQ,YAAa,EAC1B,KAAM,MAAOJ,IACTA,EAAQ,SAAS,GAAGqxB,GAAsB,GAAGF,GAAM,cAAgB,kCAAkC,EAAE,EAClG,OAAO,eAAe,CAAC,EAAE,EAC9BnxB,EAAQ,eAAe,UAAU,IAAI,oBAAoB,EACzDA,EAAQ,eAAe,YAAYoxB,CAAQ,EACpC,GAEnC,CAEa,CACD,OAAO,IACV,EAAE,kCAAkC,EACrC,KAAKrB,GAAsB,kBAAkB,EAAI,EACjD,KAAKA,GAAsB,WAAW,IAAK,GAAG,CACjD,CACD,WAAW3vB,EAASJ,EAAS,CACzB,KAAKgwB,GAAqB,IAAI5vB,EAASJ,CAAO,CACjD,CACD,SAAS3D,EAAQ,CACb,KAAK,gBAAe,CACvB,CACD,qBAAsB,CAClB,OAAO,KAAK,2BACf,CACD,iBAAiBi1B,EAAe,CAC5B,KAAK,cAAgBA,CACxB,CACD,sBAAsB1pB,EAAU+b,EAAO,CACnC,MAAM4N,EAAqB,SAAS,cAAc,MAAM,EACxDA,EAAmB,UAAU,IAAI,kBAAkB,EACnD,MAAMC,EAAiB1vB,EAA2B,EAAG,kBAAkB8F,EAAS,IAAI,EAChFnM,EAAWH,EAAU,oBAAoB,EACzCG,EAAWH,EAAU,mBAAmB,EACxCqoB,IAAU,KACV7nB,GAAmB,QAAQy1B,EAAoBC,CAAc,EAG7D,KAAK,WAAWD,EAAoB,CAAE,SAAU,IAAM5N,CAAK,CAAE,EAEjE,MAAM5E,EAAgBtjB,EAAWH,EAAU,cAAe,CAAE,IAAKk2B,EAAgB,IAAK5pB,EAAS,KAAM,IAAKA,EAAS,KAAO,CAAA,EAE1H,OAAAA,EAAS,qCAAqCmX,CAAa,EACpDwS,CACV,CACD,OAAO,wBAAwB3pB,EAAU,CACrC,SAAS6pB,EAAuBC,EAAQ,CACpC,MAAO,CAACA,EAAO,WAAW,UAAU,GAAK,kBAAkB,KAAKA,CAAM,CACzE,CACD,MAAMh4B,EAAOkO,EAAS,KAAK,YAAW,EAatC,GAXIlO,EAAK,OAAO,CAAC,IAAM,KAInBA,IAAS,UAITA,EAAK,WAAW,YAAY,GAG5B+3B,EAAuB/3B,CAAI,EAC3B,MAAO,GAEX,MAAMqD,EAAQ6K,EAAS,MAAM,YAAW,EAKxC,MAHI,GAAA7K,EAAM,SAAS,KAAK,GAGpB00B,EAAuB10B,CAAK,EAInC,CACD,OAAO,wBAAwBa,EAAS,CACpC,MAAM8uB,EAAe9uB,EAAQ,aACvBua,EAASC,EAAyB,SAAQ,EAAG,cAAc,oBAAoB,EAAE,MACjF1b,EAAQkB,EAAQ,QAChB0I,EAAQ,CAAA,EAGd,UAAWsB,KAAYlL,EAAM,oBACrBkL,EAAS,SACTtB,EAAM,KAAK,GAAG6R,CAAM,MAAMvQ,EAAS,IAAI,KAAKA,EAAS,KAAK,MAAM,EAGhEtB,EAAM,KAAK,GAAG6R,CAAM,GAAGvQ,EAAS,IAAI,KAAKA,EAAS,KAAK,GAAG,EAGlE,MAAM+V,EAAqBrX,EAAM,KAAK;AAAA,CAAI,EACpCoX,EAAW,GAAGgP,CAAY;AAAA,EAAO/O,CAAkB;AAAA,GACzD,MAAO,CACH,mBAAAA,EACA,SAAAD,CACZ,CACK,CACD,eAAegR,EAAa,CACxB,KAAK,UAAU,kBAAkBA,CAAW,EAC5C,KAAK,qBAAuBA,EAC5B,KAAK,OAAM,CACd,CACD,eAAe7wB,EAAcixB,EAAaC,EAAW,CACjD,OAAO,KAAK,UAAU,6BAA6BlxB,EAAcixB,EAAaC,CAAS,CAC1F,CACD,kBAAkB4C,EAAa,CACvBA,EAAY,uBAAuBzf,GACnC,KAAK,eAAeyf,EAAY,WAAW,EAG3C,KAAK,eAAe,gBAAiBA,EAAY,KAAM1f,EAAgC,CAE9F,CACD,cAAc6c,EAAaC,EAAW,CAClC,KAAK,UAAU,wBAAwBD,EAAaC,CAAS,CAChE,CACD,mBAAmBnxB,EAAS,CACxB,KAAK,UAAU,6BAA6BA,CAAO,CACtD,CACD,aAAc,CACV,KAAK,iBAAmB,GACxB,KAAK,4BAA4B,OACjC,KAAKuyB,IAAwB,QAC7B,KAAK,WAAU,EACf,KAAK,OAAM,CACd,CACD,yBAAyBj5B,EAAO,CAC5B,MAAM06B,EAAgBC,GAAwC,KAAK,kBAAkB,aAAa,EAClG,GAAI,CAACD,EACD,OAEJ,MAAMh0B,EAAU,KAAK,iBAAiB,IAAIg0B,CAAa,EACvD,GAAI,CAACh0B,EACD,OAEJ,IAAIk0B,EAAiB,KACjBxJ,EAAqB,GACzB,OAAQpxB,EAAM,IAAG,CACb,IAAK,UACL,IAAK,YAAa,CACd46B,EAAiBl0B,EAAQ,gBAAiB,GAAIA,EAAQ,YAAW,EACjE0qB,EAAqB,GACrB,KACH,CACD,IAAK,YACL,IAAK,aAAc,CACfwJ,EAAiBl0B,EAAQ,YAAa,GAAIA,EAAQ,aAAY,EAC9D0qB,EAAqB,GACrB,KACH,CACD,IAAK,OAAQ,CACTwJ,EAAiBl0B,EAAQ,eACzB0qB,EAAqB,GACrB,KACH,CACD,IAAK,MAAO,CACRwJ,EAAiBl0B,EAAQ,cACzB0qB,EAAqB,GACrB,KACH,CACJ,CACGwJ,GAAkB,KAAK,sBACvBA,EAAiBA,EAAe,yBAAmDxJ,CAAkB,GAErGwJ,IACAA,EAAe,QAAQ,QACvB56B,EAAM,QAAQ,EAAI,EAEzB,CACD,+BAAgC,CAC5B,KAAK,WAAU,CAClB,CACD,YAAa,CAGT,GAAK,KAAK,iBAAiB,UAAU,SAAS,QAAQ,GAGlD,KAAK,cAAc,CAAC,GAAK,KAAK,cAAc,CAAC,EAAE,SAAS,CAAC,EAAG,CAC5D,MAAM66B,EAAsB,KAAK,cAAc,CAAC,EAAE,SAAS,CAAC,EAAE,yBAAmD,EAAI,EACjHA,IACAA,EAAoB,QAAQ,SAAW,KAAK,kBAAkB,SAAU,EAAG,GAAK,EAEvF,CACJ,CACD,qBAAqB76B,EAAO,CACxB,MAAMyH,EAAW,KAAK,WACtB,GAAI,CAACA,EACD,OAEJ,MAAMqzB,EAAUrzB,EAAS,kBAAmB,EAAC,OAAOszB,CAAwB,EACtEC,EAAyB,CAAA,EAC/B,QAAS9pB,EAAI,EAAGA,EAAI4pB,EAAQ,OAAQ,EAAE5pB,EAAG,CACrC,MAAMye,EAASmL,EAAQ5pB,CAAC,EAClB+pB,EAAU,KAAK,0BAA0B,KAAK,KAAMtL,CAAM,EAChEqL,EAAuB,KAAK,CAAE,KAAME,GAAyCvL,EAAO,YAAa,CAAA,EAAG,QAAAsL,CAAO,CAAE,CAChH,CACDD,EAAuB,KAAKG,CAAkB,EAC9C,MAAMhV,EAAc,IAAIC,GAA2BpmB,CAAK,EACxD,QAASkR,EAAI,EAAGA,EAAI8pB,EAAuB,OAAQ,EAAE9pB,EAAG,CACpD,MAAMkqB,EAAaJ,EAAuB9pB,CAAC,EAC3CiV,EAAY,eAAc,EAAG,WAAWiV,EAAW,KAAMA,EAAW,QAAS,CAAE,aAAc,oBAAsB,CAAA,CACtH,CACDjV,EAAY,cAAe,EAAC,WAAW,uBAAwB,KAAK,sCAAsC,KAAK,IAAI,EAAG,CAAE,aAAc,sBAAwB,CAAA,EACzJA,EAAY,OACjB,SAASgV,EAAmBE,EAAaC,EAAa,CAClD,OAAOC,GAAgDF,EAAY,KAAMC,EAAY,IAAI,CAC5F,CACD,SAASP,EAAyBpL,EAAQ,CACtC,MAAO,CAACA,EAAO,eAAc,GAAM,CAACA,EAAO,UAAY,EAAQA,EAAO,YAAW,CACpF,CACJ,CACD,gBAAgB3vB,EAAO,CACnB,MAAMyO,EAAQzO,EAAM,KAAO,IAAI,OAAOw7B,GAAyCx7B,EAAM,IAAI,EAAG,GAAG,EAAI,KACnG,KAAK,iBAAmB,KAAK,MAC7B,KAAK,oBAAsByO,EAC3B,KAAK,aAAY,EACjB,KAAK,WAAU,EACf,WAAW,IAAM,CACT,KAAK,mBACe,KAAK,IAAK,EAAG,KAAK,iBAAmB6pB,IAErDxQ,GAAmB,KAAK,gBAAkBvjB,EAAWH,EAAU,iBAAkB,CAAE,EAAG,KAAK,gBAAiB,EACxGG,EAAWH,EAAU,yBAAyB,CAAC,EAG9D,EAAEk0B,EAAkB,CACxB,CACD,cAAcmD,EAAe9H,EAAmB,CAC5C,GAAIA,EACA,UAAWjtB,KAAW,KAAK,cACnBA,aAAmB0vB,IAA+B1vB,EAAQ,SAG9DA,EAAQ,mBAAmBitB,CAAiB,EAGpD,GAAI,KAAK,eACL,OAEJ,MAAM1yB,EAAO,KAAK,OAClB,GAAKA,EAGL,WAAWyF,KAAW,KAAK,cACnBA,aAAmB0vB,IAA+B1vB,EAAQ,SAG9DA,EAAQ,OAAOA,IAAY+0B,CAAa,EAExC,KAAK,qBACL,KAAK,aAAY,EAErB,KAAK,sBAAsB,aAC3B,KAAK,yBAAyBx6B,EAAM,EAAK,EAC5C,CACD,MAAM,UAAW,CACb,KAAKg4B,IAAwB,QAC7B,KAAKA,GAAyB,IAAI,gBAClC,MAAM,KAAKyC,GAAe,KAAKzC,GAAuB,MAAM,EAI5D,MAAM0C,EAAuB,MAAM,gBAAgB,6BAA6B,qBAAqB,GAC/F,eAAe,iBAAiB,sBAAsB,EAC5D,GAAIA,EAAqB,OAAS,EAC9B,UAAWzyB,KAAWyyB,EAClB,KAAK,gBAAkBzyB,EACvB,KAAK,gBAAgB,iBAAiB,SAAU,KAAK,cAAe,EAAK,CAGpF,CACD,KAAMwyB,GAAeE,EAAQ,CACpB,KAAK,wBACN,OAAO,WAAW,IAAM,CAChBA,EAAO,SAGN,KAAK,wBAEN,KAAK,kBAAkB,YAAY,OAAQ,SAAS,CAE3D,EAAE,GAAG,EAEV,MAAMr2B,EAAgB,MAAM,KAAK,sBACjC,GAAIq2B,EAAO,QACP,OAEJ,MAAMzzB,EAAS,KAAK,KAAI,GAAI,GACtB0zB,EAAet2B,GAAe,wBAC9B,CAAC0O,EAAgB2P,CAAqB,EAAI,MAAM,QAAQ,IAAI,CAAC,KAAK,uBAAuBzb,CAAM,EAAG,KAAK,uBAAuB0zB,CAAY,CAAC,CAAC,EAC9ID,EAAO,UAGX,MAAM,KAAK,mBAAmBA,EAAQr2B,EAAe0O,EAAgB2P,CAAqB,EACtF,CAAAgY,EAAO,UAGN,KAAK,yBACN,KAAK,uBAAyB,GAC9B,KAAK,kBAAkB,KAAK,yBAA0B,CAAA,EAClD3X,GAAyB,UAAU,6BACnC,KAAK+U,GAAqB,KAAK,6BAC/B,KAAK,kBAAkB,KAAKA,EAAkB,EAC9C,KAAKA,GAAmB,QAAQ,UAAU,IAAI,QAAQ,GAE1D,KAAK,yBAAyB,2BAElC,KAAK,yBAAyB,KAAK,KAAM,EAAE,EAAI,EAC/C,KAAK,yBAAyB,wBAA8D,CAAE,iBAAkB,KAAK,gBAAgB,CAAE,GAC1I,CACD,MAAM,uBAAuB7wB,EAAQ,CACjC,MAAMlH,EAAO,KAAK,OAClB,OAAIA,IAAS,MAAQkH,IAAW,OACrB,KAEJ,MAAMlH,EAAK,SAAU,EAAC,SAAQ,EAAG,iBAAiBkH,CAAM,CAClE,CACD,UAAW,CACF,KAAK,gBAAgB,SAAS,KAAK,YAAY,KAAK,IAAI,CAAC,CACjE,CACD,aAAc,CACV,MAAM2zB,EAAQ,KAAK,eAAe,sBAAuB,EAAC,MAAQ,KAClE,YAAK,YAAW,EAAG,QAAQp1B,GAAW,CAClCA,EAAQ,sBAAsB,QAAQ,MAAM,MAAQo1B,CAChE,CAAS,EACD,KAAK,gBAAe,EACb,QAAQ,SAClB,CACD,YAAa,CACT,MAAMr0B,EAAW,KAAK,WAClBA,GACAA,EAAS,4BAA2B,CAE3C,CACD,qBAAsB,CAClB,MAAMxG,EAAO,KAAK,OAClB,GAAI,CAACA,GAAQ,CAAC,KAAK,SAAQ,EACvB,OAAO,QAAQ,QAAQ,IAAI,EAE/B,MAAMwG,EAAW,KAAK,WACtB,GAAI,CAACA,EACD,OAAO,QAAQ,QAAQ,IAAI,EAE/B,OAAOA,EAAS,4BAA4BxG,CAAI,EAAE,KAAK86B,EAAe,KAAK,IAAI,CAAC,EAChF,SAASA,EAAex2B,EAAe,CACnC,OAAOA,GAAiBA,EAAc,KAAM,IAAK,KAAK,KAAM,EAAGA,EAAgB,IAClF,CACJ,CACD,gBAAgBy2B,EAASC,EAAc,CAC/B,KAAK,iBAAmBD,IAG5B,KAAK,eAAe,UAAU,OAAO,mBAAoBA,CAAO,EAChE,KAAK,eAAiBA,EACtB,KAAK,kBAAkB,IAAI,EAC9B,CACD,kBAAkBt3B,EAAa,CAQ3B,GAPI,KAAK,6BACLlB,GAA8B,qBAAoB,EAEtD,KAAK,4BAA8B,GAC/B,CAAC,KAAK,QAGN,CAACkB,GAAeA,EAAY,WAAU,GAAMA,EAAY,YACxD,OAEJ,MAAM+pB,EAAO/pB,EAAY,SAAS,WAAW,WACvCusB,EAAgBxC,aAAgBQ,GAA4BR,EAAK,aAAc,EAAG,OACxF,SAAW,CAAE,WAAA/rB,EAAY,KAAAsuB,CAAI,IAAMwH,GAA0B,CACzD,GAAI,CAAC91B,EAAW,SAASgC,EAAY,IAAI,EACrC,SAEJ,MAAMzD,EAAO,KAAK,OAClB,GAAKA,EAGL,CAAAA,EAAK,SAAQ,EAAG,aAAY,EAAG,mBAAmB,CAAE,KAAM,KAAK,KAAM,EAAE,aAAAgwB,CAAc,EAAED,CAAI,EAC3F,KAAK,4BAA8B,GACnC,MACH,CACJ,CACD,kBAAkBhxB,EAAO,CACrB,MAAM4xB,EAAO5xB,GAAO,MAAQ,SAAUA,EAAM,KAAOA,EAAM,KAAK,KAAO,KACrE,GAAI4xB,EAAM,CACN,UAAWlrB,KAAW,KAAK,cACvBA,EAAQ,iBAAiBkrB,CAAI,EAE5B,KAAK,wBACV,MACH,CACD,GAAI,KAAK,eAAiB,KAAK,eAAgB,CACtC,KAAK,wBACV,MACH,CACD,KAAK,WAAU,EACf,KAAK,OAAM,CACd,CACD,MAAM,uBAAwB,CAC1B,KAAKsH,IAAsC,QAC3C,KAAKD,GAAyB,IAAI,gBAClC,MAAM2C,EAAS,KAAK3C,GAAuB,OACrC1zB,EAAgB,MAAM,KAAK,sBAC3B4C,EAAS,KAAK,KAAI,GAAI,GACtB0zB,EAAet2B,GAAe,wBAC9B,CAAC0O,EAAgB2P,CAAqB,EAAI,MAAM,QAAQ,IAAI,CAAC,KAAK,uBAAuBzb,CAAM,EAAG,KAAK,uBAAuB0zB,CAAY,CAAC,CAAC,EAClJ,GAAI,CAAAD,EAAO,QAGX,UAAWl1B,KAAW,KAAK,cACvBA,EAAQ,kBAAkBuN,CAAc,EACxCvN,EAAQ,yBAAyBkd,CAAqB,EACtDld,EAAQ,oBAAmB,CAElC,CACD,qBAAsB,CAClB,IAAIgZ,EAAQ,EACZ,UAAWgY,KAAS,KAAK,cACrB,UAAWhxB,KAAWgxB,EAAM,SAAU,CAClC,GAAIhxB,EAAQ,QAAQ,WAChB,OAAOgZ,EAEXA,GACH,CAEL,MAAO,EACV,CACD,uBAAuB2G,EAAcC,EAAe,CAChD,MAAM5f,EAAU,KAAK,YAAa,EAAC2f,CAAY,EAC/C,GAAI3f,EAAS,CACT,MAAMwC,EAAUxC,EAAQ,0BAA0B4f,CAAa,EAC/D,GAAI,CAACpd,EAAS,CACVxC,EAAQ,QAAQ,QAChB,MACH,CACDwC,EAAQ,iBAAgB,CAC3B,CACJ,CACD,MAAM,mBAAmB0yB,EAAQr2B,EAAe0O,EAAgB2P,EAAuB,CAInF,GAAI,KAAK,iBACL,KAAK,iBAAmB,WAEnB,KAAK,gBAAkB,KAAK,cACjC,OAEJ,MAAMgN,EAAe,KAAK,sBAC1B,KAAK,UAAU,QACf,MAAMsL,EAAe,KAAK,cAAc,IAAIxE,GAASA,EAAM,QAAQ,EAAE,OACrE,KAAK,cAAgB,GACrB,MAAMz2B,EAAO,KAAK,OAElB,GADA,KAAK,iBAAmBsE,IAAkB,MAAQtE,IAAS,KACvD,CAAC,KAAK,iBAAkB,CACxB,KAAK,kBAAkB,iBACvB,KAAK,iBAAiB,UAAU,OAAO,QAAQ,EAC/C,MACH,CACD,MAAMk7B,EAAS,MAAM,KAAK,oCAAoC52B,EAAe0O,EAAgB2P,CAAqB,EAClH,GAAIgY,EAAO,QACP,OAEJ,KAAK,cAAgBO,EAIrB,MAAMC,EAAc,KAAK,cAAc,IAAI1E,GAASA,EAAM,QAAQ,EAAE,OAC9D2E,EAAoBjjB,GAAkB,WACtCkjB,EAAeD,EAAkB,aACvC,GAAIC,EAAc,CACdD,EAAkB,cAAa,EAC/B,SAAW,CAAC3c,EAAO6c,CAAW,IAAKL,EAAa,QAAO,EAC/CI,IAAiBC,GAAe7c,EAAQ0c,EAAY,QACpDC,EAAkB,YAAY,KAAMD,EAAY1c,CAAK,CAAC,CAGjE,CACD,KAAK,kBAAkB,iBACvB,MAAM2U,EAAW,SAAS,yBAC1B,IAAI3U,EAAQ,EACR8c,EAAiB,KACrB,UAAW9E,KAAS,KAAK,cAAe,CACpC,MAAM+E,EAAe/E,EAAM,eACvB+E,GACApI,EAAS,YAAYoI,CAAY,EAErC,UAAW/1B,KAAWgxB,EAAM,SACxBrD,EAAS,YAAY3tB,EAAQ,OAAO,EAChCgZ,IAAUkR,IACV4L,EAAiB91B,EAAQ,SAE7BgZ,GAEP,CACD,KAAK,kBAAkB,YAAY2U,CAAQ,EACvCmI,GACAA,EAAe,MAAK,EAEpB5L,GAAgBlR,GAChB,KAAK,cAAc,CAAC,EAAE,SAAS,CAAC,EAAE,QAAQ,QAE9C,KAAK,8BAA6B,EAC9B,KAAK,oBACL,KAAK,aAAY,EAGjB,KAAK,iBAAiB,UAAU,OAAO,SAAU,KAAK,cAAc,OAAS,CAAC,EAE9E,KAAK,uBACL,KAAK,UAAU,kBAAkB,KAAK,oBAAoB,EAC1D,KAAK,qBAAuB,MAEhC,KAAK,sBAAsB,aAE3BvZ,EAAiB,YAAY,WAAY,0BAA0B,EACnE,KAAK,yBAAyB,wBAA8D,CAAE,iBAAkB,EAAO,CAAA,CAC1H,CACD,yBAAyBu2B,EAAOC,EAAU,CAEzC,CACD,2CAA2Cp3B,EAAe0O,EAAgB2P,EAAuB,CAC7F,OAAO,KAAK,oCAAoCre,EAAe0O,EAAgB2P,CAAqB,CACvG,CACD,MAAM,oCAAoCre,EAAe0O,EAAgB2P,EAAuB,CACxF,KAAK,qBACL,KAAK,oBAAoB,UAE7B,KAAK,oBAAsB,IAAIgZ,GAC/B,MAAMT,EAAS,CAAC,IAAIU,EAAa,IAAI,CAAC,EACtC,IAAItO,EAAa,EACbuO,EAAiB,KACjBC,EAAa,KACbC,EAAY,GAChB,MAAMC,EAAqBz3B,GAAU,CACjC,MAAM03B,EAAa13B,EAAM,WACzB,GAAI03B,aAAsBjO,GAA0B,CAChD,MAAMkO,EAASD,EAAW,OAC1B,IAAKC,EAAO,QAAUJ,IAAeA,IAAeI,EAAQ,CACxD,MAAMzF,EAAQmF,EAAa,iBAAiBK,CAAU,EACtDf,EAAO,KAAKzE,CAAK,EACjBsF,EAAY,GACZD,EAAaI,CAChB,CACJ,CACb,EAGQC,GAA4B,SAAQ,EAAG,KAAM,EAAC,WAAW,EAAK,EAC9D,MAAMC,EAAgB,IAAI,IAC1B,UAAW73B,KAASD,EAAc,aAAc,CAC5C,GAAI0e,GAAyB,UAAU,yBAAyB,GAA+Dze,EAAM,WAAY,CAC7I,MAAM2D,EAAM3D,EAAM,WAAW,YAAW,EACpC2D,GAAO,CAACk0B,EAAc,IAAIl0B,CAAG,IAC7B,MAAM,KAAK,mBAAmBA,CAAG,EACjCk0B,EAAc,IAAIl0B,CAAG,EAE5B,CACD,MAAMmE,EAAa/H,EAAc,YAAYC,CAAK,EAAID,EAAc,aAAaC,CAAK,EAAI,KAC1F,GAAI8H,GAAcA,IAAewvB,EAAgB,CAC7CA,EAAiBxvB,EACjB,MAAMoqB,EAAQ,MAAMmF,EAAa,yBAAyBC,CAAc,EACxEX,EAAO,KAAKzE,CAAK,CACpB,CACDuF,EAAkBz3B,CAAK,EACvB,MAAM83B,EAAYnB,EAAOA,EAAO,OAAS,CAAC,EACtCmB,GACA,KAAK,oBAAoB,SAAS,IAAM,CACpC,MAAM52B,EAAU,IAAIunB,EAAuB,KAAM1oB,EAAeC,EAAO+oB,EAAYta,EAAgB2P,CAAqB,EACxH2K,IACA+O,EAAU,SAAS,KAAK52B,CAAO,CACnD,CAAiB,CAER,CACD,MAAM62B,EAAgC,MAAM,KAAKh4B,EAAc,4BAA4B,EAAE,IAAIi4B,IACtF,CACH,cAAAA,EACA,WAAY,YACZ,aAAcj4B,EAAc,4BAA4Bi4B,CAAa,CACrF,EACS,EACKC,EAAsB,CAAC,GAAGl4B,EAAc,YAAW,CAAE,EAAE,IAAIm4B,IACtD,CAAE,cAAe,KAAM,WAAAA,EAAY,aAAcn4B,EAAc,aAAam4B,CAAU,GAChG,EACKC,EAAiBJ,EAA8B,OAAOE,CAAmB,EAAE,KAAK,CAACh0B,EAAGC,IAGlFD,EAAE,aAAe,UAAiDC,EAAE,aAAe,SAC5E,GAEPD,EAAE,aAAe,UAAiDC,EAAE,aAAe,SAC5E,EAEPD,EAAE,WAAaC,EAAE,WACV,GAEPD,EAAE,WAAaC,EAAE,WACV,EAEJ,CACV,EACD,UAAWk0B,KAAUD,EAAgB,CACjCb,EAAiB,KACjB,QAAS5rB,EAAI,EAAGA,EAAI0sB,EAAO,aAAa,OAAQ,EAAE1sB,EAAG,CACjD,MAAM1L,EAAQo4B,EAAO,aAAa1sB,CAAC,EAC7B5D,EAAa/H,EAAc,YAAYC,CAAK,EAAID,EAAc,aAAaC,CAAK,EAAI,KAG1F,GAAI0L,IAAM,GAAK5D,IAAewvB,EAE1B,GADAC,EAAa,KACTzvB,EAAY,CACZ,MAAMoqB,EAAQ,MAAMmF,EAAa,+BAA+Be,EAAO,WAAYA,EAAO,cAAetwB,CAAU,EACnH6uB,EAAO,KAAKzE,CAAK,CACpB,KACI,CACD,MAAMA,EAAQmF,EAAa,sBAAsBe,EAAO,WAAYA,EAAO,aAAa,EACxFzB,EAAO,KAAKzE,CAAK,CACpB,CAELoF,EAAiBxvB,EACjB2vB,EAAkBz3B,CAAK,EACvB,MAAM83B,EAAYnB,EAAOA,EAAO,OAAS,CAAC,EAC1C,KAAK,oBAAoB,SAAS,IAAM,CACpC,MAAMz1B,EAAU,IAAI2wB,GAAsC,KAAM9xB,EAAeC,EAAO+oB,EAAYta,EAAgB2P,CAAqB,EACvI2K,IACA+O,EAAU,SAAS,KAAK52B,CAAO,CACnD,CAAiB,CACJ,CACJ,CACD,UAAWm3B,KAAiBt4B,EAAc,YAAa,CACnD,MAAMmyB,EAAQmF,EAAa,qBAAqBgB,EAAc,KAAI,EAAG,IAAI,EACzE,UAAWC,KAAYD,EAAc,YACjC,KAAK,oBAAoB,SAAS,IAAM,CACpCnG,EAAM,SAAS,KAAK,IAAIP,GAA0B,KAAM5xB,EAAeu4B,EAAS,MAAOvP,CAAU,CAAC,EAClGA,GACpB,CAAiB,EAEL4N,EAAO,KAAKzE,CAAK,CACpB,CACD,MAAMqG,EAAwBx4B,EAAc,wBAC5C,GAAIw4B,EAAuB,CACvB,MAAMrG,EAAQmF,EAAa,iCAAiCkB,EAAsB,KAAI,EAAG,IAAI,EAC7F,KAAK,oBAAoB,SAAS,IAAM,CACpCrG,EAAM,SAAS,KAAK,IAAIV,GAA6B,KAAMzxB,EAAew4B,EAAsB,MAAOxP,CAAU,CAAC,EAClHA,GAChB,CAAa,EACD4N,EAAO,KAAKzE,CAAK,CACpB,CACD,UAAWsG,KAAmBz4B,EAAc,mBAAoB,CAC5D,MAAMmyB,EAAQmF,EAAa,uBAAuBmB,EAAgB,KAAI,EAAG,IAAI,EAC7E,KAAK,oBAAoB,SAAS,IAAM,CACpCtG,EAAM,SAAS,KAAK,IAAIT,GAAuB,KAAM1xB,EAAey4B,EAAgB,MAAOzP,EAAYyP,EAAgB,OAAM,CAAE,CAAC,EAChIzP,GAChB,CAAa,EACD4N,EAAO,KAAKzE,CAAK,CACpB,CACD,GAAInyB,EAAc,uBAAuB,OAAS,EAAG,CACjD,MAAMuxB,EAAoBvxB,EAAc,qBAAoB,EAAG,QAAUgzB,GACnEb,EAAQmF,EAAa,gCAAgC/F,CAAiB,EAC5E,UAAWmH,KAAgB14B,EAAc,uBACrC,KAAK,oBAAoB,SAAS,IAAM,CACpCmyB,EAAM,SAAS,KAAK,IAAIb,GAA4B,KAAMtxB,EAAe04B,EAAa,MAAO,EAAE1P,EAAY0P,EAAa,aAAY,EAAInH,CAAiB,CAAC,EAC1JvI,GACpB,CAAiB,EAEL4N,EAAO,KAAKzE,CAAK,CACpB,CAGD,OAAIsF,EACAI,GAA4B,SAAQ,EAAG,KAAM,EAAC,WAAW,EAAI,EAExDc,GAA0B,WAAW,aAG1C36B,EAAc,SAAU,EAAC,gBAAgB,KAAM65B,GAA4B,SAAQ,EAAG,KAAI,CAAE,EAEhG,MAAM,KAAK,oBAAoB,YACxBjB,CACV,CACD,MAAM,uCAAwC,CAC1C,MAAM10B,EAAW,KAAK,WAChBxG,EAAO,KAAK,OAClB,GAAI,CAACwG,GAAY,CAACxG,EACd,OAEJ,KAAK,iBAAiB,EAAI,EAC1B,MAAMovB,EAAmB,MAAM5oB,EAAS,8BAA8BxG,EAAK,QAAO,CAAE,EACpF,KAAK,iBAAiB,EAAK,EAC3B,MAAM,KAAK,0BAA0BovB,CAAgB,CACxD,CACD,MAAM,0BAA0BA,EAAkB,CAC9C,GAAI,CAACA,EACD,OAGJ,MAAMjhB,IADQ,MAAMihB,EAAiB,eAAgB,GAAE,SAAW,IAC/C,MAAM;AAAA,CAAI,EACvBqB,EAAQC,GAA8B,mBAAmBviB,EAAM,OAAS,EAAGA,EAAMA,EAAM,OAAS,CAAC,EAAE,MAAM,EAC3G,KAAK,eAAiB,KAAK,cAAc,OAAS,GAClD,KAAK,gBAAgB,KAAK,cAAc,CAAC,EAAE,SAAS,CAAC,EAAGihB,EAAiB,GAAIqB,CAAK,CAEzF,CACD,gBAAgByM,EAAoB/N,EAAcP,EAAc,CAC5D,MAAM5uB,EAAO,KAAK,OACZm9B,EAAe,IAAIhI,GAA4B,KAAM+H,EAAmB,cAAel9B,EAAOA,EAAK,eAAc,EAAK,GAAImvB,EAAcP,EAAcsO,EAAmB,MAAK,EAAI,CAAC,EACzL,KAAK,kBAAkB,aAAaC,EAAa,QAASD,EAAmB,QAAQ,WAAW,EAChG,UAAWzG,KAAS,KAAK,cAAe,CACpC,MAAMhY,EAAQgY,EAAM,SAAS,QAAQyG,CAAkB,EACnDze,IAAU,KAGdgY,EAAM,SAAS,OAAOhY,EAAQ,EAAG,EAAG0e,CAAY,EAChDA,EAAa,qBAAoB,EACpC,CACD,IAAI7P,EAAa,EACjB,UAAWmJ,KAAS,KAAK,cACrB,UAAWhxB,KAAWgxB,EAAM,SACxBhxB,EAAQ,cAAc6nB,CAAU,EAChCA,GAGX,CACD,cAAc7nB,EAAS,CACnB,UAAWgxB,KAAS,KAAK,cAAe,CACpC,MAAMhY,EAAQgY,EAAM,SAAS,QAAQhxB,CAAO,EACxCgZ,IAAU,KAGdgY,EAAM,SAAS,OAAOhY,EAAO,CAAC,EAC9BhZ,EAAQ,QAAQ,SACnB,CACJ,CACD,aAAc,CACV,OAAO,KAAK,mBACf,CACD,cAAe,CACX,IAAI23B,EAAqB,GACrBC,EAAkB,EACtB,UAAW5G,KAAS,KAAK,cACrB4G,GAAmB5G,EAAM,eACzB2G,EAAqB,EAAQC,GAAoBD,EAErD,KAAK,iBAAiB,UAAU,OAAO,SAAU,EAAQA,CAAmB,EAC5E,KAAK,gBAAkBC,CAC1B,CACD,UAAW,CACPp4B,EAAmB,SAAU,EAAC,UAAU4d,GAAmB,IAAI,EAC/D,MAAM,SAAQ,CACjB,CACD,UAAW,CACP,KAAK,gBAAe,EACpB,MAAM,SAAQ,EACd5d,EAAmB,SAAU,EAAC,UAAU4d,GAAmB,IAAI,CAClE,CACD,iBAAkB,CACd,KAAK,4BAA4B,OACjC,KAAK,oBAAoB,OACrB,KAAK,iBACL,KAAK,eAAe,SACpB,KAAK,eAAiB,MAE1B,KAAK8U,IAAoB,cACzB,KAAKC,IAAuB,aAC/B,CACD,sBAAsBr2B,EAAM,CACxB,OAAO,KAAK,cAAc,KAAKk1B,GAASA,EAAM,aAAc,GAAE,cAAgBl1B,CAAI,CACrF,CACD,aAAc,CACV,IAAIs1B,EAAW,CAAA,EACf,UAAWJ,KAAS,KAAK,cACrBI,EAAWA,EAAS,OAAOJ,EAAM,QAAQ,EAE7C,OAAOI,CACV,CACD,MAAM,mBAAmB3uB,EAAK,CAC1B,MAAMo1B,EAAiB,KAAKxF,GAAoB,IAAI5vB,CAAG,EACnDo1B,GACAC,GAAyC,EAAG,0BAA0BD,EAAe,aAAcA,EAAe,kBAAkB,EAGxI,MAAME,EAAeC,GAAkC,SAAU,EAAC,mBAAmBv1B,CAAG,EACxF,GAAI,CAACs1B,EACD,OAEJ,MAAME,EAAqB,KAAK,oBAAoB,KAAK,KAAMF,CAAY,EAC3ED,KAA4C,sBAAsBC,EAAcE,CAAkB,EAClG,MAAMC,EAAa,CACf,aAAAH,EACA,aAAc,IAAI,IAClB,mBAAAE,CACZ,EACQ,KAAK5F,GAAoB,IAAI5vB,EAAKy1B,CAAU,EAC5C,MAAM,KAAK,oBAAoBA,EAAW,YAAY,CACzD,CACD,kBAAkBluB,EAAU,CACxB,MAAMvH,EAAMuH,EAAS,WAAW,YAAY,YAAW,EACvD,GAAI,CAACvH,EACD,MAAO,GAEX,MAAM01B,EAAgB,KAAK9F,GAAoB,IAAI5vB,CAAG,EACtD,GAAI,CAAC01B,EACD,MAAO,GAEX,KAAM,CAAE,aAAAC,EAAc,wBAAAC,CAAyB,EAAGF,EAC5C75B,EAAaC,GAAiD,SAAQ,EAAG,mBAAmByL,EAAU,EAAI,EAChH,GAAI,CAAC1L,EACD,MAAO,GAEX,GAAI,CAAC+5B,EAED,OAAOD,EAAa,IAAI95B,EAAW,WAAa,CAAC,EAErD,MAAMg6B,EAAsBD,EAAwB,oBAAoB/5B,EAAW,WAAYA,EAAW,YAAY,EAAE,CAAC,EACzH,OAAO85B,EAAa,IAAIE,EAAsB,CAAC,CAClD,CACD,oBAAqB,CACjB,GAAI,CAAC,KAAKhG,GACN,OAEJ,IAAIiG,EAAmB,GACvB,UAAWJ,KAAiB,KAAK9F,GAAoB,OAAM,EACvD,GAAI8F,EAAc,aAAa,KAAO,EAAG,CACrCI,EAAmB,GACnB,KACH,CAEL,KAAKjG,GAAmB,QAAQ,UAAU,OAAO,SAAU,CAACiG,CAAgB,CAC/E,CACD,MAAM,oBAAoBR,EAAc,CACpC,MAAMI,EAAgB,KAAK9F,GAAoB,IAAI0F,EAAa,IAAG,CAAE,EACrE,GAAI,CAACI,EACD,OAEJ,MAAMK,EAAe,MAAMV,KAA4C,YAAYC,EAAc,CAAE,iBAAkB,EAAI,CAAE,EACrHK,EAAe,IAAI,IAEzB,GADAD,EAAc,aAAeC,EACzB,CAACI,EACD,OAEJ,KAAM,CAAE,KAAAC,EAAM,wBAAAJ,CAAyB,EAAGG,EACpC,CAAE,KAAAE,CAAI,EAAKC,GAAgCF,CAAI,EACrD,UAAW5b,KAAO6b,EACV7b,EAAI,OAAS,YACbub,EAAa,IAAIvb,EAAI,iBAAiB,EAG9Csb,EAAc,wBAA0BE,CAC3C,CACD,MAAM,qBAAsB,CACxB,IAAIrY,EAAa,GACjB,SAAW,CAACvd,EAAK,CAAE,aAAAs1B,CAAY,CAAE,IAAK,KAAK1F,GAAqB,CAC5D,MAAMmG,EAAe,MAAMV,KAA4C,YAAYC,EAAc,CAAE,iBAAkB,EAAI,CAAE,EAE3H,GAAI,CAACS,GAAgBA,GAAc,KAAK,OAAS,EAC7C,SAEJ,MAAMI,EAAU,MAAM3H,GAAW,yBAAyBuH,EAAa,IAAI,EACvEI,EAAQ,OAAS,IACjB5Y,GAAc,MAAM6Y,GAAsBp2B,CAAG,CAAC;AAAA;AAAA,EAAUm2B,CAAO;AAAA;AAAA,EAEtE,CACD,OAAO5Y,CACV,CACD,cAAcvhB,EAAQ,CAClBgB,EAAiB,YAAY2U,GAAwB,eAAe,CACvE,CACD,4BAA6B,CACzB,MAAM5X,EAAY,KAAK,eAAe,YAAY,MAAO,uCAAuC,EAC1Fs8B,EAAOt8B,EAAU,YAAY,MAAO,kCAAkC,EACtEu8B,EAAU,IAAInQ,GAAmB,sBAAuBkQ,CAAI,EAC5DE,EAAc,IAAIC,GAAyB,OAAW,EAAG,EAAG,OAAW,OAAW,EAAK,EAC7F,OAAAD,EAAY,iBAAiB,cAAgE,KAAK,gBAAiB,IAAI,EACvHD,EAAQ,kBAAkBC,CAAW,EAChCD,EAAQ,sBAAsB,4BAA4B,EAC/D,KAAK,QAAUA,EACcv8B,EAAU,YAAY,MAAO,uCAAuC,EACjD,YAAY,MAAO,6BAA6B,CAEnG,CACD,gBAAgBuoB,EAAQmU,EAAQ,CACxB,KAAK,qBACL,KAAK,oBAAoB,WAAW,EAAK,EAE7C,KAAK,oBAAsBA,EACvB,KAAK,oBACL,KAAK,cAAgBnU,EAGrB,KAAK,0BAA0BA,CAAM,EAErCA,GAAUmU,GACVA,EAAO,WAAW,EAAI,CAE7B,CACD,kBAAkBxf,EAAM,CAChB,KAAK,SACL,KAAK,QAAQ,kBAAkBA,CAAI,CAE1C,CACD,0BAA0BqL,EAAQ,CAC9B,GAAIA,IAAW,KAAK,mBAChB,OAEJ,GAAIA,GAAU,KAAK,mBAAoB,CACnC,KAAK,mBAAmB,SACxBA,EAAO,KAAK,KAAK,kBAAkB,EACnC,KAAK,mBAAqBA,EAC1B,KAAK,mBAAmB,QACxB,MACH,CACD,KAAK,oBAAsBA,EACvB,KAAK,mBACL,KAAK,mBAAmB,MAAM,cAAgB,qCAEzCA,IACL,KAAK,mBAAmB,MAAM,cAAgB,qCAE9CA,GACAA,EAAO,KAAK,KAAK,kBAAkB,EAEvC,MAAMoU,EAAWC,EAAe,KAAK,IAAI,EACzC,KAAK,mBAAmB,iBAAiB,eAAgBD,EAAU,EAAK,EACxE,SAASC,GAAiB,CACtB,KAAK,mBAAmB,MAAM,eAAe,gBAAgB,EAC7D,KAAK,mBAAmB,oBAAoB,eAAgBD,EAAU,EAAK,EACvE,KAAK,oBACL,KAAK,mBAAmB,SAE5B,KAAK,mBAAqB,KAAK,oBAC3B,KAAK,oBACL,KAAK,mBAAmB,QAE5B,KAAK,oBAAsB,KACvB,KAAK,gBACL,KAAK,0BAA0B,KAAK,aAAa,EACjD,KAAK,cAAgB,KAE5B,CACJ,CACD,0BAA2B,CACvB,MAAME,EAA4B7e,EAAyB,SAAU,EAAC,cAAc,iDAAiD,EAC/H8e,EAAsB9e,EAAyB,SAAU,EAAC,cAAc,wBAAwB,EAChG+e,EAAiB,CAACC,EAAWzT,IAAU,GAAGyT,EAAY,KAAO,EAAE,GAAGzT,CAAK,GACvEtT,EAAS,IAAIxF,GAAyBpP,EAAWH,EAAU,yBAAyB,EAAG,QAAS,eAAgB,OAAW,EAAK,EACtI,OAAA+U,EAAO,QAAQ,aAAa,QAAS,GAAGgnB,GAAuB,sBAAsB,EAAE,MAAM,CAAE,MAAO,EAAI,CAAE,CAAC,EAAE,EAC/GhnB,EAAO,QAAQ,iBAAiB,QAASnZ,GAAS,CAC9C,MAAMogC,EAAejnB,EAAO,QAAQ,sBAAqB,EACnDknB,EAAO,IAAIja,GAA2BpmB,EAAO,CAC/C,EAAGogC,EAAa,KAChB,EAAGA,EAAa,MAChC,CAAa,EACKE,EAAuBP,EAA0B,MACjDQ,EAAqBD,IAAyB,QAC9CE,EAAoBF,IAAyB,OAC7CG,EAAoBT,EAAoB,MACxCU,EAAyBT,EAAeM,EAAoB,6BAA6B,EACzFI,EAAwBV,EAAeO,EAAmB,4BAA4B,EACtFI,EAAqBX,EAAeQ,EAAmBl8B,EAAWH,EAAU,iBAAiB,CAAC,EACpGi8B,EAAK,eAAc,EAAG,WAAWK,EAAwB,IAAM,CAC3DV,EAAoB,IAAI,EAAK,EAC7BD,EAA0B,IAAIQ,EAAqB,GAAK,OAAO,EAC/DpnB,EAAO,WAAW,EAAQ4mB,EAA0B,IAAG,CAAG,CAC1E,EAAe,CAAE,aAAc,2BAA2B,CAAE,EAChDM,EAAK,eAAc,EAAG,WAAWM,EAAuB,IAAM,CAC1DX,EAAoB,IAAI,EAAK,EAC7BD,EAA0B,IAAIS,EAAoB,GAAK,MAAM,EAC7DrnB,EAAO,WAAW,EAAQ4mB,EAA0B,IAAG,CAAG,CAC1E,EAAe,CAAE,aAAc,0BAA0B,CAAE,EAC/CM,EAAK,eAAc,EAAG,WAAWO,EAAoB,IAAM,CACvDZ,EAAoB,IAAI,CAACS,CAAiB,EAC1CtnB,EAAO,WAAW,EAAQ4mB,EAA0B,IAAG,CAAG,CAC1E,EAAe,CAAE,aAAc,wBAAwB,CAAE,EACxCM,EAAK,OACVrgC,EAAM,gBAAe,CACjC,EAAW,CAAE,QAAS,EAAI,CAAE,EACbmZ,CACV,CACD,4BAA6B,CACzB,MAAM0nB,EAAuB,IAAIxR,GAAyB9qB,EAAWH,EAAU,iBAAiB,EAAG,MAAM,EAEzGy8B,EAAqB,QAAQ,aAAa,eAAgBt8B,EAAWH,EAAU,iBAAiB,CAAC,EACjG,IAAI08B,EACJ,OAAAD,EAAqB,iBAAiB,QAAqD,SAAY,CACnG,MAAMna,EAAa,MAAM,KAAK,sBAC9BnB,EAAyD,SAASmB,CAAU,EAC5EvgB,EAAiB,gBAAgB,GAC7B26B,IACA,aAAaA,CAAO,EACpBA,EAAU,QAEdD,EAAqB,QAAQ,UAAU,IAAI,qBAAqB,EAChEC,EAAU,OAAO,WAAW,IAAM,CAC9BD,EAAqB,QAAQ,UAAU,OAAO,qBAAqB,EACnEC,EAAU,MACb,EAAE,GAAI,CACnB,CAAS,EACMD,CACV,CACL,CACA,MAAMtH,GAAkB,GACjB,MAAMsD,CAAa,CACtB,qBACA,SACAkE,GAAY,GACZC,GACA,YAAYvE,EAAcwE,EAAYnK,EAAmB,CACrD,KAAK,qBAAuB2F,EAC5B,KAAK,SAAW,GAChB,KAAKsE,GAAYjK,GAAqB,GAClCmK,GAAcxE,aAAwB,cACtC,KAAKuE,GACDtc,GAAuB,KAAKqc,GAAY,gBAAkB,iBAAkB,2BAA2B,EAC3GtE,EAAa,UAAU,OAAO,gBAAiB,CAAC,KAAKsE,EAAS,EAC9DG,GAAyBzE,EAAc,KAAKsE,EAAS,EACrDtE,EAAa,YAAY,KAAKuE,EAAK,EAEnCvE,EAAa,SAAW,GACxBA,EAAa,iBAAiB,QAAS,IAAM,KAAK,OAAO,CAAC,KAAKsE,EAAS,EAAG,EAAK,EAEvF,CACD,OAAOI,EAAQ,CACP,CAAC,KAAK,sBAAwB,CAAC,KAAKH,KAGxC,KAAK,qBAAqB,UAAU,OAAO,gBAAiB,CAACG,CAAM,EACnE,KAAKH,GAAM,KAAOG,EAAS,gBAAkB,iBAC7CD,GAAyB,KAAK,qBAAsBC,CAAM,EAC1D,KAAKJ,GAAYI,EACjB,KAAK,SAAS,QAAQz6B,GAAWA,EAAQ,QAAQ,UAAU,OAAO,SAAU,CAACy6B,CAAM,CAAC,EACvF,CACD,OAAO,sBAAsBzD,EAAY0D,EAAgB,CACrD,MAAMC,EAAmB,SAAS,cAAc,KAAK,EACrDA,EAAiB,UAAY,oBAC7BA,EAAiB,aAAa,QAAS,GAAGC,GAA4B,YAAY,CAAC,EAAE,EACrF,MAAMC,EAAuBH,EAAiB,IAAIA,CAAc,IAAM,GAChEI,EAAmB,GAAG9D,CAAU,GAAG6D,CAAoB,GAC7D,OAAAF,EAAiB,YAAc98B,EAAWH,EAAU,eAAgB,CAAE,IAAKo9B,CAAgB,CAAE,EACtF,IAAI3E,EAAawE,CAAgB,CAC3C,CACD,aAAa,+BAA+B3D,EAAY0D,EAAgBngC,EAAM,CAC1E,MAAMogC,EAAmB,SAAS,cAAc,KAAK,EACrDA,EAAiB,UAAY,oBAC7BA,EAAiB,aAAa,QAAS,GAAGC,GAA4B,sBAAsB,CAAC,EAAE,EAC/F,MAAMC,EAAuBH,EAAiB,IAAIA,CAAc,IAAM,GAChEI,EAAmB,GAAG9D,CAAU,GAAG6D,CAAoB,GAC7D7uB,EAA2B2uB,EAAkB98B,EAAWH,EAAU,uBAAwB,CAAE,IAAKo9B,CAAkB,CAAA,CAAC,EACpH,MAAM74B,EAAO,MAAM84B,GAA2B,QAAQxgC,EAAM,CACxD,qBAAsB,GACtB,QAAS,MACrB,CAAS,EACD,OAAAogC,EAAiB,YAAY14B,CAAI,EAC1B,IAAIk0B,EAAawE,CAAgB,CAC3C,CACD,OAAO,gCAAgCvK,EAAmB,CACtD,MAAMuK,EAAmB,SAAS,cAAc,KAAK,EAC/C3J,EAAQ,IAAImF,EAAawE,EAAkB,GAAMvK,CAAiB,EACxE,OAAAuK,EAAiB,UAAY,oBAC7BA,EAAiB,YAAY,SAAS,eAAetmB,EAAgC,CAAC,EAC/E2c,CACV,CACD,OAAO,qBAAqBgK,EAAe,CACvC,MAAML,EAAmB,SAAS,cAAc,KAAK,EACrD,OAAAA,EAAiB,UAAY,oBAC7BA,EAAiB,aAAa,QAAS,GAAGC,GAA4B,WAAW,CAAC,EAAE,EACpFD,EAAiB,YAAc,cAAcK,CAAa,GACnD,IAAI7E,EAAawE,CAAgB,CAC3C,CACD,OAAO,iCAAiC7+B,EAAM,CAC1C,MAAM6+B,EAAmB,SAAS,cAAc,KAAK,EACrD,OAAAA,EAAiB,UAAY,oBAC7BA,EAAiB,YAAc,wBAAwB7+B,CAAI,GACpD,IAAIq6B,EAAawE,CAAgB,CAC3C,CACD,OAAO,uBAAuBM,EAAiB,CAC3C,MAAMN,EAAmB,SAAS,cAAc,KAAK,EACrD,OAAAA,EAAiB,UAAY,oBAC7BA,EAAiB,aAAa,QAAS,GAAGC,GAA4B,cAAc,CAAC,EAAE,EACvFD,EAAiB,YAAc,iBAAiBM,CAAe,GACxD,IAAI9E,EAAawE,CAAgB,CAC3C,CACD,aAAa,yBAAyBpgC,EAAM,CACxC,MAAMogC,EAAmB,SAAS,cAAc,KAAK,EACrDA,EAAiB,UAAY,oBAC7BA,EAAiB,aAAa,QAAS,GAAGC,GAA4B,WAAW,CAAC,EAAE,EACpF5uB,EAA2B2uB,EAAkB98B,EAAWH,EAAU,cAAc,CAAC,EACjF,MAAMuE,EAAO,MAAM84B,GAA2B,QAAQxgC,EAAM,CACxD,qBAAsB,GACtB,QAAS,MACrB,CAAS,EACD,OAAAogC,EAAiB,YAAY14B,CAAI,EAC1B,IAAIk0B,EAAawE,CAAgB,CAC3C,CACD,OAAO,iBAAiB5S,EAAM,CAC1B,MAAM4S,EAAmB,SAAS,cAAc,KAAK,EACrDA,EAAiB,UAAY,oCAC7BA,EAAiB,aAAa,QAAS,GAAGC,GAA4B,OAAO,CAAC,EAAE,EAChF5uB,EAA2B2uB,EAAiB,YAAY,KAAK,EAAG98B,EAAWH,EAAU,KAAK,CAAC,EAC3F,MAAM+4B,EAAS1O,EAAK,OACpB,GAAI,CAAC0O,EAAO,QAAU1O,EAAK,SAAW,aAA4D,CAC9F,MAAMjsB,EAAOisB,EAAK,SAAW,aAA6D,yBACtF,wBACJ/b,OAAAA,EAA2B2uB,EAAiB,YAAY,KAAK,EAAG7+B,CAAI,EAC7D,IAAIq6B,EAAawE,CAAgB,CAC3C,CACD,MAAMO,EAAYP,EAAiB,YAAY,QAAQ,EACvDO,EAAU,UAAY,OACtBA,EAAU,MAAQr9B,EAAWH,EAAU,kBAAkB,EACzD,MAAM5B,EAAO26B,EAAO,IAAIrqB,GAASE,GAAsB,kBAAkBF,EAAM,IAAI,CAAC,EAAE,KAAK,GAAG,EAC9F,OAAA8uB,EAAU,YAAcp/B,EACxBo/B,EAAU,QAAU,IAAM1D,GAA0B,SAAQ,EAAG,YAAY17B,CAAI,EACxE,IAAIq6B,EAAawE,CAAgB,CAC3C,CACD,cAAe,CACX,IAAIQ,EAAuB,GACvBC,EAAqB,EACzB,UAAWp7B,KAAW,KAAK,SACvBo7B,GAAsBp7B,EAAQ,eAAiB,EAAI,EACnDm7B,EAAuBn7B,EAAQ,aAAc,GAAIm7B,EAErD,OAAI,KAAK,sBACL,KAAK,qBAAqB,UAAU,OAAO,SAAU,CAACA,CAAoB,EAEvEC,CACV,CACD,cAAe,CACX,OAAO,KAAK,oBACf,CACL,CACO,MAAMlF,EAAoB,CAC7B,UACA,SACA,MACA,aAAc,CACV,KAAK,UAAY,GACjB,KAAK,SAAW,GAChB,KAAK,MAAQ,EAChB,CACD,SAAU,CACN,KAAK,UAAY,EACpB,CACD,SAASmF,EAAI,CACT,GAAI,KAAK,UACL,OAEJ,MAAMC,EAAU,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC7C,KAAK,MAAM,KAAK,CAAE,GAAAH,EAAI,QAAAE,EAAS,OAAAC,CAAM,CAAE,CACnD,CAAS,EACD,KAAK,SAAS,KAAKF,CAAO,EAC1B,KAAK,qBAAmC,GAAG,CAC9C,CACD,qBAAqBlB,EAAS,CAC1B,OAAO,oBAAoB,IAAM,CAC7B,MAAMqB,EAAO,KAAK,MAAM,MAAK,EAC7BC,GAAyBD,CAAI,EAC7B,GAAI,CACK,KAAK,WACNA,EAAK,GAAE,EAEXA,EAAK,QAAO,CACf,OACME,EAAK,CACRF,EAAK,OAAOE,CAAG,CAClB,CACb,EAAW,CAAE,QAAAvB,CAAO,CAAE,CACjB,CACD,WAAY,CACR,OAAO,QAAQ,IAAI,KAAK,QAAQ,CACnC,CACL,CACO,SAASwB,GAAgBC,EAAY,CACxC,MAAO,IAAIA,EAAW,WAAW,IAAM,KAAM,CAAC,GAClD,CACO,MAAM3a,WAA0B4a,EAAyB,CAC5D,aACA,eACA,2BACA,yBACA,YACA,cACA,aACA,YAAY99B,EAAaukB,EAAewZ,EAAc,CAAA,EAAI,CAEtD,QACA,KAAK,WAAW,KAAK,yBAAyB,KAAK,IAAI,EAAGC,EAA+B,EACzF,MAAM/wB,EAAc/G,IACpB,KAAK,aAAeA,EAA6B,EAAC,qBAAqBlG,EAAY,SAAS,IAAI,EAChG,KAAK,eAAiB,GACtB,MAAMzD,EAAOyD,EAAY,OACzB,GAAIukB,EACA,KAAK,eAAiBtX,EAAY,gBAC9B1Q,GAAQ,CAACA,EAAK,cACd,KAAK,eAAiB,KAAK,eAAe,OAAOyP,GAAY,CAACiB,EAAY,cAAcjB,CAAQ,CAAC,WAIrG,KAAK,eAAiB,CAAC,GAAG+xB,EAAa,GAAG9wB,EAAY,kBAAkBjN,EAAY,SAAS,IAAI,CAAC,EAC9FzD,GAAQ0Q,EAAY,qBAAqBjN,EAAY,SAAS,IAAI,EAAG,CACrE,MAAMwS,EAAejW,EAAK,SAAQ,EAAG,SAAU,EAAC,UAAS,EAAG,IAAIyW,GAAQ4qB,GAAgB5qB,EAAK,cAAa,CAAE,CAAC,EAC7G,KAAK,eAAe,QAAQ,GAAGR,CAAY,CAC9C,CAmBL,GAdA,KAAK,2BAA6B,KAIlC,KAAK,yBAA2B,KAChC,KAAK,YAAcxS,EACnB,KAAK,cAAgBukB,EACrB,KAAK,aAAevkB,EAAY,cAAa,EAAG,sBAAsBA,EAAY,SAAS,UAAU,EACjG,KAAK,aAAa,OAAS,IAC3B,KAAK,aAAa,KAAK62B,EAA+C,EAGtE,KAAK,aAAa,OAElB,CAACtS,IACD,KAAK,sCAAqC,EAEtCvkB,GAAeA,EAAY,cAAc,CACzC,MAAMi+B,EAAej+B,EAAY,aAAa,YACxCk+B,EAAYC,KAAwB,MAAQ,OAC5CC,EAAcD,KAAwB,SAAW,MACnDF,IAAiB,OACbA,EAAa,MAAM,iBAAiB,EACpC,KAAK,SAASp+B,EAAWH,EAAU,oCAAqC,CAAE,IAAKw+B,EAAW,IAAKE,CAAW,CAAE,CAAC,EAExGH,EAAa,MAAM,KAAK,GAC7B,KAAK,SAASp+B,EAAWH,EAAU,wCAAyC,CAAE,IAAKw+B,EAAW,IAAKE,CAAW,CAAE,CAAC,EAG5H,CAER,CACD,UAAU9iC,EAAO,CACb,MAAMgoB,EAAgBhoB,EACtB,OAAQgoB,EAAc,IAAG,CACrB,IAAK,UACL,IAAK,YACL,IAAK,SACL,IAAK,WACD,GAAI,CAAC,KAAK,oBAAmB,GAAM,KAAK,wBAAwBA,CAAa,EAAG,CAC5EA,EAAc,eAAc,EAC5B,MACH,CACD,MACJ,IAAK,QACD,GAAIA,EAAc,SACd,OAGJ,KAAK,cAAa,EAClBA,EAAc,eAAc,EAC5B,OACJ,IAAK,IACD,GAAI,KAAK,cAAe,CAGpB,KAAK,cAAa,EAClBA,EAAc,eAAc,EAC5B,MACH,CACR,CACD,MAAM,UAAUA,CAAa,CAChC,CACD,aAAahoB,EAAO,CAChB,GAAI,KAAK,wBAAwBA,CAAK,EAAG,CACrCA,EAAM,QAAQ,EAAI,EAClB,MACH,CACD,MAAM,aAAaA,CAAK,CAC3B,CACD,eAAgB,CACZ,YAAK,mBAAkB,EAEhB,EACV,CACD,wBAAwBA,EAAO,CAC3B,SAAS+iC,EAAcC,EAAgBC,EAAoB,CAEnD,KAAK,YAAY,aAAe,KAAK,YAAY,cAC5C,KAAK,YAAY,eAAe,KAAK,YAAY,YAAY,YAAc,KAAO,KAAK,YAAY,aAAa,YAAa,EAAK,CAE9I,CACD,SAASC,EAAoBC,EAAQC,EAAQC,EAAQ,CACjD,OAAID,IAAW,GAAK,CAACC,EAAO,QACxBz4B,EAA2B,EAAG,iBAAiB,KAAK,YAAY,SAAS,IAAI,GAC7E,CAAC,KAAK,YAAY,SAAS,MAAM,cAAc,WAAW,OAAO,IACjEy4B,EAAS,MAENF,EAASC,EAASC,CAC5B,CAED,MAAI,IAAC,KAAK,eAAiB,KAAK,YAAY,cACxCC,GAA2CtjC,EAAO,KAAK,YAAY,aAAc+iC,EAAc,KAAK,IAAI,EAAG,KAAK,kBAAkB,KAAK,IAAI,EAAGG,EAAoB,KAAK,IAAI,CAAC,EAInL,CACD,kBAAkBK,EAAM,CACpB,OAAKA,GAGLA,EAAOA,EAAK,cACL,KAAK,eAAe,QAAQA,CAAI,IAAM,IAAMA,EAAK,WAAW,IAAI,GAH5D,EAId,CACD,MAAM,yBAAyBC,EAAY3O,EAAO4O,EAAO,CACrD,MAAMC,EAAa7O,EAAM,cACnB8O,EAAkB,CAAC,KAAK,eAAiBH,EAAW,KAAM,EAAC,SAAS,MAAM,EAChF,GAAI,CAAC3O,GAAS,CAAC4O,GAAS,CAACE,IAAoB,KAAK,eAAiBH,GAC/D,OAAO,QAAQ,QAAQ,CAAA,CAAE,EAE7B,MAAMI,EAAgB,CAAA,EAChBC,EAAkB,CAAA,EACnBF,IACD,KAAK,eAAe,QAAQG,GAAcC,EAAkB,KAAK,KAAMD,EAAY,EAAK,CAAgB,EAEpG,KAAK,eACLl5B,EAA2B,EAAG,WAAY,EAAC,QAAQ,CAACo5B,EAAmBC,IAAU,CAE7E,GADcA,EAAM,YAAa,EAAC,QAAQP,CAAU,IACtC,EACV,OAEJ,MAAMQ,EAAc,CAChB,KAAMD,EACN,SAAUr5B,EAA2B,EAAG,oBAAoBq5B,CAAK,EACjE,mBAAoB,EAC5C,EAC0BE,EAA0B,CAC5B,KAAMH,EACN,SAAUp5B,EAA2B,EAAG,oBAAoBo5B,CAAiB,EAC7E,SAAU,KAAKC,CAAK,GACpB,mBAAoB,EAC5C,EAGoBL,EAAc,KAAKM,EAAaC,CAAuB,CAC3E,CAAiB,GAGT,MAAMljC,EAAO,KAAK,YAAY,KAAI,EAC9B,KAAK,eAAiBA,GACG2J,EAA6B,EAAC,iBAAiB3J,EAAK,UAAS,CAAE,EACvE,QAAQmjC,GAAUL,EAAkB,KAAK,KAAMK,EAAQ,GAAsB,EAAI,CAAiB,GAEnH,KAAK,eAAiBT,IACtB,KAAK,aAAa,QAAQ9oB,GAAYkpB,EAAkB,KAAK,KAAMlpB,EAAU,EAAI,CAAgB,EAErG,MAAMwpB,EAAUT,EAAc,OAAOC,CAAe,EAChD,CAAC,KAAK,eAAiB,CAACQ,EAAQ,QAAUxP,EAAM,OAAS,GAAK,aAAa,WAAW6O,CAAU,GAChGW,EAAQ,KAAK,CACT,KAAM,aACN,MAAO,OACP,SAAU,OACV,SAAU,OACV,YAAa,OACb,iBAAkB,OAClB,eAAgB,OAChB,cAAe,OACf,YAAa,MAC7B,CAAa,EAEL,MAAMC,EAAkBzP,EAAM,QAAQ,IAAK,EAAE,EAC7C,GAAIyP,GAAoBA,IAAoBA,EAAgB,YAAa,EACrE,QAASpzB,EAAI,EAAGA,EAAImzB,EAAQ,OAAQ,EAAEnzB,EAC7BmzB,EAAQnzB,CAAC,EAAE,KAAK,WAAW,IAAI,IAChCmzB,EAAQnzB,CAAC,EAAE,KAAOmzB,EAAQnzB,CAAC,EAAE,KAAK,eAI9C,UAAWrP,KAAUwiC,EAAS,CAC1B,GAAIV,EAAiB,CACjB9hC,EAAO,MAAQA,EAAO,KACtBA,EAAO,MAAQ,IACf,QACH,CACD,MAAM0iC,EAAc35B,EAA6B,EAAC,eAAe,KAAK,YAAY,KAAM/I,EAAO,IAAI,EAC/F,CAAC,KAAK,eAAiB0iC,IACvB1iC,EAAO,MAAQA,EAAO,KACtBA,EAAO,KAAO0iC,EAAY,KAC1B1iC,EAAO,eAAiB,CAAE,YAAa0iC,EAAY,YAAa,UAAWA,EAAY,WAE9F,CACD,MAAMC,EAAuB,SAAY,CACrC,GAAI,CAACvjC,GAAQ,KAAK,2BACd,OAEJ,KAAK,2BAA6B,MAAMA,EAAK,SAAQ,EAAG,SAAQ,EAAG,iBAAiBA,EAAK,EAAE,EAC3F,MAAMqM,EAAarM,EAAK,WACpBqM,IACA,KAAK,yBAA2B,MAAMA,EAAW,SAAQ,EAAG,SAAQ,EAAG,iBAAiBA,EAAW,EAAE,EAErH,EACQ,UAAWzL,KAAUwiC,EAAS,CAC1B,MAAMG,EAAoB,EAS1B,MAAMC,EAAWC,GAAoD,KAAK,cAAgB7iC,EAAO,KAAO,GAAG,KAAK,YAAY,SAAS,IAAI,KAAKA,EAAO,IAAI,GAAI,KAAK,2BAA4B,KAAK,wBAAwB,EAC3N,GAAI,CAAC4iC,EACD,SAEJ,MAAME,EAAO,IAAI9e,GACXiW,EAAQ,SACR8I,EAAS,SACfD,EAAK,KAAO,CACR,SAAUF,EAAS,SACnB,MAAA3I,EACA,OAAA8I,EACA,MAAO,qBACvB,EACYD,EAAK,MAAM,UAAY,UAAUF,EAAS,MAAM,cAAcA,EAAS,OAAS,GAAG,KAAKA,EAAS,OAAS,GAAG,IAC7GE,EAAK,MAAM,UAAYC,EACvBD,EAAK,MAAM,SAAW7I,EACtBj6B,EAAO,YAAc8iC,CACxB,CACD,OAAI,KAAK,cAAgB,CAAC,KAAK,eAC3BN,EAAQ,KAAK,CAAC56B,EAAGC,IACTD,EAAE,oBAAsBC,EAAE,mBACnB,EAEJD,EAAE,mBAAqB,GAAK,CACtC,EAEE,QAAQ,QAAQ46B,CAAO,EAC9B,SAASN,EAAkBD,EAAYjpB,EAAUgqB,EAAW,CACxD,MAAMnlB,EAAQokB,EAAW,YAAa,EAAC,QAAQJ,CAAU,EACnD7hC,EAAS,CACX,KAAMiiC,EACN,MAAO,OACP,SAAU,OACV,SAAU,OACV,YAAa,OACb,iBAAkB,OAClB,eAAgB,OAChB,cAAe,OACf,YAAa,OACb,mBAAoB,EACpC,EACY,GAAIjpB,EAAU,CACV,MAAMV,EAAgB,KAAK,YAAY,cAAa,EAAG,mBAAmB,KAAK,YAAY,SAAS,WAAY2pB,CAAU,EAC1H,GAAI3pB,EAAe,CACf,MAAMnU,EAAQF,GAAmBqU,EAAc,KAAK,EAChDnU,GACAnE,EAAO,iBAAmBijC,EAAoB,KAAK,KAAM9+B,CAAK,EAC9DnE,EAAO,mBAAqB,IAG5BA,EAAO,iBAAmBkjC,EAA8B,KAAK,KAAM5qB,EAAc,KAAK,CAE7F,CACJ,CACG0qB,IACAhjC,EAAO,cAAgB,IAEvB6d,IAAU,GACV7d,EAAO,SAAW,KAAK,cAAgB+I,EAA2B,EAAG,oBAAoBk5B,CAAU,EAAI,EACvGF,EAAc,KAAK/hC,CAAM,GAEpB6d,EAAQ,IACbmkB,EAAgB,KAAKhiC,CAAM,CAElC,CACD,SAASijC,EAAoB9+B,EAAO,CAChC,MAAMtF,EAAS,IAAI8b,GACnB,OAAA9b,EAAO,YAAYsF,CAAK,EACxBtF,EAAO,MAAM,cAAgB,OACtBA,CACV,CACD,SAASqkC,EAA8B5qB,EAAe,CAClD,MAAM6qB,EAAkB,SAAS,cAAc,MAAM,EACrD,OAAAA,EAAgB,UAAY,sBAC5BA,EAAgB,YAAc,GAAG7qB,CAAa,GAC9C6qB,EAAgB,MAAM,SAAW,QACjCA,EAAgB,MAAQ,GAAG7qB,CAAa,GACjC6qB,CACV,CACJ,CACL,CACO,SAASC,GAAkBC,EAAO,CAErC,MAAMC,EAAsB,mDAC5B,OAAOD,EAAM,QAAQC,EAAqB,CAACC,EAAGC,EAAIC,IAAO,CACrD,GAAIA,EACA,OAAOA,EAGX,MAAMC,EAAY,SAASF,EAAI,EAAE,EAEjC,MADoB,QAAUE,GAAaA,GAAa,OACrCA,IAAc,GAAUA,EAAY,QAC5C,IAEJ,OAAO,cAAcA,CAAS,CAC7C,CAAK,CACL,CACO,SAAShG,GAAsBiG,EAAS,CAC3C,MAAMr8B,EAAM,IAAI,IAAIq8B,CAAO,EAC3B,OAAIr8B,EAAI,OACG,GAAGA,EAAI,MAAM,GAAGA,EAAI,QAAQ,GAAGA,EAAI,OAAO,WAAW,KAAM,MAAM,CAAC,GAAGA,EAAI,IAAI,GAEjFA,EAAI,UACf,CACO,IAAAs8B,GAAA,KAAqB,CACxB,aAAankB,EAAUokB,EAAU,CAC7B,OAAQA,EAAQ,CACZ,IAAK,0BACDv/B,OAAAA,EAAiB,YAAY2U,GAAwB,iBAAiB,EACjEgJ,GAAkB,WAAW,wCAC3B,EAEd,CACD,MAAO,EACV,CACL,EACIrQ,GACGkyB,GAAA,MAAMryB,EAAe,CACxB,OACA,aAAc,CACV,KAAK,OAASgc,GAAmB,wBAAwB,yBAAyB,EAClF,KAAK,OAAO,iBAAiB,EAAI,EACjC,IAAIsW,GAA+B,KAAK,OAAO,QAAS,KAAK,YAAY,KAAK,IAAI,CAAC,EACnF1/B,EAAmB,SAAU,EAAC,wBAAwBsB,EAAsBq+B,EAAc,KAAK,IAAI,CAAC,EACpGA,EAAc,KAAK,IAAI,EACvB,SAASA,GAAgB,CACrB,IAAI5kC,EAAOiF,EAAmB,SAAU,EAAC,OAAOsB,CAAoB,EACpEvG,EAAOA,EAAOA,EAAK,uBAAsB,EAAK,KAC9C,KAAK,OAAO,WAAW,EAAQA,CAAK,CACvC,CACJ,CACD,OAAO,SAASsS,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAACE,IAA0BD,KAC3BC,GAAyB,IAAIH,IAE1BG,EACV,CACD,YAAYzT,EAAO,CACf8jB,GAAkB,SAAQ,EAAG,qBAAqB9jB,CAAK,CAC1D,CACD,MAAO,CACH,OAAO,KAAK,MACf,CACL,+TCp1DMoE,GAAY,CAKd,gBAAiB,6BAKjB,iBAAkB,6BACtB,EACMC,GAAOC,EAA4B,sCAAuCF,EAAS,EACnFG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EACpE,SAASyhC,GAAiBp2B,EAAOq2B,EAAO,CACpC,MAAMlkC,EAAS,CAAC,GAAG6N,CAAK,EACxB,OAAIs2B,GAAoCt2B,EAAOq2B,CAAK,GAChDlkC,EAAO,KAAK,SAAS,eAAe,GAAG,CAAC,EAE5CA,EAAO,KAAK,GAAGkkC,CAAK,EACblkC,CACX,CACO,MAAM8e,EAAiB,CAC1B,IACA,UACA,cACA,YACA,QACA,YAAY3V,EAAK4Z,EAAWqhB,EAAe7qB,EAAayG,EAAU,CAAE,SAAU,IAAS,CACnF,KAAK,IAAM7W,EACX,KAAK,UAAY4Z,EACjB,KAAK,cAAgBqhB,EACrB,KAAK,YAAc7qB,EACnB,KAAK,QAAUyG,CAClB,CACD,WAAWqkB,EAASC,EAAS,CACzB,GAAI,KAAK,YAAa,CAClB,MAAMC,EAAW,KAAK,YAAY,IAAIF,CAAO,EACxCE,EAIDA,EAAS,KAAKD,CAAO,EAHrB,KAAK,YAAY,IAAID,EAAS,CAACC,CAAO,CAAC,CAK9C,CACJ,CACL,OACO,MAAM5sB,WAAiB8sB,EAAiC,CAC3DC,GACAC,GAAU,CAAA,EACVtnB,GACA,YAAYjU,EAAK4Z,EAAWqhB,EAAe7qB,EAAayG,EAAS,CAC7D,MAAM7W,CAAG,EACT,KAAKs7B,GAAiBL,EACtB,KAAKhnB,GAAW,IAAI0B,GAAiB,KAAK,IAAKiE,EAAW,KAAK0hB,GAAgBlrB,EAAayG,CAAO,CACtG,CACD,OAAO,OAAO2kB,EAAavtB,EAAS,CAChC,GAAI,CAAC,MAAM,QAAQutB,CAAW,EAC1B,OAAO,KAAK,OAAO,CAACA,CAAW,EAAGvtB,CAAO,EAE7C,MAAMmC,EAAc,IAAIqrB,GAGxB,MAAO,CAAE,MAFSD,EAAY,IAAIvlC,GAAQ,KAAK,wBAAwBgY,EAAQ,IAAI,QAAQhY,CAAI,EAAGgY,EAAQ,UAAWA,EAAQ,cAAemC,EAAanC,EAAQ,OAAO,CAAC,EACjJ,IAAIhY,GAAQA,EAAKslC,EAAO,EAAE,OAAOT,EAAgB,EACzD,YAAA1qB,EACnB,CACD,OAAO,WAAWorB,EAAavtB,EAAS7I,EAAQ,CAC5C,KAAM,CAAE,MAAAV,EAAO,YAAA0L,CAAa,EAAG,KAAK,OAAOorB,EAAavtB,CAAO,EAC/D,OAAI7I,EAAO,WAAa41B,GAAoC,CAAC51B,EAAO,SAAS,EAAGV,CAAK,GACjFU,EAAO,YAAY,SAAS,eAAe,GAAG,CAAC,EAEnDV,EAAM,IAAIjE,GAAK2E,EAAO,YAAY3E,CAAC,CAAC,EAC7B,CAAE,MAAAiE,EAAO,YAAA0L,EACnB,CACD,qBAAqBsrB,EAAQC,EAAQ,CACpC,CACD,MAAM,CAAE,KAAA1lC,GAAQ,CACZ,MAAM6N,EAAQ,KAAKw3B,GAAe,SAASrlC,CAAI,EACzC2lC,EAAW93B,GACb,KAAKmQ,GAAS,UAAU,IAAInQ,EAAM,WAAW,EACjD,GAAI83B,GAAY93B,aAAiB+3B,GAAiC,CAC9D,MAAMC,EAASF,EAAWA,EAAS,OAAO93B,EAAO,KAAKmQ,EAAQ,EAAInQ,EAAM,SACxE,YAAK,qBAAqBg4B,EAAQh4B,CAAK,EACvC,KAAKy3B,GAAUT,GAAiB,KAAKS,GAASO,CAAM,EAC7C,EACV,CACD,MAAO,EACV,CACD,OAAO,kBAAkBtkC,EAAM,CAC3B,MAAMgqB,EAAc,SAAS,cAAc,MAAM,EACjD,OAAAA,EAAY,aAAa,QAAS,GAAGua,GAAiB,EAAG,MAAM,CAC3D,OAAQ,GACR,QAAS,wFACrB,CAAS,CAAC,EAAE,EACJ1hB,GAAsBmH,EAAajoB,GAAWH,GAAU,gBAAiB,CAAE,IAAK5B,CAAM,CAAA,CAAC,EACvFgqB,EAAY,UAAY,sBACxBA,EAAY,YAAchqB,EAC1BgqB,EAAY,UAAS,EACdA,CACV,CASD,OAAO,mBAAmB7lB,EAAc0c,EAAeuB,EAAW,CAC9D,MAAMzG,EAAe,SAAS,cAAc,MAAM,EAClDA,EAAa,aAAa,QAAS,GAAG6oB,GAAmB,EAAG,MAAM,CAC9D,OAAQ,GACR,QAAS,wFACrB,CAAS,CAAC,EAAE,EACJ3hB,GAAsBlH,EAAc5Z,GAAWH,GAAU,iBAAkB,CAAE,IAAKif,CAAe,CAAA,CAAC,EAClGlF,EAAa,UAAY,QACzB,MAAMnT,EAAMP,GAA0C9D,EAAc0c,CAAa,EACjF,GAAI,CAACrY,EACD,OAAAmT,EAAa,YAAY,SAAS,eAAekF,CAAa,CAAC,EACxDlF,EAEX,MAAM8oB,EAAW,CAAA,EACXC,EAAc,IAAI,IACxB,UAAWN,KAAYhiB,EAAW,CAC9B,MAAMuiB,EAAUP,EAAS,UACzBK,EAAS,KAAKE,CAAO,EACrBD,EAAY,IAAIC,EAAQ,UAAWP,CAAQ,CAC9C,CACD,MAAMX,EAAgBxlB,GAA2C,KAAKzV,EAAKi8B,CAAQ,EACnFj8B,EAAI,cAAc,QAAQS,GAAKw6B,EAAc,UAAUx6B,CAAC,CAAC,EACzD,MAAMwN,EAAU,IAAI0H,GAAiB3V,EAAKk8B,EAAajB,CAAa,EACpE,OAAA1sB,GAAS,OAAO,CAACvO,EAAI,KAAM,GAAGA,EAAI,aAAa,EAAGiO,CAAO,EAAE,MAAM,QAAQhY,GAAQkd,EAAa,YAAYld,CAAI,CAAC,EAC/Gkd,EAAa,UAAS,EACfA,CACV,CACL,EACO,MAAM0G,EAAY,CACrB,KACA,KACA,YAAY4J,EAAMxtB,EAAM,CACpB,KAAK,KAAOwtB,EACZ,KAAK,KAAOxtB,CACf,CACD,OAAO6N,EAAO,CACV,MAAM3F,EAAM87B,GAAkBn2B,EAAM,GAAG,EACjC5L,EAAY,SAAS,yBAC3BwP,EAA2BxP,EAAW,MAAM,EAC5C,IAAIkkC,EAAU,KACV,KAAK,MAAQ,KAAK,KAAK,YAAW,EAClCA,EAAUC,GAA2B,YAAY,KAAK,KAAK,YAAW,EAAIl+B,CAAG,EAExE,KAAK,OACVi+B,EAAU,KAAK,KAAK,WAAWj+B,CAAG,GAEtC,MAAMR,EAAOJ,GAAoB,YAAY+wB,GAA+B,WAAW8N,GAAWj+B,EAAK,CACnG,KAAMA,EACN,aAAc,GAKd,kBAAmB,GACnB,iBAAkB,GAClB,iBAAkB,CAC9B,CAAS,EAAGi+B,GAAWj+B,CAAG,EAClB,OAAAjG,EAAU,YAAYyF,CAAI,EAC1B+J,EAA2BxP,EAAW,GAAG,EAClC,CAACA,CAAS,CACpB,CACD,SAAU,CACN,OAAO,IAAI2I,EACd,CACL,CACO,MAAMiZ,EAAe,CACxB,OAAOhW,EAAO,CACV,MAAM5F,EAAU,SAAS,cAAc,MAAM,EAC7C,OAAAA,EAAQ,UAAY4F,EAAM,KAC1BlK,GAAmB,QAAQsE,EAAS+7B,GAAkBn2B,EAAM,IAAI,CAAC,EAC1D,CAAC5F,CAAO,CAClB,CACD,SAAU,CACN,OAAO,IAAI+E,EACd,CACL,qKCjJM,CAAE,KAAAnN,EAAM,EAAGC,GACXqD,GAAY,CAMd,QAAS,WAKT,MAAO,QAKP,mBAAoB,uBAKpB,yBAA0B,8BAK1B,gBAAiB,mBACrB,EACMC,GAAOC,EAA4B,yCAA0CF,EAAS,EACtFG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EAc9DijC,GAAwB,IAAI,IAClC,SAASC,GAAuBtmC,EAAM0F,EAAc0c,EAAe,CAC/D,MAAMmkB,EAAW7gC,EAAe,IAAM0c,EAChCokB,EAAiBH,GAAsB,IAAIE,CAAQ,EACzD,GAAIC,EACA,OAAOA,EAEX,MAAMjlC,EAAO+W,EAAS,kBAAkB5S,CAAY,EACpDnE,EAAK,KAAO,OACZ,MAAMqD,EAAQ0T,EAAS,mBAAmB5S,EAAc0c,EAAe,CAAC,IAAI1J,GAAiB,IAAIkL,GAAY,KAAM5jB,CAAI,EAAG,IAAI6jB,EAAgB,CAAC,EAC/I,OAAAjf,EAAM,KAAO,QACbyhC,GAAsB,IAAIE,EAAU,CAAE,KAAAhlC,EAAM,MAAAqD,CAAO,CAAA,EAC5C,CAAE,KAAArD,EAAM,MAAAqD,EACnB,CAKA,MAAM6hC,GAAwB,CAACzmC,EAAM0F,EAAc0c,EAAeskB,EAAW1kB,EAAW2kB,EAAgBC,IAAkB,CACtH,KAAM,CAAE,KAAArlC,EAAM,MAAAqD,CAAO,EAAG0hC,GAAuBtmC,EAAM0F,EAAc0c,CAAa,EAEhF,OAAOviB;AAAA,qBACU6mC,CAAS;AAAA,qBACT1kB,CAAS;AAAA,yBACL4kB,CAAa;AAAA,8BACP7nC,GAAU,CAC7B4nC,GACAE,GAAiBF,EAAgB5nC,CAAK,CAElD,CAAK;AAAA,YACOwC,CAAI;AAAA,YACJqD,CAAK;AAAA,0CAGjB,EACMkiC,GAAqB,CAAC9mC,EAAMyP,EAAUs3B,EAAsBziC,EAAeqqB,IAAc,CAC3F,MAAMqY,EAAQ,IAAIC,GACZ/pB,EAAe5E,EAAS,mBAAmB7I,EAAS,KAAMA,EAAS,MAAO,CAAC,IAAIiJ,GAAiB,IAAIkL,GAAY,KAAM5jB,CAAI,EAAG,IAAI6jB,EAAgB,CAAC,EACxJ3G,EAAa,KAAO,cACpB8pB,EAAM,YAAY9pB,CAAY,EAC9B,MAAMsQ,EAAO/d,EAAS,WAAW,WACjC,IAAIy3B,EACJ,OAAI1Z,IACA0Z,EAAiBla,EAAuB,qBAAqB1oB,EAAeqqB,EAAWnB,CAAI,GAE/FwZ,EAAM,KAAO,CACT,SAAUxZ,EAAOA,EAAK,aAAc,EAAG,gBACvC,OAAQ,CAACuZ,EACT,mBAAoBF,GAAiB,KAAK,KAAMp3B,CAAQ,EACxD,eAAAy3B,CACR,EACWF,CACX,EACA,MAAMtuB,EAAc,CAChB,OAAO7K,EAAOmK,EAAS,CACnB,MAAMjT,EAAQF,GAAmBgJ,EAAM,IAAI,EAC3C,GAAI,CAAC9I,EACD,MAAO,CAAC,SAAS,eAAe8I,EAAM,IAAI,CAAC,EAE/C,MAAMpO,EAAS,IAAI8b,GACnB9b,EAAO,YAAY,EAAI,EACvBA,EAAO,YAAYsF,CAAK,EACxB,MAAMmY,EAAe,SAAS,cAAc,MAAM,EAClD,OAAAA,EAAa,YAAcrP,EAAM,KACjCpO,EAAO,OAAOyd,CAAY,EAC1Bzd,EAAO,iBAAiBia,GAA2C,UAAY3a,GAAU,CACrF,KAAM,CAAE,KAAM,CAAE,MAAAgG,CAAO,CAAA,EAAKhG,EAC5Bme,EAAa,YAAcnY,EAAM,gBAAe,GAAMA,EAAM,UACxE,CAAS,EACDiT,EAAQ,WAAW,QAASvY,CAAM,EAC3B,CAACA,CAAM,CACjB,CACD,SAAU,CACN,OAAO,IAAI4L,EACd,CACL,CACA,MAAMw7B,GAAmB,CAACtQ,EAAax3B,IAAU,CACxCA,IAGAkF,GAAuBsyB,CAAW,EACvCx3B,EAAM,QAAQ,EAAI,EACtB,EACMooC,GAAiB,CAACC,EAAOC,IAAU,CACrC,GAAID,EAAM,WAAW,IAAI,IAAMC,EAAM,WAAW,IAAI,EAChD,OAAOD,EAAM,WAAW,IAAI,EAAI,EAAI,GAExC,GAAIA,EAAM,WAAW,SAAS,IAAMC,EAAM,WAAW,SAAS,EAC1D,OAAOD,EAAM,WAAW,SAAS,EAAI,EAAI,GAE7C,MAAME,EAAa39B,EAA2B,EAAG,sBAAsBy9B,CAAK,EACtEG,EAAa59B,EAA2B,EAAG,sBAAsB09B,CAAK,EAC5E,OAAOG,GAAiCF,EAAYC,CAAU,CAClE,EACO,MAAME,WAA4Br/B,EAAmC,CACxE,mBACA,4CACA,2BACA,MACA,YACA,iBACA,UACA,oBACAs/B,GAAsB,IAAIn2B,GAC1Bo2B,GACA,aAAc,CACV,MAAM,EAAI,EACV,KAAK,eAAe,UAAU,IAAI,sCAAsC,EACxE,KAAK,mBAAqB,IAAIrhC,GAC9B,KAAK,mBAAmB,iBAAiB,uBAA4D,KAAK,OAAQ,IAAI,EACtH,KAAK,4CACD2Z,EAAyB,SAAU,EAAC,cAAc,2CAA4C,EAAK,EACvG,KAAK,4CAA4C,kBAAkB,KAAK,OAAO,KAAK,IAAI,CAAC,EACzF,KAAK,2BAA6BA,EAAyB,SAAU,EAAC,cAAc,wBAAyB,EAAK,EAClH,KAAK,2BAA2B,kBAAkB,IAAM,CACpD,KAAK,OAAM,CACvB,CAAS,EACD,MAAMse,EAAO,KAAK,eAAe,YAAY,MAAO,kCAAkC,EAChFC,EAAU,IAAInQ,GAAmB,sBAAuBkQ,CAAI,EAC5DE,EAAc,IAAIC,GAAyB,OAAW,EAAG,EAAG,OAAW,OAAW,EAAK,EAC7FD,EAAY,iBAAiB,cAAgE,KAAK,gBAAiB,IAAI,EACvHD,EAAQ,kBAAkBC,CAAW,EACrC,KAAK,MAAQA,EACb,KAAK,YAAc,KACnBD,EAAQ,kBAAkB,IAAIoJ,GAAkC,KAAK,4CAA6C,OAAWtkC,GAAWH,GAAU,OAAO,CAAC,CAAC,EAC3Jq7B,EAAQ,kBAAkB,IAAIoJ,GAAkC,KAAK,2BAA4B,OAAWtkC,GAAWH,GAAU,KAAK,CAAC,CAAC,EACxI,KAAK,iBAAmB,KAAK,eAAe,YAAY,MAAO,mBAAmB,EAClF,KAAK,iBAAiB,YAAcG,GAAWH,GAAU,kBAAkB,EAC3E,KAAK,eAAe,YAAY,KAAKukC,EAAmB,EACxD,KAAK,UAAY,IAAIrP,GAA+BwP,EAAa,EACjE,KAAK,oBAAsB,IAAIvgC,GAAoB,KAAK,eAAgBvI,GAAS,CAC7E,MAAM2I,EAAO3I,EAAM,aAAc,EAAC,CAAC,EACnC,OAAI2I,aAAgB,QACTA,EAEJ,IACV,EAAE,IAAM,KAAK,mBAAmB,KAAM,CAAA,EACnB,IAAIS,GAAoB,KAAK,kBAAkB,EACvD,KAAK,KAAK,cAAc,CACvC,CACD,UAAW,CACP,MAAM2/B,EAAW,KAAK,eAAe,YAAc,IACnD,KAAKJ,GAAoB,UAAU,OAAO,kBAAmBI,CAAQ,CACxE,CACD,UAAW,CACP,MAAM,SAAQ,EACd,KAAK,iBAAiB,CAACC,EAA8B,CAAC,CACzD,CACD,MAAM,UAAW,CACb,KAAM,CAACC,EAAY1jC,CAAa,EAAI,MAAM,QAAQ,IAAI,CAAC,KAAK,mBAAmB,mBAAoB,EAAE,KAAK,oBAAmB,CAAE,CAAC,EAChI,GAAI,CAAC0jC,GAAc,CAAC1jC,EAAe,CAC/B,KAAK,iBAAiB,UAAU,OAAO,QAAQ,EAC/C,MACH,CACiC,KAAK,2BAA2B,IAAG,EAEjE,MAAM,KAAK,mBAAmB0jC,EAAY1jC,CAAa,EAGvD,MAAM,KAAK,wBAAwB0jC,EAAY1jC,CAAa,CAEnE,CACD,MAAM,qBAAsB,CACxB,MAAMtE,EAAO,KAAK,mBAAmB,KAAI,EACzC,GAAI,CAACA,GAAQ,CAAC,KAAK,mBAAmB,SAAQ,EAC1C,OAAO,KAEX,MAAMwG,EAAW,KAAK,mBAAmB,SAAQ,EACjD,GAAI,CAACA,EACD,OAAO,KAEX,OAAOA,EAAS,4BAA4BxG,CAAI,EAAE,KAAK86B,EAAe,KAAK,IAAI,CAAC,EAChF,SAASA,EAAex2B,EAAe,CACnC,OAAOA,GAAiBA,EAAc,SAAW,KAAK,mBAAmB,KAAI,EAAKA,EAAgB,IACrG,CACJ,CACD,MAAM,wBAAwB2jC,EAAW3jC,EAAe,CAIpD,GAHA,KAAK,oBAAoB,OACzB,KAAK,UAAU,QAEX,CADa,KAAK,mBAAmB,SAAQ,EAE7C,OAEJ,MAAM4jC,EAAmB,CAAC,GAAGD,EAAU,cAAc,KAAM,CAAA,EAC3DC,EAAiB,KAAKf,EAAc,EACpC,MAAMnnC,EAAOioC,EAAU,KACjBE,EAAiB,KAAK,sBAAsB7jC,CAAa,EACzD8jC,EAAyB,KAAK,8BAA8B9jC,CAAa,EACzE+jC,EAAgB,KAAK,4CAA4C,IAAG,EACpEC,EAAO,CAAA,EACb,UAAW5iC,KAAgBwiC,EAAkB,CACzC,MAAM9lB,EAAgB6lB,EAAU,cAAc,IAAIviC,CAAY,GAAK,GAC7DiL,EAAgBhH,EAA2B,EAAG,sBAAsBjE,CAAY,EAChF6iC,EAAc,CAACH,EAAuB,IAAIz3B,CAAa,EACzD,CAAC03B,GAAiBE,GAAe,CAACC,GAA8B,IAAI9iC,CAAY,GAGhF,CAAC2iC,GAAiB3iC,EAAa,WAAW,IAAI,GAG9CA,IAAiBiL,GAAiByR,IAAkB6lB,EAAU,cAAc,IAAIt3B,CAAa,GAGjG23B,EAAK,KAAK,KAAK,cAAcH,EAAgBziC,EAAc0c,EAAemmB,CAAW,CAAC,CACzF,CACD,MAAME,EAAkB,KAAK,uBAAuBN,EAAgBnoC,EAAMsE,CAAa,EACvF,KAAKqjC,GAAY,CACb,KAAAW,EACA,QAAS,GACT,gBAAAG,CACZ,EACQ,KAAK,uBAAsB,CAC9B,CACD,MAAM,mBAAmBR,EAAW3jC,EAAe,CAC/C,KAAK,oBAAoB,OACzB,KAAK,UAAU,QACf,MAAMkC,EAAW,KAAK,mBAAmB,SAAQ,EACjD,GAAI,CAACyhC,GAAa,CAAC3jC,GAAiB,CAACkC,EAAU,CAC3C,KAAK,iBAAiB,UAAU,OAAO,QAAQ,EAC/C,MACH,CACD,MAAMxG,EAAOioC,EAAU,KACjBE,EAAiB,KAAK,sBAAsB7jC,CAAa,EACzD8jC,EAAyB,KAAK,8BAA8B9jC,CAAa,EACzE+jC,EAAgB,KAAK,4CAA4C,IAAG,EACpEK,EAAuB,IAAI,IAC3BJ,EAAO,CAAA,EACb,SAAW,CAAC5iC,EAAc0c,CAAa,IAAK6lB,EAAU,cAAe,CACjE,MAAMt3B,EAAgBhH,EAA2B,EAAG,sBAAsBjE,CAAY,EAChF6iC,EAAc,CAACH,EAAuB,IAAIz3B,CAAa,EAO7D,GANI,CAAC03B,GAAiBE,GAAe,CAACC,GAA8B,IAAI9iC,CAAY,GAGhF,CAAC2iC,GAAiB3iC,EAAa,WAAW,IAAI,GAG9CA,IAAiBiL,GAAiByR,IAAkB6lB,EAAU,cAAc,IAAIt3B,CAAa,EAC7F,SAEJ,MAAMC,EAAaH,GAAuB/K,CAAY,EACtD,UAAW2K,KAAYO,EACd83B,EAAqB,IAAIr4B,CAAQ,GAClCq4B,EAAqB,IAAIr4B,EAAU,CAAA,CAAE,EAEzCq4B,EAAqB,IAAIr4B,CAAQ,GAAG,KAAK3K,CAAY,CAE5D,CACD,KAAKgiC,GAAoB,iBACzB,UAAWr3B,KAAYH,GAAsB,CACzC,MAAMzO,EAAainC,EAAqB,IAAIr4B,CAAQ,EACpD,GAAI5O,GAAcA,EAAW,OAAS,EAAG,CACrC,MAAMknC,EAAgB,CAAA,EACtB,UAAWjjC,KAAgBjE,EAAY,CACnC,MAAM2gB,EAAgB6lB,EAAU,cAAc,IAAIviC,CAAY,GAAK,GAC7DiL,EAAgBhH,EAA2B,EAAG,sBAAsBjE,CAAY,EAChF6iC,EAAc,CAACH,EAAuB,IAAIz3B,CAAa,EAC7Dg4B,EAAc,KAAK,KAAK,cAAcR,EAAgBziC,EAAc0c,EAAemmB,CAAW,CAAC,CAClG,CACDD,EAAK,KAAK,CAAE,GAAIj4B,EAAU,aAAc,CAAE,IAAK,WAAY,KAAMA,CAAU,EAAE,SAAU,SAAYs4B,CAAe,CAAA,CACrH,CACJ,CACD,MAAMF,EAAkB,KAAK,uBAAuBN,EAAgBnoC,EAAMsE,CAAa,EACvF,YAAKqjC,GAAY,CACb,KAAAW,EACA,QAAS,GACT,gBAAAG,CACZ,EACe,KAAK,kBACf,CACD,eAAeh5B,EAAU,CACrB,MAAM+d,EAAO/d,EAAS,WAAW,WACjC,MAAO,CACH,aAAc,CACV,IAAK,eACL,SAAAA,EACA,KAAA+d,CACH,EACD,IAAKA,GAAM,QAAU,IAAM,KAAO/d,EAAS,WAAW,cAAgBA,EAAS,OAASA,EAAS,KAC7G,CACK,CACD,uBAAuB04B,EAAgBxnC,EAAS2D,EAAe,CAC3D,OAAOtE,GAAQ,CACX,MAAMkD,EAAOlD,EAAK,aAClB,GAAIkD,EAAK,MAAQ,WAAY,CAEzB,MAAMyjC,EADQwB,EAAe,IAAIjlC,EAAK,YAAY,GACpB,KAAKuM,GAAYnL,EAAc,cAAcmL,CAAQ,IAAM,UAMzF,OALwBg3B,GAAsB9lC,EAASuC,EAAK,aAAcA,EAAK,cAAeilC,EAAe,IAAIjlC,EAAK,YAAY,EAAGA,EAAK,UAAWyjC,EAAgB5nC,GAAS,CACtK4nC,GACA,KAAK,uBAAuBriC,EAAeqiC,EAAgB5nC,CAAK,CAExF,CAAiB,CAEJ,CACD,GAAImE,EAAK,MAAQ,eAAgB,CAC7B,MAAM6jC,EAAuBziC,EAAc,cAAcpB,EAAK,QAAQ,IAAM,aACtE0lC,EAAe9B,GAAmBnmC,EAASuC,EAAK,SAAU6jC,EAAsBziC,EAAe,KAAK,SAAS,EACnH,OAAAskC,EAAa,iBAAiB,cAAe,KAAK,uBAAuB,KAAK,KAAMtkC,EAAepB,EAAK,QAAQ,CAAC,EAC1GrD,KAAQ+oC,CAAY,EAC9B,CACD,OAAO/oC,uEAA0EqD,EAAK,IAAI,SACtG,CACK,CACD,cAAcilC,EAAgBziC,EAAc0c,EAAemmB,EAAa,CACpE,MAAMrnC,EAAe,CACjB,IAAK,WACL,aAAAwE,EACA,cAAA0c,EACA,UAAWmmB,CACvB,EACcvB,EAAQmB,EAAe,IAAIziC,CAAY,EAC7C,OAAKshC,EAOE,CACH,aAAA9lC,EACA,aAAcwE,EACd,GAAIA,EACJ,SAAU,SAAYshC,EAAM,IAAI,KAAK,cAAc,CAC/D,EAXmB,CACH,aAAA9lC,EACA,aAAcwE,EACd,GAAIA,CACpB,CAQK,CACD,uBAAuBpB,EAAemL,EAAU1Q,EAAO,CACnD,MAAMmmB,EAAc,IAAIC,GAA2BpmB,CAAK,EAClDyuB,EAAO/d,EAAS,WAAW,WACjC,GAAI+d,EAAM,CACN,MAAMkB,EAASlB,EAAK,aAAelpB,EAAc,WAAW,sBAAsBkpB,EAAK,YAAY,EAAI,KACnGkB,GAAU,CAACA,EAAO,+BAClBxJ,EAAY,eAAc,EAAG,WAAW5hB,GAAWH,GAAU,wBAAwB,EAAG,IAAM,CAC1F6pB,EAAuB,0BAA0B1oB,EAAekpB,CAAI,CACxF,EAAmB,CAAE,aAAc,6BAA6B,CAAE,CAEzD,CACDtI,EAAY,eAAgB,EAAC,WAAW5hB,GAAWH,GAAU,eAAe,EAAG,IAAMc,GAAuBwL,CAAQ,EAAG,CAAE,aAAc,mBAAqB,CAAA,EACvJyV,EAAY,MACpB,CACD,sBAAsB5gB,EAAe,CACjC,MAAM1D,EAAS,IAAI,IACnB,UAAW2D,KAASD,EAAc,aAAc,CAC5C,MAAMukC,EAAgBtkC,EAAM,gBAC5B,UAAWkL,KAAYo5B,EACf,CAACp5B,EAAS,cAAe,GAAI,CAACnL,EAAc,cAAcmL,CAAQ,IAGjE7O,EAAO,IAAI6O,EAAS,IAAI,GACzB7O,EAAO,IAAI6O,EAAS,KAAM,CAAE,CAAA,EAIhC7O,EAAO,IAAI6O,EAAS,IAAI,EAAE,KAAKA,CAAQ,EAE9C,CACD,OAAO7O,CACV,CACD,8BAA8B0D,EAAe,CACzC,MAAM1D,EAAS,IAAI,IACnB,UAAW2D,KAASD,EAAc,aAC9B,UAAWmL,KAAYlL,EAAM,gBACpBD,EAAc,cAAcmL,CAAQ,GAGzC7O,EAAO,IAAI+I,EAA6B,EAAC,sBAAsB8F,EAAS,IAAI,CAAC,EAGrF,OAAO7O,CACV,CACD,gBAAgB7B,EAAO,CACd,KAAK,qBAAqBA,EAAM,KAAO,IAAI,OAAOw7B,GAAyCx7B,EAAM,IAAI,EAAG,GAAG,EAAI,IAAI,CAC3H,CACD,MAAM,qBAAqByO,EAAO,CAE9B,OADA,KAAK,YAAcA,EACf,KAAK,2BAA2B,MACzB,KAAK,mBAET,KAAK,wBACf,CACD,WAAWxN,EAAM,CACb,MAAMwN,EAAQ,KAAK,YACbtK,EAAOlD,EAAK,aAClB,OAAIkD,EAAK,MAAQ,WACG,CAACsK,GAASA,EAAM,KAAKtK,EAAK,YAAY,GAAKsK,EAAM,KAAKtK,EAAK,aAAa,EAGrF,EACV,CACD,wBAAyB,CACrB,GAAI,CAAC,KAAKykC,GACN,OAEJ,MAAMW,EAAO,KAAKX,GAAU,KAAK,OAAO,KAAK,WAAW,KAAK,IAAI,CAAC,EAClE,KAAKD,GAAoB,KAAO,CAC5B,KAAAY,EACA,gBAAiB,KAAKX,GAAU,gBAChC,QAAS,KAAKA,GAAU,OACpC,EACQ,KAAK,iBAAiB,UAAU,OAAO,SAAU,EAAQW,EAAK,MAAO,CACxE,CACD,MAAM,kBAAmB,CACrB,GAAI,CAAC,KAAKX,GACN,OAEJ,MAAMW,EAAO,CAAA,EACb,UAAWhxB,KAAS,KAAKqwB,GAAU,KAAM,CACrC,MAAMzkC,EAAOoU,EAAM,aACnB,GAAIpU,EAAK,MAAQ,YAAc,CAACoU,EAAM,SAClC,SAGJ,MAAMwxB,GADa,MAAMxxB,EAAM,YACK,OAAO,KAAK,WAAW,KAAK,IAAI,CAAC,EACjEwxB,EAAiB,QACjBR,EAAK,KAAK,CAAE,GAAIplC,EAAK,KAAM,aAAc,CAAE,IAAK,WAAY,KAAMA,EAAK,IAAI,EAAI,SAAU,SAAY4lC,CAAgB,CAAE,CAE9H,CACD,KAAKpB,GAAoB,KAAO,CAC5B,KAAAY,EACA,gBAAiB,KAAKX,GAAU,gBAChC,QAAS,KAAKA,GAAU,OACpC,EACQ,MAAM,KAAKD,GAAoB,kBAAkB,CAAC,EAClD,KAAK,iBAAiB,UAAU,OAAO,SAAU,EAAQY,EAAK,MAAO,CACxE,CACL,CACA,MAAMT,GAAgB,GAChBW,GAAgC,IAAI,IAAI,CAAC,UAAW,SAAU,OAAO,CAAC,uHCjgBtE5mC,GAAS,IAAI,cACnBA,GAAO,YACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAqFC,ECvFD,MAAMA,GAAS,IAAI,cACnBA,GAAO,YACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAYC,ECfM,MAAMmnC,EAAY,CACrB,KACAC,GAAU,EACVC,GACAC,GACA,YAAY3oC,EAAM,CACd,KAAK,KAAOA,EACZ,KAAK0oC,GAAc,SAAS,iBAAiB1oC,EAAM,WAAW,SAAS,EACvE,KAAK2oC,GAAO,CAAC,KAAKD,GAAY,WAAU,CAC3C,CACDE,IAAQ,CACJ,YAAKH,IAAW,KAAKC,GAAY,YAAY,aAAa,QAAU,EACpE,KAAKC,GAAO,CAAC,KAAKD,GAAY,SAAQ,EAC/B,CAAC,KAAKC,EAChB,CACDE,GAAcC,EAAQ,CAClB,GAAIA,EAAS,KAAKL,IAAW,KAAKE,GAC9B,OAAO,KAMX,KAAOG,EAAS,KAAKL,IAAW,KAAKC,GAAY,YAAY,aAAa,QAAU,IAChF,GAAI,CAAC,KAAKE,KACN,OAAO,KAGf,OAAO,KAAKF,GAAY,WAC3B,CACD,UAAUK,EAAOjqB,EAAQ,CACrB,GAAIA,GAAU,GAAK,KAAK6pB,GACpB,OAAO,KAEX,MAAMK,EAAY,KAAKH,GAAcE,CAAK,EAC1C,GAAI,CAACC,EACD,OAAO,KAEX,MAAMC,EAAoBF,EAAQ,KAAKN,GACjCS,EAAU,KAAKL,GAAcE,EAAQjqB,CAAM,EACjD,GAAI,CAACoqB,EACD,OAAO,KAEX,MAAMC,EAAkBJ,EAAQjqB,EAAS,KAAK2pB,GACxCvY,EAAQ,IAAI,MAClB,OAAAA,EAAM,SAAS8Y,EAAWC,CAAiB,EAC3C/Y,EAAM,OAAOgZ,EAASC,CAAe,EAC9BjZ,CACV,CACL,CACO,MAAMkZ,GAAqB,mBAClC,IAAIC,GACG,MAAMC,EAAiB,CAC1BC,GAAc,IAAI,UAClB,aAAc,CACV,SAAS,mBAAmB,KAAKC,EAAkB,EACnD,IAAI,WAAW,IAAIJ,GAAoB,KAAKG,EAAW,CAC1D,CACD,OAAO,SAASx3B,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAACs3B,IAA4Br3B,KAC7Bq3B,GAA2B,IAAIC,IAE5BD,EACV,CACD,cAAcI,EAAQ,CAClBA,EAAO,QAAQ,KAAK,aAAa,KAAK,IAAI,CAAC,CAC9C,CACD,iBAAiBA,EAAQ,CACrBA,EAAO,QAAQ,KAAK,gBAAgB,KAAK,IAAI,CAAC,CACjD,CACD,aAAavZ,EAAO,CAChB,KAAKqZ,GAAY,IAAIrZ,CAAK,CAC7B,CACD,gBAAgBA,EAAO,CACnB,KAAKqZ,GAAY,OAAOrZ,CAAK,CAChC,CACD,2BAA2BlwB,EAAM0pC,EAAc,CAC3C,MAAMC,EAAc,IAAInB,GAAYxoC,CAAI,EAClCypC,EAASC,EAAa,IAAIxZ,GAASyZ,EAAY,UAAUzZ,EAAM,OAAQA,EAAM,MAAM,CAAC,EACrF,OAAQ0Z,GAAMA,IAAM,MAAQ,CAACA,EAAE,SAAS,EAC7C,YAAK,cAAcH,CAAM,EAClBA,CACV,CACL,CCpFO,MAAMI,GAAwB,SAAUpqC,EAAMqqC,EAAc,CAC/D,OAAIrqC,EAAK,aAAe,KAAK,aAClBA,EAAK,UAAW,GAAIA,EAAK,SAAQ,EAAG,cAExCsqC,GAAQtqC,EAAMqqC,CAAY,CACrC,EACaC,GAAU,SAAUtqC,EAAMuqC,EAAW,CAC9C,GAAIvqC,EAAK,aAAe,KAAK,aACzB,MAAO,GAEX,MAAMwqC,EAAQ,CAAA,EACd,IAAIC,EAAczqC,EAClB,KAAOyqC,GAAa,CAChB,MAAMC,EAAOC,GAAYF,EAAa,EAAQF,EAAYE,IAAgBzqC,CAAI,EAK9E,GAJI,CAAC0qC,IAGLF,EAAM,KAAKE,CAAI,EACXA,EAAK,WACL,MAEJD,EAAcA,EAAY,UAC7B,CACD,OAAAD,EAAM,QAAO,EACNA,EAAM,KAAK,KAAK,CAC3B,EACaI,GAAe,SAAU5qC,EAAM,CACxC,IAAI6qC,EAAK7qC,EACT,KAAO6qC,GAAI,CACP,MAAMC,EAAaD,EAAG,qBACtB,GAAIC,GAAcA,EAAW,eAAgB,IAAKvkC,EAAqB,gBAAgB,KACnF,MAAO,GAEXskC,EAAKA,EAAG,oBACX,CACD,MAAO,EACX,EACaE,GAAS,SAAU/qC,EAAMuqC,EAAW,CAC7C,GAAIvqC,EAAK,aAAe,KAAK,aACzB,MAAO,GAEX,MAAMgrC,EAAO,CAAA,EACb,IAAIH,EAAK7qC,EACT,KAAO6qC,GACHG,EAAK,KAAKV,GAAQO,EAAIN,CAAS,CAAC,EAChCM,EAAKA,EAAG,qBAEZG,EAAK,QAAO,EACZ,IAAIpqC,EAAS,GACb,QAASqP,EAAI,EAAGA,EAAI+6B,EAAK,OAAQ,EAAE/6B,EAAG,CAClC,MAAMspB,EAAS,KAAK,UAAUyR,EAAK/6B,CAAC,CAAC,EACjCA,EACArP,GAAU,6BAA6B24B,CAAM,IAG7C34B,GAAU,0BAA0B24B,CAAM,GAEjD,CACD,OAAO34B,CACX,EACM+pC,GAAc,SAAU3qC,EAAMuqC,EAAWU,EAAc,CACzD,GAAIjrC,EAAK,aAAe,KAAK,aACzB,OAAO,KAEX,MAAM2B,EAAK3B,EAAK,aAAa,IAAI,EACjC,GAAIuqC,EAAW,CACX,GAAI5oC,EACA,OAAO,IAAIupC,GAAKC,EAAWxpC,CAAE,EAAG,EAAI,EAExC,MAAMypC,EAAgBprC,EAAK,SAAU,EAAC,YAAW,EACjD,GAAIorC,IAAkB,QAAUA,IAAkB,QAAUA,IAAkB,OAC1E,OAAO,IAAIF,GAAKlrC,EAAK,sBAAuB,EAAE,EAAI,CAEzD,CACD,MAAMyT,EAAWzT,EAAK,wBACtB,GAAI2B,EACA,OAAO,IAAIupC,GAAKz3B,EAAW03B,EAAWxpC,CAAE,EAAG,EAAI,EAEnD,MAAMwN,EAASnP,EAAK,WACpB,GAAI,CAACmP,GAAUA,EAAO,SAAQ,IAAO,KAAK,cACtC,OAAO,IAAI+7B,GAAKz3B,EAAU,EAAI,EAElC,SAAS43B,EAA0BrrC,EAAM,CACrC,MAAM4rB,EAAiB5rB,EAAK,aAAa,OAAO,EAChD,OAAK4rB,EAGEA,EAAe,MAAM,MAAM,EAAE,OAAO,OAAO,EAAE,IAAI,SAAUrqB,EAAM,CAEpE,MAAO,IAAMA,CACzB,CAAS,EALU,EAMd,CACD,SAAS4pC,EAAWxpC,EAAI,CACpB,MAAO,IAAM,IAAI,OAAOA,CAAE,CAC7B,CACD,MAAM2pC,EAA6BD,EAA0BrrC,CAAI,EACjE,IAAIurC,EAAkB,GAClBC,EAAgB,GAChBC,EAAW,GACXC,EAAe,GACnB,MAAMC,EAAWx8B,EAAO,WACxB,QAASc,EAAI,EAAG07B,IAAaF,IAAa,IAAM,CAACD,IAAkBv7B,EAAI07B,EAAS,OAAQ,EAAE17B,EAAG,CACzF,MAAM6X,EAAU6jB,EAAS17B,CAAC,EAC1B,GAAI6X,EAAQ,aAAe,KAAK,aAC5B,SAGJ,GADA4jB,GAAgB,EACZ5jB,IAAY9nB,EAAM,CAClByrC,EAAWC,EACX,QACH,CAID,GAHIF,GAGA1jB,EAAQ,sBAAuB,IAAKrU,EACpC,SAEJ83B,EAAkB,GAClB,MAAMK,EAAgB,IAAI,IAAIN,CAA0B,EACxD,GAAI,CAACM,EAAc,KAAM,CACrBJ,EAAgB,GAChB,QACH,CACD,MAAMK,EAAyBR,EAA0BvjB,CAAO,EAChE,QAASgkB,EAAI,EAAGA,EAAID,EAAuB,OAAQ,EAAEC,EAAG,CACpD,MAAMC,EAAeF,EAAuBC,CAAC,EAC7C,GAAKF,EAAc,IAAIG,CAAY,IAGnCH,EAAc,OAAOG,CAAY,EAC7B,CAACH,EAAc,MAAM,CACrBJ,EAAgB,GAChB,KACH,CACJ,CACJ,CACD,IAAI5qC,EAAS6S,EAKb,GAJIw3B,GAAgBx3B,EAAS,YAAW,IAAO,SAAWzT,EAAK,aAAa,MAAM,GAAK,CAACA,EAAK,aAAa,IAAI,GAC1G,CAACA,EAAK,aAAa,OAAO,IAC1BY,GAAU,SAAW,IAAI,OAAQZ,EAAK,aAAa,MAAM,GAAM,EAAE,EAAI,KAErEwrC,EACA5qC,GAAU,eAAiB6qC,EAAW,GAAK,YAEtCF,EACL,UAAWS,KAAgBV,EACvB1qC,GAAU,IAAM,IAAI,OAAOorC,EAAa,MAAM,CAAC,CAAC,EAGxD,OAAO,IAAId,GAAKtqC,EAAQ,EAAK,CACjC,EACaqrC,GAAQ,SAAUjsC,EAAMuqC,EAAW,CAC5C,GAAIvqC,EAAK,aAAe,KAAK,cACzB,MAAO,IAEX,MAAMwqC,EAAQ,CAAA,EACd,IAAIC,EAAczqC,EAClB,KAAOyqC,GAAa,CAChB,MAAMC,EAAOwB,GAAWzB,EAAaF,CAAS,EAK9C,GAJI,CAACG,IAGLF,EAAM,KAAKE,CAAI,EACXA,EAAK,WACL,MAEJD,EAAcA,EAAY,UAC7B,CACD,OAAAD,EAAM,QAAO,GACLA,EAAM,QAAUA,EAAM,CAAC,EAAE,UAAY,GAAK,KAAOA,EAAM,KAAK,GAAG,CAC3E,EACM0B,GAAa,SAAUlsC,EAAMuqC,EAAW,CAC1C,IAAI4B,EACJ,MAAMV,EAAWW,GAAWpsC,CAAI,EAChC,GAAIyrC,IAAa,GACb,OAAO,KAEX,OAAQzrC,EAAK,SAAU,EAAA,CACnB,KAAK,KAAK,aACN,GAAIuqC,GAAavqC,EAAK,aAAa,IAAI,EACnC,OAAO,IAAIkrC,GAAK,YAAclrC,EAAK,aAAa,IAAI,EAAI,KAAM,EAAI,EAEtEmsC,EAAWnsC,EAAK,YAChB,MACJ,KAAK,KAAK,eACNmsC,EAAW,IAAMnsC,EAAK,WACtB,MACJ,KAAK,KAAK,UACV,KAAK,KAAK,mBACNmsC,EAAW,SACX,MACJ,KAAK,KAAK,4BACNA,EAAW,2BACX,MACJ,KAAK,KAAK,aACNA,EAAW,YACX,MACJ,KAAK,KAAK,cACNA,EAAW,GACX,MACJ,QACIA,EAAW,GACX,KACP,CACD,OAAIV,EAAW,IACXU,GAAY,IAAMV,EAAW,KAE1B,IAAIP,GAAKiB,EAAUnsC,EAAK,aAAe,KAAK,aAAa,CACpE,EACMosC,GAAa,SAAUpsC,EAAM,CAK/B,SAASqsC,EAAgBC,EAAMC,EAAO,CAClC,GAAID,IAASC,EACT,MAAO,GAEX,GAAID,EAAK,SAAU,IAAK,KAAK,cAAgBC,EAAM,SAAQ,IAAO,KAAK,aACnE,OAAOD,EAAK,UAAS,IAAOC,EAAM,UAAS,EAE/C,GAAID,EAAK,SAAQ,IAAOC,EAAM,SAAQ,EAClC,MAAO,GAGX,MAAMC,EAAWF,EAAK,SAAQ,IAAO,KAAK,mBAAqB,KAAK,UAAYA,EAAK,WAC/EG,EAAYF,EAAM,SAAQ,IAAO,KAAK,mBAAqB,KAAK,UAAYA,EAAM,WACxF,OAAOC,IAAaC,CACvB,CACD,MAAMd,EAAW3rC,EAAK,WAAaA,EAAK,WAAW,SAAU,EAAG,KAChE,GAAI,CAAC2rC,EACD,MAAO,GAEX,IAAIe,EACJ,QAASz8B,EAAI,EAAGA,EAAI07B,EAAS,OAAQ,EAAE17B,EACnC,GAAIo8B,EAAgBrsC,EAAM2rC,EAAS17B,CAAC,CAAC,GAAK07B,EAAS17B,CAAC,IAAMjQ,EAAM,CAC5D0sC,EAAuB,GACvB,KACH,CAEL,GAAI,CAACA,EACD,MAAO,GAEX,IAAIjB,EAAW,EACf,QAASx7B,EAAI,EAAGA,EAAI07B,EAAS,OAAQ,EAAE17B,EACnC,GAAIo8B,EAAgBrsC,EAAM2rC,EAAS17B,CAAC,CAAC,EAAG,CACpC,GAAI07B,EAAS17B,CAAC,IAAMjQ,EAChB,OAAOyrC,EAEX,EAAEA,CACL,CAEL,MAAO,EACX,EACO,MAAMP,EAAK,CACd,MACA,UACA,YAAYtmC,EAAO2lC,EAAW,CAC1B,KAAK,MAAQ3lC,EACb,KAAK,UAAY2lC,GAAa,EACjC,CACD,UAAW,CACP,OAAO,KAAK,KACf,CACL,oLCvQM3oC,GAAS,IAAI,cACnuXC,ECpXD,MAAMuB,GAAY,CAId,OAAQ,QACZ,EACMC,GAAOC,EAA4B,uCAAwCF,EAAS,EACpFG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC7D,MAAMupC,WAA0BjrB,EAA2B,CAC9D,KACA,SACA,wBAA0B,IAAI,IAC9B,wBACA,YAAY4mB,EAAMhpC,EAAU,CACxB,MAAM,YAAY,EAClB,KAAK,KAAOgpC,EACZ,KAAK,SAAWhpC,EAChB,KAAK,wBAA0B,IAAI4R,GAA2B,CAAC,CAClE,CACD,MAAM,iCAAkC,CACpC,MAAM,KAAK,wBAAwB,SAAS,IAAM,KAAK,uBAAsB,CAAE,CAClF,CACD,MAAM,wBAAyB,CAC3B,KAAK,eAAc,EACnB,KAAK,sCAAqC,EAC1C,KAAK,wBAA0B,IAAI,IACnC,MAAMxK,EAAW,KAAK,SAAS,SAAQ,EACjCkmC,EAAyB,MAAMlmC,EAAS,sBAC9C,GAAI,CAACkmC,GAA0BA,EAAuB,SAAW,EAC7D,OAEJ,IAAIC,EAAuB,EAC3B,QAAS,EAAI,EAAG,EAAID,EAAuB,OAAQ,IAAK,CACpD,MAAME,EAAkBpmC,EAAS,YAAY,IAAIkmC,EAAuB,CAAC,CAAC,EAC1E,GAAI,GAACE,GAAmBA,EAAgB,gBAAkB,KAAK,WAG3DA,EAAgB,SAAU,IAAK,aAAc,CAC7C,MAAMC,EAA0B,IAAIC,GAA6BtmC,EAAS,OAAQ,EAAEomC,EAAgB,cAAe,EAAE,EAAGA,EAAgB,SAAU,CAAA,EAC5IG,EAAgC,IAAIC,GAAwCH,CAAuB,EACzG,KAAK,YAAYE,CAA6B,EAC9C,KAAK,wBAAwB,IAAIH,CAAe,EAEhD,MAAMK,EAA2B,EAAI,EAAKzmC,EAAS,YAAY,IAAIkmC,EAAuB,EAAI,CAAC,CAAC,EAAI,OACpG,GAAIO,GAA2BA,EAAwB,SAAQ,IAAO,aAAc,CAChF,MAAMC,EAA0B,IAAIJ,GAA6BtmC,EAAS,OAAQ,EAAEymC,EAAwB,cAAe,EAAE,EAAGA,EAAwB,SAAU,CAAA,EAC5JE,EAAgC,IAAIH,GAAwCE,CAAuB,EACzGH,EAA8B,YAAYI,CAA6B,CAC1E,CAED,MAAMC,EAAsB,KAAK,KAAK,kBAAkB,IAAIR,CAAe,EACvEQ,GACA,KAAK,mBAAmBA,EAAqBL,EAA+B,EAAEJ,CAAoB,CAEzG,CACJ,CACJ,CACD,uCAAwC,CACpC,UAAW7sC,KAAQ,KAAK,wBACQ,KAAK,KAAK,kBAAkB,IAAIA,CAAI,GAE3C,kBAAiB,CAE7C,CACD,mBAAmBiI,EAASglC,EAA+BJ,EAAsB,CAC7E,MAAMhZ,EAAS0Z,GAAuDC,GAAqD,SAAS,EAC9HC,EAAiB,SAAS,cAAc,MAAM,EACpDA,EAAe,UAAU,IAAI,mBAAmB,EAChD,MAAMC,EAAW,IAAI9oB,GACrB8oB,EAAS,KAAO,iBAChB,MAAMC,EAAc,SAAS,cAAc,MAAM,EACjDA,EAAY,YAAc,cAAcd,CAAoB,IAC5DY,EAAe,OAAOC,CAAQ,EAC9BD,EAAe,OAAOE,CAAW,EACjC,MAAMC,EAAU3lC,GAAS,MAAM4rB,EAAQ4Z,CAAc,EACrD,GAAIG,EAAS,CACT,MAAMC,EAAW,IAAM,CACnBZ,EAA8B,gBAAe,CAC7D,EACYW,EAAQ,eAAeC,EAAS,CAC5B,SAAU,GACV,yBAA0B,GAC1B,iBAAkBvqC,GAAWH,GAAU,MAAM,EAC7C,gBAAiBG,GAAWH,GAAU,MAAM,CAC5D,CAAa,EACDyqC,EAAQ,iBAAiB,YAAanhB,GAAKA,EAAE,QAAO,EAAI,EAAK,CAChE,CACJ,CACL,0HCjDMtpB,GAAY,CAId,QAAS,WAIT,sBAAuB,2BAKvB,kBAAmB,8BAInB,OAAQ,SAIR,gBAAiB,iBACrB,EACMC,GAAOC,EAA4B,yCAA0CF,EAAS,EACtFG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC9D0qC,GAAgC,IAAI,QACpCC,GAAwB,IAAI,IAC3B,MAAMC,UAA4BvW,GAAgCwW,EAA0B,CAAE,CACjG,kBACA,WACA,gBACA,mBACA,cACA,oBACA,wBACA,QACA,oBACA,cACA,yBACA,oBACA,wBACA,iBACA,qBACA,kBACA,sBACA,wBAA0B,GAC1B,uBACA,wBACA,oBACA,2BACAC,GAAiB,CAAA,EACjBC,GAA6B,IAAI,IACjCC,GACAC,GACAC,GAAsB,IAAI,IAC1B,YAAYC,EAAiBC,EAAeC,EAAY,CAEpD,GADA,QACIzrB,GAAyB,UAAU,mCAAsG,CACzI,KAAKorB,GAAiBM,GAA0C,WAChE,KAAKN,GAAe,iBAAiB,aAAmE,KAAKO,GAAuB,IAAI,EACxI,UAAWC,KAAS,KAAKR,GAAe,OAAM,EACtCQ,aAAiBC,IACjB,KAAKC,GAAcF,CAAK,CAGnC,CACD,KAAK,kBAAoB,IAAI,QAC7B,MAAMG,EAAkB,SAAS,cAAc,KAAK,EACpD,KAAK,WAAa3iB,GAA0C2iB,EAAiB,CAAE,QAAS,CAACC,GAA2BC,EAA6B,EAAG,eAAgB,MAAW,CAAA,EAC/K,MAAMC,EAA2B,KAAK,WAAW,YAAY,MAAO,qBAAqB,EACzF,KAAK,gBAAkB,KAAK,QAC5B,KAAK,gBAAgB,UAAU,IAAI,wBAAyB,aAAa,EACrET,GACA,KAAK,gBAAgB,UAAU,IAAI,sBAAsB,EAE7DrqB,GAAsB,KAAK,gBAAiB9gB,GAAWH,GAAU,OAAO,CAAC,EACzE,KAAK,gBAAgB,iBAAiB,WAAY,KAAK,WAAW,KAAK,IAAI,EAAG,EAAK,EACnF,KAAK,gBAAgB,iBAAiB,YAAa,KAAK,YAAY,KAAK,IAAI,EAAG,EAAK,EACrF,KAAK,gBAAgB,iBAAiB,YAAa,KAAK,YAAY,KAAK,IAAI,EAAG,EAAK,EACrF,KAAK,gBAAgB,iBAAiB,aAAc,KAAK,aAAa,KAAK,IAAI,EAAG,EAAK,EACvF,KAAK,gBAAgB,iBAAiB,YAAa,KAAK,YAAY,KAAK,IAAI,EAAG,EAAK,EACrF,KAAK,gBAAgB,iBAAiB,WAAY,KAAK,WAAW,KAAK,IAAI,EAAG,EAAK,EACnF,KAAK,gBAAgB,iBAAiB,YAAa,KAAK,YAAY,KAAK,IAAI,EAAG,EAAK,EACrF,KAAK,gBAAgB,iBAAiB,OAAQ,KAAK,OAAO,KAAK,IAAI,EAAG,EAAK,EAC3E,KAAK,gBAAgB,iBAAiB,UAAW,KAAK,UAAU,KAAK,IAAI,EAAG,EAAK,EACjF,KAAK,gBAAgB,iBAAiB,cAAe,KAAK,sBAAsB,KAAK,IAAI,EAAG,EAAK,EACjG,KAAK,gBAAgB,iBAAiB,uBAAwB,KAAK,aAAa,KAAK,IAAI,EAAG,EAAK,EACjG,KAAK,gBAAgB,iBAAiB,iBAAkB,KAAK,YAAY,KAAK,KAAM,EAAK,EAAG,EAAK,EACjG,KAAK,gBAAgB,iBAAiB,gBAAiB,KAAK,YAAY,KAAK,KAAM,EAAI,EAAG,EAAK,EAC/F,KAAK,gBAAgB,iBAAiB,kBAAmB,KAAK,QAAQ,KAAK,IAAI,EAAG,EAAK,EACvF,KAAK,gBAAgB,iBAAiB,UAAW,KAAK,UAAU,KAAK,IAAI,EAAG,EAAK,EACjF+rC,EAAyB,YAAY,KAAK,eAAe,EACzD,KAAK,QAAUH,EACf,KAAK,eAAe,aAAa,QAAS,GAAG7sC,GAAmB,UAAU,CAAC,EAAE,EAC7E,KAAK,mBAAqB,CAACqsC,EAC3B,KAAK,cAAgBC,EACrB,KAAK,oBAAsB,KAC3B,KAAK,wBAA0B,KAC/B,KAAK,QAAU,GACf,KAAK,oBAAsB,IAAIlnC,GAAoB,KAAK,eAAgBvI,GAAS,CAC7E,IAAI2I,EAAO3I,EAAM,OACjB,KAAO2I,GAAQ,CAACJ,GAAoB,YAAYI,CAAI,GAChDA,EAAOA,EAAK,4BAEhB,OAAOA,CACV,EAAEA,GAAQ,CACP,MAAMynC,EAAWC,GAA2C1nC,EAAM,IAAI,EACtE,GAAI,CAACynC,EACD,OAAO,KAEX,MAAM1rC,EAAcie,GAA2B,6BAA6BytB,CAAQ,EACpF,OAAK1rC,EAGEA,EAAY,OAFR,IAGvB,CAAS,EACD,KAAK,cAAgB,IAAI,IACzB,KAAK,yBAA2B,IAAI,IACpC,KAAK,oBAAsB,KAC3B,KAAK,wBAA0Bwc,EAAyB,SAAQ,EAAG,cAAc,oBAAoB,EACrG,KAAK,wBAAwB,kBAAkB,KAAK,yBAAyB,KAAK,IAAI,CAAC,EACvF,KAAK,0BAA0B,EAAI,EAC/B+C,GAAyB,UAAU,qCACnC,KAAKqrB,GAAe,IAAI5mC,GAA+B,KAAK,gBAAiB1I,GAAS,CAClF,MAAM05B,EAAc15B,EAAM,aAAc,EAAC,CAAC,EAC1C,GAAI,CAAC05B,GAAe,CAACA,EAAY,QAAQ,oBAAoB,EACzD,OAAO,KAEX,MAAMmW,EAAQ,KAAKN,GAAoB,IAAI7V,CAAW,EACtD,GAAI,CAACmW,EACD,OAAO,KAEX,MAAMS,EAAeT,EAAM,UACrBU,EAAe,KAAKC,GAAyBF,EAAa,SAAS,EACnEG,EAAgB,IAAI5qB,GAC1B4qB,EAAc,KAAOC,GAA+Cb,EAAM,QAAS,CAAA,EACnFY,EAAc,MAAM,OAAS,UAC7B,MAAME,EAAmB,SAAS,cAAc,GAAG,EACnDA,EAAiB,KAAO,IACxBA,EAAiB,YAAc,cAC/B,MAAMC,EAAa,SAAS,cAAc,MAAM,EAChDA,EAAW,YAAcL,EACzB,MAAMrnC,EAAU,SAAS,cAAc,KAAK,EAC5C,OAAAA,EAAQ,YAAYunC,CAAa,EACjCvnC,EAAQ,YAAYynC,CAAgB,EACpCznC,EAAQ,YAAY0nC,CAAU,EAC9B1nC,EAAQ,MAAM,QAAU,OACxBA,EAAQ,MAAM,WAAa,SAC3BA,EAAQ,MAAM,IAAM,MACb,CACH,IAAKwwB,EAAY,YAAa,EAC9B,KAAM,MAAO5wB,GAAY,CACrBA,EAAQ,oBAAoB,EAAI,EAChC,MAAM+nC,EAAiB,IAAM3rC,GAAuB2qC,CAAK,EACzD,OAAAc,EAAiB,iBAAiB,QAAS,IAAME,EAAgB,CAAA,EACjEJ,EAAc,iBAAiB,QAAS,IAAMI,EAAgB,CAAA,EAC9D/nC,EAAQ,eAAe,YAAYI,CAAO,EACnC,EACV,CACrB,CACa,EAAE,gBAAgB,EACnB,KAAKomC,GAAa,WAAW,GAAG,EAChC,KAAKA,GAAa,cAAc,EAAI,EAE3C,CACDkB,GAAyBM,EAAW,CAChC,OAAQA,EAAS,CACb,IAAK,wBACD,MAAO,4CACX,IAAK,+BACD,MAAO,2CACX,IAAK,4BACD,MAAO,yEACX,IAAK,sCACD,MAAO,0CACX,IAAK,4CACD,MAAO,2DACX,IAAK,oCACD,MAAO,4DACX,IAAK,6DACD,MAAO,oDACX,IAAK,uCACD,MAAO,wCACX,IAAK,wCACD,MAAO,4CACX,IAAK,yDACD,MAAO,4CACX,QACI,MAAO,EACd,CACJ,CACD,OAAO,YAAYnpC,EAAU,CACzB,OAAOonC,GAA8B,IAAIpnC,CAAQ,GAAK,IACzD,CACD,KAAMioC,GAAsB5vC,EAAO,CAC3BA,EAAM,KAAK,iBAAiB8vC,KAC5B,KAAKC,GAAc/vC,EAAM,KAAK,KAAK,EACnC,MAAM,KAAK+wC,GAAqB/wC,EAAM,KAAK,KAAK,EAEvD,CACD+vC,GAAcF,EAAO,CACjB,KAAKV,GAAe,KAAKU,CAAK,CACjC,CACDmB,IAAuB,CACnB,UAAWnB,KAAS,KAAKV,GAChB,KAAK4B,GAAqBlB,CAAK,CAE3C,CACD,KAAMkB,GAAqBlB,EAAO,CAC9B,MAAMS,EAAeT,EAAM,UAK3B,GAHI,CADiB,KAAKW,GAAyBF,EAAa,SAAS,GAIrE,CAAC,KAAK,aAAe,CAACA,EAAa,gBACnC,OAGJ,MAAMrvC,EAAO,MADW,IAAI6sB,GAA6B,KAAK,YAAY,SAAU,EAAC,OAAQ,EAAEwiB,EAAa,eAAe,EACxF,iBACnC,GAAI,CAACrvC,EACD,OAEJ,MAAMyD,EAAc,KAAK,gBAAgBzD,CAAI,EAC7C,GAAIyD,EAAa,CACbA,EAAY,SAASmrC,CAAK,EAC1B,MAAMoB,EAAiCvsC,EAAY,oBAEnD,SAAW,CAACwE,EAAS2mC,CAAK,IAAKoB,EAC3B,KAAK1B,GAAoB,IAAIrmC,EAAS2mC,CAAK,CAElD,CACJ,CACD,0BAA2B,CACvB,MAAM/rC,EAAe,KAAK,kBACtBA,GAAgBA,EAAa,aAAe,KAAK,cAAgB,CAAC,KAAK,wBAAwB,OAC/F,KAAK,cAAcA,EAAa,UAAU,EAE9C,KAAK,OAAM,CACd,CACD,YAAYotC,EAAM,CACd,KAAK,gBAAgB,UAAU,OAAO,uBAAwB,CAACA,CAAI,CACtE,CACD,oBAAoBC,EAAkB,CAClC,KAAK,iBAAmBA,CAC3B,CACD,cAAe,CACX,OAAO,KAAK,sBAAwB,CACvC,CACD,gBAAgBrV,EAAO,CACnB,KAAK,qBAAuBA,EACxB,KAAK,kBACL,KAAK,iBAAiB,QAE7B,CACD,iBAAiB33B,EAAM,CACnB,GAAI,KAAK,kBAAmB,CACxB,MAAMO,EAAc,KAAK,gBAAgB,KAAK,kBAAkB,IAAI,EAChEA,GACAA,EAAY,eAAe,EAAK,EAEpC,OAAO,KAAK,iBACf,CACD,GAAIP,EAAM,CACN,MAAMO,EAAc,KAAK,gBAAgBP,EAAK,IAAI,EAC9CO,GACAA,EAAY,eAAe,EAAI,EAEnC,KAAK,kBAAoBP,CAC5B,CACJ,CACD,uBAAuBitC,EAAa,CAC5B,KAAK,mBAAqB,KAAK,kBAAkB,OAASA,GAC1D,KAAK,iBAAiB,IAAI,CAEjC,CACD,aAAapxC,EAAO,CAChBA,EAAM,QAAU,EACnB,CACD,YAAYqxC,EAAOrxC,EAAO,CACtB,KAAK,iBAAiB,IAAI,EAE1B,MAAMsxC,EAAgBtxC,EAAM,SAS5B,GARI,CAACsxC,GAAiB,CAACA,EAAc,QAIjCA,EAAc,kBAAkB,MAAQA,EAAc,OAAO,gBAI7DzgB,GAAoB,EACpB,OAEJ,MAAM0gB,EAAa,KAAK,kBACnBA,GAGAD,EAAc,gBAGnBA,EAAc,cAAc,YAC5BtxC,EAAM,QAAU,GAChB,KAAK,iBAAiBqxC,EAAOE,CAAU,EAC1C,CACD,iBAAiBF,EAAOpwC,EAAM,CACrBA,IAGDowC,IAAUpwC,EAAK,aAAc,GAAIA,EAAK,4BAA2B,KAGhEA,EAAK,WACV,KAAK,iBAAiB,CAAE,KAAAA,EAAM,MAAAowC,CAAO,CAAA,GACxC,CACD,SAASE,EAAY,CAIjB,GAHIA,EAAW,aAAY,GAAMA,EAAW,4BAA2B,GAGnE,CAAC,KAAK,kBACN,MAAO,GAEX,MAAMtwC,EAAO,KAAK,kBAAkB,KAIpC,MAHI,OAAK,kBAAkB,QAAUA,IAASswC,GAActwC,EAAK,WAAWswC,CAAU,IAGlFA,EAAW,SAAQ,IAAOtwC,EAAK,SAAQ,EAI9C,CACD,UAAUswC,EAAY,CACd,KAAK,SAASA,CAAU,GACxB,KAAK,aAAaA,CAAU,CAEnC,CACD,cAAcA,EAAY,CACtB,KAAK,iBAAiBA,CAAU,CACnC,CACD,QAAQvxC,EAAO,CAEX,GAAI6wB,GAAoB,EACpB,OAEJ,MAAM0gB,EAAa,KAAK,kBACpB,CAACA,GAAc,CAAC,KAAK,SAASA,CAAU,IAG5CvxC,EAAM,QAAU,GAChB,KAAK,aAAauxC,CAAU,EAC/B,CACD,aAAaA,EAAY,CACrB,GAAI,CAAC,KAAK,kBACN,OAEA,KAAK,kBAAkB,OACvB,KAAK,kBAAkB,KAAK,OAAOA,EAAY,KAAMC,EAAe,KAAK,IAAI,CAAC,EAC9E,KAAK,iBAAiB,IAAI,GAG1B,KAAK,kBAAkB,KAAK,OAAOD,EAAY,KAAMC,EAAe,KAAK,IAAI,CAAC,EAElF,SAASA,EAAeC,EAAOC,EAAY,CACnCD,GAAS,CAACC,GAGd,KAAK,cAAcA,CAAU,CAChC,CACJ,CACD,iBAAiBH,EAAY,CACzB,GAAIA,EAAW,iBACX,OAEJ,MAAMjkC,EAAaikC,EAAW,WAAaA,EAAW,WAAaA,EAC/DjkC,EAAW,SAAU,IAAK,aAG9BikC,EAAW,OAAOjkC,EAAYikC,EAAW,WAAW,CACvD,CACD,WAAWI,EAAS,CAChB,GAAIA,IAAY,KAAK,QAIrB,IADA,KAAK,QAAUA,EACX,CAAC,KAAK,QAAS,CACf,KAAK,oBAAoB,OACrB,KAAK,kBACL,KAAK,iBAAiB,SAE1B,MACH,CACD,KAAK,kBAAiB,EAClB,KAAK,yBACL,KAAK,oBAAoB,KAAK,wBAAyB,EAAK,EAEnE,CACD,IAAI,aAAc,CACd,OAAO,KAAK,mBACf,CACD,IAAI,YAAYhuB,EAAG,CACX,KAAK,sBAAwBA,IAGjC,KAAK,oBAAsBA,EAC3B,KAAK,sBAAwBA,GAAKA,EAAE,UAAS,EAC7C,KAAK,OAAM,EACd,CACD,IAAI,eAAgB,CAChB,MAAO,EAAQ,KAAK,qBACvB,CACD,iBAAkB,CACd,OAAO,KAAK,uBACf,CACD,cAAc1iB,EAAMw0B,EAAO,CACvB,GAAI,KAAK,0BAA4Bx0B,EAAM,CACvC,KAAK,oBAAoBA,EAAM,CAACw0B,CAAK,EACrC,MACH,CACD,KAAK,wBAA0Bx0B,EAC/B,KAAK,oBAAoBA,EAAM,CAACw0B,CAAK,EAKjC,KAAK,0BAA4Bx0B,GACjC,KAAK,oBAAoB,EAAQw0B,CAAM,CAE9C,CACD,SAAU,CACN,MAAMx0B,EAAO,KAAK,kBAClB,GAAI,CAACA,EACD,MAAO,GAEX,MAAMyD,EAAc,KAAK,gBAAgBzD,CAAI,EAC7C,OAAKyD,GAGEA,EAAY,UAAW,GAAI,EACrC,CACD,QAAS,CACL,MAAMZ,EAAe,KAAK,kBAE1B,GADA,KAAK,eAAc,EACf,EAAC,KAAK,YAGV,IAAI,KAAK,mBAAoB,CACzB,MAAMY,EAAc,KAAK,yBAAyB,KAAK,WAAW,EAClE,KAAK,YAAYA,CAAW,CAC/B,KACI,CAED,MAAMyW,EAAW,KAAK,gBAAgB,KAAK,WAAW,EACtD,UAAWvK,KAASuK,EAAU,CAC1B,MAAMzW,EAAc,KAAK,yBAAyBkM,CAAK,EACvD,KAAK,YAAYlM,CAAW,CAC/B,CACJ,CACG,KAAK,uBAAuBhD,IACvB,KAAK,wBAAwB,KAAK,YAAW,EAAI,KAAK,WAAW,EAEtEoC,GACA,KAAK,oBAAoBA,EAAc,EAAI,EAElD,CACD,oBAAoB2xB,EAAO,CACvB,KAAK,yBAAyBwZ,EAAoB,OAAO,oBAAqB,CAAE,KAAM,KAAK,wBAAyB,MAAAxZ,CAAK,CAAE,CAC9H,CACD,wBAAwB/lB,EAAO,CAC3B,KAAK,yBAAyBu/B,EAAoB,OAAO,oBAAqBv/B,CAAK,CACtF,CACD,gBAAgBzO,EAAM,CAClB,IAAIyD,EAAc,KAAK,kBAAkBzD,CAAI,EAC7C,MAAI,CAACyD,GAAezD,EAAK,SAAQ,IAAO,KAAK,YAEzCyD,EAAc,KAAK,kBAAkBzD,EAAK,UAAU,GAEjDyD,CACV,CACD,kBAAkBzD,EAAM,CACpB,GAAI,CAACA,EACD,OAAO,KAEX,MAAM2wC,EAAgB,KAAK,kBAAkB,IAAI3wC,CAAI,EACrD,GAAI2wC,EACA,OAAOA,EAGX,MAAM7vC,EAAY,CAAA,EAClB,IAAIwoB,EACJ,IAAKA,EAActpB,EAAK,WAAYspB,IAChCxoB,EAAU,KAAKwoB,CAAW,EACtB,MAAK,kBAAkB,IAAIA,CAAW,GAFGA,EAAcA,EAAY,WAEvE,CAIJ,GAAI,CAACA,EACD,OAAO,KAGX,QAASrZ,EAAInP,EAAU,OAAS,EAAGmP,GAAK,EAAG,EAAEA,EAAG,CAC5C,MAAMN,EAAQ7O,EAAUmP,EAAI,CAAC,GAAKjQ,EAC5ByD,EAAc,KAAK,kBAAkB,IAAI3C,EAAUmP,CAAC,CAAC,EACvDxM,IACKA,EAAY,aACbkM,EAAM,OAASA,EAAM,OAASlM,EAAY,yBAC1C,KAAK,yBAAyBA,EAAakM,EAAM,MAAQ,CAAC,EAGrE,CACD,OAAO,KAAK,kBAAkB,IAAI3P,CAAI,GAAK,IAC9C,CACD,qBAAqBA,EAAM,CACvB,IAAIyD,EAAc,KAAK,gBAAgBzD,CAAI,EAC3C,OAAIyD,IAGCzD,EAAK,YAGVyD,EAAc,KAAK,qBAAqBzD,EAAK,UAAU,EAChDyD,EAAc,KAAK,UAAUA,EAAazD,CAAI,EAAI,MAH9C,KAId,CACD,oBAAoBA,EAAM+lB,EAAW,CAOjC,GANI,KAAK,0BAGL,CAAC,KAAK,oBAAsB/lB,IAAS,KAAK,aAAe,KAAK,cAC9DA,EAAO,KAAK,YAAY,YAExB,CAACA,GACD,OAEJ,MAAMyD,EAAc,KAAK,qBAAqBzD,CAAI,EAC7CyD,GAGLA,EAAY,gBAAgBsiB,CAAS,CACxC,CACD,6BAA6BhnB,EAAO,CAEhC,GAAI,CADoB,KAAK,QAAQ,cAEjC,OAAO,KAEX,MAAM2jB,EAAI3jB,EAAM,MACV6xC,EAAI7xC,EAAM,MAIV8xC,EAAoB,KAAK,qBAAqBnuB,EAAGkuB,CAAC,EAClDE,EAAoB,KAAK,qBAAqBpuB,EAAGkuB,EAAI,CAAC,EAC5D,IAAI3oC,EACJ,OAAI4oC,IAAsBC,EACtB7oC,EAAU4oC,EAGV5oC,EAAU,KAAK,qBAAqBya,EAAGkuB,EAAI,CAAC,EAEzC3oC,CACV,CACD,WAAW/D,EAAQ,CACf3B,GAA8B,qBAAoB,CACrD,CACD,YAAYxD,EAAO,CACf,MAAMkJ,EAAU,KAAK,6BAA6BlJ,CAAK,EACnDkJ,GACAA,EAAQ,OAAM,CAErB,CACD,eAAexE,EAAa,CACpB,KAAK,yBAA2BA,IAGhC,KAAK,kCAAkCstC,IACvC,KAAK,uBAAuB,QAAU,GACtC,OAAO,KAAK,wBAEZttC,aAAuBstC,IACvBttC,EAAY,QAAU,GACtB,KAAK,uBAAyBA,GAErC,CACD,YAAY1E,EAAO,CACf,MAAMkJ,EAAU,KAAK,6BAA6BlJ,CAAK,EACnDkJ,GAAW,KAAK,yBAA2BA,IAG/C,KAAK,eAAeA,CAAO,EAC3B,KAAK,qBAAqBA,EAAS,CAAC+c,GAAqC,yBAAyBjmB,CAAK,CAAC,EAC3G,CACD,qBAAqBkJ,EAAS+oC,EAAU,CACpC,GAAI/oC,aAAmB8oC,EAAqB,CACxC9oC,EAAQ,KAAI,EAAG,SAAU,EAAC,aAAY,EAAG,mBAAmB,CAAE,KAAMA,EAAQ,KAAM,EAAE,aAAc,MAAS,EAAI,MAAO+oC,CAAQ,EAC9H,MACH,CACG/oC,aAAmBgpC,IACnBhpC,EAAQ,SAAU,EAAC,aAAY,EAAG,mBAAmB,CAAE,aAAcA,EAAQ,aAAY,EAAI,aAAc,MAAW,EAAE,MAAO+oC,CAAQ,CAE9I,CACD,aAAa9sC,EAAQ,CACjB,KAAK,eAAe,IAAI,EACxB3B,GAA8B,qBAAoB,CACrD,CACD,YAAYxD,EAAO,CACf,MAAMiB,EAAOjB,EAAM,OAInB,GAHI,CAACiB,GAAQA,EAAK,gBAGdA,EAAK,WAAa,IAClB,MAAO,GAEX,MAAMyD,EAAc,KAAK,wBAAwB,KAAK,6BAA6B1E,CAAK,CAAC,EAIzF,GAHI,CAAC0E,GAGDA,EAAY,OAAO,aAAe,QAAUA,EAAY,KAAM,EAAC,SAAU,IAAK,OAC9E,MAAO,GAEX,GAAI,GAAC1E,EAAM,cAAgB,CAAC0E,EAAY,gBAAgB,aAGxD,OAAA1E,EAAM,aAAa,QAAQ,aAAc0E,EAAY,gBAAgB,YAAY,QAAQ,UAAW,EAAE,CAAC,EACvG1E,EAAM,aAAa,cAAgB,WACnC,KAAK,wBAA0B0E,EAC/BlB,GAA8B,qBAAoB,EAC3C,EACV,CACD,WAAWxD,EAAO,CACd,GAAI,CAAC,KAAK,wBACN,MAAO,GAEX,MAAM0E,EAAc,KAAK,wBAAwB,KAAK,6BAA6B1E,CAAK,CAAC,EACzF,GAAI,CAAC0E,EACD,MAAO,GAEX,IAAIzD,EAAOyD,EAAY,OACvB,KAAOzD,GAAM,CACT,GAAIA,IAAS,KAAK,wBAAwB,aACtC,MAAO,GAEXA,EAAOA,EAAK,UACf,CACD,OAAAyD,EAAY,gBAAgB,UAAU,IAAI,oBAAoB,EAC9D,KAAK,oBAAsBA,EAC3B1E,EAAM,eAAc,EAChBA,EAAM,eACNA,EAAM,aAAa,WAAa,QAE7B,EACV,CACD,YAAYA,EAAO,CACf,YAAK,+BAA8B,EACnCA,EAAM,eAAc,EACb,EACV,CACD,wBAAwB0E,EAAa,CAIjC,GAHI,CAACA,GAGD,EAAEA,aAAuBstC,GACzB,OAAO,KAEX,MAAMG,EAAsBztC,EACtBzD,EAAOkxC,EAAoB,OACjC,MAAI,CAAClxC,EAAK,YAAcA,EAAK,WAAW,SAAU,IAAK,KAAK,aACjD,KAEJkxC,CACV,CACD,OAAOnyC,EAAO,CACVA,EAAM,eAAc,EACpB,MAAM0E,EAAc,KAAK,6BAA6B1E,CAAK,EACvD0E,aAAuBstC,GACvB,KAAK,OAAOttC,CAAW,CAE9B,CACD,OAAOA,EAAa,CAChB,GAAI,CAAC,KAAK,wBACN,OAEJ,IAAI4I,EACAwU,EACJ,GAAIpd,EAAY,eAEZ4I,EAAa5I,EAAY,OACzBod,EAAa,SAEZ,CACD,MAAMswB,EAAiB1tC,EAAY,OACnC4I,EAAa8kC,EAAe,WAC5BtwB,EAAaswB,CAChB,CACD,GAAI,CAAC9kC,EACD,OAEJ,MAAM+kC,EAAc,KAAK,wBAAwB,SACjD,KAAK,wBAAwB,aAAa,OAAO/kC,EAAYwU,EAAY,KAAK,oBAAoB,KAAK,KAAMuwB,CAAW,CAAC,EACzH,OAAO,KAAK,uBACf,CACD,UAAUryC,EAAO,CACbA,EAAM,eAAc,EACpB,KAAK,+BAA8B,EACnC,OAAO,KAAK,uBACf,CACD,gCAAiC,CACzB,KAAK,sBACL,KAAK,oBAAoB,gBAAgB,UAAU,OAAO,oBAAoB,EAC9E,OAAO,KAAK,oBAEnB,CACD,sBAAsBA,EAAO,CACzB,MAAM0E,EAAc,KAAK,6BAA6B1E,CAAK,EACvD0E,aAAuBstC,GACvB,KAAK,gBAAgBttC,EAAa1E,CAAK,CAE9C,CACD,gBAAgB0E,EAAa1E,EAAO,CAChC,GAAI6wB,GAAoB,EACpB,OAEJ,MAAM1K,EAAc,IAAIC,GAA2BpmB,CAAK,EAClDsyC,EAAkB,EAAQ5tC,EAAY,KAAM,EAAC,WAAU,EACvD6tC,EAAQ7tC,EAAY,KAAM,EAAC,SAAQ,IAAO,KAAK,cAAgB,CAAC4tC,EAChErxC,EAAOjB,EAAM,OACnB,GAAI,CAACiB,EACD,OAEJ,IAAIuxC,EAAWvxC,EAAK,6BAA6B,uBAAuB,EACpEuxC,GAAYA,EAAS,UAAU,SAAS,OAAO,IAC/CA,EAAW,MAEf,MAAMC,EAAcxxC,EAAK,6BAA6B,qBAAqB,EAC3EklB,EAAY,YAAW,EAAG,WAAW5hB,GAAWH,GAAU,qBAAqB,EAAG,KAAK,uBAAuB,KAAK,KAAMM,EAAY,KAAI,CAAE,EAAG,CAAE,aAAc,0BAA0B,CAAE,EACtL8tC,EACA9tC,EAAY,wBAAwByhB,EAAaqsB,CAAQ,EAEpDD,EACL7tC,EAAY,uBAAuByhB,EAAanmB,CAAK,EAEhDyyC,EACL/tC,EAAY,wBAAwByhB,CAAW,EAE1CmsB,GACL5tC,EAAY,iCAAiCyhB,CAAW,EAE5DA,EAAY,YAAW,EAAG,WAAW5hB,GAAWH,GAAU,eAAe,EAAG,IAAM,CAC9Eb,EAAc,WAAW,yBACrC,EAAW,CAAE,aAAc,uBAAuB,CAAE,EAC5C4iB,EAAY,sBAAsBzhB,EAAY,KAAM,CAAA,EAC/CyhB,EAAY,MACpB,CACD,MAAM,uBAAuBllB,EAAM,CAC/B,MAAMyxC,EAAyB,MAAMzxC,EAAK,kBAE1C,MADqByxC,GAAwB,aAAY,EAAG,UAAU,MAAMC,EAA6B,GACrF,mBAAmBzsC,EAAmB,SAAU,EAAC,OAAO0sC,EAAiC,EAAGF,CAAsB,CACzI,CACD,mBAAoB,CAChB,KAAK,oBAAmB,CAC3B,CACD,UAAU1yC,EAAO,CACb,MAAMgoB,EAAgBhoB,EACtB,GAAI6wB,GAAoB,EACpB,OAEJ,MAAM5vB,EAAO,KAAK,kBAClB,GAAI,CAACA,EACD,OAEJ,MAAMyD,EAAc,KAAK,kBAAkB,IAAIzD,CAAI,EACnD,GAAKyD,GAGDuhB,GAAqC,0BAA0B+B,CAAa,GAAK/mB,EAAK,WAAY,CAClG,GAAI+mB,EAAc,MAAQ,WAAa/mB,EAAK,gBAAiB,CACzDA,EAAK,OAAOA,EAAK,WAAYA,EAAK,gBAAiB,KAAK,oBAAoB,KAAK,KAAMyD,EAAY,QAAQ,CAAC,EAC5GsjB,EAAc,QAAQ,EAAI,EAC1B,MACH,CACD,GAAIA,EAAc,MAAQ,aAAe/mB,EAAK,YAAa,CACvDA,EAAK,OAAOA,EAAK,WAAYA,EAAK,YAAY,YAAa,KAAK,oBAAoB,KAAK,KAAMyD,EAAY,QAAQ,CAAC,EACpHsjB,EAAc,QAAQ,EAAI,EAC1B,MACH,CACJ,CACJ,CACD,iBAAiB/mB,EAAM4xC,EAAcrmC,EAAU,CAC3C,MAAM9H,EAAc,KAAK,kBAAkB,IAAIzD,CAAI,EAInD,GAHI,CAACyD,GAAe,CAACA,EAAY,gBAAe,GAG5CzD,EAAK,aACL,OAEJ,MAAMqM,EAAarM,EAAK,WAClBye,EAAQze,EAAK,MACboxC,EAAc3tC,EAAY,SAChCA,EAAY,iBAAiBouC,EAAgB,KAAK,IAAI,EAAGD,CAAY,EACrE,SAASC,EAAgB9uB,EAAS,CAS9B,GARIxX,GACAA,IAEA,CAACwX,IAIL,KAAK,kBAAiB,EAClB,CAACtE,GACD,OAEJ,MAAMvE,EAAW7N,GAAcA,EAAW,SAAQ,EAC5CylC,EAAU53B,GAAWA,EAASuE,CAAK,GAAKpS,EAC9C,GAAKylC,IAGL,KAAK,cAAcA,EAAS,EAAI,EAC5BV,GAAa,CACb,MAAMW,EAAc,KAAK,gBAAgBD,CAAO,EAC5CC,GACAA,EAAY,OAAM,CAEzB,CACJ,CACJ,CACD,oBAAoBX,EAAaZ,EAAOsB,EAAS,CAM7C,GALItB,IAIJ,KAAK,kBAAiB,EAClB,CAACsB,GACD,OAAO,KAEX,KAAK,cAAcA,EAAS,EAAI,EAChC,MAAMC,EAAc,KAAK,gBAAgBD,CAAO,EAChD,OAAIV,GACIW,GACAA,EAAY,OAAM,EAGnBA,CACV,CAOD,MAAM,kBAAkB/xC,EAAM,CAC1B,MAAMy8B,EAAaz8B,EAAK,aAClBgyC,EAAgBvV,EAAaz8B,EAAK,WAAaA,EACrD,GAAI,CAACgyC,EACD,OAEJ,MAAMC,EAASjyC,EAAK,OAAO,eAAe,EACpC4sB,EAAS,MAAMolB,EAAc,gBAAgB,EAAE,EACrD,GAAI,CAACplB,EACD,OAEJ,MAAMA,EAAO,aAAaslB,EAA+B,CAAC,CAAE,MAAOzV,CAAY,EAAE,CAAE,MAAO,CAACwV,CAAM,CAAE,CAAC,EACpGrlB,EAAO,QAAO,EACd5sB,EAAK,UAAU,gBAAiBiyC,EAAS,KAAO,EAAI,EACpD,SAASC,EAA8BzV,EAAYwV,EAAQ,CACvD,MAAME,EAAkB,uBAClBC,EAAkB,cAClBC,EAAa,wCACbhf,EAAY,CAAA,EAClBA,EAAU,KAAK,kCAAkC,EACjDA,EAAU,KAAK,oCAAoC,EACnDA,EAAU,KAAK,gDAAgD,EAC/DA,EAAU,KAAK,8CAA8C,EAG7D,MAAM7F,EAAO;AAAA,EAFI6F,EAAU,KAAK,IAAI,EAEL;AAAA;AAAA,EADd,qCACmC;AAAA;AAAA,EAC9CrH,EAAYmmB,GAAmB1V,GAAc,IAAM2V,EACzD,KAAK,UAAU,OAAOpmB,EAAWimB,CAAM,EACvC,IAAIK,EAAY,KAChB,KAAOA,EAAU,YACbA,EAAYA,EAAU,WAEtBA,EAAU,WAAa,KAAK,gBAC5BA,EAAY,SAAS,MAEzB,IAAI/tC,EAAQ+tC,EAAU,cAAc,SAAWD,CAAU,EACrD9tC,IAGJA,EAAQ,SAAS,cAAc,OAAO,EACtCA,EAAM,GAAK8tC,EACX9tC,EAAM,YAAcipB,EACpB8kB,EAAU,YAAY/tC,CAAK,EAC9B,CACJ,CACD,kBAAkBvE,EAAM,CACpB,MAAO,EAAQA,EAAK,OAAO,eAAe,CAC7C,CACD,OAAQ,CACJ,KAAK,YAAc,KACnB,KAAK,cAAc,KAAM,EAAK,EAC9B,KAAK,oBAAoB,OACzB,OAAO,KAAK,kBACZuC,GAA8B,qBAAoB,EAClD,KAAK,cAAc,OACtB,CACD,eAAemE,EAAU,CACrBonC,GAA8B,IAAIpnC,EAAU,IAAI,EAChDA,EAAS,iBAAiBI,EAAoB,eAAgB,KAAK,eAAgB,IAAI,EACvFJ,EAAS,iBAAiBI,EAAoB,aAAc,KAAK,aAAc,IAAI,EACnFJ,EAAS,iBAAiBI,EAAoB,YAAa,KAAK,YAAa,IAAI,EACjFJ,EAAS,iBAAiBI,EAAoB,aAAc,KAAK,kBAAmB,IAAI,EACxFJ,EAAS,iBAAiBI,EAAoB,YAAa,KAAK,iBAAkB,IAAI,EACtFJ,EAAS,iBAAiBI,EAAoB,sBAAuB,KAAK,sBAAuB,IAAI,EACrGJ,EAAS,iBAAiBI,EAAoB,gBAAiB,KAAK,gBAAiB,IAAI,EACzFJ,EAAS,iBAAiBI,EAAoB,sBAAuB,KAAK,sBAAuB,IAAI,EACrGJ,EAAS,iBAAiBI,EAAoB,wBAAyB,KAAK,wBAAyB,IAAI,EACzGJ,EAAS,iBAAiBI,EAAoB,wBAAyB,KAAK,wBAAyB,IAAI,EACzGJ,EAAS,iBAAiBI,EAAoB,sBAAuB,KAAK,sBAAuB,IAAI,CACxG,CACD,mBAAmBJ,EAAU,CACzBA,EAAS,oBAAoBI,EAAoB,eAAgB,KAAK,eAAgB,IAAI,EAC1FJ,EAAS,oBAAoBI,EAAoB,aAAc,KAAK,aAAc,IAAI,EACtFJ,EAAS,oBAAoBI,EAAoB,YAAa,KAAK,YAAa,IAAI,EACpFJ,EAAS,oBAAoBI,EAAoB,aAAc,KAAK,kBAAmB,IAAI,EAC3FJ,EAAS,oBAAoBI,EAAoB,YAAa,KAAK,iBAAkB,IAAI,EACzFJ,EAAS,oBAAoBI,EAAoB,sBAAuB,KAAK,sBAAuB,IAAI,EACxGJ,EAAS,oBAAoBI,EAAoB,gBAAiB,KAAK,gBAAiB,IAAI,EAC5FJ,EAAS,oBAAoBI,EAAoB,sBAAuB,KAAK,sBAAuB,IAAI,EACxGJ,EAAS,oBAAoBI,EAAoB,wBAAyB,KAAK,wBAAyB,IAAI,EAC5GJ,EAAS,oBAAoBI,EAAoB,wBAAyB,KAAK,wBAAyB,IAAI,EAC5GJ,EAAS,oBAAoBI,EAAoB,sBAAuB,KAAK,sBAAuB,IAAI,EACxGgnC,GAA8B,OAAOpnC,CAAQ,CAChD,CACD,gBAAgB1G,EAAM,CAClB,IAAIuyC,EAAS,KAAK,cAAc,IAAIvyC,CAAI,EACxC,OAAKuyC,IACDA,EAAS,IAAIC,GACb,KAAK,cAAc,IAAIxyC,EAAMuyC,CAAM,GAEhCA,CACV,CACD,yBAAyBvyC,EAAM,CAC3B,OAAK,KAAK,SAGH,KAAK,cAAc,IAAIA,CAAI,GAAK,IAC1C,CACD,gBAAgBjB,EAAO,CACnB,MAAM2H,EAAW3H,EAAM,KACvB,KAAK,MAAK,EACN2H,EAAS,qBACT,KAAK,YAAcA,EAAS,mBACxBsc,GAAyB,UAAU,oCACnC,KAAK+sB,GAAoB,EAGpC,CACD,kBAAkBhxC,EAAO,CACrB,KAAM,CAAE,KAAAiB,CAAI,EAAKjB,EAAM,KACvB,KAAK,gBAAgBiB,CAAI,EAAE,kBAAkBjB,EAAM,KAAK,IAAI,EAC5D,KAAK,wBAAuB,CAC/B,CACD,iBAAiBA,EAAO,CACpB,KAAM,CAAE,KAAAiB,CAAI,EAAKjB,EAAM,KACvB,KAAK,gBAAgBiB,CAAI,EAAE,iBAAiBjB,EAAM,KAAK,IAAI,EAC3D,KAAK,wBAAuB,CAC/B,CACD,sBAAsBA,EAAO,CACzB,MAAMiB,EAAOjB,EAAM,KACnB,KAAK,gBAAgBiB,CAAI,EAAE,iBAAgB,EAEvCA,EAAK,YAAcA,EAAK,WAAW,aAAeA,EAAK,WAAW,WAClE,KAAK,gBAAgBA,EAAK,UAAU,EAAE,iBAAgB,EAE1D,KAAK,wBAAuB,CAC/B,CACD,aAAajB,EAAO,CAChB,MAAMiB,EAAOjB,EAAM,KACnB,KAAK,gBAAgBiB,EAAK,UAAU,EAAE,aAAaA,CAAI,EACvD,KAAK,wBAAuB,CAC/B,CACD,YAAYjB,EAAO,CACf,KAAM,CAAE,KAAAiB,EAAM,OAAAmP,GAAWpQ,EAAM,KAC/B,KAAK,uBAAuBiB,CAAI,EAChC,KAAK,gBAAgBmP,CAAM,EAAE,YAAYnP,CAAI,EAC7C,KAAK,wBAAuB,CAC/B,CACD,sBAAsBjB,EAAO,CACzB,MAAMiB,EAAOjB,EAAM,KACnB,KAAK,gBAAgBiB,CAAI,EAAE,iBAAgB,EAC3C,KAAK,wBAAuB,CAC/B,CACD,wBAAwBjB,EAAO,CAC3B,MAAMiB,EAAOjB,EAAM,KACnB,KAAK,gBAAgBiB,CAAI,EAAE,iBAAgB,EAC3C,KAAK,wBAAuB,CAC/B,CACD,yBAA0B,CACjB,KAAK,cAAc,OAGpB,KAAK,6BAGT,KAAK,2BAA6B,OAAO,WAAW,KAAK,oBAAoB,KAAK,IAAI,EAAG,EAAE,GAC9F,CACD,qBAAsB,CACd,KAAK,6BACL,aAAa,KAAK,0BAA0B,EAC5C,OAAO,KAAK,4BAEhB,MAAMyyC,EAAe,CAAC,GAAG,KAAK,cAAc,KAAM,CAAA,EAC5CC,EAAyBD,EAAa,OAAS,GACrD,IAAIE,EACAC,EACAF,IACAC,EAA8B,KAAK,QAAQ,WAC3CC,EAAoBD,EAA8BA,EAA4B,UAAY,EAC1F,KAAK,gBAAgB,UAAU,IAAI,QAAQ,GAE/C,MAAME,EAAwB,KAAK,qBAAuB,KAAK,cAAc,IAAI,KAAK,mBAAmB,EACzG,GAAIA,GAAyBA,EAAsB,qBAE/C,KAAK,OAAM,MAGX,UAAW,CAAC7yC,EAAMuyC,CAAM,IAAK,KAAK,cAC1BA,EAAO,qBACP,KAAK,yBAAyBvyC,CAAI,EAGlC,KAAK,mBAAmBA,CAAI,EAIpC0yC,IACA,KAAK,gBAAgB,UAAU,OAAO,QAAQ,EAC1CC,GAA+BC,IAC/BD,EAA4B,UAAYC,IAGhD,KAAK,cAAc,QACnB,KAAK,wBAAwBH,CAAY,CAC5C,CACD,mBAAmBzyC,EAAM,CACrB,MAAMyD,EAAc,KAAK,gBAAgBzD,CAAI,EACzCyD,GACAA,EAAY,YAAY,KAAK,yBAAyBzD,CAAI,CAAC,CAElE,CACD,yBAAyBA,EAAM,CAC3B,MAAM8yC,EAAoB,KAAK,gBAAgB9yC,CAAI,EAC/C8yC,IACAA,EAAkB,cAAc,KAAK,mBAAmB9yC,CAAI,CAAC,EAC7D8yC,EAAkB,YAAY,KAAK,yBAAyB9yC,CAAI,CAAC,EAC7D+tC,GAAsB,IAAI+E,CAAiB,GAC3C,KAAK,eAAeA,CAAiB,EAGhD,CACD,oBAAoBrvC,EAAa,CAC7B,OAAIA,EAAY,WAAU,GAAM,CAACA,EAAY,aAAY,EAC9C,QAAQ,UAEZ,IAAI,QAAQu9B,GAAW,CAC1Bv9B,EAAY,OAAO,cAAc,IAAM,CACnCsqC,GAAsB,IAAItqC,CAAW,EACrC,KAAK,yBAAyBA,EAAY,KAAM,CAAA,EAChDu9B,GAChB,CAAa,CACb,CAAS,CACJ,CACD,MAAM,wBAAwB7xB,EAAQ7P,EAAU,CAC5C,GAAI,CAAC6P,EAAO,aAAe,EAAEA,EAAO,uBAAuB6+B,GACvD,OAEJ,MAAM/rC,EAAY,IAAI0qC,GAAkBx9B,EAAO,YAAa7P,CAAQ,EACpE,MAAM2C,EAAU,kCACZA,EAAU,wBAAwB,KAAO,GACzCkN,EAAO,YAAYlN,CAAS,EAEhC,KAAKksC,GAA2B,IAAIh/B,EAAQlN,CAAS,CACxD,CACD,yBAAyBjC,EAAM+yC,EAAc,CACzC,MAAMtvC,EAAc,IAAIstC,EAAoB/wC,EAAM+yC,CAAY,EAC9D,OAAAtvC,EAAY,cAAc,CAACsvC,GAAgB,KAAK,mBAAmB/yC,CAAI,CAAC,EACpEA,EAAK,aAAe,KAAK,cAAgBA,EAAK,YAAcA,EAAK,WAAW,SAAU,IAAK,KAAK,eAChG,CAACA,EAAK,WAAW,YACjByD,EAAY,eAAe,EAAK,EAEhCzD,EAAK,mBACLyD,EAAY,eAAezD,EAAK,YAAY,EAEhDyD,EAAY,WAAa,EAAQ,KAAK,cAC/BA,CACV,CACD,UAAUA,EAAakM,EAAO,CAC1B,GAAIlM,EAAY,eACZ,OAAO,KAEX,MAAMgb,EAAQ,KAAK,gBAAgBhb,EAAY,MAAM,EAAE,QAAQkM,CAAK,EACpE,OAAI8O,IAAU,GACH,MAEPA,GAAShb,EAAY,yBACrB,KAAK,yBAAyBA,EAAagb,EAAQ,CAAC,EAEjDhb,EAAY,QAAQgb,CAAK,EACnC,CACD,gBAAgBze,EAAM,CAClB,IAAIgzC,EAAkBjC,EAAoB,mBAAmB/wC,CAAI,EACjE,MAAMizC,EAAkBjzC,EAAK,kBACzBizC,GACAD,EAAgB,KAAKC,CAAe,EAExC,MAAMC,EAAkBlzC,EAAK,kBACzBkzC,GACAF,EAAgB,KAAKE,CAAe,EAExCF,EAAgB,KAAK,GAAGhzC,EAAK,6BAA8B,CAAA,EAC3D,MAAMmzC,EAAsBnzC,EAAK,sBAC7BmzC,GACAH,EAAgB,KAAKG,CAAmB,EAE5C,MAAMC,EAAsBpzC,EAAK,sBAIjC,GAHIozC,GACAJ,EAAgB,KAAKI,CAAmB,EAExCpzC,EAAK,iBAAkB,CAEvB,IAAIka,EAAWla,EAAK,SAAQ,GAAM,CAAA,EAC7B,KAAK,wBAAwB,QAC9Bka,EAAWA,EAAS,OAAO1P,GAAKA,EAAE,SAAU,IAAK,KAAK,YAAY,GAEtEwoC,EAAkBA,EAAgB,OAAO94B,CAAQ,CACpD,CACD,MAAMm5B,EAAqBrzC,EAAK,qBAC5BqzC,GACAL,EAAgB,KAAKK,CAAkB,EAE3C,MAAMC,EAAwBtzC,EAAK,wBACnC,OAAIszC,GACAN,EAAgB,KAAKM,CAAqB,EAEvCN,CACV,CACD,mBAAmBhzC,EAAM,CAgBrB,OAfIA,EAAK,YAGLA,EAAK,mBAGLA,EAAK,mBAGL+wC,EAAoB,mBAAmB/wC,CAAI,EAAE,QAG7CA,EAAK,qBAGLA,EAAK,mBACE,GAEJ,EAAQA,EAAK,eAAgB,GAAK,CAAC+wC,EAAoB,kBAAkB/wC,CAAI,CACvF,CACD,iCAAiCyD,EAAa,CAC1C,MAAMyU,EAAS4V,GAA4B,GAAIylB,EAAsB,KAAK,IAAI,CAAC,EAC/Er7B,EAAO,MAAQ,GACf,MAAMs7B,EAAyB,IAAI9xB,GAA2BxJ,CAAM,EACpE,OAAAs7B,EAAuB,WAAa,GACpCA,EAAuB,OAASt7B,EACzBs7B,EACP,SAASD,EAAsBx0C,EAAO,CAClC,MAAM00C,EAAoB,KAAK,gBAAgBhwC,EAAY,KAAI,CAAE,EAAE,OACnE,KAAK,yBAAyBA,EAAa,KAAK,IAAIgwC,EAAmBhwC,EAAY,sBAAqB,EAAKiwC,EAAoB,CAAC,EAClI30C,EAAM,QAAO,CAChB,CACJ,CACD,yBAAyB0E,EAAakwC,EAAuB,CACrDlwC,EAAY,sBAAuB,IAAKkwC,IAG5ClwC,EAAY,yBAAyBkwC,CAAqB,EACtDlwC,EAAY,aAAe,CAAC,KAAK,yBAAyB,IAAIA,CAAW,GACzE,KAAK,yBAAyBA,EAAY,KAAM,CAAA,EAEvD,CACD,eAAeA,EAAa,CACxB,GAAI,CAACA,EAAY,eAAgB,CAC7B,GAAI,CAACA,EAAY,YACb,OAEJ,MAAMmwC,EAAsBnwC,EAAY,YAAY,oBAChDmwC,GAAuBA,EAAoB,YAAYnwC,CAAW,GAClEA,EAAY,OAAO,EAAI,EAE3BA,EAAY,eAAc,EAC1B,MACH,CACD,QAAQ,OAAO,CAACA,EAAY,aAAc,CAAA,EAC1C,KAAK,oBAAoBA,CAAW,CACvC,CACD,mBAAmBA,EAAakM,EAAO8O,EAAOs0B,EAAc,CACxD,MAAMc,EAAa,KAAK,yBAAyBlkC,EAAOojC,CAAY,EACpE,OAAAtvC,EAAY,YAAYowC,EAAYp1B,CAAK,EACrC9O,aAAiBlP,IACZ,KAAK,wBAAwBozC,EAAYlkC,CAAK,EAEhDkkC,CACV,CACD,UAAUpwC,EAAakM,EAAOmkC,EAAa,CACvC,GAAIrwC,EAAY,aAAakM,CAAK,IAAMmkC,EACpC,OAEJ,MAAMC,EAAcpkC,EAAM,SACtBA,EAAM,QACNA,EAAM,OAAO,YAAYA,CAAK,EAElClM,EAAY,YAAYkM,EAAOmkC,CAAW,EACtCC,GACApkC,EAAM,OAAM,CAEnB,CACD,oBAAoBlM,EAAa,CAC7B,GAAI,KAAK,yBAAyB,IAAIA,CAAW,EAC7C,OAEJ,KAAK,yBAAyB,IAAIA,CAAW,EAC7C,MAAMzD,EAAOyD,EAAY,OACnBuvC,EAAkB,KAAK,gBAAgBhzC,CAAI,EAC3Cg0C,EAAqB,IAAI,IAAIhB,CAAe,EAG5CiB,EAAuB,IAAI,IACjC,QAAShkC,EAAIxM,EAAY,WAAU,EAAK,EAAGwM,GAAK,EAAG,EAAEA,EAAG,CACpD,MAAMikC,EAAsBzwC,EAAY,QAAQwM,CAAC,EACjD,GAAI,EAAEikC,aAA+BnD,GAAsB,CAEvDttC,EAAY,mBAAmBwM,CAAC,EAChC,QACH,CAED,MAAMkkC,EADsBD,EACa,OACzC,GAAIF,EAAmB,IAAIG,CAAY,EAAG,CACtCF,EAAqB,IAAIE,EAAcD,CAAmB,EAC1D,QACH,CACDzwC,EAAY,mBAAmBwM,CAAC,CACnC,CACD,QAASA,EAAI,EAAGA,EAAI+iC,EAAgB,QAAU/iC,EAAIxM,EAAY,sBAAuB,EAAE,EAAEwM,EAAG,CACxF,MAAMN,EAAQqjC,EAAgB/iC,CAAC,EACzBikC,EAAsBD,EAAqB,IAAItkC,CAAK,GAAK,KAAK,gBAAgBA,CAAK,EACzF,GAAIukC,GAAuBA,IAAwBzwC,EAE/C,KAAK,UAAUA,EAAaywC,EAAqBjkC,CAAC,MAEjD,CAED,MAAM4jC,EAAa,KAAK,mBAAmBpwC,EAAakM,EAAOM,CAAC,EAC5D,KAAK,yBAAyBjQ,CAAI,GAAKyD,EAAY,UACnDstC,EAAoB,mBAAmB8C,CAAU,EAGjDpwC,EAAY,WAAU,EAAKA,EAAY,sBAAqB,GAC5D,KAAK,yBAAyBA,EAAaA,EAAY,sBAAqB,EAAK,CAAC,CAEzF,CACJ,CAED,MAAM2wC,EAAqB3wC,EAAY,aACvC,GAAIuvC,EAAgB,OAASoB,EAAoB,CAC7C,MAAMC,EAAoBD,EACrB3wC,EAAY,yBACbA,EAAY,uBAAyB,KAAK,iCAAiCA,CAAW,GAE1FA,EAAY,YAAYA,EAAY,uBAAwB4wC,CAAiB,EAC7E5wC,EAAY,uBAAuB,MAC/BH,GAAWH,GAAU,kBAAmB,CAAE,IAAK6vC,EAAgB,OAASoB,CAAkB,CAAE,CACnG,MACQ3wC,EAAY,yBACjBA,EAAY,uBAAyB,MAGzC,GAAIzD,EAAK,mBACL,UAAWs0C,KAAmBt0C,EAAK,mBAC/ByD,EAAY,YAAY,IAAIwtC,GAAoBqD,CAAe,CAAC,EAIpEt0C,EAAK,aAAe,KAAK,cAAgB,CAACA,EAAK,WAAY,GAAIyD,EAAY,gBAC3E,KAAK,mBAAmBA,EAAazD,EAAMyD,EAAY,WAAU,EAAI,EAAI,EAE7E,KAAK,yBAAyB,OAAOA,CAAW,CACnD,CACD,eAAe1E,EAAO,CAClB,MAAMiB,EAAOjB,EAAM,KACb0E,EAAc,KAAK,kBAAkB,IAAIzD,CAAI,EAC/CyD,GACAA,EAAY,kBAAiB,CAEpC,CACD,MAAM,yBAA0B,CAC5B,SAAW,CAAC0L,EAAQlN,CAAS,IAAK,KAAKksC,GACnC,MAAMlsC,EAAU,kCACZA,EAAU,wBAAwB,KAAO,GAAKA,EAAU,SAAWkN,GACnEA,EAAO,YAAYlN,CAAS,EAEhCA,EAAU,OAASA,EAAU,wBAAwB,OAAS,CAErE,CACD,sBAAsBlD,EAAO,CACzB,GAAI,CAAE,KAAAiB,CAAI,EAAKjB,EAAM,KACrB,GAAIiB,EAAK,SAAU,IAAK,YAAa,CAEjC,GAAI,CAACA,EAAK,eAAe,gBACrB,OAEJA,EAAOA,EAAK,cAAc,eAC7B,CACD,MAAMyD,EAAc,KAAK,kBAAkB,IAAIzD,CAAI,EAC/CyD,GAAe8wC,GAAa9wC,EAAY,cAAc,GACjDA,EAAY,eAAe,kBAAkB,SAAS,SAAYA,EAAY,oBAAmB,CAAE,CAE/G,CACD,OAAO,kBAAoB,OAAO,aAAa,CACnD,EACC,SAAUuqC,EAAqB,EAE3B,SAAUwG,EAAQ,CAEfA,EAAO,oBAAyB,sBAChCA,EAAO,oBAAyB,qBAExC,GAAgBxG,EAAoB,SAAWA,EAAoB,OAAS,CAAA,EAAG,CAC/E,GAAGA,IAAwBA,EAAsB,CAAE,EAAC,EAE7C,MAAMyG,GAAqB,IAAI,IAAI,CACtC,CAAC,IAAQ,MAAM,EACf,CAAC,IAAQ,KAAK,EACd,CAAC,IAAU,MAAM,EACjB,CAAC,IAAU,MAAM,EACjB,CAAC,IAAU,QAAQ,EACnB,CAAC,IAAU,QAAQ,EACnB,CAAC,IAAU,gBAAgB,EAC3B,CAAC,IAAU,MAAM,EACjB,CAAC,IAAU,KAAK,EAChB,CAAC,IAAU,KAAK,EAChB,CAAC,IAAU,KAAK,EAChB,CAAC,IAAU,QAAQ,EACnB,CAAC,IAAU,QAAQ,EACnB,CAAC,IAAU,QAAQ,EACnB,CAAC,IAAU,QAAQ,EACnB,CAAC,IAAU,QAAQ,EACnB,CAAC,IAAU,SAAS,EACpB,CAAC,SAAU,QAAQ,CACvB,CAAC,EAEM,MAAMjC,EAAa,CACtB,mBACA,kBACA,2BACA,2BACA,yBACA,kBAAkBkC,EAAU,CACpB,KAAK,mBAAqB,KAAK,kBAAkB,IAAIA,CAAQ,GAC7D,KAAK,kBAAkB,OAAOA,CAAQ,EAErC,KAAK,qBACN,KAAK,mBAAqB,IAAI,KAElC,KAAK,mBAAmB,IAAIA,CAAQ,CACvC,CACD,iBAAiBA,EAAU,CACnB,KAAK,oBAAsB,KAAK,mBAAmB,IAAIA,CAAQ,GAC/D,KAAK,mBAAmB,OAAOA,CAAQ,EAEtC,KAAK,oBACN,KAAK,kBAAoB,IAAI,KAEjC,KAAK,kBAAkB,IAAIA,CAAQ,CACtC,CACD,aAAajZ,EAAO,CAChB,KAAK,2BAA6B,EACrC,CACD,YAAYA,EAAO,CACf,KAAK,2BAA6B,GAClC,KAAK,2BAA6B,EACrC,CACD,kBAAmB,CACf,KAAK,yBAA2B,EACnC,CACD,kBAAmB,CACf,KAAK,2BAA6B,EACrC,CACD,oBAAoBkZ,EAAe,CAC/B,OAAO,KAAK,qBAAuB,MAAQ,KAAK,qBAAuB,QACnE,KAAK,mBAAmB,IAAIA,CAAa,CAChD,CACD,sBAAuB,CACnB,OAAO,KAAK,oBAAsB,MAAQ,KAAK,oBAAsB,QACjE,EAAQ,KAAK,kBAAkB,IACtC,CACD,oBAAqB,CACjB,MAAO,EAAQ,KAAK,wBACvB,CACD,oBAAqB,CACjB,MAAO,EAAQ,KAAK,0BACvB,CACD,oBAAqB,CACjB,MAAO,EAAQ,KAAK,0BACvB,CACL,CACA,IAAIC,GACG,MAAMt8B,EAAS,CAClB,OAAO,SAAShG,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAACsiC,IAAoBriC,KACrBqiC,GAAmB,IAAIt8B,IAEpBs8B,EACV,CACD,MAAM,OAAOhoB,EAAQ,CACjB,IAAI5sB,EAAO,KAOX,GANI4sB,aAAkBrmB,EAClBvG,EAAO4sB,EAEFA,aAAkBC,KACvB7sB,EAAO,MAAM4sB,EAAO,kBAEpB,CAAC5sB,EAED,OAAO,KAEX,MAAM60C,EAAc,IAAI7G,EACD,GAA4B,GAAwB,EAAI,EAC/E6G,EAAY,YAAc70C,EAC1B,MAAM80C,EAAaD,EAAY,aAC/B,OAAIC,GAAc,CAACA,EAAW,gBAC1BD,EAAY,QAAQ,UAAU,IAAI,aAAa,EAEnDA,EAAY,WAAW,EAAI,EAE3BA,EAAY,QAAQ,mBAAqBC,EACzCD,EAAY,gCAA4C,GAA6B,EAAI,EAClF,CAAE,KAAMA,EAAY,QAAS,KAAMA,CAAW,CACxD,CACL,CACO,MAAM5D,WAA4BvvB,EAA2B,CAChE,aACA,gBACA,YAAYqzB,EAAc,CACtB,MAAM,EAAE,EACR,KAAK,gBAAgB,YAAY,MAAO,gBAAgB,EACxD,MAAMvpB,EAAQ,KAAK,gBAAgB,YAAY,OAAQ,8BAA8B,EACrF,IAAIpmB,EAAO2vC,EAAa,SAAS,YAAW,EACxCA,EAAa,WAAa,KAAK,eAC/B3vC,EAAO,IAAMA,EAAO,KAExBomB,EAAM,YAAc,KAAYpmB,EAChC,KAAK,aAAe2vC,EACpB,KAAK,iBAAgB,CACxB,CACD,kBAAmB,CACf,MAAMnH,EAAU,IAAIoH,GACpBpH,EAAQ,UAAU,IAAI,gBAAgB,EAEtC,MAAMrsC,EADSgsC,GAAuDC,GAAqD,MAAM,EAC7G,KACdC,EAAiB,SAAS,cAAc,MAAM,EAC9CC,EAAW,IAAI9oB,GACrB8oB,EAAS,KAAO,iBAChB,MAAMuH,EAAW,SAAS,cAAc,MAAM,EAC9CA,EAAS,YAAc1zC,EACvBksC,EAAe,OAAOC,CAAQ,EAC9BD,EAAe,OAAOwH,CAAQ,EAC9BxH,EAAe,UAAU,IAAI,mBAAmB,EAChDG,EAAQ,KAAO,CACX,KAAArsC,EACA,QAASksC,EACT,aAAc,QAC1B,EACQ,KAAK,gBAAgB,YAAYG,CAAO,EACxC,MAAMC,EAAW,IAAM,CACnB,KAAK,aAAa,aAAa,QAAQ7tC,GAAQ,CACtCiE,GAAuBjE,CAAI,CAChD,CAAa,CACb,EACQ4tC,EAAQ,eAAeC,EAAS,CAC5B,SAAU,GACV,yBAA0B,GAC1B,iBAAkBvqC,GAAWH,GAAU,MAAM,EAC7C,gBAAiBG,GAAWH,GAAU,MAAM,CACxD,CAAS,EACDyqC,EAAQ,iBAAiB,YAAanhB,GAAKA,EAAE,QAAO,EAAI,EAAK,EAC7DnqB,EAAc,SAAQ,EAAG,gBAAgBsrC,CAAO,CACnD,CACD,IAAI,SAAU,CACV,MAAO,EAAQ,KAAK,eACvB,CACD,IAAI,QAAQlrB,EAAG,CACP,KAAK,kBAAoBA,IAG7B,KAAK,gBAAkBA,EACvB,KAAK,gBAAgB,UAAU,OAAO,UAAWA,CAAC,EACrD,CACD,cAAe,CACX,OAAO,KAAK,aAAa,YAC5B,CACD,UAAW,CACP,OAAO,KAAK,aAAa,aAAa,SAAQ,CACjD,CACD,sBAAuB,CAEnB,IAAI1C,EAAS,GACb,GAAI,KAAK,QAAU,KAAK,kBAAkB+wB,EAAqB,CAC3D,MAAMmE,EAAe,WAAW,KAAK,OAAO,gBAAgB,MAAM,iBAAiB,UAAU,CAAC,GAAK,EACnGl1B,GAAUk1B,CACb,CACD,KAAK,gBAAgB,MAAM,YAAY,WAAYl1B,EAAS,IAAI,CACnE,CACD,UAAW,CACP,KAAK,qBAAoB,CAC5B,CACD,SAASm1B,EAAgB,CACrB,GAAI,CAACA,EACD,MAAO,GAEX,KAAK,aAAa,aAAa,YAC/B,KAAK,aAAa,aAAa,QAAQC,EAAS,KAAK,IAAI,CAAC,EAC1D,SAASA,EAASp1C,EAAM,CAChBA,GAAQ,KAAK,uBAAuBguC,IACpC,KAAK,YAAY,wBAA0BhuC,EAC3C,KAAK,YAAY,oBAAoB,EAAK,EAEjD,CACD,MAAO,EACV,CACL,kNC3iDMmD,GAAY,CAId,cAAe,iBAIf,gBAAiB,mBACrB,EACMC,GAAOC,EAA4B,qCAAsCF,EAAS,EAClFkyC,GAAiBC,GAA2C,KAAK,OAAWlyC,EAAI,EAC/E,MAAMmyC,EAAiB,CAC1B,MACA,MACA,YAAYC,EAAW,CACnB,GAAI,CAACA,EAAU,OAAS,CAACA,EAAU,MAC/B,MAAM,IAAI,MAAM,mDAAmDA,EAAU,MAAM,EAAE,EAEzF,KAAK,MAAQA,EAAU,QACvB,KAAK,MAAQA,EAAU,KAC1B,CACD,SAAS/Z,EAAO,CACZ,MAAO,CAAE,MAAO,KAAK,MAAO,MAAO,KAAK,MAC3C,CACL,CACA,MAAMga,GAAoB,CACtB,OAAQ,oBACR,MAAOJ,GAAelyC,GAAU,aAAa,EAC7C,MAAO,iCACX,EACMuyC,GAAsB,CACxB,OAAQ,gBACR,MAAOL,GAAelyC,GAAU,eAAe,EAC/C,MAAO,iCACX,EACO,SAASwyC,IAA0B,CACtC,MAAO,CACH,CACI,GAAGF,GACH,UAAW,IAAM,IAAIF,GAAiBE,EAAiB,CAC1D,EACD,CACI,GAAGC,GACH,UAAW,IAAM,IAAIH,GAAiBG,EAAmB,CAC5D,EACD,CACI,UAAWE,GAA2B,SACtC,OAAQ,sBACR,MAAO,OACP,MAAO,MACV,CACT,CACA,oJCHMzyC,EAAY,CAId,6BAA8B,2CAI9B,WAAY,cAKZ,8BAA+B,qDAI/B,aAAc,gBAId,cAAe,iBAIf,MAAO,QAIP,eAAgB,mBAIhB,SAAU,YAIV,WAAY,eAIZ,IAAK,MAIL,KAAM,OAIN,MAAO,QAIP,cAAe,iBAIf,aAAc,kBAId,WAAY,eAIZ,WAAY,cAIZ,UAAW,aAIX,cAAe,kBAIf,YAAa,eAIb,iBAAkB,oBAIlB,YAAa,eAIb,cAAe,iBAIf,kBAAmB,qBAInB,iBAAkB,oBAIlB,sBAAuB,0BAIvB,iBAAkB,wBAIlB,sBAAuB,+BAIvB,SAAU,YAIV,eAAgB,mBAIhB,gBAAiB,oBAIjB,eAAgB,mBAIhB,gBAAiB,oBAKjB,iBAAkB,6BAKlB,kBAAmB,8BAKnB,eAAgB,sBAIhB,kBAAmB,sBAInB,6BAA8B,wCAClC,EACMC,GAAOC,EAA4B,yCAA0CF,CAAS,EACtFG,EAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC7D,SAASmxC,GAAav8B,EAAS,CAClC,OAAOA,EAAQ,UAAY,aAC/B,CACO,MAAM+4B,UAA4BrvB,EAA2B,CAChE,aACA,YACA,gBACA,mBACA,YACA,8BACA,qBACA,YACA,gBACA,QACA,gBACA,uBACA,iBACA,YACA,kBACA,eACAm0B,GAAiB,IAAI,IACrBvH,GAAsB,IAAI,IAC1BxE,GAAc,CAAA,EACd,eACA,YAAY9pC,EAAM+yC,EAAc,CAE5B,QACA,KAAK,aAAe/yC,EACpB,KAAK,YAAc,KACnB,KAAK,gBAAgB,aAAa,QAAS,GAAG81C,GAAsB,EAAG,OAAO,qBAAqB,EAAE,MAAM,CACvG,QAAS,+EACT,KAAM,GACN,MAAO,EACnB,CAAS,CAAC,EAAE,EACJ,KAAK,eAAiB,KAAK,gBAAgB,YAAY,KAAK,EAC5D,KAAK,gBAAkB,KAAK,eAAe,YAAY,MAAO,kBAAkB,EAChF,KAAK,gBAAgB,iBAAiB,QAAS,KAAK,gBAAgB,KAAK,IAAI,CAAC,EAC9E,MAAMC,EAAiB,IAAInxB,GAe3B,GAdAmxB,EAAe,KAAO,CAClB,MAAO,sBACP,SAAU,kBACV,OAAQ,OACR,MAAO,MACnB,EACQ,KAAK,gBAAgB,OAAOA,CAAc,EAC1C,KAAK,mBAAqB,KAAK,gBAAgB,YAAY,MAAO,QAAQ,EAC1E,KAAK,YAAc,KACnB,KAAK,8BAAgCrC,GACrC,KAAK,qBAAuB,IAAIxiC,GAA2B,GAAG,EAC9D,KAAK,YAAc,GACnB,KAAK,gBAAkB,GACvB,KAAK,QAAU,KACX6hC,EACA,KAAK,eAAiB,CAAE,QAAS,aAAa,MAE7C,CAUD,GATA,KAAK,eAAiB,CAClB,QAAS,cACT,iBAAkB,KAAK,eAAe,YAAY,MAAO,0BAA0B,EACnF,SAAU,CAAE,EACZ,cAAe,CAAE,EACjB,kBAAmB,IAAI7hC,GAA2B,GAAG,EACrD,iBAAkB,KAAK,aAAa,SAAU,IAAK,KAAK,YACxE,EACiB,KAAK,sBACNlR,EAAK,gBAAiB,CACtB,MAAM6zB,EAAS0Z,GAAuDC,GAAqD,EAAE,EACvHI,EAAU,KAAK,MAAM/Z,CAAM,EACjClwB,GAAmB,QAAQiqC,EAAStqC,EAAWH,EAAU,4BAA4B,CAAC,CACzF,CACI,KAAK,qBACb,CACD,KAAK,uBAAyB,IACjC,CACD,OAAO,mBAAmBM,EAAa,CACnC,MAAMuyC,EAAUvyC,EAAY,gBAAgB,cAAc,uBAAuB,EACjFwyC,GAA+BD,GAAWvyC,EAAY,gBAAiB,sBAAsB,CAChG,CACD,OAAO,mBAAmBzD,EAAM,CAC5B,IAAIk2C,EAAQl2C,EAAK,cACbk2C,EAAM,QAAU,CAACj2B,EAAyB,SAAU,EAAC,cAAc,oBAAoB,EAAE,QACzFi2B,EAAQA,EAAM,OAAOC,CAAM,GAE/B,SAASA,EAAO51C,EAAM,CAClB,OAAOA,EAAK,eAAc,IAAOgG,EAAqB,gBAAgB,SACzE,CACD,OAAO2vC,CACV,CACD,OAAO,kBAAkBl2C,EAAM,CAQ3B,OAPIA,EAAK,gBAAiB,GAAIA,EAAK,gBAAiB,GAAI+wC,EAAoB,mBAAmB/wC,CAAI,EAAE,QACjGA,EAAK,kBAAiB,GAGtBA,EAAK,aAAe,KAAK,cAGzB,CAACA,EAAK,YAAcA,EAAK,aAAeA,EAAK,WAAaA,EAAK,WAAW,aAAe,KAAK,UACvF,GAEOA,EAAK,WAET,YAAY,OADO,EAKpC,CACD,OAAO,+BAA+BklB,EAAallB,EAAM,CACrD,MAAMo2C,EAAgB,CAAC,SAAU,QAAS,QAAS,UAAW,eAAgB,eAAe,EACvFC,EAAoBr2C,EAAK,SAAQ,EAAG,WAAW,YAAYA,CAAI,EAC/Ds2C,EAAYpxB,EAAY,aAAY,EAAG,kBAAkB5hB,EAAWH,EAAU,UAAU,EAAG,GAAO,aAAa,EACrH,UAAWozC,KAAeH,EAAe,CACrC,MAAMI,EAAoBH,EAAoBA,EAAkB,QAAQE,CAAW,GAAK,EAAI,GAC5FD,EAAU,eAAc,EAAG,mBAAmB,IAAMC,EAAaE,EAAuB,KAAK,KAAMF,EAAa,CAACC,CAAiB,EAAG,CAAE,QAASA,EAAmB,aAAcD,CAAW,CAAE,CACjM,CACD,SAASE,EAAuBC,EAAaC,EAAS,CAClD32C,EAAK,SAAU,EAAC,SAAU,EAAC,iBAAiBA,EAAM02C,EAAaC,CAAO,CACzE,CACJ,CACD,cAAe,CACX,MAAO,CAACpC,GAAa,KAAK,cAAc,CAC3C,CACD,MAAO,CACH,OAAO,KAAK,YACf,CACD,WAAY,CACR,MAAO,EAAQ,KAAK,OACvB,CACD,uBAAuBqC,EAAa,CAChC,KAAK,YAAcA,EACd,KAAK,SACN,KAAK,+BAA8B,CAE1C,CACD,sBAAuB,CACnBC,GAA+C,SAAU,EAAC,iBAAiB,KAAK/M,EAAW,EAC3F,KAAKA,GAAc,EACtB,CACD,eAAegN,EAAa,CACpB,KAAK,cAAgBA,IAGzB,KAAK,YAAcA,EACnB,KAAK,gBAAgB,UAAU,OAAO,eAAgBA,CAAW,EACpE,CACD,IAAI,SAAU,CACV,OAAO,KAAK,eACf,CACD,IAAI,QAAQjnB,EAAW,CACf,KAAK,kBAAoBA,IAGzBA,GAAa,CAAC,KAAK,kBACnB,KAAK,eAAc,EAEd,CAACA,GAAa,KAAK,oBACxB,KAAK,kBAAkB,SACvB,OAAO,KAAK,mBAEhB,KAAK,gBAAkBA,EACnB,KAAK,kBACDA,GACA,KAAK,gBAAe,EACpB,KAAK,gBAAgB,UAAU,IAAI,SAAS,GAG5C,KAAK,gBAAgB,UAAU,OAAO,SAAS,GAG1D,CACD,SAASknB,EAAU,CACX,KAAKlB,GAAe,IAAIkB,EAAS,WAAY,CAAA,IAGjD,KAAKlB,GAAe,IAAIkB,EAAS,WAAU,EAAIA,CAAQ,EACvD,KAAKC,GAA2BD,CAAQ,EAC3C,CACDC,GAA2BpI,EAAO,CAC9B,MAAMS,EAAeT,EAAM,UACvBS,EAAa,uBACb,KAAK4H,GAAwB5H,EAAa,uBAAwBT,CAAK,EAGvE,KAAKsI,GAAyBtI,CAAK,CAE1C,CACD,IAAI,qBAAsB,CACtB,OAAO,KAAKN,EACf,CACD2I,GAAwB11C,EAAMqtC,EAAO,CAEjC,MAAMuI,EADM,KAAK,gBAAgB,uBAAuB,iBAAiB,EAAE,CAAC,EACrD,uBAAuB,uBAAuB,EACrE,UAAWC,KAAaD,EACpB,GAAIC,EAAU,uBAAuB,4BAA4B,EAAE,CAAC,EAAE,cAAgB71C,EAAM,CACxF,MAAM81C,EAAmBD,EAAU,uBAAuB,4BAA4B,EAAE,CAAC,EACzFC,EAAiB,UAAU,IAAI,mBAAmB,EAClD,KAAK/I,GAAoB,IAAI+I,EAAkBzI,CAAK,CACvD,CAER,CACDsI,GAAyBtI,EAAO,CAC5B,MAAM0I,EAAa,KAAK,gBAAgB,uBAAuB,sBAAsB,EAAE,CAAC,EACxFA,EAAW,UAAU,IAAI,mBAAmB,EAC5C,KAAKhJ,GAAoB,IAAIgJ,EAAY1I,CAAK,CACjD,CACD,uBAAwB,CACpB,OAAO,KAAK,6BACf,CACD,yBAAyB+E,EAAuB,CAC5C,KAAK,8BAAgCA,CACxC,CACD,eAAeoB,EAAc,CACzB,GAAKR,GAAa,KAAK,cAAc,GAGjCQ,EAAc,CACd,MAAMlhB,EAAS0Z,GAAuDC,GAAqD,IAAI,EAC/H,KAAK,eAAe,KAAO,KAAK,UAAU3Z,EAAQ,KAAK,cAAc,EACrE,MAAMxxB,EAAe0yC,EAAa,aAClC,KAAK,eAAe,KAAK,iBAAiB,QAAS,IAAM,CACrD1yC,EAAa,QAAQrC,GAAQ,CACpBiE,GAAuBjE,CAAI,CACpD,CAAiB,CACjB,CAAa,EACD,KAAK,eAAe,KAAK,iBAAiB,YAAaysB,GAAKA,EAAE,UAAW,EAAK,CACjF,CACJ,CACD,iBAAkB,CACd,MAAM8qB,EAAiB,KAAK,eACvBA,IAGA,KAAK,mBACN,KAAK,iBAAmB,SAAS,cAAc,KAAK,EACpD,KAAK,iBAAiB,UAAY,iBAClC,KAAK,iBAAiB,MAAM,YAAY,cAAgB,CAAC,KAAK,oBAAuB,IAAI,EACzFA,EAAe,QAAQ,KAAK,gBAAgB,GAEnD,CACD,YAAa,CACL,KAAK,gBAAkB,CAAC,KAAK,cAC7B,KAAK,YAAc,KAAK,eAAe,YAAY,OAAQ,eAAe,EAE1E5zC,GAAmB,QAAQ,KAAK,YAAaL,EAAWH,EAAU,8BAA+B,CAAE,IADpE,IAC+F,CAAE,CAAC,EACjImrB,GAA0B,KAAK,WAAW,EAEjD,CACD,gBAAiB,CAEb,GAAI,EADkB,KAAK,KAAI,EAAG,SAAU,IAAK,KAAK,eAElD,CAACkpB,GAAiC,SAAQ,EAAG,UAAU,qCAAqC,EAC5F,OAEJ,MAAMC,EAASD,GAAiC,SAAU,EAAC,UAAU,qCAAqC,EAC1G,GAAI,KAAK,gBAAkB,CAAC,KAAK,kBAAmB,CAChD,KAAK,kBAAoB,KAAK,eAAe,YAAY,OAAQ,qBAAqB,EACtF,MAAME,EAAiB,IAAIC,GAA6C,CACpE,SAAU,iBAC1B,CAAa,EACDD,EAAe,iBAAiB,QAAS/9B,GAAM,CAC3CA,EAAG,gBAAe,EAClB,KAAK,OAAO,GAAM,EAAK,EAClB89B,EAAO,SAC5B,EAAe,CAAE,QAAS,EAAI,CAAE,EACpBC,EAAe,iBAAiB,YAAa/9B,GAAM,CAC/CA,EAAG,gBAAe,CAClC,EAAe,CAAE,QAAS,EAAI,CAAE,EACpB,KAAK,kBAAkB,YAAY+9B,CAAc,CACpD,CACJ,CACD,QAAS,CACD,KAAK,aAAe,CAAC,KAAK,aAAY,GACtC,KAAK,YAAY,kBAAkB,IAAI,KAAK,aAAc,IAAI,CAErE,CACD,UAAW,CACH,KAAK,SACL,KAAK,QAAQ,SAEb,KAAK,aAAe,KAAK,YAAY,kBAAkB,IAAI,KAAK,YAAY,IAAM,MAClF,KAAK,YAAY,kBAAkB,OAAO,KAAK,YAAY,CAElE,CACD,UAAW,CACH,KAAK,kBACL,KAAK,gBAAe,EACpB,KAAK,gBAAgB,UAAU,IAAI,SAAS,GAEhD,KAAK,YAAW,EAChB,KAAK,gBAAgB,UAAY,EACpC,CACD,MAAM,YAAa,CACf,GAAI,KAAK,YACL,OAAO,KAAK,YAAY,oBAAoB,IAAI,CAEvD,CACD,MAAM,mBAAoB,CACtB,MAAM,KAAK,aAAa,WAAW,GAAI,EAAI,EAC3C,MAAM,MAAM,kBAAkB,OAAO,SAAS,CACjD,CACD,UAAW,CACH,KAAK,gBAGT,KAAK,YAAW,CACnB,CACD,YAAa,CACL,KAAK,gBAGT,KAAK,YAAW,CACnB,CACD,OAAO3xB,EAAWovB,EAAgB,CAC9B,OAAI,KAAK,QACE,GAEJ,MAAM,OAAOpvB,EAAWovB,CAAc,CAChD,CACD,SAASA,EAAgB,CACrB,OAAK,KAAK,aAGV,KAAK,YAAY,wBAA0B,GAC3C,KAAK,YAAY,cAAc,KAAK,aAAcA,CAAc,EAC5DA,IACA,KAAK,aAAa,YAClBjwC,EAAiB,YAAY2U,GAAwB,kCAAkC,GAE3F,KAAK,gBAAe,EACpB,KAAK,WAAU,EACf,KAAK,YAAY,wBAA0B,GACpC,IAXI,EAYd,CACD,UAAW,CACP,GAAI,CAAC,KAAK,YACN,MAAO,GAEX,MAAM+9B,EAAsB,KAAK,YAAY,gBAAgB,KAAK,YAAY,EAC9E,OAAAA,EAAsBA,EAAoB,OAAQ,EAAG,KAAK,OAAM,EACzD,EACV,CACD,SAAU,CAGN,OAAI,KAAK,QACE,IAEX,KAAK,aAAY,EAEV,GACV,CACD,kBAAkB74C,EAAO,CACrB,MAAM,kBAAkBA,CAAK,EACzB,MAAK,SAILA,EAAM,QAAU,GAChBA,EAAM,eAAc,CAE3B,CACD,WAAWA,EAAO,CAId,OAHI,KAAK,SAAW,KAAK,aAAY,GAGjC,KAAK,mBAAmBA,EAAM,MAAM,GAGpC,KAAK,aAAY,GAAM,CAAC,KAAK,UAC7B,KAAK,OAAM,EAER,EACV,CACD,iBAAkB,CACd,MAAO,CAAC,KAAK,aAAa,aAAY,GAAM,CAAC,KAAK,aAAa,6BAClE,CACD,8BAA8B84C,EAAK73C,EAAM,CACrC,GAAI63C,EAAI,uBAAuB,uBAAuB,EAAE,OAAS,EAC7DA,EAAI,aAAa73C,EAAM63C,EAAI,SAAS,UAE/BA,EAAI,cAAgB,KAAM,CAC/B,MAAMC,EAAcD,EAAI,YAAY,MAAM,WAAW,EACrD,GAAI,CAACC,EACD,OAEJ,MAAMrkC,EAAWqkC,EAAY,CAAC,EAC9BD,EAAI,YAAc,GAClBpmC,EAA2BomC,EAAK,IAAMpkC,CAAQ,EAC9CokC,EAAI,YAAY73C,CAAI,EACpByR,EAA2BomC,EAAK,GAAG,CACtC,CACJ,CACD,mBAAmBE,EAAa,CAI5B,GAHI,CAAC,KAAK,aAAe,KAAK,YAAY,gBAAiB,IAAK,KAAK,cAGjE,KAAK,aAAa,SAAQ,IAAO,KAAK,cAAgB,KAAK,aAAa,aAAe,KAAK,UAC5F,MAAO,GAEX,MAAMxG,EAAWwG,EAAY,6BAA6B,uBAAuB,EACjF,GAAIxG,EACA,OAAO,KAAK,qBAAqBA,CAAQ,EAE7C,MAAM6F,EAAYW,EAAY,6BAA6B,uBAAuB,EAClF,GAAIX,EACA,OAAO,KAAK,sBAAsBA,EAAWW,CAAW,EAE5D,MAAM/B,EAAU+B,EAAY,6BAA6B,sBAAsB,EAC/E,OAAI/B,EACO,KAAK,oBAAoBA,CAAO,EAEtB+B,EAAY,6BAA6B,eAAe,EAElE,KAAK,kBAET,EACV,CACD,gBAAgBh5C,EAAO,CACnB,KAAK,aAAe,KAAK,YAAY,gBAAgB,KAAMA,CAAK,CACnE,CACD,uBAAuBmmB,EAAanmB,EAAO,CAEvC,MAAM0E,EAAc,KAAK,aAAc,GAAI,KAAK,YAAc,KAAK,YAAY,gBAAgB,KAAK,YAAY,EAAI,KACpH,GAAI,CAACA,EACD,OAEJyhB,EAAY,YAAW,EAAG,WAAW5hB,EAAWH,EAAU,YAAY,EAAGM,EAAY,gBAAgB,KAAKA,CAAW,EAAG,CAAE,aAAc,eAAe,CAAE,EACzJ,MAAMgjB,EAAS1nB,EAAM,OACfq4C,EAAY3wB,EAAO,6BAA6B,uBAAuB,EACvEuxB,EAAevxB,EAAO,6BAA6B,eAAe,EACpE2wB,GAAa,CAACY,GACd9yB,EAAY,YAAW,EAAG,WAAW5hB,EAAWH,EAAU,aAAa,EAAG,KAAK,sBAAsB,KAAK,KAAMi0C,EAAW3wB,CAAM,EAAG,CAAE,aAAc,gBAAgB,CAAE,EAE1K,KAAK,wBAAwBvB,CAAW,EACxC6rB,EAAoB,+BAA+B7rB,EAAazhB,EAAY,KAAM,CAAA,EAClF,KAAK,uBAAuByhB,CAAW,EACvCA,EAAY,YAAW,EAAG,WAAW5hB,EAAWH,EAAU,KAAK,EAAG,SAAY,CAC1E,MAAM,KAAK,aAAa,OACpC,EAAW,CAAE,aAAc,OAAO,CAAE,CAC/B,CACD,iCAAiC+hB,EAAa,CACtC,KAAK,WAAY,IAAK,GACtB,KAAK,0BAA0BA,CAAW,EAE9C,KAAK,uBAAuBA,CAAW,CAC1C,CACD,0BAA0BA,EAAa,CACnCA,EAAY,YAAW,EAAG,WAAW5hB,EAAWH,EAAU,iBAAiB,EAAG,KAAK,kBAAkB,KAAK,IAAI,EAAG,CAAE,aAAc,oBAAoB,CAAE,CAC1J,CACD,uBAAuB+hB,EAAa,CAChCA,EAAY,YAAW,EAAG,WAAW5hB,EAAWH,EAAU,cAAc,EAAG,IAAM,KAAK,aAAa,eAAgB,EAAE,CAAE,aAAc,kBAAoB,CAAA,CAC5J,CACD,wBAAwB+hB,EAAaqsB,EAAU,CACtC,KAAK,SACNrsB,EAAY,YAAW,EAAG,WAAW5hB,EAAWH,EAAU,QAAQ,EAAG,KAAK,qBAAqB,KAAK,KAAMouC,CAAQ,EAAG,CAAE,aAAc,WAAW,CAAE,EAEtJ,KAAK,wBAAwBrsB,CAAW,CAC3C,CACD,wBAAwBA,EAAa,CAEjC,MAAM+yB,EAAa,KAAK,kBAEpBA,GAAc,CAAC,KAAK,SACpB/yB,EAAY,YAAW,EAAG,WAAW5hB,EAAWH,EAAU,UAAU,EAAG,KAAK,WAAW,KAAK,IAAI,EAAG,CAAE,aAAc,uBAAuB,CAAE,EAGhJ,MAAM+0C,EAAe,KAAK,aAAa,aAAY,EAC7CC,EAAiBnzB,GAAqC,iBAAiB,KAAK,IAAI,EAChFozB,EAAWC,GAA8B,WACzCxD,EAAc,KAAK,YACzB,GAAI,CAACA,EACD,OAEJ,IAAIyD,EACAd,GAAiC,SAAQ,EAAG,UAAU,kCAAkC,GACxFtyB,EAAY,cAAa,EAAG,aAAa,kCAAkC,EAE/EozB,EAAWpzB,EAAY,iBAAkB,EAAC,WAAW5hB,EAAWH,EAAU,GAAG,EAAG0xC,EAAY,iBAAiB,KAAKA,EAAa,GAAM,KAAK,YAAY,EAAG,CAAE,SAAU,CAAC,KAAK,gBAAiB,EAAE,aAAc,KAAO,CAAA,EACnNyD,EAAS,YAAYH,EAAe,IAAKC,CAAQ,CAAC,EAElD,MAAMG,EAAWrzB,EAAY,iBAAgB,EAAG,kBAAkB5hB,EAAWH,EAAU,IAAI,EAAG,GAAO,MAAM,EACrGsC,EAAU8yC,EAAS,UAczB,GAbKL,IACDI,EAAW7yC,EAAQ,WAAWnC,EAAWH,EAAU,aAAa,EAAG0xC,EAAY,iBAAiB,KAAKA,EAAa,GAAO,KAAK,YAAY,EAAG,CAAE,aAAc,iBAAiB,CAAE,EAChLyD,EAAS,YAAYH,EAAe,IAAKC,CAAQ,CAAC,GAElD,KAAK,aAAa,SAAQ,IAAO,KAAK,eACtC3yC,EAAQ,WAAWnC,EAAWH,EAAU,YAAY,EAAG,KAAK,YAAY,KAAK,IAAI,EAAG,CAAE,aAAc,eAAiB,CAAA,EACrHsC,EAAQ,WAAWnC,EAAWH,EAAU,UAAU,EAAG,KAAK,WAAW,KAAK,IAAI,EAAG,CAAE,SAAU,CAACynC,GAAa,KAAK,YAAY,EAAG,aAAc,cAAc,CAAE,EAC7JnlC,EAAQ,WAAWnC,EAAWH,EAAU,UAAU,EAAG,KAAK,WAAW,KAAK,IAAI,EAAG,CAAE,aAAc,sBAAwB,CAAA,GAExH+0C,IACDzyC,EAAQ,WAAWnC,EAAWH,EAAU,SAAS,EAAG,KAAK,UAAU,KAAK,IAAI,EAAG,CAAE,aAAc,YAAc,CAAA,EAC7GsC,EAAQ,WAAWnC,EAAWH,EAAU,aAAa,EAAG,KAAK,cAAc,KAAK,IAAI,EAAG,CAAE,aAAc,iBAAmB,CAAA,GAE1H,CAAC+0C,EAAc,CACfI,EAAWC,EAAS,mBAAmB,WAAWj1C,EAAWH,EAAU,WAAW,EAAG0xC,EAAY,iBAAiB,KAAKA,EAAa,GAAO,KAAK,YAAY,EAAG,CAAE,aAAc,cAAc,CAAE,EAC/LyD,EAAS,YAAYH,EAAe,IAAKC,CAAQ,CAAC,EAElD,MAAMI,EAAgB,CAAC,KAAK,aAAa,YAAc,KAAK,aAAa,WAAW,SAAU,IAAK,YACnGF,EAAWpzB,EAAY,YAAW,EAAG,WAAW5hB,EAAWH,EAAU,gBAAgB,EAAG0xC,EAAY,cAAc,KAAKA,EAAa,KAAK,YAAY,EAAG,CACpJ,SAAW,KAAK,aAAa,eAAc,GAAM2D,EACjD,aAAc,4BAC9B,CAAa,CACJ,CACDF,EAAWpzB,EAAY,iBAAkB,EAAC,WAAW5hB,EAAWH,EAAU,KAAK,EAAG0xC,EAAY,UAAU,KAAKA,EAAa,KAAK,YAAY,EAAG,CAAE,SAAU,CAACA,EAAY,SAAS,KAAK,YAAY,EAAG,aAAc,OAAS,CAAA,EAC3NyD,EAAS,YAAYH,EAAe,IAAKC,CAAQ,CAAC,EAClDE,EAAWpzB,EAAY,aAAc,EAAC,mBAAmB5hB,EAAWH,EAAU,WAAW,EAAG0xC,EAAY,kBAAkB,KAAKA,EAAa,KAAK,YAAY,EAAG,CAAE,QAASA,EAAY,kBAAkB,KAAK,YAAY,EAAG,aAAc,uBAAyB,CAAA,EACpQyD,EAAS,YAAYG,GAAqC,SAAQ,EAAG,uBAAuB,uBAAuB,GAAK,EAAE,EACtHR,GACA/yB,EAAY,YAAW,EAAG,WAAW5hB,EAAWH,EAAU,aAAa,EAAG,KAAK,OAAO,KAAK,IAAI,EAAG,CAAE,aAAc,gBAAgB,CAAE,EAExI,KAAK,0BAA0B+hB,CAAW,EAC1CA,EAAY,YAAW,EAAG,WAAW5hB,EAAWH,EAAU,gBAAgB,EAAG,KAAK,iBAAiB,KAAK,IAAI,EAAG,CAAE,aAAc,mBAAmB,CAAE,EACpJ,MAAMu1C,EAA0B,IAAIC,GACpCzzB,EAAY,YAAa,EAAC,WAAW5hB,EAAWH,EAAU,qBAAqB,EAAGu1C,EAAwB,aAAa,KAAK,KAAMzzC,EAAmB,WAAY,mCAAmC,EAAG,CAAE,aAAc,mCAAmC,CAAE,EACxP,KAAK,aAAa,qBAClBigB,EAAY,YAAW,EAAG,WAAW5hB,EAAWH,EAAU,gBAAgB,EAAG,IAAM,CAC/E,MAAMy1C,EAAoB,KAAK,aAAa,kBAAiB,EAC7D,GAAIA,EAAmB,CACnB,MAAMC,EAAQz4C,GAA8B,SAAU,EAAC,SAASw4C,CAAiB,EAC5E30C,GAAuB40C,CAAK,CACpC,CACjB,EAAe,CAAE,aAAc,oBAAoB,CAAE,CAEhD,CACD,cAAe,CACX,GAAI,CAAC,KAAK,aAAe,KAAK,YAAY,gBAAiB,IAAK,KAAK,aACjE,OAEJ,MAAM1J,EAAW,KAAK,gBACtB,GAAIoF,GAAa,KAAK,cAAc,GAAK,KAAK,eAAe,iBAAkB,CAC3E,MAAM6C,EAAYjI,EAAS,uBAAuB,uBAAuB,EAAE,CAAC,EAC5E,OAAIiI,EACO,KAAK,sBAAsBA,EAAWA,EAAU,uBAAuB,6BAA6B,EAAE,CAAC,CAAC,EAE5G,KAAK,iBACf,CACD,GAAI,KAAK,aAAa,SAAQ,IAAO,KAAK,UAAW,CACjD,MAAM7F,EAAWpC,EAAS,uBAAuB,uBAAuB,EAAE,CAAC,EAC3E,GAAIoC,EACA,OAAO,KAAK,qBAAqBA,CAAQ,CAEhD,CAEJ,CACD,iBAAkB,CAGd,MAAMtvC,EAAY,SAAS,cAAc,MAAM,EACzC62C,EAAO,KAAK,kBAAkB72C,EAAW,IAAK,GAAI,IAAI,EAC5D62C,EAAK,MAAM,WAAa,MACxBA,EAAK,MAAM,YAAc,MACzBA,EAAK,aAAa,QAAS,GAAG/S,GAAoB,eAAe,EAAE,MAAM,CAAE,OAAQ,GAAM,OAAQ,EAAI,CAAE,CAAC,EAAE,EAC1G,MAAM8R,EAAM,KAAK,gBAAgB,uBAAuB,iBAAiB,EAAE,CAAC,EAC5E,YAAK,8BAA8BA,EAAKiB,CAAI,EAC5CA,EAAK,uBAAuB,EAAI,EACzB,KAAK,sBAAsBA,EAAMA,CAAI,CAC/C,CACD,qBAAqBnE,EAAe,CAChC,MAAMoE,EAAoB,KAAK,gBAAgB,uBAAuB,4BAA4B,EAClG,QAAS9oC,EAAI,EAAG+oC,EAAMD,EAAkB,OAAQ9oC,EAAI+oC,EAAK,EAAE/oC,EACvD,GAAI8oC,EAAkB9oC,CAAC,EAAE,cAAgB0kC,GACrC,QAASsE,EAAOF,EAAkB9oC,CAAC,EAAE,YAAagpC,EAAMA,EAAOA,EAAK,YAChE,GAAIA,EAAK,WAAa,KAAK,cAGvBA,EAAK,UAAU,SAAS,6BAA6B,EACrD,OAAO,KAAK,sBAAsBA,EAAK,cAAeA,CAAI,EAM7E,CACD,sBAAsB7B,EAAW8B,EAAqB,CAElD,GADA,QAAQ,OAAO,KAAK,gBAAgB,WAAW9B,CAAS,CAAC,EACrDtyB,GAAyBsyB,CAAS,EAClC,MAAO,GAEX,MAAM+B,EAAuB/B,EAAU,uBAAuB,4BAA4B,EAAE,CAAC,EAC7F,GAAI,CAAC+B,EACD,MAAO,GAEX,MAAMxE,EAAgBwE,EAAqB,YACrCC,EAAwBhC,EAAU,uBAAuB,6BAA6B,EAAE,CAAC,EAE/F8B,EACIE,EAAsB,WAAWF,CAAmB,EAAIE,EAAwBF,EACpF,SAASG,EAA8Br5C,EAAM,CACzC,GAAIA,EAAK,WAAa,KAAK,UAAW,CAClCA,EAAK,UAAYA,EAAK,UAAYA,EAAK,UAAU,QAAQ,UAAW,EAAE,EAAI,GAC1E,MACH,CACD,GAAIA,EAAK,WAAa,KAAK,aAG3B,QAAS2P,EAAQ3P,EAAK,WAAY2P,EAAOA,EAAQA,EAAM,YACnD0pC,EAA8B1pC,CAAK,CAE1C,CACD,MAAM2pC,EAAiB3E,GAAiByE,EACpC,KAAK,aAAa,aAAazE,CAAa,GAAG,WAAW,IAAK,QAAQ,EACvE,OACA2E,IAAmB,QACnBF,EAAsB,gCAAgCE,EAAgBh2C,EAAWH,EAAU,qBAAqB,CAAC,EAGrHk2C,EAA8BjC,CAAS,EACvC,MAAMvjB,EAAS,IAAIC,GAAwB,KAAK,0BAA0B,KAAK,IAAI,EAAG,KAAK,iBAAiB,KAAK,IAAI,EAAG6gB,GAAiB,MAAS,EAClJ,SAAS4E,EAAyBx6C,EAAO,CACrCsjC,OAAAA,GAA2CtjC,EAAOq4C,CAAS,EACpD,EACV,CACIhR,GAA2B,WAAWgT,EAAsB,aAAe,EAAE,GAC9EvlB,EAAO,4BAA4B0lB,CAAwB,EAE/D,KAAK,oBAAoBnC,EAAWvjB,CAAM,EAC1C,MAAM2lB,EAAqB,KAAK,gBAAgB,sBAAqB,EACrE,OAAAA,GAAsBA,EAAmB,kBAAkBN,CAAmB,EACvE,EACV,CACD,qBAAqBO,EAAiB,CAClC,GAAI30B,GAAyB20B,CAAe,EACxC,MAAO,GAEX,IAAIlI,EAAW,KAAK,aAGhBA,EAAS,SAAU,IAAK,KAAK,cAAgBA,EAAS,aACtDA,EAAWA,EAAS,YAExB,MAAMtvC,EAAYw3C,EAAgB,6BAA6B,uBAAuB,EAClFx3C,IACAA,EAAU,YAAcsvC,EAAS,aAErC,MAAM1d,EAAS,IAAIC,GAAwB,KAAK,yBAAyB,KAAK,KAAMyd,CAAQ,EAAG,KAAK,iBAAiB,KAAK,IAAI,CAAC,EAC/H,KAAK,oBAAoBkI,EAAiB5lB,CAAM,EAChD,MAAM2lB,EAAqB,KAAK,gBAAgB,sBAAqB,EACrE,OAAAA,GAAsBA,EAAmB,kBAAkBC,CAAe,EACnE,EACV,CACD,oBAAoBC,EAAgB,CAChC,GAAI,CAACA,IACDA,EAAiB,KAAK,gBAAgB,uBAAuB,sBAAsB,EAAE,CAAC,EAClF,CAACA,GACD,MAAO,GAGf,MAAM1D,EAAU0D,EAAe,YAC/B,GAAI1D,IAAY,MAAQ2D,GAAiB,IAAI3D,EAAQ,YAAW,CAAE,EAC9D,MAAO,GAEX,GAAIlxB,GAAyB40B,CAAc,EACvC,MAAO,GAEX,MAAME,EAAoB,KAAK,4BAC/B,SAASC,GAAgB,CACjBD,GAAqBF,IACrBE,EAAkB,YAAc,KAAOF,EAAe,YAAc,IAE3E,CACD,MAAMI,EAAmB/6C,GAAU,CAC3BA,EAAM,MAAQ,MAGlB,KAAK,SAAW,KAAK,QAAQ,OAAM,EACnCA,EAAM,QAAQ,EAAI,EAC9B,EACQ,SAASg7C,EAAiB9xC,EAAS+xC,EAAYC,EAASjE,EAASnuB,EAAe,CACvE6xB,IAGLA,EAAe,oBAAoB,QAASG,EAAe,EAAK,EAChEH,EAAe,oBAAoB,UAAWI,EAAiB,EAAK,EACpE,KAAK,wBAAwB7xC,EAAS+xC,EAAYC,EAASjE,EAASnuB,CAAa,EACpF,CACD,SAASqyB,EAAiBjyC,EAAS+tC,EAAS,CACnC0D,IAGLA,EAAe,oBAAoB,QAASG,EAAe,EAAK,EAChEH,EAAe,oBAAoB,UAAWI,EAAiB,EAAK,EACpE,KAAK,iBAAiB7xC,EAAS+tC,CAAO,EACzC,CACD0D,EAAe,iBAAiB,QAASG,EAAe,EAAK,EAC7DH,EAAe,iBAAiB,UAAWI,EAAiB,EAAK,EACjE,MAAMjmB,EAAS,IAAIC,GAAwBimB,EAAiB,KAAK,IAAI,EAAGG,EAAiB,KAAK,IAAI,EAAGlE,CAAO,EAC5G,KAAK,oBAAoB0D,EAAgB7lB,CAAM,EAC/C,MAAM2lB,EAAqB,KAAK,gBAAgB,sBAAqB,EACrE,OAAAA,GAAsBA,EAAmB,kBAAkBE,CAAc,EAClE,EACV,CACD,oBAAoBzxC,EAAS4rB,EAAQ,CACjC,MAAMsmB,EAAgBpmB,GAA+B,aAAa9rB,EAAS4rB,CAAM,EAC5EsmB,EAID,KAAK,QAAU,CACX,OAAQA,EAAc,OACtB,OAAQA,EAAc,OACtB,OAAQ,OACR,OAAQ,IAAM,CAAG,CACjC,EARY,KAAK,QAAU,IAUtB,CACD,MAAM,mBAAmBC,EAAgBC,EAAiBC,EAAmB,CAIzE,GAHIA,IAAsB,MAGtB,KAAK,QACL,OAEJ,MAAMC,EAAe,KAAK,4BAA4BD,CAAiB,EAAE,KACzE,KAAK,gBAAkB,SAAS,cAAc,KAAK,EACnD,KAAK,gBAAgB,UAAY,mCAEjC,IAAI3qC,EAAQ,KAAK,gBAAgB,WACjC,KAAOA,GACHA,EAAM,MAAM,QAAU,OACtBA,EAAQA,EAAM,YAGd,KAAK,sBACL,KAAK,oBAAoB,MAAM,QAAU,QAG7C,KAAK,gBAAgB,OAAO,KAAK,eAAe,EAChD,KAAK,gBAAgB,iBAAiB,UAAW5Q,GAAS,CAClDA,EAAM,MAAQ,UACdA,EAAM,QAAQ,EAAI,CAElC,CAAS,EACD,MAAMy7C,EAAS,IAAIC,GAAiCC,GAAuB,OAAO,CAC9E,IAAKH,EACL,WAAY,CACRI,GAAkB,GAAG,CACjB,CACI,IAAK,YACL,IAAK,KACD,KAAK,SAAS,SACP,GAEd,EACD,CACI,IAAK,SACL,IAAK,KACD,KAAK,SAAS,SACP,GAEd,CACrB,CAAiB,EACDC,GAAoCL,CAAY,EAChDM,GAAgC,SAAU,EAC1CC,GAAiC,SAAU,EAC3CC,GAAgB,KAAK,CAAE,cAAe,GAAO,gBAAiB,GAAM,EACpEC,GAA8B,SAAU,EACxCC,GAAsB,MAAM,CACxB,cAAe,CAAE,UAAW,OAAS,EACrC,eAAgB,CAAE,UAAW,MAAQ,CACzD,CAAiB,EACDA,GAAsB,iBAAiB,CACnC,SAAUl8C,GAAS,CAEf,MAAMC,EAAgBD,EAAM,cACxBC,GAAiB,CAACA,EAAc,mBAAmBw7C,CAAM,GACzD,KAAK,SAAW,KAAK,QAAQ,OAAM,CAE1C,CACrB,CAAiB,CACJ,CACJ,CAAA,CAAC,EACF,KAAK,QAAU,CAAE,OAAQU,EAAO,KAAK,IAAI,EAAG,OAAQC,EAAQ,KAAK,IAAI,EAAG,OAAAX,EAAQ,OAAQY,EAAO,KAAK,IAAI,GACxGA,EAAO,KAAK,IAAI,EAChB,KAAK,gBAAgB,YAAYZ,CAAM,EACvCA,EAAO,OAAO,QACd,KAAK,aAAe,KAAK,YAAY,oBAAoB,KAAK,OAAO,EACrE,SAASY,GAAS,CACV,KAAK,aAAe,KAAK,kBACzB,KAAK,gBAAgB,MAAM,MAAQ,KAAK,YAAY,aAAY,EAAK,KAAK,oBAAsB,GAAK,KAE5G,CACD,SAASF,GAAS,CACV,KAAK,SAAW,KAAK,QAAQ,QAC7Bd,EAAeG,EAAc,KAAK,QAAQ,OAAO,MAAM,IAAI,SAAQ,CAAE,EAEzEY,EAAQ,KAAK,IAAI,CACpB,CACD,SAASA,GAAU,CACf,GAAI,CAAC,KAAK,SAAW,CAAC,KAAK,QAAQ,OAC/B,OAEJ,KAAK,QAAU,KAEX,KAAK,iBACL,KAAK,gBAAgB,YAAY,KAAK,eAAe,EAEzD,KAAK,gBAAkB,OAEnB,KAAK,qBACL,KAAK,oBAAoB,MAAM,eAAe,SAAS,EAG3D,IAAIxrC,EAAQ,KAAK,gBAAgB,WACjC,KAAOA,GACHA,EAAM,MAAM,eAAe,SAAS,EACpCA,EAAQA,EAAM,YAEd,KAAK,cACL,KAAK,YAAY,oBAAoB,IAAI,EACzC,KAAK,YAAY,SAErB0qC,GACH,CACJ,CACD,0BAA0BpyC,EAASozC,EAASpB,EAAStF,EAAe9sB,EAAe,CAC/E,KAAK,QAAU,KACf,MAAMgtB,EAAc,KAAK,YACzB,SAASyG,EAA4B9K,EAAO,CAIxC,GAHIA,GACA,KAAK,iBAAiBvoC,EAAS0sC,CAAa,EAE5C,CAAC9sB,EACD,OAEAgtB,IACAA,EAAY,kBAAiB,EAC7BA,EAAY,MAAK,GAGrB,MAAMsC,EAAa,KAAK,aAAa,WAAU,EAC/C,QAASlnC,EAAI,EAAGA,EAAIknC,EAAW,OAAQ,EAAElnC,EACrC,GAAIknC,EAAWlnC,CAAC,EAAE,OAAS0kC,EAG3B,CAAI9sB,IAAkB,WACd5X,IAAM,EACN,KAAK,oBAAmB,EAGxB,KAAK,qBAAqBknC,EAAWlnC,EAAI,CAAC,EAAE,IAAI,EAIhDA,IAAMknC,EAAW,OAAS,EAC1B,KAAK,gBAAe,EAGpB,KAAK,qBAAqBA,EAAWlnC,EAAI,CAAC,EAAE,IAAI,EAGxD,OAGA4X,IAAkB,WACdwzB,IAAY,IAERlE,EAAW,OAAS,GACpB,KAAK,qBAAqBA,EAAWA,EAAW,OAAS,CAAC,EAAE,IAAI,EAKhEA,EAAW,OAAS,GACpB,KAAK,qBAAqBA,EAAWA,EAAW,OAAS,CAAC,EAAE,IAAI,EAInEtvB,IAAkB,YAClBgB,GAAsCwyB,CAAO,EAI9C,KAAK,oBAAmB,EAHxB,KAAK,gBAAe,EAM/B,CACD,IAAK1G,EAAc,KAAM,GAAI0G,EAAQ,KAAM,IAAKpB,IAAYoB,EAAS,CACjE,KAAK,aAAa,aAAa1G,EAAe0G,EAASC,EAA4B,KAAK,IAAI,CAAC,EAC7F,MACH,CACD,KAAK,YAAW,EAChBA,EAA4B,KAAK,IAAI,CACxC,CACD,wBAAwBrzC,EAASozC,EAASpB,EAASjE,EAASnuB,EAAe,CACvE,KAAK,QAAU,KACf,MAAM0zB,EAAO,KACb,SAASC,GAAS,CACd,MAAM5B,EAAoB2B,EAAK,4BAC3B3B,IACAA,EAAkB,YAAc,KAAO5D,EAAU,KAErDuF,EAAK,iBAAiBtzC,EAAS+tC,CAAO,EACtCsF,EAA4B,KAAKC,CAAI,CACxC,CACD,SAASD,GAA8B,CACnC,GAAIzzB,IAAkB,UAAW,CAC7B,KAAK,gBAAe,EACpB,MACH,CACD,MAAMsvB,EAAa,KAAK,aAAa,WAAU,EAC3CA,EAAW,OAAS,EACpB,KAAK,qBAAqBA,EAAW,CAAC,EAAE,IAAI,EAG5C,KAAK,gBAAe,CAE3B,CAED,GADAkE,EAAUA,EAAQ,OACdA,IAAYpB,EAAS,CACrBuB,IACA,MACH,CACD,MAAM3G,EAAc,KAAK,YACnBzD,EAAc,KAAK,SACzB,KAAK,aAAa,YAAYiK,EAAS,CAAC7K,EAAOsB,IAAY,CACvD,GAAItB,GAAS,CAACsB,EAAS,CACnB0J,IACA,MACH,CACD,GAAI,CAAC3G,EACD,OAEJ,MAAM9C,EAAc8C,EAAY,oBAAoBzD,EAAaZ,EAAOsB,CAAO,EAG/EwJ,EAA4B,KAAKvJ,CAAW,CACxD,CAAS,CACJ,CACD,yBAAyBR,EAAUtpC,EAASozC,EAAS,CACjD,KAAK,QAAU,KACf,SAAS9vC,GAAW,CAChB,KAAK,YAAW,CACnB,CACDgmC,EAAS,aAAa8J,EAAS9vC,EAAS,KAAK,IAAI,CAAC,CACrD,CACD,iBAAiBkwC,EAAUC,EAAU,CACjC,KAAK,QAAU,KAEf,KAAK,YAAW,CACnB,CACD,2BAA4B,CAIxB,GAAI,KAAK,SAAU,CACf,MAAMC,EAAU,KAAK,oBAAoB,iBAAiB,QAAQ,EAClE,OAAOA,EAAQA,EAAQ,OAAS,CAAC,CACpC,CAID,MAAMC,EAAO,KAAK,gBAAgB,uBAAuB,iBAAiB,EAC1E,OAAOA,EAAK,SAAW,EAAI,KAAOA,EAAKA,EAAK,OAAS,CAAC,CACzD,CACD,YAAYC,EAAc,CAGtB,GAAI,KAAK,QACL,OAEJ,MAAMC,EAAW,KAAK,cAAcD,GAAgB,IAAI,EACxD,GAAI,KAAK,aAAa,SAAU,IAAK,KAAK,wBAA0B,KAAK,aAAa,eAAgB,GAClG,KAAK,aAAa,iBAAkB,CACpC,KAAK,oBAAoB,UAAU,IAAI,aAAa,EACpD,IAAIE,EAAQ,EACZ,QAAS/7C,EAAO,KAAK,aAAc+7C,GAAS/7C,EAAMA,EAAOA,EAAK,WACtDA,EAAK,aAAe,KAAK,wBACzB+7C,IAGHA,EAID,KAAK,oBAAoB,UAAU,IAAI,qBAAuBA,CAAK,EAHnE,KAAK,oBAAoB,UAAU,IAAI,kBAAkB,CAKhE,CACD,KAAK,eAAe,iBACK,KAAK,eAAe,YAAY,OAAQ,WAAW,EAC3D,OAAOD,CAAQ,EAEhC,KAAK,MAAQ,KAAK,eAClB,KAAK,kBAAiB,EACtB,KAAK,eAAe,QAAQ,KAAK,eAAe,EAC5CvH,GAAa,KAAK,cAAc,IAChC,KAAK,eAAe,OAAO,KAAK,eAAe,gBAAgB,EAC3D,KAAK,eAAe,MACpB,KAAK,eAAe,OAAO,KAAK,eAAe,IAAI,GAG3D,OAAO,KAAK,iBACZ,OAAO,KAAK,YACZ,OAAO,KAAK,kBACR,KAAK,WACL,KAAK,gBAAe,EACpB,KAAK,WAAU,GAGnB,UAAW3F,KAAS,KAAKiH,GAAe,OAAM,EAC1C,KAAKmB,GAA2BpI,CAAK,EAEzC,KAAK,+BAA8B,CACtC,CACD,mBAAoB,CAChB,IAAInrC,EAAc,KAAK,OACnBs4C,EAAQ,EACZ,KAAOt4C,IAAgB,MACnBs4C,IACAt4C,EAAcA,EAAY,OAG9B,MAAO,KAAMs4C,EAAQ,IAAM,KAAK,gBAAkB,KAAK,cAAa,EAAK,EAAI,GAChF,CACD,mBAAoB,CAChB,MAAM/7B,EAAS,KAAK,oBACpB,KAAK,gBAAgB,MAAM,KAAQ,CAACA,EAAU,KAC9C,KAAK,gBAAgB,MAAM,YAAY,WAAYA,EAAS,IAAI,EAC5D,MAAK,gBAGL,KAAK,aAAa,SAAQ,IAAO,KAAK,cAGrC,KAAK,qBAAqB,SAAS,KAAK,0BAA0B,KAAK,IAAI,CAAC,CACpF,CACD,2BAA4B,CACxB,GAAI,CAAC,KAAK,YACN,OAAO,QAAQ,UAEnB,MAAMhgB,EAAO,KAAK,aACb,KAAK,YAAY,sBAClB,KAAK,YAAY,oBAAsB21C,MAE3C,MAAMqG,EAAoB,IAAI,IAC9B,UAAWC,KAAsB,KAAK,YAAY,oBAC9CD,EAAkB,IAAIC,EAAmB,OAAQA,CAAkB,EAEvE,MAAMC,EAAW,CAAA,EACXC,EAAc,CAAA,EACdC,EAAwB,CAAA,EAC9Bp8C,EAAK,gBAAgBq8C,CAAO,EAC5B,SAASA,EAAQ7xC,EAAG8xC,EAAQ,CACxB,MAAM9G,EAAYwG,EAAkB,IAAIM,CAAM,EACzC9G,GAGL0G,EAAS,KAAK,QAAQ,QAAQ1G,EAAU,UAAW,CAAA,EAAE,KAAK+G,EAAkB,KAAK,KAAM/xC,CAAC,CAAC,CAAC,CAC7F,CACD,SAAS+xC,EAAkB/xC,EAAGgyC,EAAW,CACrC,MAAMC,EAAaD,EAAU,SAAShyC,CAAC,EAClCiyC,IAGJjyC,IAAMxK,EAAOm8C,EAAcC,GAAuB,KAAKK,CAAU,CACrE,CACD,OAAO,QAAQ,IAAIP,CAAQ,EAAE,KAAKQ,EAAoB,KAAK,IAAI,CAAC,EAChE,SAASA,GAAsB,CAK3B,GAJA,KAAK,mBAAmB,iBACxB,KAAK,mBAAmB,UAAU,IAAI,QAAQ,EAC9C,KAAK,gBAAgB,UAAU,OAAO,kBAAmB,GAAQP,EAAY,QAAUC,EAAsB,OAAO,EACpHh4B,GAAsB,KAAK,mBAAoB,EAAE,EAC7C,CAAC+3B,EAAY,QAAU,CAACC,EAAsB,OAC9C,OAEJ,MAAM33C,EAAS,IAAI,IACbk4C,EAAS,SAAS,cAAc,KAAK,EAC3C,UAAWF,KAAcN,EAAa,CAClC,MAAM3gB,EAAemhB,EAAO,YAAY,KAAK,EAC7CnhB,EAAa,YAAcihB,EAAW,MACtCh4C,EAAO,IAAIg4C,EAAW,KAAK,CAC9B,CACD,GAAI,KAAK,UAAY,CAACN,EAAY,OAC9B,OAEJ,MAAMS,EAAmB,IAAI,IAC7B,GAAIR,EAAsB,OAAQ,CAC9B,IAAIn0C,EAAU00C,EAAO,YAAY,KAAK,EACtC10C,EAAQ,YAAc3E,EAAWH,EAAU,QAAQ,EACnD,UAAWs5C,KAAcL,EACrBn0C,EAAU00C,EAAO,YAAY,KAAK,EAClC10C,EAAQ,MAAM,WAAa,OAC3BA,EAAQ,YAAcw0C,EAAW,MACjCG,EAAiB,IAAIH,EAAW,KAAK,CAE5C,CACD,IAAIpT,EAAS,EACbwT,EAAc,KAAK,KAAMp4C,EAAQ,4BAA4B,EACxD,KAAK,UACNo4C,EAAc,KAAK,KAAMD,EAAkB,4DAA4D,EAE3Gj5C,GAAmB,QAAQ,KAAK,mBAAoBg5C,EAAO,WAAW,EACtEv4B,GAAsB,KAAK,mBAAoBu4B,EAAO,aAAe,EAAE,EACvE,SAASE,EAAcp4C,EAAQunB,EAAW,CACtC,UAAWjnB,KAASN,EAAQ,CACxB,MAAMkL,EAAQ,KAAK,mBAAmB,YAAY,MAAOqc,CAAS,EAClE,KAAK,mBAAmB,UAAU,OAAO,QAAQ,EACjDrc,EAAM,MAAM,gBAAkB5K,EAC9B4K,EAAM,MAAM,YAAc5K,EACtBskC,IACA15B,EAAM,MAAM,WAAa05B,EAAS,MAEtCA,GAAU,CACb,CACJ,CACJ,CACJ,CACD,kBAAkBne,EAAe3pB,EAAMqD,EAAOi3C,EAAciB,EAAY98C,EAAM,CAC1E,MAAM+8C,EAA0B,gBAChC,IAAIC,EAAiB,EACjBC,EAAiB,EACjBC,EAA4B,EAChC,SAASC,EAAqBl1C,EAASrD,EAAO,CAC1C,MAAMhE,EAAS,KAAK,4BAA4BgE,CAAK,EAUrD,IATAq4C,EAAiBr8C,EAAO,aAAa,OACrCgE,EAAQhE,EAAO,KAAK,QAAQm8C,EAAyB,CAAClvC,EAAOuvC,KAAkB,CAC3E,KAAOJ,EAAiBC,GAAkBr8C,EAAO,aAAao8C,CAAc,EAAE,OAASI,IACnFx8C,EAAO,aAAao8C,CAAc,EAAE,QAAUE,EAC9C,EAAEF,EAEN,OAAAE,GAA6B,EACtBrvC,EAAQ,GAC/B,CAAa,EACMmvC,EAAiBC,GACpBr8C,EAAO,aAAao8C,CAAc,EAAE,QAAUE,EAC9C,EAAEF,EAEN/0C,EAAQ,gCAAgCrD,CAAK,EAC7Cy4C,GAAyCp1C,EAASrH,EAAO,aAAc,0BAA0B,CACpG,CACD,MAAM08C,EAAWR,GAAcl4C,EAAM,OAAS,EACxC24C,EAAkBryB,EAAc,YAAY,OAAQ,uBAAuB,EACjFqyB,EAAgB,aAAa,QAAS,GAAGxX,GAAoBxkC,IAAS,QAAU,kBAAoB,WAAW,EAAE,MAAM,CACnH,OAAQ,GACR,SAAU,EACtB,CAAS,CAAC,EAAE,EACJ,MAAMi8C,EAAkBD,EAAgB,YAAY,OAAQ,4BAA4B,EACxFC,EAAgB,YAAcj8C,EAC1B+7C,GACA7rC,EAA2B8rC,EAAiB,KAAU,EAE1D,MAAME,EAAmBF,EAAgB,YAAY,OAAQ,6BAA6B,EACtF1B,GAAgBA,EAAa,oBAAoBt6C,CAAI,GACrD00C,GAA+BqH,EAAUG,EAAmBD,EAAiB,sBAAsB,EAEvG,SAASE,EAAa94C,EAAO,CACzB,MAAM+4C,EAAgB39C,EAAOA,EAAK,WAAW4E,CAAK,EAAI,KACtD,GAAI+4C,IAAkB,KAAM,CACxB,MAAMrkC,EAAO,SAAS,cAAc,MAAM,EAC1C,OAAA6jC,EAAqB,KAAK,KAAM7jC,EAAM1U,CAAK,EACpC0U,CACV,CACD1U,EAAQA,EAAM,QAAQm4C,EAAyB,KAAU,EACrDn4C,EAAM,WAAW,OAAO,IACxBA,EAAQg5C,GAAoCh5C,EAAO,EAAE,GAEzD,MAAM8C,EAAO1H,GAAQA,EAAK,SAAU,EAAC,YAAW,IAAO,IACnD69C,GAAe,OAAOF,EAAe/4C,EAAO,GAAI,GAAyB,WAAW,EACpFyzB,GAA+B,WAAWslB,EAAe,CACrD,KAAM/4C,EACN,aAAc,GACd,iBAAkB,GAClB,iBAAkB,CACtC,CAAiB,EACL,OAAO0C,GAAoB,YAAYI,EAAMi2C,CAAa,CAC7D,CACD,MAAMlqC,EAAWzT,EAAOA,EAAK,SAAQ,EAAG,YAAa,EAAG,GAexD,GAZIyT,IAAalS,IAAS,OAASA,IAAS,SAAWqD,EACnD64C,EAAiB,YAAYC,EAAa,KAAK,KAAM94C,CAAK,CAAC,GAErD6O,IAAa,OAASA,IAAa,WAAalS,IAAS,SAC/Dk8C,EAAiB,YAAYK,EAAc,KAAK,KAAMl5C,CAAK,CAAC,EAEvD6O,IAAa,UAAYlS,IAAS,cAAgBA,IAAS,QAChEk8C,EAAiB,YAAYK,EAAc,KAAK,KAAMl5C,CAAK,CAAC,EAG5Du4C,EAAqB,KAAK,KAAMM,EAAkB74C,CAAK,EAEvDrD,IAAS,gBAAiB,CAC1B,MAAMw8C,EAAan5C,EAAQ64C,EAAmBD,EACzC,KAAK,yBAAyBO,EAAY,gBAAsFz6C,EAAWH,EAAU,iBAAiB,CAAC,CAC/K,CACGm6C,GACA7rC,EAA2B8rC,EAAiB,GAAG,EAEnD,SAASO,EAAcl5C,EAAO,CAQ1B,MAAMwuB,EAAW,SAAS,yBAC1B,IAAInjB,EAAI,EACR,KAAOrL,EAAM,QAAQ,CACbqL,IAAM,GACNwB,EAA2B2hB,EAAU,GAAG,EAE5CxuB,EAAQA,EAAM,OAEd,IAAIsD,EAAM,GACNiyB,GAAa,GACjB,MAAM6jB,GAAep5C,EAAM,OAAO,IAAI,EACtC,GAAIo5C,KAAiB,GACjB91C,EAAMtD,UAEDo5C,GAAe,GAAKp5C,EAAMo5C,GAAe,CAAC,IAAM,IACrD91C,EAAMtD,EAAM,UAAU,EAAGo5C,EAAY,MAEpC,CACD91C,EAAMtD,EAAM,UAAU,EAAGo5C,EAAY,EACrC,MAAMC,GAAer5C,EAAM,QAAQ,IAAKo5C,EAAY,EAChDC,KAAiB,GACjB9jB,GAAav1B,EAAM,UAAUo5C,GAAcC,GAAe,CAAC,EAG3D9jB,GAAav1B,EAAM,UAAUo5C,EAAY,CAEhD,CACG91C,IAEIA,EAAI,SAAS,GAAG,GAChBkrB,EAAS,YAAYsqB,EAAa,KAAK,KAAMx1C,EAAI,UAAU,EAAGA,EAAI,OAAS,CAAC,CAAC,CAAC,EAC9EuJ,EAA2B2hB,EAAU,GAAG,GAGxCA,EAAS,YAAYsqB,EAAa,KAAK,KAAMx1C,CAAG,CAAC,GAGrDiyB,IACA1oB,EAA2B2hB,EAAU+G,EAAU,EAEnDv1B,EAAQA,EAAM,UAAUsD,EAAI,OAASiyB,GAAW,MAAM,CACzD,CACD,OAAO/G,CACV,CACD,OAAOmqB,CACV,CACD,MAAM,yBAAyBW,EAAeC,EAAU7iC,EAAS,CAC7D,MAAM8iC,EAAmB,MAAM,KAAK,aAAa,SAAQ,EAAG,qBAAqB,KAAK,aAAa,GAAID,CAAQ,EACzGE,EAAiB,KAAK,aAAa,SAAQ,EAAG,UAAUD,CAAgB,EAC9E,GAAI,CAACC,EACD,OAEJ,MAAM32C,EAAO,MAAM84B,GAA2B,QAAQ6d,EAAgB,CAClE,qBAAsB,GACtB,QAAA/iC,EACA,YAAa4iC,EAAc,aAAe,OAC1C,cAAe,EAC3B,CAAS,EACDA,EAAc,eAAc,EAC5BA,EAAc,OAAOx2C,CAAI,CAC5B,CACD,sBAAsBwjB,EAAeozB,EAAmB,CACpD,MAAMjzB,EAAgBH,EAAc,YAAY,OAAQ,4BAA4B,EACpFG,EAAc,YAAc,KAAOizB,EACnC7sC,EAA2ByZ,EAAe,GAAQ,CACrD,CACD,YAAYA,EAAe8qB,EAASjD,EAAcwL,EAAuB1C,EAAc,CACnF,MAAM77C,EAAO,KAAK,aACZ6rB,EAAU,CAAC,iBAAiB,EAC9BknB,GAAgBwL,GAChB1yB,EAAQ,KAAK,OAAO,EAExB,MAAMyrB,EAAapsB,EAAc,YAAY,OAAQW,EAAQ,KAAK,GAAG,CAAC,EACtEpa,EAA2B6lC,EAAY,GAAG,EAC1C,MAAMoC,EAAiBpC,EAAW,YAAY,OAAQvE,EAAe,6BAA+B,sBAAsB,EAK1H,GAJKA,GACD2G,EAAe,aAAa,QAAS,GAAG3T,GAAoB,UAAU,EAAE,MAAM,CAAE,OAAQ,GAAM,SAAU,EAAI,CAAE,CAAC,EAAE,EAErH2T,EAAe,aAAe3G,EAAe,IAAM,IAAMiD,EACrD,CAACjD,EAAc,CACf,GAAI/yC,EAAK,gBAAiB,CACtB,MAAMm3C,EAAan3C,EAAK,aACxB,QAASiQ,EAAI,EAAGA,EAAIknC,EAAW,OAAQ,EAAElnC,EAAG,CACxC,MAAM6oC,EAAO3B,EAAWlnC,CAAC,EACzBwB,EAA2B6lC,EAAY,GAAG,EAC1C,KAAK,kBAAkBA,EAAYwB,EAAK,KAAMA,EAAK,MAAO+C,EAAc,GAAO77C,CAAI,CACtF,CACJ,CACD,GAAI67C,EAAc,CACd,IAAI2C,EAAa3C,EAAa,qBAAsB,GAAIA,EAAa,mBAAkB,EACvF2C,EAAaA,GAAe,CAAC,KAAK,UAAY3C,EAAa,mBAAkB,EACzE2C,GACAvI,GAA+ByD,EAAgB,sBAAsB,CAE5E,CACJ,CACDjoC,EAA2B6lC,EAAY,GAAG,EAC1C7lC,EAA2ByZ,EAAe,GAAQ,EAC9CosB,EAAW,aACXlzB,GAAsBkzB,EAAYA,EAAW,WAAW,CAE/D,CACD,4BAA4BlyC,EAAM,CAC9B,IAAIxE,EAAS,GACT69C,EAAuB,EAC3B,MAAMC,EAAe,CAAA,EACfC,EAAelK,GACrB,QAASxkC,EAAI,EAAG2uC,EAAOx5C,EAAK,OAAQ6K,EAAI2uC,EAAM,EAAE3uC,EAAG,CAC/C,MAAM4uC,EAAOz5C,EAAK,OAAO6K,CAAC,EAC1B,GAAI0uC,EAAa,IAAIE,CAAI,EAAG,CACxBj+C,GAAUwE,EAAK,UAAUq5C,EAAsBxuC,CAAC,EAChD,MAAM6uC,EAAc,IAAMH,EAAa,IAAIE,CAAI,EAAI,IACnDH,EAAa,KAAK,IAAIK,GAAgCn+C,EAAO,OAAQk+C,EAAY,MAAM,CAAC,EACxFl+C,GAAUk+C,EACVL,EAAuBxuC,EAAI,CAC9B,CACJ,CACD,OAAIrP,IACAA,GAAUwE,EAAK,UAAUq5C,CAAoB,GAE1C,CAAE,KAAM79C,GAAUwE,EAAM,aAAAs5C,CAAY,CAC9C,CACD,cAAc7C,EAAc,CACxB,MAAM77C,EAAO,KAAK,aACZg/C,EAAW,SAAS,yBACpBC,EAAwB,IAAM,CAChC,KAAK,+BAA8B,CAC/C,EACQ,OAAQj/C,EAAK,SAAU,EAAA,CACnB,KAAK,KAAK,eACN,KAAK,kBAAkBg/C,EAAUh/C,EAAK,KAAMA,EAAK,MAAO67C,EAAc,EAAI,EAC1E,MACJ,KAAK,KAAK,aAAc,CACpB,IAAIyC,EAAoBt+C,EAAK,aAC7B,GAAIs+C,EAAmB,CACnB,MAAMryB,EAAmBjsB,EAAK,mBAC1BisB,IACAqyB,GAAqB,IAAIryB,CAAgB,KAE7C,KAAK,sBAAsB+yB,EAAUV,CAAiB,EACtD,KACH,CACD,MAAMtI,EAAUh2C,EAAK,wBACrB,GAAI,KAAK,eAAgB,CACrB,KAAK,YAAYg/C,EAAUhJ,EAAS,GAAM,GAAM6F,CAAY,EAC5D,KACH,CAED,GADA,KAAK,YAAYmD,EAAUhJ,EAAS,GAAO,GAAO6F,CAAY,EAC1D,KAAK,eAAgB,CACrB,GAAI,CAAC,KAAK,SAAU,CAChB,MAAMqD,EAAe,IAAIC,GACzBD,EAAa,KAAO,CAChB,aAAc,IAAM,KAAK,OAAQ,CAC7D,EACwBF,EAAS,YAAYE,CAAY,EAIjC,MAAMjN,EAAS,SAAS,cAAc,MAAM,EAC5CA,EAAO,YAAc,IACrBA,EAAO,MAAM,SAAW,IACxB+M,EAAS,YAAY/M,CAAM,EAC3BxgC,EAA2ButC,EAAU,GAAQ,EAC7C,KAAK,YAAYA,EAAUhJ,EAAS,GAAM,GAAO6F,CAAY,CAChE,CACD,KACH,CACD,GAAI9K,EAAoB,kBAAkB/wC,CAAI,EAAG,CAC7C,MAAMy5C,EAAkBuF,EAAS,YAAY,OAAQ,uBAAuB,EAC5EvF,EAAgB,aAAa,QAAS,GAAG1T,GAAoB,WAAW,EAAE,MAAM,CAAE,OAAQ,GAAM,SAAU,EAAI,CAAE,CAAC,EAAE,EACnH,MAAM+O,EAAa90C,EAAK,WACxB,GAAI,CAAC80C,EACD,MAAM,IAAI,MAAM,2EAA2E,EAE/F,MAAMl0C,EAAS,KAAK,4BAA4Bk0C,EAAW,UAAW,CAAA,EACtE2E,EAAgB,YAAc2F,GAA4Cx+C,EAAO,IAAI,EACrFy8C,GAAyC5D,EAAiB74C,EAAO,aAAc,0BAA0B,EACzG6Q,EAA2ButC,EAAU,GAAQ,EAC7C,KAAK,YAAYA,EAAUhJ,EAAS,GAAM,GAAO6F,CAAY,EACzDA,GAAgBA,EAAa,sBAC7B5F,GAA+BwD,EAAiB,sBAAsB,EAEtEoC,GAAgBA,EAAa,sBAC7B5F,GAA+BwD,EAAiB,sBAAsB,EAE1E,KACH,EACG,KAAK,aAAe,KAAK,YAAY,eAAiB,CAAC4F,GAA4B,IAAIrJ,CAAO,IAC9F,KAAK,YAAYgJ,EAAUhJ,EAAS,GAAM,GAAO6F,CAAY,EAEjE,KACH,CACD,KAAK,KAAK,UACN,GAAI77C,EAAK,YAAcA,EAAK,WAAW,WAAW,YAAa,IAAK,SAAU,CAC1E,MAAM8xC,EAAUkN,EAAS,YAAY,OAAQ,2CAA2C,EACxFlN,EAAQ,aAAa,QAAS,GAAG/L,GAAoB,kBAAkB,EAAE,MAAM,CAAE,OAAQ,GAAM,SAAU,EAAI,CAAE,CAAC,EAAE,EAClH,MAAM3gC,EAAOpF,EAAK,YAClB8xC,EAAQ,YAAc1sC,EAAK,QAAQ,iBAAkB,EAAE,EAClDk6C,GAA8CxN,EAAS,iBAAiB,EAAE,KAAKmN,CAAqB,CAC5G,SACQj/C,EAAK,YAAcA,EAAK,WAAW,WAAW,YAAa,IAAK,QAAS,CAC9E,MAAM8xC,EAAUkN,EAAS,YAAY,OAAQ,4CAA4C,EACzFlN,EAAQ,aAAa,QAAS,GAAG/L,GAAoB,eAAe,EAAE,MAAM,CAAE,OAAQ,GAAM,SAAU,EAAI,CAAE,CAAC,EAAE,EAC/G,MAAM3gC,EAAOpF,EAAK,YAClB8xC,EAAQ,YAAc1sC,EAAK,QAAQ,iBAAkB,EAAE,EAClDk6C,GAA8CxN,EAAS,UAAU,EAAE,KAAKmN,CAAqB,CACrG,KACI,CACDxtC,EAA2ButC,EAAU,GAAG,EACxC,MAAMvF,EAAkBuF,EAAS,YAAY,OAAQ,uBAAuB,EAC5EvF,EAAgB,aAAa,QAAS,GAAG1T,GAAoB,WAAW,EAAE,MAAM,CAAE,OAAQ,GAAM,SAAU,EAAI,CAAE,CAAC,EAAE,EACnH,MAAMnlC,EAAS,KAAK,4BAA4BZ,EAAK,UAAW,CAAA,EAChEy5C,EAAgB,YAAc2F,GAA4Cx+C,EAAO,IAAI,EACrFy8C,GAAyC5D,EAAiB74C,EAAO,aAAc,0BAA0B,EACzG6Q,EAA2ButC,EAAU,GAAG,EACpCnD,GAAgBA,EAAa,sBAC7B5F,GAA+BwD,EAAiB,sBAAsB,CAE7E,CACD,MACJ,KAAK,KAAK,aAAc,CACpB,MAAM8F,EAAiBP,EAAS,YAAY,OAAQ,qBAAqB,EACzEvtC,EAA2B8tC,EAAgB,OAASv/C,EAAK,UAAS,EAAK,KAAK,EAC5E,KACH,CACD,KAAK,KAAK,mBAAoB,CAC1B,MAAMw/C,EAAiBR,EAAS,YAAY,OAAQ,qBAAqB,EACzEvtC,EAA2B+tC,EAAgB,aAAex/C,EAAK,SAAU,CAAA,EACrEA,EAAK,UACLyR,EAA2B+tC,EAAgB,YAAcx/C,EAAK,SAAW,GAAG,EACxEA,EAAK,UACLyR,EAA2B+tC,EAAgB,KAAOx/C,EAAK,SAAW,GAAG,GAGpEA,EAAK,UACVyR,EAA2B+tC,EAAgB,YAAcx/C,EAAK,SAAW,GAAG,EAE5EA,EAAK,gBACLyR,EAA2B+tC,EAAgB,KAAOx/C,EAAK,eAAiB,GAAG,EAE/EyR,EAA2B+tC,EAAgB,GAAG,EAC9C,KACH,CACD,KAAK,KAAK,mBAAoB,CAC1B,MAAMC,EAAeT,EAAS,YAAY,OAAQ,uBAAuB,EACzEvtC,EAA2BguC,EAAc,YAAcz/C,EAAK,UAAS,EAAK,KAAK,EAC/E,KACH,CACD,KAAK,KAAK,cAAe,CACrB,MAAM0/C,EAAkBV,EAAS,YAAY,MAAM,EACnDvtC,EAA2BiuC,EAAiB,aAAa,EACzD,MAAMt6C,EAAOpF,EAAK,YAClB0/C,EAAgB,YAAYrnB,GAA+B,WAAWjzB,EAAM,CACxE,KAAAA,EACA,aAAc,GACd,iBAAkB,GAClB,iBAAkB,CACrB,CAAA,CAAC,EACFqM,EAA2BiuC,EAAiB,GAAG,EAC/C,KACH,CACD,KAAK,KAAK,uBAAwB,CAC9B,MAAMC,EAAkBX,EAAS,YAAY,OAAQ,sBAAsB,EAC3EW,EAAgB,YAAcP,GAA4Cp/C,EAAK,sBAAuB,CAAA,EACtG,KACH,CACD,QAAS,CACL,MAAM4/C,EAAyBR,GAA4Cp/C,EAAK,sBAAuB,CAAA,EACvGyR,EAA2ButC,EAAUY,CAAsB,CAC9D,CACJ,CACD,OAAOZ,CACV,CACD,QAAS,CACD,KAAK,aAAa,cAIlB,CADkB,KAAK,QAIvB,CAAC,KAAK,aAAa,YAAc,KAAK,aAAa,WAAW,SAAQ,IAAO,KAAK,eAGjF,KAAK,aAAa,YAC1B,CACD,iBAAiBzzC,EAAUqmC,EAAc,CACrC,GAAI,KAAK,SAAW,KAAK,gBAAiB,CACtC,KAAK,QAAQ,SACb,MACH,CACD,GAAIA,IAAiB,GACjB,OAEJ,SAASiO,EAAWrP,EAAO,CACnBjlC,GACAA,EAAS,CAACilC,CAAK,CAEtB,CACD,SAASsP,EAAavF,EAAc31C,EAAO,CACnC21C,IAAiB31C,GACjB5E,EAAK,aAAa4E,EAAOi7C,CAAU,CAE1C,CACD,SAASxF,GAAkB,CACnB9uC,GACAA,EAAS,EAAK,CAErB,CACD,MAAMvL,EAAO,KAAK,aACbA,EAAK,eAAe,KAAK,KAAK,mBAAmB,KAAK,KAAM8/C,EAAczF,CAAe,CAAC,CAClG,CACD,aAAc,CACV/1B,EAAyD,SAASgmB,GAAQ,KAAK,aAAc,EAAI,CAAC,CACrG,CACD,YAAa,CACThmB,EAAyD,SAASymB,GAAO,KAAK,aAAc,EAAI,CAAC,CACpG,CACD,WAAY,CACRzmB,EAAyD,SAAS2nB,GAAM,KAAK,aAAc,EAAI,CAAC,CACnG,CACD,eAAgB,CACZ3nB,EAAyD,SAAS2nB,GAAM,KAAK,aAAc,EAAK,CAAC,CACpG,CACD,MAAM,YAAa,CACf,MAAMjsC,EAAO,KAAK,aAEZ+/C,EAAU,MADC//C,EAAK,SAAU,EAAC,SAAQ,EACV,4BAA4BA,CAAI,EAC/D,GAAI,CAAC+/C,EACD,OAEJ,MAAM//B,EAASC,EAAyB,SAAQ,EAAG,cAAc,oBAAoB,EAAE,MACjF9R,EAAQ,CAAA,EACd,UAAW5J,KAASw7C,EAAQ,WAAY,EAAC,QAAO,EAC5C,UAAWtwC,KAAYlL,EAAM,oBACrB,CAACkL,EAAS,UAAYA,EAAS,UAAY,CAACA,EAAS,cAAa,GAAMA,EAAS,UAGjFswC,EAAQ,YAAYx7C,CAAK,GAAK,CAACoF,EAA2B,EAAG,oBAAoB8F,EAAS,IAAI,GAG9FlL,EAAM,YAAcA,EAAM,WAAW,YAAW,GAGhDw7C,EAAQ,cAActwC,CAAQ,IAAM,UAGxCtB,EAAM,KAAK,GAAG6R,CAAM,GAAGvQ,EAAS,IAAI,KAAKA,EAAS,KAAK,GAAG,EAGlE6U,EAAyD,SAASnW,EAAM,KAAK;AAAA,CAAI,CAAC,CACrF,CACD,gCAAiC,CAE7B,GADA,KAAK,qBAAoB,EACrB,CAAC,KAAK,YACN,OAEJ,MAAM/I,EAAO,KAAK,gBAAgB,aAAe,GAC3C46C,EAAcC,GAAoD,KAAK,YAAa,IAAI,EACxFC,EAAc,CAAA,EACpB,IAAIryC,EAAQmyC,EAAY,KAAK56C,CAAI,EACjC,KAAOyI,GACHqyC,EAAY,KAAK,IAAInB,GAAgClxC,EAAM,MAAOA,EAAM,CAAC,EAAE,MAAM,CAAC,EAClFA,EAAQmyC,EAAY,KAAK56C,CAAI,EAG5B86C,EAAY,QACbA,EAAY,KAAK,IAAInB,GAAgC,EAAG35C,EAAK,MAAM,CAAC,EAExE,KAAK0kC,GAAc+M,GAA+C,SAAQ,EAAG,2BAA2B,KAAK,gBAAiBqJ,CAAW,CAC5I,CACD,YAAa,CACOj8C,GAAuB,KAAK,KAAM,CAAA,EACrC,KAAK,IACCuzC,GAAiC,SAAU,EAAC,UAAU,uBAAuB,EAC9E,SACjB,CACJ,CAED,MAAM,CAAE,KAAAj2C,CAAM,EAAEsa,EAAS,CACrB,IAAI4xB,EAAiB5xB,EAChB4xB,IACDA,EAAiB,SAAS,cAAc,MAAM,EAC9CA,EAAe,YAAclsC,GAEjC,MAAMqsC,EAAU,IAAIoH,GACpB,OAAApH,EAAQ,KAAO,CACX,KAAArsC,EACA,QAASksC,EACT,aAAclsC,CAC1B,EACYgzC,GAAa,KAAK,cAAc,IAChC,KAAK,eAAe,SAAS,KAAK3G,CAAO,EACzCtrC,EAAc,SAAQ,EAAG,gBAAgBsrC,CAAO,EAChD,KAAK,eAAe,KAAK,cAAc,GAEpCA,CACV,CACD,UAAU,CAAE,KAAArsC,CAAM,EAAEyW,EAAS,CACzB,MAAM01B,EAAW,IAAI9oB,GACrB8oB,EAAS,KAAO,iBAChB,MAAMuH,EAAW,SAAS,cAAc,MAAM,EAC9CA,EAAS,YAAc1zC,EACvB,MAAMksC,EAAiB,SAAS,cAAc,MAAM,EACpDA,EAAe,OAAOC,CAAQ,EAC9BD,EAAe,OAAOwH,CAAQ,EAC9BxH,EAAe,UAAU,IAAI,mBAAmB,EAChD,MAAMG,EAAU,IAAIoH,GACpB,OAAApH,EAAQ,KAAO,CACX,KAAArsC,EACA,QAASksC,EACT,aAAc,MAC1B,EACQz1B,EAAQ,SAAS,KAAK41B,CAAO,EAC7BtrC,EAAc,SAAQ,EAAG,gBAAgBsrC,CAAO,EAChD,KAAK,eAAe51B,CAAO,EACpB41B,CACV,CACD,WAAW,CAAE,KAAArsC,GAAQ,CACjB,MAAMksC,EAAiB,SAAS,cAAc,MAAM,EACpDA,EAAe,YAAclsC,EAC7BksC,EAAe,UAAU,IAAI,mBAAmB,EAChD,MAAMC,EAAW,IAAI9oB,GACrB8oB,EAAS,KAAO,iBAChBD,EAAe,OAAOC,CAAQ,EAC9B,MAAME,EAAU,IAAIoH,GACpB,OAAApH,EAAQ,KAAO,CACX,KAAArsC,EACA,QAASksC,EACT,aAAc,OAC1B,EACY8G,GAAa,KAAK,cAAc,IAChC,KAAK,eAAe,SAAS,KAAK3G,CAAO,EACzCtrC,EAAc,SAAQ,EAAG,gBAAgBsrC,CAAO,EAChD,KAAK,eAAe,KAAK,cAAc,GAEpCA,CACV,CACD,cAAcuS,EAAiBnoC,EAAS,CACpC,MAAMooC,EAAWpoC,EAAQ,SACzB1V,EAAc,SAAQ,EAAG,kBAAkB69C,CAAe,EAC1DA,EAAgB,OAAM,EACtB,QAAS,EAAI,EAAG,EAAIC,EAAS,OAAQ,EAAE,EACnC,GAAIA,EAAS,CAAC,IAAMD,EAAiB,CACjCC,EAAS,OAAO,EAAG,CAAC,EACpB,KAAK,eAAepoC,CAAO,EAC3B,MACH,CAER,CACD,mBAAoB,CAChB,GAAIu8B,GAAa,KAAK,cAAc,EAAG,CACnC,UAAW3G,KAAW,KAAK,eAAe,SACtCtrC,EAAc,SAAQ,EAAG,kBAAkBsrC,CAAO,EAClDA,EAAQ,OAAM,EAElB,KAAK,eAAe,SAAW,GAC/B,KAAK,eAAe,KAAK,cAAc,CAC1C,CACJ,CACD,eAAe51B,EAAS,CACfA,EAAQ,kBAAkB,SAAS,KAAK,uBAAuB,KAAK,KAAMA,CAAO,CAAC,CAC1F,CACD,uBAAuBA,EAAS,CAC5B,MAAMqoC,EAAmBroC,EAAQ,iBACjC,GAAI,CAACqoC,EACD,OAAO,QAAQ,UAEnB,MAAMD,EAAWpoC,EAAQ,SACzB,GAAIooC,EAAS,SAAW,EACpB,OAAAC,EAAiB,UAAU,IAAI,QAAQ,EAChC,QAAQ,UAEnBD,EAAS,KAAKE,EAAiB,EAC/BD,EAAiB,eAAc,EAC/B,UAAWzS,KAAWwS,EAClBC,EAAiB,YAAYzS,CAAO,EAExC,OAAAyS,EAAiB,UAAU,OAAO,QAAQ,EACnC,QAAQ,SAClB,CACD,MAAM,qBAAsB,CACxB,GAAI,CAAC9L,GAAa,KAAK,cAAc,EACjC,OAEJ,MAAMv0C,EAAO,KAAK,OACZkH,EAASlH,EAAK,GACpB,GAAIA,EAAK,SAAQ,IAAO,KAAK,cAAgBA,EAAK,aAAe,KAAK,wBAClEA,EAAK,SAAQ,IAAO,KAAK,WAAakH,IAAW,OACjD,OAEJ,MAAMtF,EAAS,MAAM5B,EAAK,SAAQ,EAAG,WAAW,iBAAiBkH,CAAM,EACvE,UAAWq5C,KAAgB,KAAK,eAAe,cAC3C,KAAK,cAAcA,EAAc,KAAK,cAAc,EAGxD,GADA,KAAK,eAAe,cAAgB,GAChC,CAAC3+C,EACD,OAEJ,MAAMqR,EAAUrR,EAAO,IAAI,SAAS,EAC9B4+C,EAASvtC,IAAY,QAAUA,IAAY,cAC3CjF,EAASiF,IAAY,QAAUA,IAAY,cAC3CwtC,GAAaD,IACd5+C,EAAO,IAAI,uBAAuB,GAAG,WAAW,SAAS,GACtDA,EAAO,IAAI,oBAAoB,GAAG,WAAW,SAAS,KAC1D,GACE8+C,EAAgB9+C,EAAO,IAAI,gBAAgB,EAC3C++C,EAAU/+C,EAAO,IAAI,SAAS,EAC9Bg/C,EAAcC,GAAmC,GAAGH,CAAa,IAAIC,CAAO,EAAE,IAAM,GACtFH,GACA,KAAK,gBAAgB,KAAK,eAAgBC,CAAS,EAEnDzyC,GACA,KAAK,gBAAgB,KAAK,cAAc,EAExCpM,EAAO,IAAI,kBAAkB,GAAKA,EAAO,IAAI,kBAAkB,IAAM,QACrE,KAAK,sBAAsB,KAAK,cAAc,EAE9Cg/C,GACA,KAAK,qBAAqB,KAAK,cAAc,EAE7C5gD,EAAK,eACL,KAAK,iBAAiB,KAAK,cAAc,CAEhD,CACD,gBAAgBgY,EAASyoC,EAAW,CAChC,MAAMzgD,EAAO,KAAK,OACZkH,EAASlH,EAAK,GACpB,GAAI,CAACkH,EACD,OAEJ,MAAM2sB,EAAS0Z,GAAuDkT,EAAYjT,GAAqD,QACnIA,GAAqD,IAAI,EACvDI,EAAU,KAAK,MAAM/Z,CAAM,EACjC+Z,EAAQ,UAAU,IAAI,MAAM,EAC5B,MAAMC,EAAW,IAAM,CACfD,EAAQ,WACR5tC,EAAK,SAAQ,EAAG,aAAc,EAAC,iCAAiCkH,CAAM,EAGtElH,EAAK,SAAQ,EAAG,aAAc,EAAC,4BAA4BkH,CAAM,CAEjF,EACQ0mC,EAAQ,eAAeC,EAAS,CAC5B,SAAU,GACV,yBAA0B,GAC1B,iBAAkBvqC,EAAWH,EAAU,cAAc,EACrD,gBAAiBG,EAAWH,EAAU,eAAe,CACjE,CAAS,EACDnD,EAAK,SAAQ,EAAG,aAAc,EAAC,iBAAiB,oCAAyGjB,GAAS,CAC9J,KAAM,CAAE,OAAQ+hD,EAAa,QAAAnK,CAAO,EAAK53C,EAAM,KAC3C+hD,IAAgB55C,GAGpB0mC,EAAQ,OAAO+I,CAAO,CAClC,CAAS,EACD3+B,EAAQ,cAAc,KAAK41B,CAAO,EAC9B5tC,EAAK,SAAU,EAAC,aAAY,EAAG,qCAAqCkH,CAAM,GAC1E0mC,EAAQ,OAAO,EAAI,CAE1B,CACD,sBAAsB51B,EAAS,CAC3B,MAAMhY,EAAO,KAAK,OACZkH,EAASlH,EAAK,GACpB,GAAI,CAACkH,EACD,OAEJ,MAAM2sB,EAAS0Z,GAAuDC,GAAqD,WAAW,EAChII,EAAU,KAAK,MAAM/Z,CAAM,EACjC+Z,EAAQ,UAAU,IAAI,aAAa,EACnC,MAAMC,EAAW,IAAM,CACnB,MAAM1tC,EAAQH,EAAK,SAAU,EAAC,aAAY,EACtC4tC,EAAQ,WACRztC,EAAM,uCAAuC+G,CAAM,EAGnD/G,EAAM,kCAAkC+G,CAAM,CAE9D,EACQ0mC,EAAQ,eAAeC,EAAS,CAC5B,SAAU,GACV,yBAA0B,GAC1B,iBAAkBvqC,EAAWH,EAAU,gBAAgB,EACvD,gBAAiBG,EAAWH,EAAU,iBAAiB,CACnE,CAAS,EACDnD,EAAK,SAAQ,EAAG,aAAc,EAAC,iBAAiB,0CAAsHjB,GAAS,CAC3K,KAAM,CAAE,OAAQ+hD,EAAa,QAAAnK,CAAO,EAAK53C,EAAM,KAC3C+hD,IAAgB55C,GAGpB0mC,EAAQ,OAAO+I,CAAO,CAClC,CAAS,EACD3+B,EAAQ,cAAc,KAAK41B,CAAO,EAC9B5tC,EAAK,SAAU,EAAC,aAAY,EAAG,2CAA2CkH,CAAM,GAChF0mC,EAAQ,OAAO,EAAI,CAE1B,CACD,gBAAgB51B,EAAS,CACrB,MAAMhY,EAAO,KAAK,OACZkH,EAASlH,EAAK,GACpB,GAAI,CAACkH,EACD,OAEJ,MAAM2sB,EAAS0Z,GAAuDC,GAAqD,IAAI,EACzHI,EAAU,KAAK,MAAM/Z,CAAM,EACjC+Z,EAAQ,UAAU,IAAI,MAAM,EAC5B,MAAMC,EAAW,IAAM,CACnB,MAAM1tC,EAAQH,EAAK,SAAU,EAAC,aAAY,EACtC4tC,EAAQ,WACRztC,EAAM,0CAA0C+G,CAAM,EAGtD/G,EAAM,qCAAqC+G,CAAM,CAEjE,EACQ0mC,EAAQ,eAAeC,EAAS,CAC5B,SAAU,GACV,yBAA0B,GAC1B,iBAAkBvqC,EAAWH,EAAU,cAAc,EACrD,gBAAiBG,EAAWH,EAAU,eAAe,CACjE,CAAS,EACDnD,EAAK,SAAQ,EAAG,aAAc,EAAC,iBAAiB,6CAA4HjB,GAAS,CACjL,KAAM,CAAE,OAAQ+hD,EAAa,QAAAnK,CAAO,EAAK53C,EAAM,KAC3C+hD,IAAgB55C,GAGpB0mC,EAAQ,OAAO+I,CAAO,CAClC,CAAS,EACD3+B,EAAQ,cAAc,KAAK41B,CAAO,EAC9B5tC,EAAK,SAAU,EAAC,aAAY,EAAG,8CAA8CkH,CAAM,GACnF0mC,EAAQ,OAAO,EAAI,CAE1B,CACD,qBAAqB51B,EAAS,CAC1B,MAAMhY,EAAO,KAAK,OACZkH,EAASlH,EAAK,GACpB,GAAI,CAACkH,EACD,OAEJ,MAAM2sB,EAAS0Z,GAAuDC,GAAqD,SAAS,EAC9HI,EAAU,KAAK,MAAM/Z,CAAM,EACjC+Z,EAAQ,UAAU,IAAI,WAAW,EACjC,MAAMC,EAAW,IAAM,CACnB,MAAM1tC,EAAQH,EAAK,SAAU,EAAC,aAAY,EACtC4tC,EAAQ,WACRztC,EAAM,2CAA2C+G,CAAM,EAGvD/G,EAAM,sCAAsC+G,CAAM,CAElE,EACQ0mC,EAAQ,eAAeC,EAAS,CAC5B,SAAU,GACV,yBAA0B,GAC1B,iBAAkBvqC,EAAWH,EAAU,gBAAgB,EACvD,gBAAiBG,EAAWH,EAAU,iBAAiB,CACnE,CAAS,EACDnD,EAAK,SAAQ,EAAG,aAAc,EAAC,iBAAiB,8CAA8HjB,GAAS,CACnL,KAAM,CAAE,OAAQ+hD,EAAa,QAAAnK,CAAO,EAAK53C,EAAM,KAC3C+hD,IAAgB55C,GAGpB0mC,EAAQ,OAAO+I,CAAO,CAClC,CAAS,EACD3+B,EAAQ,cAAc,KAAK41B,CAAO,EAC9B5tC,EAAK,SAAU,EAAC,aAAY,EAAG,+CAA+CkH,CAAM,GACpF0mC,EAAQ,OAAO,EAAI,CAE1B,CACD,iBAAiB51B,EAAS,CAGtB,GAAI,CAFS,KAAK,OACE,GAEhB,OAEJ,MAAM6b,EAAS0Z,GAAuDC,GAAqD,KAAK,EAC1HI,EAAU,KAAK,WAAW/Z,CAAM,EACtC+Z,EAAQ,UAAU,IAAI,OAAO,EAC7B,MAAMC,EAAW,IAAM,CACdloB,GAA2B,SAAQ,EAAG,SAAS,QAAQ,CACxE,EACQioB,EAAQ,eAAeC,EAAS,CAC5B,SAAU,GACV,yBAA0B,GAC1B,iBAAkBvqC,EAAWH,EAAU,cAAc,EACrD,gBAAiBG,EAAWH,EAAU,cAAc,CAChE,CAAS,EACD6U,EAAQ,cAAc,KAAK41B,CAAO,CACrC,CACD,qBAAsB,CAClB,GAAI,CAAC2G,GAAa,KAAK,cAAc,EACjC,OAEJ,MAAMwM,EAAgB,KAAK,eAAe,SAAS,KAAKr+B,GAAKA,EAAE,OAAS,QAAQ,EAE1Es+B,EAAuB,KAAK,KAAM,EAAC,SAAQ,IAAO,QAAU,KAAK,OAAO,eAAe,aAAc,GACtG,KAAK,OAAO,aAAe,aAAe,KAAK,KAAI,EAAG,aAAY,EACnEA,GAAuB,CAACD,EACxB,KAAK,kBAAiB,EAEjB,CAACC,GAAuBD,GAC7B,KAAK,cAAcA,EAAe,KAAK,cAAc,CAE5D,CACD,mBAAoB,CAChB,MAAMltB,EAAS0Z,GAAuDC,GAAqD,MAAM,EAC3HI,EAAU,KAAK,MAAM/Z,CAAM,EACjClwB,GAAmB,QAAQiqC,EAAStqC,EAAWH,EAAU,4BAA4B,CAAC,EACtFyqC,EAAQ,UAAU,IAAI,QAAQ,CACjC,CACL,CACO,MAAM8F,GAAuB,IAGvB2L,GAA8B,IAAI,IAAI,CAC/C,OAAQ,OAAQ,WAAY,KAAM,SAAU,MAAO,UAAW,QAAS,QAAS,KAChF,MAAO,QAAS,SAAU,OAAQ,WAAY,OAAQ,QAAS,SAAU,QAAS,KACtF,CAAC,EAEY1F,GAAmB,IAAI,IAAI,CAAC,OAAQ,OAAQ,MAAM,CAAC,EACzD,SAAS2G,GAAkBW,EAAUC,EAAU,CAClD,MAAMC,EAAoBC,GAAgEF,EAAS,KAAMA,EAAS,IAAI,EACtH,OAAIC,IAAsB,EACfF,EAAS,KAAK,cAAcC,EAAS,IAAI,EAE7CC,CACX,CAGA,SAASE,GAAsB50B,EAAG,CAE9B,OADoB/K,GAA2B,6BAA6B+K,CAAC,GACzD,aAAa,cACrC,CACA60B,GAAqC,sBAAuBD,EAAqB,4OCplE1E,MAAME,EAA+B,CACxC,UACA,YACA,0BACA,6BACA,qBACA,uBACA,YAAY1M,EAAa2M,EAAW,CAChC,KAAK,UAAYA,EACjB,KAAK,YAAc3M,EACnB,KAAK,YAAY,iBAAiB4M,GAAsB,gBAAiB,KAAK,WAAY,IAAI,EAC9F,KAAK,YAAY,iBAAiBA,GAAsB,iBAAkB,KAAK,WAAY,IAAI,EAC/F,KAAK,YAAY,iBAAiBzT,EAAoB,OAAO,oBAAqB,KAAK,WAAY,IAAI,EACvG7rC,GAAgC,SAAQ,EAAG,iBAAiBI,GAA+B,yBAAiF,KAAK,cAAe,KAAM,CAAE,OAAQ,EAAM,CAAA,EACtNJ,GAAgC,SAAQ,EAAG,iBAAiBI,GAA+B,2BAAuF,KAAK,WAAY,KAAM,CAAE,OAAQ,EAAM,CAAA,EACzN,KAAK,0BAA4B,KACjC,KAAK,6BAA+B,KACpC,KAAK,qBAAuB,KAC5B,KAAK,uBAAyB,EACjC,CACD,cAAcxD,EAAO,CACjB,GAAI,CAACkhB,EAAyB,SAAU,EAAC,cAAc,oCAAoC,EAAE,MACzF,OAEJ,MAAMtf,EAAU5B,EAAM,KACjB,KAAK,UAAU,SAAS,SAAY,CACrC,KAAK,sBAAsB,KAAK,oBAAoB,EACpD,KAAK,qBAAuB,IACxC,CAAS,EACD,KAAK,qBACD,KAAK,cAAgBivC,EAAoB,YAAYrtC,EAAQ,SAAU,CAAA,EAAIA,EAAU,IAC5F,CACD,sBAAsBX,EAAM,CACxB,KAAK,uBAAyB,GAC9B,IAAIyD,EAAc,KAClB,GAAI,KAAK,0BAA2B,CAChC,IAAIi+C,EAAqB,KAAK,0BAC9B,KAAOA,GAAsBA,IAAuB,KAAK,8BAA8B,CAC/EA,EAAmB,UACnBA,EAAmB,SAAQ,EAE/B,MAAMvyC,EAASuyC,EAAmB,OAClCA,EAAqBvyC,aAAkB4hC,EAAsB5hC,EAAS,IACzE,CACJ,CAGD,GAFA,KAAK,0BAA4B,KACjC,KAAK,6BAA+B,KAChCnP,EAAM,CACN,IAAI2hD,EAAwB3hD,EAC5B,MAAM4hD,EAAoB,KAAK,YAAY,kBACrCC,EAAqBF,GAA0B,CACjD,MAAM15C,EAAU25C,EAAkB,IAAID,CAAqB,EAC3D,OAAO15C,EAAU,CAACA,EAAQ,SAAW,EACrD,EACY,KAAO05C,GAAyBE,EAAkBF,CAAqB,GACnEA,EAAwBA,EAAsB,WAElD,KAAK,6BACDA,EAAwBC,EAAkB,IAAID,CAAqB,EAAI,KAAK,YAAY,cAC5Fl+C,EAAc,KAAK,YAAY,qBAAqBzD,CAAI,CAC3D,CACD,KAAK,0BAA4ByD,EACjC,KAAK,YAAY,eAAeA,CAAW,EACvCA,GACAA,EAAY,OAAO,EAAI,EAE3B,KAAK,uBAAyB,EACjC,CACD,YAAa,CACL,KAAK,yBAGT,KAAK,0BAA4B,KACjC,KAAK,6BAA+B,KACpC,KAAK,qBAAuB,KAC/B,CACL,uIC/EM7B,GAAS,IAAI,cACnjIM,MAAMkgD,WAA2B9wC,EAAoB,CACxD,qBACA,8BACA,YACA,cACA,YACA,iBACA,aAAc,CACV,QACA,KAAK,qBAAuB,KAC5B,KAAK,8BAAgC,KACrC,KAAK,YAAc,KACnB,KAAK,cAAgB,GACrB,KAAK,YAAc,GACnB,KAAK,eAAe,aAAa,QAAS,GAAGQ,GAAmB,gBAAgB,CAAC,EAAE,CACtF,CACD,UAAW,CAGP,GAAI,KAAK,iBACL,OAAO,QAAQ,UAGnB,MAAMxR,EAAO,KAAK,OACZwG,EAAW,KAAK,WACtB,GAAI,CAACxG,GAAQA,EAAK,SAAU,IAAK,KAAK,cAAgB,CAACwG,EACnD,YAAK,eAAe,iBACpB,KAAK,QAAQ,UAAU,IAAI,WAAW,EAC/B,QAAQ,UAEnB,SAAS+E,EAAShH,EAAO,CACjB,CAACA,GAAS,KAAK,KAAI,IAAOvE,GAG9B,KAAK,cAAcuE,CAAK,CAC3B,CACD,GAAI,CAACvE,EAAK,GACN,OAAO,QAAQ,UAEnB,MAAMk8C,EAAW,CACb11C,EAAS,iBAAiBxG,EAAK,EAAE,EAAE,KAAKuL,EAAS,KAAK,IAAI,CAAC,EAC3D/E,EAAS,gBAAgBxG,EAAK,EAAE,EAAE,KAAK+hD,GAAqB,CACpDA,GAAqB,KAAK,KAAI,IAAO/hD,IACrC,KAAK,YAAc+hD,EAAkB,YAEzD,CAAa,CACb,EACQ,OAAO,QAAQ,IAAI7F,CAAQ,CAC9B,CACD,mBAAoB,CAChB,KAAK,OAAM,CACd,CAOD,iBAAiB8F,EAAW,CACxB,KAAK,QAAQ,UAAU,OAAO,YAAa,CAACA,CAAS,CACxD,CACD,qBAAqBz9C,EAAOmB,EAAc,CACtC,MAAM0c,EAAgB7d,EAAM,IAAImB,CAAY,EAC5C,OAAK0c,EAGE,OAAOA,EAAc,QAAQ,MAAO,EAAE,GAAK,CAAC,EAFxC,CAGd,CACD,OAAO/a,EAAe46C,EAAe,CACjC,MAAM7f,EAAS6f,IAAkB,SAAW,SAAW,GACjD3V,EAAO,KAAK,qBAAqBjlC,EAAe46C,EAAgB,QAAU7f,CAAM,EAChF8f,EAAM,KAAK,qBAAqB76C,EAAe46C,EAAgB,OAAS7f,CAAM,EAC9EmK,EAAQ,KAAK,qBAAqBllC,EAAe46C,EAAgB,SAAW7f,CAAM,EAClF+f,EAAS,KAAK,qBAAqB96C,EAAe46C,EAAgB,UAAY7f,CAAM,EAC1F,MAAO,CAAE,KAAAkK,EAAM,IAAA4V,EAAK,MAAA3V,EAAO,OAAA4V,CAAM,CACpC,CACD,iBAAiBC,EAAeryB,EAAMhxB,EAAO,CACzCA,EAAM,QAAO,EACb,MAAMiB,EAAO,KAAK,OAClB,GAAIoiD,GAAiBpiD,EAAM,CACvB,GAAI,KAAK,gBAAkB+vB,EACvB,OAEJ,KAAK,cAAgBA,EACrB/vB,EAAK,UAAU+vB,CAAI,CACtB,MAEG,KAAK,cAAgB,GACrBxtB,GAA8B,qBAAoB,EAEtD,SAAW,CAAE,QAAA0F,EAAS,KAAA1G,EAAM,gBAAA8gD,CAAiB,IAAI,KAAK,YAAa,CAC/D,MAAMC,EAAkB,CAACtiD,GAAQ+vB,IAAS,OAASxuB,IAASwuB,EAC5D9nB,EAAQ,MAAM,gBAAkBq6C,EAAkBD,EAAkB,GACpEp6C,EAAQ,UAAU,OAAO,cAAeq6C,CAAe,CAC1D,CACJ,CACD,cAAc/9C,EAAO,CAEjB,MAAMg+C,EAAiB,SAAS,cAAc,KAAK,EACnDA,EAAe,UAAY,UAC3B,MAAMhH,EAAO,KACb,SAASiH,EAAqBj+C,EAAOhD,EAAMkhD,EAAMrgB,EAAQ,CACrD,MAAMn6B,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAYw6C,EACpB,MAAM/8C,GAAgBnE,IAAS,WAAaA,EAAO,IAAM,IAAMkhD,EAAOrgB,EACtE,IAAIx9B,EAAQL,EAAM,IAAImB,CAAY,EAClC,OAAId,IAAU,UAGVA,IAAU,IAAOrD,IAAS,YAAcqD,IAAU,OAG7CrD,IAAS,YAAcqD,IAAU,UACtCA,EAAQ,KAEZA,EAAQA,EAAM,QAAQ,MAAO,EAAE,EAC/BA,EAAQ89C,GAA2C99C,CAAK,EACxDqD,EAAQ,YAAcrD,EACtBqD,EAAQ,aAAa,QAAS,GAAG89B,GAAoBrgC,CAAY,EAAE,MAAM,CACrE,SAAU,GACV,QAAS,iDACT,OAAQ,EACxB,CAAa,CAAC,EAAE,EACJuC,EAAQ,iBAAiB,WAAY,KAAK,aAAa,KAAK,KAAMA,EAAS1G,EAAMmE,EAAcnB,CAAK,EAAG,EAAK,GACrG0D,CACV,CACD,SAAS06C,EAAsBp+C,EAAO,CAClC,IAAIs2B,EAAQt2B,EAAM,IAAI,OAAO,EAC7B,GAAI,CAACs2B,EACD,MAAO,GAEXA,EAAQA,EAAM,QAAQ,MAAO,EAAE,EAC/B,MAAM+nB,EAAa,OAAO/nB,CAAK,EAC/B,GAAI,CAAC,MAAM+nB,CAAU,GAAKr+C,EAAM,IAAI,YAAY,IAAM,aAAc,CAChE,MAAMs+C,EAAYtH,EAAK,OAAOh3C,EAAO,QAAQ,EACvCu+C,EAAavH,EAAK,OAAOh3C,EAAO,SAAS,EAC/Cs2B,GAAS+nB,EAAaC,EAAU,KAAOA,EAAU,MAAQC,EAAW,KAAOA,EAAW,OAAO,SAAQ,CACxG,CACD,OAAOJ,GAA2C7nB,CAAK,CAC1D,CACD,SAASkoB,EAAuBx+C,EAAO,CACnC,IAAIo/B,EAASp/B,EAAM,IAAI,QAAQ,EAC/B,GAAI,CAACo/B,EACD,MAAO,GAEXA,EAASA,EAAO,QAAQ,MAAO,EAAE,EACjC,MAAMqf,EAAc,OAAOrf,CAAM,EACjC,GAAI,CAAC,MAAMqf,CAAW,GAAKz+C,EAAM,IAAI,YAAY,IAAM,aAAc,CACjE,MAAMs+C,EAAYtH,EAAK,OAAOh3C,EAAO,QAAQ,EACvCu+C,EAAavH,EAAK,OAAOh3C,EAAO,SAAS,EAC/Co/B,GAAUqf,EAAcH,EAAU,IAAMA,EAAU,OAASC,EAAW,IAAMA,EAAW,QAAQ,SAAQ,CAC1G,CACD,OAAOJ,GAA2C/e,CAAM,CAC3D,CAED,MAAMsf,EAAsB,IAAI,IAAI,CAChC,aACA,eACA,qBACA,qBACA,qBACA,YACA,iBACZ,CAAS,EAEKC,EAAuB,IAAI,IAAI,CACjC,eACA,qBACA,qBACA,qBACA,YACA,iBACZ,CAAS,EAEKC,EAAiB,IAAI,IAAI,CAAC,QAAQ,CAAC,EACnCC,EAAQ,CAAC,UAAW,UAAW,SAAU,SAAU,UAAU,EAC7DC,EAAY,CACdC,GAA2B,QAC3BA,GAA2B,QAC3BA,GAA2B,OAC3BA,GAA2B,OAC3BC,GAAoB,SAAS,CAAC,EAAG,EAAG,EAAG,CAAC,CAAC,CACrD,EACcC,EAAY,CAAC,UAAW,UAAW,SAAU,SAAU,UAAU,EACvE,IAAIC,EAAc,KAClB,KAAK,YAAc,GACnB,QAASxzC,EAAI,EAAGA,EAAImzC,EAAM,OAAQ,EAAEnzC,EAAG,CACnC,MAAM1O,EAAO6hD,EAAMnzC,CAAC,EACdgD,EAAU1O,EAAM,IAAI,SAAS,EAC7BoR,EAAWpR,EAAM,IAAI,UAAU,EAUrC,GATI,CAAC0O,GAAW,CAAC0C,GAGbpU,IAAS,UAAY0hD,EAAoB,IAAIhwC,CAAO,GAGpD1R,IAAS,WAAa2hD,EAAqB,IAAIjwC,CAAO,GAGtD1R,IAAS,YAAc4hD,EAAe,IAAIxtC,CAAQ,EAClD,SAEJ,MAAM+tC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,UAAY,GAAGniD,CAAI,eAC9B,MAAM8gD,EAAkBgB,EAAUpzC,CAAC,EAAE,SAAS,MAAsC,GAAI,GAKxF,GAJAyzC,EAAW,MAAM,gBAAkBrB,EACnCqB,EAAW,aAAa,QAAS,GAAGC,GAA0B,EAAC,QAAQpiD,CAAI,EAAE,MAAM,CAAE,MAAO,EAAI,CAAE,CAAC,EAAE,EACrGmiD,EAAW,iBAAiB,YAAa,KAAK,iBAAiB,KAAK,KAAM,GAAMniD,IAAS,WAAa,MAAQA,CAAI,EAAG,EAAK,EAC1H,KAAK,YAAY,KAAK,CAAE,QAASmiD,EAAY,KAAAniD,EAAM,gBAAA8gD,CAAe,CAAE,EAChE9gD,IAAS,UAAW,CACpB,MAAMqiD,EAAe,SAAS,cAAc,MAAM,EAClDA,EAAa,YAAcjB,EAAsBp+C,CAAK,EACtDq/C,EAAa,iBAAiB,WAAY,KAAK,aAAa,KAAK,KAAMA,EAAc,QAAS,QAASr/C,CAAK,EAAG,EAAK,EACpHq/C,EAAa,aAAa,QAAS,GAAG7d,GAAoB,OAAO,EAAE,MAAM,CACrE,SAAU,GACV,QAAS,iDACT,OAAQ,EAC5B,CAAiB,CAAC,EAAE,EACJ,MAAM8d,EAAgB,SAAS,cAAc,MAAM,EACnDA,EAAc,YAAcd,EAAuBx+C,CAAK,EACxDs/C,EAAc,iBAAiB,WAAY,KAAK,aAAa,KAAK,KAAMA,EAAe,SAAU,SAAUt/C,CAAK,EAAG,EAAK,EACxHs/C,EAAc,aAAa,QAAS,GAAG9d,GAAoB,QAAQ,EAAE,MAAM,CACvE,SAAU,GACV,QAAS,iDACT,OAAQ,EAC5B,CAAiB,CAAC,EAAE,EACJ,MAAM+d,EAAe,SAAS,cAAc,MAAM,EAClDA,EAAa,YAAc,MAC3BJ,EAAW,YAAYE,CAAY,EACnCF,EAAW,YAAYI,CAAY,EACnCJ,EAAW,YAAYG,CAAa,CACvC,KACI,CACD,MAAMzhB,EAAU7gC,IAAS,SAAW,SAAW,GACzCwiD,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,UAAY,QACzBA,EAAa,YAAcP,EAAUvzC,CAAC,EACtCyzC,EAAW,YAAYK,CAAY,EACnCL,EAAW,YAAYlB,EAAqB,KAAK,KAAMj+C,EAAOhD,EAAM,MAAO6gC,CAAM,CAAC,EAClFshB,EAAW,YAAY,SAAS,cAAc,IAAI,CAAC,EACnDA,EAAW,YAAYlB,EAAqB,KAAK,KAAMj+C,EAAOhD,EAAM,OAAQ6gC,CAAM,CAAC,EAC/EqhB,GACAC,EAAW,YAAYD,CAAW,EAEtCC,EAAW,YAAYlB,EAAqB,KAAK,KAAMj+C,EAAOhD,EAAM,QAAS6gC,CAAM,CAAC,EACpFshB,EAAW,YAAY,SAAS,cAAc,IAAI,CAAC,EACnDA,EAAW,YAAYlB,EAAqB,KAAK,KAAMj+C,EAAOhD,EAAM,SAAU6gC,CAAM,CAAC,CACxF,CACDqhB,EAAcC,CACjB,CACDnB,EAAe,YAAYkB,CAAW,EACtClB,EAAe,iBAAiB,YAAa,KAAK,iBAAiB,KAAK,KAAM,GAAO,KAAK,EAAG,EAAK,EAClGA,EAAe,iBAAiB,aAAc,KAAK,iBAAiB,KAAK,KAAM,GAAO,KAAK,EAAG,EAAK,EACnG,KAAK,eAAe,iBACpB,KAAK,eAAe,YAAYA,CAAc,EAC9C,KAAK,QAAQ,UAAU,OAAO,WAAW,CAC5C,CACD,aAAayB,EAAeC,EAAKC,EAAe78C,EAAe,CAC3D,GAAIyd,GAAyBk/B,CAAa,EACtC,OAEJ,MAAMhsC,EAAU,CAAE,IAAAisC,EAAK,cAAAC,EAAe,cAAA78C,EAAe,eAAgB,IAAM,CAAA,GACrE88C,EAAe,KAAK,cAAc,KAAK,KAAMnsC,CAAO,EAC1DA,EAAQ,eAAiBmsC,EACzBH,EAAc,iBAAiB,UAAWG,EAAc,EAAK,EAC7D,KAAK,iBAAmB,GACxB,MAAMtwB,EAAS,IAAIC,GAAwB,KAAK,iBAAiB,KAAK,IAAI,EAAG,KAAK,iBAAiB,KAAK,IAAI,EAAG9b,CAAO,EACtH+b,GAA+B,aAAaiwB,EAAenwB,CAAM,EACjE,MAAM5M,EAAY+8B,EAAc,wBAChC/8B,GAAaA,EAAU,kBAAkB+8B,CAAa,CACzD,CACD,cAAchsC,EAASjZ,EAAO,CAC1B,MAAMkJ,EAAUlJ,EAAM,cACtB,SAAS+iC,EAAcsiB,EAAeC,EAAmB,CACrD,KAAK,eAAep8C,EAASo8C,EAAmBD,EAAepsC,EAAS,EAAK,CAChF,CACD,SAASiqB,EAAoBC,EAAQC,EAAQC,EAAQ,CACjD,OAAIpqB,EAAQ,gBAAkB,UAAYmqB,EAAS,IAC/CA,EAAS,GAEND,EAASC,EAASC,CAC5B,CACDC,GAA2CtjC,EAAOkJ,EAAS65B,EAAc,KAAK,IAAI,EAAG,OAAWG,CAAmB,CACtH,CACD,aAAah6B,EAAS+P,EAAS,CAC3B,KAAK,qBAAuB,KAC5B,KAAK,8BAAgC,KACrC/P,EAAQ,oBAAoB,UAAW+P,EAAQ,eAAgB,EAAK,EACpE,OAAO,KAAK,gBACf,CACD,iBAAiB/P,EAAS+P,EAAS,CAC/B,GAAI,KAAK,YACL,GAAK,KAAK,qBAQD,KAAK,YAAY,cAAa,EAAG,KAAK,qBAAqB,KAAK,EAAE,QAAQ,KAAK,qBAAqB,cAAgB,GAAI,EAAK,MARtG,CAE5B,MAAMssC,EAA8B,KAAK,YAAY,4BAA2B,EAC5EA,GACK,KAAK,YAAY,gBAAgBA,EAA8B,CAAC,EAAE,QAAQ,GAAI,EAAK,CAE/F,CAKL,KAAK,aAAar8C,EAAS+P,CAAO,EAClC,KAAK,OAAM,CACd,CACD,eAAe/P,EAAS8f,EAAWw8B,EAAiBvsC,EAASwsC,EAAc,CACvE,GAAI,CAAC,KAAK,YAEN,OAAO,KAAK,iBAAiBv8C,EAAS+P,CAAO,EAEjD,GAAIwsC,GAAgBz8B,IAAcw8B,EAC9B,OAAO,KAAK,iBAAiBt8C,EAAS+P,CAAO,EAE7CA,EAAQ,MAAQ,aAAe,CAAC+P,GAAaA,IAAc,KAC3DA,EAAY,MAEP/P,EAAQ,MAAQ,aAAe,CAAC+P,GAAaA,IAAc,OAChEA,EAAY,QAEhBA,EAAYA,EAAU,cAElB,QAAQ,KAAKA,CAAS,IACtBA,GAAa,MAEjB,MAAMm8B,EAAgBlsC,EAAQ,cACxB3Q,EAAgB2Q,EAAQ,cAC9B,GAAI3Q,EAAc,IAAI,YAAY,IAAM,eAAiB68C,IAAkB,SAAWA,IAAkB,UAAW,CAC/G,GAAI,CAACn8B,EAAU,MAAM,KAAK,EAAG,CACzB08B,GAAuB,SAAQ,EAAG,MAAM,gGAAgG,EACxI,MACH,CACD,MAAM5B,EAAY,KAAK,OAAOx7C,EAAe,QAAQ,EAC/Cy7C,EAAa,KAAK,OAAOz7C,EAAe,SAAS,EACvD,IAAIq9C,EAAc,OAAO38B,EAAU,QAAQ,MAAO,EAAE,CAAC,EACrD,GAAI,MAAM28B,CAAW,EACjB,OAEAR,IAAkB,QAClBQ,GAAe7B,EAAU,KAAOA,EAAU,MAAQC,EAAW,KAAOA,EAAW,MAG/E4B,GAAe7B,EAAU,IAAMA,EAAU,OAASC,EAAW,IAAMA,EAAW,OAElF/6B,EAAY28B,EAAc,IAC7B,CACD,KAAK,8BAAgC,KACrC,MAAM7b,EAAgB,KAAK,YAAY,cAAa,EACpD,QAAS54B,EAAI,EAAGA,EAAI44B,EAAc,OAAQ,EAAE54B,EAAG,CAC3C,MAAMR,EAAWo5B,EAAc54B,CAAC,EAChC,GAAI,EAAAR,EAAS,OAASuI,EAAQ,eAAiB,CAACvI,EAAS,iBAGzD,MAAK,8BAAgCA,EACrCA,EAAS,SAASsY,EAAWy8B,EAAc,GAAMj5C,EAAS,KAAK,IAAI,CAAC,EACpE,OACH,CACD,KAAK,YAAY,eAAeyM,EAAQ,cAAe+P,EAAWxc,EAAS,KAAK,IAAI,CAAC,EACrF,SAASA,EAASwX,EAAS,CACvB,GAAKA,EAML,IAHK,KAAK,uBACN,KAAK,qBAAuB,KAAK,+BAEjC,KAAK,cAAe,CACpB,MAAM/iB,EAAO,KAAK,OAClB,GAAI,CAACA,EACD,OAEJA,EAAK,UAAU,KAAK,aAAa,CACpC,CACGwkD,GACA,KAAK,OAAM,EAElB,CACJ,CACD,iBAAiBv8C,EAAS8f,EAAWw8B,EAAiBvsC,EAAS,CAC3D,KAAK,aAAa/P,EAAS+P,CAAO,EAClC,KAAK,eAAe/P,EAAS8f,EAAWw8B,EAAiBvsC,EAAS,EAAI,CACzE,CACD,UAAW,CACP,MAAM,SAAQ,EACd,KAAK,iBAAiB,CAAC2sC,EAAwB,CAAC,CACnD,CACL,2HClXMxhD,EAAY,CAKd,4BAA6B,uCAK7B,8BAA+B,oCAK/B,oBAAqB,0BAKrB,0BAA2B,+BAK3B,0BAA2B,+BAI3B,oBAAqB,gCAIrB,qBAAsB,iCAMtB,SAAU,WAKV,OAAQ,SAIR,sBAAuB,2BAIvB,8BAA+B,4CAM/B,0BAA2B,2DAM3B,6BAA8B,iEAM9B,cAAe,uBAIf,iBAAkB,qBAIlB,iBAAkB,qBAIlB,gBAAiB,mBACrB,EACMC,GAAOC,EAA4B,mCAAoCF,CAAS,EAChFG,EAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC9DwhD,GAAuCC,GAAa,CACtD,MAAM3sC,EAAS,IAAIyS,GACba,EAAmBloB,EAAXuhD,EAAsB1hD,EAAU,oBAAkCA,EAAU,6BAAzB,EACjE,OAAA+U,EAAO,KAAO,CACV,OAAQ2sC,EACR,QAAS,UACT,QAAS,IAAmD,IAAA,wtBAAA,YAAA,GAAA,EAAC,SAAU,EACvE,MAAAr5B,EACA,aAAc,2BACtB,EACItT,EAAO,SAAW,EAClBA,EAAO,UAAU,IAAI,eAAe,EAChC2sC,GACA3sC,EAAO,UAAU,IAAI,QAAQ,EAE1BA,CACX,EACA,IAAI4sC,GACG,MAAMxiD,UAAsByiD,EAAe,CAC9C,YACA,uBACA,cACA,iBACA,UACA,sBACA,YACA,aACA,oBACA,cACA,aAAe,IAAI,IACnB,cACA,yBACA,kBACA,eACA,oBACA,eACA,wBACA,cACA,oBACA,0BACA,aACA,qBACA,uBACA,gBACA,mBACA,uBAAyB,CACrB,MAAO,QAAQ,QAAS,EACxB,IAAIC,EAAM,CACN,KAAK,MAAQ,KAAK,MAAM,KAAKA,CAAI,CACpC,CACT,EACI,0BACA,aAAc,CACV,MAAM,UAAU,EAChB,KAAK,YAAc,IAAIC,GAA2B,GAAM,GAAM,kCAAmC,IAAK,GAAG,EACzG,KAAK,YAAY,iBAAiB,qBAAuE,KAAK,8BAA8B,KAAK,IAAI,CAAC,EACtJ,KAAK,YAAY,KAAK,KAAK,OAAO,EAClC,KAAK,uBAAyB,IAAIC,GAAiC,KAAM,IAAI,EAC7E,KAAK,uBAAuB,0BAA0B,CAAC,EACvD,KAAK,uBAAuB,eAAe,GAAI,EAAE,EACjD,KAAK,uBAAuB,eAAe5hD,EAAWH,EAAU,2BAA2B,CAAC,EAC5F,MAAMgiD,EAAe,KAAK,uBAAuB,QACjD,KAAK,cAAgB,SAAS,cAAc,KAAK,EACjD,KAAK,iBAAmB,SAAS,cAAc,KAAK,EACpD,MAAMC,EAAkB,SAAS,cAAc,KAAK,EAChDpiC,GAAyB,UAAU,yBAAyB,GAC5D,KAAK,oCAAmC,EAE5C,KAAK,cAAc,YAAY,KAAK,gBAAgB,EACpDmiC,EAAa,YAAY,KAAK,aAAa,EAC3CA,EAAa,YAAYC,CAAe,EACxCC,GAAwB,KAAK,gBAAgB,EAC7CjhC,GAAsB,KAAK,iBAAkB9gB,EAAWH,EAAU,eAAe,CAAC,EAClF,KAAK,YAAY,cAAc,KAAK,sBAAsB,EAC1D,KAAK,UAAY,KACjB,KAAK,cAAc,GAAK,eACxB,KAAK,iBAAiB,GAAK,mBAC3B,KAAK,iBAAiB,SAAW,GAE7B8c,EAAyB,SAAU,EAAC,cAAc,eAAe,EAAE,OACnE,KAAK,iBAAiB,UAAU,IAAI,eAAe,EAEvDA,EAAyB,SAAU,EAC9B,cAAc,eAAe,EAC7B,kBAAkB,KAAK,0BAA0B,KAAK,IAAI,CAAC,EAChEmlC,EAAgB,GAAK,kBACjB,KAAK,gBACL,KAAK,sBACD,IAAIvjD,GAAsB,KAAK,cAAe,IAAI0P,EAAqC,GAE/F,KAAK,YAAc,IAAI+zC,GACvB,KAAK,YAAY,iBAAiB,0BAA2BvmD,GAAS,CAClE,KAAK,kBAAkBA,CAAK,CACxC,CAAS,EACDqmD,EAAgB,YAAY,KAAK,WAAW,EAC5C,KAAK,aAAeviC,GAAkB,WACtC,KAAK,oBAAsB,IAAI4kB,GAC/B,KAAK,cAAgB,IAAIqa,GACzB7hC,EAAyB,SAAU,EAC9B,cAAc,kBAAkB,EAChC,kBAAkB,KAAK,sBAAsB,KAAK,IAAI,CAAC,EAC5D,KAAK,sBAAqB,EAC1B,KAAK,0BAA4B,IAAI,IACrC9d,GAAgC,SAAU,EAAC,cAAcojD,GAAuB,KAAM,CAAE,OAAQ,EAAI,CAAE,EACtGpjD,GAAgC,SAAQ,EAAG,iBAAiB,cAA2DpD,GAAS,KAAK,kBAAkBA,EAAM,IAAI,CAAC,EAClKkhB,EAAyB,SAAU,EAC9B,cAAc,oBAAoB,EAClC,kBAAkB,KAAK,uBAAuB,KAAK,IAAI,CAAC,EAC7DulC,GAA2C,SAAQ,EAAG,iBAAiB,mBAA6E,KAAK,0BAA2B,IAAI,EACxL,KAAK,yBAA2B,GAChC,KAAK,kBAAoB,GACzB,KAAK,eAAiB,IAAIC,GAAiDxlC,EAAyB,WAAW,cAAc,kBAAkB,CAAC,EAChJ,KAAK,oBAAsB,KAC3B,KAAK,eAAiB,IAAI,GAC7B,CACD,qCAAsC,CAClC,KAAK,wBAA0B2kC,GAAoC,EAAK,EACxE,KAAK,wBAAwB,iBAAiB,QAAS,KAAK,sBAAsB,KAAK,IAAI,CAAC,EAC5F,KAAK,cAAgBA,GAAoC,EAAI,EAC7D,KAAK,cAAc,iBAAiB,QAAS,KAAK,YAAY,KAAK,IAAI,CAAC,EACxE,KAAK,cAAc,YAAY,KAAK,uBAAuB,CAC9D,CACD,uBAAwB,CAChB,KAAK,uBACL,KAAK,YAAY,cAAc,KAAK,qBAAqB,CAEhE,CACD,aAAc,CACV,KAAK,YAAY,cAAc,KAAK,sBAAsB,EAC1D,MAAM/hD,EAAe,KAAK,kBAC1B,GAAI,CAACA,EACD,OAEJ,MAAMY,EAAc,KAAK,mBAAmBZ,CAAY,EACnDY,GAGLA,EAAY,OAAM,CACrB,CACD,OAAO,SAAS6O,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAACwyC,IAAyBvyC,KAC1BuyC,GAAwB,IAAIxiD,GAEzBwiD,EACV,CACD,eAAevuB,EAAa,CACxB,MAAI,CAAC,KAAK,iBAAmB,CAAC,KAAK,mBACxB,QAAQ,UAEZ,KAAK,gBAAgB,SAAS,KAAK,kBAAkB,EAAE,KAAK,IAAM,CACrE,KAAK,aAAa,eAAeA,CAAW,CACxD,CAAS,CACJ,CACD,gBAAgBmvB,EAAe,CAC3B,OAAO,KAAK,iBAAmB,IAClC,CACD,gBAAgBl7B,EAAQmU,EAAQ,CAE5B,KAAK,aAAa,gBAAgBnU,EAAQmU,CAAM,CACnD,CACD,WAAWj4B,EAAU,CACjB,MAAMi/C,EAAcj/C,EAAS,cAC7B,IAAImuC,EAAc8Q,EAAc3X,EAAoB,YAAY2X,CAAW,EAAI,KAC1E9Q,IACDA,EAAc,IAAI7G,EAAoB,GAAM,EAAI,EAChD6G,EAAY,YAAY50B,EAAyB,SAAQ,EAAG,cAAc,eAAe,EAAE,IAAG,CAAE,EAChG40B,EAAY,iBAAiB7G,EAAoB,OAAO,oBAAqB,KAAK,oBAAqB,IAAI,EAC3G6G,EAAY,iBAAiB7G,EAAoB,OAAO,oBAAqB,KAAK,yBAA0B,IAAI,EAChH,IAAIuT,GAA+B1M,EAAa,IAAI3jC,GAA2B,GAAG,CAAC,EACnF,KAAK,aAAa,IAAI2jC,CAAW,GAErCA,EAAY,eAAenuC,CAAQ,EACnC,KAAK,mBAAmBA,EAAS,SAAU,CAAA,EAEvC,KAAK,aACL,KAAK,SAAQ,EAEb,KAAK,iBAAiB,YACtBmuC,EAAY,MAAK,EAErBnuC,EAAS,iBAAiBI,EAAoB,gBAAiB,KAAK,qBAAsB,IAAI,EAC9FJ,EAAS,iBAAiBI,EAAoB,aAAc,KAAK,mBAAoB,IAAI,CAC5F,CACD,mBAAmB/H,EAAO,CAKtB,KAAK,uBAAuB,IAAI,SAAY,CACxC,MAAMiB,EAAOjB,EAAM,KACnB,GAAI,CAACiB,EAAK,6BACN,OAEJ,MAAMwG,EAAWxG,EAAK,SAAU,EAAC,SAAQ,EACnCovB,EAAmB,MAAM5oB,EAAS,8BAA8BxG,EAAK,QAAO,CAAE,EACpF,GAAI,CAACovB,EACD,OAEJ,MAAMw2B,EAAU,MAAMp/C,EAAS,kBAAkB4oB,EAAiB,EAAE,EAEhEw2B,GAAS,SAAS,GAAG5lD,EAAK,eAAgB,CAAA,IAAI,GAGlD,MAAMwG,EAAS,kBAAkB4oB,EAAiB,GAAI,GAAGw2B,CAAO;AAAA,EAAK5lD,EAAK,eAAc,CAAE,MAAO,EAAK,CAClH,CAAS,CACJ,CACD,aAAa0G,EAAU,CACnBA,EAAS,oBAAoBI,EAAoB,gBAAiB,KAAK,qBAAsB,IAAI,EACjGJ,EAAS,oBAAoBI,EAAoB,aAAc,KAAK,mBAAoB,IAAI,EAC5F,MAAM+tC,EAAc7G,EAAoB,YAAYtnC,CAAQ,EACvDmuC,IAGLA,EAAY,mBAAmBnuC,CAAQ,EACnC,CAAAA,EAAS,gBAGb,KAAK,aAAa,OAAOmuC,CAAW,EACpCA,EAAY,QAAQ,SACpB,KAAK,oBAAoBnuC,EAAS,SAAU,CAAA,GAC/C,CACD,kBAAkB+f,EAAQ,CACtB,MAAM/f,EAAW+f,EAAO,MAAM8+B,EAAqB,EAC/C,CAAC7+C,GAGesnC,EAAoB,YAAYtnC,CAAQ,CAI/D,CACD,+BAAgC,CAC5B,GAAI,CAAC,KAAK,aAAa,KACnB,OAEJ,IAAIm0B,EAAQ,KAAK,YAAY,QAAQ,YACjC,KAAK,YAAY,eACjBA,GAAS,KAAK,YAAY,eAE9B,UAAWga,KAAe,KAAK,aAC3BA,EAAY,gBAAgBha,CAAK,CAExC,CACD,OAAQ,CACJ,MAAMgrB,EAAmB,KAAK,aAAa,OAAQ,EAAC,KAAI,EACpDA,EAAiB,KACjB,KAAK,iBAAiB,QAGtBA,EAAiB,MAAM,OAE9B,CACD,gBAAiB,CACb,OAAO,KAAK,sBACf,CACD,UAAW,CACP,MAAM,SAAQ,EACd5gD,EAAmB,SAAU,EAAC,UAAU3C,EAAe,IAAI,EAC3D,KAAK,iBAAiB,CAACwjD,EAAmB,CAAC,EAC3C,UAAWjR,KAAe,KAAK,aAEvBA,EAAY,QAAQ,gBAAkB,KAAK,kBAC3C,KAAK,iBAAiB,YAAYA,EAAY,OAAO,EAG7D,MAAMkR,EAAY5jD,GAAgC,WAAW,OAAOojD,GAAuB,CAAE,OAAQ,EAAI,CAAE,EAC3G,UAAW7+C,KAAYq/C,EAAW,CAC9B,GAAIr/C,EAAS,cACT,SAEJ,MAAMmuC,EAAc7G,EAAoB,YAAYtnC,CAAQ,EACvDmuC,IAGLA,EAAY,WAAW,EAAI,EACtBA,EAAY,cACTnuC,EAAS,oBACTmuC,EAAY,YAAcnuC,EAAS,mBACnC,KAAK,gBAAgBA,CAAQ,GAGxBA,EAAS,mBAGzB,CACJ,CACD,UAAW,CACPnE,GAA8B,qBAAoB,EAClD,UAAWsyC,KAAe,KAAK,aAC3BA,EAAY,WAAW,EAAK,EAE5B,KAAK,iBAAiB,YAAYA,EAAY,OAAO,EAEzD,MAAM,SAAQ,EACd5vC,EAAmB,SAAU,EAAC,UAAU3C,EAAe,IAAI,CAC9D,CACD,UAAW,CACP,KAAK,QAAQ,OAAM,EAAG,sBAAsB,KAAK,sBAAsB,KAAK,IAAI,CAAC,EACjF,KAAK,8BAA6B,CACrC,CACD,oBAAoBvD,EAAO,CACvB,IAAI8D,EAAe9D,EAAM,KAAK,KAE1B8D,GAAiBA,EAAa,WAAY,GAAI,CAACA,EAAa,aAC5DA,EAAe,MAEnB,KAAM,CAAE,MAAA2xB,CAAK,EAAKz1B,EAAM,KACxB,UAAW81C,KAAe,KAAK,cACvB,CAAChyC,GAAgBmrC,EAAoB,YAAYnrC,EAAa,SAAQ,CAAE,IAAMgyC,IAC9EA,EAAY,cAAc,IAAI,EAGtC,GAAIhyC,EAAc,CAEd,MAAMmjD,EAAS,CADIzzB,GAA6D1vB,CAAY,CAClE,EAC1B,QAASojD,EAAUpjD,EAAa,WAAYojD,EAASA,EAAUA,EAAQ,WACnED,EAAO,KAAKzzB,GAA6D0zB,CAAO,CAAC,EAErF,KAAK,YAAY,KAAO,CACpB,OAAAD,EACA,aAAczzB,GAA6D1vB,CAAY,CACvG,EACgB,KAAK,uBACA,KAAK,sBAAsB,oBAAoBA,CAAY,CAEvE,MAEG,KAAK,YAAY,KAAO,CAAE,OAAQ,GAAI,aAAc,MAGxD,GADAoC,EAAmB,SAAU,EAAC,UAAUsB,EAAsB1D,CAAY,EACtE,CAACA,EACD,OAECA,EAAa,qBACd2xB,IACA,KAAK,oBAAsB3xB,EAC3B,KAAK,0BAA4B,IAErC,MAAMqjD,EAAoBrjD,EAAa,SAAU,EAAC,aAAY,EAAG,oBAC3DsjD,EAActjD,EAAa,UACjC,UAAWmV,KAAWkuC,EAClB,GAAIluC,EAAQ,UAAYmuC,EAAa,CACjClhD,EAAmB,SAAU,EAAC,UAAU0sC,GAAmC35B,CAAO,EAClF,KACH,CAER,CACD,qBAAqBjZ,EAAO,CACxB,MAAM2H,EAAW3H,EAAM,KACvB,KAAK,gBAAgB2H,CAAQ,EAC7B,KAAK,oBAAoBA,EAAS,SAAU,CAAA,EAC5C,KAAK,mBAAmBA,EAAS,SAAU,CAAA,CAC9C,CACD,gBAAgBA,EAAU,CAEtB,GADA,KAAK,uBAAuB,eACxB,CAACA,EAAS,mBAAoB,CAC1B,KAAK,aACAA,EAAS,kBAElB,MACH,CAED,GADA,KAAK,0BAA4B,GAC7B,KAAK,qBACL,OAEJ,MAAM0/C,EAA2B,KAAK,oBACjCC,EAAY,KAAK,KAAM3/C,EAAU,KAAK,qBAAuB,IAAI,EACtE,eAAe2/C,EAAY3/C,EAAU4/C,EAAW,CAC5C,MAAMC,EAAWD,EAAYA,EAAU,KAAI,EAAK,KAC1CE,EAAiBD,EAAW,MAAM7/C,EAAS,yBAAyB6/C,CAAQ,EAAI,KACtF,GAAIH,IAA6B,KAAK,oBAClC,OAEJ,IAAIpmD,EAAOwmD,EAAiB9/C,EAAS,UAAU8/C,CAAc,EAAI,KACjE,GAAI,CAACxmD,EAAM,CACP,MAAMymD,EAAoB//C,EAAS,mBACnC1G,EAAOymD,EAAoBA,EAAkB,MAAQA,EAAkB,gBAAkB,IAC5F,CAKGzmD,IACA,KAAK,uBAAuBA,CAAI,EAChC,KAAK,gCAA+B,EAE3C,CACJ,CACD,iCAAkC,CACjC,CACD,uBAAuBA,EAAM,CACzB,GAAI,CAACA,GAAQ,KAAK,2BAA6B,KAAK,kBAChD,OAEJ,MAAM60C,EAAc7G,EAAoB,YAAYhuC,EAAK,SAAU,CAAA,EAC9D60C,IAGL,KAAK,cAAc70C,CAAI,EACnB60C,EAAY,qBACZA,EAAY,oBAAoB,SAEvC,CACD,gBAAiB,CACb,MAAMhyC,EAAe,KAAK,kBAC1B,GAAI,CAACA,EACD,OAEJ,MAAMY,EAAc,KAAK,mBAAmBZ,CAAY,EACnDY,GAGLA,EAAY,OAAM,CACrB,CACD,kBAAmB,CACf,KAAK,aAAe,OACpB,KAAK,qBAAoB,EACzB,KAAK,uBAAuB,yBAAyB,CAAC,EACtD,KAAK,yBAA2B,GAChC,OAAO,KAAK,cACZ8hD,GAAsB,aAAY,CACrC,CACD,cAAcmB,EAAcC,EAAYC,EAAe,CACnD,MAAMhzB,EAAQ8yB,EAAa,MACrBG,EAAyBjzB,EAAM,OACrC,GAAI,CAACizB,EAAuB,OACxB,OAEA,CAAC,KAAK,cAAgB,KAAK,aAAa,QAAUjzB,EAClD,KAAK,iBAAgB,EAGrB,KAAK,qBAAoB,EAE7B,KAAK,aAAe8yB,EACpB,MAAMI,EAAkB7mC,EAAyB,SAAQ,EAAG,cAAc,oBAAoB,EAAE,MAC1F8lC,EAAY5jD,GAAgC,WAAW,OAAOojD,GAAuB,CAAE,OAAQ,EAAI,CAAE,EACrGrJ,EAAW6J,EAAU,IAAIr/C,GAAYA,EAAS,cAAcmgD,EAAwBC,CAAe,CAAC,EACrG,QAAQ,IAAI5K,CAAQ,EAAE,KAAK6K,GAAgB,CAC5C,KAAK,cAAgB,GACrB,QAAS92C,EAAI,EAAGA,EAAI82C,EAAa,OAAQ,EAAE92C,EAAG,CAC1C,MAAM+2C,EAAcD,EAAa92C,CAAC,EAClC,QAAS67B,EAAI,EAAGA,EAAIkb,EAAa,EAAElb,EAC/B,KAAK,cAAc,KAAK,CAAE,SAAUia,EAAU91C,CAAC,EAAG,MAAO67B,EAAG,KAAM,MAAW,CAAA,CAEpF,CAED,GADA,KAAK,uBAAuB,yBAAyB,KAAK,cAAc,MAAM,EAC1E,CAAC,KAAK,cAAc,OACpB,OAEA,KAAK,0BAA4B,KAAK,cAAc,SACpD,KAAK,yBAA2B,IAEpC,IAAIrtB,EAAQ,KAAK,yBACbkoC,IACI,KAAK,2BAA6B,GAClCloC,EAAQmoC,EAAgB,GAAK,EAG7BnoC,EAAQmoC,EAAgBnoC,EAAQ,EAAIA,EAAQ,EAEhD,KAAK,mBAAmBA,CAAK,EAE7C,CAAS,CACJ,CACD,0BAA0B1f,EAAO,CAC7B,KAAK,iBAAiB,UAAU,OAAO,gBAAiBA,EAAM,IAAI,EAClE,UAAW81C,KAAe,KAAK,aAC3BA,EAAY,YAAY91C,EAAM,IAAI,CAEzC,CACD,iBAAiBiB,EAAM,CAEnB,KAAK,uBAAuB,eACvB2lB,GAA2B,WAAW,SAAS,UAAU,EAAE,KAAK,IAAM,KAAK,cAAc3lB,EAAM,EAAI,CAAC,CAC5G,CACD,mBAAmBye,EAAO,CACjB,KAAK,gBAGV,KAAK,0BAA4BA,EAAQ,KAAK,cAAc,QAAU,KAAK,cAAc,OACzF,KAAK,6BAA4B,EACpC,CACD,wBAAyB,CACjB,CAAC,KAAK,eAAiB,CAAC,KAAK,cAGjC,KAAK,cAAc,KAAK,aAAc,EAAI,CAC7C,CACD,4BAA6B,CACrB,CAAC,KAAK,eAAiB,CAAC,KAAK,cAGjC,KAAK,cAAc,KAAK,aAAc,GAAM,EAAI,CACnD,CACD,6BAA8B,CAC1B,MAAO,EACV,CACD,qBAAsB,CAClB,MAAO,EACV,CACD,8BAA+B,CAC3B,MAAMA,EAAQ,KAAK,yBACbwoC,EAAgB,KAAK,cAC3B,GAAI,CAACA,EACD,OAEJ,MAAMC,EAAeD,EAAcxoC,CAAK,EAExC,GADA,KAAK,uBAAuB,wBAAwBA,CAAK,EACrDyoC,EAAa,OAAS,KACtB,OAEJ,GAAI,OAAOA,EAAa,KAAS,IAAa,CAErCA,EAAa,SAAS,aAAaA,EAAa,KAAK,EAAE,KAAKlnD,GAAQ,CACrEknD,EAAa,KAAOlnD,EAGU,KAAK,cAAgB,KAAK,eAAkB,KAAK,2BAA6B,IAExG,KAAK,6BAA4B,CAErD,CAAa,EACD,MACH,CACD,MAAMyD,EAAc,KAAK,mBAAmByjD,EAAa,IAAI,EAE7D,GADKA,EAAa,KAAK,iBACnBzjD,EAAa,CACb,KAAK,cAAgBA,EAAY,uBAAuB,KAAK,aAAa,KAAK,EAC/EA,EAAY,OAAM,EAClB,MAAM8b,EAAU9b,EAAY,gBAAgB,uBAAuB0jD,EAA2C,EAC1G5nC,EAAQ,QACRA,EAAQ,CAAC,EAAE,uBAAuB,EAAK,EAE3C9b,EAAY,OAAuB,EAAI,CAC1C,CACJ,CACD,sBAAuB,CACnB,GAAI,CAAC,KAAK,eAAiB,CAAC,KAAK,cAAc,QAAU,KAAK,2BAA6B,GACvF,OAEJ,MAAMyjD,EAAe,KAAK,cAAc,KAAK,wBAAwB,EACrE,GAAI,CAACA,EAAa,KACd,OAEJ,MAAMzjD,EAAc,KAAK,mBAAmByjD,EAAa,IAAI,EACzDzjD,GACAA,EAAY,qBAAoB,CAEvC,CACD,iBAAkB,CACd,UAAWoxC,KAAe,KAAK,aAC3B,GAAIA,EAAY,kBACZ,OAAOA,EAAY,kBAG3B,OAAO,IACV,CACD,cAAc70C,EAAMw0B,EAAO,CACvB,UAAWqgB,KAAe,KAAK,aACX7G,EAAoB,YAAYhuC,EAAK,SAAU,CAAA,IAC/C60C,EACZA,EAAY,cAAc70C,EAAMw0B,CAAK,EAGrCqgB,EAAY,cAAc,IAAI,CAGzC,CACD,wBAAwBuS,EAAO,CACtB,KAAK,kBAGV,KAAK,gBAAgB,WAAY,EAAC,UAAUA,CAAK,EAC5C,KAAK,aACDzhC,GAA2B,SAAQ,EAAG,SAAS,UAAU,EAErE,CACD,yBAAyB5mB,EAAO,CAC5B,MAAM0P,EAAQ1P,EAAM,KAEd8D,EAAe,KAAK,kBAC1B,GAAI,CAACA,EAAc,CACf,KAAK,YAAY,KAAO,CACpB,OAAQ,CAAE,EACV,aAAc,IAC9B,EACY,MACH,CAOD,MAAMwkD,EAAa90B,GAA6D1vB,CAAY,EACtFykD,EAAiB,CAACD,CAAU,EAClC,QAASpB,EAAUpjD,EAAa,WAAYojD,EAASA,EAAUA,EAAQ,WACnEqB,EAAe,KAAK/0B,GAA6D0zB,CAAO,CAAC,EAG7F,MAAMsB,EAAW94C,EAAM,IAAI8jB,EAA4D,EACjFi1B,EAA0B,IAAI,IACpCD,EAAS,QAAQE,GAASD,EAAwB,IAAIC,EAAM,GAAIA,CAAK,CAAC,EAItE,MAAMC,EAAiBJ,EAAe,IAAIG,GAClBD,EAAwB,IAAIC,EAAM,EAAE,GAClCA,CACzB,EACD,KAAK,YAAY,KAAO,CACpB,OAAQC,EACR,aAAcL,CAC1B,CACK,CACD,kBAAkBtoD,EAAO,CACrB,KAAK,cAAcA,EAAM,cAAe,EAAI,CAC/C,CACD,mBAAmBiB,EAAM,CACrB,OAAKA,EAGEguC,EAAoB,YAAYhuC,EAAK,SAAU,CAAA,EAF3C,IAGd,CACD,mBAAmBA,EAAM,CACrB,MAAM60C,EAAc,KAAK,mBAAmB70C,CAAI,EAChD,OAAK60C,EAGEA,EAAY,gBAAgB70C,CAAI,EAF5B,IAGd,CACD,wBAAwBA,EAAM,CAC1B,IAAI2nD,EACJ,MAAQA,EAAsB3nD,EAAK,4BAA2B,IAAO2nD,EAAoB,YACrF3nD,EAAO2nD,EAAoB,WAE/B,OAAO3nD,CACV,CACD,MAAM,oBAAoB4nD,EAAcpzB,EAAOqzB,EAAe,CAC1D,KAAK,qBAAuB,GAC5B,MAAM7nD,EAAOigB,EAAyB,SAAQ,EAAG,cAAc,oBAAoB,EAAE,IAAK,EACtF2nC,EACA,KAAK,wBAAwBA,CAAY,EACxCC,GACD7nD,EAAK,uBAAsB,EAE3B,KAAK,uBACA,KAAK,sBAAsB,oBAAoB4nD,CAAY,EAEpE,MAAMjiC,GAA2B,WAAW,SAAS,WAAY,GAAO,CAAC6O,CAAK,EAC9E,KAAK,cAAcx0B,EAAMw0B,CAAK,EAC9B,OAAO,KAAK,qBACP,KAAK,yBACNlyB,EAAc,mCAAqCtC,EAAK,WACxDsC,EAAc,oCAAmC,EACjDgiB,EAAyD,wBAAuB,GAEpF,KAAK,uBAAyB,EACjC,CACD,wBAAyB,CACrB,UAAWuwB,KAAe,KAAK,aAC3BA,EAAY,OAAM,CAEzB,CACD,uBAAuBiT,EAAyB,CAG5C,MAAMC,EAAqBC,EAAc,KAAK,IAAI,EAE5CC,EAA4BlpD,GAAU,CACpCA,EAAM,UAAY,GAClBipD,EAAc,KAAK,IAAI,CAEvC,EACQF,EAAwB,iBAAiB,YAAc/oD,GAAU,CAC7D,GAAIA,EAAM,SAAW,EACjB,OAEJ,KAAK,YAAY,QAAQ,UAAU,IAAI,mCAAmC,EAC1E+oD,EAAwB,MAAM,YAAY,SAAU,GAAGA,EAAwB,YAAY,IAAI,EAC/F,MAAMI,EAAc,IACpBJ,EAAwB,MAAM,YAAY,OAAQ,GAAG,GAAKI,CAAW,IAAI,EACzEJ,EAAwB,MAAM,YAAY,eAAgB,GAAGI,CAAW,IAAI,EAC5EJ,EAAwB,MAAM,YAAY,QAAS,eAAeI,CAAW,KAAK,EAClFJ,EAAwB,MAAM,YAAY,WAAY,OAAO,EAC7DA,EAAwB,OAAQ,EAAC,iBAAiB,OAAQC,CAAkB,EAC5ED,EAAwB,OAAM,EAAG,iBAAiB,cAAeC,EAAoB,EAAI,EACzFD,EAAwB,OAAM,EAAG,iBAAiB,YAAaC,EAAoB,EAAI,EACvFD,EAAwB,OAAM,EAAG,iBAAiB,YAAaG,EAA0B,EAAI,EAC7FH,EAAwB,OAAM,EAAG,iBAAiB,UAAWC,EAAoB,EAAI,EACrFD,EAAwB,OAAQ,EAAC,iBAAiB,mBAAoBC,CAAkB,CAC3F,EAAE,EAAI,EACP,SAASC,GAAgB,CACrB,KAAK,YAAY,QAAQ,UAAU,OAAO,mCAAmC,EAC7EF,EAAwB,MAAM,eAAe,MAAM,EACnDA,EAAwB,MAAM,eAAe,cAAc,EAC3DA,EAAwB,MAAM,eAAe,OAAO,EACpDA,EAAwB,MAAM,eAAe,UAAU,EACvDA,EAAwB,OAAQ,EAAC,oBAAoB,OAAQC,CAAkB,EAC/ED,EAAwB,OAAM,EAAG,oBAAoB,cAAeC,EAAoB,EAAI,EAC5FD,EAAwB,OAAM,EAAG,oBAAoB,YAAaC,EAAoB,EAAI,EAC1FD,EAAwB,OAAM,EAAG,oBAAoB,YAAaG,EAA0B,EAAI,EAChGH,EAAwB,OAAM,EAAG,oBAAoB,UAAWC,EAAoB,EAAI,EACxFD,EAAwB,OAAQ,EAAC,oBAAoB,mBAAoBC,CAAkB,CAC9F,CACJ,CACD,uBAAuBI,EAAW,CAC9B,KAAK,YAAY,YAAYA,IAAc,UAAU,EACrD,KAAK,gBAAgB,KAAmB,MACxC,MAAMC,EAA2B,IAAItmD,GACrCsmD,EAAyB,QAAQ,UAAU,IAAI,qBAAqB,EACpEA,EAAyB,QAAQ,aAAa,QAAS,GAAG52C,GAAmB,QAAQ,EAAE,MAAM,CAAE,OAAQ,EAAI,CAAE,CAAC,EAAE,EAChH,KAAK,aAAa,KAAK42C,EAAyB,OAAO,EACvD,KAAK,uBAAuBA,EAAyB,OAAO,EAC5D,MAAMC,EAA4B,IAAIvmD,GACtCumD,EAA0B,QAAQ,UAAU,IAAI,qBAAqB,EACrEA,EAA0B,QAAQ,aAAa,QAAS,GAAG72C,GAAmB,UAAU,EAAE,MAAM,CAAE,OAAQ,EAAI,CAAE,CAAC,EAAE,EACnH,KAAK,oBAAoB,KAAK62C,EAA0B,OAAO,EAC/D,MAAMC,EAAoB,IAAIrD,GAA2B,GAAuB,GAA4B,gCAAiC,GAAG,EAChJqD,EAAkB,cAAcF,CAAwB,EACxDE,EAAkB,YAAW,EAC7BA,EAAkB,qBAAoB,EACtCA,EAAkB,iBAAiB,kBAAiE,IAAM,CACtGC,GACZ,CAAS,EACD,KAAK,aAAa,iBAAiB,yBAAiF,IAAM,CACtH,KAAK,aAAa,kBAAkBD,EAAkB,4BAA4BhlD,EAAWH,EAAU,yBAAyB,EAAGG,EAAWH,EAAU,yBAAyB,EAAGG,EAAWH,EAAU,mBAAmB,EAAGG,EAAWH,EAAU,oBAAoB,EAAG,iBAAiB,CAAC,CACzS,CAAS,EACD,MAAMqlD,EAAkC,IAAM,CAC1C,KAAK,cAAc,KAAKH,EAA0B,QAAS,KAAK,oBAAoB,OAAO,EAC3F,KAAK,cAAc,iBAAiB,IACpC,KAAK,aAAa,oBAAoB,wBAA+EI,CAAmB,CACpJ,EACcF,EAAgC,IAAM,CACTD,EAAkB,SAAQ,IAAO,OAE5DE,KAGA,KAAK,cAAc,KAAKJ,EAAyB,OAAO,EACnD,KAAK,aAAa,kBACnB,KAAK,cAAc,iBAAiB,IAExC,KAAK,aAAa,iBAAiB,wBAA+EK,CAAmB,EAErJ,EACcA,EAAuB1pD,GAAU,CACnC,KAAK,cAAc,iBAAiBA,EAAM,KAAK,gBAAgB,CAC3E,EACc2pD,EAAe3pD,GAAU,CAC3B,KAAM,CAAE,MAAAqoD,CAAK,EAAKroD,EAAM,KACpBqoD,IAAU,YACViB,EAA0B,KAAKM,EAAa,OAAO,EACnDH,KAEKpB,IAAU,WACfkB,EAAkB,iBAAiBD,CAAyB,EAC5DE,IAEhB,EACQ,KAAK,gBAAkB5iC,GAA2B,SAAQ,EAAG,qBAAqB,IAAMA,GAA2B,SAAQ,EAAG,SAAS,UAAU,EAAG,sBAAuB,GAAM,EAAI,EACrL,MAAMijC,EAAa,KAAK,gBAAgB,WAAU,EAClDA,EAAW,cAAe,EAAC,aAAa,QAAS,GAAGC,GAAsB,SAAS,EAAE,MAAM,CAAE,QAAS,oDAAoD,CAAE,CAAC,EAAE,EAC3J,KAAK,YAAc,YACnB,KAAK,YAAY,eAAeD,EAAW,cAAe,CAAA,EAE9D,MAAME,EAAgBF,EAAW,gBACjCG,GAA8BD,CAAa,EAC3C1kC,GAAsB0kC,EAAexlD,EAAWH,EAAU,gBAAgB,CAAC,EAC3E,MAAMo0C,EAAiBqR,EAAW,2BAClCI,GAAiCzR,CAAc,EAC/CnzB,GAAsBmzB,EAAgBj0C,EAAWH,EAAU,gBAAgB,CAAC,EAC5E,MAAM8lD,EAAa,IAAIC,GAAmB5lD,EAAWH,EAAU,MAAM,EAAsB,OAAW,UACtG,KAAK,gBAAgB,WAAW8lD,CAAU,EAC1CA,EAAW,QAAQ,UAAU,IAAI,WAAW,EAC5CX,EAAkB,KAAKW,EAAW,OAAO,EACzC,MAAMN,EAAe,IAAIO,GAAmB5lD,EAAWH,EAAU,QAAQ,EAAsB,OAAW,YAC1GwlD,EAAa,QAAQ,UAAU,IAAI,YAAa,MAAM,EACtDC,EAAW,iBAAiBO,GAAqB,YAAaT,EAAa,IAAI,EAC/E,KAAK,gBAAgB,WAAWC,CAAY,EAC5C,KAAK,mBAAqBM,EAC1B,KAAK,gBAAgB,sBAAsB,kBAAkB,EAC7D,MAAMG,EAAwB5D,GAA2C,SAAU,EAAC,aAAY,EAChG,QAASv1C,EAAI,EAAGA,EAAIm5C,EAAsB,OAAQ,EAAEn5C,EAChD,KAAK,wBAAwBm5C,EAAsBn5C,CAAC,CAAC,EAEzD,KAAK,YAAY,iBAAiB,KAAK,gBAAgB,WAAU,CAAE,CACtE,CACD,uBAAwB,CACpB,GAAI,KAAK,iBAAmB,KAAK,gBAAgB,WAAU,EAAG,qBAC1D,OAEJ,MAAM0F,EAAWsK,EAAyB,SAAQ,EAAG,cAAc,kBAAkB,EAAE,MACvF,IAAIkoC,EAAY,aAKhB,IAJIxyC,IAAa,SACZA,IAAa,QAAU0zC,GAA+B,SAAU,EAAC,QAAQ,YAAc,OACxFlB,EAAY,YAEZ,CAAC,KAAK,gBAAiB,CACvB,KAAK,uBAAuBA,CAAS,EACrC,MACH,CACD,GAAIA,IAAc,KAAK,UACnB,OAEJ,KAAK,UAAYA,EACjB,MAAMS,EAAa,KAAK,gBAAgB,WAAU,EAClD,KAAK,YAAY,iBAAiBA,EAAW,cAAe,CAAA,EAC5D,KAAK,YAAY,YAAY,KAAK,YAAc,UAAU,EAC1D,KAAK,gBAAgB,KAAmB,MACpC,KAAK,YAAc,YACnB,KAAK,YAAY,eAAeA,EAAW,cAAe,CAAA,CAEjE,CACD,0BAA0B7pD,EAAO,CAC7B,KAAK,wBAAwBA,EAAM,IAAI,CAC1C,CACD,wBAAwBwd,EAAM,CACtB,KAAK,iBAAmBA,EAAK,UAAW,IAAK,KAAK,MAClD,KAAK,gBAAgB,WAAWA,CAAI,CAE3C,CACD,wBAAyB,CACrB,OAAO,KAAK,mBACf,CACD,mBAAmB/V,EAAU,CACzB,MAAM8iD,EAAqB9iD,EAAS,yBAAyB+iD,EAAoB,EACjFD,EAAmB,MAAK,EACxB,KAAK,0BAA0B,IAAI9iD,EAAU8iD,CAAkB,EAC/DA,EAAmB,iBAAiB,8BAA0G,KAAK,4BAA6B,IAAI,CACvL,CACD,oBAAoB9iD,EAAU,CAC1B,MAAM8iD,EAAqB,KAAK,0BAA0B,IAAI9iD,CAAQ,EACjE8iD,IAGLA,EAAmB,KAAI,EACvB,KAAK,0BAA0B,OAAO9iD,CAAQ,EAC9C8iD,EAAmB,oBAAoB,8BAA0G,KAAK,4BAA6B,IAAI,EAC1L,CACD,4BAA4B,CAAE,KAAME,GAAY,CAC5C,UAAW7oD,KAAW6oD,EAAU,CAC5B,GAAI,CAAC7oD,EACD,SAEJ,MAAM8C,EAAc,KAAK,mBAAmB9C,CAAO,EAC/C8C,GACKA,EAAY,sBAEhBgmD,GAAyC,WAAW,QAC5D,CACJ,CACD,yBAA0B,CAGjB,KAAK,sBACN,KAAK,oBAAsB,IAAIC,GAC/B,KAAK,oBAAoB,iBAAiB,wBAA0B3qD,GAAU,CAC1E,KAAM,CAAE,YAAA4qD,EAAa,aAAAC,EAAc,YAAAC,CAAW,EAAK9qD,EAAM,KACnD+qD,EAAmB,KAAK,eAAe,IAAIH,CAAW,EAC5D,GAAIG,EACA,UAAWlc,KAAWkc,EAClBF,EAAehc,EAAQ,KAAM,EAAGA,EAAQ,KAAI,EAGpD,KAAK,eAAe,eAAeic,CAAW,CAC9D,CAAa,EACD,KAAK,uBAAuB,QAAQ,QAAQ,KAAK,mBAAmB,GAExE,MAAME,EAAkB,KAAK,eAAe,YAAW,EACvD,KAAK,oBAAoB,KAAO,CAC5B,SAAUA,CACtB,EACQ,KAAK,oBAAoB,MAC5B,CACD,iBAAiBpc,EAAa,CAC1B,OAAO,KAAK,eAAe,iBAAiBA,CAAW,CAC1D,CACD,gBAAgBC,EAAS,CACrB,IAAIoc,EAAa,KAAK,eAAe,IAAIpc,EAAQ,IAAI,EAChDoc,IACDA,EAAa,IAAI,IACjB,KAAK,eAAe,IAAIpc,EAAQ,KAAMoc,CAAU,GAEpDA,EAAW,IAAIpc,CAAO,EACjB,KAAK,iBAAiBA,EAAQ,IAAI,GACnCA,EAAQ,KAAI,CAEnB,CACD,kBAAkBA,EAAS,CACvB,MAAMoc,EAAa,KAAK,eAAe,IAAIpc,EAAQ,IAAI,EAClDoc,GAGLA,EAAW,OAAOpc,CAAO,CAC5B,CACD,OAAO,oCAAsC,UAAY,GACzD,OAAO,mCAAqC,EAChD,CAEA,WAAW,SAAW,WAAW,UAAY,GAE7C,WAAW,SAAS,cAAgBtrC,EACpC,MAAMinD,GAAuB,CACzB,CACI,KAAM,UACN,MAAO,MACV,EACD,CACI,KAAM,UACN,MAAO,aACV,EACD,CACI,KAAM,UACN,MAAO,MACV,EACD,CACI,KAAM,UACN,MAAO,aACV,EACD,CACI,KAAM,iBACN,MAAO,aACV,EACD,CACI,KAAM,iBACN,MAAO,YACV,EACD,CACI,KAAM,iBACN,MAAO,MACV,CACL,EACO,MAAMU,EAAoB,CAC7B,sBAAsBlrD,EAAOmmB,EAAa0H,EAAQ,CAC1CA,aAAkBs9B,IAAiC,CAACt9B,EAAO,OAAM,GAGjEtqB,EAAc,WAAW,QAAQ,WAAWvD,EAAM,MAAM,GAG5DmmB,EAAY,cAAe,EAAC,WAAW5hB,EAAWH,EAAU,qBAAqB,EAAG,IAAMc,GAAuB2oB,CAAM,EAAG,CAAE,aAAc,sBAAwB,CAAA,CACrK,CACL,CACO,MAAMu9B,EAAgB,CACzB,OAAOnqD,EAAM+lB,EAAW,CACpB,MAAMqkC,EAAQ9nD,EAAc,WAC5B,OAAA8nD,EAAM,kBAAoB,GAClB,IAAI,QAAQC,CAAa,EAAG,MAAOC,GAAW,CAClD,IAAIC,EACJ,MAAIC,GAA6CF,CAAM,EACnDC,EAAUD,EAAO,QAGjBC,EAAUjnD,EAAWH,EAAU,6BAA6B,EAEhEshD,GAAuB,SAAQ,EAAG,KAAK8F,CAAO,EAGxCD,CAClB,CAAS,EACD,SAASD,EAAcrpB,EAASC,EAAQ,CACpC,GAAIjhC,aAAgBuG,EAChBkkD,EAAezqD,CAAI,UAEdA,aAAgB6sB,GACrB7sB,EAAK,QAAQ0qD,CAA8B,MAE1C,CACD,MAAMhkD,EAAW1G,EAAK,aAAY,EAAG,SAAS,MAAMulD,EAAqB,EACzE,GAAI7+C,EACKA,EAAS,2BAA2B1G,CAAI,EAAE,KAAK2qD,CAA2B,MAE9E,CACD,MAAMC,EAAMtnD,EAAWH,EAAU,6BAA6B,EAC9D89B,EAAO,IAAI4pB,GAA2CD,CAAG,CAAC,CAC7D,CACJ,CACD,SAASH,EAAeK,EAAc,CAClCV,EAAM,kBAAoB,GAK1B,IAAI9gC,EAAcwhC,EAClB,KAAOxhC,EAAY,YACfA,EAAcA,EAAY,WAE9B,MAAMyhC,EAAa,EAAEzhC,aAAuB7oB,IAE5C,GAAI,EADeT,aAAgBS,KAChBsqD,EAAY,CAC3B,MAAMH,EAAMtnD,EAAWH,EAAU,6BAA6B,EAC9D89B,EAAO,IAAI4pB,GAA2CD,CAAG,CAAC,EAC1D,MACH,CACD,GAAIE,EAAc,CACTV,EAAM,oBAAoBU,EAAc,CAAC/kC,CAAS,EAAE,KAAKib,CAAO,EACrE,MACH,CACD,MAAM4pB,EAAMtnD,EAAWH,EAAU,6BAA6B,EAC9D89B,EAAO,IAAI4pB,GAA2CD,CAAG,CAAC,CAC7D,CACD,SAASD,EAA4BG,EAAc,CAC/C,GAAI,CAACA,EAAc,CACf,MAAMF,EAAMtnD,EAAWH,EAAU,yBAAyB,EAC1D89B,EAAO,IAAI4pB,GAA2CD,CAAG,CAAC,EAC1D,MACH,CACDH,EAAeK,CAAY,CAC9B,CACD,SAASJ,EAA+BI,EAAc,CAClD,GAAI,CAACA,EAAc,CACf,MAAMF,EAAMtnD,EAAWH,EAAU,4BAA4B,EAC7D89B,EAAO,IAAI4pB,GAA2CD,CAAG,CAAC,EAC1D,MACH,CACDH,EAAeK,CAAY,CAC9B,CACJ,CACJ,CACL,CACO,MAAME,EAAoB,CAC7B,OAAOv7C,EAAU,CAEb,OADcnN,EAAc,WACf,eAAemN,CAAQ,CACvC,CACL,CACO,MAAMw7C,EAAuB,CAChC,aAAajzC,EAASysB,EAAU,CAC5B,MAAMzkC,EAAOgY,EAAQ,OAAOzR,CAAoB,EAChD,GAAI,CAACvG,EACD,MAAO,GAEX,MAAM60C,EAAc7G,EAAoB,YAAYhuC,EAAK,SAAU,CAAA,EACnE,GAAI,CAAC60C,EACD,MAAO,GAEX,OAAQpQ,EAAQ,CACZ,IAAK,wBACD,OAAKoQ,EAAY,kBAAkB70C,CAAI,EAChC,GACX,IAAK,wBACD,OAAA60C,EAAY,iBAAiB70C,CAAI,EAC1B,GACX,IAAK,6BACD,OAAA60C,EAAY,cAAc70C,CAAI,EACvB,GACX,IAAK,uBACD,OAAK60C,EAAY,gBAAgB70C,CAAI,GAAG,WAAU,EAC3C,GACX,IAAK,gBACD,OAAKkrD,GAA+B,WAAW,OAC/C5oD,EAAc,SAAQ,EAAG,aAAa,YAAW,EAC1C,GACX,IAAK,gBACD,OAAK4oD,GAA+B,WAAW,OAC/C5oD,EAAc,SAAQ,EAAG,aAAa,YAAW,EAC1C,GACX,IAAK,uBACD,OAAAA,EAAc,SAAQ,EAAG,wBAAwB,QAAQ,EAClD,GACX,IAAK,yBACD,OAAAA,EAAc,SAAQ,EAAG,wBAAwB,UAAU,EACpD,GACX,IAAK,8BAA+B,CAChC,MAAM6oD,EAAyBlmD,EAAmB,SAAU,EAAC,OAAOb,EAAsB,EAC1F,GAAI,CAAC+mD,EACD,MAAO,GAENA,EAAuB,kBAC/B,CACJ,CACD,MAAO,EACV,CACL,CACA,IAAIC,GACG,MAAMxV,EAA2B,CACpC,OAAO,SAAStjC,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAAC84C,IAAsC74C,KACvC64C,GAAqC,IAAIxV,IAEtCwV,EACV,CACD,SAASprD,EAAM,CACX,MAAM02C,EAAc12C,EAAK,SAAQ,EAAG,WAAW,YAAYA,CAAI,EAC/D,OAAK02C,EAGE,CACH,MAAO,4BACP,MAAOpzC,EAAWH,EAAU,cAAe,CAAE,IAAK,IAAMuzC,EAAY,KAAK,KAAK,EAAG,CAC7F,EALmB,IAMd,CACL,8OC7qCMvzC,GAAY,CAId,mBAAoB,wBAIpB,4BAA6B,kCAI7B,UAAW,YAIX,uBAAwB,2BAIxB,IAAK,MAIL,QAAS,UAIT,SAAU,WAIV,+BAAgC,8CACpC,EACMC,GAAOC,EAA4B,0CAA2CF,EAAS,EACvFG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EACpE,IAAIioD,GACG,MAAMC,WAA6BljD,EAAmC,CACzE,qBACA,wBACA,wBACA,8BACA,mBACA,kBACA,aAAc,CACV,QACA,KAAK,qBAAuB,GAC5B,KAAK,wBACD6X,EAAyB,SAAQ,EAAG,cAAc,oCAAoC,EAC1F,KAAK,wBAAwB,kBAAkB,KAAK,OAAO,KAAK,IAAI,CAAC,EACrE,KAAK,wBACDA,EAAyB,SAAQ,EAAG,cAAc,sCAAuCsrC,GAAiB,GAAG,EACjH,KAAK,wBAAwB,kBAAkB,KAAK,OAAO,KAAK,IAAI,CAAC,EACrE,KAAK,8BACDtrC,EAAyB,SAAU,EAAC,cAAc,2BAA4B,EAAI,EACtF,KAAK,8BAA8B,SAAS3c,GAAWH,GAAU,kBAAkB,CAAC,EACpF,KAAK,8BAA8B,kBAAkB,KAAK,8BAA8B,KAAK,IAAI,CAAC,EAClG,KAAK,mBAAqB,IAAIqoD,GAAqD,KAAK,OAAO,KAAK,IAAI,CAAC,EACzG,KAAK,mBAAmB,KAAK,KAAK,OAAO,EACzC,KAAK,QAAQ,aAAa,QAAS,GAAGh6C,GAAmB,0BAA0B,EAAE,MAAM,CAAE,OAAQ,EAAI,CAAE,CAAC,EAAE,EAC9G,KAAK,qBAAqB,KAAK6c,GAAmB,wBAAwB,kCAAkC,CAAC,EAC7G,KAAK,qBAAqB,KAAK,IAAIuZ,GAAkC,KAAK,wBAAyBtkC,GAAWH,GAAU,2BAA2B,EAAGG,GAAWH,GAAU,SAAS,CAAC,CAAC,EACtL,MAAMsoD,EAAiB,IAAIC,GAA2B,KAAK,4BAA4B,KAAK,IAAI,EAAGpoD,GAAWH,GAAU,sBAAsB,CAAC,EAC/IsoD,EAAe,QAAQ,aAAa,QAAS,GAAGE,GAA4B,EAAG,MAAM,CAAE,OAAQ,GAAM,CAAC,EAAE,EACxG,SAASC,EAAwBrqD,EAAMqD,EAAO,CAC1C,MAAMinD,EAASJ,EAAe,aAAalqD,EAAMqD,CAAK,EAClDA,IAAU,KAAK,wBAAwB,IAAG,GAC1C6mD,EAAe,OAAOI,CAAM,CAEnC,CACDD,EAAwB,KAAK,KAAMtoD,GAAWH,GAAU,GAAG,EAAGooD,GAAiB,GAAG,EAClFK,EAAwB,KAAK,KAAMtoD,GAAWH,GAAU,OAAO,EAAGooD,GAAiB,OAAO,EAC1FK,EAAwB,KAAK,KAAMtoD,GAAWH,GAAU,QAAQ,EAAGooD,GAAiB,QAAQ,EAC5FE,EAAe,YAAY,GAAG,EAC9B,KAAK,qBAAqB,KAAKA,CAAc,EAC7C,KAAK,qBAAqB,KAAK,IAAI7jB,GAAkC,KAAK,8BAA+BtkC,GAAWH,GAAU,8BAA8B,CAAC,CAAC,EAC9J8B,EAAmB,SAAQ,EAAG,wBAAwBsB,EAAsB,KAAK,OAAQ,IAAI,EAC7F,KAAK,OAAM,CACd,CACD,OAAO,SAAS+L,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAAC+4C,IAAgC94C,KACjC84C,GAA+B,IAAIC,IAEhCD,EACV,CACD,UAAW,CACH,KAAK,oBACL,KAAK,kBAAkB,SAAU,EAAC,aAAY,EAAG,mBAAmBS,EAAe,EACnF,OAAO,KAAK,mBAEhB,MAAM9rD,EAAOiF,EAAmB,SAAU,EAAC,OAAOsB,CAAoB,EACtE,GAAI,CAACvG,EACD,YAAK,mBAAmB,QACxB,KAAK,mBAAmB,yBACjB,QAAQ,UAEnB,KAAK,kBAAoBA,EACzB,MAAM+rD,EAAmB,CAAC,KAAK,wBAAwB,IAAG,EACpD7P,EAAW,CAAA,EAEjB,GADAA,EAAS,KAAKl8C,EAAK,gBAAgB8rD,EAAe,CAAC,EAC/C,CAACC,EAAkB,CACnB,IAAIziC,EAActpB,EAAK,WACvB,KAAOspB,GACH4yB,EAAS,KAAK5yB,EAAY,gBAAgBwiC,EAAe,CAAC,EAC1DxiC,EAAcA,EAAY,WAE9B4yB,EAAS,KAAK,KAAK,0BAA0Bl8C,CAAI,CAAC,CACrD,CACD,OAAO,QAAQ,IAAIk8C,CAAQ,EACtB,KAAK,KAAK,mBAAmB,WAAW,KAAK,KAAK,kBAAkB,CAAC,EACrE,KAAK,KAAK,8BAA8B,KAAK,IAAI,CAAC,CAC1D,CACD,UAAW,CACPj3C,EAAmB,SAAU,EAAC,UAAUqmD,GAAsB,IAAI,EAClE,MAAM,SAAQ,CACjB,CACD,UAAW,CACP,MAAM,SAAQ,EACdrmD,EAAmB,SAAU,EAAC,UAAUqmD,GAAsB,IAAI,CACrE,CACD,cAAe,CACX,OAAO,KAAK,oBACf,CACD,4BAA4BvsD,EAAO,CAC/B,MAAMo3C,EAASp3C,EAAM,OACrB,KAAK,wBAAwB,IAAIo3C,EAAO,KAAK,CAChD,CACD,+BAAgC,CAC5B,MAAMsV,EAAiB,KAAK,wBAAwB,IAAG,EACjDO,EAAcP,IAAmBF,GAAiB,KAAOE,IAAmBF,GAAiB,QAC7FU,EAAeR,IAAmBF,GAAiB,KAAOE,IAAmBF,GAAiB,SACpG,KAAK,mBAAmB,uBAAuB,KAAK,8BAA8B,IAAK,EAAES,EAAaC,CAAY,CACrH,CACD,0BAA0BjsD,EAAM,CAC5B,MAAMkmD,EAAoBlmD,EAAK,SAAU,EAAC,aAAY,EAAG,oBACzD,IAAIgY,EAAUkuC,EAAkB,CAAC,EACjC,GAAIlmD,EAAK,UACL,QAAS,EAAI,EAAG,EAAIkmD,EAAkB,OAAQ,EAAE,EAAG,CAC/C,MAAMgG,EAAmBhG,EAAkB,CAAC,EACxCgG,EAAiB,UAAYlsD,EAAK,QAAS,GAAIksD,EAAiB,YAChEl0C,EAAUk0C,EAEjB,CAEL,OAAOl0C,EACF,SAAS,CACV,WAAY,OACZ,YAAa8zC,GACb,sBAAuB,GACvB,OAAQ,GACR,cAAe,GACf,gBAAiB,EACpB,EACiB,GACC,EAAK,EACnB,KAAKlrD,GACF,WAAYA,EACLA,EAAO,OAEX,IACV,CACJ,CACD,8BAA+B,CAC9B,CACL,CACO,MAAM2qD,GAAmB,CAC5B,IAAK,MACL,SAAU,WACV,QAAS,SACb,EACMO,GAAkB,wBACjB,MAAMK,EAAe,CACxB,aAAa9rC,EAAUokB,EAAU,CAC7B,OAAQA,EAAQ,CACZ,IAAK,mCACD,OAAA6mB,GAAqB,WAAW,SACzB,EAEd,CACD,MAAO,EACV,CACL,mKCtNM1pD,GAAS,IAAI,cACnBA,GAAO,YACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAqBC,ECYD,MAAMwqD,GAAoB,0BACpBjpD,GAAY,CAMd,QAAS,WAMT,eAAgB,4FAKhB,mBAAoB,sBACxB,EACMC,GAAOC,EAA4B,sCAAuCF,EAAS,EACnFG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC7D,MAAMipD,WAAyBjkD,EAAmC,CACrE,KACA,yBACA,YAAc,KACd,iBACA,YACA,iBACA,kBACA,YAAYkkD,EAAmB,CAC3B,MAAM,GAA2BA,CAAiB,EAClD,KAAK,yBAA2BrsC,EAAyB,SAAU,EAAC,cAAc,sBAAuB,EAAK,EAC9G,KAAK,yBAAyB,kBAAkB,KAAK,WAAW,KAAK,IAAI,CAAC,EAC1E9d,GAAgC,SAAU,EAAC,iBAAiBojD,GAAuBz+C,EAAoB,aAAc,KAAK,aAAc,KAAM,CAAE,OAAQ,EAAM,CAAA,EAC9J3E,GAAgC,SAAU,EAAC,iBAAiBojD,GAAuBz+C,EAAoB,YAAa,KAAK,aAAc,KAAM,CAAE,OAAQ,EAAM,CAAA,EAC7J3E,GAAgC,SAAU,EAAC,iBAAiBojD,GAAuBz+C,EAAoB,sBAAuB,KAAK,aAAc,KAAM,CAAE,OAAQ,EAAM,CAAA,EACvK3E,GAAgC,SAAU,EAAC,iBAAiBojD,GAAuBz+C,EAAoB,sBAAuB,KAAK,aAAc,KAAM,CAAE,OAAQ,EAAM,CAAA,EACvK7B,EAAmB,SAAQ,EAAG,wBAAwBsB,EAAsB,KAAK,QAAS,IAAI,EAC9F,KAAK,KAAOtB,EAAmB,SAAQ,EAAG,OAAOsB,CAAoB,EACrE,MAAMg4B,EAAO,KAAK,eAAe,YAAY,MAAO,gCAAgC,EAC9EC,EAAU,IAAInQ,GAAmB,sBAAuBkQ,CAAI,EAC5DE,EAAc,IAAIC,GAAyB,OAAW,EAAG,EAAG,OAAW,OAAW,EAAK,EAC7FD,EAAY,iBAAiB,cAAgE,KAAK,gBAAiB,IAAI,EACvHD,EAAQ,kBAAkBC,CAAW,EACrCD,EAAQ,kBAAkB,IAAIoJ,GAAkC,KAAK,yBAA0BtkC,GAAWH,GAAU,cAAc,EAAGG,GAAWH,GAAU,OAAO,CAAC,CAAC,EACnK,KAAK,eAAe,aAAa,QAAS,GAAGqO,GAAmB,oBAAoB,EAAE,MAAM,CAAE,OAAQ,EAAI,CAAE,CAAC,EAAE,EAC/G,KAAK,iBAAmB,KAAK,eAAe,YAAY,MAAO,0BAA0B,EACzF,KAAK,iBAAiB,YAAclO,GAAWH,GAAU,kBAAkB,EAC3E,KAAK,YAAc,IAAIopD,GAAqE,CAAE,SAAU,EAAI,CAAE,EAC9G,KAAK,YAAY,gCAA2C,GAA4B,EAAK,EAC7F,KAAK,iBACD,IAAIC,GAA8E,KAAK,WAAW,EACtG,KAAK,eAAe,YAAY,KAAK,YAAY,OAAO,EACxD,KAAK,YAAY,iBAAiB/K,GAAsB,gBAAiB,IAAM,CAC3Ev8C,EAAiB,YAAY2U,GAAwB,qBAAqB,CACtF,CAAS,EACD,KAAK,OAAM,CACd,CACD,gBAAgB9a,EAAO,CACnB,KAAK,YAAcA,EAAM,KAAO,IAAI,OAAOw7B,GAAyCx7B,EAAM,IAAI,EAAG,GAAG,EAAI,KACxG,KAAK,WAAU,CAClB,CACD,YAAa,CACT,IAAI0tD,EAAY,GAChB,UAAWxkD,KAAW,KAAK,YAAY,YAAW,EAAG,WAAY,CAC7D,KAAM,CAAE,SAAAwH,CAAU,EAAGxH,EACfgqC,EAAS,CAACxiC,GAAU,MAAM,CAC5B,6BAA8B,KAAK,yBAAyB,IAAK,EACjE,MAAO,KAAK,WAC5B,CAAa,EACIwiC,IACDwa,EAAY,IAEhBxkD,EAAQ,OAASgqC,CACpB,CACD,KAAK,iBAAiB,UAAU,OAAO,SAAU,CAACwa,CAAS,CAC9D,CACD,QAAQ1tD,EAAO,CACX,KAAK,KAAOA,EAAM,KAClB,KAAK,OAAM,CACd,CACD,MAAM,UAAW,CAKb,GAJI,KAAK,oBACL,KAAK,kBAAkB,SAAU,EAAC,aAAY,EAAG,mBAAmBqtD,EAAiB,EACrF,OAAO,KAAK,mBAEZ,CAAC,KAAK,KAAM,CACZ,KAAK,YAAY,iBACjB,MACH,CACD,KAAK,kBAAoB,KAAK,KAC9B,MAAMx/B,EAAS,MAAM,KAAK,KAAK,gBAAgBw/B,EAAiB,EAChE,GAAI,CAACx/B,EACD,OAEJ,MAAMnpB,EAAc,KAAK,YAAY,YAAW,EAChD,GAAI,CAAE,WAAAhC,CAAU,EAAK,MAAMyoD,GAA8B,uBAAuBt9B,EAAQ,IACxFnpB,EAAY,eAAc,EACtBhC,IAAe,OACfA,EAAa,CAAA,GAEjBirD,GAA2D,uBAAuBjpD,EAAahC,EAAY,KAAM,GAAsB,GAAkCmrB,CAAM,EAC/K,KAAK,WAAU,CAClB,CACD,aAAa7tB,EAAO,CAChB,GAAI,CAAC,KAAK,KACN,OAEJ,MAAMmE,EAAOnE,EAAM,KACbiB,EAAQkD,aAAgBqD,EAAuBrD,EAAOA,EAAK,KAC7D,KAAK,OAASlD,GAGlB,KAAK,OAAM,CACd,CACD,UAAW,CACP,MAAM,SAAQ,EACd,KAAK,iBAAiB,CAAC2sD,EAAsB,CAAC,CACjD,CACL,yHC3JM/qD,GAAS,IAAI,cACnBA,GAAO,YACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAYC,ECXD,MAAMuB,GAAY,CAId,sBAAuB,0BAC3B,EACMC,GAAOC,EAA4B,0CAA2CF,EAAS,EACvFG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC7D,MAAMwpD,WAA6BxkD,EAAmC,CACzE,oBACA,0BACA,UACA,aAAc,CACV,MAAM,EAAI,EACV,KAAK,oBAAsB,KAAK,eAAe,YAAY,MAAO,mBAAmB,EACrF,KAAK,oBAAoB,YAAc9E,GAAWH,GAAU,qBAAqB,EACjF,KAAK,0BAA4B,KAAK,eAAe,YAAY,MAAO,aAAa,EACrF,KAAK,UAAY,IAAIk1B,GAA+Bw0B,EAAiB,CACxE,CACD,UAAW,CACP,MAAM,SAAQ,EACd5nD,EAAmB,SAAQ,EAAG,wBAAwBsB,EAAsB,KAAK,OAAQ,IAAI,EAC7F,KAAK,iBAAiB,CAACumD,EAA0B,CAAC,EAClD,KAAK,OAAM,CACd,CACD,UAAW,CACP7nD,EAAmB,SAAQ,EAAG,2BAA2BsB,EAAsB,KAAK,OAAQ,IAAI,CACnG,CACD,MAAM,UAAW,CACb,MAAMvG,EAAOiF,EAAmB,SAAU,EAAC,OAAOsB,CAAoB,EACtE,GAAI,CAACvG,EAAM,CACP,KAAK,oBAAoB,UAAU,OAAO,QAAQ,EAClD,KAAK,0BAA0B,UAAU,IAAI,QAAQ,EACrD,MACH,CACD,MAAM+sD,EAAqB,MAAM/sD,EAAK,qBACtC,GAAI+sD,EAAoB,CACpB,KAAK,oBAAoB,UAAU,IAAI,QAAQ,EAC/C,KAAK,0BAA0B,UAAU,OAAO,QAAQ,EACxD,MAAMC,EAAoBC,GAA8DjtD,EAAK,SAAQ,EAAG,OAAQ,EAAE,KAAK,UAAW,CAAE,WAAY+sD,EAAoB,SAAU,MAAW,CAAA,EACzL,KAAK,0BAA0B,iBAC/B,KAAK,0BAA0B,YAAYC,EAAkB,OAAO,CACvE,MAEG,KAAK,oBAAoB,UAAU,OAAO,QAAQ,EAClD,KAAK,0BAA0B,UAAU,IAAI,QAAQ,CAE5D,CACL,CACO,MAAMH,GAAoB,8ICpD3BjrD,GAAS,IAAI,cACnBA,GAAO,YACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CA4CC,ECxCD,MAAMuB,GAAY,CAKd,YAAa,gBAKb,cAAe,sBAKf,YAAa,oBAKb,eAAgB,iBACpB,EACMC,GAAOC,EAA4B,uCAAwCF,EAAS,EACpFG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EAC7D,MAAM8pD,WAA0B57C,EAAiB,CACpD,MACA,iBACA,OACA,cACA,mBACA,oBACA,eACA,aAAc,CACV,MAAM,EAAI,EACV,KAAK,eAAe,UAAY,8BAChC,KAAK,eAAe,aAAa,QAAS,GAAGE,GAAmB,kBAAkB,CAAC,EAAE,EACrF,MAAMvP,EAAY,KAAK,eAAe,YAAY,MAAO,iBAAiB,EAC1E,KAAK,MAAQA,EAAU,YAAY,MAAO,2BAA2B,EACrE,KAAK,yBAAyB,KAAK,KAAK,EACxC,KAAK,iBAAmB,KAAK,eAAe,YAAY,MAAO,aAAa,EAC5E,KAAK,iBAAiB,UAAU,IAAI,kCAAkC,EACtE,KAAK,OAAS,IAAIkrD,GAAgB,KAAK,YAAY,KAAK,IAAI,CAAC,EAC7D,KAAK,OAAO,yBAAyB,CAAC,EACtC,KAAK,OAAO,gBACZ,MAAMrmC,EAAe,KAAK,OAAO,OAAO,KAAK,KAAK,EAClD,KAAK,OAAO,eAAexjB,GAAWH,GAAU,WAAW,CAAC,EAC5D,KAAK,OAAO,iBAAiB,cAAuD,KAAK,cAAe,IAAI,EAC5G2jB,EAAa,iBAAiB,UAAW,KAAK,UAAU,KAAK,IAAI,EAAG,EAAK,EACzE3kB,GAAgC,SAAU,EAAC,iBAAiBojD,GAAuBz+C,EAAoB,WAAY,KAAK,aAAc,KAAM,CAAE,OAAQ,EAAM,CAAA,EAC5J,KAAK,cAAgB,IAAI,IACzB,KAAK,mBAAqB,IAAI,IAC9B,KAAK,oBAAsB,IAAIoK,GAA2B,CAAC,EAC3D,KAAK,eAAiB,KACtBjM,EAAmB,SAAQ,EAAG,wBAAwBsB,EAAsB,KAAK,sBAAuB,IAAI,CAC/G,CACD,qBAAqBnB,EAAM,CACvB,OAAOA,EAAK,MAAM,OAAO,EAAE,IAAI4mB,GAAaA,EAAU,KAAI,CAAE,EAAE,OAAOA,GAAaA,EAAU,MAAM,CACrG,CACD,UAAUjtB,EAAO,CAIb,GAHMA,EAAM,MAAQ,SAAY,CAACquD,GAAoCruD,CAAK,GAGtEA,EAAM,MAAQ,UACdA,EAAM,QAAO,EACT,KAAK,OAAO,sBACZ,OAGR,MAAMg5C,EAAch5C,EAAM,OAC1B,IAAIqG,EAAO2yC,EAAY,YACnBqV,GAAoCruD,CAAK,IACpC8pB,GAAsCzjB,CAAI,GAC3CrG,EAAM,QAAQ,EAAI,EAEtBqG,EAAO,IAEX,KAAK,OAAO,oBACZ2yC,EAAY,YAAc,GAC1B,MAAM/3C,EAAOiF,EAAmB,SAAU,EAAC,OAAOsB,CAAoB,EACtE,GAAI,CAACvG,EACD,OAEJ,MAAMqtD,EAAa,KAAK,qBAAqBjoD,CAAI,EACjD,GAAI,CAACioD,EAAW,OAAQ,CACpB,KAAK,mBAAmBrtD,CAAI,EAC5B,MACH,CACD,UAAWgsB,KAAaqhC,EACpB,KAAK,YAAYrtD,EAAMgsB,EAAW,EAAI,EAG1C,MAAMshC,EAAkBD,EAAW,KAAK,GAAG,EACrCE,EAAqBF,EAAW,OAAS,EAAI/pD,GAAWH,GAAU,cAAe,CAAE,IAAKmqD,EAAiB,EAC3GhqD,GAAWH,GAAU,YAAa,CAAE,IAAKmqD,CAAiB,CAAA,EAC9DzmC,GAAmB0mC,CAAkB,EACrC,KAAK,mBAAmBvtD,CAAI,EAC5B,KAAK,OAAM,CACd,CACD,eAAgB,CACZ,MAAMA,EAAOiF,EAAmB,SAAU,EAAC,OAAOsB,CAAoB,EACjEvG,GAGL,KAAK,mBAAmBA,CAAI,CAC/B,CACD,aAAajB,EAAO,CAChB,MAAMiB,EAAOjB,EAAM,KACf,KAAK,cAAc,IAAIiB,CAAI,IAG/BwtD,GAAiB,OAAOxtD,CAAI,EAC5B,KAAK,OAAM,EACd,CACD,sBAAsBjB,EAAO,CACrB,KAAK,gBAAkB,KAAK,OAAO,KAAI,IACvC,KAAK,MAAM,YAAc,GACzB,KAAK,mBAAmB,KAAK,cAAc,GAE/C,KAAK,eAAiBA,EAAM,KAC5B,KAAK,OAAM,CACd,CACD,UAAW,CACP,MAAM,SAAQ,EACd,KAAK,OAAM,EACX,KAAK,iBAAiB,CAAC0uD,EAAuB,CAAC,CAClD,CACD,QAAS,CACL,GAAI,CAAC,KAAK,YACN,OAEJ,IAAIztD,EAAOiF,EAAmB,SAAU,EAAC,OAAOsB,CAAoB,EAOpE,GANIvG,IACAA,EAAOA,EAAK,0BAEhB,KAAK,iBAAiB,iBAEtB,KAAK,MAAM,SAAW,CAACA,EACnB,CAACA,EACD,OAEJ,MAAM6rB,EAAU,KAAK,YAAY7rB,CAAI,EAC/B0tD,EAAO,CAAC,GAAG7hC,EAAQ,KAAM,CAAA,EAC/B6hC,EAAK,KAAKC,EAAkD,EAC5D,UAAW3hC,KAAa0hC,EAAM,CAC1B,MAAM3+B,EAAQ6+B,GAAyB,OAAO5hC,EAAWH,EAAQ,IAAIG,CAAS,EAAG,OAAW,gBAAiB,EAAI,EACjH+C,EAAM,UAAU,IAAI,WAAW,EAC/BA,EAAM,gBAAgB,iBAAiB,QAAS,KAAK,QAAQ,KAAK,KAAM/C,CAAS,EAAG,EAAK,EACzF,KAAK,iBAAiB,YAAY+C,CAAK,CAC1C,CACJ,CACD,QAAQ/C,EAAWjtB,EAAO,CACtB,MAAMiB,EAAOiF,EAAmB,SAAU,EAAC,OAAOsB,CAAoB,EACtE,GAAI,CAACvG,EACD,OAEJ,MAAM22C,EAAU53C,EAAM,OAAO,QAC7B,KAAK,YAAYiB,EAAMgsB,EAAW2qB,CAAO,EACzC,KAAK,mBAAmB32C,CAAI,CAC/B,CACD,YAAYA,EAAM,CACd,IAAIY,EAAS4sD,GAAiB,IAAIxtD,CAAI,EACtC,GAAI,CAACY,EAAQ,CAET,MAAMirB,GADiB7rB,EAAK,aAAa,OAAO,GAAK,IACtB,MAAM,IAAI,EACzCY,EAAS,IAAI,IACb,QAASqP,EAAI,EAAGA,EAAI4b,EAAQ,OAAQ,EAAE5b,EAAG,CACrC,MAAM+b,EAAYH,EAAQ5b,CAAC,EAAE,KAAI,EAC5B+b,EAAU,QAGfprB,EAAO,IAAIorB,EAAW,EAAI,CAC7B,CACDwhC,GAAiB,IAAIxtD,EAAMY,CAAM,CACpC,CACD,OAAOA,CACV,CACD,YAAYZ,EAAMgsB,EAAW2qB,EAAS,CAClC,MAAM9qB,EAAU,KAAK,YAAY7rB,CAAI,EACrC6rB,EAAQ,IAAIG,EAAW2qB,CAAO,EAC9BtkC,GAAe,SAAQ,EAAG,KAAI,EAAG,WAAW,CAAC,GAAGwZ,EAAQ,OAAM,CAAE,EAAE,SAAS,EAAI,CAAC,CACnF,CACD,mBAAmB7rB,EAAM,CACrB,MAAM6rB,EAAU,KAAK,YAAY7rB,CAAI,EAC/B6tD,EAAgB,IAAI,IAC1B,UAAW7hC,KAAaH,EAAQ,OACxBA,EAAQ,IAAIG,CAAS,GACrB6hC,EAAc,IAAI7hC,CAAS,EAGnC,MAAM8hC,EAAoB,KAAK,qBAAqB,KAAK,OAAO,0BAAyB,CAAE,EAC3F,UAAW9hC,KAAa8hC,EACpBD,EAAc,IAAI7hC,CAAS,EAE/B,MAAM+hC,EAAa,CAAC,GAAGF,EAAc,OAAQ,CAAA,EAAE,OAC/C,KAAK,mBAAmB,IAAI7tD,EAAM+tD,EAAW,KAAK,GAAG,CAAC,EACjD,KAAK,oBAAoB,SAAS,KAAK,oBAAoB,KAAK,IAAI,CAAC,CAC7E,CACD,MAAM,qBAAsB,CACxB,MAAM7R,EAAW,CAAA,EACjB,UAAWl8C,KAAQ,KAAK,mBAAmB,KAAI,EAAI,CAC/C,KAAK,cAAc,IAAIA,CAAI,EAC3B,MAAM+gC,EAAU/gC,EAAK,yBAAyB,QAAS,KAAK,mBAAmB,IAAIA,CAAI,CAAC,EACnF,KAAKguD,EAAoB,KAAK,KAAMhuD,CAAI,CAAC,EAC9Ck8C,EAAS,KAAKnb,CAAO,CACxB,CACD,KAAK,mBAAmB,QACxB,MAAM,QAAQ,IAAImb,CAAQ,EAC1B,SAAS8R,EAAoBhuD,EAAM,CAC/B,KAAK,cAAc,OAAOA,CAAI,CACjC,CACJ,CACL,CACA,MAAMwtD,GAAmB,IAAI,QAC7B,IAAIh7C,GACGy7C,GAAA,MAAM57C,EAAe,CACxB,OACA,KACA,aAAc,CACV,KAAK,OAAS,IAAIK,GAAyBpP,GAAWH,GAAU,cAAc,EAAG,OAAO,EACxF,KAAK,OAAO,QAAQ,MAAM,YAAY,mBAAoB,MAAM,EAChE,KAAK,OAAO,QAAQ,MAAM,YAAY,oBAAqB,MAAM,EACjE,KAAK,OAAO,QAAQ,aAAa,QAAS,GAAGwP,GAA4B,kBAAkB,EAAE,MAAM,CAAE,MAAO,EAAI,CAAE,CAAC,EAAE,EACrH,KAAK,OAAO,iBAAiB,QAAqD,KAAK,QAAS,IAAI,EACpG,KAAK,KAAO,IAAIu6C,EACnB,CACD,OAAO,SAAS56C,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAACE,IAA0BD,KAC3BC,GAAyB,IAAIH,IAE1BG,EACV,CACD,SAAU,CACNlQ,EAAc,SAAU,EAAC,gBAAiB,KAAK,KAAK,UAAW,EAAe,KAAZ,KAAK,KAAa,KAAK,MAAM,CAClG,CACD,MAAO,CACH,OAAO,KAAK,MACf,CACL,EACO,MAAM6qD,WAAwB5rB,EAAyB,CAC1D,YACA,gBACA,kBACA,YAAY2sB,EAAa,CACrB,QACA,KAAK,YAAcA,EACnB,KAAK,WAAW,KAAK,0BAA0B,KAAK,IAAI,EAAG,GAAG,EAC9D,KAAK,sCAAqC,EAC1C,KAAK,gBAAkB,GACvB,KAAK,kBAAoB,IAC5B,CACD,MAAM,cAAcrrD,EAAc,CAC9B,MAAMq5C,EAAW,CAAA,EACX1a,EAAc,IAAI,IACxB,KAAK,gBAAkB3+B,EAAa,UACpC,MAAM2D,EAAW3D,EAAa,SAAU,EAAC,SAAQ,EAC3CsrD,EAAiB3nD,EAAS,iBAChC,UAAW4nD,KAAcD,EAAgB,CACrC,GAAIC,EAAW,UAAY,KAAK,gBAC5B,SAEJ,MAAMC,EAAa7nD,EAAS,cAAc4nD,EAAW,EAAE,EAAE,KAAKviC,GAAW,CACrE,UAAWG,KAAaH,EACpB2V,EAAY,IAAIxV,CAAS,CAE7C,CAAa,EACDkwB,EAAS,KAAKmS,CAAU,CAC3B,CACD,MAAMC,EAAmBzrD,EAAa,cAAc,GAC9C0rD,EAAa1rD,EAAa,SAAU,EAAC,kBAAkByrD,CAAe,EAAE,KAAKziC,GAAW,CAC1F,UAAWG,KAAaH,EACpB2V,EAAY,IAAIxV,CAAS,CAEzC,CAAS,EACD,OAAAkwB,EAAS,KAAKqS,CAAU,EACxB,MAAM,QAAQ,IAAIrS,CAAQ,EACnB,CAAC,GAAG1a,CAAW,CACzB,CACD,MAAM,0BAA0Be,EAAYL,EAAQM,EAAO,EACnD,CAACN,GAAUM,KACX,KAAK,kBAAoB,MAE7B,MAAM3/B,EAAeoC,EAAmB,SAAU,EAAC,OAAOsB,CAAoB,EAC9E,GAAI,CAAC1D,GAAiB,CAACq/B,GAAU,CAACM,GAAS,CAACD,EAAW,KAAI,EACvD,MAAO,IAEP,CAAC,KAAK,mBAAqB,KAAK,kBAAoB1/B,EAAa,aACjE,KAAK,kBAAoB,KAAK,cAAcA,CAAY,GAE5D,IAAI2+B,EAAc,MAAM,KAAK,kBAC7B,MAAMgtB,EAAa,KAAK,YAAY3rD,CAAY,EAChD,OAAA2+B,EAAcA,EAAY,OAAO58B,GAAS,CAAC4pD,EAAW,IAAI5pD,CAAK,CAAC,EAC5Ds9B,EAAO,CAAC,IAAM,MACdV,EAAcA,EAAY,IAAI58B,GAAS,IAAMA,CAAK,GAE/C48B,EAAY,OAAO58B,GAASA,EAAM,WAAWs9B,CAAM,CAAC,EAAE,OAAO,IAAIW,IAC7D,CACH,KAAMA,EACN,MAAO,OACP,SAAU,OACV,SAAU,OACV,YAAa,OACb,iBAAkB,OAClB,eAAgB,OAChB,cAAe,OACf,YAAa,MAC7B,EACS,CACJ,CACL,+JC3TMjhC,GAAS,IAAI,cACnBA,GAAO,YACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAiDC,EC5CD,MAAMuB,GAAY,CAMd,kBAAmB,sBAKnB,mBAAoB,uBAKpB,mBAAoB,yBAIpB,qBAAsB,wEAItB,2BAA4B,8BAChC,EACMC,GAAOC,EAA4B,4CAA6CF,EAAS,EACzFG,GAAaC,EAA6B,KAAK,OAAWH,EAAI,EACpE,IAAIqrD,GACH,SAAUA,EAAsB,CAC7BA,EAAqB,QAAa,UAClCA,EAAqB,SAAc,WACnCA,EAAqB,MAAW,QAChCA,EAAqB,QAAa,UAClCA,EAAqB,WAAgB,aACrCA,EAAqB,aAAkB,eACvCA,EAAqB,SAAc,WACnCA,EAAqB,SAAc,WACnCA,EAAqB,UAAe,YACpCA,EAAqB,WAAgB,aACrCA,EAAqB,SAAc,WACnCA,EAAqB,aAAkB,eACvCA,EAAqB,QAAa,UAClCA,EAAqB,QAAa,UAClCA,EAAqB,cAAmB,gBACxCA,EAAqB,kBAAuB,oBAC5CA,EAAqB,SAAc,UACvC,GAAGA,IAAyBA,EAAuB,CAAE,EAAC,EAC/C,MAAMC,WAA+Bp9C,EAAiB,CACzD,OACA,YACA,SACA,wBACA,eACA,UACA,aAAc,CACV,MAAM,EAAI,EACV,KAAK,eAAe,UAAY,4BAChC,KAAK,eAAe,aAAa,QAAS,GAAGE,GAAmB,gBAAgB,CAAC,EAAE,EACnF,MAAMm9C,EAAS,CAAA,EACf,KAAK,OAASA,EACd,KAAK,YAAc,IAAI,QACvB,MAAMC,EAAuBpjC,GAAU,CACnC,MAAMqjC,EAAyB,SAAS,cAAc,KAAK,EAC3D,OAAAA,EAAuB,UAAU,IAAI,gBAAgB,EACrDp9C,EAA2Bo9C,EAAuB,YAAY,MAAM,EAAGrjC,CAAK,EACrEqjC,CACnB,EACcC,EAAiB/vD,GAAU,CAC7B,MAAMiB,EAAOiF,EAAmB,SAAU,EAAC,OAAOsB,CAAoB,EACtE,GAAI,CAACvG,GAAQ,EAAEjB,EAAM,kBAAkB,kBACnC,OAEJ,MAAMgwD,EAAQ,KAAK,YAAY,IAAIhwD,EAAM,MAAM,EAC1CgwD,GAGL/uD,EAAK,SAAQ,EAAG,SAAQ,EAAG,iBAAiBA,EAAM+uD,EAAOhwD,EAAM,OAAO,OAAO,CACzF,EACciwD,EAA8BD,GAAU,CAC1C,MAAME,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,GAAKF,EACT,MAAMhgC,EAAQ6+B,GAAyB,OAAO,IAAMmB,EAAO,OAAW,OAAW,OAAW,EAAI,EAC1F9qB,EAAQlV,EAAM,gBACpB,YAAK,YAAY,IAAIkV,EAAO8qB,CAAK,EACjC9qB,EAAM,iBAAiB,QAAS6qB,EAAe,EAAK,EACpD7qB,EAAM,aAAa,QAAS,GAAG9f,GAAsB,EAAC,MAAM,CAAE,OAAQ,EAAM,CAAA,EAAE,QAAQ4qC,CAAK,CAAC,EAAE,EAC9FJ,EAAO,KAAK1qB,CAAK,EACjBgrB,EAAI,YAAYlgC,CAAK,EACdkgC,CACnB,EACcC,EAAmC,IAAM,CAC3C,MAAMD,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,UAAU,IAAI,qBAAqB,EACvC,MAAMlgC,EAAQ6+B,GAAyB,OAAOtqD,GAAWH,GAAU,kBAAkB,EAAG,OAAW,OAAW,qBAAsB,EAAI,EACxIgsD,GAA2BpgC,EAAM,gBAAiB9O,EAAyB,WAAW,cAAc,oBAAoB,EAAG,CACvH,OAAQpG,GAAwB,yCAChC,QAASA,GAAwB,yCACjD,CAAa,EACDlW,GAAmB,QAAQorB,EAAM,YAAazrB,GAAWH,GAAU,oBAAoB,CAAC,EACxF,MAAMisD,EAAkB,IAAIzkC,GAC5B,OAAAykC,EAAgB,KAAO,CACnB,QAAS,OACT,SAAU,OACV,KAAM,QACN,aAAc,YAC9B,EACYA,EAAgB,iBAAiB,QAAS,IAAM9qC,EAAyD,aAAa,+CAA+C,CAAC,EACtK2qC,EAAI,YAAYlgC,CAAK,EACrBkgC,EAAI,YAAYG,CAAe,EACxBH,CACnB,EACQ,KAAK,eAAe,UAAY,4BAEhC,MAAMI,EAA0BH,IAChC,KAAK,eAAe,YAAYG,CAAuB,EAEvD,KAAK,eAAe,YAAYT,EAAoBtrD,GAAWH,GAAU,iBAAiB,CAAC,CAAC,EAC5F,MAAMmsD,EAAsB,SAAS,cAAc,KAAK,EACxDA,EAAoB,UAAU,IAAI,aAAa,EAC/CA,EAAoB,UAAU,IAAI,yBAAyB,EAC3DC,GAAgCD,CAAmB,EACnDA,EAAoB,YAAYN,EAA2B,QAAQ,CAAC,EACpEM,EAAoB,YAAYN,EAA2B,OAAO,CAAC,EACnEM,EAAoB,YAAYN,EAA2B,OAAO,CAAC,EACnEM,EAAoB,YAAYN,EAA2B,cAAc,CAAC,EAC1EM,EAAoB,YAAYN,EAA2B,eAAe,CAAC,EAC3EM,EAAoB,YAAYN,EAA2B,QAAQ,CAAC,EACpE,KAAK,eAAe,YAAYM,CAAmB,EACnD,MAAME,EAA2B,SAAS,cAAc,KAAK,EAC7DA,EAAyB,UAAU,IAAI,aAAa,EACpDA,EAAyB,UAAU,IAAI,yBAAyB,EAChEA,EAAyB,UAAU,IAAI,wBAAwB,EAC/DD,GAAgCC,CAAwB,EACxD,KAAK,wBAA0B,IAAI,IACnC,KAAK,wBAAwB,IAAIf,EAAqB,QAASO,EAA2BP,EAAqB,OAAO,CAAC,EACvH,KAAK,wBAAwB,IAAIA,EAAqB,SAAUO,EAA2BP,EAAqB,QAAQ,CAAC,EACzH,KAAK,wBAAwB,IAAIA,EAAqB,MAAOO,EAA2BP,EAAqB,KAAK,CAAC,EACnH,KAAK,wBAAwB,IAAIA,EAAqB,QAASO,EAA2BP,EAAqB,OAAO,CAAC,EACvH,KAAK,wBAAwB,IAAIA,EAAqB,WAAYO,EAA2BP,EAAqB,UAAU,CAAC,EAC7H,KAAK,wBAAwB,IAAIA,EAAqB,aAAcO,EAA2BP,EAAqB,YAAY,CAAC,EACjI,KAAK,wBAAwB,IAAIA,EAAqB,SAAUO,EAA2BP,EAAqB,QAAQ,CAAC,EACzH,KAAK,wBAAwB,IAAIA,EAAqB,SAAUO,EAA2BP,EAAqB,QAAQ,CAAC,EACzH,KAAK,wBAAwB,IAAIA,EAAqB,UAAWO,EAA2BP,EAAqB,SAAS,CAAC,EAC3H,KAAK,wBAAwB,IAAIA,EAAqB,WAAYO,EAA2BP,EAAqB,UAAU,CAAC,EAC7H,KAAK,wBAAwB,IAAIA,EAAqB,SAAUO,EAA2BP,EAAqB,QAAQ,CAAC,EACzH,KAAK,wBAAwB,IAAIA,EAAqB,aAAcO,EAA2BP,EAAqB,YAAY,CAAC,EACjI,KAAK,wBAAwB,IAAIA,EAAqB,QAASO,EAA2BP,EAAqB,OAAO,CAAC,EACvH,KAAK,wBAAwB,IAAIA,EAAqB,QAASO,EAA2BP,EAAqB,OAAO,CAAC,EACvH,KAAK,wBAAwB,IAAIA,EAAqB,cAAeO,EAA2BP,EAAqB,aAAa,CAAC,EACnI,KAAK,wBAAwB,IAAIA,EAAqB,kBAAmBO,EAA2BP,EAAqB,iBAAiB,CAAC,EAC3I,KAAK,wBAAwB,IAAIA,EAAqB,SAAUO,EAA2BP,EAAqB,QAAQ,CAAC,EACzH,KAAK,wBAAwB,QAAQQ,GAAO,CACxCO,EAAyB,YAAYP,CAAG,CACpD,CAAS,EACD,KAAK,eAAiB,SAAS,cAAc,SAAS,EACtD,KAAK,eAAe,UAAU,IAAI,kBAAkB,EACpD,MAAMJ,EAAyB,SAAS,cAAc,SAAS,EAC/DA,EAAuB,UAAU,IAAI,+BAA+B,EACpEA,EAAuB,UAAU,IAAI,gBAAgB,EACrDp9C,EAA2Bo9C,EAAuB,YAAY,MAAM,EAAGvrD,GAAWH,GAAU,0BAA0B,CAAC,EACvH,KAAK,eAAe,YAAY0rD,CAAsB,EACtD,KAAK,eAAe,YAAYW,CAAwB,EACxD,KAAK,eAAe,YAAY,KAAK,cAAc,EACnD,KAAK,UAAY,IAAIt+C,GAA2B,GAAG,EACnDjM,EAAmB,SAAQ,EAAG,wBAAwBsB,EAAsB,KAAK,OAAQ,IAAI,CAChG,CACD,YAAYC,EAAU,CACd,KAAK,WAAaA,IAGlB,KAAK,UACL,KAAK,SAAS,oBAAoBK,GAAoB,kBAAmB,KAAK,OAAQ,IAAI,EAE9F,KAAK,SAAWL,EACZ,KAAK,UACL,KAAK,SAAS,iBAAiBK,GAAoB,kBAAmB,KAAK,OAAQ,IAAI,EAE9F,CACD,UAAW,CACP,MAAM,SAAQ,EACd,KAAK,iBAAiB,CAAC4oD,EAA4B,CAAC,EACpD,KAAK,OAAM,CACd,CACD,QAAS,CACL,IAAIzvD,EAAOiF,EAAmB,SAAU,EAAC,OAAOsB,CAAoB,EAKpE,GAJIvG,IACAA,EAAOA,EAAK,0BAEhB,KAAK,YAAYA,EAAOA,EAAK,SAAQ,EAAG,SAAQ,EAAK,IAAI,EACrDA,EAAM,CACN,MAAM0vD,EAAkB1vD,EAAK,SAAQ,EAAG,WAAW,YAAYA,CAAI,EACnE,UAAWikC,KAAS,KAAK,OAAQ,CAC7BA,EAAM,SAAW,EAAQjkC,EAAK,WAAY,EAC1C,MAAM+uD,EAAQ,KAAK,YAAY,IAAI9qB,CAAK,EACxCA,EAAM,QAAUyrB,GAAmBX,IAAU,OAAYW,EAAgB,QAAQX,CAAK,GAAK,EAAI,EAClG,CACJ,KAEG,WAAW9qB,KAAS,KAAK,OACrBA,EAAM,SAAW,GACjBA,EAAM,QAAU,GAGnB,KAAK,UAAU,SAAS,KAAK,iCAAiC,KAAK,KAAMjkC,CAAI,CAAC,EACnFqS,GAAe,SAAQ,EAAG,KAAI,EAAG,WAAW,KAAK,OAAO,KAAK4xB,GAASA,EAAM,OAAO,CAAC,CACvF,CACD,MAAM,iCAAiCjkC,EAAO,KAAM,CAChD,GAAI,CAACA,GAAQA,EAAK,SAAQ,IAAO,KAAK,aAAc,CAChD,KAAK,eAAe,OAAS,GAC7B,KAAK,wCAAuC,EAC5C,MACH,CACD,IAAI2vD,EAAkB,GACtB,MAAMC,EAAuB,CAACrZ,EAAasZ,IAAS,CAChD,MAAMC,EAAW,KAAK,wBAAwB,IAAIvZ,CAAW,EACzDuZ,IACAA,EAAS,OAASD,GAEtBF,EAAkBA,GAAmB,CAACE,CAClD,EACcE,EAAmB,CAAC/vD,EAAMgwD,IACrBA,EAAM,SAAShwD,EAAK,SAAU,GAAE,YAAW,CAAE,EAElDiwD,EAAkCjwD,GAC7B+vD,EAAiB/vD,EAAM,CAAC,OAAO,CAAC,IAClCA,EAAK,aAAa,MAAM,IAAM,YAAcA,EAAK,aAAa,MAAM,IAAM,SAW7EkwD,EAAmB,MAPa,MAAOlwD,GAAS,CAClD,SAASmwD,GAAyB,CAC9B,MAAQ,mBAAoB,KAAK,aAAe,KAAK,YAAY,iBAAmB,EACvF,CACD,MAAMj5B,EAAW,MAAMl3B,EAAK,aAAamwD,CAAsB,EAC/D,OAAOj5B,EAAWA,EAAS,MAAQ,EAC/C,GACqEl3B,CAAI,EAC7D+vD,EAAiB/vD,EAAM,CAAC,SAAU,QAAS,SAAU,WAAY,WAAY,SAAU,UAAU,CAAC,GAClGkwD,GACAN,EAAqBnB,EAAqB,QAAS,EAAK,EACxDmB,EAAqBnB,EAAqB,SAAU,EAAK,IAGzDmB,EAAqBnB,EAAqB,QAAS,EAAI,EACvDmB,EAAqBnB,EAAqB,SAAU,EAAI,GAExDsB,EAAiB/vD,EAAM,CAAC,SAAU,WAAY,QAAS,SAAU,SAAU,SAAU,WAAY,KAAK,CAAC,GACvGkwD,GACAN,EAAqBnB,EAAqB,MAAO,EAAK,EACtDmB,EAAqBnB,EAAqB,QAAS,EAAK,IAGxDmB,EAAqBnB,EAAqB,MAAO,EAAI,EACrDmB,EAAqBnB,EAAqB,QAAS,EAAI,GAEvDsB,EAAiB/vD,EAAM,CAAC,QAAS,SAAU,UAAU,CAAC,GACtD4vD,EAAqBnB,EAAqB,WAAY,EAAK,EAC3DmB,EAAqBnB,EAAqB,aAAc,EAAK,EAC7DmB,EAAqBnB,EAAqB,SAAU,EAAK,EACzDmB,EAAqBnB,EAAqB,SAAU,EAAK,IAGzDmB,EAAqBnB,EAAqB,WAAY,EAAI,EAC1DmB,EAAqBnB,EAAqB,aAAc,EAAI,EAC5DmB,EAAqBnB,EAAqB,SAAU,EAAI,EACxDmB,EAAqBnB,EAAqB,SAAU,EAAI,GAExDsB,EAAiB/vD,EAAM,CAAC,QAAS,UAAU,CAAC,EAC5C4vD,EAAqBnB,EAAqB,WAAY,EAAK,EAG3DmB,EAAqBnB,EAAqB,WAAY,EAAI,EAE1DsB,EAAiB/vD,EAAM,CACvB,SACA,WACA,WACA,QACA,SACA,QACA,WACA,SACA,SACA,WACA,QACZ,CAAS,EACG4vD,EAAqBnB,EAAqB,UAAW,EAAK,EAG1DmB,EAAqBnB,EAAqB,UAAW,EAAI,EAEzDsB,EAAiB/vD,EAAM,CAAC,OAAO,CAAC,IAC/BA,EAAK,aAAa,KAAK,IAAM,QAAaA,EAAK,aAAa,KAAK,IAAM,SACxE4vD,EAAqBnB,EAAqB,SAAU,EAAK,EACzDmB,EAAqBnB,EAAqB,aAAc,EAAK,IAG7DmB,EAAqBnB,EAAqB,SAAU,EAAI,EACxDmB,EAAqBnB,EAAqB,aAAc,EAAI,GAE5DsB,EAAiB/vD,EAAM,CAAC,IAAK,MAAM,CAAC,GAAKA,EAAK,aAAa,MAAM,IAAM,OACvE4vD,EAAqBnB,EAAqB,QAAS,EAAK,EAGxDmB,EAAqBnB,EAAqB,QAAS,EAAI,EAEvDwB,EAA+BjwD,CAAI,GAAK+vD,EAAiB/vD,EAAM,CAAC,QAAQ,CAAC,EACzE4vD,EAAqBnB,EAAqB,QAAS,EAAK,EAGxDmB,EAAqBnB,EAAqB,QAAS,EAAI,EAEvDwB,EAA+BjwD,CAAI,GAAK+vD,EAAiB/vD,EAAM,CAAC,UAAU,CAAC,EAC3E4vD,EAAqBnB,EAAqB,cAAe,EAAK,EAG9DmB,EAAqBnB,EAAqB,cAAe,EAAI,EAE7DsB,EAAiB/vD,EAAM,CAAC,QAAS,UAAU,CAAC,EAC5C4vD,EAAqBnB,EAAqB,kBAAmB,EAAK,EAGlEmB,EAAqBnB,EAAqB,kBAAmB,EAAI,EAEjEsB,EAAiB/vD,EAAM,CAAC,OAAO,CAAC,EAChC4vD,EAAqBnB,EAAqB,SAAU,EAAK,EAGzDmB,EAAqBnB,EAAqB,SAAU,EAAI,EAE5D,KAAK,eAAe,OAAS,CAAAkB,EAC7B,KAAK,wCAAuC,CAC/C,CACD,yCAA0C,CACzC,CACL,CACA,IAAIn9C,GACG,MAAMH,EAAe,CACxB,OACA,KACA,aAAc,CACV,KAAK,OAAS,IAAIK,GAAyBpP,GAAWH,GAAU,kBAAkB,EAAG,OAAO,EAC5F,KAAK,OAAO,iBAAiB,QAAqD,KAAK,QAAS,IAAI,EACpG,KAAK,OAAO,QAAQ,UAAU,IAAI,eAAe,EACjD,KAAK,OAAO,QAAQ,aAAa,QAAS,GAAGwP,GAA4B,gBAAgB,EAAE,MAAM,CAAE,MAAO,EAAI,CAAE,CAAC,EAAE,EACnH,KAAK,OAAO,QAAQ,MAAM,YAAY,mBAAoB,MAAM,EAChE,KAAK,OAAO,QAAQ,MAAM,YAAY,oBAAqB,MAAM,EACjE,KAAK,KAAO,IAAI+7C,EACnB,CACD,OAAO,SAASp8C,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAACE,IAA0BD,KAC3BC,GAAyB,IAAIH,IAE1BG,EACV,CACD,SAAU,CACNlQ,EAAc,SAAU,EAAC,gBAAiB,KAAK,KAAK,UAAW,EAAe,KAAZ,KAAK,KAAa,KAAK,MAAM,CAClG,CACD,MAAO,CACH,OAAO,KAAK,MACf,CACL"}