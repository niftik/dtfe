{"version":3,"file":"emulation-CRgKT_2f.js","sources":["../../panels/emulation/components/DeviceSizeInputElement.js","../../panels/emulation/deviceModeToolbar.css.legacy.js","../../panels/emulation/DeviceModeToolbar.js","../../panels/emulation/deviceModeView.css.legacy.js","../../panels/emulation/mediaQueryInspector.css.legacy.js","../../panels/emulation/MediaQueryInspector.js","../../panels/emulation/DeviceModeView.js","../../panels/emulation/DeviceModeWrapper.js","../../panels/emulation/inspectedPagePlaceholder.css.legacy.js","../../panels/emulation/InspectedPagePlaceholder.js","../../panels/emulation/AdvancedApp.js"],"sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as EmulationModel from '../../../models/emulation/emulation.js';\nimport * as UILegacy from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nconst { html } = LitHtml;\nclass SizeChangedEvent extends Event {\n    size;\n    static eventName = 'sizechanged';\n    constructor(size) {\n        super(SizeChangedEvent.eventName);\n        this.size = size;\n    }\n}\nfunction getInputValue(event) {\n    return Number(event.target.value);\n}\nexport class SizeInputElement extends HTMLElement {\n    #root = this.attachShadow({ mode: 'open' });\n    #disabled = false;\n    #size = '0';\n    #placeholder = '';\n    #title;\n    #jslogContext;\n    constructor(title, { jslogContext }) {\n        super();\n        this.#title = title;\n        this.#jslogContext = jslogContext;\n    }\n    connectedCallback() {\n        this.render();\n    }\n    set disabled(disabled) {\n        this.#disabled = disabled;\n        this.render();\n    }\n    set size(size) {\n        this.#size = size;\n        this.render();\n    }\n    set placeholder(placeholder) {\n        this.#placeholder = placeholder;\n        this.render();\n    }\n    render() {\n        LitHtml.render(\n        // Since the emulation code runs in a different frame, we can't\n        // use constructed stylesheets (they are disallowed cross-frame).\n        // For now, use an inline style tag and later we can refactor this\n        // to use proper constructed stylesheets, when the code runs\n        // in the correct frame context.\n        // eslint-disable-next-line rulesdir/ban_style_tags_in_lit_html\n        html `\n      <style>\n        input {\n          /*\n           * 4 characters for the maximum size of the value,\n           * 2 characters for the width of the step-buttons,\n           * 2 pixels padding between the characters and the\n           * step-buttons.\n           */\n          width: calc(4ch + 2ch + 2px);\n          max-height: 18px;\n          border: var(--sys-color-neutral-outline);\n          border-radius: 4px;\n          margin: 0 2px;\n          text-align: center;\n          font-size: inherit;\n          font-family: inherit;\n        }\n\n        input:disabled {\n          user-select: none;\n        }\n\n        input:focus::-webkit-input-placeholder {\n          color: transparent;\n        }\n      </style>\n      <input type=\"number\"\n             max=${EmulationModel.DeviceModeModel.MaxDeviceSize}\n             min=${EmulationModel.DeviceModeModel.MinDeviceSize}\n             jslog=${VisualLogging.textField().track({ change: true }).context(this.#jslogContext)}\n             maxlength=\"4\"\n             title=${this.#title}\n             placeholder=${this.#placeholder}\n             ?disabled=${this.#disabled}\n             .value=${this.#size}\n             @change=${this.#fireSizeChange}\n             @keydown=${this.#handleModifierKeys} />\n    `, this.#root, { host: this });\n    }\n    #fireSizeChange(event) {\n        this.dispatchEvent(new SizeChangedEvent(getInputValue(event)));\n    }\n    #handleModifierKeys(event) {\n        let modifiedValue = UILegacy.UIUtils.modifiedFloatNumber(getInputValue(event), event);\n        if (modifiedValue === null) {\n            return;\n        }\n        modifiedValue = Math.min(modifiedValue, EmulationModel.DeviceModeModel.MaxDeviceSize);\n        modifiedValue = Math.max(modifiedValue, EmulationModel.DeviceModeModel.MinDeviceSize);\n        event.preventDefault();\n        event.target.value = String(modifiedValue);\n        this.dispatchEvent(new SizeChangedEvent(modifiedValue));\n    }\n}\ncustomElements.define('device-mode-emulation-size-input', SizeInputElement);\n//# sourceMappingURL=DeviceSizeInputElement.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default {\n  cssContent: `/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.device-mode-x {\n  margin: 0 1px;\n  font-size: 16px;\n}\n\n.device-mode-empty-toolbar-element {\n  width: 0;\n}\n\n/*# sourceURL=deviceModeToolbar.css */\n`\n};\n","// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as EmulationModel from '../../models/emulation/emulation.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\nimport * as EmulationComponents from './components/components.js';\nimport deviceModeToolbarStyles from './deviceModeToolbar.css.legacy.js';\nconst UIStrings = {\n    /**\n     * @description Title of the device dimensions selection iteam in the Device Mode Toolbar.\n     * webpage in pixels.\n     */\n    dimensions: 'Dimensions',\n    /**\n     * @description Title of the width input textbox in the Device Mode Toolbar, for the width of the\n     * webpage in pixels.\n     */\n    width: 'Width',\n    /**\n     * @description Title of the height input textbox in the Device Mode Toolbar, for the height of the\n     * webpage in pixels. 'leave empty for full' is an instruction to the user - the webpage will be\n     * full-height if this textbox is left empty.\n     */\n    heightLeaveEmptyForFull: 'Height (leave empty for full)',\n    /**\n     * @description Tooltip text for a drop-down menu where the user can select the zoom percentage of\n     * the webpage preview.\n     */\n    zoom: 'Zoom',\n    /**\n     * @description Tooltip tip for a drop-down menu where the user can select the device pixel ratio\n     * (the ratio between the physical pixels on a screen and CSS logical pixels) of the webpage\n     * preview.\n     */\n    devicePixelRatio: 'Device pixel ratio',\n    /**\n     * @description Tooltip tip for a drop-down menu where the user can select the device type e.g.\n     * Mobile, Desktop.\n     */\n    deviceType: 'Device type',\n    /**\n     * @description Tooltip text for a button to disable Experimental Web Platform Features when they are enabled.\n     */\n    experimentalWebPlatformFeature: '\"`Experimental Web Platform Feature`\" flag is enabled. Click to disable it.',\n    /**\n     * @description Tooltip text for a button to enable Experimental Web Platform Features when they are disabled.\n     */\n    experimentalWebPlatformFeatureFlag: '\"`Experimental Web Platform Feature`\" flag is disabled. Click to enable it.',\n    /**\n     * @description Tooltip text for a 'three dots' style menu button which shows an expanded set of options.\n     */\n    moreOptions: 'More options',\n    /**\n     * @description A context menu item in the Device Mode Toolbar. This is a command to resize the\n     * webpage preview to fit the current window. The placeholder is the percentage of full-size that\n     * will be displayed after fitting.\n     * @example {30.0} PH1\n     */\n    fitToWindowF: 'Fit to window ({PH1}%)',\n    /**\n     * @description A checkbox setting that appears in the context menu for the zoom level, in the\n     * Device Mode Toolbar.\n     */\n    autoadjustZoom: 'Auto-adjust zoom',\n    /**\n     * @description A menu item in the drop-down box that allows the user to select the device pixel\n     * ratio. Labels the default value which varies between device types, represented by the\n     * placeholder, which is a number. In the Device Mode Toolbar.\n     * @example {4.3} PH1\n     */\n    defaultF: 'Default: {PH1}',\n    /**\n     * @description Command to hide the frame (like a picture frame) around the mobile device screen.\n     */\n    hideDeviceFrame: 'Hide device frame',\n    /**\n     * @description Command to show the frame (like a picture frame) around the mobile device screen.\n     */\n    showDeviceFrame: 'Show device frame',\n    /**\n     * @description Command to hide a display in the Device Mode Toolbar that shows the different media\n     * queries for the device, above the device screen.\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n     */\n    hideMediaQueries: 'Hide media queries',\n    /**\n     * @description Command to show a display in the Device Mode Toolbar that shows the different media\n     * queries for the device, above the device screen.\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries\n     */\n    showMediaQueries: 'Show media queries',\n    /**\n     * @description Command in the Device Mode Toolbar to hide a virtual ruler (for measuring),\n     * displayed above and next to the device screen.\n     */\n    hideRulers: 'Hide rulers',\n    /**\n     * @description Command in the Device Mode Toolbar to show a virtual ruler (for measuring),\n     * displayed above and next to the device screen.\n     */\n    showRulers: 'Show rulers',\n    /**\n     * @description Command in the Device Mode Toolbar to remove the drop-down menu from the toolbar\n     * that lets the user override the device pixel ratio of the emulated device.\n     */\n    removeDevicePixelRatio: 'Remove device pixel ratio',\n    /**\n     * @description Command in the Device Mode Toolbar to add the drop-down menu to the toolbar\n     * that lets the user override the device pixel ratio of the emulated device.\n     */\n    addDevicePixelRatio: 'Add device pixel ratio',\n    /**\n     * @description Command in the Device Mode Toolbar to add the drop-down menu to the toolbar\n     * that lets the user set the device type (e.g. Desktop or Mobile).\n     */\n    removeDeviceType: 'Remove device type',\n    /**\n     * @description Command in the Device Mode Toolbar to add the drop-down menu to the toolbar\n     * that lets the user add the device type (e.g. Desktop or Mobile).\n     */\n    addDeviceType: 'Add device type',\n    /**\n     * @description A context menu item in the Device Mode Toolbar that resets all settings back to\n     * their default values.\n     */\n    resetToDefaults: 'Reset to defaults',\n    /**\n     * @description A menu command in the Device Mode Toolbar that closes DevTools.\n     */\n    closeDevtools: 'Close DevTools',\n    /**\n     * @description Title of the device selected in the Device Mode Toolbar. The 'response' device is\n     * not a specific phone/tablet model but a virtual device that can change its height and width\n     * dynamically by clicking and dragging the sides. 'Response' refers to response design:\n     * https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design\n     */\n    responsive: 'Responsive',\n    /**\n     * @description A context menu item in the Device Mode Toolbar that takes the user to a new screen\n     * where they can add/edit/remove custom devices.\n     */\n    edit: 'Edit…',\n    /**\n     * @description Text describing the current orientation of the phone/device (vs. landscape).\n     */\n    portrait: 'Portrait',\n    /**\n     * @description Text describing the current orientation of the phone/device (vs. portrait).\n     */\n    landscape: 'Landscape',\n    /**\n     * @description Title of button in the Device Mode Toolbar which rotates the device 90 degrees.\n     */\n    rotate: 'Rotate',\n    /**\n     * @description Fallback/default text used for the name of a custom device when no name has been\n     * provided by the user.\n     */\n    none: 'None',\n    /**\n     * @description Tooltip of the rotate/screen orientation button.\n     */\n    screenOrientationOptions: 'Screen orientation options',\n    /**\n     * @description Tooltip for a button which turns on/off dual-screen mode, which emulates devices\n     * like tablets which have two screens.\n     */\n    toggleDualscreenMode: 'Toggle dual-screen mode',\n    /**\n     * @description Tooltip tip for a drop-down menu where the user can select the device\n     * posture e.g. Continuous, Folded.\n     */\n    devicePosture: 'Device posture',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/emulation/DeviceModeToolbar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n/**\n * Even though the emulation panel uses all UI elements, the tooltips are not supported.\n * That's because the emulation elements are rendered around the page context, rather\n * than in the DevTools panel itself. Therefore, we need to fall back to using the\n * built-in tooltip by setting the title attribute on the button's element.\n */\nfunction setTitleForButton(button, title) {\n    button.setTitle(title);\n    button.element.title = title;\n}\nexport class DeviceModeToolbar {\n    model;\n    showMediaInspectorSetting;\n    showRulersSetting;\n    deviceOutlineSetting;\n    showDeviceScaleFactorSetting;\n    showUserAgentTypeSetting;\n    autoAdjustScaleSetting;\n    lastMode;\n    elementInternal;\n    emulatedDevicesList;\n    persistenceSetting;\n    spanButton;\n    postureItem;\n    modeButton;\n    widthInput;\n    heightInput;\n    deviceScaleItem;\n    deviceSelectItem;\n    scaleItem;\n    uaItem;\n    experimentalButton;\n    cachedDeviceScale;\n    cachedUaType;\n    xItem;\n    throttlingConditionsItem;\n    cachedModelType;\n    cachedScale;\n    cachedModelDevice;\n    cachedModelMode;\n    constructor(model, showMediaInspectorSetting, showRulersSetting) {\n        this.model = model;\n        this.showMediaInspectorSetting = showMediaInspectorSetting;\n        this.showRulersSetting = showRulersSetting;\n        this.deviceOutlineSetting = this.model.deviceOutlineSetting();\n        this.showDeviceScaleFactorSetting =\n            Common.Settings.Settings.instance().createSetting('emulation.show-device-scale-factor', false);\n        this.showDeviceScaleFactorSetting.addChangeListener(this.updateDeviceScaleFactorVisibility, this);\n        this.showUserAgentTypeSetting =\n            Common.Settings.Settings.instance().createSetting('emulation.show-user-agent-type', false);\n        this.showUserAgentTypeSetting.addChangeListener(this.updateUserAgentTypeVisibility, this);\n        this.autoAdjustScaleSetting =\n            Common.Settings.Settings.instance().createSetting('emulation.auto-adjust-scale', true);\n        this.lastMode = new Map();\n        this.elementInternal = document.createElement('div');\n        this.elementInternal.classList.add('device-mode-toolbar');\n        this.elementInternal.setAttribute('jslog', `${VisualLogging.toolbar('device-mode').track({ resize: true })}`);\n        const leftContainer = this.elementInternal.createChild('div', 'device-mode-toolbar-spacer');\n        leftContainer.createChild('div', 'device-mode-toolbar-spacer');\n        const leftToolbar = new UI.Toolbar.Toolbar('', leftContainer);\n        this.fillLeftToolbar(leftToolbar);\n        const mainToolbar = new UI.Toolbar.Toolbar('', this.elementInternal);\n        mainToolbar.makeWrappable();\n        this.widthInput = new EmulationComponents.DeviceSizeInputElement.SizeInputElement(i18nString(UIStrings.width), { jslogContext: 'width' });\n        this.widthInput.addEventListener('sizechanged', ({ size: width }) => {\n            if (this.autoAdjustScaleSetting.get()) {\n                this.model.setWidthAndScaleToFit(width);\n            }\n            else {\n                this.model.setWidth(width);\n            }\n        });\n        this.heightInput = new EmulationComponents.DeviceSizeInputElement.SizeInputElement(i18nString(UIStrings.heightLeaveEmptyForFull), { jslogContext: 'height' });\n        this.heightInput.addEventListener('sizechanged', ({ size: height }) => {\n            if (this.autoAdjustScaleSetting.get()) {\n                this.model.setHeightAndScaleToFit(height);\n            }\n            else {\n                this.model.setHeight(height);\n            }\n        });\n        this.fillMainToolbar(mainToolbar);\n        const rightContainer = this.elementInternal.createChild('div', 'device-mode-toolbar-spacer');\n        const rightToolbar = new UI.Toolbar.Toolbar('device-mode-toolbar-fixed-size', rightContainer);\n        rightToolbar.makeWrappable();\n        this.fillRightToolbar(rightToolbar);\n        const modeToolbar = new UI.Toolbar.Toolbar('device-mode-toolbar-fixed-size', rightContainer);\n        modeToolbar.makeWrappable();\n        this.fillModeToolbar(modeToolbar);\n        rightContainer.createChild('div', 'device-mode-toolbar-spacer');\n        const optionsToolbar = new UI.Toolbar.Toolbar('device-mode-toolbar-options', rightContainer);\n        optionsToolbar.makeWrappable();\n        this.fillOptionsToolbar(optionsToolbar);\n        this.emulatedDevicesList = EmulationModel.EmulatedDevices.EmulatedDevicesList.instance();\n        this.emulatedDevicesList.addEventListener(\"CustomDevicesUpdated\" /* EmulationModel.EmulatedDevices.Events.CUSTOM_DEVICES_UPDATED */, this.deviceListChanged, this);\n        this.emulatedDevicesList.addEventListener(\"StandardDevicesUpdated\" /* EmulationModel.EmulatedDevices.Events.STANDARD_DEVICES_UPDATED */, this.deviceListChanged, this);\n        this.persistenceSetting = Common.Settings.Settings.instance().createSetting('emulation.device-mode-value', { device: '', orientation: '', mode: '' });\n        this.model.toolbarControlsEnabledSetting().addChangeListener(updateToolbarsEnabled);\n        updateToolbarsEnabled();\n        function updateToolbarsEnabled() {\n            const enabled = model.toolbarControlsEnabledSetting().get();\n            leftToolbar.setEnabled(enabled);\n            mainToolbar.setEnabled(enabled);\n            rightToolbar.setEnabled(enabled);\n            modeToolbar.setEnabled(enabled);\n            optionsToolbar.setEnabled(enabled);\n        }\n    }\n    createEmptyToolbarElement() {\n        const element = document.createElement('div');\n        element.classList.add('device-mode-empty-toolbar-element');\n        return element;\n    }\n    fillLeftToolbar(toolbar) {\n        toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n        this.deviceSelectItem =\n            new UI.Toolbar.ToolbarMenuButton(this.appendDeviceMenuItems.bind(this), undefined, undefined, 'device');\n        this.deviceSelectItem.turnShrinkable();\n        this.deviceSelectItem.setDarkText();\n        toolbar.appendToolbarItem(this.deviceSelectItem);\n    }\n    fillMainToolbar(toolbar) {\n        toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.widthInput));\n        const xElement = document.createElement('div');\n        xElement.classList.add('device-mode-x');\n        xElement.textContent = '×';\n        this.xItem = this.wrapToolbarItem(xElement);\n        toolbar.appendToolbarItem(this.xItem);\n        toolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this.heightInput));\n    }\n    fillRightToolbar(toolbar) {\n        toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n        this.scaleItem =\n            new UI.Toolbar.ToolbarMenuButton(this.appendScaleMenuItems.bind(this), undefined, undefined, 'scale');\n        setTitleForButton(this.scaleItem, i18nString(UIStrings.zoom));\n        this.scaleItem.setDarkText();\n        toolbar.appendToolbarItem(this.scaleItem);\n        toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n        this.deviceScaleItem = new UI.Toolbar.ToolbarMenuButton(this.appendDeviceScaleMenuItems.bind(this), undefined, undefined, 'device-pixel-ratio');\n        this.deviceScaleItem.setVisible(this.showDeviceScaleFactorSetting.get());\n        setTitleForButton(this.deviceScaleItem, i18nString(UIStrings.devicePixelRatio));\n        this.deviceScaleItem.setDarkText();\n        toolbar.appendToolbarItem(this.deviceScaleItem);\n        toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n        this.uaItem =\n            new UI.Toolbar.ToolbarMenuButton(this.appendUserAgentMenuItems.bind(this), undefined, undefined, 'device-type');\n        this.uaItem.setVisible(this.showUserAgentTypeSetting.get());\n        setTitleForButton(this.uaItem, i18nString(UIStrings.deviceType));\n        this.uaItem.setDarkText();\n        toolbar.appendToolbarItem(this.uaItem);\n        this.throttlingConditionsItem =\n            MobileThrottling.ThrottlingManager.throttlingManager().createMobileThrottlingButton();\n        toolbar.appendToolbarItem(this.throttlingConditionsItem);\n    }\n    fillModeToolbar(toolbar) {\n        toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n        this.modeButton = new UI.Toolbar.ToolbarButton('', 'screen-rotation', undefined, 'screen-rotation');\n        this.modeButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.modeMenuClicked, this);\n        toolbar.appendToolbarItem(this.modeButton);\n        // Show dual screen toolbar.\n        this.spanButton = new UI.Toolbar.ToolbarButton('', 'device-fold', undefined, 'device-fold');\n        this.spanButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.spanClicked, this);\n        toolbar.appendToolbarItem(this.spanButton);\n        // Show posture toolbar menu for foldable devices.\n        toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n        this.postureItem = new UI.Toolbar.ToolbarMenuButton(this.appendDevicePostureItems.bind(this), undefined, undefined, 'device-posture');\n        this.postureItem.setDarkText();\n        setTitleForButton(this.postureItem, i18nString(UIStrings.devicePosture));\n        toolbar.appendToolbarItem(this.postureItem);\n        this.createExperimentalButton(toolbar);\n    }\n    createExperimentalButton(toolbar) {\n        toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSeparator(true));\n        const title = (this.model.webPlatformExperimentalFeaturesEnabled()) ?\n            i18nString(UIStrings.experimentalWebPlatformFeature) :\n            i18nString(UIStrings.experimentalWebPlatformFeatureFlag);\n        this.experimentalButton = new UI.Toolbar.ToolbarToggle(title, 'experiment-check');\n        this.experimentalButton.setToggled(this.model.webPlatformExperimentalFeaturesEnabled());\n        this.experimentalButton.setEnabled(true);\n        this.experimentalButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.experimentalClicked, this);\n        toolbar.appendToolbarItem(this.experimentalButton);\n    }\n    experimentalClicked() {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab('chrome://flags/#enable-experimental-web-platform-features');\n    }\n    fillOptionsToolbar(toolbar) {\n        toolbar.appendToolbarItem(this.wrapToolbarItem(this.createEmptyToolbarElement()));\n        const moreOptionsButton = new UI.Toolbar.ToolbarMenuButton(this.appendOptionsMenuItems.bind(this), true, undefined, 'more-options', 'dots-vertical');\n        moreOptionsButton.setTitle(i18nString(UIStrings.moreOptions));\n        toolbar.appendToolbarItem(moreOptionsButton);\n    }\n    appendDevicePostureItems(contextMenu) {\n        for (const title of ['Continuous', 'Folded']) {\n            contextMenu.defaultSection().appendCheckboxItem(title, this.spanClicked.bind(this), { checked: title === this.currentDevicePosture(), jslogContext: title.toLowerCase() });\n        }\n    }\n    currentDevicePosture() {\n        const mode = this.model.mode();\n        if (mode &&\n            (mode.orientation === EmulationModel.EmulatedDevices.VerticalSpanned ||\n                mode.orientation === EmulationModel.EmulatedDevices.HorizontalSpanned)) {\n            return 'Folded';\n        }\n        return 'Continuous';\n    }\n    appendScaleMenuItems(contextMenu) {\n        if (this.model.type() === EmulationModel.DeviceModeModel.Type.Device) {\n            contextMenu.footerSection().appendItem(i18nString(UIStrings.fitToWindowF, { PH1: this.getPrettyFitZoomPercentage() }), this.onScaleMenuChanged.bind(this, this.model.fitScale()), { jslogContext: 'fit-to-window' });\n        }\n        contextMenu.footerSection().appendCheckboxItem(i18nString(UIStrings.autoadjustZoom), this.onAutoAdjustScaleChanged.bind(this), { checked: this.autoAdjustScaleSetting.get(), jslogContext: 'auto-adjust-zoom' });\n        const boundAppendScaleItem = appendScaleItem.bind(this);\n        boundAppendScaleItem('50%', 0.5);\n        boundAppendScaleItem('75%', 0.75);\n        boundAppendScaleItem('100%', 1);\n        boundAppendScaleItem('125%', 1.25);\n        boundAppendScaleItem('150%', 1.5);\n        boundAppendScaleItem('200%', 2);\n        function appendScaleItem(title, value) {\n            contextMenu.defaultSection().appendCheckboxItem(title, this.onScaleMenuChanged.bind(this, value), { checked: this.model.scaleSetting().get() === value, jslogContext: title });\n        }\n    }\n    onScaleMenuChanged(value) {\n        this.model.scaleSetting().set(value);\n    }\n    onAutoAdjustScaleChanged() {\n        this.autoAdjustScaleSetting.set(!this.autoAdjustScaleSetting.get());\n    }\n    appendDeviceScaleMenuItems(contextMenu) {\n        const deviceScaleFactorSetting = this.model.deviceScaleFactorSetting();\n        const defaultValue = this.model.uaSetting().get() === \"Mobile\" /* EmulationModel.DeviceModeModel.UA.MOBILE */ ||\n            this.model.uaSetting().get() === \"Mobile (no touch)\" /* EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH */ ?\n            EmulationModel.DeviceModeModel.defaultMobileScaleFactor :\n            window.devicePixelRatio;\n        appendDeviceScaleFactorItem(contextMenu.headerSection(), i18nString(UIStrings.defaultF, { PH1: defaultValue }), 0, 'dpr-default');\n        appendDeviceScaleFactorItem(contextMenu.defaultSection(), '1', 1, 'dpr-1');\n        appendDeviceScaleFactorItem(contextMenu.defaultSection(), '2', 2, 'dpr-2');\n        appendDeviceScaleFactorItem(contextMenu.defaultSection(), '3', 3, 'dpr-3');\n        function appendDeviceScaleFactorItem(section, title, value, jslogContext) {\n            section.appendCheckboxItem(title, deviceScaleFactorSetting.set.bind(deviceScaleFactorSetting, value), { checked: deviceScaleFactorSetting.get() === value, jslogContext });\n        }\n    }\n    appendUserAgentMenuItems(contextMenu) {\n        const uaSetting = this.model.uaSetting();\n        appendUAItem(\"Mobile\" /* EmulationModel.DeviceModeModel.UA.MOBILE */, \"Mobile\" /* EmulationModel.DeviceModeModel.UA.MOBILE */);\n        appendUAItem(\"Mobile (no touch)\" /* EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH */, \"Mobile (no touch)\" /* EmulationModel.DeviceModeModel.UA.MOBILE_NO_TOUCH */);\n        appendUAItem(\"Desktop\" /* EmulationModel.DeviceModeModel.UA.DESKTOP */, \"Desktop\" /* EmulationModel.DeviceModeModel.UA.DESKTOP */);\n        appendUAItem(\"Desktop (touch)\" /* EmulationModel.DeviceModeModel.UA.DESKTOP_TOUCH */, \"Desktop (touch)\" /* EmulationModel.DeviceModeModel.UA.DESKTOP_TOUCH */);\n        function appendUAItem(title, value) {\n            contextMenu.defaultSection().appendCheckboxItem(title, uaSetting.set.bind(uaSetting, value), { checked: uaSetting.get() === value, jslogContext: Platform.StringUtilities.toKebabCase(value) });\n        }\n    }\n    appendOptionsMenuItems(contextMenu) {\n        const model = this.model;\n        appendToggleItem(contextMenu.headerSection(), this.deviceOutlineSetting, i18nString(UIStrings.hideDeviceFrame), i18nString(UIStrings.showDeviceFrame), model.type() !== EmulationModel.DeviceModeModel.Type.Device, 'device-frame');\n        appendToggleItem(contextMenu.headerSection(), this.showMediaInspectorSetting, i18nString(UIStrings.hideMediaQueries), i18nString(UIStrings.showMediaQueries), undefined, 'media-queries');\n        appendToggleItem(contextMenu.headerSection(), this.showRulersSetting, i18nString(UIStrings.hideRulers), i18nString(UIStrings.showRulers), undefined, 'rulers');\n        appendToggleItem(contextMenu.defaultSection(), this.showDeviceScaleFactorSetting, i18nString(UIStrings.removeDevicePixelRatio), i18nString(UIStrings.addDevicePixelRatio), undefined, 'device-pixel-ratio');\n        appendToggleItem(contextMenu.defaultSection(), this.showUserAgentTypeSetting, i18nString(UIStrings.removeDeviceType), i18nString(UIStrings.addDeviceType), undefined, 'device-type');\n        contextMenu.appendItemsAtLocation('deviceModeMenu');\n        contextMenu.footerSection().appendItem(i18nString(UIStrings.resetToDefaults), this.reset.bind(this), { jslogContext: 'reset-to-defaults' });\n        contextMenu.footerSection().appendItem(i18nString(UIStrings.closeDevtools), Host.InspectorFrontendHost.InspectorFrontendHostInstance.closeWindow.bind(Host.InspectorFrontendHost.InspectorFrontendHostInstance), { jslogContext: 'close-dev-tools' });\n        function appendToggleItem(section, setting, title1, title2, disabled, context) {\n            if (typeof disabled === 'undefined') {\n                disabled = model.type() === EmulationModel.DeviceModeModel.Type.None;\n            }\n            const isEnabled = setting.get();\n            const jslogContext = `${context}-${isEnabled ? 'disable' : 'enable'}`;\n            section.appendItem(isEnabled ? title1 : title2, setting.set.bind(setting, !setting.get()), { disabled, jslogContext });\n        }\n    }\n    reset() {\n        this.deviceOutlineSetting.set(false);\n        this.showDeviceScaleFactorSetting.set(false);\n        this.showUserAgentTypeSetting.set(false);\n        this.showMediaInspectorSetting.set(false);\n        this.showRulersSetting.set(false);\n        this.model.reset();\n    }\n    wrapToolbarItem(element) {\n        const container = document.createElement('div');\n        const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(container, { cssFile: deviceModeToolbarStyles, delegatesFocus: undefined });\n        shadowRoot.appendChild(element);\n        return new UI.Toolbar.ToolbarItem(container);\n    }\n    emulateDevice(device) {\n        const scale = this.autoAdjustScaleSetting.get() ? undefined : this.model.scaleSetting().get();\n        this.model.emulate(EmulationModel.DeviceModeModel.Type.Device, device, this.lastMode.get(device) || device.modes[0], scale);\n    }\n    switchToResponsive() {\n        this.model.emulate(EmulationModel.DeviceModeModel.Type.Responsive, null, null);\n    }\n    filterDevices(devices) {\n        devices = devices.filter(function (d) {\n            return d.show();\n        });\n        devices.sort(EmulationModel.EmulatedDevices.EmulatedDevice.deviceComparator);\n        return devices;\n    }\n    standardDevices() {\n        return this.filterDevices(this.emulatedDevicesList.standard());\n    }\n    customDevices() {\n        return this.filterDevices(this.emulatedDevicesList.custom());\n    }\n    allDevices() {\n        return this.standardDevices().concat(this.customDevices());\n    }\n    appendDeviceMenuItems(contextMenu) {\n        contextMenu.headerSection().appendCheckboxItem(i18nString(UIStrings.responsive), this.switchToResponsive.bind(this), { checked: this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive, jslogContext: 'responsive' });\n        appendGroup.call(this, this.standardDevices());\n        appendGroup.call(this, this.customDevices());\n        contextMenu.footerSection().appendItem(i18nString(UIStrings.edit), this.emulatedDevicesList.revealCustomSetting.bind(this.emulatedDevicesList), { jslogContext: 'edit' });\n        function appendGroup(devices) {\n            if (!devices.length) {\n                return;\n            }\n            const section = contextMenu.section();\n            for (const device of devices) {\n                section.appendCheckboxItem(device.title, this.emulateDevice.bind(this, device), {\n                    checked: this.model.device() === device,\n                    jslogContext: Platform.StringUtilities.toKebabCase(device.title),\n                });\n            }\n        }\n    }\n    deviceListChanged() {\n        const device = this.model.device();\n        if (!device) {\n            return;\n        }\n        const devices = this.allDevices();\n        if (devices.indexOf(device) === -1) {\n            if (devices.length) {\n                this.emulateDevice(devices[0]);\n            }\n            else {\n                this.model.emulate(EmulationModel.DeviceModeModel.Type.Responsive, null, null);\n            }\n        }\n        else {\n            this.emulateDevice(device);\n        }\n    }\n    updateDeviceScaleFactorVisibility() {\n        if (this.deviceScaleItem) {\n            this.deviceScaleItem.setVisible(this.showDeviceScaleFactorSetting.get());\n        }\n    }\n    updateUserAgentTypeVisibility() {\n        if (this.uaItem) {\n            this.uaItem.setVisible(this.showUserAgentTypeSetting.get());\n        }\n    }\n    spanClicked() {\n        const device = this.model.device();\n        if (!device || (!device.isDualScreen && !device.isFoldableScreen)) {\n            return;\n        }\n        const scale = this.autoAdjustScaleSetting.get() ? undefined : this.model.scaleSetting().get();\n        const mode = this.model.mode();\n        if (!mode) {\n            return;\n        }\n        const newMode = device.getSpanPartner(mode);\n        if (!newMode) {\n            return;\n        }\n        this.model.emulate(this.model.type(), device, newMode, scale);\n        return;\n    }\n    modeMenuClicked(event) {\n        const device = this.model.device();\n        const model = this.model;\n        const autoAdjustScaleSetting = this.autoAdjustScaleSetting;\n        if (model.type() === EmulationModel.DeviceModeModel.Type.Responsive) {\n            const appliedSize = model.appliedDeviceSize();\n            if (autoAdjustScaleSetting.get()) {\n                model.setSizeAndScaleToFit(appliedSize.height, appliedSize.width);\n            }\n            else {\n                model.setWidth(appliedSize.height);\n                model.setHeight(appliedSize.width);\n            }\n            return;\n        }\n        if (!device) {\n            return;\n        }\n        if ((device.isDualScreen || device.isFoldableScreen || device.modes.length === 2) &&\n            device.modes[0].orientation !== device.modes[1].orientation) {\n            const scale = autoAdjustScaleSetting.get() ? undefined : model.scaleSetting().get();\n            const mode = model.mode();\n            if (!mode) {\n                return;\n            }\n            const rotationPartner = device.getRotationPartner(mode);\n            if (!rotationPartner) {\n                return;\n            }\n            model.emulate(model.type(), model.device(), rotationPartner, scale);\n            return;\n        }\n        if (!this.modeButton) {\n            return;\n        }\n        const contextMenu = new UI.ContextMenu.ContextMenu(event.data, {\n            useSoftMenu: false,\n            x: this.modeButton.element.getBoundingClientRect().left,\n            y: this.modeButton.element.getBoundingClientRect().top + this.modeButton.element.offsetHeight,\n        });\n        addOrientation(EmulationModel.EmulatedDevices.Vertical, i18nString(UIStrings.portrait));\n        addOrientation(EmulationModel.EmulatedDevices.Horizontal, i18nString(UIStrings.landscape));\n        void contextMenu.show();\n        function addOrientation(orientation, title) {\n            if (!device) {\n                return;\n            }\n            const modes = device.modesForOrientation(orientation);\n            if (!modes.length) {\n                return;\n            }\n            if (modes.length === 1) {\n                addMode(modes[0], title);\n            }\n            else {\n                for (let index = 0; index < modes.length; index++) {\n                    addMode(modes[index], title + ' \\u2013 ' + modes[index].title);\n                }\n            }\n        }\n        function addMode(mode, title) {\n            contextMenu.defaultSection().appendCheckboxItem(title, applyMode.bind(null, mode), { checked: model.mode() === mode, jslogContext: 'device-mode' });\n        }\n        function applyMode(mode) {\n            const scale = autoAdjustScaleSetting.get() ? undefined : model.scaleSetting().get();\n            model.emulate(model.type(), model.device(), mode, scale);\n        }\n    }\n    getPrettyFitZoomPercentage() {\n        return `${(this.model.fitScale() * 100).toFixed(0)}`;\n    }\n    getPrettyZoomPercentage() {\n        return `${(this.model.scale() * 100).toFixed(0)}`;\n    }\n    element() {\n        return this.elementInternal;\n    }\n    update() {\n        if (this.model.type() !== this.cachedModelType) {\n            this.cachedModelType = this.model.type();\n            this.widthInput.disabled = this.model.type() !== EmulationModel.DeviceModeModel.Type.Responsive;\n            this.heightInput.disabled = this.model.type() !== EmulationModel.DeviceModeModel.Type.Responsive;\n            this.deviceScaleItem.setEnabled(this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive);\n            this.uaItem.setEnabled(this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive);\n            if (this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive) {\n                this.modeButton.setEnabled(true);\n                setTitleForButton(this.modeButton, i18nString(UIStrings.rotate));\n            }\n            else {\n                this.modeButton.setEnabled(false);\n            }\n        }\n        const size = this.model.appliedDeviceSize();\n        this.widthInput.size = String(size.width);\n        this.heightInput.size =\n            this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive && this.model.isFullHeight() ?\n                '' :\n                String(size.height);\n        this.heightInput.placeholder = String(size.height);\n        if (this.model.scale() !== this.cachedScale) {\n            this.scaleItem.setText(`${this.getPrettyZoomPercentage()}%`);\n            this.cachedScale = this.model.scale();\n        }\n        const deviceScale = this.model.appliedDeviceScaleFactor();\n        if (deviceScale !== this.cachedDeviceScale) {\n            this.deviceScaleItem.setText(`DPR: ${deviceScale.toFixed(1)}`);\n            this.cachedDeviceScale = deviceScale;\n        }\n        const uaType = this.model.appliedUserAgentType();\n        if (uaType !== this.cachedUaType) {\n            this.uaItem.setText(uaType);\n            this.cachedUaType = uaType;\n        }\n        let deviceItemTitle = i18nString(UIStrings.none);\n        if (this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive) {\n            deviceItemTitle = i18nString(UIStrings.responsive);\n        }\n        const device = this.model.device();\n        if (this.model.type() === EmulationModel.DeviceModeModel.Type.Device && device) {\n            deviceItemTitle = device.title;\n        }\n        this.deviceSelectItem.setText(`${i18nString(UIStrings.dimensions)}: ${deviceItemTitle}`);\n        if (this.model.device() !== this.cachedModelDevice) {\n            const device = this.model.device();\n            if (device) {\n                const modeCount = device ? device.modes.length : 0;\n                this.modeButton.setEnabled(modeCount >= 2);\n                setTitleForButton(this.modeButton, modeCount === 2 ? i18nString(UIStrings.rotate) : i18nString(UIStrings.screenOrientationOptions));\n            }\n            this.cachedModelDevice = device;\n        }\n        if (this.experimentalButton) {\n            const device = this.model.device();\n            if (device && (device.isDualScreen || device.isFoldableScreen)) {\n                if (device.isDualScreen) {\n                    this.spanButton.setVisible(true);\n                    this.postureItem.setVisible(false);\n                }\n                else if (device.isFoldableScreen) {\n                    this.spanButton.setVisible(false);\n                    this.postureItem.setVisible(true);\n                    this.postureItem.setText(this.currentDevicePosture());\n                }\n                this.experimentalButton.setVisible(true);\n            }\n            else {\n                this.spanButton.setVisible(false);\n                this.postureItem.setVisible(false);\n                this.experimentalButton.setVisible(false);\n            }\n            setTitleForButton(this.spanButton, i18nString(UIStrings.toggleDualscreenMode));\n        }\n        if (this.model.type() === EmulationModel.DeviceModeModel.Type.Device) {\n            this.lastMode.set(this.model.device(), this.model.mode());\n        }\n        if (this.model.mode() !== this.cachedModelMode && this.model.type() !== EmulationModel.DeviceModeModel.Type.None) {\n            this.cachedModelMode = this.model.mode();\n            const value = this.persistenceSetting.get();\n            const device = this.model.device();\n            if (device) {\n                value.device = device.title;\n                const mode = this.model.mode();\n                value.orientation = mode ? mode.orientation : '';\n                value.mode = mode ? mode.title : '';\n            }\n            else {\n                value.device = '';\n                value.orientation = '';\n                value.mode = '';\n            }\n            this.persistenceSetting.set(value);\n        }\n    }\n    restore() {\n        for (const device of this.allDevices()) {\n            if (device.title === this.persistenceSetting.get().device) {\n                for (const mode of device.modes) {\n                    if (mode.orientation === this.persistenceSetting.get().orientation &&\n                        mode.title === this.persistenceSetting.get().mode) {\n                        this.lastMode.set(device, mode);\n                        this.emulateDevice(device);\n                        return;\n                    }\n                }\n            }\n        }\n        this.model.emulate(EmulationModel.DeviceModeModel.Type.Responsive, null, null);\n    }\n}\n//# sourceMappingURL=DeviceModeToolbar.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default {\n  cssContent: `/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: hidden;\n  align-items: stretch;\n  flex: auto;\n  background-color: var(--app-color-toolbar-background);\n}\n\n.device-mode-toolbar {\n  flex: none;\n  background-color: var(--app-color-toolbar-background);\n  border-bottom: 1px solid var(--sys-color-divider);\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n}\n\n.device-mode-toolbar .toolbar {\n  overflow: hidden;\n  flex: 0 100000 auto;\n  padding: 0 5px;\n}\n\n.device-mode-toolbar .toolbar.device-mode-toolbar-fixed-size {\n  flex: 0 1 auto;\n}\n\n.device-mode-toolbar-options.toolbar {\n  position: sticky;\n  right: 0;\n  flex: none;\n}\n\n.device-mode-toolbar-spacer {\n  flex: 1 1 0;\n  display: flex;\n  flex-direction: row;\n  overflow: hidden;\n}\n\n.device-mode-content-clip {\n  overflow: hidden;\n  flex: auto;\n}\n\n.device-mode-media-container {\n  flex: none;\n  overflow: hidden;\n  box-shadow: inset 0 -1px var(--sys-color-divider);\n}\n\n.device-mode-content-clip:not(.device-mode-outline-visible) .device-mode-media-container {\n  margin-bottom: 20px;\n}\n\n.device-mode-presets-container {\n  flex: 0 0 20px;\n  display: flex;\n}\n\n.device-mode-presets-container-inner {\n  flex: auto;\n  justify-content: center;\n  position: relative;\n  background-color: var(--sys-color-surface1);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.device-mode-presets-container:hover {\n  transition: opacity 0.1s;\n  transition-delay: 50ms;\n  opacity: 100%;\n}\n\n.device-mode-preset-bar-outer {\n  pointer-events: none;\n  display: flex;\n  justify-content: center;\n}\n\n.device-mode-preset-bar {\n  border-left: 2px solid var(--sys-color-divider);\n  border-right: 2px solid var(--sys-color-divider);\n  pointer-events: auto;\n  text-align: center;\n  flex: none;\n  color: var(--sys-color-on-surface);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  white-space: nowrap;\n  margin-bottom: 1px;\n}\n\n.device-mode-preset-bar:hover {\n  transition: background-color 0.1s;\n  transition-delay: 50ms;\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.device-mode-preset-bar > span {\n  visibility: hidden;\n}\n\n.device-mode-preset-bar:hover > span {\n  transition: visibility 0.1s;\n  transition-delay: 50ms;\n  visibility: visible;\n}\n\n.device-mode-content-area {\n  flex: auto;\n  position: relative;\n  margin: 0;\n}\n\n.device-mode-screen-area {\n  position: absolute;\n  left: 0;\n  right: 0;\n  width: 0;\n  height: 0;\n  background-color: var(--sys-color-inverse-surface);\n}\n\n.device-mode-content-clip:not(.device-mode-outline-visible) .device-mode-screen-area {\n  --override-screen-area-box-shadow: hsl(240deg 3% 84%) 0 0 0 0.5px, hsl(0deg 0% 80% / 40%) 0 0 20px;\n\n  box-shadow: var(--override-screen-area-box-shadow);\n}\n\n.theme-with-dark-background .device-mode-content-clip:not(.device-mode-outline-visible) .device-mode-screen-area,\n:host-context(.theme-with-dark-background) .device-mode-content-clip:not(.device-mode-outline-visible) .device-mode-screen-area {\n  --override-screen-area-box-shadow: rgb(40 40 42) 0 0 0 0.5px, rgb(51 51 51 / 40%) 0 0 20px;\n}\n\n.device-mode-screen-image {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.device-mode-resizer {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  transition: background-color 0.1s ease, opacity 0.1s ease;\n}\n\n.device-mode-resizer:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n  opacity: 100%;\n}\n\n.device-mode-resizer > div {\n  pointer-events: none;\n}\n\n.device-mode-right-resizer {\n  top: 0;\n  bottom: -1px;\n  right: -20px;\n  width: 20px;\n}\n\n.device-mode-left-resizer {\n  top: 0;\n  bottom: -1px;\n  left: -20px;\n  width: 20px;\n  opacity: 0%;\n}\n\n.device-mode-bottom-resizer {\n  left: 0;\n  right: -1px;\n  bottom: -20px;\n  height: 20px;\n}\n\n.device-mode-bottom-right-resizer {\n  left: 0;\n  top: 0;\n  right: -20px;\n  bottom: -20px;\n  background-color: var(--sys-color-surface1);\n}\n\n.device-mode-bottom-left-resizer {\n  left: -20px;\n  top: 0;\n  right: 0;\n  bottom: -20px;\n  opacity: 0%;\n}\n\n.device-mode-right-resizer > div {\n  content: var(--image-file-resizeHorizontal);\n  width: 6px;\n  height: 26px;\n}\n\n.device-mode-left-resizer > div {\n  content: var(--image-file-resizeHorizontal);\n  width: 6px;\n  height: 26px;\n}\n\n.device-mode-bottom-resizer > div {\n  content: var(--image-file-resizeVertical);\n  margin-bottom: -2px;\n  width: 26px;\n  height: 6px;\n}\n\n.device-mode-bottom-right-resizer > div {\n  position: absolute;\n  bottom: 3px;\n  right: 3px;\n  width: 13px;\n  height: 13px;\n  content: var(--image-file-resizeDiagonal);\n}\n\n.device-mode-bottom-left-resizer > div {\n  position: absolute;\n  bottom: 3px;\n  left: 3px;\n  width: 13px;\n  height: 13px;\n  content: var(--image-file-resizeDiagonal);\n  transform: rotate(90deg);\n}\n\n.device-mode-page-area {\n  position: absolute;\n  left: 0;\n  right: 0;\n  width: 0;\n  height: 0;\n  display: flex;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.device-mode-ruler {\n  position: absolute;\n  overflow: visible;\n}\n\n.device-mode-ruler-top {\n  height: 20px;\n  right: 0;\n}\n\n.device-mode-ruler-left {\n  width: 20px;\n  bottom: 0;\n}\n\n.device-mode-ruler-content {\n  pointer-events: none;\n  position: absolute;\n  left: -20px;\n  top: -20px;\n}\n\n.device-mode-ruler-top .device-mode-ruler-content {\n  border-top: 1px solid transparent;\n  right: 0;\n  bottom: 20px;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.device-mode-ruler-left .device-mode-ruler-content {\n  border-left: 1px solid transparent;\n  border-top: 1px solid transparent;\n  right: 20px;\n  bottom: 0;\n}\n\n.device-mode-content-clip.device-mode-outline-visible .device-mode-ruler-top .device-mode-ruler-content {\n  border-top: 1px solid var(--sys-color-token-subtle);\n}\n\n.device-mode-content-clip.device-mode-outline-visible .device-mode-ruler-left .device-mode-ruler-content {\n  border-left: 1px solid var(--sys-color-token-subtle);\n  border-top: 1px solid var(--sys-color-token-subtle);\n}\n\n.device-mode-ruler-inner {\n  position: absolute;\n}\n\n.device-mode-ruler-top .device-mode-ruler-inner {\n  top: 0;\n  bottom: 0;\n  left: 20px;\n  right: 0;\n  border-bottom: 1px solid var(--sys-color-token-subtle);\n}\n\n.device-mode-ruler-left .device-mode-ruler-inner {\n  left: 0;\n  right: 0;\n  top: 19px;\n  bottom: 0;\n  border-right: 1px solid var(--sys-color-token-subtle);\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.device-mode-ruler-marker {\n  position: absolute;\n}\n\n.device-mode-ruler-top .device-mode-ruler-marker {\n  width: 0;\n  height: 5px;\n  bottom: 0;\n  border-right: 1px solid var(--sys-color-token-subtle);\n  margin-right: -1px;\n}\n\n.device-mode-ruler-top .device-mode-ruler-marker.device-mode-ruler-marker-medium {\n  height: 10px;\n}\n\n.device-mode-ruler-top .device-mode-ruler-marker.device-mode-ruler-marker-large {\n  height: 15px;\n}\n\n.device-mode-ruler-left .device-mode-ruler-marker {\n  height: 0;\n  width: 5px;\n  right: 0;\n  border-bottom: 1px solid var(--sys-color-token-subtle);\n  margin-bottom: -1px;\n}\n\n.device-mode-ruler-left .device-mode-ruler-marker.device-mode-ruler-marker-medium {\n  width: 10px;\n}\n\n.device-mode-ruler-left .device-mode-ruler-marker.device-mode-ruler-marker-large {\n  width: 15px;\n}\n\n.device-mode-ruler-text {\n  color: var(--sys-color-token-subtle);\n  position: relative;\n  pointer-events: auto;\n}\n\n.device-mode-ruler-text:hover {\n  color: var(--sys-color-on-surface);\n}\n\n.device-mode-ruler-top .device-mode-ruler-text {\n  left: 2px;\n  top: -2px;\n}\n\n.device-mode-ruler-left .device-mode-ruler-text {\n  left: -4px;\n  top: -15px;\n  transform: rotate(270deg);\n}\n\n/*# sourceURL=deviceModeView.css */\n`\n};\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default {\n  cssContent: `/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n/* Media query bars */\n\n.media-inspector-view {\n  height: 50px;\n}\n\n.media-inspector-marker-container {\n  height: 14px;\n  margin: 2px 0;\n  position: relative;\n}\n\n.media-inspector-bar {\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n}\n\n.media-inspector-marker {\n  flex: none;\n  pointer-events: auto;\n  margin: 1px 0;\n  white-space: nowrap;\n  z-index: auto;\n  position: relative;\n}\n\n.media-inspector-marker-spacer {\n  flex: auto;\n}\n\n.media-inspector-marker:hover {\n  margin: -1px 0;\n  opacity: 100%;\n}\n\n.media-inspector-marker-min-width {\n  flex: auto;\n  background-color: var(--sys-color-yellow-container);\n  border-right: 2px solid var(--sys-color-yellow-bright);\n  border-left: 2px solid var(--sys-color-yellow-bright);\n\n  &:hover {\n    background-color: color-mix(in sRGB, var(--sys-color-yellow-container), var(--sys-color-yellow-bright) 30%);\n  }\n}\n\n.media-inspector-marker-min-width-right {\n  border-left: 2px solid var(--sys-color-yellow-bright);\n}\n\n.media-inspector-marker-min-width-left {\n  border-right: 2px solid var(--sys-color-yellow-bright);\n}\n\n.media-inspector-marker-min-max-width {\n  background-color: var(--sys-color-tertiary-container);\n  border-left: 2px solid var(--sys-color-tertiary);\n  border-right: 2px solid var(--sys-color-tertiary);\n}\n\n.media-inspector-marker-min-max-width:hover {\n  z-index: 1;\n}\n\n.media-inspector-marker-max-width {\n  background-color: var(--sys-color-inverse-primary);\n  border-right: 2px solid var(--sys-color-primary-bright);\n  border-left: 2px solid var(--sys-color-primary-bright);\n}\n\n/* Clear background colors when query is not active and not hovering */\n\n.media-inspector-marker-inactive .media-inspector-marker-min-width:not(:hover) {\n  background-color: var(--sys-color-surface-yellow);\n}\n\n.media-inspector-marker-inactive .media-inspector-marker-min-max-width:not(:hover) {\n  background-color: color-mix(in sRGB, var(--sys-color-tertiary-container), var(--sys-color-cdt-base-container) 30%);\n}\n\n.media-inspector-marker-inactive .media-inspector-marker-max-width:not(:hover) {\n  background-color: var(--sys-color-tonal-container);\n}\n\n/* Media query labels */\n\n.media-inspector-marker-label-container {\n  position: absolute;\n  z-index: 1;\n}\n\n.media-inspector-marker:not(:hover) .media-inspector-marker-label-container {\n  display: none;\n}\n\n.media-inspector-marker-label-container-left {\n  left: -2px;\n}\n\n.media-inspector-marker-label-container-right {\n  right: -2px;\n}\n\n.media-inspector-marker-label {\n  color: var(--sys-color-on-surface);\n  position: absolute;\n  top: 1px;\n  bottom: 0;\n  font-size: 12px;\n  pointer-events: none;\n}\n\n.media-inspector-label-right {\n  right: 4px;\n}\n\n.media-inspector-label-left {\n  left: 4px;\n}\n\n/*# sourceURL=mediaQueryInspector.css */\n`\n};\n","// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport mediaQueryInspectorStyles from './mediaQueryInspector.css.legacy.js';\nconst UIStrings = {\n    /**\n     * @description A context menu item/command in the Media Query Inspector of the Device Toolbar.\n     * Takes the user to the source code where this media query actually came from.\n     */\n    revealInSourceCode: 'Reveal in source code',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/emulation/MediaQueryInspector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class MediaQueryInspector extends UI.Widget.Widget {\n    mediaThrottler;\n    getWidthCallback;\n    setWidthCallback;\n    scale;\n    elementsToMediaQueryModel;\n    elementsToCSSLocations;\n    cssModel;\n    cachedQueryModels;\n    constructor(getWidthCallback, setWidthCallback, mediaThrottler) {\n        super(true);\n        this.registerRequiredCSS(mediaQueryInspectorStyles);\n        this.contentElement.classList.add('media-inspector-view');\n        this.contentElement.setAttribute('jslog', `${VisualLogging.mediaInspectorView().track({ click: true })}`);\n        this.contentElement.addEventListener('click', this.onMediaQueryClicked.bind(this), false);\n        this.contentElement.addEventListener('contextmenu', this.onContextMenu.bind(this), false);\n        this.mediaThrottler = mediaThrottler;\n        this.getWidthCallback = getWidthCallback;\n        this.setWidthCallback = setWidthCallback;\n        this.scale = 1;\n        this.elementsToMediaQueryModel = new WeakMap();\n        this.elementsToCSSLocations = new WeakMap();\n        SDK.TargetManager.TargetManager.instance().observeModels(SDK.CSSModel.CSSModel, this);\n        UI.ZoomManager.ZoomManager.instance().addEventListener(\"ZoomChanged\" /* UI.ZoomManager.Events.ZOOM_CHANGED */, this.renderMediaQueries.bind(this), this);\n    }\n    modelAdded(cssModel) {\n        // FIXME: adapt this to multiple targets.\n        if (cssModel.target() !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n            return;\n        }\n        this.cssModel = cssModel;\n        this.cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetAdded, this.scheduleMediaQueriesUpdate, this);\n        this.cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetRemoved, this.scheduleMediaQueriesUpdate, this);\n        this.cssModel.addEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.scheduleMediaQueriesUpdate, this);\n        this.cssModel.addEventListener(SDK.CSSModel.Events.MediaQueryResultChanged, this.scheduleMediaQueriesUpdate, this);\n    }\n    modelRemoved(cssModel) {\n        if (cssModel !== this.cssModel) {\n            return;\n        }\n        this.cssModel.removeEventListener(SDK.CSSModel.Events.StyleSheetAdded, this.scheduleMediaQueriesUpdate, this);\n        this.cssModel.removeEventListener(SDK.CSSModel.Events.StyleSheetRemoved, this.scheduleMediaQueriesUpdate, this);\n        this.cssModel.removeEventListener(SDK.CSSModel.Events.StyleSheetChanged, this.scheduleMediaQueriesUpdate, this);\n        this.cssModel.removeEventListener(SDK.CSSModel.Events.MediaQueryResultChanged, this.scheduleMediaQueriesUpdate, this);\n        delete this.cssModel;\n    }\n    setAxisTransform(scale) {\n        if (Math.abs(this.scale - scale) < 1e-8) {\n            return;\n        }\n        this.scale = scale;\n        this.renderMediaQueries();\n    }\n    onMediaQueryClicked(event) {\n        const mediaQueryMarker = event.target.enclosingNodeOrSelfWithClass('media-inspector-bar');\n        if (!mediaQueryMarker) {\n            return;\n        }\n        const model = this.elementsToMediaQueryModel.get(mediaQueryMarker);\n        if (!model) {\n            return;\n        }\n        const modelMaxWidth = model.maxWidthExpression();\n        const modelMinWidth = model.minWidthExpression();\n        if (model.section() === 0 /* Section.MAX */) {\n            this.setWidthCallback(modelMaxWidth ? modelMaxWidth.computedLength() || 0 : 0);\n            return;\n        }\n        if (model.section() === 2 /* Section.MIN */) {\n            this.setWidthCallback(modelMinWidth ? modelMinWidth.computedLength() || 0 : 0);\n            return;\n        }\n        const currentWidth = this.getWidthCallback();\n        if (modelMinWidth && currentWidth !== modelMinWidth.computedLength()) {\n            this.setWidthCallback(modelMinWidth.computedLength() || 0);\n        }\n        else {\n            this.setWidthCallback(modelMaxWidth ? modelMaxWidth.computedLength() || 0 : 0);\n        }\n    }\n    onContextMenu(event) {\n        if (!this.cssModel || !this.cssModel.isEnabled()) {\n            return;\n        }\n        const mediaQueryMarker = event.target.enclosingNodeOrSelfWithClass('media-inspector-bar');\n        if (!mediaQueryMarker) {\n            return;\n        }\n        const locations = this.elementsToCSSLocations.get(mediaQueryMarker) || [];\n        const uiLocations = new Map();\n        for (let i = 0; i < locations.length; ++i) {\n            const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().rawLocationToUILocation(locations[i]);\n            if (!uiLocation) {\n                continue;\n            }\n            const descriptor = typeof uiLocation.columnNumber === 'number' ?\n                Platform.StringUtilities.sprintf('%s:%d:%d', uiLocation.uiSourceCode.url(), uiLocation.lineNumber + 1, uiLocation.columnNumber + 1) :\n                Platform.StringUtilities.sprintf('%s:%d', uiLocation.uiSourceCode.url(), uiLocation.lineNumber + 1);\n            uiLocations.set(descriptor, uiLocation);\n        }\n        const contextMenuItems = [...uiLocations.keys()].sort();\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        const subMenuItem = contextMenu.defaultSection().appendSubMenuItem(i18nString(UIStrings.revealInSourceCode), undefined, 'reveal-in-source-list');\n        for (let i = 0; i < contextMenuItems.length; ++i) {\n            const title = contextMenuItems[i];\n            subMenuItem.defaultSection().appendItem(title, this.revealSourceLocation.bind(this, uiLocations.get(title)), { jslogContext: 'reveal-in-source' });\n        }\n        void contextMenu.show();\n    }\n    revealSourceLocation(location) {\n        void Common.Revealer.reveal(location);\n    }\n    scheduleMediaQueriesUpdate() {\n        if (!this.isShowing()) {\n            return;\n        }\n        void this.mediaThrottler.schedule(this.refetchMediaQueries.bind(this));\n    }\n    refetchMediaQueries() {\n        if (!this.isShowing() || !this.cssModel) {\n            return Promise.resolve();\n        }\n        return this.cssModel.getMediaQueries().then(this.rebuildMediaQueries.bind(this));\n    }\n    squashAdjacentEqual(models) {\n        const filtered = [];\n        for (let i = 0; i < models.length; ++i) {\n            const last = filtered[filtered.length - 1];\n            if (!last || !last.equals(models[i])) {\n                filtered.push(models[i]);\n            }\n        }\n        return filtered;\n    }\n    rebuildMediaQueries(cssMedias) {\n        let queryModels = [];\n        for (let i = 0; i < cssMedias.length; ++i) {\n            const cssMedia = cssMedias[i];\n            if (!cssMedia.mediaList) {\n                continue;\n            }\n            for (let j = 0; j < cssMedia.mediaList.length; ++j) {\n                const mediaQuery = cssMedia.mediaList[j];\n                const queryModel = MediaQueryUIModel.createFromMediaQuery(cssMedia, mediaQuery);\n                if (queryModel) {\n                    queryModels.push(queryModel);\n                }\n            }\n        }\n        queryModels.sort(compareModels);\n        queryModels = this.squashAdjacentEqual(queryModels);\n        let allEqual = this.cachedQueryModels && this.cachedQueryModels.length === queryModels.length;\n        for (let i = 0; allEqual && i < queryModels.length; ++i) {\n            allEqual = allEqual && this.cachedQueryModels && this.cachedQueryModels[i].equals(queryModels[i]);\n        }\n        if (allEqual) {\n            return;\n        }\n        this.cachedQueryModels = queryModels;\n        this.renderMediaQueries();\n        function compareModels(model1, model2) {\n            return model1.compareTo(model2);\n        }\n    }\n    renderMediaQueries() {\n        if (!this.cachedQueryModels || !this.isShowing()) {\n            return;\n        }\n        const markers = [];\n        let lastMarker = null;\n        for (const model of this.cachedQueryModels) {\n            if (lastMarker && lastMarker.model.dimensionsEqual(model)) {\n                lastMarker.active = lastMarker.active || model.active();\n            }\n            else {\n                lastMarker = {\n                    active: model.active(),\n                    model,\n                    locations: [],\n                };\n                markers.push(lastMarker);\n            }\n            const rawLocation = model.rawLocation();\n            if (rawLocation) {\n                lastMarker.locations.push(rawLocation);\n            }\n        }\n        this.contentElement.removeChildren();\n        let container = null;\n        for (let i = 0; i < markers.length; ++i) {\n            if (!i || markers[i].model.section() !== markers[i - 1].model.section()) {\n                container = this.contentElement.createChild('div', 'media-inspector-marker-container');\n            }\n            const marker = markers[i];\n            const bar = this.createElementFromMediaQueryModel(marker.model);\n            this.elementsToMediaQueryModel.set(bar, marker.model);\n            this.elementsToCSSLocations.set(bar, marker.locations);\n            bar.classList.toggle('media-inspector-marker-inactive', !marker.active);\n            if (!container) {\n                throw new Error('Could not find container to render media queries into.');\n            }\n            container.appendChild(bar);\n        }\n    }\n    zoomFactor() {\n        return UI.ZoomManager.ZoomManager.instance().zoomFactor() / this.scale;\n    }\n    wasShown() {\n        super.wasShown();\n        this.scheduleMediaQueriesUpdate();\n    }\n    createElementFromMediaQueryModel(model) {\n        const zoomFactor = this.zoomFactor();\n        const minWidthExpression = model.minWidthExpression();\n        const maxWidthExpression = model.maxWidthExpression();\n        const minWidthValue = minWidthExpression ? (minWidthExpression.computedLength() || 0) / zoomFactor : 0;\n        const maxWidthValue = maxWidthExpression ? (maxWidthExpression.computedLength() || 0) / zoomFactor : 0;\n        const result = document.createElement('div');\n        result.classList.add('media-inspector-bar');\n        if (model.section() === 0 /* Section.MAX */) {\n            result.createChild('div', 'media-inspector-marker-spacer');\n            const markerElement = result.createChild('div', 'media-inspector-marker media-inspector-marker-max-width');\n            markerElement.style.width = maxWidthValue + 'px';\n            UI.Tooltip.Tooltip.install(markerElement, model.mediaText());\n            appendLabel(markerElement, model.maxWidthExpression(), false, false);\n            appendLabel(markerElement, model.maxWidthExpression(), true, true);\n            result.createChild('div', 'media-inspector-marker-spacer');\n        }\n        if (model.section() === 1 /* Section.MIN_MAX */) {\n            result.createChild('div', 'media-inspector-marker-spacer');\n            const leftElement = result.createChild('div', 'media-inspector-marker media-inspector-marker-min-max-width');\n            leftElement.style.width = (maxWidthValue - minWidthValue) * 0.5 + 'px';\n            UI.Tooltip.Tooltip.install(leftElement, model.mediaText());\n            appendLabel(leftElement, model.maxWidthExpression(), true, false);\n            appendLabel(leftElement, model.minWidthExpression(), false, true);\n            result.createChild('div', 'media-inspector-marker-spacer').style.flex = '0 0 ' + minWidthValue + 'px';\n            const rightElement = result.createChild('div', 'media-inspector-marker media-inspector-marker-min-max-width');\n            rightElement.style.width = (maxWidthValue - minWidthValue) * 0.5 + 'px';\n            UI.Tooltip.Tooltip.install(rightElement, model.mediaText());\n            appendLabel(rightElement, model.minWidthExpression(), true, false);\n            appendLabel(rightElement, model.maxWidthExpression(), false, true);\n            result.createChild('div', 'media-inspector-marker-spacer');\n        }\n        if (model.section() === 2 /* Section.MIN */) {\n            const leftElement = result.createChild('div', 'media-inspector-marker media-inspector-marker-min-width media-inspector-marker-min-width-left');\n            UI.Tooltip.Tooltip.install(leftElement, model.mediaText());\n            appendLabel(leftElement, model.minWidthExpression(), false, false);\n            result.createChild('div', 'media-inspector-marker-spacer').style.flex = '0 0 ' + minWidthValue + 'px';\n            const rightElement = result.createChild('div', 'media-inspector-marker media-inspector-marker-min-width media-inspector-marker-min-width-right');\n            UI.Tooltip.Tooltip.install(rightElement, model.mediaText());\n            appendLabel(rightElement, model.minWidthExpression(), true, true);\n        }\n        function appendLabel(marker, expression, atLeft, leftAlign) {\n            if (!expression) {\n                return;\n            }\n            marker\n                .createChild('div', 'media-inspector-marker-label-container ' +\n                (atLeft ? 'media-inspector-marker-label-container-left' :\n                    'media-inspector-marker-label-container-right'))\n                .createChild('span', 'media-inspector-marker-label ' +\n                (leftAlign ? 'media-inspector-label-left' : 'media-inspector-label-right'))\n                .textContent = expression.value() + expression.unit();\n        }\n        return result;\n    }\n}\nexport class MediaQueryUIModel {\n    cssMedia;\n    minWidthExpressionInternal;\n    maxWidthExpressionInternal;\n    activeInternal;\n    sectionInternal;\n    rawLocationInternal;\n    constructor(cssMedia, minWidthExpression, maxWidthExpression, active) {\n        this.cssMedia = cssMedia;\n        this.minWidthExpressionInternal = minWidthExpression;\n        this.maxWidthExpressionInternal = maxWidthExpression;\n        this.activeInternal = active;\n        if (maxWidthExpression && !minWidthExpression) {\n            this.sectionInternal = 0 /* Section.MAX */;\n        }\n        else if (minWidthExpression && maxWidthExpression) {\n            this.sectionInternal = 1 /* Section.MIN_MAX */;\n        }\n        else {\n            this.sectionInternal = 2 /* Section.MIN */;\n        }\n    }\n    static createFromMediaQuery(cssMedia, mediaQuery) {\n        let maxWidthExpression = null;\n        let maxWidthPixels = Number.MAX_VALUE;\n        let minWidthExpression = null;\n        let minWidthPixels = Number.MIN_VALUE;\n        const expressions = mediaQuery.expressions();\n        if (!expressions) {\n            return null;\n        }\n        for (let i = 0; i < expressions.length; ++i) {\n            const expression = expressions[i];\n            const feature = expression.feature();\n            if (feature.indexOf('width') === -1) {\n                continue;\n            }\n            const pixels = expression.computedLength();\n            if (feature.startsWith('max-') && pixels && pixels < maxWidthPixels) {\n                maxWidthExpression = expression;\n                maxWidthPixels = pixels;\n            }\n            else if (feature.startsWith('min-') && pixels && pixels > minWidthPixels) {\n                minWidthExpression = expression;\n                minWidthPixels = pixels;\n            }\n        }\n        if (minWidthPixels > maxWidthPixels || (!maxWidthExpression && !minWidthExpression)) {\n            return null;\n        }\n        return new MediaQueryUIModel(cssMedia, minWidthExpression, maxWidthExpression, mediaQuery.active());\n    }\n    equals(other) {\n        return this.compareTo(other) === 0;\n    }\n    dimensionsEqual(other) {\n        const thisMinWidthExpression = this.minWidthExpression();\n        const otherMinWidthExpression = other.minWidthExpression();\n        const thisMaxWidthExpression = this.maxWidthExpression();\n        const otherMaxWidthExpression = other.maxWidthExpression();\n        const sectionsEqual = this.section() === other.section();\n        // If there isn't an other min width expression, they aren't equal, so the optional chaining operator is safe to use here.\n        const minWidthEqual = !thisMinWidthExpression ||\n            thisMinWidthExpression.computedLength() === otherMinWidthExpression?.computedLength();\n        const maxWidthEqual = !thisMaxWidthExpression ||\n            thisMaxWidthExpression.computedLength() === otherMaxWidthExpression?.computedLength();\n        return sectionsEqual && minWidthEqual && maxWidthEqual;\n    }\n    compareTo(other) {\n        if (this.section() !== other.section()) {\n            return this.section() - other.section();\n        }\n        if (this.dimensionsEqual(other)) {\n            const myLocation = this.rawLocation();\n            const otherLocation = other.rawLocation();\n            if (!myLocation && !otherLocation) {\n                return Platform.StringUtilities.compare(this.mediaText(), other.mediaText());\n            }\n            if (myLocation && !otherLocation) {\n                return 1;\n            }\n            if (!myLocation && otherLocation) {\n                return -1;\n            }\n            if (this.active() !== other.active()) {\n                return this.active() ? -1 : 1;\n            }\n            if (!myLocation || !otherLocation) {\n                // This conditional never runs, because it's dealt with above, but\n                // TypeScript can't follow that by this point both myLocation and\n                // otherLocation must exist.\n                return 0;\n            }\n            return Platform.StringUtilities.compare(myLocation.url, otherLocation.url) ||\n                myLocation.lineNumber - otherLocation.lineNumber || myLocation.columnNumber - otherLocation.columnNumber;\n        }\n        const thisMaxWidthExpression = this.maxWidthExpression();\n        const otherMaxWidthExpression = other.maxWidthExpression();\n        const thisMaxLength = thisMaxWidthExpression ? thisMaxWidthExpression.computedLength() || 0 : 0;\n        const otherMaxLength = otherMaxWidthExpression ? otherMaxWidthExpression.computedLength() || 0 : 0;\n        const thisMinWidthExpression = this.minWidthExpression();\n        const otherMinWidthExpression = other.minWidthExpression();\n        const thisMinLength = thisMinWidthExpression ? thisMinWidthExpression.computedLength() || 0 : 0;\n        const otherMinLength = otherMinWidthExpression ? otherMinWidthExpression.computedLength() || 0 : 0;\n        if (this.section() === 0 /* Section.MAX */) {\n            return otherMaxLength - thisMaxLength;\n        }\n        if (this.section() === 2 /* Section.MIN */) {\n            return thisMinLength - otherMinLength;\n        }\n        return thisMinLength - otherMinLength || otherMaxLength - thisMaxLength;\n    }\n    section() {\n        return this.sectionInternal;\n    }\n    mediaText() {\n        return this.cssMedia.text || '';\n    }\n    rawLocation() {\n        if (!this.rawLocationInternal) {\n            this.rawLocationInternal = this.cssMedia.rawLocation();\n        }\n        return this.rawLocationInternal;\n    }\n    minWidthExpression() {\n        return this.minWidthExpressionInternal;\n    }\n    maxWidthExpression() {\n        return this.maxWidthExpressionInternal;\n    }\n    active() {\n        return this.activeInternal;\n    }\n}\n//# sourceMappingURL=MediaQueryInspector.js.map","// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as EmulationModel from '../../models/emulation/emulation.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { DeviceModeToolbar } from './DeviceModeToolbar.js';\nimport deviceModeViewStyles from './deviceModeView.css.legacy.js';\nimport { MediaQueryInspector } from './MediaQueryInspector.js';\nconst UIStrings = {\n    /**\n     *@description Bottom resizer element title in Device Mode View of the Device Toolbar\n     */\n    doubleclickForFullHeight: 'Double-click for full height',\n    /**\n     * @description Name of a device that the user can select to emulate. Small mobile device.\n     * Translation of this phrase should be limited to 10 characters.\n     */\n    mobileS: 'Mobile S',\n    /**\n     * @description Name of a device that the user can select to emulate. Medium mobile device.\n     * Translation of this phrase should be limited to 10 characters.\n     */\n    mobileM: 'Mobile M',\n    /**\n     * @description Name of a device that the user can select to emulate. Large mobile device.\n     * Translation of this phrase should be limited to 10 characters.\n     */\n    mobileL: 'Mobile L',\n    /**\n     * @description Name of a device that the user can select to emulate. Tablet device.\n     * Translation of this phrase should be limited to 10 characters.\n     */\n    tablet: 'Tablet',\n    /**\n     * @description Name of a device that the user can select to emulate. Laptop device.\n     * Translation of this phrase should be limited to 10 characters.\n     */\n    laptop: 'Laptop',\n    /**\n     * @description Name of a device that the user can select to emulate. Large laptop device.\n     * Translation of this phrase should be limited to 10 characters.\n     */\n    laptopL: 'Laptop L',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/emulation/DeviceModeView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class DeviceModeView extends UI.Widget.VBox {\n    wrapperInstance;\n    blockElementToWidth;\n    model;\n    mediaInspector;\n    showMediaInspectorSetting;\n    showRulersSetting;\n    topRuler;\n    leftRuler;\n    presetBlocks;\n    responsivePresetsContainer;\n    screenArea;\n    pageArea;\n    outlineImage;\n    contentClip;\n    contentArea;\n    rightResizerElement;\n    leftResizerElement;\n    bottomResizerElement;\n    bottomRightResizerElement;\n    bottomLeftResizerElement;\n    cachedResizable;\n    mediaInspectorContainer;\n    screenImage;\n    toolbar;\n    slowPositionStart;\n    resizeStart;\n    cachedCssScreenRect;\n    cachedCssVisiblePageRect;\n    cachedOutlineRect;\n    cachedMediaInspectorVisible;\n    cachedShowRulers;\n    cachedScale;\n    handleWidth;\n    handleHeight;\n    constructor() {\n        super(true);\n        this.blockElementToWidth = new WeakMap();\n        this.setMinimumSize(150, 150);\n        this.element.classList.add('device-mode-view');\n        this.registerRequiredCSS(deviceModeViewStyles);\n        this.model = EmulationModel.DeviceModeModel.DeviceModeModel.instance();\n        this.model.addEventListener(\"Updated\" /* EmulationModel.DeviceModeModel.Events.UPDATED */, this.updateUI, this);\n        this.mediaInspector = new MediaQueryInspector(() => this.model.appliedDeviceSize().width, this.model.setWidth.bind(this.model), new Common.Throttler.Throttler(0));\n        this.showMediaInspectorSetting = Common.Settings.Settings.instance().moduleSetting('show-media-query-inspector');\n        this.showMediaInspectorSetting.addChangeListener(this.updateUI, this);\n        this.showRulersSetting = Common.Settings.Settings.instance().moduleSetting('emulation.show-rulers');\n        this.showRulersSetting.addChangeListener(this.updateUI, this);\n        this.topRuler = new Ruler(true, this.model.setWidthAndScaleToFit.bind(this.model));\n        this.topRuler.element.classList.add('device-mode-ruler-top');\n        this.leftRuler = new Ruler(false, this.model.setHeightAndScaleToFit.bind(this.model));\n        this.leftRuler.element.classList.add('device-mode-ruler-left');\n        this.createUI();\n        UI.ZoomManager.ZoomManager.instance().addEventListener(\"ZoomChanged\" /* UI.ZoomManager.Events.ZOOM_CHANGED */, this.zoomChanged, this);\n    }\n    createUI() {\n        this.toolbar = new DeviceModeToolbar(this.model, this.showMediaInspectorSetting, this.showRulersSetting);\n        this.contentElement.appendChild(this.toolbar.element());\n        this.contentClip = this.contentElement.createChild('div', 'device-mode-content-clip vbox');\n        this.responsivePresetsContainer =\n            this.contentClip.createChild('div', 'device-mode-presets-container');\n        this.responsivePresetsContainer.setAttribute('jslog', `${VisualLogging.responsivePresets()}`);\n        this.populatePresetsContainer();\n        this.mediaInspectorContainer = this.contentClip.createChild('div', 'device-mode-media-container');\n        this.contentArea = this.contentClip.createChild('div', 'device-mode-content-area');\n        this.outlineImage = this.contentArea.createChild('img', 'device-mode-outline-image hidden fill');\n        this.outlineImage.addEventListener('load', this.onImageLoaded.bind(this, this.outlineImage, true), false);\n        this.outlineImage.addEventListener('error', this.onImageLoaded.bind(this, this.outlineImage, false), false);\n        this.screenArea = this.contentArea.createChild('div', 'device-mode-screen-area');\n        this.screenImage = this.screenArea.createChild('img', 'device-mode-screen-image hidden');\n        this.screenImage.addEventListener('load', this.onImageLoaded.bind(this, this.screenImage, true), false);\n        this.screenImage.addEventListener('error', this.onImageLoaded.bind(this, this.screenImage, false), false);\n        this.bottomRightResizerElement =\n            this.screenArea.createChild('div', 'device-mode-resizer device-mode-bottom-right-resizer');\n        this.bottomRightResizerElement.createChild('div', '');\n        this.createResizer(this.bottomRightResizerElement, 2, 1);\n        this.bottomLeftResizerElement =\n            this.screenArea.createChild('div', 'device-mode-resizer device-mode-bottom-left-resizer');\n        this.bottomLeftResizerElement.createChild('div', '');\n        this.createResizer(this.bottomLeftResizerElement, -2, 1);\n        this.rightResizerElement =\n            this.screenArea.createChild('div', 'device-mode-resizer device-mode-right-resizer');\n        this.rightResizerElement.createChild('div', '');\n        this.createResizer(this.rightResizerElement, 2, 0);\n        this.leftResizerElement =\n            this.screenArea.createChild('div', 'device-mode-resizer device-mode-left-resizer');\n        this.leftResizerElement.createChild('div', '');\n        this.createResizer(this.leftResizerElement, -2, 0);\n        this.bottomResizerElement =\n            this.screenArea.createChild('div', 'device-mode-resizer device-mode-bottom-resizer');\n        this.bottomResizerElement.createChild('div', '');\n        this.createResizer(this.bottomResizerElement, 0, 1);\n        this.bottomResizerElement.addEventListener('dblclick', this.model.setHeight.bind(this.model, 0), false);\n        UI.Tooltip.Tooltip.install(this.bottomResizerElement, i18nString(UIStrings.doubleclickForFullHeight));\n        this.pageArea = this.screenArea.createChild('div', 'device-mode-page-area');\n        this.pageArea.createChild('slot');\n    }\n    populatePresetsContainer() {\n        const sizes = [320, 375, 425, 768, 1024, 1440, 2560];\n        const titles = [\n            i18nString(UIStrings.mobileS),\n            i18nString(UIStrings.mobileM),\n            i18nString(UIStrings.mobileL),\n            i18nString(UIStrings.tablet),\n            i18nString(UIStrings.laptop),\n            i18nString(UIStrings.laptopL),\n            '4K',\n        ];\n        this.presetBlocks = [];\n        const inner = this.responsivePresetsContainer.createChild('div', 'device-mode-presets-container-inner');\n        for (let i = sizes.length - 1; i >= 0; --i) {\n            const outer = inner.createChild('div', 'fill device-mode-preset-bar-outer');\n            const block = outer.createChild('div', 'device-mode-preset-bar');\n            block.createChild('span').textContent = titles[i] + ' \\u2013 ' + sizes[i] + 'px';\n            block.setAttribute('jslog', `${VisualLogging.action().track({ click: true }).context(`device-mode-preset-${sizes[i]}px`)}`);\n            block.addEventListener('click', applySize.bind(this, sizes[i]), false);\n            this.blockElementToWidth.set(block, sizes[i]);\n            this.presetBlocks.push(block);\n        }\n        function applySize(width, e) {\n            this.model.emulate(EmulationModel.DeviceModeModel.Type.Responsive, null, null);\n            this.model.setWidthAndScaleToFit(width);\n            e.consume();\n        }\n    }\n    createResizer(element, widthFactor, heightFactor) {\n        const resizer = new UI.ResizerWidget.ResizerWidget();\n        element.setAttribute('jslog', `${VisualLogging.slider('device-mode-resizer').track({ drag: true })}`);\n        resizer.addElement(element);\n        let cursor = widthFactor ? 'ew-resize' : 'ns-resize';\n        if (widthFactor * heightFactor > 0) {\n            cursor = 'nwse-resize';\n        }\n        if (widthFactor * heightFactor < 0) {\n            cursor = 'nesw-resize';\n        }\n        resizer.setCursor(cursor);\n        resizer.addEventListener(\"ResizeStart\" /* UI.ResizerWidget.Events.RESIZE_START */, this.onResizeStart, this);\n        resizer.addEventListener(\"ResizeUpdateXY\" /* UI.ResizerWidget.Events.RESIZE_UPDATE_XY */, this.onResizeUpdate.bind(this, widthFactor, heightFactor));\n        resizer.addEventListener(\"ResizeEnd\" /* UI.ResizerWidget.Events.RESIZE_END */, this.onResizeEnd, this);\n        return resizer;\n    }\n    onResizeStart() {\n        this.slowPositionStart = null;\n        const rect = this.model.screenRect();\n        this.resizeStart = new UI.Geometry.Size(rect.width, rect.height);\n    }\n    onResizeUpdate(widthFactor, heightFactor, event) {\n        if (event.data.shiftKey !== Boolean(this.slowPositionStart)) {\n            this.slowPositionStart = event.data.shiftKey ? { x: event.data.currentX, y: event.data.currentY } : null;\n        }\n        let cssOffsetX = event.data.currentX - event.data.startX;\n        let cssOffsetY = event.data.currentY - event.data.startY;\n        if (this.slowPositionStart) {\n            cssOffsetX = (event.data.currentX - this.slowPositionStart.x) / 10 + this.slowPositionStart.x - event.data.startX;\n            cssOffsetY = (event.data.currentY - this.slowPositionStart.y) / 10 + this.slowPositionStart.y - event.data.startY;\n        }\n        if (widthFactor && this.resizeStart) {\n            const dipOffsetX = cssOffsetX * UI.ZoomManager.ZoomManager.instance().zoomFactor();\n            let newWidth = this.resizeStart.width + dipOffsetX * widthFactor;\n            newWidth = Math.round(newWidth / this.model.scale());\n            if (newWidth >= EmulationModel.DeviceModeModel.MinDeviceSize &&\n                newWidth <= EmulationModel.DeviceModeModel.MaxDeviceSize) {\n                this.model.setWidth(newWidth);\n            }\n        }\n        if (heightFactor && this.resizeStart) {\n            const dipOffsetY = cssOffsetY * UI.ZoomManager.ZoomManager.instance().zoomFactor();\n            let newHeight = this.resizeStart.height + dipOffsetY * heightFactor;\n            newHeight = Math.round(newHeight / this.model.scale());\n            if (newHeight >= EmulationModel.DeviceModeModel.MinDeviceSize &&\n                newHeight <= EmulationModel.DeviceModeModel.MaxDeviceSize) {\n                this.model.setHeight(newHeight);\n            }\n        }\n    }\n    exitHingeMode() {\n        if (this.model) {\n            this.model.exitHingeMode();\n        }\n    }\n    onResizeEnd() {\n        delete this.resizeStart;\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.ResizedViewInResponsiveMode);\n    }\n    updateUI() {\n        function applyRect(element, rect) {\n            element.style.left = rect.left + 'px';\n            element.style.top = rect.top + 'px';\n            element.style.width = rect.width + 'px';\n            element.style.height = rect.height + 'px';\n        }\n        if (!this.isShowing()) {\n            return;\n        }\n        const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n        let callDoResize = false;\n        const showRulers = this.showRulersSetting.get() && this.model.type() !== EmulationModel.DeviceModeModel.Type.None;\n        let contentAreaResized = false;\n        let updateRulers = false;\n        const cssScreenRect = this.model.screenRect().scale(1 / zoomFactor);\n        if (!this.cachedCssScreenRect || !cssScreenRect.isEqual(this.cachedCssScreenRect)) {\n            applyRect(this.screenArea, cssScreenRect);\n            updateRulers = true;\n            callDoResize = true;\n            this.cachedCssScreenRect = cssScreenRect;\n        }\n        const cssVisiblePageRect = this.model.visiblePageRect().scale(1 / zoomFactor);\n        if (!this.cachedCssVisiblePageRect || !cssVisiblePageRect.isEqual(this.cachedCssVisiblePageRect)) {\n            applyRect(this.pageArea, cssVisiblePageRect);\n            callDoResize = true;\n            this.cachedCssVisiblePageRect = cssVisiblePageRect;\n        }\n        const outlineRectFromModel = this.model.outlineRect();\n        if (outlineRectFromModel) {\n            const outlineRect = outlineRectFromModel.scale(1 / zoomFactor);\n            if (!this.cachedOutlineRect || !outlineRect.isEqual(this.cachedOutlineRect)) {\n                applyRect(this.outlineImage, outlineRect);\n                callDoResize = true;\n                this.cachedOutlineRect = outlineRect;\n            }\n        }\n        this.contentClip.classList.toggle('device-mode-outline-visible', Boolean(this.model.outlineImage()));\n        const resizable = this.model.type() === EmulationModel.DeviceModeModel.Type.Responsive;\n        if (resizable !== this.cachedResizable) {\n            this.rightResizerElement.classList.toggle('hidden', !resizable);\n            this.leftResizerElement.classList.toggle('hidden', !resizable);\n            this.bottomResizerElement.classList.toggle('hidden', !resizable);\n            this.bottomRightResizerElement.classList.toggle('hidden', !resizable);\n            this.bottomLeftResizerElement.classList.toggle('hidden', !resizable);\n            this.cachedResizable = resizable;\n        }\n        const mediaInspectorVisible = this.showMediaInspectorSetting.get() && this.model.type() !== EmulationModel.DeviceModeModel.Type.None;\n        if (mediaInspectorVisible !== this.cachedMediaInspectorVisible) {\n            if (mediaInspectorVisible) {\n                this.mediaInspector.show(this.mediaInspectorContainer);\n            }\n            else {\n                this.mediaInspector.detach();\n            }\n            contentAreaResized = true;\n            callDoResize = true;\n            this.cachedMediaInspectorVisible = mediaInspectorVisible;\n        }\n        if (showRulers !== this.cachedShowRulers) {\n            this.contentClip.classList.toggle('device-mode-rulers-visible', showRulers);\n            if (showRulers) {\n                this.topRuler.show(this.contentArea);\n                this.leftRuler.show(this.contentArea);\n            }\n            else {\n                this.topRuler.detach();\n                this.leftRuler.detach();\n            }\n            contentAreaResized = true;\n            callDoResize = true;\n            this.cachedShowRulers = showRulers;\n        }\n        if (this.model.scale() !== this.cachedScale) {\n            updateRulers = true;\n            callDoResize = true;\n            for (const block of this.presetBlocks) {\n                const blockWidth = this.blockElementToWidth.get(block);\n                if (!blockWidth) {\n                    throw new Error('Could not get width for block.');\n                }\n                block.style.width = blockWidth * this.model.scale() + 'px';\n            }\n            this.cachedScale = this.model.scale();\n        }\n        this.toolbar.update();\n        this.loadImage(this.screenImage, this.model.screenImage());\n        this.loadImage(this.outlineImage, this.model.outlineImage());\n        this.mediaInspector.setAxisTransform(this.model.scale());\n        if (callDoResize) {\n            this.doResize();\n        }\n        if (updateRulers) {\n            this.topRuler.render(this.model.scale());\n            this.leftRuler.render(this.model.scale());\n            this.topRuler.element.positionAt(this.cachedCssScreenRect ? this.cachedCssScreenRect.left : 0, this.cachedCssScreenRect ? this.cachedCssScreenRect.top : 0);\n            this.leftRuler.element.positionAt(this.cachedCssScreenRect ? this.cachedCssScreenRect.left : 0, this.cachedCssScreenRect ? this.cachedCssScreenRect.top : 0);\n        }\n        if (contentAreaResized) {\n            this.contentAreaResized();\n        }\n    }\n    loadImage(element, srcset) {\n        if (element.getAttribute('srcset') === srcset) {\n            return;\n        }\n        element.setAttribute('srcset', srcset);\n        if (!srcset) {\n            element.classList.toggle('hidden', true);\n        }\n    }\n    onImageLoaded(element, success) {\n        element.classList.toggle('hidden', !success);\n    }\n    setNonEmulatedAvailableSize(element) {\n        if (this.model.type() !== EmulationModel.DeviceModeModel.Type.None) {\n            return;\n        }\n        const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n        const rect = element.getBoundingClientRect();\n        const availableSize = new UI.Geometry.Size(Math.max(rect.width * zoomFactor, 1), Math.max(rect.height * zoomFactor, 1));\n        this.model.setAvailableSize(availableSize, availableSize);\n    }\n    contentAreaResized() {\n        const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n        const rect = this.contentArea.getBoundingClientRect();\n        const availableSize = new UI.Geometry.Size(Math.max(rect.width * zoomFactor, 1), Math.max(rect.height * zoomFactor, 1));\n        const preferredSize = new UI.Geometry.Size(Math.max((rect.width - 2 * (this.handleWidth || 0)) * zoomFactor, 1), Math.max((rect.height - (this.handleHeight || 0)) * zoomFactor, 1));\n        this.model.setAvailableSize(availableSize, preferredSize);\n    }\n    measureHandles() {\n        const hidden = this.rightResizerElement.classList.contains('hidden');\n        this.rightResizerElement.classList.toggle('hidden', false);\n        this.bottomResizerElement.classList.toggle('hidden', false);\n        this.handleWidth = this.rightResizerElement.offsetWidth;\n        this.handleHeight = this.bottomResizerElement.offsetHeight;\n        this.rightResizerElement.classList.toggle('hidden', hidden);\n        this.bottomResizerElement.classList.toggle('hidden', hidden);\n    }\n    zoomChanged() {\n        delete this.handleWidth;\n        delete this.handleHeight;\n        if (this.isShowing()) {\n            this.measureHandles();\n            this.contentAreaResized();\n        }\n    }\n    onResize() {\n        if (this.isShowing()) {\n            this.contentAreaResized();\n        }\n    }\n    wasShown() {\n        this.measureHandles();\n        this.toolbar.restore();\n    }\n    willHide() {\n        this.model.emulate(EmulationModel.DeviceModeModel.Type.None, null, null);\n    }\n    async captureScreenshot() {\n        const screenshot = await this.model.captureScreenshot(false);\n        if (screenshot === null) {\n            return;\n        }\n        const pageImage = new Image();\n        pageImage.src = 'data:image/png;base64,' + screenshot;\n        pageImage.onload = async () => {\n            const scale = pageImage.naturalWidth / this.model.screenRect().width;\n            const outlineRectFromModel = this.model.outlineRect();\n            if (!outlineRectFromModel) {\n                throw new Error('Unable to take screenshot: no outlineRect available.');\n            }\n            const outlineRect = outlineRectFromModel.scale(scale);\n            const screenRect = this.model.screenRect().scale(scale);\n            const visiblePageRect = this.model.visiblePageRect().scale(scale);\n            const contentLeft = screenRect.left + visiblePageRect.left - outlineRect.left;\n            const contentTop = screenRect.top + visiblePageRect.top - outlineRect.top;\n            const canvas = document.createElement('canvas');\n            canvas.width = Math.floor(outlineRect.width);\n            // Cap the height to not hit the GPU limit.\n            // https://crbug.com/1260828\n            canvas.height = Math.min((1 << 14), Math.floor(outlineRect.height));\n            const ctx = canvas.getContext('2d');\n            if (!ctx) {\n                throw new Error('Could not get 2d context from canvas.');\n            }\n            ctx.imageSmoothingEnabled = false;\n            if (this.model.outlineImage()) {\n                await this.paintImage(ctx, this.model.outlineImage(), outlineRect.relativeTo(outlineRect));\n            }\n            if (this.model.screenImage()) {\n                await this.paintImage(ctx, this.model.screenImage(), screenRect.relativeTo(outlineRect));\n            }\n            ctx.drawImage(pageImage, Math.floor(contentLeft), Math.floor(contentTop));\n            this.saveScreenshot(canvas);\n        };\n    }\n    async captureFullSizeScreenshot() {\n        const screenshot = await this.model.captureScreenshot(true);\n        if (screenshot === null) {\n            return;\n        }\n        return this.saveScreenshotBase64(screenshot);\n    }\n    async captureAreaScreenshot(clip) {\n        const screenshot = await this.model.captureScreenshot(false, clip);\n        if (screenshot === null) {\n            return;\n        }\n        return this.saveScreenshotBase64(screenshot);\n    }\n    saveScreenshotBase64(screenshot) {\n        const pageImage = new Image();\n        pageImage.src = 'data:image/png;base64,' + screenshot;\n        pageImage.onload = () => {\n            const canvas = document.createElement('canvas');\n            canvas.width = pageImage.naturalWidth;\n            // Cap the height to not hit the GPU limit.\n            // https://crbug.com/1260828\n            canvas.height = Math.min((1 << 14), Math.floor(pageImage.naturalHeight));\n            const ctx = canvas.getContext('2d');\n            if (!ctx) {\n                throw new Error('Could not get 2d context for base64 screenshot.');\n            }\n            ctx.imageSmoothingEnabled = false;\n            ctx.drawImage(pageImage, 0, 0);\n            this.saveScreenshot(canvas);\n        };\n    }\n    paintImage(ctx, src, rect) {\n        return new Promise(resolve => {\n            const image = new Image();\n            image.crossOrigin = 'Anonymous';\n            image.srcset = src;\n            image.onerror = () => resolve();\n            image.onload = () => {\n                ctx.drawImage(image, rect.left, rect.top, rect.width, rect.height);\n                resolve();\n            };\n        });\n    }\n    saveScreenshot(canvas) {\n        const url = this.model.inspectedURL();\n        let fileName = '';\n        if (url) {\n            const withoutFragment = Platform.StringUtilities.removeURLFragment(url);\n            fileName = Platform.StringUtilities.trimURL(withoutFragment);\n        }\n        const device = this.model.device();\n        if (device && this.model.type() === EmulationModel.DeviceModeModel.Type.Device) {\n            fileName += `(${device.title})`;\n        }\n        const link = document.createElement('a');\n        link.download = fileName + '.png';\n        canvas.toBlob(blob => {\n            if (blob === null) {\n                return;\n            }\n            link.href = URL.createObjectURL(blob);\n            link.click();\n        });\n    }\n}\nexport class Ruler extends UI.Widget.VBox {\n    contentElementInternal;\n    horizontal;\n    scale;\n    count;\n    throttler;\n    applyCallback;\n    renderedScale;\n    renderedZoomFactor;\n    constructor(horizontal, applyCallback) {\n        super();\n        this.element.classList.add('device-mode-ruler');\n        this.element.setAttribute('jslog', `${VisualLogging.deviceModeRuler().track({ click: true })}`);\n        this.contentElementInternal =\n            this.element.createChild('div', 'device-mode-ruler-content').createChild('div', 'device-mode-ruler-inner');\n        this.horizontal = horizontal;\n        this.scale = 1;\n        this.count = 0;\n        this.throttler = new Common.Throttler.Throttler(0);\n        this.applyCallback = applyCallback;\n    }\n    render(scale) {\n        this.scale = scale;\n        void this.throttler.schedule(this.update.bind(this));\n    }\n    onResize() {\n        void this.throttler.schedule(this.update.bind(this));\n    }\n    update() {\n        const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n        const size = this.horizontal ? this.contentElementInternal.offsetWidth : this.contentElementInternal.offsetHeight;\n        if (this.scale !== this.renderedScale || zoomFactor !== this.renderedZoomFactor) {\n            this.contentElementInternal.removeChildren();\n            this.count = 0;\n            this.renderedScale = this.scale;\n            this.renderedZoomFactor = zoomFactor;\n        }\n        const dipSize = size * zoomFactor / this.scale;\n        const count = Math.ceil(dipSize / 5);\n        let step = 1;\n        if (this.scale < 0.8) {\n            step = 2;\n        }\n        if (this.scale < 0.6) {\n            step = 4;\n        }\n        if (this.scale < 0.4) {\n            step = 8;\n        }\n        if (this.scale < 0.2) {\n            step = 16;\n        }\n        if (this.scale < 0.1) {\n            step = 32;\n        }\n        for (let i = count; i < this.count; i++) {\n            if (!(i % step)) {\n                const lastChild = this.contentElementInternal.lastChild;\n                if (lastChild) {\n                    lastChild.remove();\n                }\n            }\n        }\n        for (let i = this.count; i < count; i++) {\n            if (i % step) {\n                continue;\n            }\n            const marker = this.contentElementInternal.createChild('div', 'device-mode-ruler-marker');\n            if (i) {\n                if (this.horizontal) {\n                    marker.style.left = (5 * i) * this.scale / zoomFactor + 'px';\n                }\n                else {\n                    marker.style.top = (5 * i) * this.scale / zoomFactor + 'px';\n                }\n                if (!(i % 20)) {\n                    const text = marker.createChild('div', 'device-mode-ruler-text');\n                    text.textContent = String(i * 5);\n                    text.addEventListener('click', this.onMarkerClick.bind(this, i * 5), false);\n                }\n            }\n            if (!(i % 10)) {\n                marker.classList.add('device-mode-ruler-marker-large');\n            }\n            else if (!(i % 5)) {\n                marker.classList.add('device-mode-ruler-marker-medium');\n            }\n        }\n        this.count = count;\n        return Promise.resolve();\n    }\n    onMarkerClick(size) {\n        this.applyCallback.call(null, size);\n    }\n}\n//# sourceMappingURL=DeviceModeView.js.map","// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as EmulationModel from '../../models/emulation/emulation.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport { DeviceModeView } from './DeviceModeView.js';\nlet deviceModeWrapperInstance;\nexport class DeviceModeWrapper extends UI.Widget.VBox {\n    inspectedPagePlaceholder;\n    deviceModeView;\n    toggleDeviceModeAction;\n    showDeviceModeSetting;\n    constructor(inspectedPagePlaceholder) {\n        super();\n        this.inspectedPagePlaceholder = inspectedPagePlaceholder;\n        this.deviceModeView = null;\n        this.toggleDeviceModeAction = UI.ActionRegistry.ActionRegistry.instance().getAction('emulation.toggle-device-mode');\n        const model = EmulationModel.DeviceModeModel.DeviceModeModel.instance();\n        this.showDeviceModeSetting = model.enabledSetting();\n        this.showDeviceModeSetting.setRequiresUserAction(Boolean(Root.Runtime.Runtime.queryParam('hasOtherClients')));\n        this.showDeviceModeSetting.addChangeListener(this.update.bind(this, false));\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.OverlayModel.OverlayModel, \"ScreenshotRequested\" /* SDK.OverlayModel.Events.SCREENSHOT_REQUESTED */, this.screenshotRequestedFromOverlay, this);\n        this.update(true);\n    }\n    static instance(opts = { forceNew: null, inspectedPagePlaceholder: null }) {\n        const { forceNew, inspectedPagePlaceholder } = opts;\n        if (!deviceModeWrapperInstance || forceNew) {\n            if (!inspectedPagePlaceholder) {\n                throw new Error(`Unable to create DeviceModeWrapper: inspectedPagePlaceholder must be provided: ${new Error().stack}`);\n            }\n            deviceModeWrapperInstance = new DeviceModeWrapper(inspectedPagePlaceholder);\n        }\n        return deviceModeWrapperInstance;\n    }\n    toggleDeviceMode() {\n        this.showDeviceModeSetting.set(!this.showDeviceModeSetting.get());\n    }\n    isDeviceModeOn() {\n        return this.showDeviceModeSetting.get();\n    }\n    captureScreenshot(fullSize, clip) {\n        if (!this.deviceModeView) {\n            this.deviceModeView = new DeviceModeView();\n        }\n        this.deviceModeView.setNonEmulatedAvailableSize(this.inspectedPagePlaceholder.element);\n        if (fullSize) {\n            void this.deviceModeView.captureFullSizeScreenshot();\n        }\n        else if (clip) {\n            void this.deviceModeView.captureAreaScreenshot(clip);\n        }\n        else {\n            void this.deviceModeView.captureScreenshot();\n        }\n        return true;\n    }\n    screenshotRequestedFromOverlay(event) {\n        const clip = event.data;\n        this.captureScreenshot(false, clip);\n    }\n    update(force) {\n        this.toggleDeviceModeAction.setToggled(this.showDeviceModeSetting.get());\n        if (!force) {\n            const showing = this.deviceModeView && this.deviceModeView.isShowing();\n            if (this.showDeviceModeSetting.get() === showing) {\n                return;\n            }\n        }\n        if (this.showDeviceModeSetting.get()) {\n            if (!this.deviceModeView) {\n                this.deviceModeView = new DeviceModeView();\n            }\n            this.deviceModeView.show(this.element);\n            this.inspectedPagePlaceholder.clearMinimumSize();\n            this.inspectedPagePlaceholder.show(this.deviceModeView.element);\n        }\n        else {\n            if (this.deviceModeView) {\n                this.deviceModeView.exitHingeMode();\n                this.deviceModeView.detach();\n            }\n            this.inspectedPagePlaceholder.restoreMinimumSize();\n            this.inspectedPagePlaceholder.show(this.element);\n        }\n    }\n}\nexport class ActionDelegate {\n    handleAction(context, actionId) {\n        switch (actionId) {\n            case 'emulation.capture-screenshot':\n                return DeviceModeWrapper.instance().captureScreenshot();\n            case 'emulation.capture-node-screenshot': {\n                const node = context.flavor(SDK.DOMModel.DOMNode);\n                if (!node) {\n                    return true;\n                }\n                async function captureClip() {\n                    if (!node) {\n                        return;\n                    }\n                    const object = await node.resolveToObject();\n                    if (!object) {\n                        return;\n                    }\n                    const result = await object.callFunction(function () {\n                        const rect = this.getBoundingClientRect();\n                        const docRect = this.ownerDocument.documentElement.getBoundingClientRect();\n                        return JSON.stringify({\n                            x: rect.left - docRect.left,\n                            y: rect.top - docRect.top,\n                            width: rect.width,\n                            height: rect.height,\n                            scale: 1,\n                        });\n                    });\n                    if (!result.object) {\n                        throw new Error('Clipping error: could not get object data.');\n                    }\n                    const clip = (JSON.parse(result.object.value));\n                    const response = await node.domModel().target().pageAgent().invoke_getLayoutMetrics();\n                    const error = response.getError();\n                    const zoom = !error && response.visualViewport.zoom || 1;\n                    clip.x *= zoom;\n                    clip.y *= zoom;\n                    clip.width *= zoom;\n                    clip.height *= zoom;\n                    DeviceModeWrapper.instance().captureScreenshot(false, clip);\n                }\n                void captureClip();\n                return true;\n            }\n            case 'emulation.capture-full-height-screenshot':\n                return DeviceModeWrapper.instance().captureScreenshot(true);\n            case 'emulation.toggle-device-mode':\n                DeviceModeWrapper.instance().toggleDeviceMode();\n                return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=DeviceModeWrapper.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default {\n  cssContent: `/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n/*# sourceURL=inspectedPagePlaceholder.css */\n`\n};\n","// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport inspectedPagePlaceholderStyles from './inspectedPagePlaceholder.css.legacy.js';\nlet inspectedPagePlaceholderInstance;\nexport class InspectedPagePlaceholder extends Common.ObjectWrapper.eventMixin(UI.Widget.Widget) {\n    updateId;\n    constructor() {\n        super(true);\n        this.registerRequiredCSS(inspectedPagePlaceholderStyles);\n        UI.ZoomManager.ZoomManager.instance().addEventListener(\"ZoomChanged\" /* UI.ZoomManager.Events.ZOOM_CHANGED */, this.onResize, this);\n        this.restoreMinimumSize();\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!inspectedPagePlaceholderInstance || forceNew) {\n            inspectedPagePlaceholderInstance = new InspectedPagePlaceholder();\n        }\n        return inspectedPagePlaceholderInstance;\n    }\n    onResize() {\n        if (this.updateId) {\n            this.element.window().cancelAnimationFrame(this.updateId);\n        }\n        this.updateId = this.element.window().requestAnimationFrame(this.update.bind(this, false));\n    }\n    restoreMinimumSize() {\n        this.setMinimumSize(150, 150);\n    }\n    clearMinimumSize() {\n        this.setMinimumSize(1, 1);\n    }\n    dipPageRect() {\n        const zoomFactor = UI.ZoomManager.ZoomManager.instance().zoomFactor();\n        const rect = this.element.getBoundingClientRect();\n        const bodyRect = this.element.ownerDocument.body.getBoundingClientRect();\n        const left = Math.max(rect.left * zoomFactor, bodyRect.left * zoomFactor);\n        const top = Math.max(rect.top * zoomFactor, bodyRect.top * zoomFactor);\n        const bottom = Math.min(rect.bottom * zoomFactor, bodyRect.bottom * zoomFactor);\n        const right = Math.min(rect.right * zoomFactor, bodyRect.right * zoomFactor);\n        return { x: left, y: top, width: right - left, height: bottom - top };\n    }\n    update(force) {\n        delete this.updateId;\n        const rect = this.dipPageRect();\n        const bounds = {\n            x: Math.round(rect.x),\n            y: Math.round(rect.y),\n            height: Math.max(1, Math.round(rect.height)),\n            width: Math.max(1, Math.round(rect.width)),\n        };\n        if (force) {\n            // Short term fix for Lighthouse interop.\n            --bounds.height;\n            this.dispatchEventToListeners(\"Update\" /* Events.UPDATE */, bounds);\n            ++bounds.height;\n        }\n        this.dispatchEventToListeners(\"Update\" /* Events.UPDATE */, bounds);\n    }\n}\n//# sourceMappingURL=InspectedPagePlaceholder.js.map","// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Host from '../../core/host/host.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\nimport { DeviceModeWrapper } from './DeviceModeWrapper.js';\nimport { InspectedPagePlaceholder } from './InspectedPagePlaceholder.js';\nlet appInstance;\nexport class AdvancedApp {\n    rootSplitWidget;\n    deviceModeView;\n    inspectedPagePlaceholder;\n    toolboxWindow;\n    toolboxRootView;\n    changingDockSide;\n    toolboxDocument;\n    constructor() {\n        UI.DockController.DockController.instance().addEventListener(\"BeforeDockSideChanged\" /* UI.DockController.Events.BEFORE_DOCK_SIDE_CHANGED */, this.openToolboxWindow, this);\n    }\n    /**\n     * Note: it's used by toolbox.ts without real type checks.\n     */\n    static instance() {\n        if (!appInstance) {\n            appInstance = new AdvancedApp();\n        }\n        return appInstance;\n    }\n    presentUI(document) {\n        const rootView = new UI.RootView.RootView();\n        this.rootSplitWidget =\n            new UI.SplitWidget.SplitWidget(false, true, 'inspector-view.split-view-state', 555, 300, true);\n        this.rootSplitWidget.show(rootView.element);\n        this.rootSplitWidget.setSidebarWidget(UI.InspectorView.InspectorView.instance());\n        this.rootSplitWidget.setDefaultFocusedChild(UI.InspectorView.InspectorView.instance());\n        UI.InspectorView.InspectorView.instance().setOwnerSplit(this.rootSplitWidget);\n        this.inspectedPagePlaceholder = InspectedPagePlaceholder.instance();\n        this.inspectedPagePlaceholder.addEventListener(\"Update\" /* Events.UPDATE */, this.onSetInspectedPageBounds.bind(this), this);\n        this.deviceModeView =\n            DeviceModeWrapper.instance({ inspectedPagePlaceholder: this.inspectedPagePlaceholder, forceNew: false });\n        UI.DockController.DockController.instance().addEventListener(\"BeforeDockSideChanged\" /* UI.DockController.Events.BEFORE_DOCK_SIDE_CHANGED */, this.onBeforeDockSideChange, this);\n        UI.DockController.DockController.instance().addEventListener(\"DockSideChanged\" /* UI.DockController.Events.DOCK_SIDE_CHANGED */, this.onDockSideChange, this);\n        UI.DockController.DockController.instance().addEventListener(\"AfterDockSideChanged\" /* UI.DockController.Events.AFTER_DOCK_SIDE_CHANGED */, this.onAfterDockSideChange, this);\n        this.onDockSideChange();\n        console.timeStamp('AdvancedApp.attachToBody');\n        rootView.attachToDocument(document);\n        rootView.focus();\n        this.inspectedPagePlaceholder.update();\n    }\n    openToolboxWindow(event) {\n        if (event.data.to !== \"undocked\" /* UI.DockController.DockState.UNDOCKED */) {\n            return;\n        }\n        if (this.toolboxWindow) {\n            return;\n        }\n        const url = window.location.href.replace('devtools_app.html', 'device_mode_emulation_frame.html');\n        this.toolboxWindow = window.open(url, undefined);\n    }\n    deviceModeEmulationFrameLoaded(toolboxDocument) {\n        ThemeSupport.ThemeSupport.instance().addDocumentToTheme(toolboxDocument);\n        UI.UIUtils.initializeUIUtils(toolboxDocument);\n        UI.UIUtils.addPlatformClass(toolboxDocument.documentElement);\n        UI.UIUtils.installComponentRootStyles(toolboxDocument.body);\n        UI.ContextMenu.ContextMenu.installHandler(toolboxDocument);\n        this.toolboxRootView = new UI.RootView.RootView();\n        this.toolboxRootView.attachToDocument(toolboxDocument);\n        this.toolboxDocument = toolboxDocument;\n        this.updateDeviceModeView();\n    }\n    updateDeviceModeView() {\n        if (this.isDocked()) {\n            this.rootSplitWidget.setMainWidget(this.deviceModeView);\n        }\n        else if (this.toolboxRootView) {\n            this.deviceModeView.show(this.toolboxRootView.element);\n        }\n    }\n    onBeforeDockSideChange(event) {\n        if (event.data.to === \"undocked\" /* UI.DockController.DockState.UNDOCKED */ && this.toolboxRootView) {\n            // Hide inspectorView and force layout to mimic the undocked state.\n            this.rootSplitWidget.hideSidebar();\n            this.inspectedPagePlaceholder.update();\n        }\n        this.changingDockSide = true;\n    }\n    onDockSideChange(event) {\n        this.updateDeviceModeView();\n        const toDockSide = event ? event.data.to : UI.DockController.DockController.instance().dockSide();\n        if (toDockSide === undefined) {\n            throw new Error('Got onDockSideChange event with unexpected undefined for dockSide()');\n        }\n        if (toDockSide === \"undocked\" /* UI.DockController.DockState.UNDOCKED */) {\n            this.updateForUndocked();\n        }\n        else if (this.toolboxRootView && event && event.data.from === \"undocked\" /* UI.DockController.DockState.UNDOCKED */) {\n            // Don't update yet for smooth transition.\n            this.rootSplitWidget.hideSidebar();\n        }\n        else {\n            this.updateForDocked(toDockSide);\n        }\n    }\n    onAfterDockSideChange(event) {\n        // We may get here on the first dock side change while loading without BeforeDockSideChange.\n        if (!this.changingDockSide) {\n            return;\n        }\n        if (event.data.from && event.data.from === \"undocked\" /* UI.DockController.DockState.UNDOCKED */) {\n            this.updateForDocked(event.data.to);\n        }\n        this.changingDockSide = false;\n        this.inspectedPagePlaceholder.update();\n    }\n    updateForDocked(dockSide) {\n        const resizerElement = this.rootSplitWidget.resizerElement();\n        resizerElement.style.transform = dockSide === \"right\" /* UI.DockController.DockState.RIGHT */ ? 'translateX(2px)' :\n            dockSide === \"left\" /* UI.DockController.DockState.LEFT */ ? 'translateX(-2px)' :\n                '';\n        this.rootSplitWidget.setVertical(dockSide === \"right\" /* UI.DockController.DockState.RIGHT */ || dockSide === \"left\" /* UI.DockController.DockState.LEFT */);\n        this.rootSplitWidget.setSecondIsSidebar(dockSide === \"right\" /* UI.DockController.DockState.RIGHT */ || dockSide === \"bottom\" /* UI.DockController.DockState.BOTTOM */);\n        this.rootSplitWidget.toggleResizer(this.rootSplitWidget.resizerElement(), true);\n        this.rootSplitWidget.toggleResizer(UI.InspectorView.InspectorView.instance().topResizerElement(), dockSide === \"bottom\" /* UI.DockController.DockState.BOTTOM */);\n        this.rootSplitWidget.showBoth();\n    }\n    updateForUndocked() {\n        this.rootSplitWidget.toggleResizer(this.rootSplitWidget.resizerElement(), false);\n        this.rootSplitWidget.toggleResizer(UI.InspectorView.InspectorView.instance().topResizerElement(), false);\n        this.rootSplitWidget.hideMain();\n    }\n    isDocked() {\n        return UI.DockController.DockController.instance().dockSide() !== \"undocked\" /* UI.DockController.DockState.UNDOCKED */;\n    }\n    onSetInspectedPageBounds(event) {\n        if (this.changingDockSide) {\n            return;\n        }\n        const window = this.inspectedPagePlaceholder.element.window();\n        if (!window.innerWidth || !window.innerHeight) {\n            return;\n        }\n        if (!this.inspectedPagePlaceholder.isShowing()) {\n            return;\n        }\n        const bounds = event.data;\n        console.timeStamp('AdvancedApp.setInspectedPageBounds');\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.setInspectedPageBounds(bounds);\n    }\n}\n// Export required for usage in toolbox.ts\n// @ts-ignore Exported for Tests.js\nglobalThis.Emulation = globalThis.Emulation || {};\n// @ts-ignore Exported for Tests.js\nglobalThis.Emulation.AdvancedApp = AdvancedApp;\nlet advancedAppProviderInstance;\nexport class AdvancedAppProvider {\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!advancedAppProviderInstance || forceNew) {\n            advancedAppProviderInstance = new AdvancedAppProvider();\n        }\n        return advancedAppProviderInstance;\n    }\n    createApp() {\n        return AdvancedApp.instance();\n    }\n}\n//# sourceMappingURL=AdvancedApp.js.map"],"names":["html","LitHtml","SizeChangedEvent","size","getInputValue","event","SizeInputElement","#root","#disabled","#size","#placeholder","#title","#jslogContext","title","jslogContext","disabled","placeholder","LitHtml.render","EmulationModel.DeviceModeModel.MaxDeviceSize","EmulationModel.DeviceModeModel.MinDeviceSize","VisualLogging.textField","#fireSizeChange","#handleModifierKeys","modifiedValue","UILegacy.UIUtils.modifiedFloatNumber","deviceModeToolbarStyles","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","setTitleForButton","button","DeviceModeToolbar","model","showMediaInspectorSetting","showRulersSetting","Common.Settings.Settings","VisualLogging.toolbar","leftContainer","leftToolbar","UI.Toolbar.Toolbar","mainToolbar","EmulationComponents.DeviceSizeInputElement.SizeInputElement","width","height","rightContainer","rightToolbar","modeToolbar","optionsToolbar","EmulationModel.EmulatedDevices.EmulatedDevicesList","updateToolbarsEnabled","enabled","element","toolbar","UI.Toolbar.ToolbarMenuButton","UI.Toolbar.ToolbarItem","xElement","MobileThrottling.ThrottlingManager.throttlingManager","UI.Toolbar.ToolbarButton","UI.Toolbar.ToolbarSeparator","UI.Toolbar.ToolbarToggle","Host.InspectorFrontendHost.InspectorFrontendHostInstance","moreOptionsButton","contextMenu","mode","EmulationModel.EmulatedDevices.VerticalSpanned","EmulationModel.EmulatedDevices.HorizontalSpanned","EmulationModel.DeviceModeModel.Type","boundAppendScaleItem","appendScaleItem","value","deviceScaleFactorSetting","defaultValue","EmulationModel.DeviceModeModel.defaultMobileScaleFactor","appendDeviceScaleFactorItem","section","uaSetting","appendUAItem","Platform.StringUtilities.toKebabCase","appendToggleItem","setting","title1","title2","context","isEnabled","container","UI.UIUtils.createShadowRootWithCoreStyles","device","scale","devices","d","EmulationModel.EmulatedDevices.EmulatedDevice","appendGroup","newMode","autoAdjustScaleSetting","appliedSize","rotationPartner","UI.ContextMenu.ContextMenu","addOrientation","EmulationModel.EmulatedDevices.Vertical","EmulationModel.EmulatedDevices.Horizontal","orientation","modes","addMode","index","applyMode","deviceScale","uaType","deviceItemTitle","modeCount","deviceModeViewStyles","mediaQueryInspectorStyles","MediaQueryInspector","UI.Widget.Widget","getWidthCallback","setWidthCallback","mediaThrottler","VisualLogging.mediaInspectorView","SDK.TargetManager.TargetManager","SDK.CSSModel.CSSModel","UI.ZoomManager.ZoomManager","cssModel","SDK.CSSModel.Events","mediaQueryMarker","modelMaxWidth","modelMinWidth","currentWidth","locations","uiLocations","i","uiLocation","Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding","descriptor","Platform.StringUtilities.sprintf","contextMenuItems","subMenuItem","location","Common.Revealer.reveal","models","filtered","last","cssMedias","queryModels","cssMedia","j","mediaQuery","queryModel","MediaQueryUIModel","compareModels","allEqual","model1","model2","markers","lastMarker","rawLocation","marker","bar","zoomFactor","minWidthExpression","maxWidthExpression","minWidthValue","maxWidthValue","result","markerElement","UI.Tooltip.Tooltip","appendLabel","leftElement","rightElement","expression","atLeft","leftAlign","active","maxWidthPixels","minWidthPixels","expressions","feature","pixels","other","thisMinWidthExpression","otherMinWidthExpression","thisMaxWidthExpression","otherMaxWidthExpression","sectionsEqual","minWidthEqual","maxWidthEqual","myLocation","otherLocation","Platform.StringUtilities.compare","thisMaxLength","otherMaxLength","thisMinLength","otherMinLength","DeviceModeView","UI.Widget.VBox","EmulationModel.DeviceModeModel.DeviceModeModel","Common.Throttler.Throttler","Ruler","VisualLogging.responsivePresets","sizes","titles","inner","block","VisualLogging.action","applySize","e","widthFactor","heightFactor","resizer","UI.ResizerWidget.ResizerWidget","VisualLogging.slider","cursor","rect","UI.Geometry.Size","cssOffsetX","cssOffsetY","dipOffsetX","newWidth","dipOffsetY","newHeight","Host.userMetrics","Host.UserMetrics.Action","applyRect","callDoResize","showRulers","contentAreaResized","updateRulers","cssScreenRect","cssVisiblePageRect","outlineRectFromModel","outlineRect","resizable","mediaInspectorVisible","blockWidth","srcset","success","availableSize","preferredSize","hidden","screenshot","pageImage","screenRect","visiblePageRect","contentLeft","contentTop","canvas","ctx","clip","src","resolve","image","url","fileName","withoutFragment","Platform.StringUtilities.removeURLFragment","Platform.StringUtilities.trimURL","link","blob","horizontal","applyCallback","VisualLogging.deviceModeRuler","dipSize","count","step","lastChild","text","deviceModeWrapperInstance","DeviceModeWrapper","inspectedPagePlaceholder","UI.ActionRegistry.ActionRegistry","Root.Runtime.Runtime","SDK.OverlayModel.OverlayModel","opts","forceNew","fullSize","force","showing","ActionDelegate","actionId","node","SDK.DOMModel.DOMNode","captureClip","object","docRect","response","zoom","inspectedPagePlaceholderStyles","inspectedPagePlaceholderInstance","InspectedPagePlaceholder","Common.ObjectWrapper.eventMixin","bodyRect","left","top","bottom","right","bounds","appInstance","AdvancedApp","UI.DockController.DockController","document","rootView","UI.RootView.RootView","UI.SplitWidget.SplitWidget","UI.InspectorView.InspectorView","toolboxDocument","ThemeSupport.ThemeSupport","UI.UIUtils.initializeUIUtils","UI.UIUtils.addPlatformClass","UI.UIUtils.installComponentRootStyles","toDockSide","dockSide","resizerElement","window","advancedAppProviderInstance","AdvancedAppProvider"],"mappings":"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"}