{"version":3,"file":"perf_ui-CRtvnQOi.js","sources":["../../ui/legacy/components/perf_ui/GCActionDelegate.js","../../ui/legacy/components/perf_ui/LiveHeapProfile.js"],"sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../../../../core/sdk/sdk.js';\nexport class GCActionDelegate {\n    handleAction(_context, _actionId) {\n        for (const heapProfilerModel of SDK.TargetManager.TargetManager.instance().models(SDK.HeapProfilerModel.HeapProfilerModel)) {\n            void heapProfilerModel.collectGarbage();\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=GCActionDelegate.js.map","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport { Memory } from './LineLevelProfile.js';\nlet liveHeapProfileInstance;\nexport class LiveHeapProfile {\n    running;\n    sessionId;\n    loadEventCallback;\n    setting;\n    constructor() {\n        this.running = false;\n        this.sessionId = 0;\n        this.loadEventCallback = () => { };\n        this.setting = Common.Settings.Settings.instance().moduleSetting('memory-live-heap-profile');\n        this.setting.addChangeListener(event => event.data ? this.startProfiling() : this.stopProfiling());\n        if (this.setting.get()) {\n            void this.startProfiling();\n        }\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!liveHeapProfileInstance || forceNew) {\n            liveHeapProfileInstance = new LiveHeapProfile();\n        }\n        return liveHeapProfileInstance;\n    }\n    async run() {\n        return;\n    }\n    modelAdded(model) {\n        void model.startSampling(1e4);\n    }\n    modelRemoved(_model) {\n        // Cannot do much when the model has already been removed.\n    }\n    async startProfiling() {\n        if (this.running) {\n            return;\n        }\n        this.running = true;\n        const sessionId = this.sessionId;\n        SDK.TargetManager.TargetManager.instance().observeModels(SDK.HeapProfilerModel.HeapProfilerModel, this);\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.Load, this.loadEventFired, this);\n        do {\n            const models = SDK.TargetManager.TargetManager.instance().models(SDK.HeapProfilerModel.HeapProfilerModel);\n            const profiles = await Promise.all(models.map(model => model.getSamplingProfile()));\n            if (sessionId !== this.sessionId) {\n                break;\n            }\n            Memory.instance().reset();\n            for (let i = 0; i < profiles.length; ++i) {\n                const profile = profiles[i];\n                if (!profile) {\n                    continue;\n                }\n                Memory.instance().appendHeapProfile(profile, models[i].target());\n            }\n            await Promise.race([\n                new Promise(r => window.setTimeout(r, Host.InspectorFrontendHost.isUnderTest() ? 10 : 5000)),\n                new Promise(r => {\n                    this.loadEventCallback = r;\n                }),\n            ]);\n        } while (sessionId === this.sessionId);\n        SDK.TargetManager.TargetManager.instance().unobserveModels(SDK.HeapProfilerModel.HeapProfilerModel, this);\n        SDK.TargetManager.TargetManager.instance().removeModelListener(SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.Load, this.loadEventFired, this);\n        for (const model of SDK.TargetManager.TargetManager.instance().models(SDK.HeapProfilerModel.HeapProfilerModel)) {\n            void model.stopSampling();\n        }\n        Memory.instance().reset();\n    }\n    stopProfiling() {\n        if (!this.running) {\n            return;\n        }\n        this.running = false;\n        this.sessionId++;\n    }\n    loadEventFired() {\n        this.loadEventCallback();\n    }\n}\n//# sourceMappingURL=LiveHeapProfile.js.map"],"names":["GCActionDelegate","_context","_actionId","heapProfilerModel","SDK.TargetManager.TargetManager","SDK.HeapProfilerModel.HeapProfilerModel","liveHeapProfileInstance","LiveHeapProfile","Common.Settings.Settings","event","opts","forceNew","model","_model","sessionId","SDK.ResourceTreeModel.ResourceTreeModel","SDK.ResourceTreeModel.Events","models","profiles","Memory","i","profile","r","Host.InspectorFrontendHost.isUnderTest"],"mappings":"kdAIO,MAAMA,CAAiB,CAC1B,aAAaC,EAAUC,EAAW,CAC9B,UAAWC,KAAqBC,EAAgC,SAAQ,EAAG,OAAOC,CAAuC,EAChHF,EAAkB,iBAE3B,MAAO,EACV,CACL,uHCJA,IAAIG,EACG,MAAMC,CAAgB,CACzB,QACA,UACA,kBACA,QACA,aAAc,CACV,KAAK,QAAU,GACf,KAAK,UAAY,EACjB,KAAK,kBAAoB,IAAM,GAC/B,KAAK,QAAUC,EAAyB,SAAQ,EAAG,cAAc,0BAA0B,EAC3F,KAAK,QAAQ,kBAAkBC,GAASA,EAAM,KAAO,KAAK,eAAgB,EAAG,KAAK,cAAe,CAAA,EAC7F,KAAK,QAAQ,OACR,KAAK,gBAEjB,CACD,OAAO,SAASC,EAAO,CAAE,SAAU,IAAI,EAAI,CACvC,KAAM,CAAE,SAAAC,CAAU,EAAGD,EACrB,OAAI,CAACJ,GAA2BK,KAC5BL,EAA0B,IAAIC,GAE3BD,CACV,CACD,MAAM,KAAM,CAEX,CACD,WAAWM,EAAO,CACTA,EAAM,cAAc,GAAG,CAC/B,CACD,aAAaC,EAAQ,CAEpB,CACD,MAAM,gBAAiB,CACnB,GAAI,KAAK,QACL,OAEJ,KAAK,QAAU,GACf,MAAMC,EAAY,KAAK,UACvBV,EAAgC,SAAU,EAAC,cAAcC,EAAyC,IAAI,EACtGD,EAAgC,WAAW,iBAAiBW,EAAyCC,EAA6B,KAAM,KAAK,eAAgB,IAAI,EACjK,EAAG,CACC,MAAMC,EAASb,EAAgC,SAAU,EAAC,OAAOC,CAAuC,EAClGa,EAAW,MAAM,QAAQ,IAAID,EAAO,IAAIL,GAASA,EAAM,mBAAoB,CAAA,CAAC,EAClF,GAAIE,IAAc,KAAK,UACnB,MAEJK,EAAO,WAAW,QAClB,QAASC,EAAI,EAAGA,EAAIF,EAAS,OAAQ,EAAEE,EAAG,CACtC,MAAMC,EAAUH,EAASE,CAAC,EACrBC,GAGLF,EAAO,SAAU,EAAC,kBAAkBE,EAASJ,EAAOG,CAAC,EAAE,OAAM,CAAE,CAClE,CACD,MAAM,QAAQ,KAAK,CACf,IAAI,QAAQE,GAAK,OAAO,WAAWA,EAAGC,EAAwC,EAAG,GAAK,GAAI,CAAC,EAC3F,IAAI,QAAQD,GAAK,CACb,KAAK,kBAAoBA,CAC7C,CAAiB,CACjB,CAAa,CACb,OAAiBR,IAAc,KAAK,WAC5BV,EAAgC,SAAU,EAAC,gBAAgBC,EAAyC,IAAI,EACxGD,EAAgC,WAAW,oBAAoBW,EAAyCC,EAA6B,KAAM,KAAK,eAAgB,IAAI,EACpK,UAAWJ,KAASR,EAAgC,SAAQ,EAAG,OAAOC,CAAuC,EACpGO,EAAM,eAEfO,EAAO,WAAW,OACrB,CACD,eAAgB,CACP,KAAK,UAGV,KAAK,QAAU,GACf,KAAK,YACR,CACD,gBAAiB,CACb,KAAK,kBAAiB,CACzB,CACL"}