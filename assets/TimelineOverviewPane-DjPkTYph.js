import{b7 as r,b8 as u,b9 as C,ba as b,bb as p,h as T,an as o,bc as S,aU as v,aW as E,aZ as y}from"./inspector-CyOA7R9n.js";import{c as k,s as P}from"./timelineOverviewInfo.css-BT4HnMd6.js";class w{#e=r(0);#t=r(100);workingArea;navStartTimes;computePosition(e){return(e-this.#e)/this.boundarySpan()*this.workingArea}positionToTime(e){return e/this.workingArea*this.boundarySpan()+this.#e}setBounds(e,t){this.#e=e,this.#t=t}setNavStartTimes(e){this.navStartTimes=e}setDisplayWidth(e){this.workingArea=e}reset(){this.setBounds(r(0),r(100))}formatValue(e,t){if(this.navStartTimes)for(let i=this.navStartTimes.length-1;i>=0;i--){const s=u(this.navStartTimes[i].ts);if(e>s){e-=s-this.zeroTime();break}}return C(e-this.zeroTime(),t)}maximumBoundary(){return this.#t}minimumBoundary(){return this.#e}zeroTime(){return this.#e}boundarySpan(){return r(this.#t-this.#e)}}const I=Object.freeze(Object.defineProperty({__proto__:null,TimelineOverviewCalculator:w},Symbol.toStringTag,{value:"Module"}));class A extends b(v){overviewCalculator;overviewGrid;cursorArea;cursorElement;overviewControls;markers;overviewInfo;updateThrottler;cursorEnabled;cursorPosition;lastWidth;windowStartTime;windowEndTime;muteOnWindowChanged;#e;constructor(e){super(),this.element.id=e+"-overview-pane",this.overviewCalculator=new w,this.overviewGrid=new k(e,this.overviewCalculator),this.overviewGrid.element.setAttribute("jslog",`${p(`${e}-overview`).track({click:!0,drag:!0,hover:!0})}`),this.element.appendChild(this.overviewGrid.element),this.cursorArea=this.overviewGrid.element.createChild("div","overview-grid-cursor-area"),this.cursorElement=this.overviewGrid.element.createChild("div","overview-grid-cursor-position"),this.cursorArea.addEventListener("mousemove",this.onMouseMove.bind(this),!0),this.cursorArea.addEventListener("mouseleave",this.hideCursor.bind(this),!0),this.overviewGrid.setResizeEnabled(!1),this.overviewGrid.addEventListener("WindowChangedWithPosition",this.onWindowChanged,this),this.overviewGrid.addEventListener("BreadcrumbAdded",this.onBreadcrumbAdded,this),this.overviewGrid.setClickHandler(this.onClick.bind(this)),this.overviewControls=[],this.markers=new Map,this.overviewInfo=new m(this.cursorElement),this.updateThrottler=new T(100),this.cursorEnabled=!1,this.cursorPosition=0,this.lastWidth=0,this.windowStartTime=0,this.windowEndTime=1/0,this.muteOnWindowChanged=!1,this.#e=o(this.element,"svg","timeline-minimap-dim-highlight-svg hidden")}enableCreateBreadcrumbsButton(){const e=this.overviewGrid.enableCreateBreadcrumbsButton();e.addEventListener("mousemove",this.onMouseMove.bind(this),!0),e.addEventListener("mouseleave",this.hideCursor.bind(this),!0)}onMouseMove(e){if(!this.cursorEnabled)return;const t=e,s=e.target.getBoundingClientRect().left-this.cursorArea.getBoundingClientRect().left;this.cursorPosition=t.offsetX+s,this.cursorElement.style.left=this.cursorPosition+"px",this.cursorElement.style.visibility="visible",this.overviewInfo.setContent(this.buildOverviewInfo())}async buildOverviewInfo(){const e=this.element.ownerDocument,t=this.cursorPosition,i=await Promise.all(this.overviewControls.map(n=>n.overviewInfoPromise(t))),s=e.createDocumentFragment(),a=i.filter(n=>n!==null);return s.append(...a),s}hideCursor(){this.cursorElement.style.visibility="hidden",this.overviewInfo.hide()}wasShown(){this.update()}willHide(){this.overviewInfo.hide()}onResize(){const e=this.element.offsetWidth;e!==this.lastWidth&&(this.lastWidth=e,this.scheduleUpdate())}setOverviewControls(e){for(let t=0;t<this.overviewControls.length;++t)this.overviewControls[t].dispose();for(let t=0;t<e.length;++t)e[t].setCalculator(this.overviewCalculator),e[t].show(this.overviewGrid.element);this.overviewControls=e,this.update()}set showingScreenshots(e){this.overviewGrid.showingScreenshots=e}setBounds(e,t){e===this.overviewCalculator.minimumBoundary()&&t===this.overviewCalculator.maximumBoundary()||(this.overviewCalculator.setBounds(e,t),this.overviewGrid.setResizeEnabled(!0),this.cursorEnabled=!0,this.scheduleUpdate(e,t))}setNavStartTimes(e){this.overviewCalculator.setNavStartTimes(e)}scheduleUpdate(e,t){this.updateThrottler.schedule(async()=>{this.update(e,t)})}update(e,t){if(this.isShowing()){this.overviewCalculator.setDisplayWidth(this.overviewGrid.clientWidth());for(let i=0;i<this.overviewControls.length;++i)this.overviewControls[i].update(e,t);this.overviewGrid.updateDividers(this.overviewCalculator),this.updateMarkers(),this.updateWindow()}}setMarkers(e){this.markers=e}getMarkers(){return this.markers}updateMarkers(){const e=new Map;for(const t of this.markers.keys()){const i=this.markers.get(t),s=Math.round(this.overviewCalculator.computePosition(r(t)));e.has(s)||(e.set(s,i),i.style.left=s+"px")}this.overviewGrid.removeEventDividers(),this.overviewGrid.addEventDividers([...e.values()])}reset(){this.windowStartTime=0,this.windowEndTime=1/0,this.overviewCalculator.reset(),this.overviewGrid.reset(),this.overviewGrid.setResizeEnabled(!1),this.cursorEnabled=!1,this.hideCursor(),this.markers=new Map;for(const e of this.overviewControls)e.reset();this.overviewInfo.hide(),this.scheduleUpdate()}onClick(e){return this.overviewControls.some(t=>t.onClick(e))}onBreadcrumbAdded(){this.dispatchEventToListeners("OverviewPaneBreadcrumbAdded",{startTime:r(this.windowStartTime),endTime:r(this.windowEndTime)})}onWindowChanged(e){if(this.muteOnWindowChanged||!this.overviewControls.length)return;this.windowStartTime=e.data.rawStartValue===this.overviewCalculator.minimumBoundary()?0:e.data.rawStartValue,this.windowEndTime=e.data.rawEndValue===this.overviewCalculator.maximumBoundary()?1/0:e.data.rawEndValue;const t={startTime:r(this.windowStartTime),endTime:r(this.windowEndTime)};this.dispatchEventToListeners("OverviewPaneWindowChanged",t)}setWindowTimes(e,t){e===this.windowStartTime&&t===this.windowEndTime||(this.windowStartTime=e,this.windowEndTime=t,this.updateWindow(),this.dispatchEventToListeners("OverviewPaneWindowChanged",{startTime:r(e),endTime:r(t)}))}updateWindow(){if(!this.overviewControls.length)return;const e=this.overviewCalculator.minimumBoundary(),t=this.overviewCalculator.maximumBoundary()-e,i=e>0,s=i&&this.windowStartTime?Math.min((this.windowStartTime-e)/t,1):0,a=i&&this.windowEndTime<1/0?(this.windowEndTime-e)/t:1;this.muteOnWindowChanged=!0,this.overviewGrid.setWindow(s,a),this.muteOnWindowChanged=!1}highlightBounds(e){let t=this.#e?.querySelector("mask");if(!t){const f=o(this.#e,"defs");t=o(f,"mask"),t.id="dim-highlight-cutouts";const d=o(t,"rect");d.setAttribute("width","100%"),d.setAttribute("height","100%"),d.setAttribute("fill","hsl(0deg 0% 95%)");const h=o(this.#e,"rect");h.setAttribute("width","100%"),h.setAttribute("height","100%"),h.setAttribute("fill","#ffffff"),h.setAttribute("mask",`url(#${t.id})`),h.style.mixBlendMode="saturation";const c=o(t,"rect","punch");c.setAttribute("y","0"),c.setAttribute("height","100%"),c.setAttribute("fill","black");const g=S.instance().getComputedValue("--sys-color-state-on-header-hover");o(this.#e,"polygon").setAttribute("fill",g)}const i=this.overviewCalculator.computePosition(u(e.min)),s=this.overviewCalculator.computePosition(u(e.max)),a=this.#e.querySelector("rect.punch");a?.setAttribute("x",i.toString()),a?.setAttribute("width",(s-i).toString());const n=5;this.#e.querySelector("polygon")?.setAttribute("points",`${i},0 ${i},${n} ${i+n-1},1 ${s-n-1},1 ${s},${n} ${s},0`),this.#e.classList.remove("hidden")}clearBoundsHighlight(){this.#e.classList.add("hidden")}}class B extends v{calculatorInternal;canvas;contextInternal;constructor(){super(),this.calculatorInternal=null,this.canvas=this.element.createChild("canvas","fill"),this.contextInternal=this.canvas.getContext("2d")}width(){return this.canvas.width}height(){return this.canvas.height}context(){if(!this.contextInternal)throw new Error("Unable to retrieve canvas context");return this.contextInternal}calculator(){return this.calculatorInternal}update(){throw new Error("Not implemented")}dispose(){this.detach()}reset(){}async overviewInfoPromise(e){return null}setCalculator(e){this.calculatorInternal=e}onClick(e){return!1}resetCanvas(){this.element.clientWidth&&this.setCanvasSize(this.element.clientWidth,this.element.clientHeight)}setCanvasSize(e,t){this.canvas.width=e*window.devicePixelRatio,this.canvas.height=t*window.devicePixelRatio}}class m{anchorElement;glassPane;visible;element;constructor(e){this.anchorElement=e,this.glassPane=new E,this.glassPane.setPointerEventsBehavior("PierceContents"),this.glassPane.setMarginBehavior("Arrow"),this.glassPane.setSizeBehavior("MeasureContent"),this.visible=!1,this.element=y(this.glassPane.contentElement,{cssFile:[P],delegatesFocus:void 0}).createChild("div","overview-info")}async setContent(e){this.visible=!0;const t=await e;this.visible&&(this.element.removeChildren(),this.element.appendChild(t),this.glassPane.setContentAnchorBox(this.anchorElement.boxInWindow()),this.glassPane.isShowing()||this.glassPane.show(this.anchorElement.ownerDocument))}hide(){this.visible=!1,this.glassPane.hide()}}const O=Object.freeze(Object.defineProperty({__proto__:null,OverviewInfo:m,TimelineOverviewBase:B,TimelineOverviewPane:A},Symbol.toStringTag,{value:"Module"}));export{I as T,O as a,B as b,A as c};
//# sourceMappingURL=TimelineOverviewPane-DjPkTYph.js.map
