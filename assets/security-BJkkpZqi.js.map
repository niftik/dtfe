{"version":3,"file":"security-BJkkpZqi.js","sources":["../../panels/security/SecurityModel.js","../../panels/security/lockIcon.css.js","../../panels/security/mainView.css.js","../../panels/security/SecurityPanelSidebarTreeElement.js","../../panels/security/OriginTreeElement.js","../../panels/security/originView.css.js","../../panels/security/CookieReportTreeElement.js","../../panels/security/sidebar.css.js","../../panels/security/SecurityPanelSidebar.js","../../panels/security/SecurityPanel.js"],"sourcesContent":["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nconst UIStrings = {\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    theSecurityOfThisPageIsUnknown: 'The security of this page is unknown.',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    thisPageIsNotSecure: 'This page is not secure.',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    thisPageIsSecureValidHttps: 'This page is secure (valid HTTPS).',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    thisPageIsNotSecureBrokenHttps: 'This page is not secure (broken HTTPS).',\n    /**\n     *@description Description of an SSL cipher that contains a separate (bulk) cipher and MAC.\n     *@example {AES_256_CBC} PH1\n     *@example {HMAC-SHA1} PH2\n     */\n    cipherWithMAC: '{PH1} with {PH2}',\n    /**\n     *@description Description of an SSL Key and its Key Exchange Group.\n     *@example {ECDHE_RSA} PH1\n     *@example {X25519} PH2\n     */\n    keyExchangeWithGroup: '{PH1} with {PH2}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/security/SecurityModel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nexport class SecurityModel extends SDK.SDKModel.SDKModel {\n    dispatcher;\n    securityAgent;\n    constructor(target) {\n        super(target);\n        this.dispatcher = new SecurityDispatcher(this);\n        this.securityAgent = target.securityAgent();\n        target.registerSecurityDispatcher(this.dispatcher);\n        void this.securityAgent.invoke_enable();\n    }\n    resourceTreeModel() {\n        return this.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n    }\n    networkManager() {\n        return this.target().model(SDK.NetworkManager.NetworkManager);\n    }\n}\nexport function securityStateCompare(a, b) {\n    const SECURITY_STATE_ORDER = [\n        \"info\" /* Protocol.Security.SecurityState.Info */,\n        \"insecure-broken\" /* Protocol.Security.SecurityState.InsecureBroken */,\n        \"insecure\" /* Protocol.Security.SecurityState.Insecure */,\n        \"neutral\" /* Protocol.Security.SecurityState.Neutral */,\n        \"secure\" /* Protocol.Security.SecurityState.Secure */,\n        \"unknown\" /* Protocol.Security.SecurityState.Unknown */,\n    ];\n    return SECURITY_STATE_ORDER.indexOf(a) - SECURITY_STATE_ORDER.indexOf(b);\n}\nSDK.SDKModel.SDKModel.register(SecurityModel, { capabilities: 512 /* SDK.Target.Capability.SECURITY */, autostart: false });\nexport var Events;\n(function (Events) {\n    /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n    Events[\"VisibleSecurityStateChanged\"] = \"VisibleSecurityStateChanged\";\n    /* eslint-enable @typescript-eslint/naming-convention */\n})(Events || (Events = {}));\nexport const SummaryMessages = {\n    [\"unknown\" /* Protocol.Security.SecurityState.Unknown */]: i18nLazyString(UIStrings.theSecurityOfThisPageIsUnknown),\n    [\"insecure\" /* Protocol.Security.SecurityState.Insecure */]: i18nLazyString(UIStrings.thisPageIsNotSecure),\n    [\"neutral\" /* Protocol.Security.SecurityState.Neutral */]: i18nLazyString(UIStrings.thisPageIsNotSecure),\n    [\"secure\" /* Protocol.Security.SecurityState.Secure */]: i18nLazyString(UIStrings.thisPageIsSecureValidHttps),\n    [\"insecure-broken\" /* Protocol.Security.SecurityState.InsecureBroken */]: i18nLazyString(UIStrings.thisPageIsNotSecureBrokenHttps),\n};\nexport class PageVisibleSecurityState {\n    securityState;\n    certificateSecurityState;\n    safetyTipInfo;\n    securityStateIssueIds;\n    constructor(securityState, certificateSecurityState, safetyTipInfo, securityStateIssueIds) {\n        this.securityState = securityState;\n        this.certificateSecurityState =\n            certificateSecurityState ? new CertificateSecurityState(certificateSecurityState) : null;\n        this.safetyTipInfo = safetyTipInfo ? new SafetyTipInfo(safetyTipInfo) : null;\n        this.securityStateIssueIds = securityStateIssueIds;\n    }\n}\nexport class CertificateSecurityState {\n    protocol;\n    keyExchange;\n    keyExchangeGroup;\n    cipher;\n    mac;\n    certificate;\n    subjectName;\n    issuer;\n    validFrom;\n    validTo;\n    certificateNetworkError;\n    certificateHasWeakSignature;\n    certificateHasSha1Signature;\n    modernSSL;\n    obsoleteSslProtocol;\n    obsoleteSslKeyExchange;\n    obsoleteSslCipher;\n    obsoleteSslSignature;\n    constructor(certificateSecurityState) {\n        this.protocol = certificateSecurityState.protocol;\n        this.keyExchange = certificateSecurityState.keyExchange;\n        this.keyExchangeGroup = certificateSecurityState.keyExchangeGroup || null;\n        this.cipher = certificateSecurityState.cipher;\n        this.mac = certificateSecurityState.mac || null;\n        this.certificate = certificateSecurityState.certificate;\n        this.subjectName = certificateSecurityState.subjectName;\n        this.issuer = certificateSecurityState.issuer;\n        this.validFrom = certificateSecurityState.validFrom;\n        this.validTo = certificateSecurityState.validTo;\n        this.certificateNetworkError = certificateSecurityState.certificateNetworkError || null;\n        this.certificateHasWeakSignature = certificateSecurityState.certificateHasWeakSignature;\n        this.certificateHasSha1Signature = certificateSecurityState.certificateHasSha1Signature;\n        this.modernSSL = certificateSecurityState.modernSSL;\n        this.obsoleteSslProtocol = certificateSecurityState.obsoleteSslProtocol;\n        this.obsoleteSslKeyExchange = certificateSecurityState.obsoleteSslKeyExchange;\n        this.obsoleteSslCipher = certificateSecurityState.obsoleteSslCipher;\n        this.obsoleteSslSignature = certificateSecurityState.obsoleteSslSignature;\n    }\n    isCertificateExpiringSoon() {\n        const expiryDate = new Date(this.validTo * 1000).getTime();\n        return (expiryDate < new Date(Date.now()).setHours(48)) && (expiryDate > Date.now());\n    }\n    getKeyExchangeName() {\n        if (this.keyExchangeGroup) {\n            return this.keyExchange ?\n                i18nString(UIStrings.keyExchangeWithGroup, { PH1: this.keyExchange, PH2: this.keyExchangeGroup }) :\n                this.keyExchangeGroup;\n        }\n        return this.keyExchange;\n    }\n    getCipherFullName() {\n        return this.mac ? i18nString(UIStrings.cipherWithMAC, { PH1: this.cipher, PH2: this.mac }) : this.cipher;\n    }\n}\nclass SafetyTipInfo {\n    safetyTipStatus;\n    safeUrl;\n    constructor(safetyTipInfo) {\n        this.safetyTipStatus = safetyTipInfo.safetyTipStatus;\n        this.safeUrl = safetyTipInfo.safeUrl || null;\n    }\n}\nexport class SecurityStyleExplanation {\n    securityState;\n    title;\n    summary;\n    description;\n    certificate;\n    mixedContentType;\n    recommendations;\n    constructor(securityState, title, summary, description, certificate = [], mixedContentType = \"none\" /* Protocol.Security.MixedContentType.None */, recommendations = []) {\n        this.securityState = securityState;\n        this.title = title;\n        this.summary = summary;\n        this.description = description;\n        this.certificate = certificate;\n        this.mixedContentType = mixedContentType;\n        this.recommendations = recommendations;\n    }\n}\nclass SecurityDispatcher {\n    model;\n    constructor(model) {\n        this.model = model;\n    }\n    securityStateChanged(_event) {\n    }\n    visibleSecurityStateChanged({ visibleSecurityState }) {\n        const pageVisibleSecurityState = new PageVisibleSecurityState(visibleSecurityState.securityState, visibleSecurityState.certificateSecurityState || null, visibleSecurityState.safetyTipInfo || null, visibleSecurityState.securityStateIssueIds);\n        this.model.dispatchEventToListeners(Events.VisibleSecurityStateChanged, pageVisibleSecurityState);\n    }\n    certificateError(_event) {\n    }\n}\n//# sourceMappingURL=SecurityModel.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.lock-icon,\n.security-property {\n  height: var(--sys-size-9);\n  width: var(--sys-size-9);\n}\n\n.lock-icon-secure {\n  color: var(--sys-color-green);\n}\n\n.lock-icon-insecure {\n  color: var(--sys-color-error);\n}\n\n.lock-icon-insecure-broken {\n  color: var(--sys-color-error);\n}\n\n.security-property-secure {\n  color: var(--sys-color-green);\n}\n\n.security-property-neutral {\n  color: var(--sys-color-error);\n}\n\n.security-property-insecure {\n  color: var(--sys-color-error);\n}\n\n.security-property-insecure-broken {\n  color: var(--sys-color-error);\n}\n\n.security-property-info {\n  color: var(--sys-color-on-surface-subtle);\n}\n\n.security-property-unknown {\n  color: var(--sys-color-on-surface-subtle);\n}\n\n.url-scheme-secure {\n  color: var(--sys-color-green);\n}\n\n.url-scheme-neutral,\n.url-scheme-insecure,\n.url-scheme-insecure-broken {\n  color: var(--sys-color-error);\n}\n\n/*# sourceURL=lockIcon.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.devtools-link {\n  display: inline-block;\n}\n\n.security-main-view {\n  overflow-x: hidden;\n  overflow-y: auto;\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.security-main-view > div {\n  flex-shrink: 0;\n}\n\n.security-summary-section-title {\n  font-size: 15px;\n  margin: 12px 16px;\n  user-select: text;\n}\n\n.lock-spectrum {\n  margin: 8px 16px;\n  display: flex;\n  align-items: flex-start;\n}\n\n.security-summary .lock-icon {\n  flex: none;\n  width: 16px;\n  height: 16px;\n  margin: 0;\n}\n/* Separate the middle icon from the other two. */\n\n.security-summary .lock-icon-neutral {\n  margin: 0 16px;\n}\n\n.security-summary:not(.security-summary-secure) .lock-icon-secure,\n.security-summary:not(.security-summary-neutral) .lock-icon-neutral,\n.security-summary:not(.security-summary-insecure) .lock-icon-insecure,\n.security-summary:not(.security-summary-insecure-broken) .lock-icon-insecure-broken {\n  color: var(--sys-color-state-disabled);\n}\n\n@media (forced-colors: active) {\n  .security-summary-neutral .lock-icon-neutral {\n    color: Highlight;\n  }\n\n  .security-summary:not(.security-summary-secure) .lock-icon-secure,\n  .security-summary:not(.security-summary-neutral) .lock-icon-neutral,\n  .security-summary:not(.security-summary-insecure) .lock-icon-insecure,\n  .security-summary:not(.security-summary-insecure-broken) .lock-icon-insecure-broken {\n    color: canvastext;\n  }\n}\n\n.triangle-pointer-container {\n  margin: 8px 24px 0;\n  padding: 0;\n}\n\n.triangle-pointer-wrapper {\n  /* Defaults for dynamic properties. */\n  transform: translateX(0);\n  transition: transform 0.3s;\n}\n\n.triangle-pointer {\n  width: 12px;\n  height: 12px;\n  margin-bottom: -6px;\n  margin-left: -6px;\n  transform: rotate(-45deg);\n  border-style: solid;\n  border-width: 1px 1px 0 0;\n  background: var(--sys-color-cdt-base-container);\n  border-color: var(--sys-color-neutral-outline);\n}\n\n.security-summary-secure .triangle-pointer-wrapper {\n  transform: translateX(0);\n}\n\n.security-summary-neutral .triangle-pointer-wrapper {\n  transform: translateX(32px);\n}\n\n.security-summary-insecure .triangle-pointer-wrapper {\n  transform: translateX(64px);\n}\n\n.security-summary-insecure-broken .triangle-pointer-wrapper {\n  transform: translateX(64px);\n}\n\n.security-summary-text {\n  padding: 16px 24px;\n  border-style: solid;\n  border-width: 1px 0;\n  font-size: 15px;\n  background: var(--sys-color-cdt-base-container);\n  border-color: var(--sys-color-neutral-outline);\n  user-select: text;\n}\n\n.security-summary-secure .triangle-pointer,\n.security-summary-secure .security-summary-text,\n.security-explanation-title-secure {\n  color: var(--sys-color-green);\n}\n\n.security-summary-insecure-broken .triangle-pointer,\n.security-summary-insecure-broken .security-summary-text,\n.security-explanation-title-neutral,\n.security-explanation-title-insecure,\n.security-explanation-title-insecure-broken {\n  color: var(--sys-color-error);\n}\n\n.security-explanation-list {\n  padding-bottom: 16px;\n}\n\n.security-explanation-list:empty {\n  border-bottom: none;\n  padding: 0;\n}\n\n.security-explanations-main {\n  margin-top: -5px;\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.security-explanations-extra {\n  background-color: transparent;\n}\n\n.security-explanation {\n  padding: 11px;\n  display: flex;\n  white-space: nowrap;\n  border: none;\n  color: var(--sys-color-token-subtle);\n}\n\n.security-explanation-text {\n  flex: auto;\n  white-space: normal;\n  max-width: 400px;\n}\n\n.origin-button {\n  margin-top: var(--sys-size-4);\n}\n\n.security-explanation .security-property {\n  flex: none;\n  width: 16px;\n  height: 16px;\n  margin-right: 16px;\n}\n\n.security-explanation-title {\n  color: var(--sys-color-token-subtle);\n  margin-top: 1px;\n  margin-bottom: 8px;\n}\n\n.security-mixed-content {\n  margin-top: 8px;\n}\n\n.security-explanation-recommendations {\n  padding-inline-start: 16px;\n}\n\n.security-explanation-recommendations > li {\n  margin-bottom: 4px;\n}\n\n/*# sourceURL=mainView.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as UI from '../../ui/legacy/legacy.js';\nexport class SecurityPanelSidebarTreeElement extends UI.TreeOutline.TreeElement {\n    constructor(title = '', expandable = false) {\n        super(title, expandable);\n        UI.ARIAUtils.setLabel(this.listItemElement, title);\n    }\n}\n//# sourceMappingURL=SecurityPanelSidebarTreeElement.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport { SecurityPanelSidebarTreeElement } from './SecurityPanelSidebarTreeElement.js';\nexport class ShowOriginEvent extends Event {\n    static eventName = 'showorigin';\n    origin;\n    constructor(origin) {\n        super(ShowOriginEvent.eventName, { bubbles: true, composed: true });\n        this.origin = origin;\n    }\n}\nexport class OriginTreeElement extends SecurityPanelSidebarTreeElement {\n    #securityStateInternal;\n    #renderTreeElement;\n    #originInternal = null;\n    constructor(className, renderTreeElement, origin = null) {\n        super();\n        this.#renderTreeElement = renderTreeElement;\n        this.#originInternal = origin;\n        this.listItemElement.classList.add(className);\n        this.#securityStateInternal = null;\n        this.setSecurityState(\"unknown\" /* Protocol.Security.SecurityState.Unknown */);\n    }\n    setSecurityState(newSecurityState) {\n        this.#securityStateInternal = newSecurityState;\n        this.#renderTreeElement(this);\n    }\n    securityState() {\n        return this.#securityStateInternal;\n    }\n    origin() {\n        return this.#originInternal;\n    }\n    onselect() {\n        this.listItemElement.dispatchEvent(new ShowOriginEvent(this.#originInternal));\n        return true;\n    }\n}\n//# sourceMappingURL=OriginTreeElement.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.title-section {\n  padding: 16px 0 24px;\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\n.title-section-header {\n  padding-left: 16px;\n  padding-bottom: 10px;\n  font-size: 14px;\n}\n\n.security-origin-view {\n  overflow-x: hidden;\n  overflow-y: scroll;\n  display: block;\n  user-select: text;\n}\n\n.security-origin-view .origin-view-section {\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding: 12px 6px 12px  24px;\n  font-size: 12px;\n}\n\n.origin-view-notes {\n  margin-top: 2px;\n  color: var(--sys-color-token-subtle);\n}\n\n.origin-view-section-notes {\n  margin-top: 6px;\n  color: var(--sys-color-token-subtle);\n}\n\n.security-origin-view .origin-display {\n  font-size: 12px;\n  padding-left: var(--sys-size-8);\n  display: flex;\n  align-items: center;\n}\n\n.title-section > .view-network-button {\n  padding: 6px 0 0 16px;\n}\n\n.security-origin-view .origin-display devtools-icon {\n  width: var(--sys-size-8);\n  height: var(--sys-size-8);\n  margin-right: var(--sys-size-6);\n}\n\n.security-origin-view .origin-view-section-title {\n  margin-top: 4px;\n  margin-bottom: 4px;\n  font-weight: bold;\n}\n\n.security-origin-view .details-table {\n  border-spacing: 0;\n}\n\n.security-origin-view .details-table-row {\n  white-space: nowrap;\n  overflow: hidden;\n  line-height: 22px;\n  vertical-align: top;\n}\n\n.security-origin-view .details-table-row > td {\n  padding: 0;\n}\n\n.security-origin-view .details-table-row > td:first-child {\n  color: var(--sys-color-token-subtle);\n  width: calc(120px + 1em);\n  text-align: right;\n  padding-right: 1em;\n}\n\n.security-origin-view .details-table-row > td:nth-child(2) {\n  white-space: normal;\n}\n\n.security-origin-view .sct-details .details-table .details-table-row:last-child td:last-child {\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding-bottom: 10px;\n}\n\n.security-origin-view .sct-details .details-table:last-child .details-table-row:last-child td:last-child {\n  border-bottom: none;\n  padding-bottom: 0;\n}\n\n.security-origin-view .details-toggle {\n  margin-left: 126px;\n}\n\n.security-origin-view .sct-toggle {\n  margin-left: 145px;\n  padding-top: 5px;\n}\n\n.security-origin-view .details-table .empty-san {\n  color: var(--sys-color-state-disabled);\n}\n\n.security-origin-view .details-table .san-entry {\n  display: block;\n}\n\n.security-origin-view .truncated-san .truncated-entry {\n  display: none;\n}\n\n.origin-view-section:last-child {\n  border-bottom: none;\n}\n\n.devtools-link {\n  display: inline-flex;\n}\n\n/*# sourceURL=originView.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport { SecurityPanelSidebarTreeElement } from './SecurityPanelSidebarTreeElement.js';\nexport class ShowCookieReportEvent extends Event {\n    static eventName = 'showcookiereport';\n    constructor() {\n        super(ShowCookieReportEvent.eventName, { bubbles: true, composed: true });\n    }\n}\nexport class CookieReportTreeElement extends SecurityPanelSidebarTreeElement {\n    constructor(title) {\n        super(title);\n        this.setLeadingIcons([IconButton.Icon.create('cookie', 'cookie-icon')]);\n    }\n    onselect() {\n        this.listItemElement.dispatchEvent(new ShowCookieReportEvent());\n        return true;\n    }\n}\n//# sourceMappingURL=CookieReportTreeElement.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.tree-outline-disclosure {\n  width: 100%;\n}\n\n.tree-outline li.security-group-list-item {\n  & + ol {\n    padding-left: 0;\n  }\n\n  &::before {\n    display: none;\n  }\n\n  &:not(:first-child) {\n    margin-top: var(--sys-size-6);\n  }\n}\n\n.security-main-view-reload-message {\n  color: var(--sys-color-token-subtle);\n}\n\n.tree-outline li.security-sidebar-origins + .children > li {\n  &.selected {\n    .url-scheme-secure {\n      color: var(--sys-color-green);\n    }\n\n    .url-scheme-neutral,\n    .url-scheme-insecure,\n    .url-scheme-insecure-broken {\n      color: var(--sys-color-error);\n    }\n  }\n}\n\n.security-main-view-reload-message,\n.tree-outline li.security-sidebar-origins,\n.tree-outline li.security-group-list-item,\n.tree-outline span  {\n\n  font: var(--sys-typescale-body4-medium);\n\n  &:hover:not(:has(span[is=\"dt-checkbox\"])) .selection {\n    background: transparent;\n  }\n}\n\n.tree-outline li {\n  & .leading-icons {\n    flex: none;\n  }\n\n  & .tree-element-title,\n  .highlighted-url,\n  .title {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n/*# sourceURL=sidebar.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport { CookieReportTreeElement } from './CookieReportTreeElement.js';\nimport lockIconStyles from './lockIcon.css.js';\nimport { OriginTreeElement } from './OriginTreeElement.js';\nimport { createHighlightedUrl, getSecurityStateIconForDetailedView, getSecurityStateIconForOverview, OriginGroup, } from './SecurityPanel.js';\nimport sidebarStyles from './sidebar.css.js';\nconst UIStrings = {\n    /**\n     *@description Section title for the the Security Panel's sidebar\n     */\n    security: 'Security',\n    /**\n     *@description Section title for the the Security Panel's sidebar\n     */\n    privacy: 'Privacy',\n    /**\n     *@description Sidebar element text in the Security panel\n     */\n    cookieReport: 'Third-party cookies',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    mainOrigin: 'Main origin',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    nonsecureOrigins: 'Non-secure origins',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    secureOrigins: 'Secure origins',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    unknownCanceled: 'Unknown / canceled',\n    /**\n     *@description Title text content in Security Panel of the Security panel\n     */\n    overview: 'Overview',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    reloadToViewDetails: 'Reload to view details',\n    /**\n     *@description New parent title in Security Panel of the Security panel\n     */\n    mainOriginSecure: 'Main origin (secure)',\n    /**\n     *@description New parent title in Security Panel of the Security panel\n     */\n    mainOriginNonsecure: 'Main origin (non-secure)',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/security/SecurityPanelSidebar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class SecurityPanelSidebar extends UI.Widget.VBox {\n    sidebarTree;\n    #originGroupTitles;\n    #originGroups;\n    securityOverviewElement;\n    #elementsByOrigin;\n    #mainViewReloadMessage;\n    #mainOrigin;\n    constructor(element) {\n        super(undefined, undefined, element);\n        this.#mainOrigin = null;\n        this.sidebarTree = new UI.TreeOutline.TreeOutlineInShadow(\"NavigationTree\" /* UI.TreeOutline.TreeVariant.NAVIGATION_TREE */);\n        this.sidebarTree.element.classList.add('security-sidebar');\n        this.contentElement.appendChild(this.sidebarTree.element);\n        if (Common.Settings.Settings.instance().getHostConfig().devToolsPrivacyUI?.enabled) {\n            const privacyTreeSection = this.#addSidebarSection(i18nString(UIStrings.privacy), 'privacy');\n            privacyTreeSection.appendChild(new CookieReportTreeElement(i18nString(UIStrings.cookieReport)));\n        }\n        const securitySectionTitle = i18nString(UIStrings.security);\n        const securityTreeSection = this.#addSidebarSection(securitySectionTitle, 'security');\n        this.securityOverviewElement =\n            new OriginTreeElement('security-main-view-sidebar-tree-item', this.#renderTreeElement);\n        this.securityOverviewElement.tooltip = i18nString(UIStrings.overview);\n        securityTreeSection.appendChild(this.securityOverviewElement);\n        this.#originGroupTitles = new Map([\n            [OriginGroup.MainOrigin, i18nString(UIStrings.mainOrigin)],\n            [OriginGroup.NonSecure, i18nString(UIStrings.nonsecureOrigins)],\n            [OriginGroup.Secure, i18nString(UIStrings.secureOrigins)],\n            [OriginGroup.Unknown, i18nString(UIStrings.unknownCanceled)],\n        ]);\n        this.#originGroups = new Map();\n        for (const group of Object.values(OriginGroup)) {\n            const element = this.#createOriginGroupElement(this.#originGroupTitles.get(group));\n            this.#originGroups.set(group, element);\n            securityTreeSection.appendChild(element);\n        }\n        this.#mainViewReloadMessage = new UI.TreeOutline.TreeElement(i18nString(UIStrings.reloadToViewDetails));\n        this.#mainViewReloadMessage.selectable = false;\n        this.#mainViewReloadMessage.listItemElement.classList.add('security-main-view-reload-message');\n        const treeElement = this.#originGroups.get(OriginGroup.MainOrigin);\n        treeElement.appendChild(this.#mainViewReloadMessage);\n        this.#clearOriginGroups();\n        this.#elementsByOrigin = new Map();\n    }\n    #addSidebarSection(title, jslogContext) {\n        const treeElement = new UI.TreeOutline.TreeElement(title, true, jslogContext);\n        treeElement.listItemElement.classList.add('security-group-list-item');\n        treeElement.setCollapsible(false);\n        treeElement.selectable = false;\n        this.sidebarTree.appendChild(treeElement);\n        UI.ARIAUtils.markAsHeading(treeElement.listItemElement, 3);\n        UI.ARIAUtils.setLabel(treeElement.childrenListElement, title);\n        return treeElement;\n    }\n    #originGroupTitle(originGroup) {\n        return this.#originGroupTitles.get(originGroup);\n    }\n    #originGroupElement(originGroup) {\n        return this.#originGroups.get(originGroup);\n    }\n    #createOriginGroupElement(originGroupTitle) {\n        const originGroup = new UI.TreeOutline.TreeElement(originGroupTitle, true);\n        originGroup.selectable = false;\n        originGroup.setCollapsible(false);\n        originGroup.expand();\n        originGroup.listItemElement.classList.add('security-sidebar-origins');\n        UI.ARIAUtils.setLabel(originGroup.childrenListElement, originGroupTitle);\n        return originGroup;\n    }\n    toggleOriginsList(hidden) {\n        for (const element of this.#originGroups.values()) {\n            element.hidden = hidden;\n        }\n    }\n    addOrigin(origin, securityState) {\n        this.#mainViewReloadMessage.hidden = true;\n        const originElement = new OriginTreeElement('security-sidebar-tree-item', this.#renderTreeElement, origin);\n        originElement.tooltip = origin;\n        this.#elementsByOrigin.set(origin, originElement);\n        this.updateOrigin(origin, securityState);\n    }\n    setMainOrigin(origin) {\n        this.#mainOrigin = origin;\n    }\n    get mainOrigin() {\n        return this.#mainOrigin;\n    }\n    get originGroups() {\n        return this.#originGroups;\n    }\n    updateOrigin(origin, securityState) {\n        const originElement = this.#elementsByOrigin.get(origin);\n        originElement.setSecurityState(securityState);\n        let newParent;\n        if (origin === this.#mainOrigin) {\n            newParent = this.#originGroups.get(OriginGroup.MainOrigin);\n            if (securityState === \"secure\" /* Protocol.Security.SecurityState.Secure */) {\n                newParent.title = i18nString(UIStrings.mainOriginSecure);\n            }\n            else {\n                newParent.title = i18nString(UIStrings.mainOriginNonsecure);\n            }\n            UI.ARIAUtils.setLabel(newParent.childrenListElement, newParent.title);\n        }\n        else {\n            switch (securityState) {\n                case \"secure\" /* Protocol.Security.SecurityState.Secure */:\n                    newParent = this.#originGroupElement(OriginGroup.Secure);\n                    break;\n                case \"unknown\" /* Protocol.Security.SecurityState.Unknown */:\n                    newParent = this.#originGroupElement(OriginGroup.Unknown);\n                    break;\n                default:\n                    newParent = this.#originGroupElement(OriginGroup.NonSecure);\n                    break;\n            }\n        }\n        const oldParent = originElement.parent;\n        if (oldParent !== newParent) {\n            if (oldParent) {\n                oldParent.removeChild(originElement);\n                if (oldParent.childCount() === 0) {\n                    oldParent.hidden = true;\n                }\n            }\n            newParent.appendChild(originElement);\n            newParent.hidden = false;\n        }\n    }\n    #clearOriginGroups() {\n        for (const [originGroup, originGroupElement] of this.#originGroups) {\n            if (originGroup === OriginGroup.MainOrigin) {\n                for (let i = originGroupElement.childCount() - 1; i > 0; i--) {\n                    originGroupElement.removeChildAtIndex(i);\n                }\n                originGroupElement.title = this.#originGroupTitle(OriginGroup.MainOrigin);\n                originGroupElement.hidden = false;\n                this.#mainViewReloadMessage.hidden = false;\n            }\n            else {\n                originGroupElement.removeChildren();\n                originGroupElement.hidden = true;\n            }\n        }\n    }\n    clearOrigins() {\n        this.#clearOriginGroups();\n        this.#elementsByOrigin.clear();\n    }\n    wasShown() {\n        super.wasShown();\n        this.sidebarTree.registerCSSFiles([lockIconStyles, sidebarStyles]);\n    }\n    #renderTreeElement(element) {\n        if (element instanceof OriginTreeElement) {\n            const securityState = element.securityState() ?? \"unknown\" /* Protocol.Security.SecurityState.Unknown */;\n            const isOverviewElement = element.listItemElement.classList.contains('security-main-view-sidebar-tree-item');\n            const icon = isOverviewElement ?\n                getSecurityStateIconForOverview(securityState, `lock-icon lock-icon-${securityState}`) :\n                getSecurityStateIconForDetailedView(securityState, `security-property security-property-${securityState}`);\n            const elementTitle = isOverviewElement ? (() => {\n                const title = document.createElement('span');\n                title.classList.add('title');\n                title.textContent = i18nString(UIStrings.overview);\n                return title;\n            })() : createHighlightedUrl(element.origin() ?? Platform.DevToolsPath.EmptyUrlString, securityState);\n            element.setLeadingIcons([icon]);\n            if (element.listItemElement.lastChild) {\n                element.listItemElement.removeChild(element.listItemElement.lastChild);\n            }\n            element.listItemElement.appendChild(elementTitle);\n        }\n    }\n}\n//# sourceMappingURL=SecurityPanelSidebar.js.map","// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport lockIconStyles from './lockIcon.css.js';\nimport mainViewStyles from './mainView.css.js';\nimport { ShowOriginEvent } from './OriginTreeElement.js';\nimport originViewStyles from './originView.css.js';\nimport { Events, SecurityModel, securityStateCompare, SecurityStyleExplanation, SummaryMessages, } from './SecurityModel.js';\nimport { SecurityPanelSidebar } from './SecurityPanelSidebar.js';\nconst UIStrings = {\n    /**\n     *@description Summary div text content in Security Panel of the Security panel\n     */\n    securityOverview: 'Security overview',\n    /**\n     *@description Text to show something is secure\n     */\n    secure: 'Secure',\n    /**\n     *@description Sdk console message message level info of level Labels in Console View of the Console panel\n     */\n    info: 'Info',\n    /**\n     *@description Not secure div text content in Security Panel of the Security panel\n     */\n    notSecure: 'Not secure',\n    /**\n     *@description Text to view a security certificate\n     */\n    viewCertificate: 'View certificate',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    notSecureBroken: 'Not secure (broken)',\n    /**\n     *@description Main summary for page when it has been deemed unsafe by the SafeBrowsing service.\n     */\n    thisPageIsDangerousFlaggedBy: 'This page is dangerous (flagged by Google Safe Browsing).',\n    /**\n     *@description Summary phrase for a security problem where the site is deemed unsafe by the SafeBrowsing service.\n     */\n    flaggedByGoogleSafeBrowsing: 'Flagged by Google Safe Browsing',\n    /**\n     *@description Description of a security problem where the site is deemed unsafe by the SafeBrowsing service.\n     */\n    toCheckThisPagesStatusVisit: 'To check this page\\'s status, visit g.co/safebrowsingstatus.',\n    /**\n     *@description Main summary for a non cert error page.\n     */\n    thisIsAnErrorPage: 'This is an error page.',\n    /**\n     *@description Main summary for where the site is non-secure HTTP.\n     */\n    thisPageIsInsecureUnencrypted: 'This page is insecure (unencrypted HTTP).',\n    /**\n     *@description Main summary for where the site has a non-cryptographic secure origin.\n     */\n    thisPageHasANonhttpsSecureOrigin: 'This page has a non-HTTPS secure origin.',\n    /**\n     *@description Message to display in devtools security tab when the page you are on triggered a safety tip.\n     */\n    thisPageIsSuspicious: 'This page is suspicious',\n    /**\n     *@description Body of message to display in devtools security tab when you are viewing a page that triggered a safety tip.\n     */\n    chromeHasDeterminedThatThisSiteS: 'Chrome has determined that this site could be fake or fraudulent.',\n    /**\n     *@description Second part of the body of message to display in devtools security tab when you are viewing a page that triggered a safety tip.\n     */\n    ifYouBelieveThisIsShownIn: 'If you believe this is shown in error please visit https://g.co/chrome/lookalike-warnings.',\n    /**\n     *@description Summary of a warning when the user visits a page that triggered a Safety Tip because the domain looked like another domain.\n     */\n    possibleSpoofingUrl: 'Possible spoofing URL',\n    /**\n     *@description Body of a warning when the user visits a page that triggered a Safety Tip because the domain looked like another domain.\n     *@example {wikipedia.org} PH1\n     */\n    thisSitesHostnameLooksSimilarToP: 'This site\\'s hostname looks similar to {PH1}. Attackers sometimes mimic sites by making small, hard-to-see changes to the domain name.',\n    /**\n     *@description second part of body of a warning when the user visits a page that triggered a Safety Tip because the domain looked like another domain.\n     */\n    ifYouBelieveThisIsShownInErrorSafety: 'If you believe this is shown in error please visit https://g.co/chrome/lookalike-warnings.',\n    /**\n     *@description Title of the devtools security tab when the page you are on triggered a safety tip.\n     */\n    thisPageIsSuspiciousFlaggedBy: 'This page is suspicious (flagged by Chrome).',\n    /**\n     *@description Text for a security certificate\n     */\n    certificate: 'Certificate',\n    /**\n     *@description Summary phrase for a security problem where the site's certificate chain contains a SHA1 signature.\n     */\n    insecureSha: 'insecure (SHA-1)',\n    /**\n     *@description Description of a security problem where the site's certificate chain contains a SHA1 signature.\n     */\n    theCertificateChainForThisSite: 'The certificate chain for this site contains a certificate signed using SHA-1.',\n    /**\n     *@description Summary phrase for a security problem where the site's certificate is missing a subjectAltName extension.\n     */\n    subjectAlternativeNameMissing: '`Subject Alternative Name` missing',\n    /**\n     *@description Description of a security problem where the site's certificate is missing a subjectAltName extension.\n     */\n    theCertificateForThisSiteDoesNot: 'The certificate for this site does not contain a `Subject Alternative Name` extension containing a domain name or IP address.',\n    /**\n     *@description Summary phrase for a security problem with the site's certificate.\n     */\n    missing: 'missing',\n    /**\n     *@description Description of a security problem with the site's certificate.\n     *@example {net::ERR_CERT_AUTHORITY_INVALID} PH1\n     */\n    thisSiteIsMissingAValidTrusted: 'This site is missing a valid, trusted certificate ({PH1}).',\n    /**\n     *@description Summary phrase for a site that has a valid server certificate.\n     */\n    validAndTrusted: 'valid and trusted',\n    /**\n     *@description Description of a site that has a valid server certificate.\n     *@example {Let's Encrypt Authority X3} PH1\n     */\n    theConnectionToThisSiteIsUsingA: 'The connection to this site is using a valid, trusted server certificate issued by {PH1}.',\n    /**\n     *@description Summary phrase for a security state where Private Key Pinning is ignored because the certificate chains to a locally-trusted root.\n     */\n    publickeypinningBypassed: 'Public-Key-Pinning bypassed',\n    /**\n     *@description Description of a security state where Private Key Pinning is ignored because the certificate chains to a locally-trusted root.\n     */\n    publickeypinningWasBypassedByA: 'Public-Key-Pinning was bypassed by a local root certificate.',\n    /**\n     *@description Summary phrase for a site with a certificate that is expiring soon.\n     */\n    certificateExpiresSoon: 'Certificate expires soon',\n    /**\n     *@description Description for a site with a certificate that is expiring soon.\n     */\n    theCertificateForThisSiteExpires: 'The certificate for this site expires in less than 48 hours and needs to be renewed.',\n    /**\n     *@description Text that refers to the network connection\n     */\n    connection: 'Connection',\n    /**\n     *@description Summary phrase for a site that uses a modern, secure TLS protocol and cipher.\n     */\n    secureConnectionSettings: 'secure connection settings',\n    /**\n     *@description Description of a site's TLS settings.\n     *@example {TLS 1.2} PH1\n     *@example {ECDHE_RSA} PH2\n     *@example {AES_128_GCM} PH3\n     */\n    theConnectionToThisSiteIs: 'The connection to this site is encrypted and authenticated using {PH1}, {PH2}, and {PH3}.',\n    /**\n     *@description A recommendation to the site owner to use a modern TLS protocol\n     *@example {TLS 1.0} PH1\n     */\n    sIsObsoleteEnableTlsOrLater: '{PH1} is obsolete. Enable TLS 1.2 or later.',\n    /**\n     *@description A recommendation to the site owner to use a modern TLS key exchange\n     */\n    rsaKeyExchangeIsObsoleteEnableAn: 'RSA key exchange is obsolete. Enable an ECDHE-based cipher suite.',\n    /**\n     *@description A recommendation to the site owner to use a modern TLS cipher\n     *@example {3DES_EDE_CBC} PH1\n     */\n    sIsObsoleteEnableAnAesgcmbased: '{PH1} is obsolete. Enable an AES-GCM-based cipher suite.',\n    /**\n     *@description A recommendation to the site owner to use a modern TLS server signature\n     */\n    theServerSignatureUsesShaWhichIs: 'The server signature uses SHA-1, which is obsolete. Enable a SHA-2 signature algorithm instead. (Note this is different from the signature in the certificate.)',\n    /**\n     *@description Summary phrase for a site that uses an outdated SSL settings (protocol, key exchange, or cipher).\n     */\n    obsoleteConnectionSettings: 'obsolete connection settings',\n    /**\n     *@description A title of the 'Resources' action category\n     */\n    resources: 'Resources',\n    /**\n     *@description Summary for page when there is active mixed content\n     */\n    activeMixedContent: 'active mixed content',\n    /**\n     *@description Description for page when there is active mixed content\n     */\n    youHaveRecentlyAllowedNonsecure: 'You have recently allowed non-secure content (such as scripts or iframes) to run on this site.',\n    /**\n     *@description Summary for page when there is mixed content\n     */\n    mixedContent: 'mixed content',\n    /**\n     *@description Description for page when there is mixed content\n     */\n    thisPageIncludesHttpResources: 'This page includes HTTP resources.',\n    /**\n     *@description Summary for page when there is a non-secure form\n     */\n    nonsecureForm: 'non-secure form',\n    /**\n     *@description Description for page when there is a non-secure form\n     */\n    thisPageIncludesAFormWithA: 'This page includes a form with a non-secure \"action\" attribute.',\n    /**\n     *@description Summary for the page when it contains active content with certificate error\n     */\n    activeContentWithCertificate: 'active content with certificate errors',\n    /**\n     *@description Description for the page when it contains active content with certificate error\n     */\n    youHaveRecentlyAllowedContent: 'You have recently allowed content loaded with certificate errors (such as scripts or iframes) to run on this site.',\n    /**\n     *@description Summary for page when there is active content with certificate errors\n     */\n    contentWithCertificateErrors: 'content with certificate errors',\n    /**\n     *@description Description for page when there is content with certificate errors\n     */\n    thisPageIncludesResourcesThat: 'This page includes resources that were loaded with certificate errors.',\n    /**\n     *@description Summary for page when all resources are served securely\n     */\n    allServedSecurely: 'all served securely',\n    /**\n     *@description Description for page when all resources are served securely\n     */\n    allResourcesOnThisPageAreServed: 'All resources on this page are served securely.',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    blockedMixedContent: 'Blocked mixed content',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    yourPageRequestedNonsecure: 'Your page requested non-secure resources that were blocked.',\n    /**\n     *@description Refresh prompt text content in Security Panel of the Security panel\n     */\n    reloadThePageToRecordRequestsFor: 'Reload the page to record requests for HTTP resources.',\n    /**\n     * @description Link text in the Security Panel. Clicking the link navigates the user to the\n     * Network panel. Requests refers to network requests. Each request is a piece of data transmitted\n     * from the current user's browser to a remote server.\n     */\n    viewDRequestsInNetworkPanel: '{n, plural, =1 {View # request in Network Panel} other {View # requests in Network Panel}}',\n    /**\n     *@description Text for the origin of something\n     */\n    origin: 'Origin',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    viewRequestsInNetworkPanel: 'View requests in Network Panel',\n    /**\n     *@description Text for security or network protocol\n     */\n    protocol: 'Protocol',\n    /**\n     *@description Text in the Security panel that refers to how the TLS handshake\n     *established encryption keys.\n     */\n    keyExchange: 'Key exchange',\n    /**\n     *@description Text in Security Panel that refers to how the TLS handshake\n     *encrypted data.\n     */\n    cipher: 'Cipher',\n    /**\n     *@description Text in Security Panel that refers to the signature algorithm\n     *used by the server for authenticate in the TLS handshake.\n     */\n    serverSignature: 'Server signature',\n    /**\n     *@description Text in Security Panel that refers to whether the ClientHello\n     *message in the TLS handshake was encrypted.\n     */\n    encryptedClientHello: 'Encrypted ClientHello',\n    /**\n     *@description Sct div text content in Security Panel of the Security panel\n     */\n    certificateTransparency: 'Certificate Transparency',\n    /**\n     *@description Text that refers to the subject of a security certificate\n     */\n    subject: 'Subject',\n    /**\n     *@description Text to show since when an item is valid\n     */\n    validFrom: 'Valid from',\n    /**\n     *@description Text to indicate the expiry date\n     */\n    validUntil: 'Valid until',\n    /**\n     *@description Text for the issuer of an item\n     */\n    issuer: 'Issuer',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    openFullCertificateDetails: 'Open full certificate details',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    sct: 'SCT',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    logName: 'Log name',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    logId: 'Log ID',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    validationStatus: 'Validation status',\n    /**\n     *@description Text for the source of something\n     */\n    source: 'Source',\n    /**\n     * @description Label for a date/time string in the Security panel. It indicates the time at which\n     * a security certificate was issued (created by an authority and distributed).\n     */\n    issuedAt: 'Issued at',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    hashAlgorithm: 'Hash algorithm',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    signatureAlgorithm: 'Signature algorithm',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    signatureData: 'Signature data',\n    /**\n     *@description Toggle scts details link text content in Security Panel of the Security panel\n     */\n    showFullDetails: 'Show full details',\n    /**\n     *@description Toggle scts details link text content in Security Panel of the Security panel\n     */\n    hideFullDetails: 'Hide full details',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    thisRequestCompliesWithChromes: 'This request complies with `Chrome`\\'s Certificate Transparency policy.',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    thisRequestDoesNotComplyWith: 'This request does not comply with `Chrome`\\'s Certificate Transparency policy.',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    thisResponseWasLoadedFromCache: 'This response was loaded from cache. Some security details might be missing.',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    theSecurityDetailsAboveAreFrom: 'The security details above are from the first inspected response.',\n    /**\n     *@description Main summary for where the site has a non-cryptographic secure origin.\n     */\n    thisOriginIsANonhttpsSecure: 'This origin is a non-HTTPS secure origin.',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    yourConnectionToThisOriginIsNot: 'Your connection to this origin is not secure.',\n    /**\n     *@description No info div text content in Security Panel of the Security panel\n     */\n    noSecurityInformation: 'No security information',\n    /**\n     *@description Text in Security Panel of the Security panel\n     */\n    noSecurityDetailsAreAvailableFor: 'No security details are available for this origin.',\n    /**\n     *@description San div text content in Security Panel of the Security panel\n     */\n    na: '(n/a)',\n    /**\n     *@description Text to show less content\n     */\n    showLess: 'Show less',\n    /**\n     *@description Truncated santoggle text content in Security Panel of the Security panel\n     *@example {2} PH1\n     */\n    showMoreSTotal: 'Show more ({PH1} total)',\n    /**\n     *@description Shown when a field refers to an option that is unknown to the frontend.\n     */\n    unknownField: 'unknown',\n    /**\n     *@description Shown when a field refers to a TLS feature which was enabled.\n     */\n    enabled: 'enabled',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/security/SecurityPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet securityPanelInstance;\n// See https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-signaturescheme\n// This contains signature schemes supported by Chrome.\nconst SignatureSchemeStrings = new Map([\n    // The full name for these schemes is RSASSA-PKCS1-v1_5, sometimes\n    // \"PKCS#1 v1.5\", but those are very long, so let \"RSA\" vs \"RSA-PSS\"\n    // disambiguate.\n    [0x0201, 'RSA with SHA-1'],\n    [0x0401, 'RSA with SHA-256'],\n    [0x0501, 'RSA with SHA-384'],\n    [0x0601, 'RSA with SHA-512'],\n    // We omit the curve from these names because in TLS 1.2 these code points\n    // were not specific to a curve. Saying \"P-256\" for a server that used a P-384\n    // key with SHA-256 in TLS 1.2 would be confusing.\n    [0x0403, 'ECDSA with SHA-256'],\n    [0x0503, 'ECDSA with SHA-384'],\n    [0x0804, 'RSA-PSS with SHA-256'],\n    [0x0805, 'RSA-PSS with SHA-384'],\n    [0x0806, 'RSA-PSS with SHA-512'],\n]);\nconst LOCK_ICON_NAME = 'lock';\nconst WARNING_ICON_NAME = 'warning';\nconst INFO_ICON_NAME = 'info';\nexport function getSecurityStateIconForDetailedView(securityState, className) {\n    let iconName;\n    switch (securityState) {\n        case \"neutral\" /* Protocol.Security.SecurityState.Neutral */: // fallthrough\n        case \"insecure\" /* Protocol.Security.SecurityState.Insecure */: // fallthrough\n        case \"insecure-broken\" /* Protocol.Security.SecurityState.InsecureBroken */:\n            iconName = WARNING_ICON_NAME;\n            break;\n        case \"secure\" /* Protocol.Security.SecurityState.Secure */:\n            iconName = LOCK_ICON_NAME;\n            break;\n        case \"info\" /* Protocol.Security.SecurityState.Info */: // fallthrough\n        case \"unknown\" /* Protocol.Security.SecurityState.Unknown */:\n            iconName = INFO_ICON_NAME;\n            break;\n    }\n    return IconButton.Icon.create(iconName, className);\n}\nexport function getSecurityStateIconForOverview(securityState, className) {\n    let iconName;\n    switch (securityState) {\n        case \"unknown\" /* Protocol.Security.SecurityState.Unknown */: // fallthrough\n        case \"neutral\" /* Protocol.Security.SecurityState.Neutral */:\n            iconName = INFO_ICON_NAME;\n            break;\n        case \"insecure\" /* Protocol.Security.SecurityState.Insecure */: // fallthrough\n        case \"insecure-broken\" /* Protocol.Security.SecurityState.InsecureBroken */:\n            iconName = WARNING_ICON_NAME;\n            break;\n        case \"secure\" /* Protocol.Security.SecurityState.Secure */:\n            iconName = LOCK_ICON_NAME;\n            break;\n        case \"info\" /* Protocol.Security.SecurityState.Info */:\n            throw new Error(`Unexpected security state ${securityState}`);\n    }\n    return IconButton.Icon.create(iconName, className);\n}\nexport function createHighlightedUrl(url, securityState) {\n    const schemeSeparator = '://';\n    const index = url.indexOf(schemeSeparator);\n    // If the separator is not found, just display the text without highlighting.\n    if (index === -1) {\n        const text = document.createElement('span');\n        text.textContent = url;\n        return text;\n    }\n    const highlightedUrl = document.createElement('span');\n    highlightedUrl.classList.add('highlighted-url');\n    const scheme = url.substr(0, index);\n    const content = url.substr(index + schemeSeparator.length);\n    highlightedUrl.createChild('span', 'url-scheme-' + securityState).textContent = scheme;\n    highlightedUrl.createChild('span', 'url-scheme-separator').textContent = schemeSeparator;\n    highlightedUrl.createChild('span').textContent = content;\n    return highlightedUrl;\n}\nconst { render, html } = LitHtml;\nexport class SecurityPanel extends UI.Panel.Panel {\n    view;\n    mainView;\n    sidebar;\n    lastResponseReceivedForLoaderId;\n    origins;\n    filterRequestCounts;\n    visibleView;\n    eventListeners;\n    securityModel;\n    splitWidget;\n    constructor(view = (input, output, target) => {\n        // clang-format off\n        render(html `\n    <devtools-split-widget\n    .options=${{ vertical: true, settingName: 'security' }}\n    ${UI.Widget.widgetRef(UI.SplitWidget.SplitWidget, e => { output.splitWidget = e; })}>\n          <devtools-widget\n          slot=\"main\"\n          .widgetClass=${SecurityMainView}\n          .widgetParams=${[input.panel]}\n          ${UI.Widget.widgetRef(SecurityMainView, e => { output.mainView = e; })}>\n        </devtools-widget>\n        <devtools-widget\n          slot=\"sidebar\"\n          .widgetClass=${SecurityPanelSidebar}\n          ${UI.Widget.widgetRef(SecurityPanelSidebar, e => { output.sidebar = e; })}>\n        </devtools-widget>\n    </devtools-split-widget>`, target, { host: this });\n        // clang-format on\n    }) {\n        super('security');\n        this.view = view;\n        this.doUpdate();\n        this.sidebar.setMinimumSize(100, 25);\n        this.sidebar.element.classList.add('panel-sidebar');\n        this.sidebar.element.setAttribute('jslog', `${VisualLogging.pane('sidebar').track({ resize: true })}`);\n        this.element.addEventListener(ShowOriginEvent.eventName, (event) => {\n            if (event.origin) {\n                this.showOrigin(event.origin);\n            }\n            else {\n                this.setVisibleView(this.mainView);\n            }\n        });\n        this.lastResponseReceivedForLoaderId = new Map();\n        this.origins = new Map();\n        this.filterRequestCounts = new Map();\n        this.visibleView = null;\n        this.eventListeners = [];\n        this.securityModel = null;\n        SDK.TargetManager.TargetManager.instance().observeModels(SecurityModel, this, { scoped: true });\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.PrimaryPageChanged, this.onPrimaryPageChanged, this);\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!securityPanelInstance || forceNew) {\n            securityPanelInstance = new SecurityPanel();\n        }\n        return securityPanelInstance;\n    }\n    static createCertificateViewerButtonForOrigin(text, origin) {\n        const certificateButton = UI.UIUtils.createTextButton(text, async (e) => {\n            e.consume();\n            const names = await SDK.NetworkManager.MultitargetNetworkManager.instance().getCertificate(origin);\n            if (names.length > 0) {\n                Host.InspectorFrontendHost.InspectorFrontendHostInstance.showCertificateViewer(names);\n            }\n        }, { className: 'origin-button', jslogContext: 'security.view-certificate-for-origin', title: text });\n        UI.ARIAUtils.markAsButton(certificateButton);\n        return certificateButton;\n    }\n    static createCertificateViewerButtonForCert(text, names) {\n        const certificateButton = UI.UIUtils.createTextButton(text, e => {\n            e.consume();\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.showCertificateViewer(names);\n        }, { className: 'origin-button', jslogContext: 'security.view-certificate' });\n        UI.ARIAUtils.markAsButton(certificateButton);\n        return certificateButton;\n    }\n    doUpdate() {\n        this.view({ panel: this }, this, this.contentElement);\n    }\n    updateVisibleSecurityState(visibleSecurityState) {\n        this.sidebar.securityOverviewElement.setSecurityState(visibleSecurityState.securityState);\n        this.mainView.updateVisibleSecurityState(visibleSecurityState);\n    }\n    onVisibleSecurityStateChanged({ data }) {\n        this.updateVisibleSecurityState(data);\n    }\n    selectAndSwitchToMainView() {\n        // The sidebar element will trigger displaying the main view. Rather than making a redundant call to display the main view, we rely on this.\n        this.sidebar.securityOverviewElement.select(true);\n    }\n    showOrigin(origin) {\n        const originState = this.origins.get(origin);\n        if (!originState) {\n            return;\n        }\n        if (!originState.originView) {\n            originState.originView = new SecurityOriginView(this, origin, originState);\n        }\n        this.setVisibleView(originState.originView);\n    }\n    wasShown() {\n        super.wasShown();\n        if (!this.visibleView) {\n            this.selectAndSwitchToMainView();\n        }\n    }\n    focus() {\n        this.sidebar.focus();\n    }\n    setVisibleView(view) {\n        if (this.visibleView === view) {\n            return;\n        }\n        if (this.visibleView) {\n            this.visibleView.detach();\n        }\n        this.visibleView = view;\n        if (view) {\n            this.splitWidget.setMainWidget(view);\n        }\n    }\n    onResponseReceived(event) {\n        const request = event.data.request;\n        if (request.resourceType() === Common.ResourceType.resourceTypes.Document && request.loaderId) {\n            this.lastResponseReceivedForLoaderId.set(request.loaderId, request);\n        }\n    }\n    processRequest(request) {\n        const origin = Common.ParsedURL.ParsedURL.extractOrigin(request.url());\n        if (!origin) {\n            // We don't handle resources like data: URIs. Most of them don't affect the lock icon.\n            return;\n        }\n        let securityState = request.securityState();\n        if (request.mixedContentType === \"blockable\" /* Protocol.Security.MixedContentType.Blockable */ ||\n            request.mixedContentType === \"optionally-blockable\" /* Protocol.Security.MixedContentType.OptionallyBlockable */) {\n            securityState = \"insecure\" /* Protocol.Security.SecurityState.Insecure */;\n        }\n        const originState = this.origins.get(origin);\n        if (originState) {\n            if (securityStateCompare(securityState, originState.securityState) < 0) {\n                originState.securityState = securityState;\n                const securityDetails = request.securityDetails();\n                if (securityDetails) {\n                    originState.securityDetails = securityDetails;\n                }\n                this.sidebar.updateOrigin(origin, securityState);\n                if (originState.originView) {\n                    originState.originView.setSecurityState(securityState);\n                }\n            }\n        }\n        else {\n            // This stores the first security details we see for an origin, but we should\n            // eventually store a (deduplicated) list of all the different security\n            // details we have seen. https://crbug.com/503170\n            const newOriginState = {\n                securityState,\n                securityDetails: request.securityDetails(),\n                loadedFromCache: request.cached(),\n                originView: undefined,\n            };\n            this.origins.set(origin, newOriginState);\n            this.sidebar.addOrigin(origin, securityState);\n            // Don't construct the origin view yet (let it happen lazily).\n        }\n    }\n    onRequestFinished(event) {\n        const request = event.data;\n        this.updateFilterRequestCounts(request);\n        this.processRequest(request);\n    }\n    updateFilterRequestCounts(request) {\n        if (request.mixedContentType === \"none\" /* Protocol.Security.MixedContentType.None */) {\n            return;\n        }\n        let filterKey = \"all\" /* NetworkForward.UIFilter.MixedContentFilterValues.ALL */;\n        if (request.wasBlocked()) {\n            filterKey = \"blocked\" /* NetworkForward.UIFilter.MixedContentFilterValues.BLOCKED */;\n        }\n        else if (request.mixedContentType === \"blockable\" /* Protocol.Security.MixedContentType.Blockable */) {\n            filterKey = \"block-overridden\" /* NetworkForward.UIFilter.MixedContentFilterValues.BLOCK_OVERRIDDEN */;\n        }\n        else if (request.mixedContentType === \"optionally-blockable\" /* Protocol.Security.MixedContentType.OptionallyBlockable */) {\n            filterKey = \"displayed\" /* NetworkForward.UIFilter.MixedContentFilterValues.DISPLAYED */;\n        }\n        const currentCount = this.filterRequestCounts.get(filterKey);\n        if (!currentCount) {\n            this.filterRequestCounts.set(filterKey, 1);\n        }\n        else {\n            this.filterRequestCounts.set(filterKey, currentCount + 1);\n        }\n        this.mainView.refreshExplanations();\n    }\n    filterRequestCount(filterKey) {\n        return this.filterRequestCounts.get(filterKey) || 0;\n    }\n    modelAdded(securityModel) {\n        if (securityModel.target() !== securityModel.target().outermostTarget()) {\n            return;\n        }\n        this.securityModel = securityModel;\n        const resourceTreeModel = securityModel.resourceTreeModel();\n        const networkManager = securityModel.networkManager();\n        if (this.eventListeners.length) {\n            Common.EventTarget.removeEventListeners(this.eventListeners);\n        }\n        this.eventListeners = [\n            securityModel.addEventListener(Events.VisibleSecurityStateChanged, this.onVisibleSecurityStateChanged, this),\n            resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.InterstitialShown, this.onInterstitialShown, this),\n            resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.InterstitialHidden, this.onInterstitialHidden, this),\n            networkManager.addEventListener(SDK.NetworkManager.Events.ResponseReceived, this.onResponseReceived, this),\n            networkManager.addEventListener(SDK.NetworkManager.Events.RequestFinished, this.onRequestFinished, this),\n        ];\n        if (resourceTreeModel.isInterstitialShowing) {\n            this.onInterstitialShown();\n        }\n    }\n    modelRemoved(securityModel) {\n        if (this.securityModel !== securityModel) {\n            return;\n        }\n        this.securityModel = null;\n        Common.EventTarget.removeEventListeners(this.eventListeners);\n    }\n    onPrimaryPageChanged(event) {\n        const { frame } = event.data;\n        const request = this.lastResponseReceivedForLoaderId.get(frame.loaderId);\n        this.selectAndSwitchToMainView();\n        this.sidebar.clearOrigins();\n        this.origins.clear();\n        this.lastResponseReceivedForLoaderId.clear();\n        this.filterRequestCounts.clear();\n        // After clearing the filtered request counts, refresh the\n        // explanations to reflect the new counts.\n        this.mainView.refreshExplanations();\n        // If we could not find a matching request (as in the case of clicking\n        // through an interstitial, see https://crbug.com/669309), set the origin\n        // based upon the url data from the PrimaryPageChanged event itself.\n        const origin = Common.ParsedURL.ParsedURL.extractOrigin(request ? request.url() : frame.url);\n        this.sidebar.setMainOrigin(origin);\n        if (request) {\n            this.processRequest(request);\n        }\n    }\n    onInterstitialShown() {\n        // The panel might have been displaying the origin view on the\n        // previously loaded page. When showing an interstitial, switch\n        // back to the Overview view.\n        this.selectAndSwitchToMainView();\n        this.sidebar.toggleOriginsList(true /* hidden */);\n    }\n    onInterstitialHidden() {\n        this.sidebar.toggleOriginsList(false /* hidden */);\n    }\n}\nexport var OriginGroup;\n(function (OriginGroup) {\n    /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n    OriginGroup[\"MainOrigin\"] = \"MainOrigin\";\n    OriginGroup[\"NonSecure\"] = \"NonSecure\";\n    OriginGroup[\"Secure\"] = \"Secure\";\n    OriginGroup[\"Unknown\"] = \"Unknown\";\n    /* eslint-enable @typescript-eslint/naming-convention */\n})(OriginGroup || (OriginGroup = {}));\nexport class SecurityMainView extends UI.Widget.VBox {\n    panel;\n    summarySection;\n    securityExplanationsMain;\n    securityExplanationsExtra;\n    lockSpectrum;\n    summaryText;\n    explanations;\n    securityState;\n    constructor(panel, element) {\n        super(undefined, undefined, element);\n        this.element.setAttribute('jslog', `${VisualLogging.pane('security.main-view')}`);\n        this.setMinimumSize(200, 100);\n        this.contentElement.classList.add('security-main-view');\n        this.panel = panel;\n        this.summarySection = this.contentElement.createChild('div', 'security-summary');\n        // Info explanations should appear after all others.\n        this.securityExplanationsMain =\n            this.contentElement.createChild('div', 'security-explanation-list security-explanations-main');\n        this.securityExplanationsExtra =\n            this.contentElement.createChild('div', 'security-explanation-list security-explanations-extra');\n        // Fill the security summary section.\n        const summaryDiv = this.summarySection.createChild('div', 'security-summary-section-title');\n        summaryDiv.textContent = i18nString(UIStrings.securityOverview);\n        UI.ARIAUtils.markAsHeading(summaryDiv, 1);\n        const lockSpectrum = this.summarySection.createChild('div', 'lock-spectrum');\n        this.lockSpectrum = new Map([\n            [\n                \"secure\" /* Protocol.Security.SecurityState.Secure */,\n                lockSpectrum.appendChild(getSecurityStateIconForOverview(\"secure\" /* Protocol.Security.SecurityState.Secure */, 'lock-icon lock-icon-secure')),\n            ],\n            [\n                \"neutral\" /* Protocol.Security.SecurityState.Neutral */,\n                lockSpectrum.appendChild(getSecurityStateIconForOverview(\"neutral\" /* Protocol.Security.SecurityState.Neutral */, 'lock-icon lock-icon-neutral')),\n            ],\n            [\n                \"insecure\" /* Protocol.Security.SecurityState.Insecure */,\n                lockSpectrum.appendChild(getSecurityStateIconForOverview(\"insecure\" /* Protocol.Security.SecurityState.Insecure */, 'lock-icon lock-icon-insecure')),\n            ],\n        ]);\n        UI.Tooltip.Tooltip.install(this.getLockSpectrumDiv(\"secure\" /* Protocol.Security.SecurityState.Secure */), i18nString(UIStrings.secure));\n        UI.Tooltip.Tooltip.install(this.getLockSpectrumDiv(\"neutral\" /* Protocol.Security.SecurityState.Neutral */), i18nString(UIStrings.info));\n        UI.Tooltip.Tooltip.install(this.getLockSpectrumDiv(\"insecure\" /* Protocol.Security.SecurityState.Insecure */), i18nString(UIStrings.notSecure));\n        this.summarySection.createChild('div', 'triangle-pointer-container')\n            .createChild('div', 'triangle-pointer-wrapper')\n            .createChild('div', 'triangle-pointer');\n        this.summaryText = this.summarySection.createChild('div', 'security-summary-text');\n        UI.ARIAUtils.markAsHeading(this.summaryText, 2);\n        this.explanations = null;\n        this.securityState = null;\n    }\n    getLockSpectrumDiv(securityState) {\n        const element = this.lockSpectrum.get(securityState);\n        if (!element) {\n            throw new Error(`Invalid argument: ${securityState}`);\n        }\n        return element;\n    }\n    addExplanation(parent, explanation) {\n        const explanationSection = parent.createChild('div', 'security-explanation');\n        explanationSection.classList.add('security-explanation-' + explanation.securityState);\n        const icon = getSecurityStateIconForDetailedView(explanation.securityState, 'security-property security-property-' + explanation.securityState);\n        explanationSection.appendChild(icon);\n        const text = explanationSection.createChild('div', 'security-explanation-text');\n        const explanationHeader = text.createChild('div', 'security-explanation-title');\n        if (explanation.title) {\n            explanationHeader.createChild('span').textContent = explanation.title + ' - ';\n            explanationHeader.createChild('span', 'security-explanation-title-' + explanation.securityState).textContent =\n                explanation.summary;\n        }\n        else {\n            explanationHeader.textContent = explanation.summary;\n        }\n        text.createChild('div').textContent = explanation.description;\n        if (explanation.certificate.length) {\n            text.appendChild(SecurityPanel.createCertificateViewerButtonForCert(i18nString(UIStrings.viewCertificate), explanation.certificate));\n        }\n        if (explanation.recommendations && explanation.recommendations.length) {\n            const recommendationList = text.createChild('ul', 'security-explanation-recommendations');\n            for (const recommendation of explanation.recommendations) {\n                recommendationList.createChild('li').textContent = recommendation;\n            }\n        }\n        return text;\n    }\n    updateVisibleSecurityState(visibleSecurityState) {\n        // Remove old state.\n        // It's safe to call this even when this.securityState is undefined.\n        this.summarySection.classList.remove('security-summary-' + this.securityState);\n        // Add new state.\n        this.securityState = visibleSecurityState.securityState;\n        this.summarySection.classList.add('security-summary-' + this.securityState);\n        // Update the color and title of the triangle icon in the lock spectrum to\n        // match the security state.\n        if (this.securityState === \"insecure\" /* Protocol.Security.SecurityState.Insecure */) {\n            this.getLockSpectrumDiv(\"insecure\" /* Protocol.Security.SecurityState.Insecure */).classList.add('lock-icon-insecure');\n            this.getLockSpectrumDiv(\"insecure\" /* Protocol.Security.SecurityState.Insecure */).classList.remove('lock-icon-insecure-broken');\n            UI.Tooltip.Tooltip.install(this.getLockSpectrumDiv(\"insecure\" /* Protocol.Security.SecurityState.Insecure */), i18nString(UIStrings.notSecure));\n        }\n        else if (this.securityState === \"insecure-broken\" /* Protocol.Security.SecurityState.InsecureBroken */) {\n            this.getLockSpectrumDiv(\"insecure\" /* Protocol.Security.SecurityState.Insecure */).classList.add('lock-icon-insecure-broken');\n            this.getLockSpectrumDiv(\"insecure\" /* Protocol.Security.SecurityState.Insecure */).classList.remove('lock-icon-insecure');\n            UI.Tooltip.Tooltip.install(this.getLockSpectrumDiv(\"insecure\" /* Protocol.Security.SecurityState.Insecure */), i18nString(UIStrings.notSecureBroken));\n        }\n        const { summary, explanations } = this.getSecuritySummaryAndExplanations(visibleSecurityState);\n        // Use override summary if present, otherwise use base explanation\n        this.summaryText.textContent = summary || SummaryMessages[this.securityState]();\n        this.explanations = this.orderExplanations(explanations);\n        this.refreshExplanations();\n    }\n    getSecuritySummaryAndExplanations(visibleSecurityState) {\n        const { securityState, securityStateIssueIds } = visibleSecurityState;\n        let summary;\n        const explanations = [];\n        summary = this.explainSafetyTipSecurity(visibleSecurityState, summary, explanations);\n        if (securityStateIssueIds.includes('malicious-content')) {\n            summary = i18nString(UIStrings.thisPageIsDangerousFlaggedBy);\n            // Always insert SafeBrowsing explanation at the front.\n            explanations.unshift(new SecurityStyleExplanation(\"insecure\" /* Protocol.Security.SecurityState.Insecure */, undefined, i18nString(UIStrings.flaggedByGoogleSafeBrowsing), i18nString(UIStrings.toCheckThisPagesStatusVisit)));\n        }\n        else if (securityStateIssueIds.includes('is-error-page') &&\n            (visibleSecurityState.certificateSecurityState === null ||\n                visibleSecurityState.certificateSecurityState.certificateNetworkError === null)) {\n            summary = i18nString(UIStrings.thisIsAnErrorPage);\n            // In the case of a non cert error page, we usually don't have a\n            // certificate, connection, or content that needs to be explained, e.g. in\n            // the case of a net error, so we can early return.\n            return { summary, explanations };\n        }\n        else if (securityState === \"insecure-broken\" /* Protocol.Security.SecurityState.InsecureBroken */ &&\n            securityStateIssueIds.includes('scheme-is-not-cryptographic')) {\n            summary = summary || i18nString(UIStrings.thisPageIsInsecureUnencrypted);\n        }\n        if (securityStateIssueIds.includes('scheme-is-not-cryptographic')) {\n            if (securityState === \"neutral\" /* Protocol.Security.SecurityState.Neutral */ &&\n                !securityStateIssueIds.includes('insecure-origin')) {\n                summary = i18nString(UIStrings.thisPageHasANonhttpsSecureOrigin);\n            }\n            return { summary, explanations };\n        }\n        this.explainCertificateSecurity(visibleSecurityState, explanations);\n        this.explainConnectionSecurity(visibleSecurityState, explanations);\n        this.explainContentSecurity(visibleSecurityState, explanations);\n        return { summary, explanations };\n    }\n    explainSafetyTipSecurity(visibleSecurityState, summary, explanations) {\n        const { securityStateIssueIds, safetyTipInfo } = visibleSecurityState;\n        const currentExplanations = [];\n        if (securityStateIssueIds.includes('bad_reputation')) {\n            const formatedDescription = `${i18nString(UIStrings.chromeHasDeterminedThatThisSiteS)}\\n\\n${i18nString(UIStrings.ifYouBelieveThisIsShownIn)}`;\n            currentExplanations.push({\n                summary: i18nString(UIStrings.thisPageIsSuspicious),\n                description: formatedDescription,\n            });\n        }\n        else if (securityStateIssueIds.includes('lookalike') && safetyTipInfo && safetyTipInfo.safeUrl) {\n            const hostname = new URL(safetyTipInfo.safeUrl).hostname;\n            const hostnamePlaceholder = { PH1: hostname };\n            const formatedDescriptionSafety = `${i18nString(UIStrings.thisSitesHostnameLooksSimilarToP, hostnamePlaceholder)}\\n\\n${i18nString(UIStrings.ifYouBelieveThisIsShownInErrorSafety)}`;\n            currentExplanations.push({ summary: i18nString(UIStrings.possibleSpoofingUrl), description: formatedDescriptionSafety });\n        }\n        if (currentExplanations.length > 0) {\n            // To avoid overwriting SafeBrowsing's title, set the main summary only if\n            // it's empty. The title set here can be overridden by later checks (e.g.\n            // bad HTTP).\n            summary = summary || i18nString(UIStrings.thisPageIsSuspiciousFlaggedBy);\n            explanations.push(new SecurityStyleExplanation(\"insecure\" /* Protocol.Security.SecurityState.Insecure */, undefined, currentExplanations[0].summary, currentExplanations[0].description));\n        }\n        return summary;\n    }\n    explainCertificateSecurity(visibleSecurityState, explanations) {\n        const { certificateSecurityState, securityStateIssueIds } = visibleSecurityState;\n        const title = i18nString(UIStrings.certificate);\n        if (certificateSecurityState && certificateSecurityState.certificateHasSha1Signature) {\n            const explanationSummary = i18nString(UIStrings.insecureSha);\n            const description = i18nString(UIStrings.theCertificateChainForThisSite);\n            if (certificateSecurityState.certificateHasWeakSignature) {\n                explanations.push(new SecurityStyleExplanation(\"insecure\" /* Protocol.Security.SecurityState.Insecure */, title, explanationSummary, description, certificateSecurityState.certificate, \"none\" /* Protocol.Security.MixedContentType.None */));\n            }\n            else {\n                explanations.push(new SecurityStyleExplanation(\"neutral\" /* Protocol.Security.SecurityState.Neutral */, title, explanationSummary, description, certificateSecurityState.certificate, \"none\" /* Protocol.Security.MixedContentType.None */));\n            }\n        }\n        if (certificateSecurityState && securityStateIssueIds.includes('cert-missing-subject-alt-name')) {\n            explanations.push(new SecurityStyleExplanation(\"insecure\" /* Protocol.Security.SecurityState.Insecure */, title, i18nString(UIStrings.subjectAlternativeNameMissing), i18nString(UIStrings.theCertificateForThisSiteDoesNot), certificateSecurityState.certificate, \"none\" /* Protocol.Security.MixedContentType.None */));\n        }\n        if (certificateSecurityState && certificateSecurityState.certificateNetworkError !== null) {\n            explanations.push(new SecurityStyleExplanation(\"insecure\" /* Protocol.Security.SecurityState.Insecure */, title, i18nString(UIStrings.missing), i18nString(UIStrings.thisSiteIsMissingAValidTrusted, { PH1: certificateSecurityState.certificateNetworkError }), certificateSecurityState.certificate, \"none\" /* Protocol.Security.MixedContentType.None */));\n        }\n        else if (certificateSecurityState && !certificateSecurityState.certificateHasSha1Signature) {\n            explanations.push(new SecurityStyleExplanation(\"secure\" /* Protocol.Security.SecurityState.Secure */, title, i18nString(UIStrings.validAndTrusted), i18nString(UIStrings.theConnectionToThisSiteIsUsingA, { PH1: certificateSecurityState.issuer }), certificateSecurityState.certificate, \"none\" /* Protocol.Security.MixedContentType.None */));\n        }\n        if (securityStateIssueIds.includes('pkp-bypassed')) {\n            explanations.push(new SecurityStyleExplanation(\"info\" /* Protocol.Security.SecurityState.Info */, title, i18nString(UIStrings.publickeypinningBypassed), i18nString(UIStrings.publickeypinningWasBypassedByA)));\n        }\n        if (certificateSecurityState && certificateSecurityState.isCertificateExpiringSoon()) {\n            explanations.push(new SecurityStyleExplanation(\"info\" /* Protocol.Security.SecurityState.Info */, undefined, i18nString(UIStrings.certificateExpiresSoon), i18nString(UIStrings.theCertificateForThisSiteExpires)));\n        }\n    }\n    explainConnectionSecurity(visibleSecurityState, explanations) {\n        const certificateSecurityState = visibleSecurityState.certificateSecurityState;\n        if (!certificateSecurityState) {\n            return;\n        }\n        const title = i18nString(UIStrings.connection);\n        if (certificateSecurityState.modernSSL) {\n            explanations.push(new SecurityStyleExplanation(\"secure\" /* Protocol.Security.SecurityState.Secure */, title, i18nString(UIStrings.secureConnectionSettings), i18nString(UIStrings.theConnectionToThisSiteIs, {\n                PH1: certificateSecurityState.protocol,\n                PH2: certificateSecurityState.getKeyExchangeName(),\n                PH3: certificateSecurityState.getCipherFullName(),\n            })));\n            return;\n        }\n        const recommendations = [];\n        if (certificateSecurityState.obsoleteSslProtocol) {\n            recommendations.push(i18nString(UIStrings.sIsObsoleteEnableTlsOrLater, { PH1: certificateSecurityState.protocol }));\n        }\n        if (certificateSecurityState.obsoleteSslKeyExchange) {\n            recommendations.push(i18nString(UIStrings.rsaKeyExchangeIsObsoleteEnableAn));\n        }\n        if (certificateSecurityState.obsoleteSslCipher) {\n            recommendations.push(i18nString(UIStrings.sIsObsoleteEnableAnAesgcmbased, { PH1: certificateSecurityState.cipher }));\n        }\n        if (certificateSecurityState.obsoleteSslSignature) {\n            recommendations.push(i18nString(UIStrings.theServerSignatureUsesShaWhichIs));\n        }\n        explanations.push(new SecurityStyleExplanation(\"info\" /* Protocol.Security.SecurityState.Info */, title, i18nString(UIStrings.obsoleteConnectionSettings), i18nString(UIStrings.theConnectionToThisSiteIs, {\n            PH1: certificateSecurityState.protocol,\n            PH2: certificateSecurityState.getKeyExchangeName(),\n            PH3: certificateSecurityState.getCipherFullName(),\n        }), undefined, undefined, recommendations));\n    }\n    explainContentSecurity(visibleSecurityState, explanations) {\n        // Add the secure explanation unless there is an issue.\n        let addSecureExplanation = true;\n        const title = i18nString(UIStrings.resources);\n        const securityStateIssueIds = visibleSecurityState.securityStateIssueIds;\n        if (securityStateIssueIds.includes('ran-mixed-content')) {\n            addSecureExplanation = false;\n            explanations.push(new SecurityStyleExplanation(\"insecure\" /* Protocol.Security.SecurityState.Insecure */, title, i18nString(UIStrings.activeMixedContent), i18nString(UIStrings.youHaveRecentlyAllowedNonsecure), [], \"blockable\" /* Protocol.Security.MixedContentType.Blockable */));\n        }\n        if (securityStateIssueIds.includes('displayed-mixed-content')) {\n            addSecureExplanation = false;\n            explanations.push(new SecurityStyleExplanation(\"neutral\" /* Protocol.Security.SecurityState.Neutral */, title, i18nString(UIStrings.mixedContent), i18nString(UIStrings.thisPageIncludesHttpResources), [], \"optionally-blockable\" /* Protocol.Security.MixedContentType.OptionallyBlockable */));\n        }\n        if (securityStateIssueIds.includes('contained-mixed-form')) {\n            addSecureExplanation = false;\n            explanations.push(new SecurityStyleExplanation(\"neutral\" /* Protocol.Security.SecurityState.Neutral */, title, i18nString(UIStrings.nonsecureForm), i18nString(UIStrings.thisPageIncludesAFormWithA)));\n        }\n        if (visibleSecurityState.certificateSecurityState === null ||\n            visibleSecurityState.certificateSecurityState.certificateNetworkError === null) {\n            if (securityStateIssueIds.includes('ran-content-with-cert-error')) {\n                addSecureExplanation = false;\n                explanations.push(new SecurityStyleExplanation(\"insecure\" /* Protocol.Security.SecurityState.Insecure */, title, i18nString(UIStrings.activeContentWithCertificate), i18nString(UIStrings.youHaveRecentlyAllowedContent)));\n            }\n            if (securityStateIssueIds.includes('displayed-content-with-cert-errors')) {\n                addSecureExplanation = false;\n                explanations.push(new SecurityStyleExplanation(\"neutral\" /* Protocol.Security.SecurityState.Neutral */, title, i18nString(UIStrings.contentWithCertificateErrors), i18nString(UIStrings.thisPageIncludesResourcesThat)));\n            }\n        }\n        if (addSecureExplanation) {\n            if (!securityStateIssueIds.includes('scheme-is-not-cryptographic')) {\n                explanations.push(new SecurityStyleExplanation(\"secure\" /* Protocol.Security.SecurityState.Secure */, title, i18nString(UIStrings.allServedSecurely), i18nString(UIStrings.allResourcesOnThisPageAreServed)));\n            }\n        }\n    }\n    orderExplanations(explanations) {\n        if (explanations.length === 0) {\n            return explanations;\n        }\n        const securityStateOrder = [\n            \"insecure\" /* Protocol.Security.SecurityState.Insecure */,\n            \"neutral\" /* Protocol.Security.SecurityState.Neutral */,\n            \"secure\" /* Protocol.Security.SecurityState.Secure */,\n            \"info\" /* Protocol.Security.SecurityState.Info */,\n        ];\n        const orderedExplanations = [];\n        for (const securityState of securityStateOrder) {\n            orderedExplanations.push(...explanations.filter(explanation => explanation.securityState === securityState));\n        }\n        return orderedExplanations;\n    }\n    refreshExplanations() {\n        this.securityExplanationsMain.removeChildren();\n        this.securityExplanationsExtra.removeChildren();\n        if (!this.explanations) {\n            return;\n        }\n        for (const explanation of this.explanations) {\n            if (explanation.securityState === \"info\" /* Protocol.Security.SecurityState.Info */) {\n                this.addExplanation(this.securityExplanationsExtra, explanation);\n            }\n            else {\n                switch (explanation.mixedContentType) {\n                    case \"blockable\" /* Protocol.Security.MixedContentType.Blockable */:\n                        this.addMixedContentExplanation(this.securityExplanationsMain, explanation, \"block-overridden\" /* NetworkForward.UIFilter.MixedContentFilterValues.BLOCK_OVERRIDDEN */);\n                        break;\n                    case \"optionally-blockable\" /* Protocol.Security.MixedContentType.OptionallyBlockable */:\n                        this.addMixedContentExplanation(this.securityExplanationsMain, explanation, \"displayed\" /* NetworkForward.UIFilter.MixedContentFilterValues.DISPLAYED */);\n                        break;\n                    default:\n                        this.addExplanation(this.securityExplanationsMain, explanation);\n                        break;\n                }\n            }\n        }\n        if (this.panel.filterRequestCount(\"blocked\" /* NetworkForward.UIFilter.MixedContentFilterValues.BLOCKED */) > 0) {\n            const explanation = {\n                securityState: \"info\" /* Protocol.Security.SecurityState.Info */,\n                summary: i18nString(UIStrings.blockedMixedContent),\n                description: i18nString(UIStrings.yourPageRequestedNonsecure),\n                mixedContentType: \"blockable\" /* Protocol.Security.MixedContentType.Blockable */,\n                certificate: [],\n                title: '',\n            };\n            this.addMixedContentExplanation(this.securityExplanationsMain, explanation, \"blocked\" /* NetworkForward.UIFilter.MixedContentFilterValues.BLOCKED */);\n        }\n    }\n    addMixedContentExplanation(parent, explanation, filterKey) {\n        const element = this.addExplanation(parent, explanation);\n        const filterRequestCount = this.panel.filterRequestCount(filterKey);\n        if (!filterRequestCount) {\n            // Network instrumentation might not have been enabled for the page\n            // load, so the security panel does not necessarily know a count of\n            // individual mixed requests at this point. Prompt them to refresh\n            // instead of pointing them to the Network panel to get prompted\n            // to refresh.\n            const refreshPrompt = element.createChild('div', 'security-mixed-content');\n            refreshPrompt.textContent = i18nString(UIStrings.reloadThePageToRecordRequestsFor);\n            return;\n        }\n        const requestsAnchor = element.createChild('button', 'security-mixed-content devtools-link text-button link-style');\n        UI.ARIAUtils.markAsLink(requestsAnchor);\n        requestsAnchor.tabIndex = 0;\n        requestsAnchor.textContent = i18nString(UIStrings.viewDRequestsInNetworkPanel, { n: filterRequestCount });\n        requestsAnchor.addEventListener('click', this.showNetworkFilter.bind(this, filterKey));\n    }\n    showNetworkFilter(filterKey, e) {\n        e.consume();\n        void Common.Revealer.reveal(NetworkForward.UIFilter.UIRequestFilter.filters([{ filterType: NetworkForward.UIFilter.FilterType.MixedContent, filterValue: filterKey }]));\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([lockIconStyles, mainViewStyles]);\n    }\n}\nexport class SecurityOriginView extends UI.Widget.VBox {\n    panel;\n    originLockIcon;\n    constructor(panel, origin, originState) {\n        super();\n        this.element.setAttribute('jslog', `${VisualLogging.pane('security.origin-view')}`);\n        this.panel = panel;\n        this.setMinimumSize(200, 100);\n        this.element.classList.add('security-origin-view');\n        const titleSection = this.element.createChild('div', 'title-section');\n        const titleDiv = titleSection.createChild('div', 'title-section-header');\n        titleDiv.textContent = i18nString(UIStrings.origin);\n        UI.ARIAUtils.markAsHeading(titleDiv, 1);\n        const originDisplay = titleSection.createChild('div', 'origin-display');\n        this.originLockIcon = originDisplay.createChild('span');\n        const icon = getSecurityStateIconForDetailedView(originState.securityState, `security-property security-property-${originState.securityState}`);\n        this.originLockIcon.appendChild(icon);\n        originDisplay.appendChild(createHighlightedUrl(origin, originState.securityState));\n        const originNetworkDiv = titleSection.createChild('div', 'view-network-button');\n        const originNetworkButton = UI.UIUtils.createTextButton(i18nString(UIStrings.viewRequestsInNetworkPanel), event => {\n            event.consume();\n            const parsedURL = new Common.ParsedURL.ParsedURL(origin);\n            void Common.Revealer.reveal(NetworkForward.UIFilter.UIRequestFilter.filters([\n                { filterType: NetworkForward.UIFilter.FilterType.Domain, filterValue: parsedURL.host },\n                { filterType: NetworkForward.UIFilter.FilterType.Scheme, filterValue: parsedURL.scheme },\n            ]));\n        }, { jslogContext: 'reveal-in-network' });\n        originNetworkDiv.appendChild(originNetworkButton);\n        UI.ARIAUtils.markAsLink(originNetworkButton);\n        if (originState.securityDetails) {\n            const connectionSection = this.element.createChild('div', 'origin-view-section');\n            const connectionDiv = connectionSection.createChild('div', 'origin-view-section-title');\n            connectionDiv.textContent = i18nString(UIStrings.connection);\n            UI.ARIAUtils.markAsHeading(connectionDiv, 2);\n            let table = new SecurityDetailsTable();\n            connectionSection.appendChild(table.element());\n            table.addRow(i18nString(UIStrings.protocol), originState.securityDetails.protocol);\n            // A TLS connection negotiates a cipher suite and, when doing an ephemeral\n            // ECDH key exchange, a \"named group\". In TLS 1.2, the cipher suite is\n            // named like TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256. The DevTools protocol\n            // tried to decompose this name and calls the \"ECDHE_RSA\" portion the\n            // \"keyExchange\", because it determined the rough shape of the key\n            // exchange portion of the handshake. (A keyExchange of \"RSA\" meant a very\n            // different handshake set.) But ECDHE_RSA was still parameterized by a\n            // named group (e.g. X25519), which the DevTools protocol exposes as\n            // \"keyExchangeGroup\".\n            //\n            // Then, starting TLS 1.3, the cipher suites are named like\n            // TLS_AES_128_GCM_SHA256. The handshake shape is implicit in the\n            // protocol. keyExchange is empty and we only have keyExchangeGroup.\n            //\n            // \"Key exchange group\" isn't common terminology and, in TLS 1.3,\n            // something like \"X25519\" is better labelled as \"key exchange\" than \"key\n            // exchange group\" anyway. So combine the two fields when displaying in\n            // the UI.\n            if (originState.securityDetails.keyExchange && originState.securityDetails.keyExchangeGroup) {\n                table.addRow(i18nString(UIStrings.keyExchange), originState.securityDetails.keyExchange + ' with ' + originState.securityDetails.keyExchangeGroup);\n            }\n            else if (originState.securityDetails.keyExchange) {\n                table.addRow(i18nString(UIStrings.keyExchange), originState.securityDetails.keyExchange);\n            }\n            else if (originState.securityDetails.keyExchangeGroup) {\n                table.addRow(i18nString(UIStrings.keyExchange), originState.securityDetails.keyExchangeGroup);\n            }\n            if (originState.securityDetails.serverSignatureAlgorithm) {\n                // See https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-signaturescheme\n                let sigString = SignatureSchemeStrings.get(originState.securityDetails.serverSignatureAlgorithm);\n                sigString ??=\n                    i18nString(UIStrings.unknownField) + ' (' + originState.securityDetails.serverSignatureAlgorithm + ')';\n                table.addRow(i18nString(UIStrings.serverSignature), sigString);\n            }\n            table.addRow(i18nString(UIStrings.cipher), originState.securityDetails.cipher +\n                (originState.securityDetails.mac ? ' with ' + originState.securityDetails.mac : ''));\n            if (originState.securityDetails.encryptedClientHello) {\n                table.addRow(i18nString(UIStrings.encryptedClientHello), i18nString(UIStrings.enabled));\n            }\n            // Create the certificate section outside the callback, so that it appears in the right place.\n            const certificateSection = this.element.createChild('div', 'origin-view-section');\n            const certificateDiv = certificateSection.createChild('div', 'origin-view-section-title');\n            certificateDiv.textContent = i18nString(UIStrings.certificate);\n            UI.ARIAUtils.markAsHeading(certificateDiv, 2);\n            const sctListLength = originState.securityDetails.signedCertificateTimestampList.length;\n            const ctCompliance = originState.securityDetails.certificateTransparencyCompliance;\n            let sctSection;\n            if (sctListLength || ctCompliance !== \"unknown\" /* Protocol.Network.CertificateTransparencyCompliance.Unknown */) {\n                // Create the Certificate Transparency section outside the callback, so that it appears in the right place.\n                sctSection = this.element.createChild('div', 'origin-view-section');\n                const sctDiv = sctSection.createChild('div', 'origin-view-section-title');\n                sctDiv.textContent = i18nString(UIStrings.certificateTransparency);\n                UI.ARIAUtils.markAsHeading(sctDiv, 2);\n            }\n            const sanDiv = this.createSanDiv(originState.securityDetails.sanList);\n            const validFromString = new Date(1000 * originState.securityDetails.validFrom).toUTCString();\n            const validUntilString = new Date(1000 * originState.securityDetails.validTo).toUTCString();\n            table = new SecurityDetailsTable();\n            certificateSection.appendChild(table.element());\n            table.addRow(i18nString(UIStrings.subject), originState.securityDetails.subjectName);\n            table.addRow(i18n.i18n.lockedString('SAN'), sanDiv);\n            table.addRow(i18nString(UIStrings.validFrom), validFromString);\n            table.addRow(i18nString(UIStrings.validUntil), validUntilString);\n            table.addRow(i18nString(UIStrings.issuer), originState.securityDetails.issuer);\n            table.addRow('', SecurityPanel.createCertificateViewerButtonForOrigin(i18nString(UIStrings.openFullCertificateDetails), origin));\n            if (!sctSection) {\n                return;\n            }\n            // Show summary of SCT(s) of Certificate Transparency.\n            const sctSummaryTable = new SecurityDetailsTable();\n            sctSummaryTable.element().classList.add('sct-summary');\n            sctSection.appendChild(sctSummaryTable.element());\n            for (let i = 0; i < sctListLength; i++) {\n                const sct = originState.securityDetails.signedCertificateTimestampList[i];\n                sctSummaryTable.addRow(i18nString(UIStrings.sct), sct.logDescription + ' (' + sct.origin + ', ' + sct.status + ')');\n            }\n            // Show detailed SCT(s) of Certificate Transparency.\n            const sctTableWrapper = sctSection.createChild('div', 'sct-details');\n            sctTableWrapper.classList.add('hidden');\n            for (let i = 0; i < sctListLength; i++) {\n                const sctTable = new SecurityDetailsTable();\n                sctTableWrapper.appendChild(sctTable.element());\n                const sct = originState.securityDetails.signedCertificateTimestampList[i];\n                sctTable.addRow(i18nString(UIStrings.logName), sct.logDescription);\n                sctTable.addRow(i18nString(UIStrings.logId), sct.logId.replace(/(.{2})/g, '$1 '));\n                sctTable.addRow(i18nString(UIStrings.validationStatus), sct.status);\n                sctTable.addRow(i18nString(UIStrings.source), sct.origin);\n                sctTable.addRow(i18nString(UIStrings.issuedAt), new Date(sct.timestamp).toUTCString());\n                sctTable.addRow(i18nString(UIStrings.hashAlgorithm), sct.hashAlgorithm);\n                sctTable.addRow(i18nString(UIStrings.signatureAlgorithm), sct.signatureAlgorithm);\n                sctTable.addRow(i18nString(UIStrings.signatureData), sct.signatureData.replace(/(.{2})/g, '$1 '));\n            }\n            // Add link to toggle between displaying of the summary of the SCT(s) and the detailed SCT(s).\n            if (sctListLength) {\n                function toggleSctDetailsDisplay() {\n                    let buttonText;\n                    const isDetailsShown = !sctTableWrapper.classList.contains('hidden');\n                    if (isDetailsShown) {\n                        buttonText = i18nString(UIStrings.showFullDetails);\n                    }\n                    else {\n                        buttonText = i18nString(UIStrings.hideFullDetails);\n                    }\n                    toggleSctsDetailsLink.textContent = buttonText;\n                    UI.ARIAUtils.setLabel(toggleSctsDetailsLink, buttonText);\n                    UI.ARIAUtils.setExpanded(toggleSctsDetailsLink, !isDetailsShown);\n                    sctSummaryTable.element().classList.toggle('hidden');\n                    sctTableWrapper.classList.toggle('hidden');\n                }\n                const toggleSctsDetailsLink = UI.UIUtils.createTextButton(i18nString(UIStrings.showFullDetails), toggleSctDetailsDisplay, { className: 'details-toggle', jslogContext: 'security.toggle-scts-details' });\n                sctSection.appendChild(toggleSctsDetailsLink);\n            }\n            switch (ctCompliance) {\n                case \"compliant\" /* Protocol.Network.CertificateTransparencyCompliance.Compliant */:\n                    sctSection.createChild('div', 'origin-view-section-notes').textContent =\n                        i18nString(UIStrings.thisRequestCompliesWithChromes);\n                    break;\n                case \"not-compliant\" /* Protocol.Network.CertificateTransparencyCompliance.NotCompliant */:\n                    sctSection.createChild('div', 'origin-view-section-notes').textContent =\n                        i18nString(UIStrings.thisRequestDoesNotComplyWith);\n                    break;\n                case \"unknown\" /* Protocol.Network.CertificateTransparencyCompliance.Unknown */:\n                    break;\n            }\n            const noteSection = this.element.createChild('div', 'origin-view-section origin-view-notes');\n            if (originState.loadedFromCache) {\n                noteSection.createChild('div').textContent = i18nString(UIStrings.thisResponseWasLoadedFromCache);\n            }\n            noteSection.createChild('div').textContent = i18nString(UIStrings.theSecurityDetailsAboveAreFrom);\n        }\n        else if (originState.securityState === \"secure\" /* Protocol.Security.SecurityState.Secure */) {\n            // If the security state is secure but there are no security details,\n            // this means that the origin is a non-cryptographic secure origin, e.g.\n            // chrome:// or about:.\n            const secureSection = this.element.createChild('div', 'origin-view-section');\n            const secureDiv = secureSection.createChild('div', 'origin-view-section-title');\n            secureDiv.textContent = i18nString(UIStrings.secure);\n            UI.ARIAUtils.markAsHeading(secureDiv, 2);\n            secureSection.createChild('div').textContent = i18nString(UIStrings.thisOriginIsANonhttpsSecure);\n        }\n        else if (originState.securityState !== \"unknown\" /* Protocol.Security.SecurityState.Unknown */) {\n            const notSecureSection = this.element.createChild('div', 'origin-view-section');\n            const notSecureDiv = notSecureSection.createChild('div', 'origin-view-section-title');\n            notSecureDiv.textContent = i18nString(UIStrings.notSecure);\n            UI.ARIAUtils.markAsHeading(notSecureDiv, 2);\n            notSecureSection.createChild('div').textContent = i18nString(UIStrings.yourConnectionToThisOriginIsNot);\n        }\n        else {\n            const noInfoSection = this.element.createChild('div', 'origin-view-section');\n            const noInfoDiv = noInfoSection.createChild('div', 'origin-view-section-title');\n            noInfoDiv.textContent = i18nString(UIStrings.noSecurityInformation);\n            UI.ARIAUtils.markAsHeading(noInfoDiv, 2);\n            noInfoSection.createChild('div').textContent = i18nString(UIStrings.noSecurityDetailsAreAvailableFor);\n        }\n    }\n    createSanDiv(sanList) {\n        const sanDiv = document.createElement('div');\n        if (sanList.length === 0) {\n            sanDiv.textContent = i18nString(UIStrings.na);\n            sanDiv.classList.add('empty-san');\n        }\n        else {\n            const truncatedNumToShow = 2;\n            const listIsTruncated = sanList.length > truncatedNumToShow + 1;\n            for (let i = 0; i < sanList.length; i++) {\n                const span = sanDiv.createChild('span', 'san-entry');\n                span.textContent = sanList[i];\n                if (listIsTruncated && i >= truncatedNumToShow) {\n                    span.classList.add('truncated-entry');\n                }\n            }\n            if (listIsTruncated) {\n                function toggleSANTruncation() {\n                    const isTruncated = sanDiv.classList.contains('truncated-san');\n                    let buttonText;\n                    if (isTruncated) {\n                        sanDiv.classList.remove('truncated-san');\n                        buttonText = i18nString(UIStrings.showLess);\n                    }\n                    else {\n                        sanDiv.classList.add('truncated-san');\n                        buttonText = i18nString(UIStrings.showMoreSTotal, { PH1: sanList.length });\n                    }\n                    truncatedSANToggle.textContent = buttonText;\n                    UI.ARIAUtils.setLabel(truncatedSANToggle, buttonText);\n                    UI.ARIAUtils.setExpanded(truncatedSANToggle, isTruncated);\n                }\n                const truncatedSANToggle = UI.UIUtils.createTextButton(i18nString(UIStrings.showMoreSTotal, { PH1: sanList.length }), toggleSANTruncation, { jslogContext: 'security.toggle-san-truncation' });\n                sanDiv.appendChild(truncatedSANToggle);\n                toggleSANTruncation();\n            }\n        }\n        return sanDiv;\n    }\n    setSecurityState(newSecurityState) {\n        this.originLockIcon.removeChildren();\n        const icon = getSecurityStateIconForDetailedView(newSecurityState, `security-property security-property-${newSecurityState}`);\n        this.originLockIcon.appendChild(icon);\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([originViewStyles, lockIconStyles]);\n    }\n}\nexport class SecurityDetailsTable {\n    elementInternal;\n    constructor() {\n        this.elementInternal = document.createElement('table');\n        this.elementInternal.classList.add('details-table');\n    }\n    element() {\n        return this.elementInternal;\n    }\n    addRow(key, value) {\n        const row = this.elementInternal.createChild('tr', 'details-table-row');\n        row.createChild('td').textContent = key;\n        const valueCell = row.createChild('td');\n        if (typeof value === 'string') {\n            valueCell.textContent = value;\n        }\n        else {\n            valueCell.appendChild(value);\n        }\n    }\n}\n//# sourceMappingURL=SecurityPanel.js.map"],"names":["UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","i18nLazyString","i18n.i18n.getLazilyComputedLocalizedString","SecurityModel","SDK.SDKModel.SDKModel","target","SecurityDispatcher","SDK.ResourceTreeModel.ResourceTreeModel","SDK.NetworkManager.NetworkManager","securityStateCompare","a","b","SECURITY_STATE_ORDER","Events","SummaryMessages","PageVisibleSecurityState","securityState","certificateSecurityState","safetyTipInfo","securityStateIssueIds","CertificateSecurityState","SafetyTipInfo","expiryDate","SecurityStyleExplanation","title","summary","description","certificate","mixedContentType","recommendations","model","_event","visibleSecurityState","pageVisibleSecurityState","styles","SecurityPanelSidebarTreeElement","UI.TreeOutline.TreeElement","expandable","UI.ARIAUtils.setLabel","ShowOriginEvent","origin","OriginTreeElement","#securityStateInternal","#renderTreeElement","#originInternal","className","renderTreeElement","newSecurityState","ShowCookieReportEvent","CookieReportTreeElement","IconButton.Icon.create","SecurityPanelSidebar","UI.Widget.VBox","#originGroupTitles","#originGroups","#elementsByOrigin","#mainViewReloadMessage","#mainOrigin","element","UI.TreeOutline.TreeOutlineInShadow","Common.Settings.Settings","#addSidebarSection","securitySectionTitle","securityTreeSection","OriginGroup","group","#createOriginGroupElement","#clearOriginGroups","jslogContext","treeElement","UI.ARIAUtils.markAsHeading","#originGroupTitle","originGroup","#originGroupElement","originGroupTitle","hidden","originElement","newParent","oldParent","originGroupElement","lockIconStyles","sidebarStyles","isOverviewElement","icon","getSecurityStateIconForOverview","getSecurityStateIconForDetailedView","elementTitle","createHighlightedUrl","Platform.DevToolsPath.EmptyUrlString","securityPanelInstance","SignatureSchemeStrings","LOCK_ICON_NAME","WARNING_ICON_NAME","INFO_ICON_NAME","iconName","url","schemeSeparator","index","text","highlightedUrl","scheme","content","render","html","LitHtml","SecurityPanel","UI.Panel.Panel","view","input","output","UI.Widget.widgetRef","UI.SplitWidget.SplitWidget","e","SecurityMainView","VisualLogging.pane","event","SDK.TargetManager.TargetManager","SDK.ResourceTreeModel.Events","opts","forceNew","certificateButton","UI.UIUtils.createTextButton","names","SDK.NetworkManager.MultitargetNetworkManager","Host.InspectorFrontendHost.InspectorFrontendHostInstance","UI.ARIAUtils.markAsButton","data","originState","SecurityOriginView","request","Common.ResourceType.resourceTypes","Common.ParsedURL.ParsedURL","securityDetails","newOriginState","filterKey","currentCount","securityModel","resourceTreeModel","networkManager","Common.EventTarget.removeEventListeners","SDK.NetworkManager.Events","frame","panel","summaryDiv","lockSpectrum","UI.Tooltip.Tooltip","parent","explanation","explanationSection","explanationHeader","recommendationList","recommendation","explanations","currentExplanations","formatedDescription","hostnamePlaceholder","formatedDescriptionSafety","explanationSummary","addSecureExplanation","securityStateOrder","orderedExplanations","filterRequestCount","refreshPrompt","requestsAnchor","UI.ARIAUtils.markAsLink","Common.Revealer.reveal","NetworkForward.UIFilter.UIRequestFilter","NetworkForward.UIFilter.FilterType","mainViewStyles","titleSection","titleDiv","originDisplay","originNetworkDiv","originNetworkButton","parsedURL","connectionSection","connectionDiv","table","SecurityDetailsTable","sigString","certificateSection","certificateDiv","sctListLength","ctCompliance","sctSection","sctDiv","sanDiv","validFromString","validUntilString","i18n.i18n.lockedString","sctSummaryTable","i","sct","sctTableWrapper","sctTable","toggleSctDetailsDisplay","buttonText","isDetailsShown","toggleSctsDetailsLink","UI.ARIAUtils.setExpanded","noteSection","secureSection","secureDiv","notSecureSection","notSecureDiv","noInfoSection","noInfoDiv","sanList","listIsTruncated","span","toggleSANTruncation","isTruncated","truncatedSANToggle","originViewStyles","key","value","row","valueCell"],"mappings":"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"}