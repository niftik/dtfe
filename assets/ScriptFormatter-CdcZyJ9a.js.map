{"version":3,"file":"ScriptFormatter-CdcZyJ9a.js","sources":["../../models/formatter/ScriptFormatter.js"],"sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport { formatterWorkerPool } from './FormatterWorkerPool.js';\nfunction locationToPosition(lineEndings, lineNumber, columnNumber) {\n    const position = lineNumber ? lineEndings[lineNumber - 1] + 1 : 0;\n    return position + columnNumber;\n}\nfunction positionToLocation(lineEndings, position) {\n    const lineNumber = Platform.ArrayUtilities.upperBound(lineEndings, position - 1, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n    let columnNumber;\n    if (!lineNumber) {\n        columnNumber = position;\n    }\n    else {\n        columnNumber = position - lineEndings[lineNumber - 1] - 1;\n    }\n    return [lineNumber, columnNumber];\n}\nexport async function format(contentType, mimeType, content, indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get()) {\n    if (contentType.isDocumentOrScriptOrStyleSheet()) {\n        return formatScriptContent(mimeType, content, indent);\n    }\n    return { formattedContent: content, formattedMapping: new IdentityFormatterSourceMapping() };\n}\nexport async function formatScriptContent(mimeType, content, indent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get()) {\n    const originalContent = content.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/^\\uFEFF/, '');\n    const pool = formatterWorkerPool();\n    const formatResult = await pool.format(mimeType, originalContent, indent);\n    const originalContentLineEndings = Platform.StringUtilities.findLineEndingIndexes(originalContent);\n    const formattedContentLineEndings = Platform.StringUtilities.findLineEndingIndexes(formatResult.content);\n    const sourceMapping = new FormatterSourceMappingImpl(originalContentLineEndings, formattedContentLineEndings, formatResult.mapping);\n    return { formattedContent: formatResult.content, formattedMapping: sourceMapping };\n}\nclass IdentityFormatterSourceMapping {\n    originalToFormatted(lineNumber, columnNumber = 0) {\n        return [lineNumber, columnNumber];\n    }\n    formattedToOriginal(lineNumber, columnNumber = 0) {\n        return [lineNumber, columnNumber];\n    }\n}\nclass FormatterSourceMappingImpl {\n    originalLineEndings;\n    formattedLineEndings;\n    mapping;\n    constructor(originalLineEndings, formattedLineEndings, mapping) {\n        this.originalLineEndings = originalLineEndings;\n        this.formattedLineEndings = formattedLineEndings;\n        this.mapping = mapping;\n    }\n    originalToFormatted(lineNumber, columnNumber) {\n        const originalPosition = locationToPosition(this.originalLineEndings, lineNumber, columnNumber || 0);\n        const formattedPosition = this.convertPosition(this.mapping.original, this.mapping.formatted, originalPosition);\n        return positionToLocation(this.formattedLineEndings, formattedPosition);\n    }\n    formattedToOriginal(lineNumber, columnNumber) {\n        const formattedPosition = locationToPosition(this.formattedLineEndings, lineNumber, columnNumber || 0);\n        const originalPosition = this.convertPosition(this.mapping.formatted, this.mapping.original, formattedPosition);\n        return positionToLocation(this.originalLineEndings, originalPosition);\n    }\n    convertPosition(positions1, positions2, position) {\n        const index = Platform.ArrayUtilities.upperBound(positions1, position, Platform.ArrayUtilities.DEFAULT_COMPARATOR) - 1;\n        let convertedPosition = positions2[index] + position - positions1[index];\n        if (index < positions2.length - 1 && convertedPosition > positions2[index + 1]) {\n            convertedPosition = positions2[index + 1];\n        }\n        return convertedPosition;\n    }\n}\n//# sourceMappingURL=ScriptFormatter.js.map"],"names":["locationToPosition","lineEndings","lineNumber","columnNumber","positionToLocation","position","Platform.ArrayUtilities.upperBound","Platform.ArrayUtilities.DEFAULT_COMPARATOR","format","contentType","mimeType","content","indent","Common.Settings.Settings","formatScriptContent","IdentityFormatterSourceMapping","originalContent","formatResult","formatterWorkerPool","originalContentLineEndings","Platform.StringUtilities.findLineEndingIndexes","formattedContentLineEndings","sourceMapping","FormatterSourceMappingImpl","originalLineEndings","formattedLineEndings","mapping","originalPosition","formattedPosition","positions1","positions2","index","convertedPosition"],"mappings":"6EAgCA,SAASA,EAAmBC,EAAaC,EAAYC,EAAc,CAE/D,OADiBD,EAAaD,EAAYC,EAAa,CAAC,EAAI,EAAI,GAC9CC,CACtB,CACA,SAASC,EAAmBH,EAAaI,EAAU,CAC/C,MAAMH,EAAaI,EAAmCL,EAAaI,EAAW,EAAGE,CAA0C,EAC3H,IAAIJ,EACJ,OAAKD,EAIDC,EAAeE,EAAWJ,EAAYC,EAAa,CAAC,EAAI,EAHxDC,EAAeE,EAKZ,CAACH,EAAYC,CAAY,CACpC,CACO,eAAeK,EAAOC,EAAaC,EAAUC,EAASC,EAASC,EAAyB,SAAQ,EAAG,cAAc,oBAAoB,EAAE,IAAG,EAAI,CACjJ,OAAIJ,EAAY,iCACLK,EAAoBJ,EAAUC,EAASC,CAAM,EAEjD,CAAE,iBAAkBD,EAAS,iBAAkB,IAAII,CAAgC,CAC9F,CACO,eAAeD,EAAoBJ,EAAUC,EAASC,EAASC,EAAyB,SAAU,EAAC,cAAc,oBAAoB,EAAE,MAAO,CACjJ,MAAMG,EAAkBL,EAAQ,QAAQ,0BAA2B;AAAA,CAAI,EAAE,QAAQ,UAAW,EAAE,EAExFM,EAAe,MADRC,IACmB,OAAOR,EAAUM,EAAiBJ,CAAM,EAClEO,EAA6BC,EAA+CJ,CAAe,EAC3FK,EAA8BD,EAA+CH,EAAa,OAAO,EACjGK,EAAgB,IAAIC,EAA2BJ,EAA4BE,EAA6BJ,EAAa,OAAO,EAClI,MAAO,CAAE,iBAAkBA,EAAa,QAAS,iBAAkBK,CAAa,CACpF,CACA,MAAMP,CAA+B,CACjC,oBAAoBb,EAAYC,EAAe,EAAG,CAC9C,MAAO,CAACD,EAAYC,CAAY,CACnC,CACD,oBAAoBD,EAAYC,EAAe,EAAG,CAC9C,MAAO,CAACD,EAAYC,CAAY,CACnC,CACL,CACA,MAAMoB,CAA2B,CAC7B,oBACA,qBACA,QACA,YAAYC,EAAqBC,EAAsBC,EAAS,CAC5D,KAAK,oBAAsBF,EAC3B,KAAK,qBAAuBC,EAC5B,KAAK,QAAUC,CAClB,CACD,oBAAoBxB,EAAYC,EAAc,CAC1C,MAAMwB,EAAmB3B,EAAmB,KAAK,oBAAqBE,EAAYC,GAAgB,CAAC,EAC7FyB,EAAoB,KAAK,gBAAgB,KAAK,QAAQ,SAAU,KAAK,QAAQ,UAAWD,CAAgB,EAC9G,OAAOvB,EAAmB,KAAK,qBAAsBwB,CAAiB,CACzE,CACD,oBAAoB1B,EAAYC,EAAc,CAC1C,MAAMyB,EAAoB5B,EAAmB,KAAK,qBAAsBE,EAAYC,GAAgB,CAAC,EAC/FwB,EAAmB,KAAK,gBAAgB,KAAK,QAAQ,UAAW,KAAK,QAAQ,SAAUC,CAAiB,EAC9G,OAAOxB,EAAmB,KAAK,oBAAqBuB,CAAgB,CACvE,CACD,gBAAgBE,EAAYC,EAAYzB,EAAU,CAC9C,MAAM0B,EAAQzB,EAAmCuB,EAAYxB,EAAUE,CAA0C,EAAI,EACrH,IAAIyB,EAAoBF,EAAWC,CAAK,EAAI1B,EAAWwB,EAAWE,CAAK,EACvE,OAAIA,EAAQD,EAAW,OAAS,GAAKE,EAAoBF,EAAWC,EAAQ,CAAC,IACzEC,EAAoBF,EAAWC,EAAQ,CAAC,GAErCC,CACV,CACL"}