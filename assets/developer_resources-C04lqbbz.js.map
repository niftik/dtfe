{"version":3,"file":"developer_resources-C04lqbbz.js","sources":["../../panels/developer_resources/developerResourcesListView.css.js","../../panels/developer_resources/DeveloperResourcesListView.js","../../panels/developer_resources/developerResourcesView.css.js","../../panels/developer_resources/DeveloperResourcesView.js"],"sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (c) 2020 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.data-grid {\n  border: none;\n}\n\n.data-grid td .url-outer {\n  width: 100%;\n  display: inline-flex;\n  justify-content: flex-start;\n}\n\n.data-grid td .url-outer .filter-highlight {\n  font-weight: bold;\n}\n\n.data-grid td .url-prefix {\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n}\n\n.data-grid td .url-suffix {\n  flex: none;\n}\n\n.data-grid td.error-message .filter-highlight {\n  font-weight: bold;\n}\n\n/*# sourceURL=developerResourcesListView.css */\n`);\n\nexport default styles;\n","// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport developerResourcesListViewStyles from './developerResourcesListView.css.js';\nconst UIStrings = {\n    /**\n     *@description Text for the status of something\n     */\n    status: 'Status',\n    /**\n     *@description Text for web URLs\n     */\n    url: 'URL',\n    /**\n     *@description Text for the initiator of something\n     */\n    initiator: 'Initiator',\n    /**\n     *@description Text in Coverage List View of the Coverage tab\n     */\n    totalBytes: 'Total Bytes',\n    /**\n     *@description Text for errors\n     */\n    error: 'Error',\n    /**\n     *@description Title for the Developer resources tab\n     */\n    developerResources: 'Developer resources',\n    /**\n     *@description Text for a context menu entry\n     */\n    copyUrl: 'Copy URL',\n    /**\n     * @description Text for a context menu entry. Command to copy a URL to the clipboard. The initiator\n     * of a request is the entity that caused this request to be sent.\n     */\n    copyInitiatorUrl: 'Copy initiator URL',\n    /**\n     *@description Text for the status column of a list view\n     */\n    pending: 'pending',\n    /**\n     *@description Text for the status column of a list view\n     */\n    success: 'success',\n    /**\n     *@description Text for the status column of a list view\n     */\n    failure: 'failure',\n    /**\n     *@description Accessible text for the value in bytes in memory allocation.\n     */\n    sBytes: '{n, plural, =1 {# byte} other {# bytes}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/developer_resources/DeveloperResourcesListView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class DeveloperResourcesListView extends UI.Widget.VBox {\n    nodeForItem;\n    isVisibleFilter;\n    highlightRegExp;\n    dataGrid;\n    constructor(isVisibleFilter) {\n        super(true);\n        this.nodeForItem = new Map();\n        this.isVisibleFilter = isVisibleFilter;\n        this.highlightRegExp = null;\n        const columns = [\n            { id: 'status', title: i18nString(UIStrings.status), width: '60px', fixedWidth: true, sortable: true },\n            { id: 'url', title: i18nString(UIStrings.url), width: '250px', fixedWidth: false, sortable: true },\n            { id: 'initiator', title: i18nString(UIStrings.initiator), width: '80px', fixedWidth: false, sortable: true },\n            {\n                id: 'size',\n                title: i18nString(UIStrings.totalBytes),\n                width: '80px',\n                fixedWidth: true,\n                sortable: true,\n                align: \"right\" /* DataGrid.DataGrid.Align.RIGHT */,\n            },\n            {\n                id: 'error-message',\n                title: i18nString(UIStrings.error),\n                width: '200px',\n                fixedWidth: false,\n                sortable: true,\n            },\n        ];\n        this.dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n            displayName: i18nString(UIStrings.developerResources),\n            columns,\n            editCallback: undefined,\n            refreshCallback: undefined,\n            deleteCallback: undefined,\n        });\n        this.dataGrid.setResizeMethod(\"last\" /* DataGrid.DataGrid.ResizeMethod.LAST */);\n        this.dataGrid.setStriped(true);\n        this.dataGrid.element.classList.add('flex-auto');\n        this.dataGrid.addEventListener(\"SortingChanged\" /* DataGrid.DataGrid.Events.SORTING_CHANGED */, this.sortingChanged, this);\n        this.dataGrid.setRowContextMenuCallback(this.populateContextMenu.bind(this));\n        const dataGridWidget = this.dataGrid.asWidget();\n        dataGridWidget.show(this.contentElement);\n        this.setDefaultFocusedChild(dataGridWidget);\n    }\n    select(item) {\n        const node = this.nodeForItem.get(item);\n        if (node) {\n            node.select();\n        }\n    }\n    selectedItem() {\n        if (!this.dataGrid.selectedNode) {\n            return null;\n        }\n        return this.dataGrid.selectedNode.item;\n    }\n    populateContextMenu(contextMenu, gridNode) {\n        const item = gridNode.item;\n        contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyUrl), () => {\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(item.url);\n        }, { jslogContext: 'copy-url' });\n        if (item.initiator.initiatorUrl) {\n            contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyInitiatorUrl), () => {\n                Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(item.initiator.initiatorUrl);\n            }, { jslogContext: 'copy-initiator-url' });\n        }\n    }\n    update(items) {\n        let hadUpdates = false;\n        const rootNode = this.dataGrid.rootNode();\n        for (const item of items) {\n            let node = this.nodeForItem.get(item);\n            if (node) {\n                if (this.isVisibleFilter(node.item)) {\n                    hadUpdates = node.refreshIfNeeded() || hadUpdates;\n                }\n                continue;\n            }\n            node = new GridNode(item);\n            this.nodeForItem.set(item, node);\n            if (this.isVisibleFilter(node.item)) {\n                rootNode.appendChild(node);\n                hadUpdates = true;\n            }\n        }\n        if (hadUpdates) {\n            this.sortingChanged();\n        }\n    }\n    reset() {\n        this.nodeForItem.clear();\n        this.dataGrid.rootNode().removeChildren();\n    }\n    updateFilterAndHighlight(highlightRegExp) {\n        this.highlightRegExp = highlightRegExp;\n        let hadTreeUpdates = false;\n        for (const node of this.nodeForItem.values()) {\n            const shouldBeVisible = this.isVisibleFilter(node.item);\n            const isVisible = Boolean(node.parent);\n            if (shouldBeVisible) {\n                node.setHighlight(this.highlightRegExp);\n            }\n            if (shouldBeVisible === isVisible) {\n                continue;\n            }\n            hadTreeUpdates = true;\n            if (!shouldBeVisible) {\n                node.remove();\n            }\n            else {\n                this.dataGrid.rootNode().appendChild(node);\n            }\n        }\n        if (hadTreeUpdates) {\n            this.sortingChanged();\n        }\n    }\n    sortingChanged() {\n        const columnId = this.dataGrid.sortColumnId();\n        if (!columnId) {\n            return;\n        }\n        const sortFunction = GridNode.sortFunctionForColumn(columnId);\n        if (sortFunction) {\n            this.dataGrid.sortNodes(sortFunction, !this.dataGrid.isSortOrderAscending());\n        }\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([developerResourcesListViewStyles]);\n    }\n}\nclass GridNode extends DataGrid.SortableDataGrid.SortableDataGridNode {\n    item;\n    highlightRegExp;\n    constructor(item) {\n        super();\n        this.item = item;\n        this.highlightRegExp = null;\n    }\n    setHighlight(highlightRegExp) {\n        if (this.highlightRegExp === highlightRegExp) {\n            return;\n        }\n        this.highlightRegExp = highlightRegExp;\n        this.refresh();\n    }\n    refreshIfNeeded() {\n        this.refresh();\n        return true;\n    }\n    createCell(columnId) {\n        const cell = this.createTD(columnId);\n        switch (columnId) {\n            case 'url': {\n                UI.Tooltip.Tooltip.install(cell, this.item.url);\n                const outer = cell.createChild('div', 'url-outer');\n                const prefix = outer.createChild('div', 'url-prefix');\n                const suffix = outer.createChild('div', 'url-suffix');\n                const splitURL = /^(.*)(\\/[^/]*)$/.exec(this.item.url);\n                prefix.textContent = splitURL ? splitURL[1] : this.item.url;\n                suffix.textContent = splitURL ? splitURL[2] : '';\n                if (this.highlightRegExp) {\n                    this.highlight(outer, this.item.url);\n                }\n                this.setCellAccessibleName(this.item.url, cell, columnId);\n                break;\n            }\n            case 'initiator': {\n                const url = this.item.initiator.initiatorUrl || '';\n                cell.textContent = url;\n                UI.Tooltip.Tooltip.install(cell, url);\n                this.setCellAccessibleName(url, cell, columnId);\n                cell.onmouseenter = () => {\n                    const frameId = this.item.initiator.frameId;\n                    const frame = frameId ? SDK.FrameManager.FrameManager.instance().getFrame(frameId) : null;\n                    if (frame) {\n                        void frame.highlight();\n                    }\n                };\n                cell.onmouseleave = () => SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n                break;\n            }\n            case 'status': {\n                if (this.item.success === null) {\n                    cell.textContent = i18nString(UIStrings.pending);\n                }\n                else {\n                    cell.textContent = this.item.success ? i18nString(UIStrings.success) : i18nString(UIStrings.failure);\n                }\n                break;\n            }\n            case 'size': {\n                const size = this.item.size;\n                if (size !== null) {\n                    const sizeSpan = cell.createChild('span');\n                    sizeSpan.textContent = Platform.NumberUtilities.withThousandsSeparator(size);\n                    const sizeAccessibleName = i18nString(UIStrings.sBytes, { n: size });\n                    this.setCellAccessibleName(sizeAccessibleName, cell, columnId);\n                }\n                break;\n            }\n            case 'error-message': {\n                cell.classList.add('error-message');\n                if (this.item.errorMessage) {\n                    cell.textContent = this.item.errorMessage;\n                    if (this.highlightRegExp) {\n                        this.highlight(cell, this.item.errorMessage);\n                    }\n                }\n                break;\n            }\n        }\n        return cell;\n    }\n    highlight(element, textContent) {\n        if (!this.highlightRegExp) {\n            return;\n        }\n        const matches = this.highlightRegExp.exec(textContent);\n        if (!matches || !matches.length) {\n            return;\n        }\n        const range = new TextUtils.TextRange.SourceRange(matches.index, matches[0].length);\n        UI.UIUtils.highlightRangesWithStyleClass(element, [range], 'filter-highlight');\n    }\n    static sortFunctionForColumn(columnId) {\n        const nullToNegative = (x) => x === null ? -1 : Number(x);\n        switch (columnId) {\n            case 'url':\n                return (a, b) => a.item.url.localeCompare(b.item.url);\n            case 'status':\n                return (a, b) => {\n                    return nullToNegative(a.item.success) - nullToNegative(b.item.success);\n                };\n            case 'size':\n                return (a, b) => nullToNegative(a.item.size) - nullToNegative(b.item.size);\n            case 'initiator':\n                return (a, b) => (a.item.initiator.initiatorUrl || '').localeCompare(b.item.initiator.initiatorUrl || '');\n            case 'error-message':\n                return (a, b) => (a.item.errorMessage || '').localeCompare(b.item.errorMessage || '');\n            default:\n                console.assert(false, 'Unknown sort field: ' + columnId);\n                return null;\n        }\n    }\n}\n//# sourceMappingURL=DeveloperResourcesListView.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (c) 2020 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: hidden;\n}\n\n.developer-resource-view-toolbar-container {\n  display: flex;\n  border-bottom: 1px solid var(--sys-color-divider);\n  flex: 0 0 auto;\n}\n\n.developer-resource-view-toolbar {\n  display: inline-block;\n  width: 100%;\n}\n\n.developer-resource-view-toolbar-summary {\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n  padding-left: 5px;\n  flex: 0 0 19px;\n  display: flex;\n  padding-right: 5px;\n}\n\n.developer-resource-view-toolbar-summary .developer-resource-view-message {\n  padding-top: 2px;\n  padding-left: 1ex;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.developer-resource-view-results {\n  overflow-y: auto;\n  display: flex;\n  flex: auto;\n}\n\n/*# sourceURL=developerResourcesView.css */\n`);\n\nexport default styles;\n","// Copyright (c) 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { DeveloperResourcesListView } from './DeveloperResourcesListView.js';\nimport developerResourcesViewStyles from './developerResourcesView.css.js';\nconst UIStrings = {\n    /**\n     *@description Placeholder for a search field in a toolbar\n     */\n    filterByText: 'Filter by URL and error',\n    /**\n     * @description Tooltip for a checkbox in the toolbar of the developer resources view. The\n     * inspected target is the webpage that DevTools is debugging/inspecting/attached to.\n     */\n    loadHttpsDeveloperResources: 'Load `HTTP(S)` developer resources through the website you inspect, not through DevTools',\n    /**\n     * @description Text for a checkbox in the toolbar of the developer resources view. The target is\n     * the webpage that DevTools is debugging/inspecting/attached to. This setting makes it so\n     * developer resources are requested from the webpage itself, and not from the DevTools\n     * application.\n     */\n    enableLoadingThroughTarget: 'Load through website',\n    /**\n     *@description Text for resources load status\n     *@example {1} PH1\n     *@example {1} PH2\n     */\n    resourcesCurrentlyLoading: '{PH1} resources, {PH2} currently loading',\n    /**\n     * @description Status text that appears to tell the developer how many resources were loaded in\n     * total. Resources are files related to the webpage.\n     */\n    resources: '{n, plural, =1 {# resource} other {# resources}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/developer_resources/DeveloperResourcesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class DeveloperResourcesRevealer {\n    async reveal(resourceInitiatorKey) {\n        const loader = SDK.PageResourceLoader.PageResourceLoader.instance();\n        const resource = loader.getResourcesLoaded().get(resourceInitiatorKey.key);\n        if (resource) {\n            await UI.ViewManager.ViewManager.instance().showView('developer-resources');\n            const developerResourcesView = await UI.ViewManager.ViewManager.instance().view('developer-resources').widget();\n            return developerResourcesView.select(resource);\n        }\n    }\n}\nexport class DeveloperResourcesView extends UI.ThrottledWidget.ThrottledWidget {\n    textFilterRegExp;\n    filterInput;\n    coverageResultsElement;\n    listView;\n    statusToolbarElement;\n    statusMessageElement;\n    loader;\n    constructor() {\n        super(true);\n        this.element.setAttribute('jslog', `${VisualLogging.panel('developer-resources').track({ resize: true })}`);\n        const toolbarContainer = this.contentElement.createChild('div', 'developer-resource-view-toolbar-container');\n        toolbarContainer.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n        const toolbar = new UI.Toolbar.Toolbar('developer-resource-view-toolbar', toolbarContainer);\n        this.textFilterRegExp = null;\n        this.filterInput = new UI.Toolbar.ToolbarFilter(i18nString(UIStrings.filterByText), 1);\n        this.filterInput.addEventListener(\"TextChanged\" /* UI.Toolbar.ToolbarInput.Event.TEXT_CHANGED */, this.onFilterChanged, this);\n        toolbar.appendToolbarItem(this.filterInput);\n        const loadThroughTarget = SDK.PageResourceLoader.getLoadThroughTargetSetting();\n        const loadThroughTargetCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(loadThroughTarget, i18nString(UIStrings.loadHttpsDeveloperResources), i18nString(UIStrings.enableLoadingThroughTarget));\n        toolbar.appendToolbarItem(loadThroughTargetCheckbox);\n        this.coverageResultsElement = this.contentElement.createChild('div', 'developer-resource-view-results');\n        this.listView = new DeveloperResourcesListView(this.isVisible.bind(this));\n        this.listView.show(this.coverageResultsElement);\n        this.statusToolbarElement = this.contentElement.createChild('div', 'developer-resource-view-toolbar-summary');\n        this.statusMessageElement = this.statusToolbarElement.createChild('div', 'developer-resource-view-message');\n        this.loader = SDK.PageResourceLoader.PageResourceLoader.instance();\n        this.loader.addEventListener(\"Update\" /* SDK.PageResourceLoader.Events.UPDATE */, this.update, this);\n        this.update();\n    }\n    async doUpdate() {\n        const selectedItem = this.listView.selectedItem();\n        this.listView.reset();\n        this.listView.update(this.loader.getScopedResourcesLoaded().values());\n        if (selectedItem) {\n            this.listView.select(selectedItem);\n        }\n        this.updateStats();\n    }\n    async select(resource) {\n        await this.lastUpdatePromise;\n        this.listView.select(resource);\n    }\n    async selectedItem() {\n        await this.lastUpdatePromise;\n        return this.listView.selectedItem();\n    }\n    updateStats() {\n        const { loading, resources } = this.loader.getScopedNumberOfResources();\n        if (loading > 0) {\n            this.statusMessageElement.textContent =\n                i18nString(UIStrings.resourcesCurrentlyLoading, { PH1: resources, PH2: loading });\n        }\n        else {\n            this.statusMessageElement.textContent = i18nString(UIStrings.resources, { n: resources });\n        }\n    }\n    isVisible(item) {\n        return !this.textFilterRegExp || this.textFilterRegExp.test(item.url) ||\n            this.textFilterRegExp.test(item.errorMessage || '');\n    }\n    onFilterChanged() {\n        if (!this.listView) {\n            return;\n        }\n        const text = this.filterInput.value();\n        this.textFilterRegExp = text ? Platform.StringUtilities.createPlainTextSearchRegex(text, 'i') : null;\n        this.listView.updateFilterAndHighlight(this.textFilterRegExp);\n        this.updateStats();\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([developerResourcesViewStyles]);\n    }\n}\n//# sourceMappingURL=DeveloperResourcesView.js.map"],"names":["styles","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","DeveloperResourcesListView","UI.Widget.VBox","isVisibleFilter","columns","DataGrid.SortableDataGrid.SortableDataGrid","dataGridWidget","item","node","contextMenu","gridNode","Host.InspectorFrontendHost.InspectorFrontendHostInstance","items","hadUpdates","rootNode","GridNode","highlightRegExp","hadTreeUpdates","shouldBeVisible","isVisible","columnId","sortFunction","developerResourcesListViewStyles","DataGrid.SortableDataGrid.SortableDataGridNode","cell","UI.Tooltip.Tooltip","outer","prefix","suffix","splitURL","url","frameId","frame","SDK.FrameManager.FrameManager","SDK.OverlayModel.OverlayModel","size","sizeSpan","Platform.NumberUtilities.withThousandsSeparator","sizeAccessibleName","element","textContent","matches","range","TextUtils.TextRange.SourceRange","UI.UIUtils.highlightRangesWithStyleClass","nullToNegative","x","a","b","DeveloperResourcesRevealer","resourceInitiatorKey","resource","SDK.PageResourceLoader.PageResourceLoader","UI.ViewManager.ViewManager","DeveloperResourcesView","UI.ThrottledWidget.ThrottledWidget","VisualLogging.panel","toolbarContainer","VisualLogging.toolbar","toolbar","UI.Toolbar.Toolbar","UI.Toolbar.ToolbarFilter","loadThroughTarget","SDK.PageResourceLoader.getLoadThroughTargetSetting","loadThroughTargetCheckbox","UI.Toolbar.ToolbarSettingCheckbox","selectedItem","loading","resources","text","Platform.StringUtilities.createPlainTextSearchRegex","developerResourcesViewStyles"],"mappings":"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"}