{"version":3,"file":"components-nB6c8Px-.js","sources":["../../panels/sources/components/breakpointsView.css.js","../../panels/sources/components/BreakpointsViewUtils.js","../../panels/sources/components/BreakpointsView.js","../../panels/sources/components/HeadersView.css.js","../../panels/sources/components/HeadersView.js"],"sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2022 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  flex: auto;\n  display: flex;\n  flex-direction: column;\n}\n\n.code-snippet {\n  width: 100%;\n  font-family: var(--source-code-font-family);\n  font-size: var(--source-code-font-size);\n  color: var(--sys-color-token-subtle);\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  flex-shrink: 100;\n  cursor: pointer;\n}\n\n.code-snippet:hover {\n  color: var(--sys-color-on-surface);\n  text-decoration: underline;\n}\n\ninput {\n  height: 12px;\n  width: 12px;\n  flex-shrink: 0;\n  margin: 3px 0;\n}\n\ndetails {\n  border-top: 1px solid var(--sys-color-divider);\n  padding: 2px 0;\n}\n\ndetails:not(.active) {\n  background-color: var(--sys-color-state-disabled-container);\n  opacity: 30%;\n}\n\ndetails > summary {\n  min-height: 20px;\n  list-style: none;\n  display: flex;\n  padding: 0 8px 0 6px;\n  align-items: center;\n}\n\ndetails > summary:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\ndetails > summary::before {\n  display: block;\n  user-select: none;\n  mask-image: var(--image-file-triangle-right);\n  background-color: var(--icon-default);\n  content: \"\";\n  height: 14px;\n  min-width: 14px;\n  max-width: 14px;\n  margin-left: -4px;\n  overflow: hidden;\n  transition: transform 200ms;\n}\n\ndetails[open] > summary::before {\n  transform: rotate(90deg);\n}\n\n.group-header {\n  display: inline-flex;\n  align-items: center;\n  width: 100%;\n  padding-right: 8px;\n  overflow: hidden;\n}\n\n.group-icon-or-disable {\n  justify-content: center;\n  display: flex;\n  width: 16px;\n  margin-left: 2px;\n}\n\n.group-header-title {\n  margin-left: 4px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n.group-header-differentiator {\n  font-weight: normal;\n  color: var(--sys-color-state-disabled);\n  margin-left: 8px;\n}\n\n.group-hover-actions {\n  display: flex;\n  align-items: center;\n  justify-content: right;\n  font-size: 10px;\n  font-weight: 500;\n}\n\n.breakpoint-item-location-or-actions {\n  min-width: 20px;\n  flex: 0 0 auto;\n  display: flex;\n  padding-left: 8px;\n  justify-content: right;\n}\n\nbutton {\n  cursor: pointer;\n  width: 13px;\n  height: 13px;\n  border: none;\n  background-color: transparent;\n  display: none;\n  align-items: center;\n  justify-content: center;\n}\n\nbutton + span {\n  padding-left: 6px;\n}\n\nbutton + button {\n  padding-left: 11px;\n}\n\nsummary:hover button {\n  display: flex;\n}\n\ndevtools-icon {\n  width: 16px;\n  height: 16px;\n\n  button:hover & {\n    color: var(--icon-default-hover);\n  }\n}\n\n.type-indicator {\n  --override-color-conditional-breakpoint: var(--ref-palette-orange70);\n  --override-color-logpoint: var(--ref-palette-pink60);\n\n  border-right: 4px solid;\n  border-radius: 0 2px 2px 0;\n  border-color: transparent;\n  height: 16px;\n}\n\n.breakpoint-item {\n  display: flex;\n  align-items: center;\n  line-height: 13px;\n  height: 20px;\n  padding-right: 8px;\n}\n\n.breakpoint-item.hit {\n  background-color: var(--sys-color-yellow-container);\n  color: var(--sys-color-on-yellow-container);\n}\n\n.breakpoint-item.hit:focus {\n  background-color: var(--sys-color-tonal-container);\n}\n\n.theme-with-dark-background .type-indicator,\n:host-context(.theme-with-dark-background) .type-indicator {\n  --override-color-conditional-breakpoint: var(--ref-palette-yellow60);\n  --override-color-logpoint: var(--ref-palette-pink70);\n}\n\n.breakpoint-item.logpoint > label > .type-indicator {\n  border-color: var(--override-color-logpoint);\n}\n\n.breakpoint-item.conditional-breakpoint > label > .type-indicator {\n  border-color: var(--override-color-conditional-breakpoint);\n}\n\n.checkbox-label {\n  display: flex;\n  align-items: center;\n}\n\n.checkbox-label > input {\n  margin-left: 16px;\n  margin-right: 6px;\n}\n\ndevtools-icon[name=\"file-script\"] {\n  color: var(--icon-file-script);\n  width: 18px;\n  height: 18px;\n\n  summary:hover & {\n    display: none;\n  }\n}\n\ninput.group-checkbox {\n  margin: 0;\n  display: none;\n}\n\nsummary:hover .group-checkbox {\n  display: flex;\n}\n\n.location {\n  line-height: 14px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n.breakpoint-item:hover button {\n  display: flex;\n}\n\n.pause-on-uncaught-exceptions {\n  margin-top: 3px;\n}\n\n.pause-on-caught-exceptions {\n  margin-bottom: 3px;\n}\n\n/* TODO(crbug.com/1382762): Remove special casing with dependent toggles as soon as Node LTS caught up on independent pause of exception toggles. */\ninput:disabled + span {\n  color: var(--sys-color-state-disabled);\n}\n\n.pause-on-caught-exceptions > .checkbox-label > input,\n.pause-on-uncaught-exceptions > .checkbox-label > input {\n  margin-left: 6px;\n}\n\n.pause-on-caught-exceptions > .checkbox-label > span,\n.pause-on-uncaught-exceptions > .checkbox-label > span {\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n.pause-on-uncaught-exceptions,\n.pause-on-caught-exceptions {\n  line-height: 13px;\n  height: 18px;\n  padding-right: 8px;\n\n  & > label {\n    width: fit-content;\n  }\n}\n\ndetails > summary:focus,\n.breakpoint-item:focus,\n.pause-on-uncaught-exceptions:focus,\n.pause-on-caught-exceptions:focus {\n  background-color: var(--sys-color-tonal-container);\n  outline-width: 0;\n}\n\n/*# sourceURL=breakpointsView.css */\n`);\n\nexport default styles;\n","// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../core/common/common.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport { assertNotNullOrUndefined } from '../../../core/platform/platform.js';\nconst SUMMARY_ELEMENT_SELECTOR = 'summary';\nconst domNodeIsTree = (domNode) => {\n    return domNode.getAttribute('role') === 'tree';\n};\nconst domNodeIsBreakpointItemNode = (domNode) => {\n    return domNode.getAttribute('role') === 'treeitem';\n};\nconst domNodeIsPauseOnExceptionsNode = (domNode) => {\n    return domNode.getAttribute('data-first-pause') !== null || domNode.getAttribute('data-last-pause') !== null;\n};\nconst domNodeIsSummaryNode = (domNode) => {\n    return !domNodeIsBreakpointItemNode(domNode);\n};\nconst groupIsExpanded = (detailsElement) => {\n    return detailsElement.getAttribute('open') !== null;\n};\nconst getFirstBreakpointItemInGroup = (detailsElement) => {\n    return detailsElement.querySelector('[data-first-breakpoint]');\n};\nconst getLastBreakpointItemInGroup = (detailsElement) => {\n    return detailsElement.querySelector('[data-last-breakpoint]');\n};\nconst getNextGroupsSummaryNode = (detailsElement) => {\n    const nextDetailsElement = getNextDetailsElement(detailsElement);\n    if (nextDetailsElement && nextDetailsElement instanceof HTMLDetailsElement) {\n        return nextDetailsElement?.querySelector('summary');\n    }\n    return null;\n};\nconst getCurrentSummaryNode = (detailsElement) => {\n    return detailsElement.querySelector(SUMMARY_ELEMENT_SELECTOR);\n};\nconst getNextDetailsElement = (detailsElement) => {\n    const nextDetailsElement = detailsElement.nextElementSibling;\n    if (nextDetailsElement && nextDetailsElement instanceof HTMLDetailsElement) {\n        return nextDetailsElement;\n    }\n    return null;\n};\nconst getPreviousDetailsElement = (detailsElement) => {\n    const previousDetailsElement = detailsElement.previousElementSibling;\n    if (previousDetailsElement && previousDetailsElement instanceof HTMLDetailsElement) {\n        return previousDetailsElement;\n    }\n    return null;\n};\nfunction findNextNodeForPauseOnExceptions(target, key) {\n    // Handle keyboard navigation on one of the pause on exceptions checkboxes.\n    console.assert(domNodeIsPauseOnExceptionsNode(target));\n    let nextNode = null;\n    switch (key) {\n        case \"ArrowUp\" /* Platform.KeyboardUtilities.ArrowKey.UP */: {\n            const previousElementSibling = target.previousElementSibling;\n            if (previousElementSibling instanceof HTMLElement) {\n                nextNode = previousElementSibling;\n                console.assert(domNodeIsPauseOnExceptionsNode(nextNode));\n            }\n            break;\n        }\n        case \"ArrowDown\" /* Platform.KeyboardUtilities.ArrowKey.DOWN */: {\n            const nextElementSibling = target.nextElementSibling;\n            if (nextElementSibling instanceof HTMLElement) {\n                if (domNodeIsTree(nextElementSibling)) {\n                    const detailsElement = nextElementSibling.querySelector('[data-first-group]');\n                    if (detailsElement) {\n                        nextNode = getCurrentSummaryNode(detailsElement);\n                    }\n                }\n                else {\n                    nextNode = nextElementSibling;\n                    console.assert(domNodeIsPauseOnExceptionsNode(nextNode));\n                }\n            }\n            break;\n        }\n        default:\n            break;\n    }\n    return nextNode;\n}\nexport async function findNextNodeForKeyboardNavigation(target, key, setGroupExpandedStateCallback) {\n    if (domNodeIsPauseOnExceptionsNode(target)) {\n        return findNextNodeForPauseOnExceptions(target, key);\n    }\n    // Handle keyboard navigation in the breakpoint tree.\n    const detailsElement = target.parentElement;\n    if (!detailsElement || !(detailsElement instanceof HTMLDetailsElement)) {\n        throw new Error('The selected nodes should be direct children of an HTMLDetails element.');\n    }\n    let nextNode = null;\n    switch (key) {\n        case \"ArrowLeft\" /* Platform.KeyboardUtilities.ArrowKey.LEFT */: {\n            if (domNodeIsSummaryNode(target)) {\n                // On a summary node, collapse if group is expanded.\n                if (groupIsExpanded(detailsElement)) {\n                    await setGroupExpandedStateCallback(detailsElement, false);\n                }\n            }\n            else {\n                // On a breakpoint item node, navigate up to the summary node.\n                return getCurrentSummaryNode(detailsElement);\n            }\n            break;\n        }\n        case \"ArrowRight\" /* Platform.KeyboardUtilities.ArrowKey.RIGHT */: {\n            if (domNodeIsSummaryNode(target)) {\n                // On a summary node, expand if group is collapsed, and otherwise navigate\n                // to the first breakpoint item in this group.\n                if (groupIsExpanded(detailsElement)) {\n                    return getFirstBreakpointItemInGroup(detailsElement);\n                }\n                await setGroupExpandedStateCallback(detailsElement, true);\n            }\n            break;\n        }\n        case \"ArrowDown\" /* Platform.KeyboardUtilities.ArrowKey.DOWN */: {\n            if (domNodeIsSummaryNode(target)) {\n                if (groupIsExpanded(detailsElement)) {\n                    // If the current node is a summary node of an expanded group, navigating down\n                    // should lead to the first breakpoint item within the group.\n                    nextNode = getFirstBreakpointItemInGroup(detailsElement);\n                }\n                else {\n                    // If the current node is a summary node of a collapsed group, go to the next\n                    // group's summary node if existent.\n                    nextNode = getNextGroupsSummaryNode(detailsElement);\n                }\n            }\n            else {\n                // If the current node is a breakpoint item, try to get the next\n                // breakpoint item if available, otherwise the next group's summary\n                // node.\n                const nextSibling = target.nextElementSibling;\n                if (nextSibling && nextSibling instanceof HTMLDivElement) {\n                    nextNode = nextSibling;\n                }\n                else {\n                    nextNode = getNextGroupsSummaryNode(detailsElement);\n                }\n            }\n            break;\n        }\n        case \"ArrowUp\" /* Platform.KeyboardUtilities.ArrowKey.UP */: {\n            // If the current node is a summary node, navigating upwards will either\n            // navigate to the last breakpoint item of the previous group (if expanded),\n            // and otherwise navigate to the previous group's summary node.\n            if (domNodeIsSummaryNode(target)) {\n                const previousDetailsElement = getPreviousDetailsElement(detailsElement);\n                if (previousDetailsElement) {\n                    if (groupIsExpanded(previousDetailsElement)) {\n                        nextNode = getLastBreakpointItemInGroup(previousDetailsElement);\n                    }\n                    else {\n                        nextNode = getCurrentSummaryNode(previousDetailsElement);\n                    }\n                }\n                else {\n                    const pauseOnExceptions = detailsElement.parentElement?.previousElementSibling;\n                    if (pauseOnExceptions instanceof HTMLElement) {\n                        nextNode = pauseOnExceptions;\n                    }\n                }\n            }\n            else {\n                // If the current node is a breakpoint item, going up should get\n                // the previous sibling, which can be both a summary node or a\n                // a breakpoint item.\n                const previousSibling = target.previousElementSibling;\n                if (previousSibling instanceof HTMLElement) {\n                    nextNode = previousSibling;\n                }\n            }\n            break;\n        }\n    }\n    return nextNode;\n}\nfunction findFirstDifferingSegmentIndex(splitUrls) {\n    const firstUrl = splitUrls[0];\n    let firstDifferingIndex = -1;\n    for (let segmentIndex = 0; segmentIndex < firstUrl.length && firstDifferingIndex === -1; ++segmentIndex) {\n        const segment = firstUrl[segmentIndex];\n        for (let urlIndex = 1; urlIndex < splitUrls.length; ++urlIndex) {\n            const url = splitUrls[urlIndex];\n            if (url.length <= segmentIndex || url[segmentIndex] !== segment) {\n                firstDifferingIndex = segmentIndex;\n                break;\n            }\n        }\n    }\n    return firstDifferingIndex === -1 ? firstUrl.length : firstDifferingIndex;\n}\nfunction findDifferentiatingPath(url, allUrls, startIndex) {\n    const differentiatingPath = [];\n    let remainingUrlsToDifferentiate = allUrls.filter(other => other !== url);\n    for (let segmentIndex = startIndex; segmentIndex < url.length; ++segmentIndex) {\n        const segment = url[segmentIndex];\n        differentiatingPath.push(segment);\n        remainingUrlsToDifferentiate =\n            remainingUrlsToDifferentiate.filter(url => url.length > segmentIndex && url[segmentIndex] === segment);\n        if (remainingUrlsToDifferentiate.length === 0) {\n            break;\n        }\n    }\n    return differentiatingPath;\n}\n// This function tries to find a subpath (if available) that we can use to differentiate\n// urls that have the same file name.\n// It does so by 1. removing common suffixes, 2. taking segments of the path (from right to left) until the path is\n// unique.\n//\n// Example:\n//\n//     Paths:  'http://www.google.com/src/a/index.js', 'http://www.google.com/src2/a/index.js'\n//     Output: 'src/…/', 'src2/…/'\nfunction populateDifferentiatingPathMap(urls, urlToDifferentiator) {\n    const splitReversedUrls = urls.map(url => {\n        // Get the folder path components without the first '/'.\n        const paths = Common.ParsedURL.ParsedURL.fromString(url)?.folderPathComponents.slice(1);\n        assertNotNullOrUndefined(paths);\n        return paths.split('/').reverse();\n    });\n    const startIndex = findFirstDifferingSegmentIndex(splitReversedUrls);\n    for (let i = 0; i < splitReversedUrls.length; ++i) {\n        const splitUrl = splitReversedUrls[i];\n        const differentiator = findDifferentiatingPath(splitUrl, splitReversedUrls, startIndex);\n        const reversed = differentiator.reverse().join('/');\n        // If we start to collect the differentiator from the last segment (startIndex === 0),\n        // only append a '/', otherwise' …/'.\n        if (startIndex === 0) {\n            urlToDifferentiator.set(urls[i], reversed + '/');\n        }\n        else {\n            urlToDifferentiator.set(urls[i], reversed + '/\\u2026/');\n        }\n    }\n    console.assert(new Set(urlToDifferentiator.values()).size === urls.length, 'Differentiators should be unique.');\n}\nexport function getDifferentiatingPathMap(titleInfos) {\n    const nameToUrl = new Map();\n    const urlToDifferentiatingPath = new Map();\n    for (const { name, url } of titleInfos) {\n        if (!nameToUrl.has(name)) {\n            nameToUrl.set(name, []);\n        }\n        nameToUrl.get(name)?.push(url);\n    }\n    for (const urlsGroupedByName of nameToUrl.values()) {\n        if (urlsGroupedByName.length > 1) {\n            populateDifferentiatingPathMap(urlsGroupedByName, urlToDifferentiatingPath);\n        }\n    }\n    return urlToDifferentiatingPath;\n}\n//# sourceMappingURL=BreakpointsViewUtils.js.map","// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/icon_button/icon_button.js';\nimport * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport { assertNotNullOrUndefined } from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Bindings from '../../../models/bindings/bindings.js';\nimport * as Breakpoints from '../../../models/breakpoints/breakpoints.js';\nimport * as TextUtils from '../../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../../models/workspace/workspace.js';\nimport * as Input from '../../../ui/components/input/input.js';\nimport * as LegacyWrapper from '../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport breakpointsViewStyles from './breakpointsView.css.js';\nimport { findNextNodeForKeyboardNavigation, getDifferentiatingPathMap } from './BreakpointsViewUtils.js';\nconst { html, Directives: { ifDefined, repeat, classMap, live } } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description Label for a checkbox to toggle pausing on uncaught exceptions in the breakpoint sidebar of the Sources panel. When the checkbox is checked, DevTools will pause if an uncaught exception is thrown at runtime.\n     */\n    pauseOnUncaughtExceptions: 'Pause on uncaught exceptions',\n    /**\n     *@description Label for a checkbox to toggling pausing on caught exceptions in the breakpoint sidebar of the Sources panel. When the checkbox is checked, DevTools will pause if an exception is thrown, but caught (handled) at runtime.\n     */\n    pauseOnCaughtExceptions: 'Pause on caught exceptions',\n    /**\n     *@description Text exposed to screen readers on checked items.\n     */\n    checked: 'checked',\n    /**\n     *@description Accessible text exposed to screen readers when the screen reader encounters an unchecked checkbox.\n     */\n    unchecked: 'unchecked',\n    /**\n     *@description Accessible text for a breakpoint collection with a combination of checked states.\n     */\n    indeterminate: 'mixed',\n    /**\n     *@description Accessibility label for hit breakpoints in the Sources panel.\n     *@example {checked} PH1\n     */\n    breakpointHit: '{PH1} breakpoint hit',\n    /**\n     *@description Tooltip text that shows when hovered over a remove button that appears next to a filename in the breakpoint sidebar of the sources panel. Also used in the context menu for breakpoint groups.\n     */\n    removeAllBreakpointsInFile: 'Remove all breakpoints in file',\n    /**\n     *@description Context menu item in the Breakpoints Sidebar Pane of the Sources panel that disables all breakpoints in a file.\n     */\n    disableAllBreakpointsInFile: 'Disable all breakpoints in file',\n    /**\n     *@description Context menu item in the Breakpoints Sidebar Pane of the Sources panel that enables all breakpoints in a file.\n     */\n    enableAllBreakpointsInFile: 'Enable all breakpoints in file',\n    /**\n     *@description Tooltip text that shows when hovered over an edit button that appears next to a breakpoint or conditional breakpoint in the breakpoint sidebar of the sources panel.\n     */\n    editCondition: 'Edit condition',\n    /**\n     *@description Tooltip text that shows when hovered over an edit button that appears next to a logpoint in the breakpoint sidebar of the sources panel.\n     */\n    editLogpoint: 'Edit logpoint',\n    /**\n     *@description Context menu item in the Breakpoints Sidebar Pane of the Sources panel that disables all breakpoints.\n     */\n    disableAllBreakpoints: 'Disable all breakpoints',\n    /**\n     *@description Context menu item in the Breakpoints Sidebar Pane of the Sources panel that enables all breakpoints.\n     */\n    enableAllBreakpoints: 'Enable all breakpoints',\n    /**\n     *@description Tooltip text that shows when hovered over a remove button that appears next to a breakpoint in the breakpoint sidebar of the sources panel. Also used in the context menu for breakpoint items.\n     */\n    removeBreakpoint: 'Remove breakpoint',\n    /**\n     *@description Text to remove all breakpoints\n     */\n    removeAllBreakpoints: 'Remove all breakpoints',\n    /**\n     *@description Text in Breakpoints Sidebar Pane of the Sources panel\n     */\n    removeOtherBreakpoints: 'Remove other breakpoints',\n    /**\n     *@description Context menu item that reveals the source code location of a breakpoint in the Sources panel.\n     */\n    revealLocation: 'Reveal location',\n    /**\n     *@description Tooltip text that shows when hovered over a piece of code of a breakpoint in the breakpoint sidebar of the sources panel. It shows the condition, on which the breakpoint will stop.\n     *@example {x < 3} PH1\n     */\n    conditionCode: 'Condition: {PH1}',\n    /**\n     *@description Tooltip text that shows when hovered over a piece of code of a breakpoint in the breakpoint sidebar of the sources panel. It shows what is going to be printed in the console, if execution hits this breakpoint.\n     *@example {'hello'} PH1\n     */\n    logpointCode: 'Logpoint: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/components/BreakpointsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\nconst MAX_SNIPPET_LENGTH = 200;\nlet breakpointsViewInstance;\nlet breakpointsViewControllerInstance;\nexport class BreakpointsSidebarController {\n    #breakpointManager;\n    #breakpointItemToLocationMap = new WeakMap();\n    #breakpointsActiveSetting;\n    #pauseOnUncaughtExceptionSetting;\n    #pauseOnCaughtExceptionSetting;\n    #collapsedFilesSettings;\n    #collapsedFiles;\n    // This is used to keep track of outstanding edits to breakpoints that were initiated\n    // by the breakpoint edit button (for UMA).\n    #outstandingBreakpointEdited;\n    #updateScheduled = false;\n    #updateRunning = false;\n    constructor(breakpointManager, settings) {\n        this.#collapsedFilesSettings = Common.Settings.Settings.instance().createSetting('collapsed-files', []);\n        this.#collapsedFiles = new Set(this.#collapsedFilesSettings.get());\n        this.#breakpointManager = breakpointManager;\n        this.#breakpointManager.addEventListener(Breakpoints.BreakpointManager.Events.BreakpointAdded, this.#onBreakpointAdded, this);\n        this.#breakpointManager.addEventListener(Breakpoints.BreakpointManager.Events.BreakpointRemoved, this.#onBreakpointRemoved, this);\n        this.#breakpointsActiveSetting = settings.moduleSetting('breakpoints-active');\n        this.#breakpointsActiveSetting.addChangeListener(this.update, this);\n        this.#pauseOnUncaughtExceptionSetting = settings.moduleSetting('pause-on-uncaught-exception');\n        this.#pauseOnUncaughtExceptionSetting.addChangeListener(this.update, this);\n        this.#pauseOnCaughtExceptionSetting = settings.moduleSetting('pause-on-caught-exception');\n        this.#pauseOnCaughtExceptionSetting.addChangeListener(this.update, this);\n    }\n    static instance({ forceNew, breakpointManager, settings } = {\n        forceNew: null,\n        breakpointManager: Breakpoints.BreakpointManager.BreakpointManager.instance(),\n        settings: Common.Settings.Settings.instance(),\n    }) {\n        if (!breakpointsViewControllerInstance || forceNew) {\n            breakpointsViewControllerInstance = new BreakpointsSidebarController(breakpointManager, settings);\n        }\n        return breakpointsViewControllerInstance;\n    }\n    static removeInstance() {\n        breakpointsViewControllerInstance = null;\n    }\n    static targetSupportsIndependentPauseOnExceptionToggles() {\n        const hasNodeTargets = SDK.TargetManager.TargetManager.instance().targets().some(target => target.type() === SDK.Target.Type.NODE);\n        return !hasNodeTargets;\n    }\n    flavorChanged(_object) {\n        void this.update();\n    }\n    breakpointEditFinished(breakpoint, edited) {\n        if (this.#outstandingBreakpointEdited && this.#outstandingBreakpointEdited === breakpoint) {\n            if (edited) {\n                Host.userMetrics.actionTaken(Host.UserMetrics.Action.BreakpointConditionEditedFromSidebar);\n            }\n            this.#outstandingBreakpointEdited = undefined;\n        }\n    }\n    breakpointStateChanged(breakpointItem, checked) {\n        const locations = this.#getLocationsForBreakpointItem(breakpointItem);\n        locations.forEach((value) => {\n            const breakpoint = value.breakpoint;\n            breakpoint.setEnabled(checked);\n        });\n    }\n    async breakpointEdited(breakpointItem, editButtonClicked) {\n        const locations = this.#getLocationsForBreakpointItem(breakpointItem);\n        let location;\n        for (const locationCandidate of locations) {\n            if (!location || locationCandidate.uiLocation.compareTo(location.uiLocation) < 0) {\n                location = locationCandidate;\n            }\n        }\n        if (location) {\n            if (editButtonClicked) {\n                this.#outstandingBreakpointEdited = location.breakpoint;\n            }\n            await Common.Revealer.reveal(location);\n        }\n    }\n    breakpointsRemoved(breakpointItems) {\n        const locations = breakpointItems.flatMap(breakpointItem => this.#getLocationsForBreakpointItem(breakpointItem));\n        locations.forEach(location => location?.breakpoint.remove(false /* keepInStorage */));\n    }\n    expandedStateChanged(url, expanded) {\n        if (expanded) {\n            this.#collapsedFiles.delete(url);\n        }\n        else {\n            this.#collapsedFiles.add(url);\n        }\n        this.#saveSettings();\n    }\n    async jumpToSource(breakpointItem) {\n        const uiLocations = this.#getLocationsForBreakpointItem(breakpointItem).map(location => location.uiLocation);\n        let uiLocation;\n        for (const uiLocationCandidate of uiLocations) {\n            if (!uiLocation || uiLocationCandidate.compareTo(uiLocation) < 0) {\n                uiLocation = uiLocationCandidate;\n            }\n        }\n        if (uiLocation) {\n            await Common.Revealer.reveal(uiLocation);\n        }\n    }\n    setPauseOnUncaughtExceptions(value) {\n        this.#pauseOnUncaughtExceptionSetting.set(value);\n    }\n    setPauseOnCaughtExceptions(value) {\n        this.#pauseOnCaughtExceptionSetting.set(value);\n    }\n    async update() {\n        this.#updateScheduled = true;\n        if (this.#updateRunning) {\n            return;\n        }\n        this.#updateRunning = true;\n        while (this.#updateScheduled) {\n            this.#updateScheduled = false;\n            const data = await this.getUpdatedBreakpointViewData();\n            BreakpointsView.instance().data = data;\n        }\n        this.#updateRunning = false;\n    }\n    async getUpdatedBreakpointViewData() {\n        const breakpointsActive = this.#breakpointsActiveSetting.get();\n        const independentPauseToggles = BreakpointsSidebarController.targetSupportsIndependentPauseOnExceptionToggles();\n        const pauseOnUncaughtExceptions = this.#pauseOnUncaughtExceptionSetting.get();\n        const pauseOnCaughtExceptions = this.#pauseOnCaughtExceptionSetting.get();\n        const breakpointLocations = this.#getBreakpointLocations();\n        if (!breakpointLocations.length) {\n            return {\n                breakpointsActive,\n                pauseOnCaughtExceptions,\n                pauseOnUncaughtExceptions,\n                independentPauseToggles,\n                groups: [],\n            };\n        }\n        const locationsGroupedById = this.#groupBreakpointLocationsById(breakpointLocations);\n        const locationIdsByLineId = this.#getLocationIdsByLineId(breakpointLocations);\n        const [content, selectedUILocation] = await Promise.all([\n            this.#getContent(locationsGroupedById),\n            this.#getHitUILocation(),\n        ]);\n        const scriptIdToGroup = new Map();\n        for (let idx = 0; idx < locationsGroupedById.length; idx++) {\n            const locations = locationsGroupedById[idx];\n            const fstLocation = locations[0];\n            const sourceURL = fstLocation.uiLocation.uiSourceCode.url();\n            const scriptId = fstLocation.uiLocation.uiSourceCode.canononicalScriptId();\n            const uiLocation = fstLocation.uiLocation;\n            const isHit = selectedUILocation !== null &&\n                locations.some(location => location.uiLocation.id() === selectedUILocation.id());\n            const numBreakpointsOnLine = locationIdsByLineId.get(uiLocation.lineId()).size;\n            const showColumn = numBreakpointsOnLine > 1;\n            const locationText = uiLocation.lineAndColumnText(showColumn);\n            const contentData = content[idx];\n            const codeSnippet = contentData instanceof TextUtils.WasmDisassembly.WasmDisassembly ?\n                contentData.lines[contentData.bytecodeOffsetToLineNumber(uiLocation.columnNumber ?? 0)] ?? '' :\n                contentData.textObj.lineAt(uiLocation.lineNumber);\n            if (isHit && this.#collapsedFiles.has(sourceURL)) {\n                this.#collapsedFiles.delete(sourceURL);\n                this.#saveSettings();\n            }\n            const expanded = !this.#collapsedFiles.has(sourceURL);\n            const status = this.#getBreakpointState(locations);\n            const { type, hoverText } = this.#getBreakpointTypeAndDetails(locations);\n            const item = {\n                id: fstLocation.breakpoint.breakpointStorageId(),\n                location: locationText,\n                codeSnippet,\n                isHit,\n                status,\n                type,\n                hoverText,\n            };\n            this.#breakpointItemToLocationMap.set(item, locations);\n            let group = scriptIdToGroup.get(scriptId);\n            if (group) {\n                group.breakpointItems.push(item);\n                group.expanded ||= expanded;\n            }\n            else {\n                const editable = this.#breakpointManager.supportsConditionalBreakpoints(uiLocation.uiSourceCode);\n                group = {\n                    url: sourceURL,\n                    name: uiLocation.uiSourceCode.displayName(),\n                    editable,\n                    expanded,\n                    breakpointItems: [item],\n                };\n                scriptIdToGroup.set(scriptId, group);\n            }\n        }\n        return {\n            breakpointsActive,\n            pauseOnCaughtExceptions,\n            pauseOnUncaughtExceptions,\n            independentPauseToggles,\n            groups: Array.from(scriptIdToGroup.values()),\n        };\n    }\n    #onBreakpointAdded(event) {\n        const breakpoint = event.data.breakpoint;\n        if (breakpoint.origin === \"USER_ACTION\" /* Breakpoints.BreakpointManager.BreakpointOrigin.USER_ACTION */ &&\n            this.#collapsedFiles.has(breakpoint.url())) {\n            // Auto-expand if a new breakpoint was added to a collapsed group.\n            this.#collapsedFiles.delete(breakpoint.url());\n            this.#saveSettings();\n        }\n        return this.update();\n    }\n    #onBreakpointRemoved(event) {\n        const breakpoint = event.data.breakpoint;\n        if (this.#collapsedFiles.has(breakpoint.url())) {\n            const locations = Breakpoints.BreakpointManager.BreakpointManager.instance().allBreakpointLocations();\n            const otherBreakpointsOnSameFileExist = locations.some(location => location.breakpoint.url() === breakpoint.url());\n            if (!otherBreakpointsOnSameFileExist) {\n                // Clear up the #collapsedFiles set from this url if no breakpoint is left in this group.\n                this.#collapsedFiles.delete(breakpoint.url());\n                this.#saveSettings();\n            }\n        }\n        return this.update();\n    }\n    #saveSettings() {\n        this.#collapsedFilesSettings.set(Array.from(this.#collapsedFiles.values()));\n    }\n    #getBreakpointTypeAndDetails(locations) {\n        const breakpointWithCondition = locations.find(location => Boolean(location.breakpoint.condition()));\n        const breakpoint = breakpointWithCondition?.breakpoint;\n        if (!breakpoint || !breakpoint.condition()) {\n            return { type: \"REGULAR_BREAKPOINT\" /* SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT */ };\n        }\n        const condition = breakpoint.condition();\n        if (breakpoint.isLogpoint()) {\n            return { type: \"LOGPOINT\" /* SDK.DebuggerModel.BreakpointType.LOGPOINT */, hoverText: condition };\n        }\n        return { type: \"CONDITIONAL_BREAKPOINT\" /* SDK.DebuggerModel.BreakpointType.CONDITIONAL_BREAKPOINT */, hoverText: condition };\n    }\n    #getLocationsForBreakpointItem(breakpointItem) {\n        const locations = this.#breakpointItemToLocationMap.get(breakpointItem);\n        assertNotNullOrUndefined(locations);\n        return locations;\n    }\n    async #getHitUILocation() {\n        const details = UI.Context.Context.instance().flavor(SDK.DebuggerModel.DebuggerPausedDetails);\n        if (details && details.callFrames.length) {\n            return await Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().rawLocationToUILocation(details.callFrames[0].location());\n        }\n        return null;\n    }\n    #getBreakpointLocations() {\n        const locations = this.#breakpointManager.allBreakpointLocations().filter(breakpointLocation => breakpointLocation.uiLocation.uiSourceCode.project().type() !== Workspace.Workspace.projectTypes.Debugger);\n        locations.sort((item1, item2) => item1.uiLocation.compareTo(item2.uiLocation));\n        const result = [];\n        let lastBreakpoint = null;\n        let lastLocation = null;\n        for (const location of locations) {\n            if (location.breakpoint !== lastBreakpoint || (lastLocation && location.uiLocation.compareTo(lastLocation))) {\n                result.push(location);\n                lastBreakpoint = location.breakpoint;\n                lastLocation = location.uiLocation;\n            }\n        }\n        return result;\n    }\n    #groupBreakpointLocationsById(breakpointLocations) {\n        const map = new Platform.MapUtilities.Multimap();\n        for (const breakpointLocation of breakpointLocations) {\n            const uiLocation = breakpointLocation.uiLocation;\n            map.set(uiLocation.id(), breakpointLocation);\n        }\n        const arr = [];\n        for (const id of map.keysArray()) {\n            const locations = Array.from(map.get(id));\n            if (locations.length) {\n                arr.push(locations);\n            }\n        }\n        return arr;\n    }\n    #getLocationIdsByLineId(breakpointLocations) {\n        const result = new Platform.MapUtilities.Multimap();\n        for (const breakpointLocation of breakpointLocations) {\n            const uiLocation = breakpointLocation.uiLocation;\n            result.set(uiLocation.lineId(), uiLocation.id());\n        }\n        return result;\n    }\n    #getBreakpointState(locations) {\n        const hasEnabled = locations.some(location => location.breakpoint.enabled());\n        const hasDisabled = locations.some(location => !location.breakpoint.enabled());\n        let status;\n        if (hasEnabled) {\n            status = hasDisabled ? \"INDETERMINATE\" /* BreakpointStatus.INDETERMINATE */ : \"ENABLED\" /* BreakpointStatus.ENABLED */;\n        }\n        else {\n            status = \"DISABLED\" /* BreakpointStatus.DISABLED */;\n        }\n        return status;\n    }\n    #getContent(locations) {\n        return Promise.all(locations.map(async ([{ uiLocation: { uiSourceCode } }]) => {\n            const contentData = await uiSourceCode.requestContentData({ cachedWasmOnly: true });\n            return TextUtils.ContentData.ContentData.contentDataOrEmpty(contentData);\n        }));\n    }\n}\nexport class BreakpointsView extends LegacyWrapper.LegacyWrapper.WrappableComponent {\n    #controller;\n    static instance({ forceNew } = { forceNew: false }) {\n        if (!breakpointsViewInstance || forceNew) {\n            breakpointsViewInstance = LegacyWrapper.LegacyWrapper.legacyWrapper(UI.Widget.Widget, new BreakpointsView());\n        }\n        return breakpointsViewInstance.getComponent();\n    }\n    constructor() {\n        super();\n        this.#controller = BreakpointsSidebarController.instance();\n        this.setAttribute('jslog', `${VisualLogging.section('sources.js-breakpoints')}`);\n        void this.#controller.update();\n    }\n    #shadow = this.attachShadow({ mode: 'open' });\n    #pauseOnUncaughtExceptions = false;\n    #pauseOnCaughtExceptions = false;\n    // TODO(crbug.com/1382762): Remove special casing with dependent toggles as soon as Node LTS caught up on independent pause of exception toggles.\n    #independentPauseToggles = false;\n    #breakpointsActive = true;\n    #breakpointGroups = [];\n    #urlToDifferentiatingPath = new Map();\n    set data(data) {\n        this.#pauseOnUncaughtExceptions = data.pauseOnUncaughtExceptions;\n        this.#pauseOnCaughtExceptions = data.pauseOnCaughtExceptions;\n        this.#independentPauseToggles = data.independentPauseToggles;\n        this.#breakpointsActive = data.breakpointsActive;\n        this.#breakpointGroups = data.groups;\n        const titleInfos = [];\n        for (const group of data.groups) {\n            titleInfos.push({ name: group.name, url: group.url });\n        }\n        this.#urlToDifferentiatingPath = getDifferentiatingPathMap(titleInfos);\n        void this.render();\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [Input.checkboxStyles, breakpointsViewStyles];\n    }\n    async render() {\n        await coordinator.write('BreakpointsView render', () => {\n            const clickHandler = async (event) => {\n                const currentTarget = event.currentTarget;\n                await this.#setSelected(currentTarget);\n                event.consume();\n            };\n            const pauseOnCaughtIsChecked = (this.#independentPauseToggles || this.#pauseOnUncaughtExceptions) && this.#pauseOnCaughtExceptions;\n            const pauseOnCaughtExceptionIsDisabled = !this.#independentPauseToggles && !this.#pauseOnUncaughtExceptions;\n            // clang-format off\n            const out = html `\n        <div class='pause-on-uncaught-exceptions'\n            tabindex='0'\n            @click=${clickHandler}\n            @keydown=${this.#keyDownHandler}\n            role='checkbox'\n            aria-checked=${this.#pauseOnUncaughtExceptions}\n            data-first-pause>\n          <label class='checkbox-label'>\n            <input type='checkbox' tabindex=-1 class=\"small\" ?checked=${this.#pauseOnUncaughtExceptions} @change=${this.#onPauseOnUncaughtExceptionsStateChanged.bind(this)} jslog=${VisualLogging.toggle('pause-uncaught').track({ change: true })}>\n            <span>${i18nString(UIStrings.pauseOnUncaughtExceptions)}</span>\n          </label>\n        </div>\n        <div class='pause-on-caught-exceptions'\n              tabindex='-1'\n              @click=${clickHandler}\n              @keydown=${this.#keyDownHandler}\n              role='checkbox'\n              aria-checked=${pauseOnCaughtIsChecked}\n              data-last-pause>\n            <label class='checkbox-label'>\n              <input data-pause-on-caught-checkbox type='checkbox' class=\"small\" tabindex=-1 ?checked=${pauseOnCaughtIsChecked} ?disabled=${pauseOnCaughtExceptionIsDisabled} @change=${this.#onPauseOnCaughtExceptionsStateChanged.bind(this)} jslog=${VisualLogging.toggle('pause-on-caught-exception').track({ change: true })}>\n              <span>${i18nString(UIStrings.pauseOnCaughtExceptions)}</span>\n            </label>\n        </div>\n        <div role=tree>\n          ${repeat(this.#breakpointGroups, group => group.url, (group, groupIndex) => html `${this.#renderBreakpointGroup(group, groupIndex)}`)}\n        </div>`;\n            // clang-format on\n            LitHtml.render(out, this.#shadow, { host: this });\n        });\n        // If no element is tabbable, set the pause-on-exceptions to be tabbable. This can happen\n        // if the previously focused element was removed.\n        await coordinator.write('BreakpointsView make pause-on-exceptions focusable', () => {\n            if (this.#shadow.querySelector('[tabindex=\"0\"]') === null) {\n                const element = this.#shadow.querySelector('[data-first-pause]');\n                element?.setAttribute('tabindex', '0');\n            }\n        });\n    }\n    async #keyDownHandler(event) {\n        if (!event.target || !(event.target instanceof HTMLElement)) {\n            return;\n        }\n        if (event.key === 'Home' || event.key === 'End') {\n            event.consume(true);\n            return this.#handleHomeOrEndKey(event.key);\n        }\n        if (Platform.KeyboardUtilities.keyIsArrowKey(event.key)) {\n            event.consume(true);\n            return this.#handleArrowKey(event.key, event.target);\n        }\n        if (Platform.KeyboardUtilities.isEnterOrSpaceKey(event)) {\n            const currentTarget = event.currentTarget;\n            await this.#setSelected(currentTarget);\n            const input = currentTarget.querySelector('input');\n            if (input) {\n                input.click();\n            }\n            event.consume();\n        }\n        return;\n    }\n    async #setSelected(element) {\n        if (!element) {\n            return;\n        }\n        void coordinator.write('BreakpointsView focus on selected element', () => {\n            const prevSelected = this.#shadow.querySelector('[tabindex=\"0\"]');\n            prevSelected?.setAttribute('tabindex', '-1');\n            element.setAttribute('tabindex', '0');\n            element.focus();\n        });\n    }\n    async #handleArrowKey(key, target) {\n        const setGroupExpandedState = (detailsElement, expanded) => {\n            if (expanded) {\n                return coordinator.write('BreakpointsView expand', () => {\n                    detailsElement.setAttribute('open', '');\n                });\n            }\n            return coordinator.write('BreakpointsView expand', () => {\n                detailsElement.removeAttribute('open');\n            });\n        };\n        const nextNode = await findNextNodeForKeyboardNavigation(target, key, setGroupExpandedState);\n        return this.#setSelected(nextNode);\n    }\n    async #handleHomeOrEndKey(key) {\n        if (key === 'Home') {\n            const pauseOnExceptionsNode = this.#shadow.querySelector('[data-first-pause]');\n            return this.#setSelected(pauseOnExceptionsNode);\n        }\n        if (key === 'End') {\n            const numGroups = this.#breakpointGroups.length;\n            if (numGroups === 0) {\n                const lastPauseOnExceptionsNode = this.#shadow.querySelector('[data-last-pause]');\n                return this.#setSelected(lastPauseOnExceptionsNode);\n            }\n            const lastGroupIndex = numGroups - 1;\n            const lastGroup = this.#breakpointGroups[lastGroupIndex];\n            if (lastGroup.expanded) {\n                const lastBreakpointItem = this.#shadow.querySelector('[data-last-group] > [data-last-breakpoint]');\n                return this.#setSelected(lastBreakpointItem);\n            }\n            const lastGroupSummaryElement = this.#shadow.querySelector('[data-last-group] > summary');\n            return this.#setSelected(lastGroupSummaryElement);\n        }\n        return;\n    }\n    #renderEditBreakpointButton(breakpointItem) {\n        const clickHandler = (event) => {\n            void this.#controller.breakpointEdited(breakpointItem, true /* editButtonClicked */);\n            event.consume();\n        };\n        const title = breakpointItem.type === \"LOGPOINT\" /* SDK.DebuggerModel.BreakpointType.LOGPOINT */ ?\n            i18nString(UIStrings.editLogpoint) :\n            i18nString(UIStrings.editCondition);\n        // clang-format off\n        return html `\n    <button data-edit-breakpoint @click=${clickHandler} title=${title} jslog=${VisualLogging.action('edit-breakpoint').track({ click: true })}>\n      <devtools-icon name=\"edit\"></devtools-icon>\n    </button>\n      `;\n        // clang-format on\n    }\n    #renderRemoveBreakpointButton(breakpointItems, tooltipText, action) {\n        const clickHandler = (event) => {\n            Host.userMetrics.actionTaken(action);\n            void this.#controller.breakpointsRemoved(breakpointItems);\n            event.consume();\n        };\n        // clang-format off\n        return html `\n    <button data-remove-breakpoint @click=${clickHandler} title=${tooltipText} aria-label=${tooltipText} jslog=${VisualLogging.action('remove-breakpoint').track({ click: true })}>\n      <devtools-icon name=\"bin\"></devtools-icon>\n    </button>\n      `;\n        // clang-format on\n    }\n    #onBreakpointGroupContextMenu(event, breakpointGroup) {\n        const { breakpointItems } = breakpointGroup;\n        const menu = new UI.ContextMenu.ContextMenu(event);\n        menu.defaultSection().appendItem(i18nString(UIStrings.removeAllBreakpointsInFile), () => {\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.BreakpointsInFileRemovedFromContextMenu);\n            void this.#controller.breakpointsRemoved(breakpointItems);\n        }, { jslogContext: 'remove-file-breakpoints' });\n        const otherGroups = this.#breakpointGroups.filter(group => group !== breakpointGroup);\n        menu.defaultSection().appendItem(i18nString(UIStrings.removeOtherBreakpoints), () => {\n            const breakpointItems = otherGroups.map(({ breakpointItems }) => breakpointItems).flat();\n            void this.#controller.breakpointsRemoved(breakpointItems);\n        }, { disabled: otherGroups.length === 0, jslogContext: 'remove-other-breakpoints' });\n        menu.defaultSection().appendItem(i18nString(UIStrings.removeAllBreakpoints), () => {\n            const breakpointItems = this.#breakpointGroups.map(({ breakpointItems }) => breakpointItems).flat();\n            void this.#controller.breakpointsRemoved(breakpointItems);\n        }, { jslogContext: 'remove-all-breakpoints' });\n        const notEnabledItems = breakpointItems.filter(breakpointItem => breakpointItem.status !== \"ENABLED\" /* BreakpointStatus.ENABLED */);\n        menu.debugSection().appendItem(i18nString(UIStrings.enableAllBreakpointsInFile), () => {\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.BreakpointsInFileEnabledDisabledFromContextMenu);\n            for (const breakpointItem of notEnabledItems) {\n                this.#controller.breakpointStateChanged(breakpointItem, true);\n            }\n        }, { disabled: notEnabledItems.length === 0, jslogContext: 'enable-file-breakpoints' });\n        const notDisabledItems = breakpointItems.filter(breakpointItem => breakpointItem.status !== \"DISABLED\" /* BreakpointStatus.DISABLED */);\n        menu.debugSection().appendItem(i18nString(UIStrings.disableAllBreakpointsInFile), () => {\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.BreakpointsInFileEnabledDisabledFromContextMenu);\n            for (const breakpointItem of notDisabledItems) {\n                this.#controller.breakpointStateChanged(breakpointItem, false);\n            }\n        }, { disabled: notDisabledItems.length === 0, jslogContext: 'disable-file-breakpoints' });\n        void menu.show();\n    }\n    #renderBreakpointGroup(group, groupIndex) {\n        const contextmenuHandler = (event) => {\n            this.#onBreakpointGroupContextMenu(event, group);\n            event.consume();\n        };\n        const toggleHandler = (event) => {\n            const htmlDetails = event.target;\n            group.expanded = htmlDetails.open;\n            void this.#controller.expandedStateChanged(group.url, group.expanded);\n        };\n        const clickHandler = async (event) => {\n            const selected = event.currentTarget;\n            await this.#setSelected(selected);\n            // Record the metric for expanding/collapsing in the click handler,\n            // as we only then get the number of expand/collapse actions that were\n            // initiated by the user.\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.BreakpointGroupExpandedStateChanged);\n            event.consume();\n        };\n        // clang-format off\n        return html `\n      <details class=${classMap({ active: this.#breakpointsActive })}\n               ?data-first-group=${groupIndex === 0}\n               ?data-last-group=${groupIndex === this.#breakpointGroups.length - 1}\n               role=group\n               aria-label='${group.name}'\n               aria-description='${group.url}'\n               ?open=${live(group.expanded)}\n               @toggle=${toggleHandler}>\n          <summary @contextmenu=${contextmenuHandler}\n                   tabindex='-1'\n                   @keydown=${this.#keyDownHandler}\n                   @click=${clickHandler}>\n            <span class='group-header' aria-hidden=true><span class='group-icon-or-disable'>${this.#renderFileIcon()}${this.#renderGroupCheckbox(group)}</span><span class='group-header-title' title='${group.url}'>${group.name}<span class='group-header-differentiator'>${this.#urlToDifferentiatingPath.get(group.url)}</span></span></span>\n            <span class='group-hover-actions'>\n              ${this.#renderRemoveBreakpointButton(group.breakpointItems, i18nString(UIStrings.removeAllBreakpointsInFile), Host.UserMetrics.Action.BreakpointsInFileRemovedFromRemoveButton)}\n            </span>\n          </summary>\n        ${repeat(group.breakpointItems, item => item.id, (item, breakpointItemIndex) => this.#renderBreakpointEntry(item, group.editable, groupIndex, breakpointItemIndex))}\n      </details>\n      `;\n        // clang-format on\n    }\n    #renderGroupCheckbox(group) {\n        const groupCheckboxToggled = (e) => {\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.BreakpointsInFileCheckboxToggled);\n            const element = e.target;\n            const updatedStatus = element.checked ? \"ENABLED\" /* BreakpointStatus.ENABLED */ : \"DISABLED\" /* BreakpointStatus.DISABLED */;\n            const itemsToUpdate = group.breakpointItems.filter(item => item.status !== updatedStatus);\n            itemsToUpdate.forEach(item => {\n                this.#controller.breakpointStateChanged(item, element.checked);\n            });\n            e.consume();\n        };\n        const checked = group.breakpointItems.some(item => item.status === \"ENABLED\" /* BreakpointStatus.ENABLED */);\n        return html `\n      <input class='group-checkbox small' type='checkbox'\n            aria-label=''\n            .checked=${checked}\n            @change=${groupCheckboxToggled}\n            tabindex=-1\n            jslog=${VisualLogging.toggle('breakpoint-group').track({\n            change: true,\n        })}>\n    `;\n    }\n    #renderFileIcon() {\n        return html `<devtools-icon name=\"file-script\"></devtools-icon>`;\n    }\n    #onBreakpointEntryContextMenu(event, breakpointItem, editable) {\n        const items = this.#breakpointGroups.map(({ breakpointItems }) => breakpointItems).flat();\n        const otherItems = items.filter(item => item !== breakpointItem);\n        const menu = new UI.ContextMenu.ContextMenu(event);\n        const editBreakpointText = breakpointItem.type === \"LOGPOINT\" /* SDK.DebuggerModel.BreakpointType.LOGPOINT */ ?\n            i18nString(UIStrings.editLogpoint) :\n            i18nString(UIStrings.editCondition);\n        menu.revealSection().appendItem(i18nString(UIStrings.revealLocation), () => {\n            void this.#controller.jumpToSource(breakpointItem);\n        }, { jslogContext: 'jump-to-breakpoint' });\n        menu.editSection().appendItem(editBreakpointText, () => {\n            void this.#controller.breakpointEdited(breakpointItem, false /* editButtonClicked */);\n        }, { disabled: !editable, jslogContext: 'edit-breakpoint' });\n        menu.defaultSection().appendItem(i18nString(UIStrings.enableAllBreakpoints), items.forEach.bind(items, item => this.#controller.breakpointStateChanged(item, true)), {\n            disabled: items.every(item => item.status === \"ENABLED\" /* BreakpointStatus.ENABLED */),\n            jslogContext: 'enable-all-breakpoints',\n        });\n        menu.defaultSection().appendItem(i18nString(UIStrings.disableAllBreakpoints), items.forEach.bind(items, item => this.#controller.breakpointStateChanged(item, false)), {\n            disabled: items.every(item => item.status === \"DISABLED\" /* BreakpointStatus.DISABLED */),\n            jslogContext: 'disable-all-breakpoints',\n        });\n        menu.footerSection().appendItem(i18nString(UIStrings.removeBreakpoint), () => {\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.BreakpointRemovedFromContextMenu);\n            void this.#controller.breakpointsRemoved([breakpointItem]);\n        }, { jslogContext: 'remove-breakpoint' });\n        menu.footerSection().appendItem(i18nString(UIStrings.removeOtherBreakpoints), () => {\n            void this.#controller.breakpointsRemoved(otherItems);\n        }, { disabled: otherItems.length === 0, jslogContext: 'remove-other-breakpoints' });\n        menu.footerSection().appendItem(i18nString(UIStrings.removeAllBreakpoints), () => {\n            const breakpointItems = this.#breakpointGroups.map(({ breakpointItems }) => breakpointItems).flat();\n            void this.#controller.breakpointsRemoved(breakpointItems);\n        }, { jslogContext: 'remove-all-breakpoints' });\n        void menu.show();\n    }\n    #renderBreakpointEntry(breakpointItem, editable, groupIndex, breakpointItemIndex) {\n        const codeSnippetClickHandler = (event) => {\n            void this.#controller.jumpToSource(breakpointItem);\n            event.consume();\n        };\n        const breakpointItemClickHandler = async (event) => {\n            const target = event.currentTarget;\n            await this.#setSelected(target);\n            event.consume();\n        };\n        const contextmenuHandler = (event) => {\n            this.#onBreakpointEntryContextMenu(event, breakpointItem, editable);\n            event.consume();\n        };\n        const breakpointItemDescription = this.#getBreakpointItemDescription(breakpointItem);\n        const codeSnippet = Platform.StringUtilities.trimEndWithMaxLength(breakpointItem.codeSnippet, MAX_SNIPPET_LENGTH);\n        const codeSnippetTooltip = this.#getCodeSnippetTooltip(breakpointItem.type, breakpointItem.hoverText);\n        const itemsInGroup = this.#breakpointGroups[groupIndex].breakpointItems;\n        // clang-format off\n        return html `\n    <div class=${classMap({\n            'breakpoint-item': true,\n            hit: breakpointItem.isHit,\n            'conditional-breakpoint': breakpointItem.type === \"CONDITIONAL_BREAKPOINT\" /* SDK.DebuggerModel.BreakpointType.CONDITIONAL_BREAKPOINT */,\n            logpoint: breakpointItem.type === \"LOGPOINT\" /* SDK.DebuggerModel.BreakpointType.LOGPOINT */,\n        })}\n         ?data-first-breakpoint=${breakpointItemIndex === 0}\n         ?data-last-breakpoint=${breakpointItemIndex === itemsInGroup.length - 1}\n         aria-label=${breakpointItemDescription}\n         role=treeitem\n         tabindex='-1'\n         @contextmenu=${contextmenuHandler}\n         @click=${breakpointItemClickHandler}\n         @keydown=${this.#keyDownHandler}>\n      <label class='checkbox-label'>\n        <span class='type-indicator'></span>\n        <input type='checkbox'\n              aria-label=${breakpointItem.location}\n              class='small'\n              ?indeterminate=${breakpointItem.status === \"INDETERMINATE\" /* BreakpointStatus.INDETERMINATE */}\n              .checked=${breakpointItem.status === \"ENABLED\" /* BreakpointStatus.ENABLED */}\n              @change=${(e) => this.#onCheckboxToggled(e, breakpointItem)}\n              tabindex=-1\n              jslog=${VisualLogging.toggle('breakpoint').track({ change: true })}>\n      </label>\n      <span class='code-snippet' @click=${codeSnippetClickHandler} title=${ifDefined(codeSnippetTooltip)} jslog=${VisualLogging.action('sources.jump-to-breakpoint').track({ click: true })}>${codeSnippet}</span>\n      <span class='breakpoint-item-location-or-actions'>\n        ${editable ? this.#renderEditBreakpointButton(breakpointItem) : LitHtml.nothing}\n        ${this.#renderRemoveBreakpointButton([breakpointItem], i18nString(UIStrings.removeBreakpoint), Host.UserMetrics.Action.BreakpointRemovedFromRemoveButton)}\n        <span class='location'>${breakpointItem.location}</span>\n      </span>\n    </div>\n    `;\n        // clang-format on\n    }\n    #getCodeSnippetTooltip(type, hoverText) {\n        switch (type) {\n            case \"REGULAR_BREAKPOINT\" /* SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT */:\n                return undefined;\n            case \"CONDITIONAL_BREAKPOINT\" /* SDK.DebuggerModel.BreakpointType.CONDITIONAL_BREAKPOINT */:\n                assertNotNullOrUndefined(hoverText);\n                return i18nString(UIStrings.conditionCode, { PH1: hoverText });\n            case \"LOGPOINT\" /* SDK.DebuggerModel.BreakpointType.LOGPOINT */:\n                assertNotNullOrUndefined(hoverText);\n                return i18nString(UIStrings.logpointCode, { PH1: hoverText });\n        }\n    }\n    #getBreakpointItemDescription(breakpointItem) {\n        let checkboxDescription;\n        switch (breakpointItem.status) {\n            case \"ENABLED\" /* BreakpointStatus.ENABLED */:\n                checkboxDescription = i18nString(UIStrings.checked);\n                break;\n            case \"DISABLED\" /* BreakpointStatus.DISABLED */:\n                checkboxDescription = i18nString(UIStrings.unchecked);\n                break;\n            case \"INDETERMINATE\" /* BreakpointStatus.INDETERMINATE */:\n                checkboxDescription = i18nString(UIStrings.indeterminate);\n                break;\n        }\n        if (!breakpointItem.isHit) {\n            return checkboxDescription;\n        }\n        return i18nString(UIStrings.breakpointHit, { PH1: checkboxDescription });\n    }\n    #onCheckboxToggled(e, item) {\n        const element = e.target;\n        this.#controller.breakpointStateChanged(item, element.checked);\n    }\n    #onPauseOnCaughtExceptionsStateChanged(e) {\n        const { checked } = e.target;\n        this.#controller.setPauseOnCaughtExceptions(checked);\n    }\n    #onPauseOnUncaughtExceptionsStateChanged(e) {\n        const { checked } = e.target;\n        if (!this.#independentPauseToggles) {\n            const pauseOnCaughtCheckbox = this.#shadow.querySelector('[data-pause-on-caught-checkbox]');\n            assertNotNullOrUndefined(pauseOnCaughtCheckbox);\n            if (!checked && pauseOnCaughtCheckbox.checked) {\n                // If we can only pause on caught exceptions if we pause on uncaught exceptions, make sure to\n                // uncheck the pause on caught exception checkbox.\n                pauseOnCaughtCheckbox.click();\n            }\n            void coordinator.write('BreakpointsView update pause-on-uncaught-exception', () => {\n                // Disable/enable the pause on caught exception checkbox depending on whether\n                // or not we are pausing on uncaught exceptions.\n                if (checked) {\n                    pauseOnCaughtCheckbox.disabled = false;\n                }\n                else {\n                    pauseOnCaughtCheckbox.disabled = true;\n                }\n            });\n        }\n        this.#controller.setPauseOnUncaughtExceptions(checked);\n    }\n}\ncustomElements.define('devtools-breakpoint-view', BreakpointsView);\n//# sourceMappingURL=BreakpointsView.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2022 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  flex-grow: 1;\n  padding: 6px;\n}\n\n.row {\n  display: flex;\n  flex-direction: row;\n  color: var(--sys-color-token-property-special);\n  font-family: var(--monospace-font-family);\n  font-size: var(--monospace-font-size);\n  align-items: center;\n  line-height: 24px;\n}\n\n.row devtools-button {\n  line-height: 1;\n  margin-left: 0.1em;\n}\n\n.row devtools-button:nth-of-type(1) {\n  margin-left: 0.8em;\n}\n\n.padded {\n  margin-left: 2em;\n}\n\n.separator {\n  margin-right: 0.5em;\n  color: var(--sys-color-on-surface);\n}\n\n.editable {\n  cursor: text;\n  color: var(--sys-color-on-surface);\n  overflow-wrap: break-word;\n  min-height: 18px;\n  line-height: 18px;\n  min-width: 0.5em;\n  background: transparent;\n  border: none;\n  outline: none;\n  display: inline-block;\n}\n\n.editable.red {\n  color: var(--sys-color-token-property-special);\n}\n\n.editable:hover,\n.editable:focus {\n  border: 1px solid var(--sys-color-neutral-outline);\n  border-radius: 2px;\n}\n\n.row .inline-button {\n  opacity: 0%;\n  visibility: hidden;\n  transition: opacity 200ms;\n}\n\n.row:focus-within .inline-button:not([hidden]),\n.row:hover .inline-button:not([hidden]) {\n  opacity: 100%;\n  visibility: visible;\n}\n\n.center-wrapper {\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.centered {\n  margin: 1em;\n  max-width: 300px;\n  text-align: center;\n}\n\n.error-header {\n  font-weight: bold;\n  margin-bottom: 1em;\n}\n\n.error-body {\n  line-height: 1.5em;\n  color: var(--sys-color-token-subtle);\n}\n\n.add-block {\n  margin-top: 3px;\n}\n\n.header-name,\n.header-value {\n  min-width: min-content;\n}\n\n.link {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n  outline-offset: 2px;\n  padding: 0;\n}\n\n.learn-more-row {\n  line-height: 24px;\n}\n\n/*# sourceURL=HeadersView.css */\n`);\n\nexport default styles;\n","// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Persistence from '../../../models/persistence/persistence.js';\nimport * as Workspace from '../../../models/workspace/workspace.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport HeadersViewStyles from './HeadersView.css.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description The title of a button that adds a field to input a header in the editor form.\n     */\n    addHeader: 'Add a header',\n    /**\n     *@description The title of a button that removes a field to input a header in the editor form.\n     */\n    removeHeader: 'Remove this header',\n    /**\n     *@description The title of a button that removes a section for defining header overrides in the editor form.\n     */\n    removeBlock: 'Remove this \\'`ApplyTo`\\'-section',\n    /**\n     *@description Error message for files which cannot not be parsed.\n     *@example {.headers} PH1\n     */\n    errorWhenParsing: 'Error when parsing \\'\\'{PH1}\\'\\'.',\n    /**\n     *@description Explainer for files which cannot be parsed.\n     *@example {.headers} PH1\n     */\n    parsingErrorExplainer: 'This is most likely due to a syntax error in \\'\\'{PH1}\\'\\'. Try opening this file in an external editor to fix the error or delete the file and re-create the override.',\n    /**\n     *@description Button text for a button which adds an additional header override rule.\n     */\n    addOverrideRule: 'Add override rule',\n    /**\n     *@description Text which is a hyperlink to more documentation\n     */\n    learnMore: 'Learn more',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/components/HeadersView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst plusIconUrl = new URL('../../../Images/plus.svg', import.meta.url).toString();\nconst trashIconUrl = new URL('../../../Images/bin.svg', import.meta.url).toString();\nconst DEFAULT_HEADER_VALUE = 'header value';\nconst getDefaultHeaderName = (i) => `header-name-${i}`;\nexport class HeadersView extends UI.View.SimpleView {\n    #headersViewComponent = new HeadersViewComponent();\n    #uiSourceCode;\n    constructor(uiSourceCode) {\n        super(i18n.i18n.lockedString('HeadersView'));\n        this.element.setAttribute('jslog', `${VisualLogging.pane('headers-view')}`);\n        this.#uiSourceCode = uiSourceCode;\n        this.#uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this.#onWorkingCopyChanged, this);\n        this.#uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this.#onWorkingCopyCommitted, this);\n        this.element.appendChild(this.#headersViewComponent);\n        void this.#setInitialData();\n    }\n    async #setInitialData() {\n        const content = await this.#uiSourceCode.requestContent();\n        this.#setComponentData(content.content || '');\n    }\n    #setComponentData(content) {\n        let parsingError = false;\n        let headerOverrides = [];\n        content = content || '[]';\n        try {\n            headerOverrides = JSON.parse(content);\n            if (!headerOverrides.every(Persistence.NetworkPersistenceManager.isHeaderOverride)) {\n                throw 'Type mismatch after parsing';\n            }\n        }\n        catch (e) {\n            console.error('Failed to parse', this.#uiSourceCode.url(), 'for locally overriding headers.');\n            parsingError = true;\n        }\n        this.#headersViewComponent.data = {\n            headerOverrides,\n            uiSourceCode: this.#uiSourceCode,\n            parsingError,\n        };\n    }\n    #onWorkingCopyChanged() {\n        this.#setComponentData(this.#uiSourceCode.workingCopy());\n    }\n    #onWorkingCopyCommitted() {\n        this.#setComponentData(this.#uiSourceCode.workingCopy());\n    }\n    getComponent() {\n        return this.#headersViewComponent;\n    }\n    dispose() {\n        this.#uiSourceCode.removeEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this.#onWorkingCopyChanged, this);\n        this.#uiSourceCode.removeEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this.#onWorkingCopyCommitted, this);\n    }\n}\nexport class HeadersViewComponent extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #boundRender = this.#render.bind(this);\n    #headerOverrides = [];\n    #uiSourceCode = null;\n    #parsingError = false;\n    #focusElement = null;\n    #textOnFocusIn = '';\n    constructor() {\n        super();\n        this.#shadow.addEventListener('focusin', this.#onFocusIn.bind(this));\n        this.#shadow.addEventListener('focusout', this.#onFocusOut.bind(this));\n        this.#shadow.addEventListener('click', this.#onClick.bind(this));\n        this.#shadow.addEventListener('input', this.#onInput.bind(this));\n        this.#shadow.addEventListener('keydown', this.#onKeyDown.bind(this));\n        this.#shadow.addEventListener('paste', this.#onPaste.bind(this));\n        this.addEventListener('contextmenu', this.#onContextMenu.bind(this));\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [HeadersViewStyles];\n    }\n    set data(data) {\n        this.#headerOverrides = data.headerOverrides;\n        this.#uiSourceCode = data.uiSourceCode;\n        this.#parsingError = data.parsingError;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    // 'Enter' key should not create a new line in the contenteditable. Focus\n    // on the next contenteditable instead.\n    #onKeyDown(event) {\n        const target = event.target;\n        if (!target.matches('.editable')) {\n            return;\n        }\n        const keyboardEvent = event;\n        if (target.matches('.header-name') && target.innerText === '' &&\n            (keyboardEvent.key === 'Enter' || keyboardEvent.key === 'Tab')) {\n            // onFocusOut will remove the header -> blur instead of focusing on next editable\n            event.preventDefault();\n            target.blur();\n        }\n        else if (keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n            target.blur();\n            this.#focusNext(target);\n        }\n        else if (keyboardEvent.key === 'Escape') {\n            event.consume();\n            target.innerText = this.#textOnFocusIn;\n            target.blur();\n            this.#onChange(target);\n        }\n    }\n    #focusNext(target) {\n        const elements = Array.from(this.#shadow.querySelectorAll('.editable'));\n        const idx = elements.indexOf(target);\n        if (idx !== -1 && idx + 1 < elements.length) {\n            elements[idx + 1].focus();\n        }\n    }\n    #selectAllText(target) {\n        const selection = window.getSelection();\n        const range = document.createRange();\n        range.selectNodeContents(target);\n        selection?.removeAllRanges();\n        selection?.addRange(range);\n    }\n    #onFocusIn(event) {\n        const target = event.target;\n        if (target.matches('.editable')) {\n            this.#selectAllText(target);\n            this.#textOnFocusIn = target.innerText;\n        }\n    }\n    #onFocusOut(event) {\n        const target = event.target;\n        if (target.innerText === '') {\n            const rowElement = target.closest('.row');\n            const blockIndex = Number(rowElement.dataset.blockIndex);\n            const headerIndex = Number(rowElement.dataset.headerIndex);\n            if (target.matches('.apply-to')) {\n                target.innerText = '*';\n                this.#headerOverrides[blockIndex].applyTo = '*';\n                this.#onHeadersChanged();\n            }\n            else if (target.matches('.header-name')) {\n                this.#removeHeader(blockIndex, headerIndex);\n            }\n        }\n        // clear selection\n        const selection = window.getSelection();\n        selection?.removeAllRanges();\n        this.#uiSourceCode?.commitWorkingCopy();\n    }\n    #onContextMenu(event) {\n        if (!this.#uiSourceCode) {\n            return;\n        }\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        contextMenu.appendApplicableItems(this.#uiSourceCode);\n        void contextMenu.show();\n    }\n    #generateNextHeaderName(headers) {\n        const takenNames = new Set(headers.map(header => header.name));\n        let idx = 1;\n        while (takenNames.has(getDefaultHeaderName(idx))) {\n            idx++;\n        }\n        return getDefaultHeaderName(idx);\n    }\n    #onClick(event) {\n        const target = event.target;\n        const rowElement = target.closest('.row');\n        const blockIndex = Number(rowElement?.dataset.blockIndex || 0);\n        const headerIndex = Number(rowElement?.dataset.headerIndex || 0);\n        if (target.matches('.add-header')) {\n            this.#headerOverrides[blockIndex].headers.splice(headerIndex + 1, 0, { name: this.#generateNextHeaderName(this.#headerOverrides[blockIndex].headers), value: DEFAULT_HEADER_VALUE });\n            this.#focusElement = { blockIndex, headerIndex: headerIndex + 1 };\n            this.#onHeadersChanged();\n        }\n        else if (target.matches('.remove-header')) {\n            this.#removeHeader(blockIndex, headerIndex);\n        }\n        else if (target.matches('.add-block')) {\n            this.#headerOverrides.push({ applyTo: '*', headers: [{ name: getDefaultHeaderName(1), value: DEFAULT_HEADER_VALUE }] });\n            this.#focusElement = { blockIndex: this.#headerOverrides.length - 1 };\n            this.#onHeadersChanged();\n        }\n        else if (target.matches('.remove-block')) {\n            this.#headerOverrides.splice(blockIndex, 1);\n            this.#onHeadersChanged();\n        }\n    }\n    #isDeletable(blockIndex, headerIndex) {\n        const isOnlyDefaultHeader = headerIndex === 0 && this.#headerOverrides[blockIndex].headers.length === 1 &&\n            this.#headerOverrides[blockIndex].headers[headerIndex].name === getDefaultHeaderName(1) &&\n            this.#headerOverrides[blockIndex].headers[headerIndex].value === DEFAULT_HEADER_VALUE;\n        return !isOnlyDefaultHeader;\n    }\n    #removeHeader(blockIndex, headerIndex) {\n        this.#headerOverrides[blockIndex].headers.splice(headerIndex, 1);\n        if (this.#headerOverrides[blockIndex].headers.length === 0) {\n            this.#headerOverrides[blockIndex].headers.push({ name: this.#generateNextHeaderName(this.#headerOverrides[blockIndex].headers), value: DEFAULT_HEADER_VALUE });\n        }\n        this.#onHeadersChanged();\n    }\n    #onInput(event) {\n        this.#onChange(event.target);\n    }\n    #onChange(target) {\n        const rowElement = target.closest('.row');\n        const blockIndex = Number(rowElement.dataset.blockIndex);\n        const headerIndex = Number(rowElement.dataset.headerIndex);\n        if (target.matches('.header-name')) {\n            this.#headerOverrides[blockIndex].headers[headerIndex].name = target.innerText;\n            this.#onHeadersChanged();\n        }\n        if (target.matches('.header-value')) {\n            this.#headerOverrides[blockIndex].headers[headerIndex].value = target.innerText;\n            this.#onHeadersChanged();\n        }\n        if (target.matches('.apply-to')) {\n            this.#headerOverrides[blockIndex].applyTo = target.innerText;\n            this.#onHeadersChanged();\n        }\n    }\n    #onHeadersChanged() {\n        this.#uiSourceCode?.setWorkingCopy(JSON.stringify(this.#headerOverrides, null, 2));\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.HeaderOverrideHeadersFileEdited);\n    }\n    #onPaste(event) {\n        const clipboardEvent = event;\n        event.preventDefault();\n        if (clipboardEvent.clipboardData) {\n            const text = clipboardEvent.clipboardData.getData('text/plain');\n            const range = this.#shadow.getSelection()?.getRangeAt(0);\n            if (!range) {\n                return;\n            }\n            range.deleteContents();\n            const textNode = document.createTextNode(text);\n            range.insertNode(textNode);\n            range.selectNodeContents(textNode);\n            range.collapse(false);\n            const selection = window.getSelection();\n            selection?.removeAllRanges();\n            selection?.addRange(range);\n            this.#onChange(event.target);\n        }\n    }\n    #render() {\n        if (!ComponentHelpers.ScheduledRender.isScheduledRender(this)) {\n            throw new Error('HeadersView render was not scheduled');\n        }\n        if (this.#parsingError) {\n            const fileName = this.#uiSourceCode?.name() || '.headers';\n            // clang-format off\n            LitHtml.render(html `\n        <div class=\"center-wrapper\">\n          <div class=\"centered\">\n            <div class=\"error-header\">${i18nString(UIStrings.errorWhenParsing, { PH1: fileName })}</div>\n            <div class=\"error-body\">${i18nString(UIStrings.parsingErrorExplainer, { PH1: fileName })}</div>\n          </div>\n        </div>\n      `, this.#shadow, { host: this });\n            // clang-format on\n            return;\n        }\n        // clang-format off\n        LitHtml.render(html `\n      ${this.#headerOverrides.map((headerOverride, blockIndex) => html `\n          ${this.#renderApplyToRow(headerOverride.applyTo, blockIndex)}\n          ${headerOverride.headers.map((header, headerIndex) => html `\n              ${this.#renderHeaderRow(header, blockIndex, headerIndex)}\n            `)}\n        `)}\n      <devtools-button\n          .variant=${\"outlined\" /* Buttons.Button.Variant.OUTLINED */}\n          .jslogContext=${'headers-view.add-override-rule'}\n          class=\"add-block\">\n        ${i18nString(UIStrings.addOverrideRule)}\n      </devtools-button>\n      <div class=\"learn-more-row\">\n        <x-link\n            href=\"https://goo.gle/devtools-override\"\n            class=\"link\"\n            jslog=${VisualLogging.link('learn-more').track({ click: true })}>${i18nString(UIStrings.learnMore)}</x-link>\n      </div>\n    `, this.#shadow, { host: this });\n        // clang-format on\n        if (this.#focusElement) {\n            let focusElement = null;\n            if (this.#focusElement.headerIndex) {\n                focusElement = this.#shadow.querySelector(`[data-block-index=\"${this.#focusElement.blockIndex}\"][data-header-index=\"${this.#focusElement.headerIndex}\"] .header-name`);\n            }\n            else {\n                focusElement = this.#shadow.querySelector(`[data-block-index=\"${this.#focusElement.blockIndex}\"] .apply-to`);\n            }\n            if (focusElement) {\n                focusElement.focus();\n            }\n            this.#focusElement = null;\n        }\n    }\n    #renderApplyToRow(pattern, blockIndex) {\n        // clang-format off\n        return html `\n      <div class=\"row\" data-block-index=${blockIndex}\n           jslog=${VisualLogging.treeItem(pattern === '*' ? pattern : undefined)}>\n        <div>${i18n.i18n.lockedString('Apply to')}</div>\n        <div class=\"separator\">:</div>\n        ${this.#renderEditable(pattern, 'apply-to')}\n        <devtools-button\n        title=${i18nString(UIStrings.removeBlock)}\n        .size=${\"SMALL\" /* Buttons.Button.Size.SMALL */}\n        .iconUrl=${trashIconUrl}\n        .iconWidth=${'14px'}\n        .iconHeight=${'14px'}\n        .variant=${\"icon\" /* Buttons.Button.Variant.ICON */}\n        .jslogContext=${'headers-view.remove-apply-to-section'}\n        class=\"remove-block inline-button\"\n      ></devtools-button>\n      </div>\n    `;\n        // clang-format on\n    }\n    #renderHeaderRow(header, blockIndex, headerIndex) {\n        // clang-format off\n        return html `\n      <div class=\"row padded\" data-block-index=${blockIndex} data-header-index=${headerIndex}\n           jslog=${VisualLogging.treeItem(header.name).parent('headers-editor-row-parent')}>\n        ${this.#renderEditable(header.name, 'header-name red', true)}\n        <div class=\"separator\">:</div>\n        ${this.#renderEditable(header.value, 'header-value')}\n        <devtools-button\n          title=${i18nString(UIStrings.addHeader)}\n          .size=${\"SMALL\" /* Buttons.Button.Size.SMALL */}\n          .iconUrl=${plusIconUrl}\n          .variant=${\"icon\" /* Buttons.Button.Variant.ICON */}\n          .jslogContext=${'headers-view.add-header'}\n          class=\"add-header inline-button\"\n        ></devtools-button>\n        <devtools-button\n          title=${i18nString(UIStrings.removeHeader)}\n          .size=${\"SMALL\" /* Buttons.Button.Size.SMALL */}\n          .iconUrl=${trashIconUrl}\n          .variant=${\"icon\" /* Buttons.Button.Variant.ICON */}\n          ?hidden=${!this.#isDeletable(blockIndex, headerIndex)}\n          .jslogContext=${'headers-view.remove-header'}\n          class=\"remove-header inline-button\"\n        ></devtools-button>\n      </div>\n    `;\n        // clang-format on\n    }\n    #renderEditable(value, className, isKey) {\n        // This uses LitHtml's `live`-directive, so that when checking whether to\n        // update during re-render, `value` is compared against the actual live DOM\n        // value of the contenteditable element and not the potentially outdated\n        // value from the previous render.\n        // clang-format off\n        const jslog = isKey ? VisualLogging.key() : VisualLogging.value();\n        return html `<span jslog=${jslog.track({ change: true, keydown: 'Enter|Escape|Tab', click: true })}\n                              contenteditable=\"true\"\n                              class=\"editable ${className}\"\n                              tabindex=\"0\"\n                              .innerText=${LitHtml.Directives.live(value)}></span>`;\n        // clang-format on\n    }\n}\nVisualLogging.registerParentProvider('headers-editor-row-parent', (e) => {\n    while (e.previousElementSibling?.classList?.contains('padded')) {\n        e = e.previousElementSibling;\n    }\n    return e.previousElementSibling || undefined;\n});\ncustomElements.define('devtools-sources-headers-view', HeadersViewComponent);\n//# sourceMappingURL=HeadersView.js.map"],"names":["styles","SUMMARY_ELEMENT_SELECTOR","domNodeIsTree","domNode","domNodeIsBreakpointItemNode","domNodeIsPauseOnExceptionsNode","domNodeIsSummaryNode","groupIsExpanded","detailsElement","getFirstBreakpointItemInGroup","getLastBreakpointItemInGroup","getNextGroupsSummaryNode","nextDetailsElement","getNextDetailsElement","getCurrentSummaryNode","getPreviousDetailsElement","previousDetailsElement","findNextNodeForPauseOnExceptions","target","key","nextNode","previousElementSibling","nextElementSibling","findNextNodeForKeyboardNavigation","setGroupExpandedStateCallback","nextSibling","pauseOnExceptions","previousSibling","findFirstDifferingSegmentIndex","splitUrls","firstUrl","firstDifferingIndex","segmentIndex","segment","urlIndex","url","findDifferentiatingPath","allUrls","startIndex","differentiatingPath","remainingUrlsToDifferentiate","other","populateDifferentiatingPathMap","urls","urlToDifferentiator","splitReversedUrls","paths","Common.ParsedURL.ParsedURL","assertNotNullOrUndefined","i","splitUrl","reversed","getDifferentiatingPathMap","titleInfos","nameToUrl","urlToDifferentiatingPath","name","urlsGroupedByName","html","ifDefined","repeat","classMap","live","LitHtml","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","coordinator","Coordinator.RenderCoordinator.RenderCoordinator","MAX_SNIPPET_LENGTH","breakpointsViewInstance","breakpointsViewControllerInstance","BreakpointsSidebarController","#breakpointManager","#breakpointItemToLocationMap","#breakpointsActiveSetting","#pauseOnUncaughtExceptionSetting","#pauseOnCaughtExceptionSetting","#collapsedFilesSettings","#collapsedFiles","#outstandingBreakpointEdited","#updateScheduled","#updateRunning","breakpointManager","settings","Common.Settings.Settings","Breakpoints.BreakpointManager.Events","#onBreakpointAdded","#onBreakpointRemoved","forceNew","Breakpoints.BreakpointManager.BreakpointManager","SDK.TargetManager.TargetManager","SDK.Target.Type","_object","breakpoint","edited","Host.userMetrics","Host.UserMetrics.Action","breakpointItem","checked","#getLocationsForBreakpointItem","value","editButtonClicked","locations","location","locationCandidate","Common.Revealer.reveal","breakpointItems","expanded","#saveSettings","uiLocations","uiLocation","uiLocationCandidate","data","BreakpointsView","breakpointsActive","independentPauseToggles","pauseOnUncaughtExceptions","pauseOnCaughtExceptions","breakpointLocations","#getBreakpointLocations","locationsGroupedById","#groupBreakpointLocationsById","locationIdsByLineId","#getLocationIdsByLineId","content","selectedUILocation","#getContent","#getHitUILocation","scriptIdToGroup","idx","fstLocation","sourceURL","scriptId","isHit","showColumn","locationText","contentData","codeSnippet","TextUtils.WasmDisassembly.WasmDisassembly","status","#getBreakpointState","type","hoverText","#getBreakpointTypeAndDetails","item","group","editable","event","condition","details","UI.Context.Context","SDK.DebuggerModel.DebuggerPausedDetails","Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding","breakpointLocation","Workspace.Workspace.projectTypes","item1","item2","result","lastBreakpoint","lastLocation","map","Platform.MapUtilities.Multimap","arr","id","hasEnabled","hasDisabled","uiSourceCode","TextUtils.ContentData.ContentData","LegacyWrapper.LegacyWrapper.WrappableComponent","#controller","LegacyWrapper.LegacyWrapper.legacyWrapper","UI.Widget.Widget","VisualLogging.section","#shadow","#pauseOnUncaughtExceptions","#pauseOnCaughtExceptions","#independentPauseToggles","#breakpointsActive","#breakpointGroups","#urlToDifferentiatingPath","Input.checkboxStyles","breakpointsViewStyles","clickHandler","currentTarget","#setSelected","pauseOnCaughtIsChecked","pauseOnCaughtExceptionIsDisabled","out","#keyDownHandler","#onPauseOnUncaughtExceptionsStateChanged","VisualLogging.toggle","#onPauseOnCaughtExceptionsStateChanged","groupIndex","#renderBreakpointGroup","LitHtml.render","#handleHomeOrEndKey","Platform.KeyboardUtilities.keyIsArrowKey","#handleArrowKey","Platform.KeyboardUtilities.isEnterOrSpaceKey","input","element","pauseOnExceptionsNode","numGroups","lastPauseOnExceptionsNode","lastGroupIndex","lastBreakpointItem","lastGroupSummaryElement","#renderEditBreakpointButton","title","VisualLogging.action","#renderRemoveBreakpointButton","tooltipText","action","#onBreakpointGroupContextMenu","breakpointGroup","menu","UI.ContextMenu.ContextMenu","otherGroups","notEnabledItems","notDisabledItems","contextmenuHandler","toggleHandler","htmlDetails","selected","#renderFileIcon","#renderGroupCheckbox","breakpointItemIndex","#renderBreakpointEntry","groupCheckboxToggled","e","updatedStatus","#onBreakpointEntryContextMenu","items","otherItems","editBreakpointText","codeSnippetClickHandler","breakpointItemClickHandler","breakpointItemDescription","#getBreakpointItemDescription","Platform.StringUtilities.trimEndWithMaxLength","codeSnippetTooltip","#getCodeSnippetTooltip","itemsInGroup","#onCheckboxToggled","LitHtml.nothing","checkboxDescription","pauseOnCaughtCheckbox","plusIconUrl","trashIconUrl","DEFAULT_HEADER_VALUE","getDefaultHeaderName","HeadersView","UI.View.SimpleView","#headersViewComponent","HeadersViewComponent","#uiSourceCode","i18n.i18n.lockedString","VisualLogging.pane","Workspace.UISourceCode.Events","#onWorkingCopyChanged","#onWorkingCopyCommitted","#setInitialData","#setComponentData","parsingError","headerOverrides","Persistence.NetworkPersistenceManager.isHeaderOverride","#boundRender","#render","#headerOverrides","#parsingError","#focusElement","#textOnFocusIn","#onFocusIn","#onFocusOut","#onClick","#onInput","#onKeyDown","#onPaste","#onContextMenu","HeadersViewStyles","ComponentHelpers.ScheduledRender.scheduleRender","keyboardEvent","#focusNext","#onChange","elements","#selectAllText","selection","range","rowElement","blockIndex","headerIndex","#onHeadersChanged","#removeHeader","contextMenu","#generateNextHeaderName","headers","takenNames","header","#isDeletable","clipboardEvent","text","textNode","ComponentHelpers.ScheduledRender.isScheduledRender","fileName","headerOverride","#renderApplyToRow","#renderHeaderRow","VisualLogging.link","focusElement","pattern","VisualLogging.treeItem","#renderEditable","className","isKey","jslog","VisualLogging.key","VisualLogging.value","LitHtml.Directives.live","VisualLogging.registerParentProvider"],"mappings":"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"}