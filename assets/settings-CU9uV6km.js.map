{"version":3,"file":"settings-CU9uV6km.js","sources":["../../panels/settings/components/syncSection.css.js","../../panels/settings/components/SyncSection.js","../../panels/settings/settingsScreen.css.js","../../panels/settings/SettingsScreen.js","../../panels/settings/frameworkIgnoreListSettingsTab.css.js","../../panels/settings/FrameworkIgnoreListSettingsTab.js","../../ui/components/switch/switch.css.js","../../ui/components/switch/SwitchImpl.js","../../panels/settings/aiSettingsTab.css.js","../../panels/settings/AISettingsTab.js","../../panels/settings/keybindsSettingsTab.css.js","../../panels/settings/KeybindsSettingsTab.js"],"sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (c) 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  break-inside: avoid;\n  display: block;\n  padding-bottom: 9px;\n  width: 288px;\n}\n\nfieldset {\n  border: 0;\n  margin-left: 20px;\n  padding: 0;\n}\n\nlegend {\n  color: var(--sys-color-token-subtle);\n  font-size: 120%;\n  margin-left: -20px;\n  padding: 0;\n  text-align: left;\n}\n\n.link {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n  outline-offset: 2px;\n}\n\nimg {\n  border: 0;\n  border-radius: var(--sys-shape-corner-full);\n  display: block;\n  height: var(--sys-size-9);\n  width: var(--sys-size-9);\n}\n\n.warning {\n  display: block;\n  margin-top: 12px;\n}\n\n.account-info {\n  display: flex;\n  align-items: center;\n  margin-top: 12px;\n}\n\n.account-email {\n  display: flex;\n  flex-direction: column;\n  margin-left: 8px;\n}\n\n/*# sourceURL=syncSection.css */\n`);\n\nexport default styles;\n","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/chrome_link/chrome_link.js';\nimport '../../../ui/components/settings/settings.js';\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport syncSectionStyles from './syncSection.css.js';\nconst { html } = LitHtml;\nconst UIStrings = {\n    /**\n     * @description Text shown to the user in the Settings UI. 'This setting' refers\n     * to a checkbox that is disabled.\n     */\n    syncDisabled: 'To turn this setting on, you must enable Chrome sync.',\n    /**\n     * @description Text shown to the user in the Settings UI. 'This setting' refers\n     * to a checkbox that is disabled.\n     */\n    preferencesSyncDisabled: 'To turn this setting on, you must first enable settings sync in Chrome.',\n    /**\n     * @description Label for a link that take the user to the \"Sync\" section of the\n     * chrome settings. The link is shown in the DevTools Settings UI.\n     */\n    settings: 'Go to Settings',\n    /**\n     * @description Label for the account email address. Shown in the DevTools Settings UI in\n     * front of the email address currently used for Chrome Sync.\n     */\n    signedIn: 'Signed into Chrome as:',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/components/SyncSection.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class SyncSection extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #syncInfo = { isSyncActive: false };\n    #syncSetting;\n    #boundRender = this.#render.bind(this);\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [syncSectionStyles];\n    }\n    set data(data) {\n        this.#syncInfo = data.syncInfo;\n        this.#syncSetting = data.syncSetting;\n        void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n    }\n    #render() {\n        if (!this.#syncSetting) {\n            throw new Error('SyncSection not properly initialized');\n        }\n        // TODO: this should not probably happen in render, instead, the setting\n        // should be disabled.\n        const checkboxDisabled = !this.#syncInfo.isSyncActive || !this.#syncInfo.arePreferencesSynced;\n        this.#syncSetting?.setDisabled(checkboxDisabled);\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        LitHtml.render(html `\n      <fieldset>\n        <legend>${Common.Settings.getLocalizedSettingsCategory(\"SYNC\" /* Common.Settings.SettingCategory.SYNC */)}</legend>\n        ${renderAccountInfoOrWarning(this.#syncInfo)}\n        <setting-checkbox .data=${{ setting: this.#syncSetting }}>\n        </setting-checkbox>\n      </fieldset>\n    `, this.#shadow, { host: this });\n        // clang-format on\n    }\n}\n/* x-link doesn't work with custom click/keydown handlers */\n/* eslint-disable rulesdir/ban_a_tags_in_lit_html */\nfunction renderAccountInfoOrWarning(syncInfo) {\n    if (!syncInfo.isSyncActive) {\n        const link = 'chrome://settings/syncSetup';\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        return html `\n      <span class=\"warning\">\n        ${i18nString(UIStrings.syncDisabled)}\n        <devtools-chrome-link .href=${link}>${i18nString(UIStrings.settings)}</devtools-chrome-link>\n      </span>`;\n        // clang-format on\n    }\n    if (!syncInfo.arePreferencesSynced) {\n        const link = 'chrome://settings/syncSetup/advanced';\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        return html `\n      <span class=\"warning\">\n        ${i18nString(UIStrings.preferencesSyncDisabled)}\n        <devtools-chrome-link .href=${link}>${i18nString(UIStrings.settings)}</devtools-chrome-link>\n      </span>`;\n        // clang-format on\n    }\n    return html `\n    <div class=\"account-info\">\n      <img src=\"data:image/png;base64, ${syncInfo.accountImage}\" alt=\"Account avatar\" />\n      <div class=\"account-email\">\n        <span>${i18nString(UIStrings.signedIn)}</span>\n        <span>${syncInfo.accountEmail}</span>\n      </div>\n    </div>`;\n}\ncustomElements.define('devtools-sync-section', SyncSection);\n//# sourceMappingURL=SyncSection.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright (c) 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.settings-window-main {\n  color: var(--sys-color-on-surface);\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.settings-content {\n  overflow-y: auto;\n  overflow-x: hidden;\n  margin: 8px 8px 8px 0;\n  padding: 0 4px;\n  flex: auto;\n}\n\n.settings-container {\n  width: 100%;\n  column-width: 288px;\n}\n\n.settings-block {\n  display: block;\n  padding-bottom: 9px;\n  width: 288px;\n  break-inside: avoid;\n}\n\n.settings-tab.settings-container {\n  column-width: 308px;\n}\n\n.settings-tab .settings-block {\n  margin-left: 20px;\n}\n\n.settings-line {\n  padding-bottom: 5px;\n  margin-bottom: 5px;\n}\n\n.settings-key-cell {\n  display: inline-block;\n  width: 153px;\n  white-space: nowrap;\n  text-align: right;\n  vertical-align: middle;\n  padding-right: 6px;\n}\n\n.settings-cell {\n  display: inline-block;\n  width: 135px;\n  vertical-align: middle;\n}\n\n.settings-section-title {\n  font-size: 120%;\n  text-align: left;\n}\n\n.settings-combine-keys {\n  margin: 0 0.3em;\n  font-size: 9px;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n  border: none;\n}\n\n.experiments-filter {\n  padding-top: 1px;\n  display: flex;\n  align-items: center;\n}\n\nlabel {\n  padding-right: 8px;\n  padding-bottom: 8px;\n}\n\n.experiments-filter label {\n  padding-bottom: 0;\n}\n\n.settings-tab p {\n  margin: 6px 0;\n}\n\n.settings-block p p {\n  padding-left: 30px;\n}\n\n.settings-select {\n  align-items: center;\n  display: grid;\n}\n\n.settings-experiments-warning-subsection-warning {\n  color: var(--sys-color-error);\n}\n\n.settings-experiments-warning-subsection-message {\n  color: inherit;\n}\n\n.settings-content input[type=\"checkbox\"] {\n  margin: 1px 7px 1px 2px;\n}\n\n.settings-window-label-element {\n  flex: none;\n}\n\n.settings-window-title {\n  display: flex;\n  align-items: center;\n  font-size: var(--sys-size-9);\n  color: var(--sys-color-on-surface);\n  margin: var(--sys-size-8) var(--sys-size-7);\n\n  &::before {\n    content: \"\";\n    width: var(--sys-size-9);\n    height: var(--sys-size-9);\n    margin-right: var(--sys-size-6);\n    background-image: var(--image-file-devtools);\n  }\n}\n\n.settings-container-wrapper {\n  position: absolute;\n  top: 31px;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: auto;\n  padding-top: 9px;\n  border-top: 1px solid var(--sys-color-divider);\n}\n\n.settings-tab.settings-content {\n  margin: 0;\n  padding: 0;\n}\n\n.settings-tab-container {\n  flex: auto;\n  overflow: hidden;\n}\n\n.settings-tab-container header {\n  padding: 0 0 6px;\n}\n\n#experiments-tab-content .settings-container {\n  column-width: auto;\n}\n\n#experiments-tab-content .settings-block {\n  width: auto;\n  margin-left: 0;\n  margin-right: 10px;\n}\n\n.settings-tab-container header > h1 {\n  font-size: 18px;\n  font-weight: normal;\n  margin: 0;\n  padding-bottom: 3px;\n  white-space: nowrap;\n}\n\n.settings-tab .settings-section-title {\n  margin-left: -20px;\n  color: var(--sys-color-on-surface-subtle);\n}\n\n.settings-tab select {\n  margin-left: 10px;\n  width: 80%;\n}\n\n.settings-experiment {\n  display: grid;\n  grid-template-columns: auto min-content auto 1fr;\n}\n\n.settings-experiment .devtools-link {\n  display: flex !important; /* stylelint-disable-line declaration-no-important */\n  align-items: center;\n}\n\n.settings-experiment .devtools-link:has(.link-icon) {\n  outline-offset: 0;\n}\n\n.experiment-label {\n  margin-right: 2px;\n}\n\n.settings-experiment-unstable {\n  color: var(--sys-color-token-subtle);\n}\n\n.settings-experiment .feedback-link {\n  color: var(--sys-color-primary);\n  text-decoration-line: underline;\n  margin-left: 4px;\n}\n\n.tabbed-pane-content slot::slotted(.widget) {\n  /* '!important' in order to overwrite the slotted widget's 'overflow-auto' class.\n  This prevents the focus-ring of selectable elements from being cut off. */\n  overflow: visible !important; /* stylelint-disable-line declaration-no-important */\n}\n\n@media (forced-colors: active) {\n  .settings-window-title {\n    color: canvastext;\n  }\n\n  .tabbed-pane-header-tab {\n    background: ButtonFace;\n  }\n\n  .tabbed-pane-header-tab-title {\n    color: canvastext;\n  }\n}\n\n@media (forced-colors: active) and (prefers-color-scheme: dark) {\n  .tabbed-pane-header-tab.selected {\n    background: ButtonFace;\n  }\n\n  .tabbed-pane-header-tab.selected .tabbed-pane-header-tab-title {\n    color: HighlightText;\n  }\n}\n\n/*# sourceURL=settingsScreen.css */\n`);\n\nexport default styles;\n","/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport { PanelUtils } from '../utils/utils.js';\nimport * as PanelComponents from './components/components.js';\nimport settingsScreenStyles from './settingsScreen.css.js';\nconst UIStrings = {\n    /**\n     *@description Name of the Settings view\n     */\n    settings: 'Settings',\n    /**\n     *@description Text for keyboard shortcuts\n     */\n    shortcuts: 'Shortcuts',\n    /**\n     *@description Text in Settings Screen of the Settings\n     */\n    preferences: 'Preferences',\n    /**\n     *@description Text of button in Settings Screen of the Settings\n     */\n    restoreDefaultsAndReload: 'Restore defaults and reload',\n    /**\n     *@description Text in Settings Screen of the Settings\n     */\n    experiments: 'Experiments',\n    /**\n     *@description Message shown in the experiments panel to warn users about any possible unstable features.\n     */\n    theseExperimentsCouldBeUnstable: 'These experiments could be unstable or unreliable and may require you to restart DevTools.',\n    /**\n     *@description Message text content in Settings Screen of the Settings\n     */\n    theseExperimentsAreParticularly: 'These experiments are particularly unstable. Enable at your own risk.',\n    /**\n     *@description Warning text content in Settings Screen of the Settings\n     */\n    warning: 'WARNING:',\n    /**\n     *@description Message to display if a setting change requires a reload of DevTools\n     */\n    oneOrMoreSettingsHaveChanged: 'One or more settings have changed which requires a reload to take effect.',\n    /**\n     * @description Label for a filter text input that controls which experiments are shown.\n     */\n    filterExperimentsLabel: 'Filter',\n    /**\n     * @description Warning text shown when the user has entered text to filter the\n     * list of experiments, but no experiments match the filter.\n     */\n    noResults: 'No experiments match the filter',\n    /**\n     *@description Text that is usually a hyperlink to more documentation\n     */\n    learnMore: 'Learn more',\n    /**\n     *@description Text that is usually a hyperlink to a feedback form\n     */\n    sendFeedback: 'Send feedback',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/SettingsScreen.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet settingsScreenInstance;\nexport class SettingsScreen extends UI.Widget.VBox {\n    tabbedLocation;\n    keybindsTab;\n    reportTabOnReveal;\n    constructor() {\n        super(true);\n        this.contentElement.classList.add('settings-window-main');\n        this.contentElement.classList.add('vbox');\n        const settingsLabelElement = document.createElement('div');\n        settingsLabelElement.classList.add('settings-window-label-element');\n        const settingsTitleElement = UI.UIUtils\n            .createShadowRootWithCoreStyles(settingsLabelElement, { cssFile: [settingsScreenStyles], delegatesFocus: undefined })\n            .createChild('div', 'settings-window-title');\n        UI.ARIAUtils.markAsHeading(settingsTitleElement, 1);\n        settingsTitleElement.textContent = i18nString(UIStrings.settings);\n        this.tabbedLocation = UI.ViewManager.ViewManager.instance().createTabbedLocation(() => SettingsScreen.revealSettingsScreen(), 'settings-view');\n        const tabbedPane = this.tabbedLocation.tabbedPane();\n        tabbedPane.registerCSSFiles([settingsScreenStyles]);\n        tabbedPane.headerElement().prepend(settingsLabelElement);\n        tabbedPane.setShrinkableTabs(false);\n        tabbedPane.makeVerticalTabLayout();\n        const keyBindsView = UI.ViewManager.ViewManager.instance().view('keybinds');\n        if (keyBindsView) {\n            void keyBindsView.widget().then(widget => {\n                this.keybindsTab = widget;\n            });\n        }\n        tabbedPane.show(this.contentElement);\n        tabbedPane.selectTab('preferences');\n        tabbedPane.addEventListener(UI.TabbedPane.Events.TabInvoked, this.tabInvoked, this);\n        this.reportTabOnReveal = false;\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!settingsScreenInstance || forceNew) {\n            settingsScreenInstance = new SettingsScreen();\n        }\n        return settingsScreenInstance;\n    }\n    static revealSettingsScreen() {\n        const settingsScreen = SettingsScreen.instance();\n        if (settingsScreen.isShowing()) {\n            return settingsScreen;\n        }\n        settingsScreen.reportTabOnReveal = true;\n        const dialog = new UI.Dialog.Dialog('settings');\n        dialog.contentElement.tabIndex = -1;\n        dialog.addCloseButton();\n        dialog.setOutsideClickCallback(() => { });\n        dialog.setPointerEventsBehavior(\"PierceGlassPane\" /* UI.GlassPane.PointerEventsBehavior.PIERCE_GLASS_PANE */);\n        dialog.setOutsideTabIndexBehavior(\"PreserveMainViewTabIndex\" /* UI.Dialog.OutsideTabIndexBehavior.PRESERVE_MAIN_VIEW_TAB_INDEX */);\n        settingsScreen.show(dialog.contentElement);\n        dialog.setEscapeKeyCallback(settingsScreen.onEscapeKeyPressed.bind(settingsScreen));\n        dialog.setMarginBehavior(\"NoMargin\" /* UI.GlassPane.MarginBehavior.NO_MARGIN */);\n        // UI.Dialog extends GlassPane and overrides the `show` method with a wider\n        // accepted type. However, TypeScript uses the supertype declaration to\n        // determine the full type, which requires a `!Document`.\n        // @ts-ignore\n        dialog.show();\n        return settingsScreen;\n    }\n    static async showSettingsScreen(options = { name: undefined, focusTabHeader: undefined }) {\n        const { name, focusTabHeader } = options;\n        const settingsScreen = SettingsScreen.revealSettingsScreen();\n        settingsScreen.selectTab(name || 'preferences');\n        const tabbedPane = settingsScreen.tabbedLocation.tabbedPane();\n        await tabbedPane.waitForTabElementUpdate();\n        if (focusTabHeader) {\n            tabbedPane.focusSelectedTabHeader();\n        }\n        else {\n            tabbedPane.focus();\n        }\n    }\n    resolveLocation(_locationName) {\n        return this.tabbedLocation;\n    }\n    selectTab(name) {\n        this.tabbedLocation.tabbedPane().selectTab(name, /* userGesture */ true);\n    }\n    tabInvoked(event) {\n        const eventData = event.data;\n        if (!eventData.isUserGesture) {\n            return;\n        }\n        const prevTabId = eventData.prevTabId;\n        const tabId = eventData.tabId;\n        if (!this.reportTabOnReveal && prevTabId && prevTabId === tabId) {\n            return;\n        }\n        this.reportTabOnReveal = false;\n        this.reportSettingsPanelShown(tabId);\n    }\n    reportSettingsPanelShown(tabId) {\n        if (tabId === i18nString(UIStrings.shortcuts)) {\n            Host.userMetrics.settingsPanelShown('shortcuts');\n            return;\n        }\n        Host.userMetrics.settingsPanelShown(tabId);\n    }\n    onEscapeKeyPressed(event) {\n        if (this.tabbedLocation.tabbedPane().selectedTabId === 'keybinds' && this.keybindsTab) {\n            this.keybindsTab.onEscapeKeyPressed(event);\n        }\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([settingsScreenStyles]);\n    }\n}\nclass SettingsTab extends UI.Widget.VBox {\n    containerElement;\n    constructor(name, id) {\n        super();\n        this.element.classList.add('settings-tab-container');\n        if (id) {\n            this.element.id = id;\n        }\n        const header = this.element.createChild('header');\n        UI.UIUtils.createTextChild(header.createChild('h1'), name);\n        this.containerElement = this.element.createChild('div', 'settings-container-wrapper')\n            .createChild('div', 'settings-tab settings-content settings-container');\n    }\n    appendSection(name) {\n        const block = this.containerElement.createChild('div', 'settings-block');\n        if (name) {\n            UI.ARIAUtils.markAsGroup(block);\n            const title = block.createChild('div', 'settings-section-title');\n            title.textContent = name;\n            UI.ARIAUtils.markAsHeading(title, 2);\n            UI.ARIAUtils.setLabel(block, name);\n        }\n        return block;\n    }\n}\nexport class GenericSettingsTab extends SettingsTab {\n    syncSection = new PanelComponents.SyncSection.SyncSection();\n    settingToControl = new Map();\n    constructor() {\n        super(i18nString(UIStrings.preferences), 'preferences-tab-content');\n        this.element.setAttribute('jslog', `${VisualLogging.pane('preferences')}`);\n        // GRID, MOBILE, EMULATION, and RENDERING are intentionally excluded from this list.\n        const explicitSectionOrder = [\n            \"\" /* Common.Settings.SettingCategory.NONE */,\n            \"APPEARANCE\" /* Common.Settings.SettingCategory.APPEARANCE */,\n            \"SOURCES\" /* Common.Settings.SettingCategory.SOURCES */,\n            \"ELEMENTS\" /* Common.Settings.SettingCategory.ELEMENTS */,\n            \"NETWORK\" /* Common.Settings.SettingCategory.NETWORK */,\n            \"PERFORMANCE\" /* Common.Settings.SettingCategory.PERFORMANCE */,\n            \"MEMORY\" /* Common.Settings.SettingCategory.MEMORY */,\n            \"CONSOLE\" /* Common.Settings.SettingCategory.CONSOLE */,\n            \"EXTENSIONS\" /* Common.Settings.SettingCategory.EXTENSIONS */,\n            \"PERSISTENCE\" /* Common.Settings.SettingCategory.PERSISTENCE */,\n            \"DEBUGGER\" /* Common.Settings.SettingCategory.DEBUGGER */,\n            \"GLOBAL\" /* Common.Settings.SettingCategory.GLOBAL */,\n            \"SYNC\" /* Common.Settings.SettingCategory.SYNC */,\n        ];\n        // Some settings define their initial ordering.\n        const preRegisteredSettings = Common.Settings.Settings.instance().getRegisteredSettings().sort((firstSetting, secondSetting) => {\n            if (firstSetting.order && secondSetting.order) {\n                return (firstSetting.order - secondSetting.order);\n            }\n            if (firstSetting.order) {\n                return -1;\n            }\n            if (secondSetting.order) {\n                return 1;\n            }\n            return 0;\n        });\n        for (const sectionCategory of explicitSectionOrder) {\n            const settingsForSection = preRegisteredSettings.filter(setting => setting.category === sectionCategory && GenericSettingsTab.isSettingVisible(setting));\n            this.createSectionElement(sectionCategory, settingsForSection);\n        }\n        const restoreAndReloadButton = UI.UIUtils.createTextButton(i18nString(UIStrings.restoreDefaultsAndReload), restoreAndReload, { jslogContext: 'settings.restore-defaults-and-reload' });\n        this.appendSection().appendChild(restoreAndReloadButton);\n        function restoreAndReload() {\n            Common.Settings.Settings.instance().clearAll();\n            Components.Reload.reload();\n        }\n    }\n    static isSettingVisible(setting) {\n        return Boolean(setting.title?.()) && Boolean(setting.category);\n    }\n    wasShown() {\n        UI.Context.Context.instance().setFlavor(GenericSettingsTab, this);\n        super.wasShown();\n        this.updateSyncSection();\n    }\n    willHide() {\n        super.willHide();\n        UI.Context.Context.instance().setFlavor(GenericSettingsTab, null);\n    }\n    updateSyncSection() {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.getSyncInformation(syncInfo => {\n            this.syncSection.data = {\n                syncInfo,\n                syncSetting: Common.Settings.moduleSetting('sync-preferences'),\n            };\n        });\n    }\n    createExtensionSection(settings) {\n        const sectionName = \"EXTENSIONS\" /* Common.Settings.SettingCategory.EXTENSIONS */;\n        const settingUI = Components.Linkifier.LinkHandlerSettingUI.instance();\n        const element = settingUI.settingElement();\n        if (element) {\n            const sectionElement = this.createStandardSectionElement(sectionName, settings);\n            sectionElement.appendChild(element);\n        }\n    }\n    createSectionElement(category, settings) {\n        // Always create the EXTENSIONS section and append the link handling control.\n        if (category === \"EXTENSIONS\" /* Common.Settings.SettingCategory.EXTENSIONS */) {\n            this.createExtensionSection(settings);\n        }\n        else if (category === \"SYNC\" /* Common.Settings.SettingCategory.SYNC */ && settings.length > 0) {\n            this.containerElement.appendChild(this.syncSection);\n        }\n        else if (settings.length > 0) {\n            this.createStandardSectionElement(category, settings);\n        }\n    }\n    createStandardSectionElement(category, settings) {\n        const uiSectionName = Common.Settings.getLocalizedSettingsCategory(category);\n        const sectionElement = this.appendSection(uiSectionName);\n        for (const settingRegistration of settings) {\n            const setting = Common.Settings.Settings.instance().moduleSetting(settingRegistration.settingName);\n            const settingControl = UI.SettingsUI.createControlForSetting(setting);\n            if (settingControl) {\n                this.settingToControl.set(setting, settingControl);\n                sectionElement.appendChild(settingControl);\n            }\n        }\n        return sectionElement;\n    }\n    highlightObject(setting) {\n        if (setting instanceof Common.Settings.Setting) {\n            const element = this.settingToControl.get(setting);\n            if (element) {\n                PanelUtils.highlightElement(element);\n            }\n        }\n    }\n}\nexport class ExperimentsSettingsTab extends SettingsTab {\n    #experimentsSection;\n    #unstableExperimentsSection;\n    #inputElement;\n    experimentToControl = new Map();\n    constructor() {\n        super(i18nString(UIStrings.experiments), 'experiments-tab-content');\n        const filterSection = this.appendSection();\n        filterSection.classList.add('experiments-filter');\n        this.element.setAttribute('jslog', `${VisualLogging.pane('experiments')}`);\n        const labelElement = filterSection.createChild('label');\n        labelElement.textContent = i18nString(UIStrings.filterExperimentsLabel);\n        this.#inputElement = UI.UIUtils.createInput('', 'text', 'experiments-filter');\n        UI.ARIAUtils.bindLabelToControl(labelElement, this.#inputElement);\n        filterSection.appendChild(this.#inputElement);\n        this.#inputElement.addEventListener('input', () => this.renderExperiments(this.#inputElement.value.toLowerCase()), false);\n        this.setDefaultFocusedElement(this.#inputElement);\n        this.setFilter('');\n    }\n    renderExperiments(filterText) {\n        this.experimentToControl.clear();\n        if (this.#experimentsSection) {\n            this.#experimentsSection.remove();\n        }\n        if (this.#unstableExperimentsSection) {\n            this.#unstableExperimentsSection.remove();\n        }\n        const experiments = Root.Runtime.experiments.allConfigurableExperiments().sort();\n        const unstableExperiments = experiments.filter(e => e.unstable && e.title.toLowerCase().includes(filterText));\n        const stableExperiments = experiments.filter(e => !e.unstable && e.title.toLowerCase().includes(filterText));\n        if (stableExperiments.length) {\n            this.#experimentsSection = this.appendSection();\n            const warningMessage = i18nString(UIStrings.theseExperimentsCouldBeUnstable);\n            this.#experimentsSection.appendChild(this.createExperimentsWarningSubsection(warningMessage));\n            for (const experiment of stableExperiments) {\n                this.#experimentsSection.appendChild(this.createExperimentCheckbox(experiment));\n            }\n        }\n        if (unstableExperiments.length) {\n            this.#unstableExperimentsSection = this.appendSection();\n            const warningMessage = i18nString(UIStrings.theseExperimentsAreParticularly);\n            this.#unstableExperimentsSection.appendChild(this.createExperimentsWarningSubsection(warningMessage));\n            for (const experiment of unstableExperiments) {\n                this.#unstableExperimentsSection.appendChild(this.createExperimentCheckbox(experiment));\n            }\n        }\n        if (!stableExperiments.length && !unstableExperiments.length) {\n            this.#experimentsSection = this.appendSection();\n            const warning = this.#experimentsSection.createChild('span');\n            warning.textContent = i18nString(UIStrings.noResults);\n            UI.ARIAUtils.alert(warning.textContent);\n        }\n    }\n    createExperimentsWarningSubsection(warningMessage) {\n        const subsection = document.createElement('div');\n        const warning = subsection.createChild('span', 'settings-experiments-warning-subsection-warning');\n        warning.textContent = i18nString(UIStrings.warning);\n        UI.UIUtils.createTextChild(subsection, ' ');\n        const message = subsection.createChild('span', 'settings-experiments-warning-subsection-message');\n        message.textContent = warningMessage;\n        return subsection;\n    }\n    createExperimentCheckbox(experiment) {\n        const label = UI.UIUtils.CheckboxLabel.create(experiment.title, experiment.isEnabled(), undefined, experiment.name);\n        label.classList.add('experiment-label');\n        const input = label.checkboxElement;\n        input.name = experiment.name;\n        function listener() {\n            experiment.setEnabled(input.checked);\n            Host.userMetrics.experimentChanged(experiment.name, experiment.isEnabled());\n            UI.InspectorView.InspectorView.instance().displayReloadRequiredWarning(i18nString(UIStrings.oneOrMoreSettingsHaveChanged));\n        }\n        input.addEventListener('click', listener, false);\n        const p = document.createElement('p');\n        this.experimentToControl.set(experiment, p);\n        p.classList.add('settings-experiment');\n        if (experiment.unstable && !experiment.isEnabled()) {\n            p.classList.add('settings-experiment-unstable');\n        }\n        p.appendChild(label);\n        const experimentLink = experiment.docLink;\n        if (experimentLink) {\n            const linkButton = new Buttons.Button.Button();\n            linkButton.data = {\n                iconName: 'help',\n                variant: \"icon\" /* Buttons.Button.Variant.ICON */,\n                size: \"SMALL\" /* Buttons.Button.Size.SMALL */,\n                jslogContext: `${experiment.name}-documentation`,\n            };\n            linkButton.addEventListener('click', () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(experimentLink));\n            linkButton.ariaLabel = i18nString(UIStrings.learnMore);\n            linkButton.classList.add('link-icon');\n            p.appendChild(linkButton);\n        }\n        if (experiment.feedbackLink) {\n            const link = UI.XLink.XLink.create(experiment.feedbackLink, undefined, undefined, undefined, `${experiment.name}-feedback`);\n            link.textContent = i18nString(UIStrings.sendFeedback);\n            link.classList.add('feedback-link');\n            p.appendChild(link);\n        }\n        return p;\n    }\n    highlightObject(experiment) {\n        if (experiment instanceof Root.Runtime.Experiment) {\n            const element = this.experimentToControl.get(experiment);\n            if (element) {\n                PanelUtils.highlightElement(element);\n            }\n        }\n    }\n    setFilter(filterText) {\n        this.#inputElement.value = filterText;\n        this.#inputElement.dispatchEvent(new Event('input', { bubbles: true, cancelable: true }));\n    }\n    wasShown() {\n        UI.Context.Context.instance().setFlavor(ExperimentsSettingsTab, this);\n        super.wasShown();\n    }\n    willHide() {\n        super.willHide();\n        UI.Context.Context.instance().setFlavor(ExperimentsSettingsTab, null);\n    }\n}\nexport class ActionDelegate {\n    handleAction(context, actionId) {\n        switch (actionId) {\n            case 'settings.show':\n                void SettingsScreen.showSettingsScreen({ focusTabHeader: true });\n                return true;\n            case 'settings.documentation':\n                Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(UI.UIUtils.addReferrerToURL('https://developer.chrome.com/docs/devtools/'));\n                return true;\n            case 'settings.shortcuts':\n                void SettingsScreen.showSettingsScreen({ name: 'keybinds', focusTabHeader: true });\n                return true;\n        }\n        return false;\n    }\n}\nexport class Revealer {\n    async reveal(object) {\n        const context = UI.Context.Context.instance();\n        if (object instanceof Root.Runtime.Experiment) {\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n            await SettingsScreen.showSettingsScreen({ name: 'experiments' });\n            const experimentsSettingsTab = context.flavor(ExperimentsSettingsTab);\n            if (experimentsSettingsTab !== null) {\n                experimentsSettingsTab.highlightObject(object);\n            }\n            return;\n        }\n        for (const settingRegistration of Common.Settings.Settings.instance().getRegisteredSettings()) {\n            if (!GenericSettingsTab.isSettingVisible(settingRegistration)) {\n                continue;\n            }\n            if (settingRegistration.settingName === object.name) {\n                Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n                await SettingsScreen.showSettingsScreen();\n                const genericSettingsTab = context.flavor(GenericSettingsTab);\n                if (genericSettingsTab !== null) {\n                    genericSettingsTab.highlightObject(object);\n                }\n                return;\n            }\n        }\n        // Reveal settings views\n        for (const view of UI.ViewManager.getRegisteredViewExtensions(Common.Settings.Settings.instance().getHostConfig())) {\n            const id = view.viewId();\n            const location = view.location();\n            if (location !== \"settings-view\" /* UI.ViewManager.ViewLocationValues.SETTINGS_VIEW */) {\n                continue;\n            }\n            const settings = view.settings();\n            if (settings && settings.indexOf(object.name) !== -1) {\n                Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n                await SettingsScreen.showSettingsScreen({ name: id });\n                const widget = await view.widget();\n                if (widget instanceof SettingsTab) {\n                    widget.highlightObject(object);\n                }\n                return;\n            }\n        }\n    }\n}\n//# sourceMappingURL=SettingsScreen.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2015 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  overflow: hidden;\n}\n\n.header {\n  padding: 0 0 6px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  font-size: 18px;\n  font-weight: normal;\n  flex: none;\n}\n\n.intro {\n  margin-top: 10px;\n}\n\n.ignore-list-option {\n  flex: none;\n  padding: 3px 6px;\n  min-height: 30px;\n}\n\n.ignore-list-option devtools-button {\n  position: relative;\n  top: var(--sys-size-2);\n  margin-left: var(--sys-size-2);\n}\n\n.ignore-list-option-group {\n  margin-top: 13px;\n  margin-bottom: 3px;\n  margin-left: 8px;\n  flex-shrink: 0;\n}\n\n.add-button {\n  margin: 10px 2px;\n  align-self: flex-start;\n  flex: none;\n}\n\n.ignore-list {\n  max-width: 500px;\n  flex: 0 1 auto;\n}\n\n.ignore-list-global-enable {\n  padding: 3px 0;\n  color: var(--sys-color-token-subtle);\n  font-size: 120%;\n  margin-top: 17px;\n}\n\n.ignore-list-item {\n  padding: 3px 5px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  position: relative;\n  flex: auto 1 1;\n}\n\n.ignore-list-pattern {\n  flex: auto;\n  min-width: 100px;\n}\n\n.ignore-list-item > [is=\"dt-checkbox\"] {\n  width: 100%;\n}\n\n.ignore-list-item .ignore-list-pattern {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  user-select: none;\n  color: var(--sys-color-on-surface);\n  overflow: hidden;\n}\n\n.ignore-list-edit-row {\n  flex: none;\n  display: flex;\n  flex-direction: row;\n  margin: 6px 5px;\n  align-items: center;\n}\n\n.ignore-list-edit-row input,\n.ignore-list-edit-row select {\n  width: 100%;\n  text-align: inherit;\n}\n\n.ignore-list-options {\n  margin-left: 22px;\n  display: flex;\n  flex-direction: column;\n}\n\n.ignore-list-options.ignore-listing-disabled {\n  opacity: 30%;\n}\n\n.list:has(.ignore-list-empty),\n.list:has(.ignore-list-edit-row),\n.list:has(.ignore-list-item) {\n  border: none;\n}\n\n.editor-container:has(.ignore-list-edit-row) {\n  background: var(--sys-color-surface1);\n  border-radius: 10px;\n}\n\n.ignore-list.list-editing ~ .add-button {\n  display: none;\n}\n\n.devtools-link:has(devtools-icon) {\n  margin-left: 6px;\n}\n\n/*# sourceURL=frameworkIgnoreListSettingsTab.css */\n`);\n\nexport default styles;\n","// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport frameworkIgnoreListSettingsTabStyles from './frameworkIgnoreListSettingsTab.css.js';\nconst UIStrings = {\n    /**\n     *@description Header text content in Framework Ignore List Settings Tab of the Settings\n     */\n    frameworkIgnoreList: 'Framework ignore list',\n    /**\n     *@description Text in Framework Ignore List Settings Tab of the Settings\n     */\n    debuggerWillSkipThroughThe: 'Debugger won\\'t step through these scripts or break on exceptions that only affect them and Performance panel will collapse flamechart items that match.',\n    /**\n     *@description Text in Framework Ignore List Settings Tab of the Settings\n     */\n    ignoreListContentScripts: 'Content scripts injected by extensions',\n    /**\n     *@description Text in Framework Ignore List Settings Tab of the Settings\n     */\n    ignoreListAnonymousScripts: 'Anonymous scripts from eval or console',\n    /**\n     *@description Text in Framework Ignore List Settings Tab of the Settings\n     */\n    automaticallyIgnoreListKnownThirdPartyScripts: 'Known third-party scripts from source maps',\n    /**\n     *@description Text in Framework Ignore List Settings Tab of the Settings\n     */\n    enableIgnoreListing: 'Enable ignore listing',\n    /**\n     *@description Text in Framework Ignore List Settings Tab of the Settings\n     */\n    enableIgnoreListingTooltip: 'Uncheck to disable all ignore listing',\n    /**\n     *@description Text in Framework Ignore List Settings Tab of the Settings\n     */\n    generalExclusionRules: 'General exclusion rules:',\n    /**\n     *@description Text in Framework Ignore List Settings Tab of the Settings\n     */\n    customExclusionRules: 'Custom exclusion rules:',\n    /**\n     *@description Text of the add pattern button in Framework Ignore List Settings Tab of the Settings\n     */\n    addPattern: 'Add regex rule...',\n    /**\n     *@description Aria accessible name in Framework Ignore List Settings Tab of the Settings\n     */\n    addFilenamePattern: 'Add a regular expression rule for the script\\'s URL',\n    /**\n     *@description Pattern title in Framework Ignore List Settings Tab of the Settings\n     *@example {ad.*?} PH1\n     */\n    ignoreScriptsWhoseNamesMatchS: 'Ignore scripts whose names match \\'\\'{PH1}\\'\\'',\n    /**\n     *@description Aria accessible name in Framework Ignore List Settings Tab of the Settings. It labels the input\n     * field used to add new or edit existing regular expressions that match file names to ignore in the debugger.\n     */\n    pattern: 'Add a regular expression rule for the script\\'s URL',\n    /**\n     *@description Error message in Framework Ignore List settings pane that declares pattern must not be empty\n     */\n    patternCannotBeEmpty: 'Rule can\\'t be empty',\n    /**\n     *@description Error message in Framework Ignore List settings pane that declares pattern already exits\n     */\n    patternAlreadyExists: 'Rule already exists',\n    /**\n     *@description Error message in Framework Ignore List settings pane that declares pattern must be a valid regular expression\n     */\n    patternMustBeAValidRegular: 'Rule must be a valid regular expression',\n    /**\n     *@description Text that is usually a hyperlink to more documentation\n     */\n    learnMore: 'Learn more',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/FrameworkIgnoreListSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class FrameworkIgnoreListSettingsTab extends UI.Widget.VBox {\n    list;\n    setting;\n    editor;\n    constructor() {\n        super(true);\n        this.element.setAttribute('jslog', `${VisualLogging.pane('blackbox')}`);\n        const header = this.contentElement.createChild('div', 'header');\n        header.textContent = i18nString(UIStrings.frameworkIgnoreList);\n        UI.ARIAUtils.markAsHeading(header, 1);\n        this.contentElement.createChild('div', 'intro').textContent = i18nString(UIStrings.debuggerWillSkipThroughThe);\n        const enabledSetting = Common.Settings.Settings.instance().moduleSetting('enable-ignore-listing');\n        const enableIgnoreListing = this.contentElement.createChild('div', 'ignore-list-global-enable');\n        enableIgnoreListing.appendChild(UI.SettingsUI.createSettingCheckbox(i18nString(UIStrings.enableIgnoreListing), enabledSetting, true));\n        UI.Tooltip.Tooltip.install(enableIgnoreListing, i18nString(UIStrings.enableIgnoreListingTooltip));\n        const ignoreListOptions = this.contentElement.createChild('div', 'ignore-list-options');\n        const generalExclusionGroup = this.createSettingGroup(i18nString(UIStrings.generalExclusionRules));\n        ignoreListOptions.appendChild(generalExclusionGroup);\n        const ignoreListContentScripts = generalExclusionGroup.createChild('div', 'ignore-list-option');\n        ignoreListContentScripts.appendChild(UI.SettingsUI.createSettingCheckbox(i18nString(UIStrings.ignoreListContentScripts), Common.Settings.Settings.instance().moduleSetting('skip-content-scripts'), true));\n        const automaticallyIgnoreList = generalExclusionGroup.createChild('div', 'ignore-list-option');\n        automaticallyIgnoreList.appendChild(UI.SettingsUI.createSettingCheckbox(i18nString(UIStrings.automaticallyIgnoreListKnownThirdPartyScripts), Common.Settings.Settings.instance().moduleSetting('automatically-ignore-list-known-third-party-scripts'), true));\n        const automaticallyIgnoreLinkButton = new Buttons.Button.Button();\n        automaticallyIgnoreLinkButton.data = {\n            iconName: 'help',\n            variant: \"icon\" /* Buttons.Button.Variant.ICON */,\n            size: \"SMALL\" /* Buttons.Button.Size.SMALL */,\n            jslogContext: 'learn-more',\n            title: i18nString(UIStrings.learnMore),\n        };\n        automaticallyIgnoreLinkButton.addEventListener('click', () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab('http://goo.gle/skip-third-party'));\n        automaticallyIgnoreList.appendChild(automaticallyIgnoreLinkButton);\n        const ignoreListAnonymousScripts = generalExclusionGroup.createChild('div', 'ignore-list-option');\n        ignoreListAnonymousScripts.appendChild(UI.SettingsUI.createSettingCheckbox(i18nString(UIStrings.ignoreListAnonymousScripts), Common.Settings.Settings.instance().moduleSetting('skip-anonymous-scripts'), true));\n        const customExclusionGroup = this.createSettingGroup(i18nString(UIStrings.customExclusionRules));\n        ignoreListOptions.appendChild(customExclusionGroup);\n        this.list = new UI.ListWidget.ListWidget(this);\n        this.list.element.classList.add('ignore-list');\n        const placeholder = document.createElement('div');\n        placeholder.classList.add('ignore-list-empty');\n        this.list.setEmptyPlaceholder(placeholder);\n        this.list.show(customExclusionGroup);\n        const addPatternButton = UI.UIUtils.createTextButton(i18nString(UIStrings.addPattern), this.addButtonClicked.bind(this), { className: 'add-button', jslogContext: 'settings.add-ignore-list-pattern' });\n        UI.ARIAUtils.setLabel(addPatternButton, i18nString(UIStrings.addFilenamePattern));\n        customExclusionGroup.appendChild(addPatternButton);\n        this.setting =\n            Common.Settings.Settings.instance().moduleSetting('skip-stack-frames-pattern');\n        this.setting.addChangeListener(this.settingUpdated, this);\n        this.setDefaultFocusedElement(addPatternButton);\n        enabledSetting.addChangeListener(enabledChanged);\n        enabledChanged();\n        function enabledChanged() {\n            const enabled = enabledSetting.get();\n            if (enabled) {\n                ignoreListOptions.classList.remove('ignore-listing-disabled');\n            }\n            else {\n                ignoreListOptions.classList.add('ignore-listing-disabled');\n            }\n        }\n    }\n    wasShown() {\n        super.wasShown();\n        this.list.registerCSSFiles([frameworkIgnoreListSettingsTabStyles]);\n        this.registerCSSFiles([frameworkIgnoreListSettingsTabStyles]);\n        this.settingUpdated();\n    }\n    settingUpdated() {\n        this.list.clear();\n        const patterns = this.setting.getAsArray();\n        for (let i = 0; i < patterns.length; ++i) {\n            this.list.appendItem(patterns[i], true);\n        }\n    }\n    addButtonClicked() {\n        this.list.addNewItem(this.setting.getAsArray().length, { pattern: '', disabled: false });\n    }\n    createSettingGroup(title) {\n        const group = document.createElement('div');\n        group.classList.add('ignore-list-option-group');\n        UI.ARIAUtils.markAsGroup(group);\n        const groupTitle = group.createChild('div', 'ignore-list-option-group-title');\n        UI.ARIAUtils.markAsHeading(groupTitle, 2);\n        UI.ARIAUtils.setLabel(group, title);\n        groupTitle.textContent = title;\n        return group;\n    }\n    renderItem(item, _editable) {\n        const element = document.createElement('div');\n        const listSetting = this.setting;\n        const checkbox = UI.UIUtils.CheckboxLabel.create(item.pattern, !item.disabled, undefined, 'settings.ignore-list-pattern');\n        const helpText = i18nString(UIStrings.ignoreScriptsWhoseNamesMatchS, { PH1: item.pattern });\n        UI.Tooltip.Tooltip.install(checkbox, helpText);\n        checkbox.checkboxElement.ariaLabel = helpText;\n        checkbox.checkboxElement.addEventListener('change', inputChanged, false);\n        element.appendChild(checkbox);\n        element.classList.add('ignore-list-item');\n        return element;\n        function inputChanged() {\n            const disabled = !checkbox.checkboxElement.checked;\n            if (item.disabled !== disabled) {\n                item.disabled = disabled;\n                item.disabledForUrl = undefined;\n                // Send changed event\n                listSetting.setAsArray(listSetting.getAsArray());\n            }\n        }\n    }\n    removeItemRequested(item, index) {\n        const patterns = this.setting.getAsArray();\n        patterns.splice(index, 1);\n        this.setting.setAsArray(patterns);\n    }\n    commitEdit(item, editor, isNew) {\n        item.pattern = editor.control('pattern').value.trim();\n        const list = this.setting.getAsArray();\n        if (isNew) {\n            list.push(item);\n        }\n        this.setting.setAsArray(list);\n    }\n    beginEdit(item) {\n        const editor = this.createEditor();\n        editor.control('pattern').value = item.pattern;\n        return editor;\n    }\n    createEditor() {\n        if (this.editor) {\n            return this.editor;\n        }\n        const editor = new UI.ListWidget.Editor();\n        this.editor = editor;\n        const content = editor.contentElement();\n        const titles = content.createChild('div', 'ignore-list-edit-row');\n        titles.createChild('div', 'ignore-list-pattern').textContent = i18nString(UIStrings.pattern);\n        const fields = content.createChild('div', 'ignore-list-edit-row');\n        const pattern = editor.createInput('pattern', 'text', '/framework\\\\.js$', patternValidator.bind(this));\n        UI.ARIAUtils.setLabel(pattern, i18nString(UIStrings.pattern));\n        fields.createChild('div', 'ignore-list-pattern').appendChild(pattern);\n        return editor;\n        function patternValidator(item, index, input) {\n            const pattern = input.value.trim();\n            const patterns = this.setting.getAsArray();\n            if (!pattern.length) {\n                return { valid: false, errorMessage: i18nString(UIStrings.patternCannotBeEmpty) };\n            }\n            for (let i = 0; i < patterns.length; ++i) {\n                if (i !== index && patterns[i].pattern === pattern) {\n                    return { valid: false, errorMessage: i18nString(UIStrings.patternAlreadyExists) };\n                }\n            }\n            let regex;\n            try {\n                regex = new RegExp(pattern);\n            }\n            catch (e) {\n            }\n            if (!regex) {\n                return { valid: false, errorMessage: i18nString(UIStrings.patternMustBeAValidRegular) };\n            }\n            return { valid: true, errorMessage: undefined };\n        }\n    }\n}\n//# sourceMappingURL=FrameworkIgnoreListSettingsTab.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  position: relative;\n  display: inline-block;\n  width: 26px;\n  height: var(--sys-size-8);\n}\n\ninput {\n  opacity: 0%;\n  width: 0;\n  height: 0;\n}\n\n.slider {\n  box-sizing: border-box;\n  position: absolute;\n  cursor: pointer;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: var(--sys-color-surface-variant);\n  border: 1px solid var(--sys-color-outline);\n  border-radius: var(--sys-shape-corner-full);\n  transition: background-color 80ms linear;\n}\n\n.slider::before {\n  position: absolute;\n  content: \"\";\n  height: var(--sys-size-5);\n  width: var(--sys-size-5);\n  border-radius: var(--sys-shape-corner-full);\n  top: calc(50% - 4px);\n  left: 3px;\n  background-color: var(--sys-color-outline);\n  transition:\n    transform 80ms linear,\n    background-color 80ms linear,\n    width 80ms linear,\n    height 80ms linear,\n    top 80ms linear,\n    left 80ms linear;\n}\n\ninput:focus-visible + .slider {\n  outline: 2px solid var(--sys-color-state-focus-ring);\n  outline-offset: 2px;\n}\n\ninput:checked {\n  & + .slider {\n    background-color: var(--sys-color-primary);\n    border: 1px solid var(--sys-color-primary);\n  }\n\n  & + .slider::before {\n    left: 11px;\n    height: var(--sys-size-6);\n    width: var(--sys-size-6);\n    top: calc(50% - 6px);\n    background-color: var(--sys-color-on-primary);\n  }\n}\n\ninput:disabled:not(:checked) {\n  & + .slider {\n    background-color: transparent;\n    border-color: var(--sys-color-state-disabled);\n  }\n\n  & + .slider::before {\n    background-color: var(--sys-color-state-disabled);\n  }\n}\n\ninput:disabled:checked {\n  & + .slider {\n    background-color: var(--sys-color-state-disabled-container);\n    border-color: transparent;\n  }\n\n  & + .slider::before {\n    background-color: var(--sys-color-surface);\n  }\n}\n\n/*# sourceURL=switch.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\nimport switchStyles from './switch.css.js';\nconst { html } = LitHtml;\nexport class SwitchChangeEvent extends Event {\n    checked;\n    static eventName = 'switchchange';\n    constructor(checked) {\n        super(SwitchChangeEvent.eventName);\n        this.checked = checked;\n    }\n}\nexport class Switch extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #checked = false;\n    #disabled = false;\n    #jslogContext = '';\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [switchStyles];\n        this.#render();\n    }\n    set checked(isChecked) {\n        this.#checked = isChecked;\n        this.#render();\n    }\n    get checked() {\n        return this.#checked;\n    }\n    set disabled(isDisabled) {\n        this.#disabled = isDisabled;\n        this.#render();\n    }\n    get disabled() {\n        return this.#disabled;\n    }\n    get jslogContext() {\n        return this.#jslogContext;\n    }\n    set jslogContext(jslogContext) {\n        this.#jslogContext = jslogContext;\n        this.#render();\n    }\n    #handleChange = (ev) => {\n        this.#checked = ev.target.checked;\n        this.dispatchEvent(new SwitchChangeEvent(this.#checked));\n    };\n    #render() {\n        const jslog = this.#jslogContext && VisualLogging.toggle(this.#jslogContext).track({ change: true });\n        /* eslint-disable rulesdir/inject_checkbox_styles */\n        // clang-format off\n        LitHtml.render(html `\n    <label role=\"button\">\n      <input type=\"checkbox\"\n        @change=${this.#handleChange}\n        ?disabled=${this.#disabled}\n        .checked=${this.#checked}\n        jslog=${jslog || LitHtml.nothing}>\n      <span class=\"slider\" @click=${(ev) => ev.stopPropagation()}></span>\n    </label>\n    `, this.#shadow, { host: this });\n        // clang-format on\n        /* eslint-enable rulesdir/inject_checkbox_styles */\n    }\n}\ncustomElements.define('devtools-switch', Switch);\n//# sourceMappingURL=SwitchImpl.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2024 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n* {\n  box-sizing: border-box;\n}\n\nheader > h1 {\n  font-size: 18px;\n  font-weight: normal;\n  margin: 0;\n  white-space: nowrap;\n}\n\n.shared-disclaimer {\n  background: linear-gradient(135deg, var(--sys-color-gradient-primary), var(--sys-color-gradient-tertiary));\n  border-radius: var(--sys-size-5);\n  padding: var(--sys-size-9) var(--sys-size-11);\n  max-width: var(--sys-size-35);\n  min-width: var(--sys-size-28);\n\n  h2 {\n    font: var(--sys-typescale-headline5);\n    margin: 0 0 var(--sys-size-6);\n  }\n}\n\n.disclaimer-list-header {\n  font: var(--sys-typescale-body5-medium);\n  margin: 0;\n}\n\n.disclaimer-list {\n  padding: var(--sys-size-6) 0 0;\n  display: grid;\n  grid-template-columns: var(--sys-size-12) auto;\n  gap: var(--sys-size-6) 0;\n  line-height: var(--sys-typescale-body5-line-height);\n}\n\n.settings-container {\n  display: grid;\n  grid-template-columns: 1fr auto auto;\n  border-radius: var(--sys-size-5);\n  box-shadow: var(--sys-elevation-level3); /* stylelint-disable-line plugin/use_theme_colors */\n  margin: var(--sys-size-11) 0 var(--sys-size-4);\n  line-height: var(--sys-typescale-body5-line-height);\n  min-width: var(--sys-size-28);\n  max-width: var(--sys-size-35);\n  background-color: var(--app-color-card-background);\n}\n\n.accordion-header {\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n\n  &:hover {\n    background-color: var(--sys-color-state-hover-on-subtle);\n  }\n}\n\n.icon-container,\n.dropdown {\n  padding: 0 var(--sys-size-8);\n}\n\n.toggle-container {\n  padding: 0 var(--sys-size-8) 0 var(--sys-size-9);\n\n  &:hover {\n    background-color: var(--sys-color-state-hover-on-subtle);\n  }\n}\n\n.expansion-grid {\n  padding: var(--sys-size-4) var(--sys-size-8) var(--sys-size-6);\n  display: grid;\n  grid-template-columns: var(--sys-size-9) auto;\n  gap: var(--sys-size-6) var(--sys-size-8);\n  line-height: var(--sys-typescale-body5-line-height);\n  color: var(--sys-color-on-surface-subtle);\n}\n\n.expansion-grid-whole-row {\n  grid-column: span 2;\n  font-weight: var(--ref-typeface-weight-medium);\n  color: var(--sys-color-on-surface);\n  padding-top: var(--sys-size-4);\n  margin: 0;\n  font-size: inherit;\n}\n\n.setting-description {\n  color: var(--sys-color-on-surface-subtle);\n}\n\n.centered {\n  display: grid;\n  place-content: center;\n}\n\n.setting-card {\n  padding: var(--sys-size-6) 0;\n\n  h2 {\n    margin: 0;\n    font: inherit;\n  }\n}\n\n.divider {\n  margin: var(--sys-size-5) 0;\n  border-left: var(--sys-size-1) solid var(--sys-color-divider);\n}\n\n.accordion-header ~ .accordion-header,\n.divider ~ .divider,\n.toggle-container ~ .toggle-container {\n  border-top: var(--sys-size-1) solid var(--sys-color-divider);\n}\n\n.whole-row {\n  grid-column: span 5;\n  overflow: hidden;\n  display: grid;\n  grid-template-rows: 0fr;\n  transition: grid-template-rows var(--sys-motion-duration-short4) ease-in;\n}\n\n.whole-row.open {\n  grid-template-rows: 1fr;\n}\n\n.overflow-hidden {\n  overflow: hidden;\n}\n\n.link,\n.devtools-link {\n  color: var(--sys-color-primary);\n  text-decoration: underline;\n  cursor: pointer;\n  outline-offset: var(--sys-size-2);\n  padding: 0;\n  font-weight: var(--ref-typeface-weight-regular);\n}\n\n.padded {\n  padding: var(--sys-size-2) 0;\n}\n\n.settings-container-wrapper {\n  position: absolute;\n  top: 31px;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: auto;\n  padding: var(--sys-size-6);\n  border-top: 1px solid var(--sys-color-divider);\n  display: flex;\n  flex-direction: column;\n}\n\n@media (min-width: 640px) {\n  .settings-container-wrapper {\n    align-items: center;\n  }\n}\n\nheader {\n  font-size: var(--sys-typescale-headline3-size);\n  font-weight: var(--ref-typeface-weight-regular);\n}\n\n/*# sourceURL=aiSettingsTab.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as Input from '../../ui/components/input/input.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as Switch from '../../ui/components/switch/switch.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport aiSettingsTabStyles from './aiSettingsTab.css.js';\nconst { html, Directives: { ifDefined, classMap } } = LitHtml;\nconst UIStrings = {\n    /**\n     *@description Header text for for a list of things to consider in the context of generative AI features\n     */\n    boostYourProductivity: 'Boost your productivity with AI',\n    /**\n     *@description Text announcing a list of facts to consider (when using a GenAI feature)\n     */\n    thingsToConsider: 'Things to consider',\n    /**\n     *@description Text describing a fact to consider when using AI features\n     */\n    experimentalFeatures: 'These features are experimental. They use generative AI and may provide inaccurate or offensive information that doesn’t represent Google’s views.',\n    /**\n     *@description Text describing a fact to consider when using AI features\n     */\n    sendsDataToGoogle: 'These features send relevant data to Google. Google collects this data and feedback to improve its products and services with the help of human reviewers. Avoid sharing sensitive or personal information.',\n    /**\n     *@description Text describing a fact to consider when using AI features\n     */\n    retainData: 'Usage data will be retained for up to 18 months and stored in such a way that Google can’t tell who provided it.',\n    /**\n     *@description Text describing a fact to consider when using AI features\n     */\n    adminSettings: 'Depending on your Google account management and/or region, Google may refrain from data collection. Depending on your organization’s settings, features available to managed users may vary.',\n    /**\n     *@description Text describing the 'Console Insights' feature\n     */\n    helpUnderstandConsole: 'Helps you understand and fix console warnings and errors',\n    /**\n     *@description Label for a button to expand an accordion\n     */\n    showMore: 'Show more',\n    /**\n     *@description Label for a button to collapse an accordion\n     */\n    showLess: 'Show less',\n    /**\n     *@description Header for a list of feature attributes. 'When (the feature is turned) on, you'll be able to ...'\n     */\n    whenOn: 'When on',\n    /**\n     *@description Description of the console insights feature\n     */\n    explainConsole: 'Get explanations for console warnings and errors',\n    /**\n     *@description Description of the console insights feature ('these issues' refers to console warnings and errors)\n     */\n    receiveSuggestions: 'Receive suggestions and code samples to address these issues',\n    /**\n     *@description Explainer for which data is being sent by the console insights feature\n     */\n    consoleInsightsSendsData: 'The console message, associated stack trace, related source code, and the associated network headers are sent to Google to generate explanations. This data may be seen by human reviewers to improve this feature.',\n    /**\n     *@description Reference to the terms of service and privacy notice\n     *@example {Google Terms of Service} PH1\n     *@example {Privacy Notice} PH2\n     */\n    termsOfServicePrivacyNotice: 'Use of these features is subject to the {PH1} and {PH2}',\n    /**\n     *@description Text describing the 'AI assistance' feature\n     */\n    helpUnderstandStyling: 'Get help with understanding CSS styles',\n    /**\n     *@description Text describing the 'AI assistance' feature\n     */\n    helpUnderstandStylingAndNetworkRequest: 'Get help with understanding CSS styles and network requests',\n    /**\n     *@description Text describing the 'AI assistance' feature\n     */\n    helpUnderstandStylingNetworkAndFile: 'Get help with understanding CSS styles, network requests, and files',\n    /**\n     *@description Text which is a hyperlink to more documentation\n     */\n    learnMore: 'Learn more',\n    /**\n     *@description Description of the AI assistance feature\n     */\n    explainStyling: 'Understand CSS styles with AI-powered insights',\n    /**\n     *@description Description of the AI assistance feature\n     */\n    explainStylingAndNetworkRequest: 'Understand CSS styles, and network activity with AI-powered insights',\n    /**\n     *@description Description of the AI assistance feature\n     */\n    explainStylingNetworkAndFile: 'Understand CSS styles, network activity, and file origins with AI-powered insights',\n    /**\n     *@description Description of the AI assistance feature\n     */\n    receiveStylingSuggestions: 'Improve your development workflow with contextual explanations and suggestions',\n    /**\n     *@description Explainer for which data is being sent by the AI assistance feature\n     */\n    freestylerSendsData: 'Any data the inspected page can access via Web APIs, network requests, files, and performance traces are sent to Google to generate explanations. This data may be seen by human reviewers to improve this feature. Don’t use on pages with personal or sensitive information.',\n    /**\n     *@description Label for a link to the terms of service\n     */\n    termsOfService: 'Google Terms of Service',\n    /**\n     *@description Label for a link to the privacy notice\n     */\n    privacyNotice: 'Google Privacy Policy',\n    /**\n     *@description Header for the AI innovations settings page\n     */\n    aiInnovations: 'AI innovations',\n    /**\n     *@description Label for a toggle to enable the Console Insights feature\n     */\n    enableConsoleInsights: 'Enable `Console insights`',\n    /**\n     *@description Label for a toggle to enable the AI assistance feature\n     */\n    enableAiAssistance: 'Enable AI assistance',\n    /**\n     * @description Message shown to the user if the age check is not successful.\n     */\n    ageRestricted: 'This feature is only available to users who are 18 years of age or older',\n    /**\n     * @description The error message when the user is not logged in into Chrome.\n     */\n    notLoggedIn: 'This feature is only available when you sign into Chrome with your Google account.',\n    /**\n     * @description Message shown when the user is offline.\n     */\n    offline: 'This feature is only available with an active internet connection.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/AISettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst chevronDownIconUrl = new URL('../../Images/chevron-down.svg', import.meta.url).toString();\nconst chevronUpIconUrl = new URL('../../Images/chevron-up.svg', import.meta.url).toString();\nexport class AISettingsTab extends LegacyWrapper.LegacyWrapper.WrappableComponent {\n    #shadow = this.attachShadow({ mode: 'open' });\n    #consoleInsightsSetting;\n    #aiAssistanceSetting;\n    #isConsoleInsightsSettingExpanded = false;\n    #isAiAssistanceSettingExpanded = false;\n    #aidaAvailability = \"no-account-email\" /* Host.AidaClient.AidaAccessPreconditions.NO_ACCOUNT_EMAIL */;\n    #boundOnAidaAvailabilityChange;\n    constructor() {\n        super();\n        try {\n            this.#consoleInsightsSetting = Common.Settings.Settings.instance().moduleSetting('console-insights-enabled');\n        }\n        catch {\n            this.#consoleInsightsSetting = undefined;\n        }\n        try {\n            this.#aiAssistanceSetting = Common.Settings.Settings.instance().moduleSetting('ai-assistance-enabled');\n        }\n        catch {\n            this.#aiAssistanceSetting = undefined;\n        }\n        this.#boundOnAidaAvailabilityChange = this.#onAidaAvailabilityChange.bind(this);\n    }\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [Input.checkboxStyles, aiSettingsTabStyles];\n        Host.AidaClient.HostConfigTracker.instance().addEventListener(\"aidaAvailabilityChanged\" /* Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED */, this.#boundOnAidaAvailabilityChange);\n        void this.#onAidaAvailabilityChange();\n    }\n    disconnectedCallback() {\n        Host.AidaClient.HostConfigTracker.instance().removeEventListener(\"aidaAvailabilityChanged\" /* Host.AidaClient.Events.AIDA_AVAILABILITY_CHANGED */, this.#boundOnAidaAvailabilityChange);\n    }\n    async #onAidaAvailabilityChange() {\n        const currentAidaAvailability = await Host.AidaClient.AidaClient.checkAccessPreconditions();\n        if (currentAidaAvailability !== this.#aidaAvailability) {\n            this.#aidaAvailability = currentAidaAvailability;\n            void this.render();\n        }\n    }\n    #getAiAssistanceSettingDescription() {\n        const config = Common.Settings.Settings.instance().getHostConfig();\n        if (config.devToolsExplainThisResourceDogfood?.enabled) {\n            if (config.devToolsAiAssistanceFileAgentDogfood?.enabled) {\n                return i18nString(UIStrings.helpUnderstandStylingNetworkAndFile);\n            }\n            return i18nString(UIStrings.helpUnderstandStylingAndNetworkRequest);\n        }\n        return i18nString(UIStrings.helpUnderstandStyling);\n    }\n    #getAiAssistanceSettingInfo() {\n        const config = Common.Settings.Settings.instance().getHostConfig();\n        if (config.devToolsExplainThisResourceDogfood?.enabled) {\n            if (config.devToolsAiAssistanceFileAgentDogfood?.enabled) {\n                return i18nString(UIStrings.explainStylingNetworkAndFile);\n            }\n            return i18nString(UIStrings.explainStylingAndNetworkRequest);\n        }\n        return i18nString(UIStrings.explainStyling);\n    }\n    #expandConsoleInsightsSetting() {\n        this.#isConsoleInsightsSettingExpanded = !this.#isConsoleInsightsSettingExpanded;\n        void this.render();\n    }\n    #toggleConsoleInsightsSetting(ev) {\n        // If the switch is being clicked, there is both a click- and a\n        // change-event. Aborting on click avoids running this method twice.\n        if (ev.target instanceof Switch.Switch.Switch && ev.type !== Switch.Switch.SwitchChangeEvent.eventName) {\n            return;\n        }\n        if (!this.#consoleInsightsSetting) {\n            return;\n        }\n        const oldSettingValue = this.#consoleInsightsSetting.get();\n        this.#consoleInsightsSetting.set(!oldSettingValue);\n        if (!oldSettingValue && !this.#isConsoleInsightsSettingExpanded) {\n            this.#isConsoleInsightsSettingExpanded = true;\n        }\n        if (oldSettingValue === false) {\n            // Allows skipping the consent reminder if the user enabled the feature via settings in the current session\n            Common.Settings.Settings.instance()\n                .createSetting('console-insights-skip-reminder', true, \"Session\" /* Common.Settings.SettingStorageType.SESSION */)\n                .set(true);\n        }\n        void this.render();\n    }\n    #expandAiAssistanceSetting() {\n        this.#isAiAssistanceSettingExpanded = !this.#isAiAssistanceSettingExpanded;\n        void this.render();\n    }\n    #toggleAiAssistanceSetting(ev) {\n        // If the switch is being clicked, there is both a click- and a\n        // change-event. Aborting on click avoids running this method twice.\n        if (ev.target instanceof Switch.Switch.Switch && ev.type !== Switch.Switch.SwitchChangeEvent.eventName) {\n            return;\n        }\n        if (!this.#aiAssistanceSetting) {\n            return;\n        }\n        const oldSettingValue = this.#aiAssistanceSetting.get();\n        this.#aiAssistanceSetting.set(!oldSettingValue);\n        if (!oldSettingValue && !this.#isAiAssistanceSettingExpanded) {\n            this.#isAiAssistanceSettingExpanded = true;\n        }\n        void this.render();\n    }\n    #renderSharedDisclaimerItem(icon, text) {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        return html `\n      <div>\n        <devtools-icon .data=${{\n            iconName: icon,\n            color: 'var(--icon-default)',\n            width: 'var(--sys-size-8)',\n            height: 'var(--sys-size-8)',\n        }}>\n        </devtools-icon>\n      </div>\n      <div>${text}</div>\n    `;\n        // clang-format on\n    }\n    #renderSharedDisclaimer() {\n        const tosLink = UI.XLink.XLink.create('https://policies.google.com/terms', i18nString(UIStrings.termsOfService), undefined, undefined, 'terms-of-service');\n        const privacyNoticeLink = UI.XLink.XLink.create('https://policies.google.com/privacy', i18nString(UIStrings.privacyNotice), undefined, undefined, 'privacy-notice');\n        const bulletPoints = [\n            { icon: 'psychiatry', text: i18nString(UIStrings.experimentalFeatures) },\n            { icon: 'google', text: i18nString(UIStrings.sendsDataToGoogle) },\n            { icon: 'calendar-today', text: i18nString(UIStrings.retainData) },\n            { icon: 'corporate-fare', text: i18nString(UIStrings.adminSettings) },\n            {\n                icon: 'policy',\n                text: html `${i18n.i18n.getFormatLocalizedString(str_, UIStrings.termsOfServicePrivacyNotice, {\n                    PH1: tosLink,\n                    PH2: privacyNoticeLink,\n                })}`,\n            },\n        ];\n        return html `\n      <div class=\"shared-disclaimer\">\n        <h2>${i18nString(UIStrings.boostYourProductivity)}</h2>\n        <h3 class=\"disclaimer-list-header\">${i18nString(UIStrings.thingsToConsider)}</h3>\n        <div class=\"disclaimer-list\">\n          ${bulletPoints.map(item => this.#renderSharedDisclaimerItem(item.icon, item.text))}\n        </div>\n      </div>\n    `;\n    }\n    #renderSettingItem(icon, text) {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        return html `\n      <div>\n        <devtools-icon .data=${{\n            iconName: icon,\n            width: 'var(--sys-size-9)',\n            height: 'var(--sys-size-9)',\n        }}>\n        </devtools-icon>\n      </div>\n      <div class=\"padded\">${text}</div>\n    `;\n        // clang-format on\n    }\n    #getDisabledReason(setting) {\n        switch (this.#aidaAvailability) {\n            case \"no-account-email\" /* Host.AidaClient.AidaAccessPreconditions.NO_ACCOUNT_EMAIL */:\n            case \"sync-is-paused\" /* Host.AidaClient.AidaAccessPreconditions.SYNC_IS_PAUSED */:\n                return i18nString(UIStrings.notLoggedIn);\n            case \"no-internet\" /* Host.AidaClient.AidaAccessPreconditions.NO_INTERNET */:\n                return i18nString(UIStrings.offline);\n        }\n        const config = Common.Settings.Settings.instance().getHostConfig();\n        if (config?.aidaAvailability?.blockedByAge === true) {\n            return i18nString(UIStrings.ageRestricted);\n        }\n        return setting?.disabledReason();\n    }\n    #renderConsoleInsightsSetting() {\n        const detailsClasses = {\n            'whole-row': true,\n            open: this.#isConsoleInsightsSettingExpanded,\n        };\n        const tabindex = this.#isConsoleInsightsSettingExpanded ? '0' : '-1';\n        const disabledReason = this.#getDisabledReason(this.#consoleInsightsSetting);\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        return html `\n      <div class=\"accordion-header\" @click=${this.#expandConsoleInsightsSetting}>\n        <div class=\"icon-container centered\">\n          <devtools-icon name=\"lightbulb-spark\"></devtools-icon>\n        </div>\n        <div class=\"setting-card\">\n          <h2>${i18n.i18n.lockedString('Console Insights')}</h2>\n          <div class=\"setting-description\">${i18nString(UIStrings.helpUnderstandConsole)}</div>\n        </div>\n        <div class=\"dropdown centered\">\n          <devtools-button\n            .data=${{\n            title: this.#isConsoleInsightsSettingExpanded ? i18nString(UIStrings.showLess) : i18nString(UIStrings.showMore),\n            size: \"SMALL\" /* Buttons.Button.Size.SMALL */,\n            iconUrl: this.#isConsoleInsightsSettingExpanded ? chevronUpIconUrl : chevronDownIconUrl,\n            variant: \"icon\" /* Buttons.Button.Variant.ICON */,\n            jslogContext: 'console-insights.accordion',\n        }}\n          ></devtools-button>\n        </div>\n      </div>\n      <div class=\"divider\"></div>\n      <div class=\"toggle-container centered\"\n        title=${ifDefined(disabledReason)}\n        @click=${this.#toggleConsoleInsightsSetting.bind(this)}\n      >\n        <devtools-switch\n          .checked=${Boolean(this.#consoleInsightsSetting?.get()) && !Boolean(disabledReason)}\n          .jslogContext=${this.#consoleInsightsSetting?.name || ''}\n          .disabled=${Boolean(disabledReason)}\n          @switchchange=${this.#toggleConsoleInsightsSetting.bind(this)}\n          aria-label=${disabledReason || i18nString(UIStrings.enableConsoleInsights)}\n        ></devtools-switch>\n      </div>\n      <div class=${classMap(detailsClasses)}>\n        <div class=\"overflow-hidden\">\n          <div class=\"expansion-grid\">\n            <h3 class=\"expansion-grid-whole-row\">${i18nString(UIStrings.whenOn)}</h3>\n            ${this.#renderSettingItem('lightbulb', i18nString(UIStrings.explainConsole))}\n            ${this.#renderSettingItem('code', i18nString(UIStrings.receiveSuggestions))}\n            <h3 class=\"expansion-grid-whole-row\">${i18nString(UIStrings.thingsToConsider)}</h3>\n            ${this.#renderSettingItem('google', i18nString(UIStrings.consoleInsightsSendsData))}\n            <div class=\"expansion-grid-whole-row\">\n              <x-link\n                href=\"https://goo.gle/devtools-console-messages-ai\"\n                class=\"link\"\n                tabindex=${tabindex}\n                jslog=${VisualLogging.link('learn-more.console-insights').track({\n            click: true,\n        })}\n              >${i18nString(UIStrings.learnMore)}</x-link>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n        // clang-format on\n    }\n    #renderAiAssistanceSetting() {\n        const detailsClasses = {\n            'whole-row': true,\n            open: this.#isAiAssistanceSettingExpanded,\n        };\n        const tabindex = this.#isAiAssistanceSettingExpanded ? '0' : '-1';\n        const disabledReason = this.#getDisabledReason(this.#aiAssistanceSetting);\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        return html `\n      <div class=\"accordion-header\" @click=${this.#expandAiAssistanceSetting}>\n        <div class=\"icon-container centered\">\n          <devtools-icon name=\"smart-assistant\"></devtools-icon>\n        </div>\n        <div class=\"setting-card\">\n          <h2>${i18n.i18n.lockedString('AI assistance')}</h2>\n          <div class=\"setting-description\">${this.#getAiAssistanceSettingDescription()}</div>\n        </div>\n        <div class=\"dropdown centered\">\n          <devtools-button\n            .data=${{\n            title: this.#isAiAssistanceSettingExpanded ? i18nString(UIStrings.showLess) : i18nString(UIStrings.showMore),\n            size: \"SMALL\" /* Buttons.Button.Size.SMALL */,\n            iconUrl: this.#isAiAssistanceSettingExpanded ? chevronUpIconUrl : chevronDownIconUrl,\n            variant: \"icon\" /* Buttons.Button.Variant.ICON */,\n            jslogContext: 'freestyler.accordion',\n        }}\n          ></devtools-button>\n        </div>\n      </div>\n      <div class=\"divider\"></div>\n      <div class=\"toggle-container centered\"\n        title=${ifDefined(disabledReason)}\n        @click=${this.#toggleAiAssistanceSetting.bind(this)}\n      >\n        <devtools-switch\n          .checked=${Boolean(this.#aiAssistanceSetting?.get()) && !Boolean(disabledReason)}\n          .jslogContext=${this.#aiAssistanceSetting?.name || ''}\n          .disabled=${Boolean(disabledReason)}\n          @switchchange=${this.#toggleAiAssistanceSetting.bind(this)}\n          aria-label=${disabledReason || i18nString(UIStrings.enableAiAssistance)}\n        ></devtools-switch>\n      </div>\n      <div class=${classMap(detailsClasses)}>\n        <div class=\"overflow-hidden\">\n          <div class=\"expansion-grid\">\n            <h3 class=\"expansion-grid-whole-row\">${i18nString(UIStrings.whenOn)}</h3>\n            ${this.#renderSettingItem('info', this.#getAiAssistanceSettingInfo())}\n            ${this.#renderSettingItem('pen-spark', i18nString(UIStrings.receiveStylingSuggestions))}\n            <h3 class=\"expansion-grid-whole-row\">${i18nString(UIStrings.thingsToConsider)}</h3>\n            ${this.#renderSettingItem('google', i18nString(UIStrings.freestylerSendsData))}\n            <div class=\"expansion-grid-whole-row\">\n              <x-link\n                href=\"https://goo.gle/devtools-ai-assistance\"\n                class=\"link\"\n                tabindex=${tabindex}\n                jslog=${VisualLogging.link('learn-more.ai-assistance').track({\n            click: true,\n        })}\n              >${i18nString(UIStrings.learnMore)}</x-link>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n        // clang-format on\n    }\n    async render() {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        LitHtml.render(html `\n      <header>\n        <h1>${i18nString(UIStrings.aiInnovations)}</h1>\n      </header>\n      <div class=\"settings-container-wrapper\" jslog=${VisualLogging.pane('chrome-ai')}>\n        ${this.#renderSharedDisclaimer()}\n        ${this.#consoleInsightsSetting || this.#aiAssistanceSetting ? html `\n          <div class=\"settings-container\">\n            ${this.#consoleInsightsSetting ? this.#renderConsoleInsightsSetting() : LitHtml.nothing}\n            ${this.#aiAssistanceSetting ? this.#renderAiAssistanceSetting() : LitHtml.nothing}\n          </div>\n        ` : LitHtml.nothing}\n      </div>\n    `, this.#shadow, { host: this });\n        // clang-format on\n    }\n}\ncustomElements.define('devtools-settings-ai-settings-tab', AISettingsTab);\n//# sourceMappingURL=AISettingsTab.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2020 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\nheader {\n  padding: 0 0 6px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  flex: none;\n  margin-bottom: 16px;\n}\n\nh1 {\n  font-size: 18px;\n  font-weight: normal;\n  padding-bottom: 3px;\n  margin: 0;\n}\n\n[role=\"list\"] {\n  overflow: auto;\n\n  > * {\n    min-width: 300px;\n  }\n}\n\n.keybinds-key {\n  padding: 0.1em 0.6em;\n  border: 1px solid var(--sys-color-neutral-outline);\n  font-size: 11px;\n  background-color: var(--sys-color-neutral-container);\n  color: var(--sys-color-on-surface);\n  box-shadow: var(--box-shadow-outline-color);\n  border-radius: 3px;\n  display: inline-block;\n  margin: 0 0.1em;\n  text-shadow: 0 1px 0 var(--sys-color-cdt-base-container);\n  line-height: 1.5;\n  white-space: nowrap;\n}\n\n.keybinds-list-item {\n  min-height: 30px;\n  display: grid;\n  grid-template-rows: repeat(auto-fit, minmax(30px, auto));\n  grid-template-columns: 1fr 30px 2fr 30px 30px;\n  flex: auto 1 1;\n}\n\n.keybinds-list-item:focus-visible {\n  background-color: var(--sys-color-tonal-container);\n}\n\n.keybinds-list-item:not(.keybinds-category-header) {\n  padding: 4px 0 4px 20px;\n  border-radius: 7px;\n}\n\n.keybinds-list-item:not(.keybinds-category-header):last-child {\n  margin-bottom: 5px;\n}\n\n.keybinds-list-item.keybinds-editing {\n  background-color: var(--sys-color-neutral-container);\n}\n\n.keybinds-list-text.keybinds-action-name {\n  padding-top: 7px;\n  grid-row: 1 / 3;\n}\n\n.keybinds-shortcut,\n.keybinds-info {\n  grid-row: auto;\n  grid-column: 3 / span 1;\n}\n\n.keybinds-shortcut.devtools-link {\n  align-items: center;\n  margin-left: 3px;\n}\n\n.keybinds-shortcut .devtools-link {\n  padding: 4px 0;\n}\n\n.keybinds-info .devtools-link {\n  padding-top: 6px;\n}\n\n.keybinds-error {\n  color: var(--sys-color-error);\n}\n\n.keybinds-list-item.keybinds-editing .keybinds-shortcut {\n  display: flex;\n}\n\n.keybinds-modified {\n  grid-column: 2 / span 1;\n  margin-top: 2px;\n}\n\n.keybinds-list-item button {\n  border: none;\n  padding: 0;\n  background: transparent;\n}\n\n.keybinds-list-item button:hover devtools-icon {\n  color: var(--icon-default-hover);\n}\n\n.keybinds-list-item button:focus-visible {\n  background-color: var(--sys-color-tonal-container);\n}\n\n.keybinds-list-item button[disabled] {\n  opacity: 40%;\n}\n\n.keybinds-cancel-button {\n  grid-column: -1 / span 1;\n}\n\n.keybinds-edit-button {\n  display: none;\n  grid-row: 1 / span 1;\n  grid-column: 4 / span 1;\n}\n\n.keybinds-list-item:not(.keybinds-editing):hover .keybinds-edit-button,\n.keybinds-list-item:not(.keybinds-editing):focus-within .keybinds-edit-button {\n  display: inline-block;\n}\n\n.keybinds-list-text {\n  padding: 3px 0;\n  user-select: none;\n  color: var(--sys-color-on-surface);\n  text-align: start;\n  position: relative;\n  margin-right: 0;\n}\n\n.keybinds-category-header {\n  font-weight: bold;\n  line-height: 30px;\n  white-space: nowrap;\n}\n\n.keybinds-category-header:not(:nth-child(2)) {\n  border-top: 1px solid var(--sys-color-divider);\n}\n\n.keybinds-list-item:not(.keybinds-category-header):hover,\n.keybinds-list-item:not(.keybinds-editing):focus-within {\n  background: var(--sys-color-state-hover-on-subtle);\n}\n\n.keybinds-set-select {\n  text-align: right;\n  margin-bottom: 16px;\n}\n\n.keybinds-set-select label p {\n  display: inline;\n  color: var(--sys-color-on-surface);\n}\n\n.keybinds-set-select select {\n  margin-left: 6px;\n  margin-top: 6px;\n}\n\nbutton.text-button {\n  width: fit-content;\n  align-self: flex-end;\n}\n\n.keybinds-list-text input {\n  margin: 0 2px;\n}\n\n.keybinds-list-text:has(.keybinds-delete-button) {\n  grid-column: 3 / -1;\n}\n\n.docs-link.devtools-link {\n  align-self: flex-start;\n  min-height: 2em;\n  line-height: 2em;\n  margin-bottom: 4px;\n}\n\n.keybinds-footer {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  min-height: fit-content;\n  margin-top: 10px;\n}\n\n/*# sourceURL=keybindsSettingsTab.css */\n`);\n\nexport default styles;\n","// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport keybindsSettingsTabStyles from './keybindsSettingsTab.css.js';\nconst UIStrings = {\n    /**\n     *@description Text for keyboard shortcuts\n     */\n    shortcuts: 'Shortcuts',\n    /**\n     *@description Text appearing before a select control offering users their choice of keyboard shortcut presets.\n     */\n    matchShortcutsFromPreset: 'Match shortcuts from preset',\n    /**\n     *@description Screen reader label for list of keyboard shortcuts in settings\n     */\n    keyboardShortcutsList: 'Keyboard shortcuts list',\n    /**\n     *@description Screen reader label for an icon denoting a shortcut that has been changed from its default\n     */\n    shortcutModified: 'Shortcut modified',\n    /**\n     *@description Screen reader label for an empty shortcut cell in custom shortcuts settings tab\n     */\n    noShortcutForAction: 'No shortcut for action',\n    /**\n     *@description Link text in the settings pane to add another shortcut for an action\n     */\n    addAShortcut: 'Add a shortcut',\n    /**\n     *@description Label for a button in the settings pane that confirms changes to a keyboard shortcut\n     */\n    confirmChanges: 'Confirm changes',\n    /**\n     *@description Label for a button in the settings pane that discards changes to the shortcut being edited\n     */\n    discardChanges: 'Discard changes',\n    /**\n     *@description Label for a button in the settings pane that removes a keyboard shortcut.\n     */\n    removeShortcut: 'Remove shortcut',\n    /**\n     *@description Label for a button in the settings pane that edits a keyboard shortcut\n     */\n    editShortcut: 'Edit shortcut',\n    /**\n     *@description Message shown in settings when the user inputs a modifier-only shortcut such as Ctrl+Shift.\n     */\n    shortcutsCannotContainOnly: 'Shortcuts cannot contain only modifier keys.',\n    /**\n     *@description Messages shown in shortcuts settings when the user inputs a shortcut that is already in use.\n     *@example {Performance} PH1\n     *@example {Start/stop recording} PH2\n     */\n    thisShortcutIsInUseByS: 'This shortcut is in use by {PH1}: {PH2}.',\n    /**\n     *@description Message shown in settings when to restore default shortcuts.\n     */\n    RestoreDefaultShortcuts: 'Restore default shortcuts',\n    /**\n     *@description Message shown in settings to show the full list of keyboard shortcuts.\n     */\n    FullListOfDevtoolsKeyboard: 'Full list of DevTools keyboard shortcuts and gestures',\n    /**\n     *@description Label for a button in the shortcut editor that resets all shortcuts for the current action.\n     */\n    ResetShortcutsForAction: 'Reset shortcuts for action',\n    /**\n     *@description Screen reader announcement for shortcut removed\n     *@example {Start/stop recording} PH1\n     */\n    shortcutRemoved: '{PH1} Shortcut removed',\n    /**\n     *@description Screen reader announcment for shortcut restored to default\n     */\n    shortcutChangesRestored: 'Changes to shortcut restored to default',\n    /**\n     *@description Screen reader announcment for applied short cut changes\n     */\n    shortcutChangesApplied: 'Changes to shortcut applied',\n    /**\n     *@description Screen reader announcment for discarded short cut changes\n     */\n    shortcutChangesDiscared: 'Changes to shortcut discarded',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/KeybindsSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class KeybindsSettingsTab extends UI.Widget.VBox {\n    items;\n    list;\n    editingItem;\n    editingRow;\n    constructor() {\n        super(true);\n        this.element.setAttribute('jslog', `${VisualLogging.pane('keybinds')}`);\n        const header = this.contentElement.createChild('header');\n        header.createChild('h1').textContent = i18nString(UIStrings.shortcuts);\n        const keybindsSetSetting = Common.Settings.Settings.instance().moduleSetting('active-keybind-set');\n        const userShortcutsSetting = Common.Settings.Settings.instance().moduleSetting('user-shortcuts');\n        keybindsSetSetting.addChangeListener(this.update, this);\n        const keybindsSetSelect = UI.SettingsUI.createControlForSetting(keybindsSetSetting, i18nString(UIStrings.matchShortcutsFromPreset));\n        if (keybindsSetSelect) {\n            keybindsSetSelect.classList.add('keybinds-set-select');\n            this.contentElement.appendChild(keybindsSetSelect);\n        }\n        this.items = new UI.ListModel.ListModel();\n        this.list = new UI.ListControl.ListControl(this.items, this, UI.ListControl.ListMode.NonViewport);\n        this.items.replaceAll(this.createListItems());\n        UI.ARIAUtils.markAsList(this.list.element);\n        this.contentElement.appendChild(this.list.element);\n        UI.ARIAUtils.setLabel(this.list.element, i18nString(UIStrings.keyboardShortcutsList));\n        const footer = this.contentElement.createChild('div');\n        footer.classList.add('keybinds-footer');\n        const docsLink = UI.XLink.XLink.create('https://developer.chrome.com/docs/devtools/shortcuts/', i18nString(UIStrings.FullListOfDevtoolsKeyboard), undefined, undefined, 'learn-more');\n        docsLink.classList.add('docs-link');\n        footer.appendChild(docsLink);\n        const restoreDefaultShortcutsButton = UI.UIUtils.createTextButton(i18nString(UIStrings.RestoreDefaultShortcuts), () => {\n            userShortcutsSetting.set([]);\n            keybindsSetSetting.set(UI.ShortcutRegistry.DefaultShortcutSetting);\n        }, { jslogContext: 'restore-default-shortcuts' });\n        footer.appendChild(restoreDefaultShortcutsButton);\n        this.editingItem = null;\n        this.editingRow = null;\n        this.update();\n    }\n    createElementForItem(item) {\n        let itemElement = document.createElement('div');\n        if (typeof item === 'string') {\n            UI.ARIAUtils.setLevel(itemElement, 1);\n            itemElement.classList.add('keybinds-category-header');\n            itemElement.textContent = UI.ActionRegistration.getLocalizedActionCategory(item);\n        }\n        else {\n            const listItem = new ShortcutListItem(item, this, item === this.editingItem);\n            itemElement = listItem.element;\n            UI.ARIAUtils.setLevel(itemElement, 2);\n            if (item === this.editingItem) {\n                this.editingRow = listItem;\n            }\n        }\n        itemElement.classList.add('keybinds-list-item');\n        UI.ARIAUtils.markAsListitem(itemElement);\n        itemElement.tabIndex = item === this.list.selectedItem() && item !== this.editingItem ? 0 : -1;\n        return itemElement;\n    }\n    commitChanges(item, editedShortcuts) {\n        for (const [originalShortcut, newDescriptors] of editedShortcuts) {\n            if (originalShortcut.type !== \"UnsetShortcut\" /* UI.KeyboardShortcut.Type.UNSET_SHORTCUT */) {\n                UI.ShortcutRegistry.ShortcutRegistry.instance().removeShortcut(originalShortcut);\n                if (!newDescriptors) {\n                    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ShortcutRemoved);\n                }\n            }\n            if (newDescriptors) {\n                UI.ShortcutRegistry.ShortcutRegistry.instance().registerUserShortcut(originalShortcut.changeKeys(newDescriptors)\n                    .changeType(\"UserShortcut\" /* UI.KeyboardShortcut.Type.USER_SHORTCUT */));\n                if (originalShortcut.type === \"UnsetShortcut\" /* UI.KeyboardShortcut.Type.UNSET_SHORTCUT */) {\n                    Host.userMetrics.actionTaken(Host.UserMetrics.Action.UserShortcutAdded);\n                }\n                else {\n                    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ShortcutModified);\n                }\n            }\n        }\n        this.stopEditing(item);\n    }\n    /**\n     * This method will never be called.\n     */\n    heightForItem(_item) {\n        return 0;\n    }\n    isItemSelectable(_item) {\n        return true;\n    }\n    selectedItemChanged(from, to, fromElement, toElement) {\n        if (fromElement) {\n            fromElement.tabIndex = -1;\n        }\n        if (toElement) {\n            if (to === this.editingItem && this.editingRow) {\n                this.editingRow.focus();\n            }\n            else {\n                toElement.tabIndex = 0;\n                if (this.list.element.hasFocus()) {\n                    toElement.focus();\n                }\n            }\n            this.setDefaultFocusedElement(toElement);\n        }\n    }\n    updateSelectedItemARIA(_fromElement, _toElement) {\n        return true;\n    }\n    startEditing(action) {\n        this.list.selectItem(action);\n        if (this.editingItem) {\n            this.stopEditing(this.editingItem);\n        }\n        UI.UIUtils.markBeingEdited(this.list.element, true);\n        this.editingItem = action;\n        this.list.refreshItem(action);\n    }\n    stopEditing(action) {\n        UI.UIUtils.markBeingEdited(this.list.element, false);\n        this.editingItem = null;\n        this.editingRow = null;\n        this.list.refreshItem(action);\n        this.focus();\n    }\n    createListItems() {\n        const actions = UI.ActionRegistry.ActionRegistry.instance().actions().sort((actionA, actionB) => {\n            if (actionA.category() < actionB.category()) {\n                return -1;\n            }\n            if (actionA.category() > actionB.category()) {\n                return 1;\n            }\n            if (actionA.id() < actionB.id()) {\n                return -1;\n            }\n            if (actionA.id() > actionB.id()) {\n                return 1;\n            }\n            return 0;\n        });\n        const items = [];\n        let currentCategory;\n        actions.forEach(action => {\n            if (action.id() === 'elements.toggle-element-search') {\n                return;\n            }\n            if (currentCategory !== action.category()) {\n                items.push(action.category());\n            }\n            items.push(action);\n            currentCategory = action.category();\n        });\n        return items;\n    }\n    onEscapeKeyPressed(event) {\n        const deepActiveElement = Platform.DOMUtilities.deepActiveElement(document);\n        if (this.editingRow && deepActiveElement && deepActiveElement.nodeName === 'INPUT') {\n            this.editingRow.onEscapeKeyPressed(event);\n        }\n    }\n    update() {\n        if (this.editingItem) {\n            this.stopEditing(this.editingItem);\n        }\n        this.list.refreshAllItems();\n        if (!this.list.selectedItem()) {\n            this.list.selectItem(this.items.at(0));\n        }\n    }\n    willHide() {\n        if (this.editingItem) {\n            this.stopEditing(this.editingItem);\n        }\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([keybindsSettingsTabStyles]);\n    }\n}\nexport class ShortcutListItem {\n    isEditing;\n    settingsTab;\n    item;\n    element;\n    editedShortcuts;\n    shortcutInputs;\n    shortcuts;\n    elementToFocus;\n    confirmButton;\n    addShortcutLinkContainer;\n    errorMessageElement;\n    secondKeyTimeout;\n    constructor(item, settingsTab, isEditing) {\n        this.isEditing = Boolean(isEditing);\n        this.settingsTab = settingsTab;\n        this.item = item;\n        this.element = document.createElement('div');\n        this.element.setAttribute('jslog', `${VisualLogging.item().context(item.id()).track({ keydown: 'Escape' })}`);\n        this.editedShortcuts = new Map();\n        this.shortcutInputs = new Map();\n        this.shortcuts = UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction(item.id());\n        this.elementToFocus = null;\n        this.confirmButton = null;\n        this.addShortcutLinkContainer = null;\n        this.errorMessageElement = null;\n        this.secondKeyTimeout = null;\n        this.update();\n    }\n    focus() {\n        if (this.elementToFocus) {\n            this.elementToFocus.focus();\n        }\n    }\n    update() {\n        this.element.removeChildren();\n        this.elementToFocus = null;\n        this.shortcutInputs.clear();\n        this.element.classList.toggle('keybinds-editing', this.isEditing);\n        this.element.createChild('div', 'keybinds-action-name keybinds-list-text').textContent = this.item.title();\n        this.shortcuts.forEach(this.createShortcutRow, this);\n        if (this.shortcuts.length === 0) {\n            this.createEmptyInfo();\n        }\n        if (this.isEditing) {\n            this.setupEditor();\n        }\n    }\n    createEmptyInfo() {\n        if (UI.ShortcutRegistry.ShortcutRegistry.instance().actionHasDefaultShortcut(this.item.id())) {\n            const icon = IconButton.Icon.create('keyboard-pen', 'keybinds-modified');\n            UI.ARIAUtils.setLabel(icon, i18nString(UIStrings.shortcutModified));\n            this.element.appendChild(icon);\n        }\n        if (!this.isEditing) {\n            const emptyElement = this.element.createChild('div', 'keybinds-shortcut keybinds-list-text');\n            UI.ARIAUtils.setLabel(emptyElement, i18nString(UIStrings.noShortcutForAction));\n            this.element.appendChild(this.createEditButton());\n        }\n    }\n    setupEditor() {\n        this.addShortcutLinkContainer = this.element.createChild('div', 'keybinds-shortcut');\n        const addShortcutButton = UI.UIUtils.createTextButton(i18nString(UIStrings.addAShortcut), this.addShortcut.bind(this), { jslogContext: 'add-shortcut' });\n        this.addShortcutLinkContainer.appendChild(addShortcutButton);\n        if (!this.elementToFocus) {\n            this.elementToFocus = addShortcutButton;\n        }\n        this.errorMessageElement = this.element.createChild('div', 'keybinds-info keybinds-error hidden');\n        UI.ARIAUtils.markAsAlert(this.errorMessageElement);\n        this.element.appendChild(this.createIconButton(i18nString(UIStrings.ResetShortcutsForAction), 'undo', '', 'undo', this.resetShortcutsToDefaults.bind(this)));\n        this.confirmButton = this.createIconButton(i18nString(UIStrings.confirmChanges), 'checkmark', 'keybinds-confirm-button', 'confirm', () => {\n            this.settingsTab.commitChanges(this.item, this.editedShortcuts);\n            UI.ARIAUtils.alert(i18nString(UIStrings.shortcutChangesApplied, { PH1: this.item.title() }));\n        });\n        this.element.appendChild(this.confirmButton);\n        this.element.appendChild(this.createIconButton(i18nString(UIStrings.discardChanges), 'cross', 'keybinds-cancel-button', 'cancel', () => {\n            this.settingsTab.stopEditing(this.item);\n            UI.ARIAUtils.alert(i18nString(UIStrings.shortcutChangesDiscared));\n        }));\n        this.element.addEventListener('keydown', event => {\n            if (Platform.KeyboardUtilities.isEscKey(event)) {\n                this.settingsTab.stopEditing(this.item);\n                event.consume(true);\n            }\n        });\n    }\n    addShortcut() {\n        const shortcut = new UI.KeyboardShortcut.KeyboardShortcut([], this.item.id(), \"UnsetShortcut\" /* UI.KeyboardShortcut.Type.UNSET_SHORTCUT */);\n        this.shortcuts.push(shortcut);\n        this.update();\n        const shortcutInput = this.shortcutInputs.get(shortcut);\n        if (shortcutInput) {\n            shortcutInput.focus();\n        }\n    }\n    createShortcutRow(shortcut, index) {\n        if (this.editedShortcuts.has(shortcut) && !this.editedShortcuts.get(shortcut)) {\n            return;\n        }\n        let icon;\n        if (shortcut.type !== \"UnsetShortcut\" /* UI.KeyboardShortcut.Type.UNSET_SHORTCUT */ && !shortcut.isDefault()) {\n            icon = IconButton.Icon.create('keyboard-pen', 'keybinds-modified');\n            UI.ARIAUtils.setLabel(icon, i18nString(UIStrings.shortcutModified));\n            this.element.appendChild(icon);\n        }\n        const shortcutElement = this.element.createChild('div', 'keybinds-shortcut keybinds-list-text');\n        if (this.isEditing) {\n            const shortcutInput = shortcutElement.createChild('input', 'harmony-input');\n            shortcutInput.setAttribute('jslog', `${VisualLogging.textField().track({ change: true })}`);\n            shortcutInput.spellcheck = false;\n            shortcutInput.maxLength = 0;\n            this.shortcutInputs.set(shortcut, shortcutInput);\n            if (!this.elementToFocus) {\n                this.elementToFocus = shortcutInput;\n            }\n            shortcutInput.value = shortcut.title();\n            const userDescriptors = this.editedShortcuts.get(shortcut);\n            if (userDescriptors) {\n                shortcutInput.value = this.shortcutInputTextForDescriptors(userDescriptors);\n            }\n            shortcutInput.addEventListener('keydown', this.onShortcutInputKeyDown.bind(this, shortcut, shortcutInput));\n            shortcutInput.addEventListener('blur', () => {\n                if (this.secondKeyTimeout !== null) {\n                    clearTimeout(this.secondKeyTimeout);\n                    this.secondKeyTimeout = null;\n                }\n            });\n            shortcutElement.appendChild(this.createIconButton(i18nString(UIStrings.removeShortcut), 'bin', 'keybinds-delete-button', 'delete', () => {\n                const index = this.shortcuts.indexOf(shortcut);\n                if (!shortcut.isDefault()) {\n                    this.shortcuts.splice(index, 1);\n                }\n                this.editedShortcuts.set(shortcut, null);\n                this.update();\n                this.focus();\n                this.validateInputs();\n                UI.ARIAUtils.alert(i18nString(UIStrings.shortcutRemoved, { PH1: this.item.title() }));\n            }));\n        }\n        else {\n            const keys = shortcut.descriptors.flatMap(descriptor => descriptor.name.split(' + '));\n            keys.forEach(key => {\n                shortcutElement.createChild('span', 'keybinds-key').textContent = key;\n            });\n            if (index === 0) {\n                this.element.appendChild(this.createEditButton());\n            }\n        }\n    }\n    createEditButton() {\n        return this.createIconButton(i18nString(UIStrings.editShortcut), 'edit', 'keybinds-edit-button', 'edit', () => this.settingsTab.startEditing(this.item));\n    }\n    createIconButton(label, iconName, className, jslogContext, listener) {\n        const button = new Buttons.Button.Button();\n        button.data = { variant: \"icon\" /* Buttons.Button.Variant.ICON */, iconName, jslogContext, title: label };\n        button.addEventListener('click', listener);\n        UI.ARIAUtils.setLabel(button, label);\n        if (className) {\n            button.classList.add(className);\n        }\n        return button;\n    }\n    onShortcutInputKeyDown(shortcut, shortcutInput, event) {\n        if (event.key !== 'Tab') {\n            const eventDescriptor = this.descriptorForEvent(event);\n            const userDescriptors = this.editedShortcuts.get(shortcut) || [];\n            this.editedShortcuts.set(shortcut, userDescriptors);\n            const isLastKeyOfShortcut = userDescriptors.length === 2 && UI.KeyboardShortcut.KeyboardShortcut.isModifier(userDescriptors[1].key);\n            const shouldClearOldShortcut = userDescriptors.length === 2 && !isLastKeyOfShortcut;\n            if (shouldClearOldShortcut) {\n                userDescriptors.splice(0, 2);\n            }\n            if (this.secondKeyTimeout) {\n                clearTimeout(this.secondKeyTimeout);\n                this.secondKeyTimeout = null;\n                userDescriptors.push(eventDescriptor);\n            }\n            else if (isLastKeyOfShortcut) {\n                userDescriptors[1] = eventDescriptor;\n            }\n            else if (!UI.KeyboardShortcut.KeyboardShortcut.isModifier(eventDescriptor.key)) {\n                userDescriptors[0] = eventDescriptor;\n                this.secondKeyTimeout = window.setTimeout(() => {\n                    this.secondKeyTimeout = null;\n                }, UI.ShortcutRegistry.KeyTimeout);\n            }\n            else {\n                userDescriptors[0] = eventDescriptor;\n            }\n            shortcutInput.value = this.shortcutInputTextForDescriptors(userDescriptors);\n            this.validateInputs();\n            event.consume(true);\n        }\n    }\n    descriptorForEvent(event) {\n        const userKey = UI.KeyboardShortcut.KeyboardShortcut.makeKeyFromEvent(event);\n        const codeAndModifiers = UI.KeyboardShortcut.KeyboardShortcut.keyCodeAndModifiersFromKey(userKey);\n        let key = UI.KeyboardShortcut.Keys[event.key] || UI.KeyboardShortcut.KeyBindings[event.key];\n        if (!key && !/^[a-z]$/i.test(event.key)) {\n            const keyCode = event.code;\n            // if we still don't have a key name, let's try the code before falling back to the raw key\n            key = UI.KeyboardShortcut.Keys[keyCode] || UI.KeyboardShortcut.KeyBindings[keyCode];\n            if (keyCode.startsWith('Digit')) {\n                key = keyCode.slice(5);\n            }\n            else if (keyCode.startsWith('Key')) {\n                key = keyCode.slice(3);\n            }\n        }\n        return UI.KeyboardShortcut.KeyboardShortcut.makeDescriptor(key || event.key, codeAndModifiers.modifiers);\n    }\n    shortcutInputTextForDescriptors(descriptors) {\n        return descriptors.map(descriptor => descriptor.name).join(' ');\n    }\n    resetShortcutsToDefaults() {\n        this.editedShortcuts.clear();\n        for (const shortcut of this.shortcuts) {\n            if (shortcut.type === \"UnsetShortcut\" /* UI.KeyboardShortcut.Type.UNSET_SHORTCUT */) {\n                const index = this.shortcuts.indexOf(shortcut);\n                this.shortcuts.splice(index, 1);\n            }\n            else if (shortcut.type === \"UserShortcut\" /* UI.KeyboardShortcut.Type.USER_SHORTCUT */) {\n                this.editedShortcuts.set(shortcut, null);\n            }\n        }\n        const disabledDefaults = UI.ShortcutRegistry.ShortcutRegistry.instance().disabledDefaultsForAction(this.item.id());\n        disabledDefaults.forEach(shortcut => {\n            if (this.shortcuts.includes(shortcut)) {\n                return;\n            }\n            this.shortcuts.push(shortcut);\n            this.editedShortcuts.set(shortcut, shortcut.descriptors);\n        });\n        this.update();\n        this.focus();\n        UI.ARIAUtils.alert(i18nString(UIStrings.shortcutChangesRestored, { PH1: this.item.title() }));\n    }\n    onEscapeKeyPressed(event) {\n        const activeElement = Platform.DOMUtilities.deepActiveElement(document);\n        for (const [shortcut, shortcutInput] of this.shortcutInputs.entries()) {\n            if (activeElement === shortcutInput) {\n                this.onShortcutInputKeyDown(shortcut, shortcutInput, event);\n            }\n        }\n    }\n    validateInputs() {\n        const confirmButton = this.confirmButton;\n        const errorMessageElement = this.errorMessageElement;\n        if (!confirmButton || !errorMessageElement) {\n            return;\n        }\n        confirmButton.disabled = false;\n        errorMessageElement.classList.add('hidden');\n        this.shortcutInputs.forEach((shortcutInput, shortcut) => {\n            const userDescriptors = this.editedShortcuts.get(shortcut);\n            if (!userDescriptors) {\n                return;\n            }\n            if (userDescriptors.some(descriptor => UI.KeyboardShortcut.KeyboardShortcut.isModifier(descriptor.key))) {\n                confirmButton.disabled = true;\n                shortcutInput.classList.add('error-input');\n                UI.ARIAUtils.setInvalid(shortcutInput, true);\n                errorMessageElement.classList.remove('hidden');\n                errorMessageElement.textContent = i18nString(UIStrings.shortcutsCannotContainOnly);\n                return;\n            }\n            const conflicts = UI.ShortcutRegistry.ShortcutRegistry.instance()\n                .actionsForDescriptors(userDescriptors)\n                .filter(actionId => actionId !== this.item.id());\n            if (conflicts.length) {\n                confirmButton.disabled = true;\n                shortcutInput.classList.add('error-input');\n                UI.ARIAUtils.setInvalid(shortcutInput, true);\n                errorMessageElement.classList.remove('hidden');\n                if (!UI.ActionRegistry.ActionRegistry.instance().hasAction(conflicts[0])) {\n                    return;\n                }\n                const action = UI.ActionRegistry.ActionRegistry.instance().getAction(conflicts[0]);\n                const actionTitle = action.title();\n                const actionCategory = action.category();\n                errorMessageElement.textContent =\n                    i18nString(UIStrings.thisShortcutIsInUseByS, { PH1: actionCategory, PH2: actionTitle });\n                return;\n            }\n            shortcutInput.classList.remove('error-input');\n            UI.ARIAUtils.setInvalid(shortcutInput, false);\n        });\n    }\n}\n//# sourceMappingURL=KeybindsSettingsTab.js.map"],"names":["styles","html","LitHtml","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","SyncSection","#shadow","#syncInfo","#syncSetting","#boundRender","#render","syncSectionStyles","data","ComponentHelpers.ScheduledRender.scheduleRender","checkboxDisabled","LitHtml.render","Common.Settings.getLocalizedSettingsCategory","renderAccountInfoOrWarning","syncInfo","settingsScreenInstance","SettingsScreen","UI.Widget.VBox","settingsLabelElement","settingsTitleElement","UI.UIUtils\n            .createShadowRootWithCoreStyles","settingsScreenStyles","UI.ARIAUtils.markAsHeading","UI.ViewManager.ViewManager","tabbedPane","keyBindsView","widget","UI.TabbedPane.Events","opts","forceNew","settingsScreen","dialog","UI.Dialog.Dialog","options","name","focusTabHeader","_locationName","event","eventData","prevTabId","tabId","Host.userMetrics","SettingsTab","id","header","UI.UIUtils.createTextChild","block","UI.ARIAUtils.markAsGroup","title","UI.ARIAUtils.setLabel","GenericSettingsTab","PanelComponents.SyncSection.SyncSection","VisualLogging.pane","explicitSectionOrder","preRegisteredSettings","Common.Settings.Settings","firstSetting","secondSetting","sectionCategory","settingsForSection","setting","restoreAndReloadButton","UI.UIUtils.createTextButton","restoreAndReload","Components.Reload.reload","UI.Context.Context","Host.InspectorFrontendHost.InspectorFrontendHostInstance","Common.Settings.moduleSetting","settings","sectionName","element","Components.Linkifier.LinkHandlerSettingUI","category","uiSectionName","sectionElement","settingRegistration","settingControl","UI.SettingsUI.createControlForSetting","Common.Settings.Setting","PanelUtils","ExperimentsSettingsTab","#experimentsSection","#unstableExperimentsSection","#inputElement","filterSection","labelElement","UI.UIUtils.createInput","UI.ARIAUtils.bindLabelToControl","filterText","experiments","Root.Runtime.experiments","unstableExperiments","e","stableExperiments","warningMessage","experiment","warning","UI.ARIAUtils.alert","subsection","message","label","UI.UIUtils.CheckboxLabel","input","listener","UI.InspectorView.InspectorView","p","experimentLink","linkButton","Buttons.Button.Button","link","UI.XLink.XLink","Root.Runtime.Experiment","ActionDelegate","context","actionId","UI.UIUtils.addReferrerToURL","Revealer","object","experimentsSettingsTab","genericSettingsTab","view","UI.ViewManager.getRegisteredViewExtensions","FrameworkIgnoreListSettingsTab","enabledSetting","enableIgnoreListing","UI.SettingsUI.createSettingCheckbox","UI.Tooltip.Tooltip","ignoreListOptions","generalExclusionGroup","automaticallyIgnoreList","automaticallyIgnoreLinkButton","customExclusionGroup","UI.ListWidget.ListWidget","placeholder","addPatternButton","enabledChanged","frameworkIgnoreListSettingsTabStyles","patterns","i","group","groupTitle","item","_editable","listSetting","checkbox","helpText","inputChanged","disabled","index","editor","isNew","list","UI.ListWidget.Editor","content","titles","fields","pattern","patternValidator","regex","SwitchChangeEvent","checked","Switch","#checked","#disabled","#jslogContext","switchStyles","isChecked","isDisabled","jslogContext","#handleChange","ev","jslog","VisualLogging.toggle","LitHtml.nothing","ifDefined","classMap","chevronDownIconUrl","chevronUpIconUrl","AISettingsTab","LegacyWrapper.LegacyWrapper.WrappableComponent","#consoleInsightsSetting","#aiAssistanceSetting","#isConsoleInsightsSettingExpanded","#isAiAssistanceSettingExpanded","#aidaAvailability","#boundOnAidaAvailabilityChange","#onAidaAvailabilityChange","Input.checkboxStyles","aiSettingsTabStyles","Host.AidaClient.HostConfigTracker","currentAidaAvailability","Host.AidaClient.AidaClient","#getAiAssistanceSettingDescription","config","#getAiAssistanceSettingInfo","#expandConsoleInsightsSetting","#toggleConsoleInsightsSetting","Switch.Switch.Switch","Switch.Switch.SwitchChangeEvent","oldSettingValue","#expandAiAssistanceSetting","#toggleAiAssistanceSetting","#renderSharedDisclaimerItem","icon","text","#renderSharedDisclaimer","tosLink","privacyNoticeLink","bulletPoints","i18n.i18n.getFormatLocalizedString","#renderSettingItem","#getDisabledReason","#renderConsoleInsightsSetting","detailsClasses","tabindex","disabledReason","i18n.i18n.lockedString","VisualLogging.link","#renderAiAssistanceSetting","KeybindsSettingsTab","keybindsSetSetting","userShortcutsSetting","keybindsSetSelect","UI.ListModel.ListModel","UI.ListControl.ListControl","UI.ListControl.ListMode","UI.ARIAUtils.markAsList","footer","docsLink","restoreDefaultShortcutsButton","UI.ShortcutRegistry.DefaultShortcutSetting","itemElement","UI.ARIAUtils.setLevel","UI.ActionRegistration.getLocalizedActionCategory","listItem","ShortcutListItem","UI.ARIAUtils.markAsListitem","editedShortcuts","originalShortcut","newDescriptors","UI.ShortcutRegistry.ShortcutRegistry","Host.UserMetrics.Action","_item","from","to","fromElement","toElement","_fromElement","_toElement","action","UI.UIUtils.markBeingEdited","actions","UI.ActionRegistry.ActionRegistry","actionA","actionB","items","currentCategory","deepActiveElement","Platform.DOMUtilities.deepActiveElement","keybindsSettingsTabStyles","settingsTab","isEditing","VisualLogging.item","IconButton.Icon.create","emptyElement","addShortcutButton","UI.ARIAUtils.markAsAlert","Platform.KeyboardUtilities.isEscKey","shortcut","UI.KeyboardShortcut.KeyboardShortcut","shortcutInput","shortcutElement","VisualLogging.textField","userDescriptors","descriptor","key","iconName","className","button","eventDescriptor","isLastKeyOfShortcut","UI.ShortcutRegistry.KeyTimeout","userKey","codeAndModifiers","UI.KeyboardShortcut.Keys","UI.KeyboardShortcut.KeyBindings","keyCode","descriptors","activeElement","confirmButton","errorMessageElement","UI.ARIAUtils.setInvalid","conflicts","actionTitle","actionCategory"],"mappings":"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"}