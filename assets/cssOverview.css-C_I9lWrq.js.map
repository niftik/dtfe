{"version":3,"file":"cssOverview.css-C_I9lWrq.js","sources":["../../ui/legacy/components/color_picker/ColorFormatSpec.js","../../ui/legacy/components/color_picker/ContrastDetails.js","../../ui/legacy/components/color_picker/ContrastInfo.js","../../ui/legacy/components/color_picker/ContrastOverlay.js","../../ui/legacy/components/color_picker/FormatPickerContextMenu.js","../../ui/components/srgb_overlay/srgbOverlay.css.js","../../ui/components/srgb_overlay/SrgbOverlay.js","../../ui/legacy/components/color_picker/spectrum.css.js","../../ui/legacy/components/color_picker/Spectrum.js","../../panels/css_overview/CSSOverviewUnusedDeclarations.js","../../panels/css_overview/CSSOverviewModel.js","../../panels/css_overview/cssOverviewProcessingView.css.js","../../panels/css_overview/CSSOverviewProcessingView.js","../../panels/css_overview/cssOverviewCompletedView.css.js","../../panels/css_overview/cssOverviewSidebarPanel.css.js","../../panels/css_overview/CSSOverviewSidebarPanel.js","../../panels/css_overview/CSSOverviewCompletedView.js","../../panels/css_overview/components/cssOverviewStartView.css.js","../../panels/css_overview/components/CSSOverviewStartView.js","../../panels/css_overview/cssOverview.css.js"],"sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../../core/common/common.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nconst roundAndStringify = (arr) => arr.map(el => Platform.StringUtilities.stringifyWithPrecision(el, 2));\nconst functionParamsText = (values) => {\n    return `${values[0]} ${values[1]} ${values[2]} / ${values[3]}`;\n};\nexport const colorFormatSpec = {\n    [\"rgb\" /* Common.Color.Format.RGB */]: {\n        label: 'RGBA',\n        toValues: function (color) {\n            return roundAndStringify(color.as(\"rgba\" /* Common.Color.Format.RGBA */).canonicalRGBA());\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`rgb(${functionParamsText(values)})`);\n        },\n    },\n    [\"hsl\" /* Common.Color.Format.HSL */]: {\n        label: 'HSLA',\n        toValues: function (color) {\n            const canonicalHslParams = roundAndStringify(color.as(\"hsla\" /* Common.Color.Format.HSLA */).canonicalHSLA());\n            canonicalHslParams[1] = canonicalHslParams[1] + '%';\n            canonicalHslParams[2] = canonicalHslParams[2] + '%';\n            return canonicalHslParams;\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`hsl(${functionParamsText(values)})`);\n        },\n    },\n    [\"hwb\" /* Common.Color.Format.HWB */]: {\n        label: 'HWBA',\n        toValues: function (color) {\n            const canonicalHwbParams = roundAndStringify(color.as(\"hwba\" /* Common.Color.Format.HWBA */).canonicalHWBA());\n            canonicalHwbParams[1] = canonicalHwbParams[1] + '%';\n            canonicalHwbParams[2] = canonicalHwbParams[2] + '%';\n            return canonicalHwbParams;\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`hwb(${functionParamsText(values)})`);\n        },\n    },\n    [\"lch\" /* Common.Color.Format.LCH */]: {\n        label: 'lchA',\n        toValues: function (color) {\n            const lchColor = color.as(\"lch\" /* Common.Color.Format.LCH */);\n            return roundAndStringify([lchColor.l, lchColor.c, lchColor.h, lchColor.alpha ?? 1]);\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`lch(${functionParamsText(values)})`);\n        },\n    },\n    [\"oklch\" /* Common.Color.Format.OKLCH */]: {\n        label: 'lchA',\n        toValues: function (color) {\n            const lchColor = color.as(\"oklch\" /* Common.Color.Format.OKLCH */);\n            return roundAndStringify([lchColor.l, lchColor.c, lchColor.h, lchColor.alpha ?? 1]);\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`oklch(${functionParamsText(values)})`);\n        },\n    },\n    [\"lab\" /* Common.Color.Format.LAB */]: {\n        label: 'labA',\n        toValues: function (color) {\n            const labColor = color.as(\"lab\" /* Common.Color.Format.LAB */);\n            return roundAndStringify([labColor.l, labColor.a, labColor.b, labColor.alpha ?? 1]);\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`lab(${functionParamsText(values)})`);\n        },\n    },\n    [\"oklab\" /* Common.Color.Format.OKLAB */]: {\n        label: 'labA',\n        toValues: function (color) {\n            const labColor = color.as(\"oklab\" /* Common.Color.Format.OKLAB */);\n            return roundAndStringify([labColor.l, labColor.a, labColor.b, labColor.alpha ?? 1]);\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`oklab(${functionParamsText(values)})`);\n        },\n    },\n    [\"srgb\" /* Common.Color.Format.SRGB */]: {\n        label: 'RGBA',\n        toValues: function (color) {\n            const srgbColor = color.as(\"srgb\" /* Common.Color.Format.SRGB */);\n            return roundAndStringify([srgbColor.p0, srgbColor.p1, srgbColor.p2, srgbColor.alpha ?? 1]);\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`color(${\"srgb\" /* Common.Color.Format.SRGB */} ${functionParamsText(values)})`);\n        },\n    },\n    [\"srgb-linear\" /* Common.Color.Format.SRGB_LINEAR */]: {\n        label: 'RGBA',\n        toValues: function (color) {\n            const srgbLinearColor = color.as(\"srgb-linear\" /* Common.Color.Format.SRGB_LINEAR */);\n            return roundAndStringify([srgbLinearColor.p0, srgbLinearColor.p1, srgbLinearColor.p2, srgbLinearColor.alpha ?? 1]);\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`color(${\"srgb-linear\" /* Common.Color.Format.SRGB_LINEAR */} ${functionParamsText(values)})`);\n        },\n    },\n    [\"display-p3\" /* Common.Color.Format.DISPLAY_P3 */]: {\n        label: 'RGBA',\n        toValues(color) {\n            const displayP3Color = color.as(\"display-p3\" /* Common.Color.Format.DISPLAY_P3 */);\n            return roundAndStringify([displayP3Color.p0, displayP3Color.p1, displayP3Color.p2, 1]);\n        },\n        fromValues(values) {\n            return Common.Color.parse(`color(${\"display-p3\" /* Common.Color.Format.DISPLAY_P3 */} ${functionParamsText(values)})`);\n        },\n    },\n    [\"a98-rgb\" /* Common.Color.Format.A98_RGB */]: {\n        label: 'RGBA',\n        toValues: function (color) {\n            const a98Color = color.as(\"a98-rgb\" /* Common.Color.Format.A98_RGB */);\n            return roundAndStringify([a98Color.p0, a98Color.p1, a98Color.p2, a98Color.alpha ?? 1]);\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`color(${\"a98-rgb\" /* Common.Color.Format.A98_RGB */} ${functionParamsText(values)})`);\n        },\n    },\n    [\"prophoto-rgb\" /* Common.Color.Format.PROPHOTO_RGB */]: {\n        label: 'RGBA',\n        toValues: function (color) {\n            const proPhotoRGBColor = color.as(\"prophoto-rgb\" /* Common.Color.Format.PROPHOTO_RGB */);\n            return roundAndStringify([proPhotoRGBColor.p0, proPhotoRGBColor.p1, proPhotoRGBColor.p2, proPhotoRGBColor.alpha ?? 1]);\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`color(${\"prophoto-rgb\" /* Common.Color.Format.PROPHOTO_RGB */} ${functionParamsText(values)})`);\n        },\n    },\n    [\"rec2020\" /* Common.Color.Format.REC_2020 */]: {\n        label: 'RGBA',\n        toValues: function (color) {\n            const rec2020Color = color.as(\"rec2020\" /* Common.Color.Format.REC_2020 */);\n            return roundAndStringify([rec2020Color.p0, rec2020Color.p1, rec2020Color.p2, rec2020Color.alpha ?? 1]);\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`color(${\"rec2020\" /* Common.Color.Format.REC_2020 */} ${functionParamsText(values)})`);\n        },\n    },\n    [\"xyz\" /* Common.Color.Format.XYZ */]: {\n        label: 'xyzA',\n        toValues: function (color) {\n            const xyzColor = color.as(\"xyz\" /* Common.Color.Format.XYZ */);\n            return roundAndStringify([xyzColor.p0, xyzColor.p1, xyzColor.p2, xyzColor.alpha ?? 1]);\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`color(${\"xyz\" /* Common.Color.Format.XYZ */} ${functionParamsText(values)})`);\n        },\n    },\n    [\"xyz-d50\" /* Common.Color.Format.XYZ_D50 */]: {\n        label: 'xyzA',\n        toValues: function (color) {\n            const xyzColor = color.as(\"xyz-d50\" /* Common.Color.Format.XYZ_D50 */);\n            return roundAndStringify([xyzColor.p0, xyzColor.p1, xyzColor.p2, xyzColor.alpha ?? 1]);\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`color(${\"xyz-d50\" /* Common.Color.Format.XYZ_D50 */} ${functionParamsText(values)})`);\n        },\n    },\n    [\"xyz-d65\" /* Common.Color.Format.XYZ_D65 */]: {\n        label: 'xyzA',\n        toValues: function (color) {\n            const xyzColor = color.as(\"xyz-d65\" /* Common.Color.Format.XYZ_D65 */);\n            return roundAndStringify([xyzColor.p0, xyzColor.p1, xyzColor.p2, xyzColor.alpha ?? 1]);\n        },\n        fromValues: function (values) {\n            return Common.Color.parse(`color(${\"xyz-d65\" /* Common.Color.Format.XYZ_D65 */} ${functionParamsText(values)})`);\n        },\n    },\n};\n//# sourceMappingURL=ColorFormatSpec.js.map","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Root from '../../../../core/root/root.js';\nimport * as IconButton from '../../../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../legacy.js';\nconst UIStrings = {\n    /**\n     *@description Label for when no contrast information is available in the color picker\n     */\n    noContrastInformationAvailable: 'No contrast information available',\n    /**\n     *@description Text of a DOM element in Contrast Details of the Color Picker\n     */\n    contrastRatio: 'Contrast ratio',\n    /**\n     *@description Text to show more content\n     */\n    showMore: 'Show more',\n    /**\n     *@description Choose bg color text content in Contrast Details of the Color Picker\n     */\n    pickBackgroundColor: 'Pick background color',\n    /**\n     *@description Tooltip text that appears when hovering over largeicon eyedropper button in Contrast Details of the Color Picker\n     */\n    toggleBackgroundColorPicker: 'Toggle background color picker',\n    /**\n     *@description Text of a button in Contrast Details of the Color Picker\n     *@example {rgba(0 0 0 / 100%) } PH1\n     */\n    useSuggestedColorStoFixLow: 'Use suggested color {PH1}to fix low contrast',\n    /**\n     *@description Label for the APCA contrast in Color Picker\n     */\n    apca: 'APCA',\n    /**\n     *@description Label aa text content in Contrast Details of the Color Picker\n     */\n    aa: 'AA',\n    /**\n     *@description Text that starts with a colon and includes a placeholder\n     *@example {3.0} PH1\n     */\n    placeholderWithColon: ': {PH1}',\n    /**\n     *@description Label aaa text content in Contrast Details of the Color Picker\n     */\n    aaa: 'AAA',\n    /**\n     *@description Text to show less content\n     */\n    showLess: 'Show less',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/color_picker/ContrastDetails.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ContrastDetails extends Common.ObjectWrapper.ObjectWrapper {\n    contrastInfo;\n    elementInternal;\n    toggleMainColorPicker;\n    expandedChangedCallback;\n    colorSelectedCallback;\n    expandedInternal;\n    passesAA;\n    contrastUnknown;\n    visibleInternal;\n    noContrastInfoAvailable;\n    contrastValueBubble;\n    contrastValue;\n    contrastValueBubbleIcons;\n    expandButton;\n    expandedDetails;\n    contrastThresholds;\n    contrastAA;\n    contrastPassFailAA;\n    contrastAAA;\n    contrastPassFailAAA;\n    contrastAPCA;\n    contrastPassFailAPCA;\n    chooseBgColor;\n    bgColorPickerButton;\n    bgColorPickedBound;\n    bgColorSwatch;\n    constructor(contrastInfo, contentElement, toggleMainColorPickerCallback, expandedChangedCallback, colorSelectedCallback) {\n        super();\n        this.contrastInfo = contrastInfo;\n        this.elementInternal = contentElement.createChild('div', 'spectrum-contrast-details collapsed');\n        this.toggleMainColorPicker = toggleMainColorPickerCallback;\n        this.expandedChangedCallback = expandedChangedCallback;\n        this.colorSelectedCallback = colorSelectedCallback;\n        this.expandedInternal = false;\n        this.passesAA = true;\n        this.contrastUnknown = false;\n        // This will not be visible if we don't get ContrastInfo,\n        // e.g. for a non-font color property such as border-color.\n        this.visibleInternal = false;\n        // No contrast info message is created to show if it's not possible to provide the extended details.\n        this.noContrastInfoAvailable = contentElement.createChild('div', 'no-contrast-info-available');\n        this.noContrastInfoAvailable.textContent = i18nString(UIStrings.noContrastInformationAvailable);\n        this.noContrastInfoAvailable.classList.add('hidden');\n        const contrastValueRow = this.elementInternal.createChild('div');\n        contrastValueRow.addEventListener('click', this.topRowClicked.bind(this));\n        const contrastValueRowContents = contrastValueRow.createChild('div', 'container');\n        UI.UIUtils.createTextChild(contrastValueRowContents, i18nString(UIStrings.contrastRatio));\n        this.contrastValueBubble = contrastValueRowContents.createChild('span', 'contrast-details-value');\n        this.contrastValue = this.contrastValueBubble.createChild('span');\n        this.contrastValueBubbleIcons = [];\n        this.contrastValueBubbleIcons.push(this.contrastValueBubble.appendChild(IconButton.Icon.create('checkmark')));\n        this.contrastValueBubbleIcons.push(this.contrastValueBubble.appendChild(IconButton.Icon.create('check-double')));\n        this.contrastValueBubbleIcons.push(this.contrastValueBubble.appendChild(IconButton.Icon.create('clear')));\n        this.contrastValueBubbleIcons.forEach(button => button.addEventListener('click', (event) => {\n            ContrastDetails.showHelp();\n            event.consume(false);\n        }));\n        const expandToolbar = new UI.Toolbar.Toolbar('expand', contrastValueRowContents);\n        this.expandButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.showMore), 'chevron-down');\n        this.expandButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.expandButtonClicked.bind(this));\n        UI.ARIAUtils.setExpanded(this.expandButton.element, false);\n        expandToolbar.appendToolbarItem(this.expandButton);\n        this.expandedDetails = this.elementInternal.createChild('div', 'expanded-details');\n        UI.ARIAUtils.setControls(this.expandButton.element, this.expandedDetails);\n        this.contrastThresholds = this.expandedDetails.createChild('div', 'contrast-thresholds');\n        this.contrastAA = this.contrastThresholds.createChild('div', 'contrast-threshold');\n        this.contrastPassFailAA = this.contrastAA.createChild('div', 'contrast-pass-fail');\n        this.contrastAAA = this.contrastThresholds.createChild('div', 'contrast-threshold');\n        this.contrastPassFailAAA = this.contrastAAA.createChild('div', 'contrast-pass-fail');\n        this.contrastAPCA = this.contrastThresholds.createChild('div', 'contrast-threshold');\n        this.contrastPassFailAPCA = this.contrastAPCA.createChild('div', 'contrast-pass-fail');\n        this.chooseBgColor = this.expandedDetails.createChild('div', 'contrast-choose-bg-color');\n        this.chooseBgColor.textContent = i18nString(UIStrings.pickBackgroundColor);\n        const bgColorContainer = this.expandedDetails.createChild('div', 'background-color');\n        const pickerToolbar = new UI.Toolbar.Toolbar('spectrum-eye-dropper', bgColorContainer);\n        this.bgColorPickerButton = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleBackgroundColorPicker), 'color-picker', 'color-picker-filled');\n        this.bgColorPickerButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.toggleBackgroundColorPickerInternal.bind(this, undefined, true));\n        pickerToolbar.appendToolbarItem(this.bgColorPickerButton);\n        this.bgColorPickedBound = this.bgColorPicked.bind(this);\n        this.bgColorSwatch = new Swatch(bgColorContainer);\n        this.contrastInfo.addEventListener(\"ContrastInfoUpdated\" /* ContrastInfoEvents.CONTRAST_INFO_UPDATED */, this.update.bind(this));\n    }\n    showNoContrastInfoAvailableMessage() {\n        this.noContrastInfoAvailable.classList.remove('hidden');\n    }\n    hideNoContrastInfoAvailableMessage() {\n        this.noContrastInfoAvailable.classList.add('hidden');\n    }\n    computeSuggestedColor(threshold) {\n        const fgColor = this.contrastInfo.color();\n        const bgColor = this.contrastInfo.bgColor();\n        if (!fgColor || !bgColor) {\n            return;\n        }\n        if (threshold === 'APCA') {\n            const requiredContrast = this.contrastInfo.contrastRatioAPCAThreshold();\n            if (requiredContrast === null) {\n                return;\n            }\n            // We add 1% to the min required contrast to make sure we are over the limit.\n            return Common.Color.findFgColorForContrastAPCA(fgColor, bgColor, requiredContrast + 1);\n        }\n        const requiredContrast = this.contrastInfo.contrastRatioThreshold(threshold);\n        if (!requiredContrast) {\n            return;\n        }\n        // We add a bit to the required contrast to make sure we are over the limit.\n        return Common.Color.findFgColorForContrast(fgColor, bgColor, requiredContrast + 0.1);\n    }\n    onSuggestColor(threshold) {\n        const color = this.computeSuggestedColor(threshold);\n        if (color) {\n            this.colorSelectedCallback(color);\n        }\n    }\n    createFixColorButton(parent, suggestedColor) {\n        const button = parent.createChild('button', 'contrast-fix-button');\n        const formattedColor = suggestedColor.asString(this.contrastInfo.colorFormat());\n        const suggestedColorString = formattedColor ? formattedColor + ' ' : '';\n        const label = i18nString(UIStrings.useSuggestedColorStoFixLow, { PH1: suggestedColorString });\n        UI.ARIAUtils.setLabel(button, label);\n        UI.Tooltip.Tooltip.install(button, label);\n        button.tabIndex = 0;\n        button.style.backgroundColor = suggestedColorString;\n        return button;\n    }\n    update() {\n        if (this.contrastInfo.isNull()) {\n            this.showNoContrastInfoAvailableMessage();\n            this.setVisible(false);\n            return;\n        }\n        this.setVisible(true);\n        this.hideNoContrastInfoAvailableMessage();\n        const isAPCAEnabled = Root.Runtime.experiments.isEnabled('apca');\n        const fgColor = this.contrastInfo.color();\n        const bgColor = this.contrastInfo.bgColor();\n        if (isAPCAEnabled) {\n            const apcaContrastRatio = this.contrastInfo.contrastRatioAPCA();\n            if (apcaContrastRatio === null || !bgColor || !fgColor) {\n                this.contrastUnknown = true;\n                this.contrastValue.textContent = '';\n                this.contrastValueBubble.classList.add('contrast-unknown');\n                this.chooseBgColor.classList.remove('hidden');\n                this.contrastThresholds.classList.add('hidden');\n                this.showNoContrastInfoAvailableMessage();\n                return;\n            }\n            this.contrastUnknown = false;\n            this.chooseBgColor.classList.add('hidden');\n            this.contrastThresholds.classList.remove('hidden');\n            this.contrastValueBubble.classList.remove('contrast-unknown');\n            this.contrastValue.textContent = `${Platform.NumberUtilities.floor(apcaContrastRatio, 2)}%`;\n            const apcaThreshold = this.contrastInfo.contrastRatioAPCAThreshold();\n            const passesAPCA = apcaContrastRatio && apcaThreshold ? Math.abs(apcaContrastRatio) >= apcaThreshold : false;\n            this.contrastPassFailAPCA.removeChildren();\n            const labelAPCA = this.contrastPassFailAPCA.createChild('span', 'contrast-link-label');\n            labelAPCA.textContent = i18nString(UIStrings.apca);\n            if (apcaThreshold !== null) {\n                this.contrastPassFailAPCA.createChild('span').textContent = `: ${apcaThreshold.toFixed(2)}%`;\n            }\n            if (passesAPCA) {\n                const iconCheckmark = new IconButton.Icon.Icon();\n                iconCheckmark\n                    .data = { iconName: 'checkmark', color: 'var(--icon-checkmark-green)', width: '20px', height: '14px' };\n                this.contrastPassFailAPCA.appendChild(iconCheckmark);\n            }\n            else {\n                const iconNo = new IconButton.Icon.Icon();\n                iconNo.data = { iconName: 'clear', color: 'var(--icon-error)', width: '14px', height: '14px' };\n                this.contrastPassFailAPCA.appendChild(iconNo);\n                const suggestedColor = this.computeSuggestedColor('APCA');\n                if (suggestedColor) {\n                    const fixAPCA = this.createFixColorButton(this.contrastPassFailAPCA, suggestedColor);\n                    fixAPCA.addEventListener('click', () => this.onSuggestColor('APCA'));\n                }\n            }\n            labelAPCA.addEventListener('click', (_event) => ContrastDetails.showHelp());\n            this.elementInternal.classList.toggle('contrast-fail', !passesAPCA);\n            this.contrastValueBubble.classList.toggle('contrast-aa', passesAPCA);\n            this.bgColorSwatch.setColors(fgColor, bgColor);\n            return;\n        }\n        const contrastRatio = this.contrastInfo.contrastRatio();\n        if (!contrastRatio || !bgColor || !fgColor) {\n            this.contrastUnknown = true;\n            this.contrastValue.textContent = '';\n            this.contrastValueBubble.classList.add('contrast-unknown');\n            this.chooseBgColor.classList.remove('hidden');\n            this.contrastThresholds.classList.add('hidden');\n            this.showNoContrastInfoAvailableMessage();\n            return;\n        }\n        this.contrastUnknown = false;\n        this.chooseBgColor.classList.add('hidden');\n        this.contrastThresholds.classList.remove('hidden');\n        this.contrastValueBubble.classList.remove('contrast-unknown');\n        this.contrastValue.textContent = String(Platform.NumberUtilities.floor(contrastRatio, 2));\n        this.bgColorSwatch.setColors(fgColor, bgColor);\n        // In greater then comparisons we can substite null with 0.\n        const aa = this.contrastInfo.contrastRatioThreshold('aa') || 0;\n        this.passesAA = (this.contrastInfo.contrastRatio() || 0) >= aa;\n        this.contrastPassFailAA.removeChildren();\n        const labelAA = this.contrastPassFailAA.createChild('span', 'contrast-link-label');\n        labelAA.textContent = i18nString(UIStrings.aa);\n        this.contrastPassFailAA.createChild('span').textContent =\n            i18nString(UIStrings.placeholderWithColon, { PH1: aa.toFixed(1) });\n        if (this.passesAA) {\n            const iconCheckmark = new IconButton.Icon.Icon();\n            iconCheckmark.data = { iconName: 'checkmark', color: 'var(--icon-checkmark-green)', width: '20px', height: '14px' };\n            this.contrastPassFailAA.appendChild(iconCheckmark);\n        }\n        else {\n            const iconNo = new IconButton.Icon.Icon();\n            iconNo.data = { iconName: 'clear', color: 'var(--icon-error)', width: '14px', height: '14px' };\n            this.contrastPassFailAA.appendChild(iconNo);\n            const suggestedColor = this.computeSuggestedColor('aa');\n            if (suggestedColor) {\n                const fixAA = this.createFixColorButton(this.contrastPassFailAA, suggestedColor);\n                fixAA.addEventListener('click', () => this.onSuggestColor('aa'));\n            }\n        }\n        // In greater then comparisons we can substite null with 0.\n        const aaa = this.contrastInfo.contrastRatioThreshold('aaa') || 0;\n        const passesAAA = (this.contrastInfo.contrastRatio() || 0) >= aaa;\n        this.contrastPassFailAAA.removeChildren();\n        const labelAAA = this.contrastPassFailAAA.createChild('span', 'contrast-link-label');\n        labelAAA.textContent = i18nString(UIStrings.aaa);\n        this.contrastPassFailAAA.createChild('span').textContent =\n            i18nString(UIStrings.placeholderWithColon, { PH1: aaa.toFixed(1) });\n        if (passesAAA) {\n            const iconCheckmark = new IconButton.Icon.Icon();\n            iconCheckmark.data = { iconName: 'checkmark', color: 'var(--icon-checkmark-green)', width: '20px', height: '14px' };\n            this.contrastPassFailAAA.appendChild(iconCheckmark);\n        }\n        else {\n            const iconNo = new IconButton.Icon.Icon();\n            iconNo.data = { iconName: 'clear', color: 'var(--icon-error)', width: '14px', height: '14px' };\n            this.contrastPassFailAAA.appendChild(iconNo);\n            const suggestedColor = this.computeSuggestedColor('aaa');\n            if (suggestedColor) {\n                const fixAAA = this.createFixColorButton(this.contrastPassFailAAA, suggestedColor);\n                fixAAA.addEventListener('click', () => this.onSuggestColor('aaa'));\n            }\n        }\n        [labelAA, labelAAA].forEach(e => e.addEventListener('click', () => ContrastDetails.showHelp()));\n        this.elementInternal.classList.toggle('contrast-fail', !this.passesAA);\n        // show checkmark icon when passes AA, but not AAA\n        this.contrastValueBubble.classList.toggle('contrast-aa', this.passesAA && !passesAAA);\n        this.contrastValueBubble.classList.toggle('contrast-aaa', passesAAA);\n    }\n    static showHelp() {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(UI.UIUtils.addReferrerToURL('https://web.dev/color-and-contrast-accessibility/'));\n    }\n    setVisible(visible) {\n        this.visibleInternal = visible;\n        this.elementInternal.classList.toggle('hidden', !visible);\n    }\n    visible() {\n        return this.visibleInternal;\n    }\n    element() {\n        return this.elementInternal;\n    }\n    expandButtonClicked() {\n        const selection = this.contrastValueBubble.getComponentSelection();\n        if (selection) {\n            selection.empty();\n        }\n        this.toggleExpanded();\n    }\n    topRowClicked(event) {\n        const selection = this.contrastValueBubble.getComponentSelection();\n        if (selection) {\n            selection.empty();\n        }\n        this.toggleExpanded();\n        event.consume(true);\n    }\n    toggleExpanded() {\n        this.expandedInternal = !this.expandedInternal;\n        UI.ARIAUtils.setExpanded(this.expandButton.element, this.expandedInternal);\n        this.elementInternal.classList.toggle('collapsed', !this.expandedInternal);\n        if (this.expandedInternal) {\n            this.toggleMainColorPicker(false);\n            this.expandButton.setGlyph('chevron-up');\n            this.expandButton.setTitle(i18nString(UIStrings.showLess));\n            if (this.contrastUnknown) {\n                this.toggleBackgroundColorPickerInternal(true);\n            }\n        }\n        else {\n            this.toggleBackgroundColorPickerInternal(false);\n            this.expandButton.setGlyph('chevron-down');\n            this.expandButton.setTitle(i18nString(UIStrings.showMore));\n        }\n        this.expandedChangedCallback();\n    }\n    collapse() {\n        this.elementInternal.classList.remove('expanded');\n        this.toggleBackgroundColorPickerInternal(false);\n        this.toggleMainColorPicker(false);\n    }\n    expanded() {\n        return this.expandedInternal;\n    }\n    backgroundColorPickerEnabled() {\n        return this.bgColorPickerButton.isToggled();\n    }\n    toggleBackgroundColorPicker(enabled) {\n        this.toggleBackgroundColorPickerInternal(enabled, false);\n    }\n    toggleBackgroundColorPickerInternal(enabled, shouldTriggerEvent = true) {\n        if (enabled === undefined) {\n            enabled = this.bgColorPickerButton.isToggled();\n        }\n        if (shouldTriggerEvent) {\n            this.dispatchEventToListeners(\"BackgroundColorPickerWillBeToggled\" /* Events.BACKGROUND_COLOR_PICKER_WILL_BE_TOGGLED */, enabled);\n        }\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.setEyeDropperActive(enabled);\n        if (enabled) {\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(Host.InspectorFrontendHostAPI.Events.EyeDropperPickedColor, this.bgColorPickedBound);\n        }\n        else {\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(Host.InspectorFrontendHostAPI.Events.EyeDropperPickedColor, this.bgColorPickedBound);\n        }\n    }\n    bgColorPicked({ data: rgbColor, }) {\n        const rgba = [rgbColor.r, rgbColor.g, rgbColor.b, (rgbColor.a / 2.55 | 0) / 100];\n        const color = Common.Color.Legacy.fromRGBA(rgba);\n        this.contrastInfo.setBgColor(color);\n        this.toggleBackgroundColorPickerInternal(false);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n    }\n}\nexport class Swatch {\n    parentElement;\n    swatchElement;\n    swatchInnerElement;\n    textPreview;\n    constructor(parentElement) {\n        this.parentElement = parentElement;\n        this.swatchElement = parentElement.createChild('span', 'swatch contrast swatch-inner-white');\n        this.swatchInnerElement = this.swatchElement.createChild('span', 'swatch-inner');\n        this.textPreview = this.swatchElement.createChild('div', 'text-preview');\n        this.textPreview.textContent = 'Aa';\n    }\n    setColors(fgColor, bgColor) {\n        this.textPreview.style.color = fgColor.asString(\"rgba\" /* Common.Color.Format.RGBA */);\n        this.swatchInnerElement.style.backgroundColor = bgColor.asString(\"rgba\" /* Common.Color.Format.RGBA */);\n        // Show border if the swatch is white.\n        this.swatchElement.classList.toggle('swatch-inner-white', bgColor.as(\"hsl\" /* Common.Color.Format.HSL */).l > 0.9);\n    }\n}\n//# sourceMappingURL=ContrastDetails.js.map","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../../core/common/common.js';\nexport class ContrastInfo extends Common.ObjectWrapper.ObjectWrapper {\n    isNullInternal;\n    contrastRatioInternal;\n    contrastRatioAPCAInternal;\n    contrastRatioThresholds;\n    contrastRationAPCAThreshold;\n    fgColor;\n    bgColorInternal;\n    colorFormatInternal;\n    constructor(contrastInfo) {\n        super();\n        this.isNullInternal = true;\n        this.contrastRatioInternal = null;\n        this.contrastRatioAPCAInternal = null;\n        this.contrastRatioThresholds = null;\n        this.contrastRationAPCAThreshold = 0;\n        this.fgColor = null;\n        this.bgColorInternal = null;\n        if (!contrastInfo) {\n            return;\n        }\n        if (!contrastInfo.computedFontSize || !contrastInfo.computedFontWeight || !contrastInfo.backgroundColors ||\n            contrastInfo.backgroundColors.length !== 1) {\n            return;\n        }\n        this.isNullInternal = false;\n        this.contrastRatioThresholds =\n            Common.ColorUtils.getContrastThreshold(contrastInfo.computedFontSize, contrastInfo.computedFontWeight);\n        this.contrastRationAPCAThreshold =\n            Common.ColorUtils.getAPCAThreshold(contrastInfo.computedFontSize, contrastInfo.computedFontWeight);\n        const bgColorText = contrastInfo.backgroundColors[0];\n        const bgColor = Common.Color.parse(bgColorText)?.asLegacyColor();\n        if (bgColor) {\n            this.setBgColorInternal(bgColor);\n        }\n    }\n    isNull() {\n        return this.isNullInternal;\n    }\n    setColor(fgColor, colorFormat) {\n        this.fgColor = fgColor;\n        this.colorFormatInternal = colorFormat;\n        this.updateContrastRatio();\n        this.dispatchEventToListeners(\"ContrastInfoUpdated\" /* Events.CONTRAST_INFO_UPDATED */);\n    }\n    colorFormat() {\n        return this.colorFormatInternal;\n    }\n    color() {\n        return this.fgColor;\n    }\n    contrastRatio() {\n        return this.contrastRatioInternal;\n    }\n    contrastRatioAPCA() {\n        return this.contrastRatioAPCAInternal;\n    }\n    contrastRatioAPCAThreshold() {\n        return this.contrastRationAPCAThreshold;\n    }\n    setBgColor(bgColor) {\n        this.setBgColorInternal(bgColor);\n        this.dispatchEventToListeners(\"ContrastInfoUpdated\" /* Events.CONTRAST_INFO_UPDATED */);\n    }\n    setBgColorInternal(bgColor) {\n        this.bgColorInternal = bgColor;\n        if (!this.fgColor) {\n            return;\n        }\n        const fgRGBA = this.fgColor.rgba();\n        // If we have a semi-transparent background color over an unknown\n        // background, draw the line for the \"worst case\" scenario: where\n        // the unknown background is the same color as the text.\n        if (bgColor.hasAlpha()) {\n            const blendedRGBA = Common.ColorUtils.blendColors(bgColor.rgba(), fgRGBA);\n            this.bgColorInternal = new Common.Color.Legacy(blendedRGBA, \"rgba\" /* Common.Color.Format.RGBA */);\n        }\n        this.contrastRatioInternal = Common.ColorUtils.contrastRatio(fgRGBA, this.bgColorInternal.rgba());\n        this.contrastRatioAPCAInternal =\n            Common.ColorUtils.contrastRatioAPCA(this.fgColor.rgba(), this.bgColorInternal.rgba());\n    }\n    bgColor() {\n        return this.bgColorInternal;\n    }\n    updateContrastRatio() {\n        if (!this.bgColorInternal || !this.fgColor) {\n            return;\n        }\n        this.contrastRatioInternal = Common.ColorUtils.contrastRatio(this.fgColor.rgba(), this.bgColorInternal.rgba());\n        this.contrastRatioAPCAInternal =\n            Common.ColorUtils.contrastRatioAPCA(this.fgColor.rgba(), this.bgColorInternal.rgba());\n    }\n    contrastRatioThreshold(level) {\n        if (!this.contrastRatioThresholds) {\n            return null;\n        }\n        return this.contrastRatioThresholds[level];\n    }\n}\n//# sourceMappingURL=ContrastInfo.js.map","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../../core/common/common.js';\nimport * as Root from '../../../../core/root/root.js';\nimport * as UI from '../../legacy.js';\nexport class ContrastOverlay {\n    contrastInfo;\n    visible;\n    contrastRatioSVG;\n    contrastRatioLines;\n    width;\n    height;\n    contrastRatioLineBuilder;\n    contrastRatioLinesThrottler;\n    drawContrastRatioLinesBound;\n    constructor(contrastInfo, colorElement) {\n        this.contrastInfo = contrastInfo;\n        this.visible = false;\n        this.contrastRatioSVG = UI.UIUtils.createSVGChild(colorElement, 'svg', 'spectrum-contrast-container fill');\n        this.contrastRatioLines = new Map();\n        if (Root.Runtime.experiments.isEnabled('apca')) {\n            this.contrastRatioLines.set('APCA', UI.UIUtils.createSVGChild(this.contrastRatioSVG, 'path', 'spectrum-contrast-line'));\n        }\n        else {\n            this.contrastRatioLines.set('aa', UI.UIUtils.createSVGChild(this.contrastRatioSVG, 'path', 'spectrum-contrast-line'));\n            this.contrastRatioLines.set('aaa', UI.UIUtils.createSVGChild(this.contrastRatioSVG, 'path', 'spectrum-contrast-line'));\n        }\n        this.width = 0;\n        this.height = 0;\n        this.contrastRatioLineBuilder = new ContrastRatioLineBuilder(this.contrastInfo);\n        this.contrastRatioLinesThrottler = new Common.Throttler.Throttler(0);\n        this.drawContrastRatioLinesBound = this.drawContrastRatioLines.bind(this);\n        this.contrastInfo.addEventListener(\"ContrastInfoUpdated\" /* Events.CONTRAST_INFO_UPDATED */, this.update.bind(this));\n    }\n    update() {\n        if (!this.visible || this.contrastInfo.isNull()) {\n            return;\n        }\n        if (Root.Runtime.experiments.isEnabled('apca') && this.contrastInfo.contrastRatioAPCA() === null) {\n            return;\n        }\n        if (!this.contrastInfo.contrastRatio()) {\n            return;\n        }\n        void this.contrastRatioLinesThrottler.schedule(this.drawContrastRatioLinesBound);\n    }\n    setDimensions(width, height) {\n        this.width = width;\n        this.height = height;\n        this.update();\n    }\n    setVisible(visible) {\n        this.visible = visible;\n        this.contrastRatioSVG.classList.toggle('hidden', !visible);\n        this.update();\n    }\n    async drawContrastRatioLines() {\n        for (const [level, element] of this.contrastRatioLines) {\n            const path = this.contrastRatioLineBuilder.drawContrastRatioLine(this.width, this.height, level);\n            if (path) {\n                element.setAttribute('d', path);\n            }\n            else {\n                element.removeAttribute('d');\n            }\n        }\n    }\n}\nexport class ContrastRatioLineBuilder {\n    contrastInfo;\n    constructor(contrastInfo) {\n        this.contrastInfo = contrastInfo;\n    }\n    drawContrastRatioLine(width, height, level) {\n        const isAPCA = Root.Runtime.experiments.isEnabled('apca');\n        const requiredContrast = isAPCA ? this.contrastInfo.contrastRatioAPCAThreshold() : this.contrastInfo.contrastRatioThreshold(level);\n        if (!width || !height || requiredContrast === null) {\n            return null;\n        }\n        const dS = 0.02;\n        const H = 0;\n        const S = 1;\n        const V = 2;\n        const A = 3;\n        const color = this.contrastInfo.color();\n        const bgColor = this.contrastInfo.bgColor();\n        if (!color || !bgColor) {\n            return null;\n        }\n        const fgRGBA = color.rgba();\n        const fgHSVA = color.as(\"hsl\" /* Common.Color.Format.HSL */).hsva();\n        const bgRGBA = bgColor.rgba();\n        const bgLuminance = Common.ColorUtils.luminance(bgRGBA);\n        let blendedRGBA = Common.ColorUtils.blendColors(fgRGBA, bgRGBA);\n        const fgLuminance = Common.ColorUtils.luminance(blendedRGBA);\n        const fgIsLighter = fgLuminance > bgLuminance;\n        const desiredLuminance = isAPCA ?\n            Common.ColorUtils.desiredLuminanceAPCA(bgLuminance, requiredContrast, fgIsLighter) :\n            Common.Color.desiredLuminance(bgLuminance, requiredContrast, fgIsLighter);\n        if (isAPCA &&\n            Math.abs(Math.round(Common.ColorUtils.contrastRatioByLuminanceAPCA(desiredLuminance, bgLuminance))) <\n                requiredContrast) {\n            return null;\n        }\n        let lastV = fgHSVA[V];\n        let currentSlope = 0;\n        const candidateHSVA = [fgHSVA[H], 0, 0, fgHSVA[A]];\n        let pathBuilder = [];\n        const candidateRGBA = Common.Color.hsva2rgba(candidateHSVA);\n        blendedRGBA = Common.ColorUtils.blendColors(candidateRGBA, bgRGBA);\n        let candidateLuminance = (candidateHSVA) => {\n            return Common.ColorUtils.luminance(Common.ColorUtils.blendColors(Common.Color.Legacy.fromHSVA(candidateHSVA).rgba(), bgRGBA));\n        };\n        if (Root.Runtime.experiments.isEnabled('apca')) {\n            candidateLuminance = (candidateHSVA) => {\n                return Common.ColorUtils.luminanceAPCA(Common.ColorUtils.blendColors(Common.Color.Legacy.fromHSVA(candidateHSVA).rgba(), bgRGBA));\n            };\n        }\n        // Plot V for values of S such that the computed luminance approximates\n        // `desiredLuminance`, until no suitable value for V can be found, or the\n        // current value of S goes of out bounds.\n        let s;\n        for (s = 0; s < 1 + dS; s += dS) {\n            s = Math.min(1, s);\n            candidateHSVA[S] = s;\n            // Extrapolate the approximate next value for `v` using the approximate\n            // gradient of the curve.\n            candidateHSVA[V] = lastV + currentSlope * dS;\n            const v = Common.Color.approachColorValue(candidateHSVA, bgRGBA, V, desiredLuminance, candidateLuminance);\n            if (v === null) {\n                break;\n            }\n            // Approximate the current gradient of the curve.\n            currentSlope = s === 0 ? 0 : (v - lastV) / dS;\n            lastV = v;\n            pathBuilder.push(pathBuilder.length ? 'L' : 'M');\n            pathBuilder.push((s * width).toFixed(2));\n            pathBuilder.push(((1 - v) * height).toFixed(2));\n        }\n        // If no suitable V value for an in-bounds S value was found, find the value\n        // of S such that V === 1 and add that to the path.\n        if (s < 1 + dS) {\n            s -= dS;\n            candidateHSVA[V] = 1;\n            s = Common.Color.approachColorValue(candidateHSVA, bgRGBA, S, desiredLuminance, candidateLuminance);\n            if (s !== null) {\n                pathBuilder = pathBuilder.concat(['L', (s * width).toFixed(2), '-0.1']);\n            }\n        }\n        if (pathBuilder.length === 0) {\n            return null;\n        }\n        return pathBuilder.join(' ');\n    }\n}\n//# sourceMappingURL=ContrastOverlay.js.map","// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as IconButton from '../../../components/icon_button/icon_button.js';\nimport * as UI from '../../legacy.js';\nconst UIStrings = {\n    /**\n     *@description Tooltip text describing that a color was clipped after conversion to match the target gamut\n     *@example {rgb(255 255 255)} PH1\n     */\n    colorClippedTooltipText: 'This color was clipped to match the format\\'s gamut. The actual result was {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/color_picker/FormatPickerContextMenu.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class FormatPickerContextMenu {\n    #color;\n    constructor(color) {\n        this.#color = color;\n    }\n    async show(e, onSelect) {\n        let resolveShowPromise = undefined;\n        const showPromise = new Promise(resolve => {\n            resolveShowPromise = resolve;\n        });\n        const legacyFormats = [\n            \"hex\" /* Common.Color.Format.HEX */,\n            \"hexa\" /* Common.Color.Format.HEXA */,\n            \"rgb\" /* Common.Color.Format.RGB */,\n            \"rgba\" /* Common.Color.Format.RGBA */,\n            \"hsl\" /* Common.Color.Format.HSL */,\n            \"hwb\" /* Common.Color.Format.HWB */,\n        ];\n        const modernFormats = [\n            \"lch\" /* Common.Color.Format.LCH */,\n            \"oklch\" /* Common.Color.Format.OKLCH */,\n            \"lab\" /* Common.Color.Format.LAB */,\n            \"oklab\" /* Common.Color.Format.OKLAB */,\n            \"srgb\" /* Common.Color.Format.SRGB */,\n            \"srgb-linear\" /* Common.Color.Format.SRGB_LINEAR */,\n            \"display-p3\" /* Common.Color.Format.DISPLAY_P3 */,\n            \"a98-rgb\" /* Common.Color.Format.A98_RGB */,\n            \"prophoto-rgb\" /* Common.Color.Format.PROPHOTO_RGB */,\n            \"rec2020\" /* Common.Color.Format.REC_2020 */,\n            \"xyz\" /* Common.Color.Format.XYZ */,\n            \"xyz-d50\" /* Common.Color.Format.XYZ_D50 */,\n            \"xyz-d65\" /* Common.Color.Format.XYZ_D65 */,\n        ];\n        const menu = new UI.ContextMenu.ContextMenu(e, { onSoftMenuClosed: () => resolveShowPromise?.() });\n        const legacySection = menu.section('legacy');\n        const wideSection = menu.section('wide');\n        const colorFunctionSection = menu.section('color-function').appendSubMenuItem('color()', false, 'color').section();\n        if (!(this.#color instanceof Common.Color.Nickname)) {\n            const nickname = this.#color.asLegacyColor().nickname();\n            if (nickname) {\n                this.addColorToSection(nickname, legacySection, onSelect);\n            }\n        }\n        if (!(this.#color instanceof Common.Color.ShortHex)) {\n            const shortHex = this.#color.as((this.#color.alpha ?? 1) === 1 ? \"hex\" /* Common.Color.Format.HEX */ : \"hexa\" /* Common.Color.Format.HEXA */)\n                .shortHex();\n            if (shortHex) {\n                this.addColorToSection(shortHex, legacySection, onSelect);\n            }\n        }\n        for (const format of [...legacyFormats, ...modernFormats]) {\n            if (format === this.#color.format()) {\n                continue;\n            }\n            const newColor = this.#color.as(format);\n            const section = legacyFormats.includes(format) ? legacySection :\n                newColor instanceof Common.Color.ColorFunction ? colorFunctionSection :\n                    wideSection;\n            this.addColorToSection(newColor, section, onSelect);\n        }\n        await menu.show();\n        await showPromise;\n    }\n    addColorToSection(newColor, section, onSelect) {\n        if (newColor instanceof Common.Color.Legacy) {\n            const originalHasAlpha = (this.#color.alpha ?? 1) !== 1;\n            const isAlphaFormat = newColor.alpha !== null;\n            // When the original color has alpha, only print alpha legacy formats. Otherwise, only print non-alpha legacy\n            // formats.\n            if (isAlphaFormat !== originalHasAlpha) {\n                return;\n            }\n        }\n        const label = newColor.asString();\n        if (!label) {\n            return;\n        }\n        let icon = undefined;\n        if (newColor.isGamutClipped()) {\n            icon = new IconButton.Icon.Icon();\n            icon.data = {\n                iconName: 'warning',\n                color: 'var(--icon-default)',\n                width: '16px',\n                height: '16px',\n            };\n            icon.style.marginLeft = '1px';\n            icon.style.marginTop = '-1px';\n            icon.style.minWidth = '16px';\n            icon.style.minHeight = '16px';\n        }\n        const tooltip = icon ? i18nString(UIStrings.colorClippedTooltipText, { PH1: newColor.getAsRawString() ?? 'none' }) : undefined;\n        const handler = () => onSelect(newColor);\n        section.appendItem(label, handler, { additionalElement: icon, tooltip, jslogContext: newColor.isGamutClipped() ? 'color' : 'clipped-color' });\n    }\n}\n//# sourceMappingURL=FormatPickerContextMenu.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n:host {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.gamut-line {\n  /* We want to show 50% white color in all themes since this is drawn over a color rectangle */\n  stroke: color-mix(in sRGB, var(--ref-palette-neutral100) 50%, transparent); /* stylelint-disable-line plugin/use_theme_colors */\n  fill: none;\n}\n\n.label {\n  position: absolute;\n  bottom: 3px;\n  margin-right: 5px;\n  /* We want to show 50% white color in all themes since this is drawn over a color rectangle */\n  color: color-mix(in sRGB, var(--ref-palette-neutral100) 50%, transparent); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n/*# sourceURL=srgbOverlay.css */\n`);\n\nexport default styles;\n","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../core/common/common.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport srgbOverlayStyles from './srgbOverlay.css.js';\nconst { html } = LitHtml;\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\nconst SRGB_LABEL_HEIGHT = 10;\nconst SRGB_LABEL_BOTTOM = 3;\nconst SRGB_TEXT_UPPER_POINT_FROM_BOTTOM = SRGB_LABEL_HEIGHT + SRGB_LABEL_BOTTOM;\nconst EPSILON = 0.001;\n// TODO(crbug.com/1409892): Use `Color` class here for a better code (and not duplicate isInGamut logic here)\nfunction isColorInSrgbGamut(hsv) {\n    const rgba = Common.Color.hsva2rgba([...hsv, 1]);\n    const xyzd50 = Common.ColorConverter.ColorConverter.displayP3ToXyzd50(rgba[0], rgba[1], rgba[2]);\n    const srgb = Common.ColorConverter.ColorConverter.xyzd50ToSrgb(xyzd50[0], xyzd50[1], xyzd50[2]);\n    return srgb.every(val => val + EPSILON >= 0 && val - EPSILON <= 1);\n}\nexport class SrgbOverlay extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    constructor() {\n        super();\n        this.#shadow.adoptedStyleSheets = [\n            srgbOverlayStyles,\n        ];\n    }\n    #getLinePoints({ hue, width, height }) {\n        if (width === 0 || height === 0) {\n            return null;\n        }\n        const step = 1 / window.devicePixelRatio;\n        const linePoints = [];\n        let x = 0;\n        for (let y = 0; y < height; y += step) {\n            const value = 1 - (y / height);\n            for (; x < width; x += step) {\n                const saturation = x / width;\n                if (!isColorInSrgbGamut([hue, saturation, value])) {\n                    linePoints.push({ x, y });\n                    break;\n                }\n            }\n        }\n        if (linePoints.length === 0) {\n            return null;\n        }\n        const lastPoint = linePoints[linePoints.length - 1];\n        if (lastPoint.x < width) {\n            linePoints.push({\n                y: lastPoint.y,\n                x: width,\n            });\n        }\n        return linePoints;\n    }\n    #closestPointAtHeight(points, atHeight) {\n        let min = Infinity;\n        let closestPoint = null;\n        for (const point of points) {\n            if (Math.abs(atHeight - point.y) <= min) {\n                min = Math.abs(atHeight - point.y);\n                closestPoint = point;\n            }\n        }\n        return closestPoint;\n    }\n    render({ hue, width, height }) {\n        return coordinator.write('Srgb Overlay render', () => {\n            const points = this.#getLinePoints({ hue, width, height });\n            if (!points || points.length === 0) {\n                return;\n            }\n            const closestPoint = this.#closestPointAtHeight(points, height - SRGB_TEXT_UPPER_POINT_FROM_BOTTOM);\n            if (!closestPoint) {\n                return;\n            }\n            LitHtml.render(html `\n          <span class=\"label\" style=\"right: ${width - closestPoint.x}px\">sRGB</span>\n          <svg>\n            <polyline points=${points.map(point => `${point.x.toFixed(2)},${point.y.toFixed(2)}`).join(' ')} class=\"gamut-line\" />\n          </svg>\n        `, this.#shadow, { host: this });\n        });\n    }\n}\ncustomElements.define('devtools-spectrum-srgb-overlay', SrgbOverlay);\n//# sourceMappingURL=SrgbOverlay.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n/* https://github.com/bgrins/spectrum */\n\n:host {\n  width: 232px;\n  height: 319px;\n  user-select: none;\n  overflow: hidden;\n}\n\n:selection {\n  background-color: var(--sys-color-tonal-container);\n  color: var(--sys-color-on-tonal-container);\n}\n\n.spectrum-color {\n  position: relative;\n  width: 232px;\n  height: 127px;\n  border-radius: 2px 2px 0 0;\n  overflow: hidden;\n  flex: none;\n  touch-action: none;\n}\n\n.spectrum-dragger,\n.spectrum-slider {\n  user-select: none;\n}\n\n.spectrum-dragger {\n  border-radius: 12px;\n  height: 12px;\n  width: 12px;\n  border: 1px solid var(--sys-color-surface);\n  cursor: move;\n  z-index: 1;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background: var(--sys-color-inverse-surface);\n  box-shadow: var(--drop-shadow);\n}\n\n.spectrum-slider {\n  position: absolute;\n  top: -1px;\n  cursor: ew-resize;\n  width: 13px;\n  height: 13px;\n  border-radius: 13px;\n  background-color: var(--sys-color-neutral-container);\n  box-shadow: var(--drop-shadow);\n}\n\n.spectrum-color:focus .spectrum-dragger {\n  border: 1px solid var(--sys-color-state-focus-ring);\n}\n\n.spectrum-tools {\n  position: relative;\n  height: 110px;\n  width: 100%;\n  flex: none;\n}\n\n.spectrum-hue {\n  top: 16px;\n  background: linear-gradient(to left, #f00 0%, #ff0 17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n.spectrum-hue.display-p3 {\n  background: linear-gradient(to left, color(display-p3 1 0 0) 0%, color(display-p3 1 1 0) 17%, color(display-p3 0 1 0) 33%, color(display-p3 0 1 1) 50%, color(display-p3 0 0 1) 67%, color(display-p3 1 0 1) 83%, color(display-p3 1 0 0) 100%); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n.spectrum-alpha {\n  top: 35px;\n  background-image: var(--image-file-checker);\n  background-size: 12px 11px;\n}\n\n.spectrum-alpha-background {\n  height: 100%;\n  border-radius: 2px;\n}\n\n.spectrum-hue,\n.spectrum-alpha {\n  position: absolute;\n  left: 86px;\n  width: 130px;\n  height: 11px;\n  border-radius: 2px;\n  touch-action: none;\n}\n\n.spectrum-hue:focus-visible .spectrum-slider,\n.spectrum-alpha:focus-visible .spectrum-slider {\n  border: 1px solid var(--sys-color-state-focus-ring);\n  width: 14px;\n  height: 14px;\n  border-radius: 14px;\n}\n\n.spectrum-sat,\n.-theme-preserve {\n  background-image: linear-gradient(to right, #fff, rgb(204 154 129 / 0%)); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n.spectrum-val,\n.-theme-preserve {\n  background-image: linear-gradient(to top, #000, rgb(204 154 129 / 0%)); /* stylelint-disable-line plugin/use_theme_colors */\n}\n\n.spectrum-contrast-details {\n  position: relative;\n  background-color: var(--sys-color-cdt-base-container);\n  width: 100%;\n  height: 83px;\n  top: 0;\n  font-size: 13px;\n  color: var(--sys-color-on-surface);\n  border-top: 1px solid var(--sys-color-divider);\n  line-height: initial;\n  overflow: hidden;\n  flex: none;\n}\n\n.spectrum-contrast-details.collapsed {\n  height: 36px;\n  flex: none;\n}\n\n.spectrum-contrast-details div.toolbar.expand {\n  position: absolute;\n  right: 6px;\n  top: 6px;\n  margin: 0;\n}\n\n.spectrum-contrast-details.visible {\n  display: initial;\n}\n\n.spectrum-contrast-details div.container {\n  margin: 10px;\n}\n\n.spectrum-contrast-details .expanded-details {\n  display: flex;\n  margin: 12px 12px 0 4px;\n}\n\n.spectrum-contrast-details.collapsed .expanded-details {\n  display: none;\n}\n\n.contrast-pass-fail {\n  margin-left: 0.5em;\n  display: flex;\n  align-items: center;\n}\n\n.contrast-choose-bg-color {\n  margin: 8px 0 0 5px;\n  font-style: italic;\n}\n\n.spectrum-contrast-details .contrast-choose-bg-color,\n.spectrum-contrast-details .contrast-thresholds {\n  width: 150px;\n}\n\n.contrast-threshold:first-child {\n  margin-bottom: 5px;\n}\n\n.contrast-fix-button {\n  cursor: pointer;\n  font-size: 13px;\n  padding: 0;\n  margin: 0 0 0 10px;\n  background: 0;\n  width: 12px;\n  height: 12px;\n  border: 1px solid var(--sys-color-neutral-outline);\n  display: inline-block;\n  position: relative;\n}\n\n.contrast-fix-button::after {\n  content: \" \";\n  width: 13px;\n  height: 13px;\n  background-image: var(--image-file-refresh);\n  background-size: contain;\n  position: absolute;\n  left: 5.5px;\n  top: 3.5px;\n  background-color: var(--sys-color-cdt-base-container);\n  border-radius: 50%;\n}\n\n.contrast-fix-button:hover,\n.contrast-fix-button:focus {\n  border: 1px solid var(--sys-color-state-focus-ring);\n  transform: scale(1.2);\n}\n\n.contrast-link-label {\n  cursor: pointer;\n}\n\n.contrast-link-label:hover {\n  text-decoration: underline;\n}\n\n.spectrum-contrast-details .background-color {\n  position: absolute;\n  flex: none;\n  right: 12px;\n}\n\n.spectrum-eye-dropper {\n  width: 32px;\n  height: 24px;\n  position: relative;\n  left: 8px;\n  top: 17px;\n  cursor: pointer;\n}\n\n.spectrum-contrast-details .spectrum-eye-dropper {\n  top: 2px;\n  right: 34px;\n  position: absolute;\n  left: auto;\n}\n\n.contrast-details-value {\n  color: var(--sys-color-on-surface);\n  margin: 1px 5px;\n  user-select: text;\n}\n\n.contrast-pass-fail devtools-icon {\n  margin-left: 5px;\n}\n\n.contrast-details-value devtools-icon {\n  display: none;\n  margin-left: 5px;\n  color: var(--sys-color-on-surface);\n}\n\n.spectrum-contrast-details .toolbar-state-on devtools-icon {\n  color: var(--sys-color-token-subtle);\n}\n\ndevtools-icon.clear {\n  transform: scale(0.7);\n  color: var(--icon-error);\n}\n\ndevtools-icon.checkmark,\ndevtools-icon.check-double {\n  color: var(--icon-checkmark-green);\n}\n\n.spectrum-contrast-details .contrast-details-value.contrast-unknown {\n  background-color: var(--sys-color-cdt-base-container);\n  color: var(--sys-color-on-surface);\n  width: 3em;\n  text-align: center;\n}\n\n.contrast-details-value .clear,\n.contrast-details-value .checkmark,\n.contrast-details-value .check-double {\n  cursor: pointer;\n  vertical-align: -5px;\n}\n\n.spectrum-contrast-details.contrast-fail .contrast-details-value .clear,\n.contrast-details-value.contrast-aa .checkmark,\n.contrast-details-value.contrast-aaa .check-double {\n  display: inline-block;\n}\n\n.swatch {\n  width: 32px;\n  height: 32px;\n  margin: 0;\n  position: absolute;\n  top: 15px;\n  left: 44px;\n  background-image: var(--image-file-checker);\n  border-radius: 16px;\n}\n\n.swatch-inner,\n.swatch-overlay {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: inline-block;\n  border-radius: 16px;\n}\n\n.swatch-inner-white {\n  border: 1px solid var(--sys-color-neutral-outline);\n}\n\n.swatch-overlay {\n  cursor: pointer;\n  opacity: 0%;\n  padding: 4px;\n}\n\n.swatch-overlay:hover,\n.swatch-overlay:focus-visible {\n  background-color: var(--color-background-inverted-opacity-30);\n  opacity: 100%;\n}\n\n.swatch-overlay:active {\n  background-color: var(--color-background-inverted-opacity-50);\n}\n\ndevtools-icon.copy-color-icon {\n  color: var(--sys-color-cdt-base-container);\n  margin-top: 2px;\n  margin-left: 2px;\n}\n\n.spectrum-text {\n  position: absolute;\n  top: 60px;\n  left: 16px;\n}\n\n.spectrum-text-value {\n  display: inline-block;\n  width: 40px;\n  overflow: hidden;\n  text-align: center;\n  margin-right: 6px;\n  line-height: 20px;\n  padding: 0;\n  color: var(--sys-color-on-surface);\n  border: 1px solid var(--sys-color-neutral-outline);\n  white-space: nowrap;\n}\n\n.spectrum-text-label {\n  letter-spacing: 39.5px;\n  margin-top: 8px;\n  display: block;\n  color: var(--sys-color-state-disabled);\n  margin-left: 16px;\n  width: 174px;\n}\n\n.spectrum-text-hex > .spectrum-text-value {\n  width: 178px;\n}\n\n.spectrum-text-hex > .spectrum-text-label {\n  letter-spacing: normal;\n  margin-left: 0;\n  text-align: center;\n}\n\n.spectrum-switcher {\n  border-radius: 2px;\n  height: 20px;\n  width: 20px;\n  padding: 2px;\n  border: none;\n  background: none;\n  margin: 0;\n}\n\n.spectrum-display-switcher {\n  top: 72px;\n  position: absolute;\n  right: 10px;\n}\n\n.spectrum-switcher:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.spectrum-switcher:focus-visible {\n  background-color: var(--sys-color-state-focus-highlight);\n}\n\n.spectrum-palette-container {\n  border-top: 1px solid var(--sys-color-divider);\n  position: relative;\n  width: 100%;\n  padding: 6px 24px 6px 6px;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.spectrum-palette {\n  display: flex;\n  flex-wrap: wrap;\n  width: 198px;\n}\n\n.spectrum-palette-color {\n  width: 12px;\n  height: 12px;\n  flex: 0 0 12px;\n  border-radius: 2px;\n  margin: 6px;\n  cursor: pointer;\n  position: relative;\n  border: 1px solid var(--sys-color-divider);\n  background-position: -1px !important; /* stylelint-disable-line declaration-no-important */\n  z-index: 14;\n}\n\n.spectrum-palette-color-shadow {\n  position: absolute;\n  opacity: 0%;\n  margin: 0;\n  top: -5px;\n  left: 3px;\n  border: 0;\n  border-radius: 1px;\n  width: 11px;\n  height: 11px;\n}\n\n.spectrum-palette-color:hover:not(.spectrum-shades-shown) > .spectrum-palette-color-shadow,\n.spectrum-palette-color:focus:not(.spectrum-shades-shown) > .spectrum-palette-color-shadow {\n  opacity: 20%;\n}\n\n.spectrum-palette-color:hover:not(.spectrum-shades-shown) > .spectrum-palette-color-shadow:first-child,\n.spectrum-palette-color:focus:not(.spectrum-shades-shown) > .spectrum-palette-color-shadow:first-child {\n  opacity: 60%;\n  top: -3px;\n  left: 1px;\n}\n\n.palette-color-shades {\n  position: absolute;\n  background-color: var(--sys-color-cdt-base-container);\n  height: 228px;\n  width: 28px;\n  box-shadow: var(--drop-shadow);\n  z-index: 14;\n  border-radius: 2px;\n  transform-origin: 0 228px;\n  margin-top: 16px;\n  margin-left: -8px;\n}\n\n.spectrum-palette > .spectrum-palette-color.spectrum-shades-shown {\n  z-index: 15;\n}\n\n.palette-color-shades > .spectrum-palette-color {\n  margin: 8px 0 0;\n  margin-left: 8px;\n  width: 12px;\n}\n\n.spectrum-palette > .spectrum-palette-color {\n  transition: transform 100ms cubic-bezier(0, 0, 0.2, 1);\n  will-change: transform;\n  z-index: 13;\n}\n\n.palette-preview > .spectrum-palette-color {\n  margin-top: 1px;\n}\n\n.spectrum-palette > .spectrum-palette-color.empty-color {\n  border-color: transparent;\n}\n\n.spectrum-palette-color:not(.has-material-shades):focus {\n  border: 1px solid var(--sys-color-state-focus-ring);\n  transform: scale(1.4);\n}\n\n.palette-color-shades > .spectrum-palette-color:not(.empty-color):hover,\n.spectrum-palette > .spectrum-palette-color:not(.empty-color):not(.has-material-shades):hover {\n  transform: scale(1.15);\n}\n\n.add-color-toolbar {\n  margin-left: -3px;\n  margin-top: -1px;\n}\n\n.spectrum-palette-switcher {\n  right: 10px;\n  top: 0;\n  margin-top: 9px;\n  position: absolute;\n}\n\n.palette-panel {\n  width: 100%;\n  position: absolute;\n  top: 100%;\n  display: flex;\n  flex-direction: column;\n  background-color: var(--sys-color-cdt-base-container);\n  z-index: 14;\n  transition: transform 200ms cubic-bezier(0, 0, 0.2, 1), visibility 0s 200ms;\n  border-top: 1px solid var(--sys-color-divider);\n  visibility: hidden;\n}\n\n.palette-panel-showing > .palette-panel {\n  transform: translateY(-100%);\n  transition-delay: 0s;\n  visibility: visible;\n}\n\n.palette-panel > div.toolbar {\n  position: absolute;\n  right: 6px;\n  top: 6px;\n}\n\n.palette-panel > div:not(.toolbar) {\n  flex: 0 0 38px;\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding: 12px;\n  line-height: 14px;\n  color: var(--sys-color-on-surface);\n}\n\n.palette-panel > div.palette-title {\n  font-size: 14px;\n  line-height: 16px;\n  color: var(--sys-color-on-surface);\n  flex-basis: 40px;\n}\n\ndiv.palette-preview {\n  display: flex;\n  cursor: pointer;\n}\n\n.palette-preview-title {\n  flex: 0 0 84px;\n}\n\n.palette-preview:focus-visible,\n.palette-preview:hover {\n  background-color: var(--sys-color-state-hover-on-subtle);\n}\n\n.spectrum-overlay {\n  z-index: 13;\n  visibility: hidden;\n  background-color: hsl(0deg 0% 0% / 50%); /* stylelint-disable-line plugin/use_theme_colors */\n  /* See: crbug.com/1152736 for color variable migration. */\n  opacity: 0%;\n  transition: opacity 100ms cubic-bezier(0, 0, 0.2, 1), visibility 0s 100ms;\n}\n\n.palette-panel-showing > .spectrum-overlay {\n  transition-delay: 0s;\n  visibility: visible;\n  opacity: 100%;\n}\n\n.spectrum-contrast-container {\n  width: 100%;\n  height: 100%;\n}\n\n.spectrum-contrast-line,\n:host-context(.theme-with-dark-background) .spectrum-contrast-line {\n  fill: none;\n  stroke: #fff; /* stylelint-disable-line plugin/use_theme_colors */\n  opacity: 70%;\n  stroke-width: 1.5px;\n}\n\n.delete-color-toolbar {\n  position: absolute;\n  right: 0;\n  top: 0;\n  background-color: var(--sys-color-cdt-base-container);\n  visibility: hidden;\n  z-index: 3;\n  width: 36px;\n  display: flex;\n  align-items: center;\n  padding-left: 4px;\n  bottom: 2px;\n  border-bottom-right-radius: 2px;\n}\n\n@keyframes showDeleteToolbar {\n  from {\n    opacity: 0%;\n  }\n\n  to {\n    opacity: 100%;\n  }\n}\n\n.delete-color-toolbar.dragging {\n  visibility: visible;\n  animation: showDeleteToolbar 100ms 150ms cubic-bezier(0, 0, 0.2, 1) backwards;\n}\n\n.delete-color-toolbar-active {\n  background-color: var(--sys-color-state-hover-on-subtle);\n  color: var(--sys-color-cdt-base-container);\n}\n\n.swatch.contrast {\n  width: 30px;\n  height: 30px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  left: auto;\n  background-image: var(--image-file-checker);\n  border-radius: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.swatch.contrast .swatch-overlay {\n  padding: 0;\n}\n\n.background-color .text-preview {\n  color: var(--sys-color-inverse-surface);\n  font-size: 16px;\n  position: relative;\n  padding-bottom: 2px;\n}\n\n.swatch.contrast devtools-icon {\n  margin: -2px;\n}\n\n.no-contrast-info-available {\n  border-top: 1px solid var(--sys-color-divider);\n  position: relative;\n  width: 100%;\n  padding: 10px;\n  justify-content: center;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n@media (forced-colors: active) {\n  :host {\n    border: 1px solid canvastext !important; /* stylelint-disable-line declaration-no-important */\n  }\n\n  .spectrum-color {\n    forced-color-adjust: none;\n  }\n\n  .spectrum-switcher:hover,\n  .spectrum-switcher:focus-visible {\n    forced-color-adjust: none;\n    background-color: Highlight !important; /* stylelint-disable-line declaration-no-important */\n  }\n\n  :host-context(.theme-with-dark-background) .spectrum-switcher {\n    filter: unset;\n  }\n\n  .spectrum-switcher:hover svg,\n  .spectrum-switcher:focus-visible svg {\n    fill: HighlightText;\n  }\n\n  .swatch {\n    forced-color-adjust: none;\n  }\n\n  .swatch-inner,\n  .swatch-overlay,\n  .swatch-inner-white {\n    border: 1px solid ButtonText;\n  }\n\n  .swatch-overlay:hover,\n  .swatch-overlay:focus-visible {\n    background-color: canvas !important; /* stylelint-disable-line declaration-no-important */\n  }\n\n  .spectrum-slider {\n    forced-color-adjust: none;\n    background-color: ButtonText !important; /* stylelint-disable-line declaration-no-important */\n    box-shadow: 0 1px 4px 0 ButtonFace !important; /* stylelint-disable-line declaration-no-important */\n  }\n}\n\n/*# sourceURL=spectrum.css */\n`);\n\nexport default styles;\n","// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2011 Brian Grinstead All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as IconButton from '../../../components/icon_button/icon_button.js';\nimport * as SrgbOverlay from '../../../components/srgb_overlay/srgb_overlay.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\nimport { colorFormatSpec } from './ColorFormatSpec.js';\nimport { ContrastDetails } from './ContrastDetails.js';\nimport { ContrastOverlay } from './ContrastOverlay.js';\nimport { FormatPickerContextMenu } from './FormatPickerContextMenu.js';\nimport spectrumStyles from './spectrum.css.js';\nconst UIStrings = {\n    /**\n     *@description Tooltip text that appears when hovering over largeicon eyedropper button in Spectrum of the Color Picker\n     * @example {c} PH1\n     */\n    toggleColorPicker: 'Eye dropper [{PH1}]',\n    /**\n     *@description Aria label for hue slider in Color Picker\n     */\n    changeHue: 'Change hue',\n    /**\n     * @description Aria label for alpha slider in Color Picker. Alpha refers to the alpha channel of a\n     * color, and this tool allows the user to change the alpha value.\n     */\n    changeAlpha: 'Change alpha',\n    /**\n     *@description Aria label for HEX color format input\n     */\n    hex: 'HEX',\n    /**\n     *@description Aria label for color format switcher button in Color Picker\n     */\n    changeColorFormat: 'Change color format',\n    /**\n     *@description Screen reader reads this text when palette switcher button receives focus\n     */\n    previewPalettes: 'Preview palettes',\n    /**\n     *@description Tooltip text that appears when hovering over the largeicon add button in the Spectrum of the Color Picker\n     */\n    addToPalette: 'Add to palette',\n    /**\n     *@description Title text content in Spectrum of the Color Picker\n     */\n    colorPalettes: 'Color Palettes',\n    /**\n     *@description Label for close button in Color Picker\n     */\n    returnToColorPicker: 'Return to color picker',\n    /**\n     *@description Aria label which declares hex value of a swatch in the Color Picker\n     *@example {#969696} PH1\n     */\n    colorS: 'Color {PH1}',\n    /**\n     *@description Color element title in Spectrum of the Color Picker\n     *@example {#9c1724} PH1\n     */\n    longclickOrLongpressSpaceToShow: 'Long-click or long-press space to show alternate shades of {PH1}',\n    /**\n     *@description A context menu item in the Color Picker to organize the user-defined color palette (removes the user-defined color to which this action is performed)\"\n     */\n    removeColor: 'Remove color',\n    /**\n     *@description A context menu item in the Color Picker to organize the user-defined color palette (removes all user-defined colors to the right of the color to which this action is performed)\"\n     */\n    removeAllToTheRight: 'Remove all to the right',\n    /**\n     *@description A context menu item in the Color Picker to organize the user-defined color palette (removes all user-defined colors)\"\n     */\n    clearPalette: 'Clear palette',\n    /**\n     *@description Aria label for RGBA and HSLA color format inputs in Color Picker\n     *@example {R} PH1\n     *@example {RGBA} PH2\n     */\n    sInS: '{PH1} in {PH2}',\n    /**\n     *@description Swatch copy icon title in Spectrum of the Color Picker\n     */\n    copyColorToClipboard: 'Copy color to clipboard',\n    /**\n     *@description Aria text for the swatch position. Swatch is the color picker spectrum tool.\n     */\n    pressArrowKeysMessage: 'Press arrow keys with or without modifiers to move swatch position. Arrow key with Shift key moves position largely, with Ctrl key it is less and with Alt key it is even less',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/color_picker/Spectrum.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst colorElementToMutable = new WeakMap();\nconst colorElementToColor = new WeakMap();\nconst srgbGamutFormats = [\n    \"srgb\" /* Common.Color.Format.SRGB */,\n    \"rgb\" /* Common.Color.Format.RGB */,\n    \"hex\" /* Common.Color.Format.HEX */,\n    \"hsl\" /* Common.Color.Format.HSL */,\n    \"hwb\" /* Common.Color.Format.HWB */,\n];\nconst IS_NATIVE_EYE_DROPPER_AVAILABLE = 'EyeDropper' in window;\nfunction doesFormatSupportDisplayP3(format) {\n    return !srgbGamutFormats.includes(format);\n}\nfunction convertColorFormat(colorFormat) {\n    if (colorFormat === \"rgba\" /* Common.Color.Format.RGBA */) {\n        return \"rgb\" /* Common.Color.Format.RGB */;\n    }\n    if (colorFormat === \"hsla\" /* Common.Color.Format.HSLA */) {\n        return \"hsl\" /* Common.Color.Format.HSL */;\n    }\n    if (colorFormat === \"hwba\" /* Common.Color.Format.HWBA */) {\n        return \"hwb\" /* Common.Color.Format.HWB */;\n    }\n    if (colorFormat === \"hexa\" /* Common.Color.Format.HEXA */) {\n        return \"hex\" /* Common.Color.Format.HEX */;\n    }\n    return colorFormat;\n}\n// HSV by itself, without a color space, doesn't map to a color and\n// it is usually interpreted as an sRGB color. However, it can also\n// represent colors in other color spaces since `HSV` -> `RGB` mapping\n// is not color space dependent. For example, color(display-p3 1 1 1) and rgb(1 1 1)\n// map to the same HSV values. The tricky thing is, `hsl()` syntax is interpreted\n// as it is in sRGB in CSS. So, when you convert those two colors and use as `hsl()`, it will\n// show an sRGB color. Though, if there was a function `color-hsl(<color-space> h s l)`\n// it was going to show the color in the color-space represented with `hsl`.\n// This function, gets the HSV values by interpreting them in the given gamut.\nfunction getHsvFromColor(gamut, color) {\n    switch (gamut) {\n        case \"display-p3\" /* SpectrumGamut.DISPLAY_P3 */: {\n            const displayP3color = color.as(\"display-p3\" /* Common.Color.Format.DISPLAY_P3 */);\n            return [\n                ...Common.Color.rgb2hsv([displayP3color.p0, displayP3color.p1, displayP3color.p2]),\n                displayP3color.alpha || 1,\n            ];\n        }\n        case \"srgb\" /* SpectrumGamut.SRGB */: {\n            return color.as(\"hsl\" /* Common.Color.Format.HSL */).hsva();\n        }\n    }\n}\n// Interprets the given `hsva` values in the given gamut and returns the concrete `Color` object.\nfunction getColorFromHsva(gamut, hsva) {\n    const color = Common.Color.Legacy.fromHSVA(hsva);\n    switch (gamut) {\n        case \"display-p3\" /* SpectrumGamut.DISPLAY_P3 */: {\n            const rgba = Common.Color.hsva2rgba(hsva);\n            return new Common.Color.ColorFunction(\"display-p3\" /* Common.Color.Format.DISPLAY_P3 */, rgba[0], rgba[1], rgba[2], rgba[3], undefined);\n        }\n        case \"srgb\" /* SpectrumGamut.SRGB */: {\n            return color;\n        }\n    }\n}\nexport class Spectrum extends Common.ObjectWrapper.eventMixin(UI.Widget.VBox) {\n    colorInternal;\n    gamut = \"srgb\" /* SpectrumGamut.SRGB */;\n    colorElement;\n    colorDragElement;\n    dragX;\n    dragY;\n    colorPickerButton;\n    swatch;\n    hueElement;\n    hueSlider;\n    alphaElement;\n    alphaElementBackground;\n    alphaSlider;\n    displayContainer;\n    textValues;\n    textLabels;\n    hexContainer;\n    hexValue;\n    contrastInfo;\n    srgbOverlay;\n    contrastOverlay;\n    contrastDetails;\n    contrastDetailsBackgroundColorPickedToggledBound;\n    palettes;\n    palettePanel;\n    palettePanelShowing;\n    paletteSectionContainer;\n    paletteContainer;\n    shadesContainer;\n    deleteIconToolbar;\n    deleteButton;\n    addColorToolbar;\n    colorPickedBound;\n    hsv;\n    hueAlphaWidth;\n    dragWidth;\n    dragHeight;\n    colorDragElementHeight;\n    slideHelperWidth;\n    numPaletteRowsShown;\n    selectedColorPalette;\n    customPaletteSetting;\n    colorOffset;\n    closeButton;\n    paletteContainerMutable;\n    shadesCloseHandler;\n    dragElement;\n    dragHotSpotX;\n    dragHotSpotY;\n    colorNameInternal;\n    colorFormat = \"rgb\" /* Common.Color.Format.RGB */;\n    eyeDropperAbortController = null;\n    isFormatPickerShown = false;\n    // Used to represent how the current color\n    // should be stringified externally (emitted event etc.).\n    // For example, this is used when a color variable\n    // selected form the palettes. That time, we don't\n    // want to return the value of the variable but the\n    // actual variable string.\n    colorStringInternal;\n    constructor(contrastInfo) {\n        super(true);\n        this.contentElement.tabIndex = 0;\n        this.contentElement.setAttribute('jslog', `${VisualLogging.dialog('colorPicker').parent('mapped').track({ keydown: 'Enter|Escape' })}`);\n        this.colorElement = this.contentElement.createChild('div', 'spectrum-color');\n        this.colorElement.tabIndex = 0;\n        this.colorElement.setAttribute('jslog', `${VisualLogging.canvas('color').track({\n            click: true,\n            drag: true,\n            keydown: 'ArrowLeft|ArrowRight|ArrowDown|ArrowUp',\n        })}`);\n        this.setDefaultFocusedElement(this.colorElement);\n        this.colorElement.addEventListener('keydown', this.onSliderKeydown.bind(this, positionColor.bind(this)));\n        const swatchAriaText = i18nString(UIStrings.pressArrowKeysMessage);\n        UI.ARIAUtils.setLabel(this.colorElement, swatchAriaText);\n        UI.ARIAUtils.markAsApplication(this.colorElement);\n        this.colorDragElement = this.colorElement.createChild('div', 'spectrum-sat fill')\n            .createChild('div', 'spectrum-val fill')\n            .createChild('div', 'spectrum-dragger');\n        this.dragX = 0;\n        this.dragY = 0;\n        const toolsContainer = this.contentElement.createChild('div', 'spectrum-tools');\n        const toolbar = new UI.Toolbar.Toolbar('spectrum-eye-dropper', toolsContainer);\n        const toggleEyeDropperShortcut = UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction('elements.toggle-eye-dropper');\n        const definedShortcutKey = toggleEyeDropperShortcut[0]?.descriptors.flatMap(descriptor => descriptor.name.split(' + '))[0];\n        this.colorPickerButton = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.toggleColorPicker, { PH1: definedShortcutKey || '' }), 'color-picker', 'color-picker-filled', 'color-eye-dropper');\n        this.colorPickerButton.setToggled(true);\n        this.colorPickerButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.toggleColorPicker.bind(this, undefined));\n        toolbar.appendToolbarItem(this.colorPickerButton);\n        this.colorPickerButton.element.setAttribute('jslog', `${VisualLogging.colorEyeDropper().track({ click: true })}`);\n        this.swatch = new Swatch(toolsContainer);\n        this.hueElement = toolsContainer.createChild('div', 'spectrum-hue');\n        this.hueElement.setAttribute('jslog', `${VisualLogging.slider('hue').track({\n            click: true,\n            drag: true,\n            keydown: 'ArrowLeft|ArrowRight|ArrowDown|ArrowUp',\n        })}`);\n        this.hueElement.tabIndex = 0;\n        this.hueElement.addEventListener('keydown', this.onSliderKeydown.bind(this, positionHue.bind(this)));\n        UI.ARIAUtils.setLabel(this.hueElement, i18nString(UIStrings.changeHue));\n        UI.ARIAUtils.markAsSlider(this.hueElement, 0, 360);\n        this.hueSlider = this.hueElement.createChild('div', 'spectrum-slider');\n        this.alphaElement = toolsContainer.createChild('div', 'spectrum-alpha');\n        this.alphaElement.setAttribute('jslog', `${VisualLogging.slider('alpha').track({\n            click: true,\n            drag: true,\n            keydown: 'ArrowLeft|ArrowRight|ArrowDown|ArrowUp',\n        })}`);\n        this.alphaElement.tabIndex = 0;\n        this.alphaElement.addEventListener('keydown', this.onSliderKeydown.bind(this, positionAlpha.bind(this)));\n        UI.ARIAUtils.setLabel(this.alphaElement, i18nString(UIStrings.changeAlpha));\n        UI.ARIAUtils.markAsSlider(this.alphaElement, 0, 1);\n        this.alphaElementBackground = this.alphaElement.createChild('div', 'spectrum-alpha-background');\n        this.alphaSlider = this.alphaElement.createChild('div', 'spectrum-slider');\n        // RGBA/HSLA/HWBA display.\n        this.displayContainer = toolsContainer.createChild('div', 'spectrum-text source-code');\n        UI.ARIAUtils.markAsPoliteLiveRegion(this.displayContainer, true);\n        this.textValues = [];\n        for (let i = 0; i < 4; ++i) {\n            const inputValue = UI.UIUtils.createInput('spectrum-text-value');\n            inputValue.setAttribute('jslog', `${VisualLogging.value().track({ change: true, keydown: 'ArrowUp|ArrowDown' }).context(i)}`);\n            this.displayContainer.appendChild(inputValue);\n            inputValue.maxLength = 4;\n            this.textValues.push(inputValue);\n            inputValue.addEventListener('keydown', this.inputChanged.bind(this), false);\n            inputValue.addEventListener('input', this.inputChanged.bind(this), false);\n            inputValue.addEventListener('wheel', this.inputChanged.bind(this), false);\n            inputValue.addEventListener('paste', this.pasted.bind(this), false);\n        }\n        this.textLabels = this.displayContainer.createChild('div', 'spectrum-text-label');\n        // HEX display.\n        this.hexContainer = toolsContainer.createChild('div', 'spectrum-text spectrum-text-hex source-code');\n        UI.ARIAUtils.markAsPoliteLiveRegion(this.hexContainer, true);\n        this.hexValue = UI.UIUtils.createInput('spectrum-text-value');\n        this.hexValue.setAttribute('jslog', `${VisualLogging.value('hex').track({ keydown: 'ArrowUp|ArrowDown', change: true })}`);\n        this.hexContainer.appendChild(this.hexValue);\n        this.hexValue.maxLength = 9;\n        this.hexValue.addEventListener('keydown', this.inputChanged.bind(this), false);\n        this.hexValue.addEventListener('input', this.inputChanged.bind(this), false);\n        this.hexValue.addEventListener('wheel', this.inputChanged.bind(this), false);\n        this.hexValue.addEventListener('paste', this.pasted.bind(this), false);\n        const label = this.hexContainer.createChild('div', 'spectrum-text-label');\n        label.textContent = i18nString(UIStrings.hex);\n        UI.ARIAUtils.setLabel(this.hexValue, label.textContent);\n        const displaySwitcher = toolsContainer.createChild('button', 'spectrum-display-switcher spectrum-switcher');\n        displaySwitcher.setAttribute('jslog', `${VisualLogging.dropDown('color-format').track({ click: true })}`);\n        appendSwitcherIcon(displaySwitcher);\n        UI.UIUtils.setTitle(displaySwitcher, i18nString(UIStrings.changeColorFormat));\n        displaySwitcher.tabIndex = 0;\n        displaySwitcher.addEventListener('click', (ev) => {\n            void this.showFormatPicker(ev);\n        });\n        UI.UIUtils.installDragHandle(this.hueElement, this.dragStart.bind(this, positionHue.bind(this)), positionHue.bind(this), null, 'ew-resize', 'crosshair');\n        UI.UIUtils.installDragHandle(this.alphaElement, this.dragStart.bind(this, positionAlpha.bind(this)), positionAlpha.bind(this), null, 'ew-resize', 'crosshair');\n        UI.UIUtils.installDragHandle(this.colorElement, this.dragStart.bind(this, positionColor.bind(this)), positionColor.bind(this), null, 'move', 'crosshair');\n        // Color contrast business.\n        if (contrastInfo) {\n            this.contrastInfo = contrastInfo;\n            this.contrastOverlay = new ContrastOverlay(this.contrastInfo, this.colorElement);\n            this.contrastDetails = new ContrastDetails(this.contrastInfo, this.contentElement, this.toggleColorPicker.bind(this), this.contrastPanelExpandedChanged.bind(this), this.colorSelected.bind(this));\n            this.contrastDetailsBackgroundColorPickedToggledBound =\n                this.contrastDetailsBackgroundColorPickedToggled.bind(this);\n        }\n        this.element.classList.add('flex-none');\n        this.palettes = new Map();\n        this.palettePanel = this.contentElement.createChild('div', 'palette-panel');\n        this.palettePanel.setAttribute('jslog', `${VisualLogging.section('palette-panel')}`);\n        this.palettePanelShowing = false;\n        this.paletteSectionContainer = this.contentElement.createChild('div', 'spectrum-palette-container');\n        this.paletteContainer = this.paletteSectionContainer.createChild('div', 'spectrum-palette');\n        this.paletteContainer.addEventListener('contextmenu', this.showPaletteColorContextMenu.bind(this, -1));\n        this.shadesContainer = this.contentElement.createChild('div', 'palette-color-shades hidden');\n        this.shadesContainer.setAttribute('jslog', `${VisualLogging.paletteColorShades()}`);\n        UI.UIUtils.installDragHandle(this.paletteContainer, this.paletteDragStart.bind(this), this.paletteDrag.bind(this), this.paletteDragEnd.bind(this), 'default');\n        const paletteSwitcher = this.paletteSectionContainer.createChild('div', 'spectrum-palette-switcher spectrum-switcher');\n        paletteSwitcher.setAttribute('jslog', `${VisualLogging.dropDown('palette-switcher').track({ click: true })}`);\n        appendSwitcherIcon(paletteSwitcher);\n        UI.UIUtils.setTitle(paletteSwitcher, i18nString(UIStrings.previewPalettes));\n        UI.ARIAUtils.markAsButton(paletteSwitcher);\n        paletteSwitcher.tabIndex = 0;\n        self.onInvokeElement(paletteSwitcher, event => {\n            this.togglePalettePanel(true);\n            event.consume(true);\n        });\n        this.deleteIconToolbar = new UI.Toolbar.Toolbar('delete-color-toolbar');\n        this.deleteButton = new UI.Toolbar.ToolbarButton('', 'bin');\n        this.deleteIconToolbar.appendToolbarItem(this.deleteButton);\n        const overlay = this.contentElement.createChild('div', 'spectrum-overlay fill');\n        overlay.addEventListener('click', this.togglePalettePanel.bind(this, false));\n        this.addColorToolbar = new UI.Toolbar.Toolbar('add-color-toolbar');\n        const addColorButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.addToPalette), 'plus', undefined, 'add-color');\n        addColorButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.onAddColorMousedown.bind(this));\n        addColorButton.element.addEventListener('keydown', this.onAddColorKeydown.bind(this));\n        this.addColorToolbar.appendToolbarItem(addColorButton);\n        this.colorPickedBound = this.colorPicked.bind(this);\n        this.numPaletteRowsShown = -1;\n        this.contentElement.addEventListener('focusout', ev => {\n            // Do not propagate 'focusout' event when the format picker\n            // context menu is shown. The reason is, when it is shown,\n            // 'focusout' event is emitted and SwatchPopoverHelper listens\n            // to it and closes the color picker. However, we don't want\n            // color picker to be closed when the focus is gone for the\n            // format picker context menu. That's why we stop the propagation.\n            if (this.isFormatPickerShown) {\n                ev.stopImmediatePropagation();\n            }\n        });\n        this.srgbOverlay = new SrgbOverlay.SrgbOverlay.SrgbOverlay();\n        this.loadPalettes();\n        new PaletteGenerator(palette => {\n            if (palette.colors.length) {\n                this.addPalette(palette);\n            }\n            else if (this.selectedColorPalette.get() === palette.title) {\n                this.paletteSelected(MaterialPalette);\n            }\n        });\n        function getUpdatedSliderPosition(element, event) {\n            const keyboardEvent = event;\n            const elementPosition = element.getBoundingClientRect();\n            switch (keyboardEvent.key) {\n                case 'ArrowLeft':\n                case 'ArrowDown':\n                    return elementPosition.left - 1;\n                case 'ArrowRight':\n                case 'ArrowUp':\n                    return elementPosition.right + 1;\n                default:\n                    return event.x;\n            }\n        }\n        function positionHue(event) {\n            const hsva = this.hsv.slice();\n            const sliderPosition = getUpdatedSliderPosition(this.hueSlider, event);\n            const hueAlphaLeft = this.hueElement.getBoundingClientRect().left;\n            const positionFraction = (sliderPosition - hueAlphaLeft) / this.hueAlphaWidth;\n            const newHue = 1 - positionFraction;\n            hsva[0] = Platform.NumberUtilities.clamp(newHue, 0, 1);\n            this.innerSetColor(hsva, '', undefined /* colorName */, undefined, ChangeSource.Other);\n            const color = getColorFromHsva(this.gamut, hsva);\n            const colorValues = color.as(\"hsl\" /* Common.Color.Format.HSL */).canonicalHSLA();\n            UI.ARIAUtils.setValueNow(this.hueElement, colorValues[0]);\n        }\n        function positionAlpha(event) {\n            const hsva = this.hsv.slice();\n            const sliderPosition = getUpdatedSliderPosition(this.alphaSlider, event);\n            const hueAlphaLeft = this.hueElement.getBoundingClientRect().left;\n            const positionFraction = (sliderPosition - hueAlphaLeft) / this.hueAlphaWidth;\n            const newAlpha = Math.round(positionFraction * 100) / 100;\n            hsva[3] = Platform.NumberUtilities.clamp(newAlpha, 0, 1);\n            this.innerSetColor(hsva, '', undefined /* colorName */, undefined, ChangeSource.Other);\n            const color = getColorFromHsva(this.gamut, hsva);\n            const colorValues = color.as(\"hsl\" /* Common.Color.Format.HSL */).canonicalHSLA();\n            UI.ARIAUtils.setValueText(this.alphaElement, colorValues[3]);\n        }\n        function positionColor(event) {\n            const hsva = this.hsv.slice();\n            const colorPosition = getUpdatedColorPosition(this.colorDragElement, event);\n            this.colorOffset = this.colorElement.getBoundingClientRect();\n            hsva[1] = Platform.NumberUtilities.clamp((colorPosition.x - this.colorOffset.left) / this.dragWidth, 0, 1);\n            hsva[2] = Platform.NumberUtilities.clamp(1 - (colorPosition.y - this.colorOffset.top) / this.dragHeight, 0, 1);\n            this.innerSetColor(hsva, '', undefined /* colorName */, undefined, ChangeSource.Other);\n        }\n        function getUpdatedColorPosition(dragElement, event) {\n            const elementPosition = dragElement.getBoundingClientRect();\n            const verticalX = elementPosition.x + elementPosition.width / 2;\n            const horizontalY = elementPosition.y + elementPosition.width / 2;\n            const defaultUnit = elementPosition.width / 4;\n            const unit = getUnitToMove(defaultUnit, event);\n            const keyboardEvent = event;\n            switch (keyboardEvent.key) {\n                case 'ArrowLeft':\n                    return { x: elementPosition.left - unit, y: horizontalY };\n                case 'ArrowRight':\n                    return { x: elementPosition.right + unit, y: horizontalY };\n                case 'ArrowDown':\n                    return { x: verticalX, y: elementPosition.bottom + unit };\n                case 'ArrowUp':\n                    return { x: verticalX, y: elementPosition.top - unit };\n                default:\n                    return {\n                        x: event.x,\n                        y: event.y,\n                    };\n            }\n        }\n        function getUnitToMove(unit, event) {\n            const keyboardEvent = event;\n            if (keyboardEvent.altKey) {\n                unit = 1;\n            }\n            else if (keyboardEvent.ctrlKey) {\n                unit = 10;\n            }\n            else if (keyboardEvent.shiftKey) {\n                unit = 20;\n            }\n            return unit;\n        }\n        function appendSwitcherIcon(parentElement) {\n            const switcherIcon = new IconButton.Icon.Icon();\n            switcherIcon.data = { iconName: 'fold-more', color: 'var(--icon-default)', width: '16px', height: '16px' };\n            parentElement.appendChild(switcherIcon);\n        }\n    }\n    dragStart(callback, event) {\n        this.colorOffset = this.colorElement.getBoundingClientRect();\n        callback(event);\n        return true;\n    }\n    contrastDetailsBackgroundColorPickedToggled(event) {\n        if (event.data) {\n            void this.toggleColorPicker(false);\n        }\n    }\n    contrastPanelExpandedChanged() {\n        if (!this.contrastOverlay || !this.contrastDetails) {\n            return;\n        }\n        this.contrastOverlay.setVisible(this.contrastDetails.expanded());\n        this.resizeForSelectedPalette(true);\n        if (this.contrastDetails.expanded()) {\n            this.hideSrgbOverlay();\n        }\n        else {\n            this.showSrgbOverlay();\n        }\n    }\n    updatePalettePanel() {\n        this.palettePanel.removeChildren();\n        const title = this.palettePanel.createChild('div', 'palette-title');\n        title.textContent = i18nString(UIStrings.colorPalettes);\n        const toolbar = new UI.Toolbar.Toolbar('', this.palettePanel);\n        this.closeButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.returnToColorPicker), 'cross');\n        this.closeButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.togglePalettePanel.bind(this, false));\n        this.closeButton.element.addEventListener('keydown', this.onCloseBtnKeydown.bind(this));\n        this.closeButton.element.setAttribute('jslog', `${VisualLogging.close().track({ click: true })}`);\n        toolbar.appendToolbarItem(this.closeButton);\n        for (const palette of this.palettes.values()) {\n            this.palettePanel.appendChild(this.createPreviewPaletteElement(palette));\n        }\n        this.contentElement.scrollIntoView({ block: 'end' });\n    }\n    togglePalettePanel(show) {\n        if (this.palettePanelShowing === show) {\n            return;\n        }\n        if (show) {\n            this.updatePalettePanel();\n        }\n        this.palettePanelShowing = show;\n        this.contentElement.classList.toggle('palette-panel-showing', show);\n        this.focusInternal();\n    }\n    onCloseBtnKeydown(event) {\n        if (Platform.KeyboardUtilities.isEscKey(event) || Platform.KeyboardUtilities.isEnterOrSpaceKey(event)) {\n            this.togglePalettePanel(false);\n            event.consume(true);\n        }\n    }\n    onSliderKeydown(sliderNewPosition, event) {\n        const keyboardEvent = event;\n        switch (keyboardEvent.key) {\n            case 'ArrowLeft':\n            case 'ArrowRight':\n            case 'ArrowDown':\n            case 'ArrowUp':\n                sliderNewPosition(event);\n                event.consume(true);\n        }\n    }\n    /**\n     * (Suppress warning about preventScroll)\n     */\n    focusInternal() {\n        if (!this.isShowing()) {\n            return;\n        }\n        if (this.palettePanelShowing && this.closeButton) {\n            this.closeButton.element.focus({ preventScroll: true });\n        }\n        else {\n            this.contentElement.focus();\n        }\n    }\n    createPaletteColor(colorText, colorName, animationDelay) {\n        const element = document.createElement('div');\n        element.classList.add('spectrum-palette-color');\n        element.setAttribute('jslog', `${VisualLogging.item().track({\n            click: true,\n            drag: true,\n            keydown: 'ArrowUp|ArrowDown|ArrowLeft|ArrowRight|Escape|Tab',\n        })}`);\n        element.style.background =\n            Platform.StringUtilities.sprintf('linear-gradient(%s, %s), var(--image-file-checker)', colorText, colorText);\n        if (animationDelay) {\n            element.animate([{ opacity: 0 }, { opacity: 1 }], { duration: 100, delay: animationDelay, fill: 'backwards' });\n        }\n        UI.Tooltip.Tooltip.install(element, colorName || colorText);\n        return element;\n    }\n    showPalette(palette, animate, _event) {\n        this.resizeForSelectedPalette();\n        this.paletteContainer.removeChildren();\n        for (let i = 0; i < palette.colors.length; i++) {\n            const animationDelay = animate ? i * 100 / palette.colors.length : 0;\n            const colorElement = this.createPaletteColor(palette.colors[i], palette.colorNames[i], animationDelay);\n            UI.ARIAUtils.markAsButton(colorElement);\n            UI.ARIAUtils.setLabel(colorElement, i18nString(UIStrings.colorS, { PH1: palette.colors[i] }));\n            colorElement.tabIndex = -1;\n            colorElement.addEventListener('mousedown', this.paletteColorSelected.bind(this, palette.colors[i], palette.colorNames[i], Boolean(palette.matchUserFormat)));\n            colorElement.addEventListener('focus', this.paletteColorSelected.bind(this, palette.colors[i], palette.colorNames[i], Boolean(palette.matchUserFormat)));\n            colorElement.addEventListener('keydown', this.onPaletteColorKeydown.bind(this, i));\n            if (palette.mutable) {\n                colorElementToMutable.set(colorElement, true);\n                colorElementToColor.set(colorElement, palette.colors[i]);\n                colorElement.addEventListener('contextmenu', this.showPaletteColorContextMenu.bind(this, i));\n            }\n            else if (palette === MaterialPalette) {\n                colorElement.classList.add('has-material-shades');\n                let shadow = colorElement.createChild('div', 'spectrum-palette-color spectrum-palette-color-shadow');\n                shadow.style.background = palette.colors[i];\n                shadow = colorElement.createChild('div', 'spectrum-palette-color spectrum-palette-color-shadow');\n                shadow.style.background = palette.colors[i];\n                const tooltipText = i18nString(UIStrings.longclickOrLongpressSpaceToShow, { PH1: palette.colors[i] });\n                UI.Tooltip.Tooltip.install(colorElement, tooltipText);\n                UI.ARIAUtils.setLabel(colorElement, tooltipText);\n                new UI.UIUtils.LongClickController(colorElement, this.showLightnessShades.bind(this, colorElement, palette.colors[i]));\n            }\n            this.paletteContainer.appendChild(colorElement);\n        }\n        if (this.paletteContainer.childNodes.length > 0) {\n            this.paletteContainer.childNodes[0].tabIndex = 0;\n        }\n        this.paletteContainerMutable = palette.mutable;\n        if (palette.mutable) {\n            this.paletteContainer.appendChild(this.addColorToolbar.element);\n            this.paletteContainer.appendChild(this.deleteIconToolbar.element);\n        }\n        else {\n            this.addColorToolbar.element.remove();\n            this.deleteIconToolbar.element.remove();\n        }\n        this.togglePalettePanel(false);\n        this.focusInternal();\n    }\n    showLightnessShades(colorElement, colorText, _event) {\n        function closeLightnessShades(element) {\n            this.shadesContainer.classList.add('hidden');\n            element.classList.remove('spectrum-shades-shown');\n            if (this.shadesCloseHandler) {\n                this.shadesContainer.ownerDocument.removeEventListener('mousedown', this.shadesCloseHandler, true);\n            }\n            delete this.shadesCloseHandler;\n        }\n        if (this.shadesCloseHandler) {\n            this.shadesCloseHandler();\n        }\n        this.shadesContainer.classList.remove('hidden');\n        this.shadesContainer.removeChildren();\n        this.shadesContainer.animate([{ transform: 'scaleY(0)', opacity: '0' }, { transform: 'scaleY(1)', opacity: '1' }], { duration: 200, easing: 'cubic-bezier(0.4, 0, 0.2, 1)' });\n        let shadesTop = this.paletteContainer.offsetTop + colorElement.offsetTop +\n            (colorElement.parentElement ? colorElement.parentElement.offsetTop : 0);\n        if (this.contrastDetails) {\n            shadesTop += this.contrastDetails.element().offsetHeight;\n        }\n        this.shadesContainer.style.top = shadesTop + 'px';\n        this.shadesContainer.style.left = colorElement.offsetLeft + 'px';\n        colorElement.classList.add('spectrum-shades-shown');\n        const shades = MaterialPaletteShades.get(colorText);\n        if (shades !== undefined) {\n            for (let i = shades.length - 1; i >= 0; i--) {\n                const shadeElement = this.createPaletteColor(shades[i], undefined /* colorName */, i * 200 / shades.length + 100);\n                UI.ARIAUtils.markAsButton(shadeElement);\n                UI.ARIAUtils.setLabel(shadeElement, i18nString(UIStrings.colorS, { PH1: shades[i] }));\n                shadeElement.tabIndex = -1;\n                shadeElement.addEventListener('mousedown', this.paletteColorSelected.bind(this, shades[i], shades[i], false));\n                shadeElement.addEventListener('focus', this.paletteColorSelected.bind(this, shades[i], shades[i], false));\n                shadeElement.addEventListener('keydown', this.onShadeColorKeydown.bind(this, colorElement));\n                this.shadesContainer.appendChild(shadeElement);\n            }\n        }\n        if (this.shadesContainer.childNodes.length > 0) {\n            this.shadesContainer.childNodes[this.shadesContainer.childNodes.length - 1].focus();\n        }\n        this.shadesCloseHandler = closeLightnessShades.bind(this, colorElement);\n        this.shadesContainer.ownerDocument.addEventListener('mousedown', this.shadesCloseHandler, true);\n    }\n    slotIndexForEvent(event) {\n        const mouseEvent = event;\n        const localX = mouseEvent.pageX - this.paletteContainer.getBoundingClientRect().left;\n        const localY = mouseEvent.pageY - this.paletteContainer.getBoundingClientRect().top;\n        const col = Math.min(localX / COLOR_CHIP_SIZE | 0, ITEMS_PER_PALETTE_ROW - 1);\n        const row = (localY / COLOR_CHIP_SIZE) | 0;\n        return Math.min(row * ITEMS_PER_PALETTE_ROW + col, this.customPaletteSetting.get().colors.length - 1);\n    }\n    isDraggingToBin(event) {\n        const mouseEvent = event;\n        return mouseEvent.pageX > this.deleteIconToolbar.element.getBoundingClientRect().left;\n    }\n    paletteDragStart(event) {\n        const element = UI.UIUtils.deepElementFromEvent(event);\n        if (!element || !colorElementToMutable.get(element)) {\n            return false;\n        }\n        const index = this.slotIndexForEvent(event);\n        this.dragElement = element;\n        const mouseEvent = event;\n        this.dragHotSpotX = mouseEvent.pageX - (index % ITEMS_PER_PALETTE_ROW) * COLOR_CHIP_SIZE;\n        this.dragHotSpotY = mouseEvent.pageY - (index / ITEMS_PER_PALETTE_ROW | 0) * COLOR_CHIP_SIZE;\n        return true;\n    }\n    paletteDrag(event) {\n        const mouseEvent = event;\n        if (mouseEvent.pageX < this.paletteContainer.getBoundingClientRect().left ||\n            mouseEvent.pageY < this.paletteContainer.getBoundingClientRect().top) {\n            return;\n        }\n        if (!this.dragElement || this.dragHotSpotX === undefined || this.dragHotSpotY === undefined) {\n            return;\n        }\n        const newIndex = this.slotIndexForEvent(event);\n        const offsetX = mouseEvent.pageX - (newIndex % ITEMS_PER_PALETTE_ROW) * COLOR_CHIP_SIZE;\n        const offsetY = mouseEvent.pageY - (newIndex / ITEMS_PER_PALETTE_ROW | 0) * COLOR_CHIP_SIZE;\n        const isDeleting = this.isDraggingToBin(event);\n        this.deleteIconToolbar.element.classList.add('dragging');\n        this.deleteIconToolbar.element.classList.toggle('delete-color-toolbar-active', isDeleting);\n        const dragElementTransform = 'translateX(' + (offsetX - this.dragHotSpotX) + 'px) translateY(' + (offsetY - this.dragHotSpotY) + 'px)';\n        this.dragElement.style.transform = isDeleting ? dragElementTransform + ' scale(0.8)' : dragElementTransform;\n        const children = [...this.paletteContainer.children];\n        const index = children.indexOf(this.dragElement);\n        const swatchOffsets = new Map();\n        for (const swatch of children) {\n            swatchOffsets.set(swatch, swatch.getBoundingClientRect());\n        }\n        if (index !== newIndex) {\n            this.paletteContainer.insertBefore(this.dragElement, children[newIndex > index ? newIndex + 1 : newIndex]);\n        }\n        for (const swatch of children) {\n            if (swatch === this.dragElement) {\n                continue;\n            }\n            const before = swatchOffsets.get(swatch);\n            const after = swatch.getBoundingClientRect();\n            if (before && (before.left !== after.left || before.top !== after.top)) {\n                swatch.animate([\n                    {\n                        transform: 'translateX(' + (before.left - after.left) + 'px) translateY(' + (before.top - after.top) + 'px)',\n                    },\n                    { transform: 'none' },\n                ], { duration: 100, easing: 'cubic-bezier(0, 0, 0.2, 1)' });\n            }\n        }\n    }\n    paletteDragEnd(e) {\n        if (!this.dragElement) {\n            return;\n        }\n        if (this.isDraggingToBin(e)) {\n            this.dragElement.remove();\n        }\n        this.dragElement.style.removeProperty('transform');\n        const children = this.paletteContainer.children;\n        const colors = [];\n        for (let i = 0; i < children.length; ++i) {\n            const color = colorElementToColor.get(children[i]);\n            if (color) {\n                colors.push(color);\n            }\n        }\n        const palette = this.customPaletteSetting.get();\n        palette.colors = colors;\n        this.customPaletteSetting.set(palette);\n        this.showPalette(palette, false);\n        this.deleteIconToolbar.element.classList.remove('dragging');\n        this.deleteIconToolbar.element.classList.remove('delete-color-toolbar-active');\n    }\n    loadPalettes() {\n        this.palettes.set(MaterialPalette.title, MaterialPalette);\n        const defaultCustomPalette = { title: 'Custom', colors: [], colorNames: [], mutable: true, matchUserFormat: undefined };\n        this.customPaletteSetting =\n            Common.Settings.Settings.instance().createSetting('custom-color-palette', defaultCustomPalette);\n        const customPalette = this.customPaletteSetting.get();\n        // Fallback case for custom palettes created pre-m67\n        customPalette.colorNames = customPalette.colorNames || [];\n        this.palettes.set(customPalette.title, customPalette);\n        this.selectedColorPalette =\n            Common.Settings.Settings.instance().createSetting('selected-color-palette', GeneratedPaletteTitle);\n        const palette = this.palettes.get(this.selectedColorPalette.get());\n        if (palette) {\n            this.showPalette(palette, true);\n        }\n    }\n    addPalette(palette) {\n        this.palettes.set(palette.title, palette);\n        if (this.selectedColorPalette.get() === palette.title) {\n            this.showPalette(palette, true);\n        }\n    }\n    createPreviewPaletteElement(palette) {\n        const colorsPerPreviewRow = 5;\n        const previewElement = document.createElement('div');\n        previewElement.classList.add('palette-preview');\n        UI.ARIAUtils.markAsButton(previewElement);\n        previewElement.tabIndex = 0;\n        const titleElement = previewElement.createChild('div', 'palette-preview-title');\n        titleElement.textContent = palette.title;\n        let i;\n        for (i = 0; i < colorsPerPreviewRow && i < palette.colors.length; i++) {\n            previewElement.appendChild(this.createPaletteColor(palette.colors[i], palette.colorNames[i]));\n        }\n        for (; i < colorsPerPreviewRow; i++) {\n            previewElement.createChild('div', 'spectrum-palette-color empty-color');\n        }\n        self.onInvokeElement(previewElement, event => {\n            this.paletteSelected(palette);\n            event.consume(true);\n        });\n        return previewElement;\n    }\n    paletteSelected(palette) {\n        this.selectedColorPalette.set(palette.title);\n        this.showPalette(palette, true);\n    }\n    resizeForSelectedPalette(force) {\n        const palette = this.palettes.get(this.selectedColorPalette.get());\n        if (!palette) {\n            return;\n        }\n        let numColors = palette.colors.length;\n        if (palette === this.customPaletteSetting.get()) {\n            numColors++;\n        }\n        const rowsNeeded = Math.max(1, Math.ceil(numColors / ITEMS_PER_PALETTE_ROW));\n        if (this.numPaletteRowsShown === rowsNeeded && !force) {\n            return;\n        }\n        this.numPaletteRowsShown = rowsNeeded;\n        const paletteColorHeight = 12;\n        const paletteMargin = 12;\n        let paletteTop = 236;\n        if (this.contrastDetails) {\n            if (this.contrastDetails.expanded()) {\n                paletteTop += 78;\n            }\n            else {\n                paletteTop += 36;\n            }\n        }\n        this.element.style.height = (paletteTop + paletteMargin + (paletteColorHeight + paletteMargin) * rowsNeeded) + 'px';\n        this.dispatchEventToListeners(\"SizeChanged\" /* Events.SIZE_CHANGED */);\n    }\n    paletteColorSelected(colorText, colorName, matchUserFormat) {\n        const color = Common.Color.parse(colorText);\n        if (!color) {\n            return;\n        }\n        this.innerSetColor(color, colorText, colorName, matchUserFormat ? this.colorFormat : color.format(), ChangeSource.Other);\n    }\n    onPaletteColorKeydown(colorIndex, event) {\n        const keyboardEvent = event;\n        let nextColorIndex;\n        switch (keyboardEvent.key) {\n            case 'ArrowLeft':\n                nextColorIndex = colorIndex - 1;\n                break;\n            case 'ArrowRight':\n                nextColorIndex = colorIndex + 1;\n                break;\n            case 'ArrowUp':\n                nextColorIndex = colorIndex - ITEMS_PER_PALETTE_ROW;\n                break;\n            case 'ArrowDown':\n                nextColorIndex = colorIndex + ITEMS_PER_PALETTE_ROW;\n                break;\n        }\n        if (nextColorIndex !== undefined && nextColorIndex > -1 &&\n            nextColorIndex < this.paletteContainer.childNodes.length) {\n            this.paletteContainer.childNodes[nextColorIndex].focus();\n        }\n    }\n    onShadeColorKeydown(colorElement, event) {\n        const target = event.target;\n        if (Platform.KeyboardUtilities.isEscKey(event) || event.key === 'Tab') {\n            colorElement.focus();\n            if (this.shadesCloseHandler) {\n                this.shadesCloseHandler();\n            }\n            event.consume(true);\n        }\n        else if (event.key === 'ArrowUp' && target.previousElementSibling) {\n            target.previousElementSibling.focus();\n            event.consume(true);\n        }\n        else if (event.key === 'ArrowDown' && target.nextElementSibling) {\n            target.nextElementSibling.focus();\n            event.consume(true);\n        }\n    }\n    onAddColorMousedown() {\n        this.addColorToCustomPalette();\n    }\n    onAddColorKeydown(event) {\n        if (Platform.KeyboardUtilities.isEnterOrSpaceKey(event)) {\n            this.addColorToCustomPalette();\n            event.consume(true);\n        }\n    }\n    addColorToCustomPalette() {\n        const palette = this.customPaletteSetting.get();\n        palette.colors.push(this.colorString());\n        this.customPaletteSetting.set(palette);\n        this.showPalette(palette, false);\n        const colorElements = this.paletteContainer.querySelectorAll('.spectrum-palette-color');\n        colorElements[colorElements.length - 1].focus();\n    }\n    showPaletteColorContextMenu(colorIndex, event) {\n        if (!this.paletteContainerMutable) {\n            return;\n        }\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        if (colorIndex !== -1) {\n            contextMenu.defaultSection().appendItem(i18nString(UIStrings.removeColor), this.deletePaletteColors.bind(this, colorIndex, false), { jslogContext: 'remove-color' });\n            contextMenu.defaultSection().appendItem(i18nString(UIStrings.removeAllToTheRight), this.deletePaletteColors.bind(this, colorIndex, true), { jslogContext: 'remove-all-to-the-right' });\n        }\n        contextMenu.defaultSection().appendItem(i18nString(UIStrings.clearPalette), this.deletePaletteColors.bind(this, -1, true), { jslogContext: 'clear-palette' });\n        void contextMenu.show();\n    }\n    deletePaletteColors(colorIndex, toRight) {\n        const palette = this.customPaletteSetting.get();\n        if (toRight) {\n            palette.colors.splice(colorIndex + 1, palette.colors.length - colorIndex - 1);\n        }\n        else {\n            palette.colors.splice(colorIndex, 1);\n        }\n        this.customPaletteSetting.set(palette);\n        this.showPalette(palette, false);\n    }\n    setColor(color) {\n        this.innerSetColor(color, '', undefined /* colorName */, color.format(), ChangeSource.Model);\n        const colorValues = color.as(\"hsl\" /* Common.Color.Format.HSL */).canonicalHSLA();\n        UI.ARIAUtils.setValueNow(this.hueElement, colorValues[0]);\n        UI.ARIAUtils.setValueText(this.alphaElement, colorValues[3]);\n    }\n    colorSelected(color) {\n        this.innerSetColor(color, '', undefined /* colorName */, undefined /* colorFormat */, ChangeSource.Other);\n    }\n    get color() {\n        if (this.colorInternal) {\n            return this.colorInternal;\n        }\n        return getColorFromHsva(this.gamut, this.hsv);\n    }\n    innerSetColor(colorOrHsv, colorString, colorName, colorFormat, changeSource) {\n        // It is important to do `undefined` check here since we want to update the\n        // `colorStringInternal` to be empty specifically. The difference is:\n        // * If we give `undefined` as an argument to this function, it means\n        // we don't want to change `colorStringInternal`\n        // * If we give \"\" as an argument to this funciton, it means\n        // we want to clear the `colorStringInternal`.\n        if (colorString !== undefined) {\n            this.colorStringInternal = colorString;\n        }\n        if (colorFormat !== undefined) {\n            this.colorFormat = convertColorFormat(colorFormat);\n            this.gamut = doesFormatSupportDisplayP3(this.colorFormat) ? \"display-p3\" /* SpectrumGamut.DISPLAY_P3 */ : \"srgb\" /* SpectrumGamut.SRGB */;\n        }\n        // For decreasing the conversion errors, if a color is given as is\n        // we're storing it in `colorInternal` and using it properly.\n        // Otherwise, if an `HSV` is given, we're discarding the `colorInternal`\n        // and keeping HSV values as the source of truth.\n        // This logic enables us to\n        // * Keep color picker and the reflected color consistent (ex: lch(100 55.30 34.40) is\n        //   shown with values 100, 55.30 and 34.40). If we were to get `HSV` from it\n        //   and convert that HSV to `lch` color when needed, it might have resulted in rounding errors\n        //   where color picker shows inconsistent values (i.e. inputs) with the selected color.\n        // * Allow `HSV` values to be set independently from the color it represents.\n        //   for example, lch(100 0 50) and lch(100 0 30) represents the same colors (both white)\n        //   and hue component is powerless. This results in converted `h` in `hsv` to be\n        //   0 as well. Meaning that, when the user comes to white, the hue will be reset to\n        //   `0` which will change the state of the color picker unintentionally.\n        if (Array.isArray(colorOrHsv)) {\n            this.colorInternal = undefined;\n            this.hsv = colorOrHsv;\n        }\n        else if (colorOrHsv !== undefined) {\n            this.colorInternal = colorOrHsv;\n            const oldHue = this.hsv ? this.hsv[0] : null;\n            this.hsv = getHsvFromColor(this.gamut, colorOrHsv);\n            // When the hue is powerless in lch color space\n            // its `h` is directly set to 0 which results in\n            // hue in hsv representation being 0 too.\n            // For that case, we don't want to update the\n            // hue slider of the color picker to keep its state consistent.\n            // Otherwise, when the hue slider is set in the middle and the user\n            // drags the cursor to the left most line (where c is 0)\n            // it will reset hue slider of color picker to be 0 too and we don't want this.\n            // The reason we convert to LCH instead of HSL to check hue's powerlessness is that\n            // we don't want the color to be clipped for doing this check.\n            if (oldHue !== null && colorOrHsv.as(\"lch\" /* Common.Color.Format.LCH */).isHuePowerless()) {\n                this.hsv[0] = oldHue;\n            }\n        }\n        this.colorNameInternal = colorName;\n        if (this.contrastInfo) {\n            this.contrastInfo.setColor(Common.Color.Legacy.fromHSVA(this.hsv), this.colorFormat);\n        }\n        this.updateHelperLocations();\n        this.updateUI();\n        if (changeSource !== ChangeSource.Input) {\n            this.updateInput();\n        }\n        if (changeSource !== ChangeSource.Model) {\n            this.dispatchEventToListeners(\"ColorChanged\" /* Events.COLOR_CHANGED */, this.colorString());\n        }\n    }\n    colorName() {\n        return this.colorNameInternal;\n    }\n    colorString() {\n        // If the `colorStringInternal` exists and\n        // if it is not an empty string, we will show that.\n        // Empty string check is important here since we use\n        // that to point that the colorStringInternal is cleared\n        // and should not be used.\n        if (this.colorStringInternal) {\n            return this.colorStringInternal;\n        }\n        const color = this.color;\n        let colorString = this.colorFormat && this.colorFormat !== color.format() ?\n            color.asString(this.colorFormat) :\n            (color.getAuthoredText() ?? color.asString());\n        if (colorString) {\n            return colorString;\n        }\n        if (this.colorFormat === \"hex\" /* Common.Color.Format.HEX */) {\n            colorString = color.asString(\"hexa\" /* Common.Color.Format.HEXA */);\n        }\n        else if (this.colorFormat === \"hsl\" /* Common.Color.Format.HSL */) {\n            colorString = color.asString(\"hsla\" /* Common.Color.Format.HSLA */);\n        }\n        else if (this.colorFormat === \"hwb\" /* Common.Color.Format.HWB */) {\n            colorString = color.asString(\"hwba\" /* Common.Color.Format.HWBA */);\n        }\n        else {\n            colorString = color.asString(\"rgba\" /* Common.Color.Format.RGBA */);\n        }\n        console.assert(Boolean(colorString));\n        return colorString || '';\n    }\n    updateHelperLocations() {\n        const h = this.hsv[0];\n        const s = this.hsv[1];\n        const v = this.hsv[2];\n        const alpha = this.hsv[3];\n        // Where to show the little circle that displays your current selected color.\n        this.dragX = s * this.dragWidth;\n        this.dragY = this.dragHeight - (v * this.dragHeight);\n        const dragX = Math.max(-this.colorDragElementHeight, Math.min(this.dragWidth - this.colorDragElementHeight, this.dragX - this.colorDragElementHeight));\n        const dragY = Math.max(-this.colorDragElementHeight, Math.min(this.dragHeight - this.colorDragElementHeight, this.dragY - this.colorDragElementHeight));\n        this.colorDragElement.positionAt(dragX, dragY);\n        // Where to show the bar that displays your current selected hue.\n        const hueSlideX = (1 - h) * this.hueAlphaWidth - this.slideHelperWidth;\n        this.hueSlider.style.left = hueSlideX + 'px';\n        const alphaSlideX = alpha * this.hueAlphaWidth - this.slideHelperWidth;\n        this.alphaSlider.style.left = alphaSlideX + 'px';\n    }\n    updateInput() {\n        if (this.colorFormat === \"hex\" /* Common.Color.Format.HEX */) {\n            this.hexContainer.hidden = false;\n            this.displayContainer.hidden = true;\n            this.hexValue.value =\n                this.color.asString((this.color.alpha ?? 1) !== 1 ? \"hexa\" /* Common.Color.Format.HEXA */ : \"hex\" /* Common.Color.Format.HEX */);\n        }\n        else {\n            // RGBA, HSLA, HWBA, color() display.\n            this.hexContainer.hidden = true;\n            this.displayContainer.hidden = false;\n            const spec = colorFormatSpec[this.colorFormat];\n            const colorValues = spec.toValues(this.color);\n            this.textLabels.textContent = spec.label;\n            for (let i = 0; i < this.textValues.length; ++i) {\n                UI.ARIAUtils.setLabel(this.textValues[i], \n                /** R in RGBA */ i18nString(UIStrings.sInS, {\n                    PH1: this.textLabels.textContent.charAt(i),\n                    PH2: this.textLabels.textContent,\n                }));\n                this.textValues[i].value = String(colorValues[i]);\n            }\n        }\n    }\n    hideSrgbOverlay() {\n        if (this.colorElement.contains(this.srgbOverlay)) {\n            this.colorElement.removeChild(this.srgbOverlay);\n        }\n    }\n    showSrgbOverlay() {\n        if ((this.contrastDetails && this.contrastDetails.expanded()) || this.gamut !== \"display-p3\" /* SpectrumGamut.DISPLAY_P3 */) {\n            return;\n        }\n        void this.srgbOverlay.render({\n            hue: this.hsv[0],\n            width: this.dragWidth,\n            height: this.dragHeight,\n        });\n        if (!this.colorElement.contains(this.srgbOverlay)) {\n            this.colorElement.appendChild(this.srgbOverlay);\n        }\n    }\n    updateSrgbOverlay() {\n        if (this.gamut === \"display-p3\" /* SpectrumGamut.DISPLAY_P3 */) {\n            this.showSrgbOverlay();\n        }\n        else {\n            this.hideSrgbOverlay();\n        }\n    }\n    updateUI() {\n        this.colorElement.style.backgroundColor = getColorFromHsva(this.gamut, [this.hsv[0], 1, 1, 1]).asString();\n        if (this.contrastOverlay) {\n            this.contrastOverlay.setDimensions(this.dragWidth, this.dragHeight);\n        }\n        this.updateSrgbOverlay();\n        this.swatch.setColor(this.color, this.colorString());\n        this.colorDragElement.style.backgroundColor = this.color.asString(\"lch\" /* Common.Color.Format.LCH */);\n        const noAlpha = Common.Color.Legacy.fromHSVA(this.hsv.slice(0, 3).concat(1));\n        this.alphaElementBackground.style.backgroundImage = Platform.StringUtilities.sprintf('linear-gradient(to right, rgba(0,0,0,0), %s)', noAlpha.asString(\"lch\" /* Common.Color.Format.LCH */));\n        this.hueElement.classList.toggle('display-p3', doesFormatSupportDisplayP3(this.colorFormat));\n    }\n    async showFormatPicker(event) {\n        const contextMenu = new FormatPickerContextMenu(this.color);\n        this.isFormatPickerShown = true;\n        await contextMenu.show(event, newColor => {\n            this.innerSetColor(newColor, undefined, undefined, newColor.format(), ChangeSource.Other);\n        });\n        this.isFormatPickerShown = false;\n    }\n    /**\n     * If the pasted input is parsable as a color, applies it converting to the current user format\n     */\n    pasted(event) {\n        if (!event.clipboardData) {\n            return;\n        }\n        const text = event.clipboardData.getData('text');\n        const color = Common.Color.parse(text);\n        if (!color) {\n            return;\n        }\n        this.innerSetColor(color, text, undefined /* colorName */, undefined /* colorFormat */, ChangeSource.Other);\n        event.preventDefault();\n    }\n    inputChanged(event) {\n        const inputElement = event.currentTarget;\n        const newValue = UI.UIUtils.createReplacementString(inputElement.value, event);\n        if (newValue) {\n            inputElement.value = newValue;\n            inputElement.selectionStart = 0;\n            inputElement.selectionEnd = newValue.length;\n            event.consume(true);\n        }\n        let color = null;\n        let colorFormat;\n        if (this.colorFormat === \"hex\" /* Common.Color.Format.HEX */) {\n            color = Common.Color.parse(this.hexValue.value);\n        }\n        else {\n            const spec = colorFormatSpec[this.colorFormat];\n            const colorTextValues = this.textValues.map(element => element.value);\n            if (colorTextValues.length !== 4) {\n                // Somehow the `textValues` array updated to contain more elements\n                // This shouldn't happen.\n                return;\n            }\n            // Since we know that `textValues` is an array with 4 elements we're safe\n            // to assert that `colorTextValues` is an array with 4 strings.\n            color = spec.fromValues(colorTextValues);\n        }\n        if (!color) {\n            return;\n        }\n        this.innerSetColor(color, undefined, undefined /* colorName */, colorFormat, ChangeSource.Input);\n    }\n    wasShown() {\n        this.registerCSSFiles([spectrumStyles]);\n        this.hueAlphaWidth = this.hueElement.offsetWidth;\n        this.slideHelperWidth = this.hueSlider.offsetWidth / 2;\n        this.dragWidth = this.colorElement.offsetWidth;\n        this.dragHeight = this.colorElement.offsetHeight;\n        this.colorDragElementHeight = this.colorDragElement.offsetHeight / 2;\n        this.innerSetColor(undefined, undefined, undefined /* colorName */, undefined, ChangeSource.Model);\n        // When flag is turned on, eye dropper is not turned on by default.\n        // This is because the global change of the cursor into a dropper will disturb the user.\n        if (!IS_NATIVE_EYE_DROPPER_AVAILABLE) {\n            void this.toggleColorPicker(true);\n        }\n        else {\n            this.colorPickerButton.setToggled(false);\n        }\n        if (this.contrastDetails && this.contrastDetailsBackgroundColorPickedToggledBound) {\n            this.contrastDetails.addEventListener(\"BackgroundColorPickerWillBeToggled\" /* ContrastDetailsEvents.BACKGROUND_COLOR_PICKER_WILL_BE_TOGGLED */, this.contrastDetailsBackgroundColorPickedToggledBound);\n        }\n    }\n    willHide() {\n        void this.toggleColorPicker(false);\n        if (this.contrastDetails && this.contrastDetailsBackgroundColorPickedToggledBound) {\n            this.contrastDetails.removeEventListener(\"BackgroundColorPickerWillBeToggled\" /* ContrastDetailsEvents.BACKGROUND_COLOR_PICKER_WILL_BE_TOGGLED */, this.contrastDetailsBackgroundColorPickedToggledBound);\n        }\n    }\n    async toggleColorPicker(enabled) {\n        if (enabled === undefined) {\n            enabled = this.colorPickerButton.isToggled();\n        }\n        // This is to make sure that only one picker is open at a time\n        // Also have a look at this.contrastDetailsBackgroundColorPickedToggled\n        if (this.contrastDetails && enabled && this.contrastDetails.backgroundColorPickerEnabled()) {\n            this.contrastDetails.toggleBackgroundColorPicker(false);\n        }\n        // With the old color picker, colors can only be picked up within the page.\n        if (!IS_NATIVE_EYE_DROPPER_AVAILABLE) {\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance.setEyeDropperActive(enabled);\n            if (enabled) {\n                Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(Host.InspectorFrontendHostAPI.Events.EyeDropperPickedColor, this.colorPickedBound);\n            }\n            else {\n                Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.removeEventListener(Host.InspectorFrontendHostAPI.Events.EyeDropperPickedColor, this.colorPickedBound);\n            }\n        }\n        else if (IS_NATIVE_EYE_DROPPER_AVAILABLE && enabled) {\n            // Use EyeDropper API, can pick up colors outside the browser window,\n            // Note: The current EyeDropper API is not designed to pick up colors continuously.\n            // Wait for TypeScript to support the definition of EyeDropper API:\n            // https://github.com/microsoft/TypeScript/issues/48638\n            /* eslint-disable  @typescript-eslint/no-explicit-any */\n            const eyeDropper = new window.EyeDropper();\n            this.eyeDropperAbortController = new AbortController();\n            try {\n                const hexColor = await eyeDropper.open({ signal: this.eyeDropperAbortController.signal });\n                const color = Common.Color.parse(hexColor.sRGBHex);\n                this.innerSetColor(color ?? undefined, '', undefined /* colorName */, undefined, ChangeSource.Other);\n            }\n            catch (error) {\n                if (error.name !== 'AbortError') {\n                    console.error(error);\n                }\n            }\n            this.colorPickerButton.setToggled(false);\n        }\n        else if (IS_NATIVE_EYE_DROPPER_AVAILABLE && !enabled) {\n            this.eyeDropperAbortController?.abort();\n            this.eyeDropperAbortController = null;\n        }\n    }\n    colorPicked({ data: rgbColor, }) {\n        const rgba = [rgbColor.r, rgbColor.g, rgbColor.b, (rgbColor.a / 2.55 | 0) / 100];\n        const color = Common.Color.Legacy.fromRGBA(rgba);\n        this.innerSetColor(color, '', undefined /* colorName */, undefined, ChangeSource.Other);\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n    }\n}\nexport const ChangeSource = {\n    Input: 'Input',\n    Model: 'Model',\n    Other: 'Other',\n};\nconst COLOR_CHIP_SIZE = 24;\nconst ITEMS_PER_PALETTE_ROW = 8;\nconst GeneratedPaletteTitle = 'Page colors';\nexport class PaletteGenerator {\n    callback;\n    frequencyMap;\n    constructor(callback) {\n        this.callback = callback;\n        this.frequencyMap = new Map();\n        const stylesheetPromises = [];\n        for (const cssModel of SDK.TargetManager.TargetManager.instance().models(SDK.CSSModel.CSSModel)) {\n            for (const stylesheet of cssModel.allStyleSheets()) {\n                stylesheetPromises.push(this.processStylesheet(stylesheet));\n            }\n        }\n        void Promise.all(stylesheetPromises)\n            .catch(error => {\n            console.error(error);\n        })\n            .then(this.finish.bind(this));\n    }\n    frequencyComparator(a, b) {\n        return this.frequencyMap.get(b) - this.frequencyMap.get(a);\n    }\n    finish() {\n        function hueComparator(a, b) {\n            const hsva = paletteColors.get(a).as(\"hsl\" /* Common.Color.Format.HSL */).hsva();\n            const hsvb = paletteColors.get(b).as(\"hsl\" /* Common.Color.Format.HSL */).hsva();\n            // First trim the shades of gray\n            if (hsvb[1] < 0.12 && hsva[1] < 0.12) {\n                return hsvb[2] * hsvb[3] - hsva[2] * hsva[3];\n            }\n            if (hsvb[1] < 0.12) {\n                return -1;\n            }\n            if (hsva[1] < 0.12) {\n                return 1;\n            }\n            // Equal hue -> sort by sat\n            if (hsvb[0] === hsva[0]) {\n                return hsvb[1] * hsvb[3] - hsva[1] * hsva[3];\n            }\n            return (hsvb[0] + 0.94) % 1 - (hsva[0] + 0.94) % 1;\n        }\n        let colors = [...this.frequencyMap.keys()];\n        colors = colors.sort(this.frequencyComparator.bind(this));\n        const paletteColors = new Map();\n        const colorsPerRow = 24;\n        while (paletteColors.size < colorsPerRow && colors.length) {\n            const colorText = colors.shift();\n            const color = Common.Color.parse(colorText);\n            if (!color) {\n                continue;\n            }\n            paletteColors.set(colorText, color);\n        }\n        this.callback({\n            title: GeneratedPaletteTitle,\n            colors: [...paletteColors.keys()].sort(hueComparator),\n            colorNames: [],\n            mutable: false,\n            matchUserFormat: undefined,\n        });\n    }\n    async processStylesheet(stylesheet) {\n        let text = (await stylesheet.requestContent()).content || '';\n        text = text.toLowerCase();\n        const regexResult = text.matchAll(/((?:rgb|hsl|hwb)a?\\([^)]+\\)|#[0-9a-f]{6}|#[0-9a-f]{3})/g);\n        for (const { 0: c, index } of regexResult) {\n            // Check whether the match occured in a property value and not in a property name or a selector by verifying\n            // that there's no colon after the match and before the next semicolon.\n            if (text.indexOf(';', index) < 0 ||\n                text.indexOf(':', index) > -1 && text.indexOf(':', index) < text.indexOf(';', index)) {\n                continue;\n            }\n            const frequency = 1 + (this.frequencyMap.get(c) ?? 0);\n            this.frequencyMap.set(c, frequency);\n        }\n    }\n}\nconst MaterialPaletteShades = new Map([\n    [\n        '#F44336',\n        ['#FFEBEE', '#FFCDD2', '#EF9A9A', '#E57373', '#EF5350', '#F44336', '#E53935', '#D32F2F', '#C62828', '#B71C1C'],\n    ],\n    [\n        '#E91E63',\n        ['#FCE4EC', '#F8BBD0', '#F48FB1', '#F06292', '#EC407A', '#E91E63', '#D81B60', '#C2185B', '#AD1457', '#880E4F'],\n    ],\n    [\n        '#9C27B0',\n        ['#F3E5F5', '#E1BEE7', '#CE93D8', '#BA68C8', '#AB47BC', '#9C27B0', '#8E24AA', '#7B1FA2', '#6A1B9A', '#4A148C'],\n    ],\n    [\n        '#673AB7',\n        ['#EDE7F6', '#D1C4E9', '#B39DDB', '#9575CD', '#7E57C2', '#673AB7', '#5E35B1', '#512DA8', '#4527A0', '#311B92'],\n    ],\n    [\n        '#3F51B5',\n        ['#E8EAF6', '#C5CAE9', '#9FA8DA', '#7986CB', '#5C6BC0', '#3F51B5', '#3949AB', '#303F9F', '#283593', '#1A237E'],\n    ],\n    [\n        '#2196F3',\n        ['#E3F2FD', '#BBDEFB', '#90CAF9', '#64B5F6', '#42A5F5', '#2196F3', '#1E88E5', '#1976D2', '#1565C0', '#0D47A1'],\n    ],\n    [\n        '#03A9F4',\n        ['#E1F5FE', '#B3E5FC', '#81D4FA', '#4FC3F7', '#29B6F6', '#03A9F4', '#039BE5', '#0288D1', '#0277BD', '#01579B'],\n    ],\n    [\n        '#00BCD4',\n        ['#E0F7FA', '#B2EBF2', '#80DEEA', '#4DD0E1', '#26C6DA', '#00BCD4', '#00ACC1', '#0097A7', '#00838F', '#006064'],\n    ],\n    [\n        '#009688',\n        ['#E0F2F1', '#B2DFDB', '#80CBC4', '#4DB6AC', '#26A69A', '#009688', '#00897B', '#00796B', '#00695C', '#004D40'],\n    ],\n    [\n        '#4CAF50',\n        ['#E8F5E9', '#C8E6C9', '#A5D6A7', '#81C784', '#66BB6A', '#4CAF50', '#43A047', '#388E3C', '#2E7D32', '#1B5E20'],\n    ],\n    [\n        '#8BC34A',\n        ['#F1F8E9', '#DCEDC8', '#C5E1A5', '#AED581', '#9CCC65', '#8BC34A', '#7CB342', '#689F38', '#558B2F', '#33691E'],\n    ],\n    [\n        '#CDDC39',\n        ['#F9FBE7', '#F0F4C3', '#E6EE9C', '#DCE775', '#D4E157', '#CDDC39', '#C0CA33', '#AFB42B', '#9E9D24', '#827717'],\n    ],\n    [\n        '#FFEB3B',\n        ['#FFFDE7', '#FFF9C4', '#FFF59D', '#FFF176', '#FFEE58', '#FFEB3B', '#FDD835', '#FBC02D', '#F9A825', '#F57F17'],\n    ],\n    [\n        '#FFC107',\n        ['#FFF8E1', '#FFECB3', '#FFE082', '#FFD54F', '#FFCA28', '#FFC107', '#FFB300', '#FFA000', '#FF8F00', '#FF6F00'],\n    ],\n    [\n        '#FF9800',\n        ['#FFF3E0', '#FFE0B2', '#FFCC80', '#FFB74D', '#FFA726', '#FF9800', '#FB8C00', '#F57C00', '#EF6C00', '#E65100'],\n    ],\n    [\n        '#FF5722',\n        ['#FBE9E7', '#FFCCBC', '#FFAB91', '#FF8A65', '#FF7043', '#FF5722', '#F4511E', '#E64A19', '#D84315', '#BF360C'],\n    ],\n    [\n        '#795548',\n        ['#EFEBE9', '#D7CCC8', '#BCAAA4', '#A1887F', '#8D6E63', '#795548', '#6D4C41', '#5D4037', '#4E342E', '#3E2723'],\n    ],\n    [\n        '#9E9E9E',\n        ['#FAFAFA', '#F5F5F5', '#EEEEEE', '#E0E0E0', '#BDBDBD', '#9E9E9E', '#757575', '#616161', '#424242', '#212121'],\n    ],\n    [\n        '#607D8B',\n        ['#ECEFF1', '#CFD8DC', '#B0BEC5', '#90A4AE', '#78909C', '#607D8B', '#546E7A', '#455A64', '#37474F', '#263238'],\n    ],\n]);\nexport const MaterialPalette = {\n    title: 'Material',\n    mutable: false,\n    matchUserFormat: true,\n    colors: [...MaterialPaletteShades.keys()],\n    colorNames: [],\n};\nexport class Swatch {\n    colorString;\n    swatchInnerElement;\n    swatchOverlayElement;\n    swatchCopyIcon;\n    constructor(parentElement) {\n        const swatchElement = parentElement.createChild('span', 'swatch');\n        swatchElement.setAttribute('jslog', `${VisualLogging.action('copy-color').track({ click: true })}`);\n        this.swatchInnerElement = swatchElement.createChild('span', 'swatch-inner');\n        this.swatchOverlayElement = swatchElement.createChild('span', 'swatch-overlay');\n        UI.ARIAUtils.markAsButton(this.swatchOverlayElement);\n        UI.ARIAUtils.setPressed(this.swatchOverlayElement, false);\n        this.swatchOverlayElement.tabIndex = 0;\n        self.onInvokeElement(this.swatchOverlayElement, this.onCopyText.bind(this));\n        this.swatchOverlayElement.addEventListener('mouseout', this.onCopyIconMouseout.bind(this));\n        this.swatchOverlayElement.addEventListener('blur', this.onCopyIconMouseout.bind(this));\n        this.swatchCopyIcon = IconButton.Icon.create('copy', 'copy-color-icon');\n        UI.Tooltip.Tooltip.install(this.swatchCopyIcon, i18nString(UIStrings.copyColorToClipboard));\n        this.swatchOverlayElement.appendChild(this.swatchCopyIcon);\n        UI.ARIAUtils.setLabel(this.swatchOverlayElement, this.swatchCopyIcon.title);\n    }\n    setColor(color, colorString) {\n        const lchColor = color.as(\"lch\" /* Common.Color.Format.LCH */);\n        this.swatchInnerElement.style.backgroundColor = lchColor.asString();\n        // Show border if the swatch is white.\n        this.swatchInnerElement.classList.toggle('swatch-inner-white', lchColor.l > 90);\n        this.colorString = colorString || null;\n        if (colorString) {\n            this.swatchOverlayElement.hidden = false;\n        }\n        else {\n            this.swatchOverlayElement.hidden = true;\n        }\n    }\n    onCopyText(event) {\n        this.swatchCopyIcon.name = 'checkmark';\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.colorString);\n        UI.ARIAUtils.setPressed(this.swatchOverlayElement, true);\n        event.consume();\n    }\n    onCopyIconMouseout() {\n        this.swatchCopyIcon.name = 'copy';\n        UI.ARIAUtils.setPressed(this.swatchOverlayElement, false);\n    }\n}\n//# sourceMappingURL=Spectrum.js.map","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nconst UIStrings = {\n    /**\n     *@description Label to explain why top values are ignored\n     */\n    topAppliedToAStatically: '`Top` applied to a statically positioned element',\n    /**\n     *@description Label to explain why left (opposite to right) values are ignored.\n     */\n    leftAppliedToAStatically: '`Left` applied to a statically positioned element',\n    /**\n     *@description Label to explain why right values are ignored\n     */\n    rightAppliedToAStatically: '`Right` applied to a statically positioned element',\n    /**\n     *@description Label to explain why bottom values are ignored\n     */\n    bottomAppliedToAStatically: '`Bottom` applied to a statically positioned element',\n    /**\n     *@description Label to explain why width values are ignored\n     */\n    widthAppliedToAnInlineElement: '`Width` applied to an inline element',\n    /**\n     *@description Label to explain why height values are ignored\n     */\n    heightAppliedToAnInlineElement: '`Height` applied to an inline element',\n    /**\n     *@description Label to explain why vertical-align values are ignored\n     */\n    verticalAlignmentAppliedTo: 'Vertical alignment applied to element which is neither `inline` nor `table-cell`',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewUnusedDeclarations.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class CSSOverviewUnusedDeclarations {\n    static add(target, key, item) {\n        const values = target.get(key) || [];\n        values.push(item);\n        target.set(key, values);\n    }\n    static checkForUnusedPositionValues(unusedDeclarations, nodeId, strings, positionIdx, topIdx, leftIdx, rightIdx, bottomIdx) {\n        if (strings[positionIdx] !== 'static') {\n            return;\n        }\n        if (strings[topIdx] !== 'auto') {\n            const reason = i18nString(UIStrings.topAppliedToAStatically);\n            this.add(unusedDeclarations, reason, {\n                declaration: `top: ${strings[topIdx]}`,\n                nodeId,\n            });\n        }\n        if (strings[leftIdx] !== 'auto') {\n            const reason = i18nString(UIStrings.leftAppliedToAStatically);\n            this.add(unusedDeclarations, reason, {\n                declaration: `left: ${strings[leftIdx]}`,\n                nodeId,\n            });\n        }\n        if (strings[rightIdx] !== 'auto') {\n            const reason = i18nString(UIStrings.rightAppliedToAStatically);\n            this.add(unusedDeclarations, reason, {\n                declaration: `right: ${strings[rightIdx]}`,\n                nodeId,\n            });\n        }\n        if (strings[bottomIdx] !== 'auto') {\n            const reason = i18nString(UIStrings.bottomAppliedToAStatically);\n            this.add(unusedDeclarations, reason, {\n                declaration: `bottom: ${strings[bottomIdx]}`,\n                nodeId,\n            });\n        }\n    }\n    static checkForUnusedWidthAndHeightValues(unusedDeclarations, nodeId, strings, displayIdx, widthIdx, heightIdx) {\n        if (strings[displayIdx] !== 'inline') {\n            return;\n        }\n        if (strings[widthIdx] !== 'auto') {\n            const reason = i18nString(UIStrings.widthAppliedToAnInlineElement);\n            this.add(unusedDeclarations, reason, {\n                declaration: `width: ${strings[widthIdx]}`,\n                nodeId,\n            });\n        }\n        if (strings[heightIdx] !== 'auto') {\n            const reason = i18nString(UIStrings.heightAppliedToAnInlineElement);\n            this.add(unusedDeclarations, reason, {\n                declaration: `height: ${strings[heightIdx]}`,\n                nodeId,\n            });\n        }\n    }\n    static checkForInvalidVerticalAlignment(unusedDeclarations, nodeId, strings, displayIdx, verticalAlignIdx) {\n        if (!strings[displayIdx] || strings[displayIdx].startsWith('inline') || strings[displayIdx].startsWith('table')) {\n            return;\n        }\n        if (strings[verticalAlignIdx] !== 'baseline') {\n            const reason = i18nString(UIStrings.verticalAlignmentAppliedTo);\n            this.add(unusedDeclarations, reason, {\n                declaration: `vertical-align: ${strings[verticalAlignIdx]}`,\n                nodeId,\n            });\n        }\n    }\n}\n//# sourceMappingURL=CSSOverviewUnusedDeclarations.js.map","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as ColorPicker from '../../ui/legacy/components/color_picker/color_picker.js';\nimport { CSSOverviewUnusedDeclarations } from './CSSOverviewUnusedDeclarations.js';\nexport class CSSOverviewModel extends SDK.SDKModel.SDKModel {\n    #runtimeAgent;\n    #cssAgent;\n    #domSnapshotAgent;\n    #overlayAgent;\n    constructor(target) {\n        super(target);\n        this.#runtimeAgent = target.runtimeAgent();\n        this.#cssAgent = target.cssAgent();\n        this.#domSnapshotAgent = target.domsnapshotAgent();\n        this.#overlayAgent = target.overlayAgent();\n    }\n    highlightNode(node) {\n        const highlightConfig = {\n            contentColor: Common.Color.PageHighlight.Content.toProtocolRGBA(),\n            showInfo: true,\n            contrastAlgorithm: Root.Runtime.experiments.isEnabled('apca') ? \"apca\" /* Protocol.Overlay.ContrastAlgorithm.Apca */ :\n                \"aa\" /* Protocol.Overlay.ContrastAlgorithm.Aa */,\n        };\n        void this.#overlayAgent.invoke_hideHighlight();\n        void this.#overlayAgent.invoke_highlightNode({ backendNodeId: node, highlightConfig });\n    }\n    async getNodeStyleStats() {\n        const backgroundColors = new Map();\n        const textColors = new Map();\n        const textColorContrastIssues = new Map();\n        const fillColors = new Map();\n        const borderColors = new Map();\n        const fontInfo = new Map();\n        const unusedDeclarations = new Map();\n        const snapshotConfig = {\n            computedStyles: [\n                'background-color',\n                'color',\n                'fill',\n                'border-top-width',\n                'border-top-color',\n                'border-bottom-width',\n                'border-bottom-color',\n                'border-left-width',\n                'border-left-color',\n                'border-right-width',\n                'border-right-color',\n                'font-family',\n                'font-size',\n                'font-weight',\n                'line-height',\n                'position',\n                'top',\n                'right',\n                'bottom',\n                'left',\n                'display',\n                'width',\n                'height',\n                'vertical-align',\n            ],\n            includeTextColorOpacities: true,\n            includeBlendedBackgroundColors: true,\n        };\n        const formatColor = (color) => {\n            if (color instanceof Common.Color.Legacy) {\n                return color.hasAlpha() ? color.asString(\"hexa\" /* Common.Color.Format.HEXA */) : color.asString(\"hex\" /* Common.Color.Format.HEX */);\n            }\n            return color.asString();\n        };\n        const storeColor = (id, nodeId, target) => {\n            if (id === -1) {\n                return;\n            }\n            // Parse the color, discard transparent ones.\n            const colorText = strings[id];\n            if (!colorText) {\n                return;\n            }\n            const color = Common.Color.parse(colorText);\n            if (!color || color.asLegacyColor().rgba()[3] === 0) {\n                return;\n            }\n            // Format the color and use as the key.\n            const colorFormatted = formatColor(color);\n            if (!colorFormatted) {\n                return;\n            }\n            // Get the existing set of nodes with the color, or create a new set.\n            const colorValues = target.get(colorFormatted) || new Set();\n            colorValues.add(nodeId);\n            // Store.\n            target.set(colorFormatted, colorValues);\n            return color;\n        };\n        const isSVGNode = (nodeName) => {\n            const validNodes = new Set([\n                'altglyph',\n                'circle',\n                'ellipse',\n                'path',\n                'polygon',\n                'polyline',\n                'rect',\n                'svg',\n                'text',\n                'textpath',\n                'tref',\n                'tspan',\n            ]);\n            return validNodes.has(nodeName.toLowerCase());\n        };\n        const isReplacedContent = (nodeName) => {\n            const validNodes = new Set(['iframe', 'video', 'embed', 'img']);\n            return validNodes.has(nodeName.toLowerCase());\n        };\n        const isTableElementWithDefaultStyles = (nodeName, display) => {\n            const validNodes = new Set(['tr', 'td', 'thead', 'tbody']);\n            return validNodes.has(nodeName.toLowerCase()) && display.startsWith('table');\n        };\n        let elementCount = 0;\n        const { documents, strings } = await this.#domSnapshotAgent.invoke_captureSnapshot(snapshotConfig);\n        for (const { nodes, layout } of documents) {\n            // Track the number of elements in the documents.\n            elementCount += layout.nodeIndex.length;\n            for (let idx = 0; idx < layout.styles.length; idx++) {\n                const styles = layout.styles[idx];\n                const nodeIdx = layout.nodeIndex[idx];\n                if (!nodes.backendNodeId || !nodes.nodeName) {\n                    continue;\n                }\n                const nodeId = nodes.backendNodeId[nodeIdx];\n                const nodeName = nodes.nodeName[nodeIdx];\n                const [backgroundColorIdx, textColorIdx, fillIdx, borderTopWidthIdx, borderTopColorIdx, borderBottomWidthIdx, borderBottomColorIdx, borderLeftWidthIdx, borderLeftColorIdx, borderRightWidthIdx, borderRightColorIdx, fontFamilyIdx, fontSizeIdx, fontWeightIdx, lineHeightIdx, positionIdx, topIdx, rightIdx, bottomIdx, leftIdx, displayIdx, widthIdx, heightIdx, verticalAlignIdx] = styles;\n                storeColor(backgroundColorIdx, nodeId, backgroundColors);\n                const textColor = storeColor(textColorIdx, nodeId, textColors);\n                if (isSVGNode(strings[nodeName])) {\n                    storeColor(fillIdx, nodeId, fillColors);\n                }\n                if (strings[borderTopWidthIdx] !== '0px') {\n                    storeColor(borderTopColorIdx, nodeId, borderColors);\n                }\n                if (strings[borderBottomWidthIdx] !== '0px') {\n                    storeColor(borderBottomColorIdx, nodeId, borderColors);\n                }\n                if (strings[borderLeftWidthIdx] !== '0px') {\n                    storeColor(borderLeftColorIdx, nodeId, borderColors);\n                }\n                if (strings[borderRightWidthIdx] !== '0px') {\n                    storeColor(borderRightColorIdx, nodeId, borderColors);\n                }\n                /**\n                 * Create a structure like this for font info:\n                 *\n                 *                 / size (Map) -- nodes (Array)\n                 *                /\n                 * Font family (Map) ----- weight (Map) -- nodes (Array)\n                 *                \\\n                 *                 \\ line-height (Map) -- nodes (Array)\n                 */\n                if (fontFamilyIdx && fontFamilyIdx !== -1) {\n                    const fontFamily = strings[fontFamilyIdx];\n                    const fontFamilyInfo = fontInfo.get(fontFamily) || new Map();\n                    const sizeLabel = 'font-size';\n                    const weightLabel = 'font-weight';\n                    const lineHeightLabel = 'line-height';\n                    const size = fontFamilyInfo.get(sizeLabel) || new Map();\n                    const weight = fontFamilyInfo.get(weightLabel) || new Map();\n                    const lineHeight = fontFamilyInfo.get(lineHeightLabel) || new Map();\n                    if (fontSizeIdx !== -1) {\n                        const fontSizeValue = strings[fontSizeIdx];\n                        const nodes = size.get(fontSizeValue) || [];\n                        nodes.push(nodeId);\n                        size.set(fontSizeValue, nodes);\n                    }\n                    if (fontWeightIdx !== -1) {\n                        const fontWeightValue = strings[fontWeightIdx];\n                        const nodes = weight.get(fontWeightValue) || [];\n                        nodes.push(nodeId);\n                        weight.set(fontWeightValue, nodes);\n                    }\n                    if (lineHeightIdx !== -1) {\n                        const lineHeightValue = strings[lineHeightIdx];\n                        const nodes = lineHeight.get(lineHeightValue) || [];\n                        nodes.push(nodeId);\n                        lineHeight.set(lineHeightValue, nodes);\n                    }\n                    // Set the data back.\n                    fontFamilyInfo.set(sizeLabel, size);\n                    fontFamilyInfo.set(weightLabel, weight);\n                    fontFamilyInfo.set(lineHeightLabel, lineHeight);\n                    fontInfo.set(fontFamily, fontFamilyInfo);\n                }\n                const blendedBackgroundColor = textColor && layout.blendedBackgroundColors && layout.blendedBackgroundColors[idx] !== -1 ?\n                    Common.Color.parse(strings[layout.blendedBackgroundColors[idx]]) :\n                    null;\n                if (textColor && blendedBackgroundColor) {\n                    const contrastInfo = new ColorPicker.ContrastInfo.ContrastInfo({\n                        backgroundColors: [blendedBackgroundColor.asString(\"hexa\" /* Common.Color.Format.HEXA */)],\n                        computedFontSize: fontSizeIdx !== -1 ? strings[fontSizeIdx] : '',\n                        computedFontWeight: fontWeightIdx !== -1 ? strings[fontWeightIdx] : '',\n                    });\n                    const blendedTextColor = textColor.asLegacyColor().blendWithAlpha(layout.textColorOpacities ? layout.textColorOpacities[idx] : 1);\n                    contrastInfo.setColor(blendedTextColor);\n                    const formattedTextColor = formatColor(blendedTextColor);\n                    const formattedBackgroundColor = formatColor(blendedBackgroundColor.asLegacyColor());\n                    const key = `${formattedTextColor}_${formattedBackgroundColor}`;\n                    if (Root.Runtime.experiments.isEnabled('apca')) {\n                        const contrastRatio = contrastInfo.contrastRatioAPCA();\n                        const threshold = contrastInfo.contrastRatioAPCAThreshold();\n                        const passes = contrastRatio && threshold ? Math.abs(contrastRatio) >= threshold : false;\n                        if (!passes && contrastRatio) {\n                            const issue = {\n                                nodeId,\n                                contrastRatio,\n                                textColor: blendedTextColor,\n                                backgroundColor: blendedBackgroundColor,\n                                thresholdsViolated: {\n                                    aa: false,\n                                    aaa: false,\n                                    apca: true,\n                                },\n                            };\n                            if (textColorContrastIssues.has(key)) {\n                                textColorContrastIssues.get(key).push(issue);\n                            }\n                            else {\n                                textColorContrastIssues.set(key, [issue]);\n                            }\n                        }\n                    }\n                    else {\n                        const aaThreshold = contrastInfo.contrastRatioThreshold('aa') || 0;\n                        const aaaThreshold = contrastInfo.contrastRatioThreshold('aaa') || 0;\n                        const contrastRatio = contrastInfo.contrastRatio() || 0;\n                        if (aaThreshold > contrastRatio || aaaThreshold > contrastRatio) {\n                            const issue = {\n                                nodeId,\n                                contrastRatio,\n                                textColor: blendedTextColor,\n                                backgroundColor: blendedBackgroundColor,\n                                thresholdsViolated: {\n                                    aa: aaThreshold > contrastRatio,\n                                    aaa: aaaThreshold > contrastRatio,\n                                    apca: false,\n                                },\n                            };\n                            if (textColorContrastIssues.has(key)) {\n                                textColorContrastIssues.get(key).push(issue);\n                            }\n                            else {\n                                textColorContrastIssues.set(key, [issue]);\n                            }\n                        }\n                    }\n                }\n                CSSOverviewUnusedDeclarations.checkForUnusedPositionValues(unusedDeclarations, nodeId, strings, positionIdx, topIdx, leftIdx, rightIdx, bottomIdx);\n                // Ignore SVG elements as, despite being inline by default, they can have width & height specified.\n                // Also ignore replaced content, for similar reasons.\n                if (!isSVGNode(strings[nodeName]) && !isReplacedContent(strings[nodeName])) {\n                    CSSOverviewUnusedDeclarations.checkForUnusedWidthAndHeightValues(unusedDeclarations, nodeId, strings, displayIdx, widthIdx, heightIdx);\n                }\n                if (verticalAlignIdx !== -1 && !isTableElementWithDefaultStyles(strings[nodeName], strings[displayIdx])) {\n                    CSSOverviewUnusedDeclarations.checkForInvalidVerticalAlignment(unusedDeclarations, nodeId, strings, displayIdx, verticalAlignIdx);\n                }\n            }\n        }\n        return {\n            backgroundColors,\n            textColors,\n            textColorContrastIssues,\n            fillColors,\n            borderColors,\n            fontInfo,\n            unusedDeclarations,\n            elementCount,\n        };\n    }\n    getComputedStyleForNode(nodeId) {\n        return this.#cssAgent.invoke_getComputedStyleForNode({ nodeId });\n    }\n    async getMediaQueries() {\n        const queries = await this.#cssAgent.invoke_getMediaQueries();\n        const queryMap = new Map();\n        if (!queries) {\n            return queryMap;\n        }\n        for (const query of queries.medias) {\n            // Ignore media queries applied to stylesheets; instead only use declared media rules.\n            if (query.source === 'linkedSheet') {\n                continue;\n            }\n            const entries = queryMap.get(query.text) || [];\n            entries.push(query);\n            queryMap.set(query.text, entries);\n        }\n        return queryMap;\n    }\n    async getGlobalStylesheetStats() {\n        // There are no ways to pull CSSOM values directly today, due to its unserializable format,\n        // so instead we execute some JS within the page that extracts the relevant data and send that instead.\n        const expression = `(function() {\n      let styleRules = 0;\n      let inlineStyles = 0;\n      let externalSheets = 0;\n      const stats = {\n        // Simple.\n        type: new Set(),\n        class: new Set(),\n        id: new Set(),\n        universal: new Set(),\n        attribute: new Set(),\n\n        // Non-simple.\n        nonSimple: new Set()\n      };\n\n      for (const styleSheet of document.styleSheets) {\n        if (styleSheet.href) {\n          externalSheets++;\n        } else {\n          inlineStyles++;\n        }\n\n        // Attempting to grab rules can trigger a DOMException.\n        // Try it and if it fails skip to the next stylesheet.\n        let rules;\n        try {\n          rules = styleSheet.rules;\n        } catch (err) {\n          continue;\n        }\n\n        for (const rule of rules) {\n          if ('selectorText' in rule) {\n            styleRules++;\n\n            // Each group that was used.\n            for (const selectorGroup of rule.selectorText.split(',')) {\n              // Each selector in the group.\n              for (const selector of selectorGroup.split(\\/[\\\\t\\\\n\\\\f\\\\r ]+\\/g)) {\n                if (selector.startsWith('.')) {\n                  // Class.\n                  stats.class.add(selector);\n                } else if (selector.startsWith('#')) {\n                  // Id.\n                  stats.id.add(selector);\n                } else if (selector.startsWith('*')) {\n                  // Universal.\n                  stats.universal.add(selector);\n                } else if (selector.startsWith('[')) {\n                  // Attribute.\n                  stats.attribute.add(selector);\n                } else {\n                  // Type or non-simple selector.\n                  const specialChars = \\/[#\\.:\\\\[\\\\]|\\\\+>~]\\/;\n                  if (specialChars.test(selector)) {\n                    stats.nonSimple.add(selector);\n                  } else {\n                    stats.type.add(selector);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return {\n        styleRules,\n        inlineStyles,\n        externalSheets,\n        stats: {\n          // Simple.\n          type: stats.type.size,\n          class: stats.class.size,\n          id: stats.id.size,\n          universal: stats.universal.size,\n          attribute: stats.attribute.size,\n\n          // Non-simple.\n          nonSimple: stats.nonSimple.size\n        }\n      }\n    })()`;\n        const { result } = await this.#runtimeAgent.invoke_evaluate({ expression, returnByValue: true });\n        // TODO(paullewis): Handle errors properly.\n        if (result.type !== 'object') {\n            return;\n        }\n        return result.value;\n    }\n}\nSDK.SDKModel.SDKModel.register(CSSOverviewModel, { capabilities: 2 /* SDK.Target.Capability.DOM */, autostart: false });\n//# sourceMappingURL=CSSOverviewModel.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/**\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.overview-processing-view {\n  overflow: hidden;\n  padding: 16px;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n}\n\n.overview-processing-view h1 {\n  font-size: 16px;\n  text-align: center;\n  font-weight: normal;\n  margin: 0;\n  padding: 8px;\n}\n\n.overview-processing-view h2 {\n  font-size: 12px;\n  text-align: center;\n  font-weight: normal;\n  margin: 0;\n  padding-top: 32px;\n}\n\n/*# sourceURL=cssOverviewProcessingView.css */\n`);\n\nexport default styles;\n","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport cssOverviewProcessingViewStyles from './cssOverviewProcessingView.css.js';\nconst UIStrings = {\n    /**\n     *@description Text to cancel something\n     */\n    cancel: 'Cancel',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewProcessingView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class CSSOverviewProcessingView extends UI.Widget.Widget {\n    #controller;\n    fragment;\n    constructor(controller) {\n        super();\n        this.#controller = controller;\n        this.#render();\n    }\n    #render() {\n        const cancelButton = UI.UIUtils.createTextButton(i18nString(UIStrings.cancel), () => this.#controller.dispatchEventToListeners(\"RequestOverviewCancel\" /* Events.REQUEST_OVERVIEW_CANCEL */), { jslogContext: 'css-overview.cancel-processing', variant: \"outlined\" /* Buttons.Button.Variant.OUTLINED */ });\n        this.setDefaultFocusedElement(cancelButton);\n        this.fragment = UI.Fragment.Fragment.build `\n      <div class=\"vbox overview-processing-view\">\n        <h1>Processing page</h1>\n        <div>${cancelButton}</div>\n      </div>\n    `;\n        this.contentElement.appendChild(this.fragment.element());\n        this.contentElement.style.overflow = 'auto';\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([cssOverviewProcessingViewStyles]);\n    }\n}\n//# sourceMappingURL=CSSOverviewProcessingView.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/**\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.overview-completed-view {\n  overflow: auto;\n\n  --overview-default-padding: 28px;\n  --overview-icon-padding: 32px;\n}\n\n.overview-completed-view .summary ul,\n.overview-completed-view .colors ul {\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.overview-completed-view .summary ul {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 140px);\n  grid-gap: 16px;\n}\n\n.overview-completed-view .colors ul li {\n  display: inline-block;\n  margin: 0 0 16px;\n  padding: 0 8px 0 0;\n}\n\n.overview-completed-view .summary ul li {\n  display: flex;\n  flex-direction: column;\n  grid-column-start: auto;\n}\n\n.overview-completed-view li .label {\n  font-size: 12px;\n  padding-bottom: 2px;\n}\n\n.overview-completed-view li .value {\n  font-size: 17px;\n}\n\n.overview-completed-view ul li span {\n  font-weight: bold;\n}\n\n.unused-rules-grid .header-container,\n.unused-rules-grid .data-container,\n.unused-rules-grid table.data {\n  position: relative;\n}\n\n.unused-rules-grid .data-container {\n  top: 0;\n  max-height: 350px;\n}\n\n.unused-rules-grid {\n  border-left: none;\n  border-right: none;\n}\n/** Ensure links are rendered at the correct height */\n\n.unused-rules-grid .monospace {\n  display: block;\n  height: 18px;\n}\n\n.element-grid {\n  flex: 1;\n  border-left: none;\n  border-right: none;\n  overflow: auto;\n}\n\n.block {\n  width: 65px;\n  height: 25px;\n  border-radius: 3px;\n  margin-right: 16px;\n}\n\n.block-title {\n  padding-top: 4px;\n  font-size: 12px;\n  color: var(--sys-color-on-surface);\n  letter-spacing: 0;\n  text-transform: uppercase;\n}\n\n.block-title.color-text {\n  text-transform: none;\n  max-width: 65px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: text;\n  user-select: text;\n  overflow: hidden;\n}\n\n.results-section {\n  flex-shrink: 0;\n  border-bottom: 1px solid var(--sys-color-divider);\n  padding: var(--overview-default-padding) 0 var(--overview-default-padding) 0;\n}\n\n.horizontally-padded {\n  padding-left: var(--overview-default-padding);\n  padding-right: var(--overview-default-padding);\n}\n\n.results-section h1 {\n  font-size: 15px;\n  font-weight: normal;\n  padding: 0;\n  margin: 0 0 20px;\n  padding-left: calc(var(--overview-default-padding) + var(--overview-icon-padding));\n  position: relative;\n  height: 26px;\n  line-height: 26px;\n}\n\n.results-section h1::before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  left: var(--overview-default-padding);\n  top: 0;\n  width: 26px;\n  height: 26px;\n  background-image: var(--image-file-cssoverview_icons_2x);\n  background-size: 104px 26px;\n}\n\n.results-section.horizontally-padded h1 {\n  padding-left: var(--overview-icon-padding);\n}\n\n.results-section.horizontally-padded h1::before {\n  left: 0;\n}\n\n.results-section.summary h1 {\n  padding-left: 0;\n}\n\n.results-section.summary h1::before {\n  display: none;\n}\n\n.results-section.colors h1::before {\n  background-position: 0 0;\n}\n\n.results-section.font-info h1::before {\n  background-position: -26px 0;\n}\n\n.results-section.unused-declarations h1::before {\n  background-position: -52px 0;\n}\n\n.results-section.media-queries h1::before {\n  background-position: -78px 0;\n}\n\n.results-section.colors h2 {\n  margin-top: 20px;\n  font-size: 13px;\n  font-weight: normal;\n}\n\n.overview-completed-view .font-info ul,\n.overview-completed-view .media-queries ul,\n.overview-completed-view .unused-declarations ul {\n  width: 100%;\n  list-style: none;\n  margin: 0;\n  padding: 0 var(--overview-default-padding);\n}\n\n.overview-completed-view .font-info ul li,\n.overview-completed-view .media-queries ul li,\n.overview-completed-view .unused-declarations ul li {\n  display: grid;\n  grid-template-columns: 2fr 3fr;\n  grid-gap: 12px;\n  margin-bottom: 4px;\n  align-items: center;\n}\n\n.overview-completed-view .font-info button .details,\n.overview-completed-view .media-queries button .details,\n.overview-completed-view .unused-declarations button .details {\n  min-width: 100px;\n  text-align: right;\n  margin-right: 8px;\n  color: var(--sys-color-primary);\n  pointer-events: none;\n}\n\n.overview-completed-view .font-info button .bar-container,\n.overview-completed-view .media-queries button .bar-container,\n.overview-completed-view .unused-declarations button .bar-container {\n  flex: 1;\n  pointer-events: none;\n}\n\n.overview-completed-view .font-info button .bar,\n.overview-completed-view .media-queries button .bar,\n.overview-completed-view .unused-declarations button .bar {\n  height: 8px;\n  background: var(--sys-color-primary-bright);\n  border-radius: 2px;\n  min-width: 2px;\n}\n\n.overview-completed-view .font-info button,\n.overview-completed-view .media-queries button,\n.overview-completed-view .unused-declarations button {\n  border: none;\n  padding: 0;\n  padding-right: 10px;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  border-radius: 2px;\n  cursor: pointer;\n  height: 28px;\n  background: none;\n\n  &:focus-visible {\n    outline: 2px solid var(--sys-color-state-focus-ring);\n  }\n\n  &:hover {\n    border-radius: 12px;\n    background: var(--sys-color-state-hover-on-subtle);\n  }\n\n  &:hover .details,\n  &:focus .details {\n    color: color-mix(in sRGB, var(--sys-color-primary), var(--sys-color-state-hover-on-prominent) 6%);\n  }\n\n  &:hover .bar,\n  &:focus .bar {\n    background-color: color-mix(in sRGB, var(--sys-color-primary-bright), var(--sys-color-state-hover-on-prominent) 6%);\n    color: var(--sys-color-on-primary);\n  }\n}\n\n.overview-completed-view .font-info .font-metric {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  grid-gap: 12px;\n}\n\n.overview-completed-view .font-info ul {\n  padding: 0;\n}\n\n.overview-completed-view .font-info ul li {\n  grid-template-columns: 1fr 4fr;\n}\n\n.overview-completed-view .font-info h2 {\n  font-size: 14px;\n  font-weight: bold;\n  margin: 0 0 1em;\n}\n\n.overview-completed-view .font-info h3 {\n  font-size: 13px;\n  font-weight: normal;\n  font-style: italic;\n  margin: 0 0 0.5em;\n}\n\n.overview-completed-view .font-info {\n  padding-bottom: 0;\n}\n\n.overview-completed-view .font-family {\n  padding: var(--overview-default-padding);\n}\n\n.overview-completed-view .font-family:nth-child(2n+1) {\n  background: var(--sys-color-cdt-base-container);\n}\n\n.overview-completed-view .font-family:first-of-type {\n  padding-top: 0;\n}\n\n.contrast-warning {\n  display: flex;\n  align-items: center;\n  margin-top: 2px;\n}\n\n.contrast-warning .threshold-label {\n  font-weight: normal;\n  width: 30px;\n}\n\n.contrast-warning devtools-icon {\n  margin-left: 2px;\n}\n\n.contrast-preview {\n  padding: 0 5px;\n}\n\n.contrast-container-in-grid {\n  display: flex;\n  align-items: center;\n}\n\n.contrast-container-in-grid > * {\n  margin-right: 5px;\n  min-width: initial;\n}\n\n.data .nodeId-column {\n  align-items: center;\n  display: flex;\n  height: 20px;\n}\n\n.nodeId-column .monospace {\n  overflow: hidden;\n}\n\n.show-element {\n  margin: 0 0 0 8px;\n  display: none;\n  cursor: pointer;\n  flex: none;\n\n  --icon-show-element: var(--icon-default);\n}\n\n.show-element:focus,\n.show-element:hover {\n  --icon-show-element: var(--icon-default-hover);\n}\n\n.nodeId-column:focus-within .show-element,\n.nodeId-column:hover .show-element {\n  display: inline-block;\n}\n\n.results-section.colors {\n  forced-color-adjust: none; /* show colors in high contrast theme */\n}\n\n/*# sourceURL=cssOverviewCompletedView.css */\n`);\n\nexport default styles;\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/**\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.overview-sidebar-panel {\n  overflow: auto;\n  display: flex;\n  background: var(--sys-color-cdt-base-container);\n}\n\n.overview-sidebar-panel-container {\n  min-width: fit-content;\n}\n\n.overview-sidebar-panel-item {\n  height: 30px;\n  padding-left: 30px;\n  display: flex;\n  align-items: center;\n  color: var(--sys-color-on-surface);\n  white-space: nowrap;\n\n  &:hover {\n    background: var(--sys-color-state-hover-on-subtle);\n  }\n\n  &:focus {\n    background: var(--sys-color-state-focus-highlight);\n  }\n\n  &.selected {\n    background: var(--sys-color-tonal-container);\n    color: var(--sys-color-on-tonal-container);\n  }\n}\n\n.overview-toolbar {\n  border-bottom: 1px solid var(--sys-color-divider);\n  flex: 0 0 auto;\n}\n\n.overview-sidebar-panel-item:focus-visible {\n  outline-width: unset;\n}\n\n@media (forced-colors: active) {\n  .overview-sidebar-panel-item.selected {\n    forced-color-adjust: none; /* crbug.com/1166705 workaround */\n    background: Highlight;\n    color: HighlightText;\n  }\n\n  .overview-sidebar-panel-item:hover {\n    forced-color-adjust: none; /* crbug.com/1166705 workaround */\n    background: Highlight;\n    color: HighlightText;\n  }\n}\n\n/*# sourceURL=cssOverviewSidebarPanel.css */\n`);\n\nexport default styles;\n","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport cssOverviewSidebarPanelStyles from './cssOverviewSidebarPanel.css.js';\nconst UIStrings = {\n    /**\n     *@description Label for the 'Clear overview' button in the CSS overview report\n     */\n    clearOverview: 'Clear overview',\n    /**\n     * @description Accessible label for the CSS overview panel sidebar\n     */\n    cssOverviewPanelSidebar: 'CSS overview panel sidebar',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewSidebarPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst ITEM_CLASS_NAME = 'overview-sidebar-panel-item';\nconst SELECTED_CLASS_NAME = 'selected';\nexport class CSSOverviewSidebarPanel extends Common.ObjectWrapper.eventMixin(UI.Widget.VBox) {\n    containerElement;\n    constructor() {\n        super(true);\n        this.contentElement.classList.add('overview-sidebar-panel');\n        this.contentElement.addEventListener('click', this.#onItemClick.bind(this));\n        this.contentElement.addEventListener('keydown', this.#onItemKeyDown.bind(this));\n        // We need a container so that each item covers the full width of the\n        // longest item, so that the selected item's background expands fully\n        // even when the sidebar overflows.\n        // Also see crbug/1408003\n        this.containerElement =\n            this.contentElement.createChild('div', 'overview-sidebar-panel-container');\n        UI.ARIAUtils.setLabel(this.containerElement, i18nString(UIStrings.cssOverviewPanelSidebar));\n        UI.ARIAUtils.markAsTree(this.containerElement);\n        // Clear overview.\n        const clearResultsButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearOverview), 'clear', undefined, 'css-overview.clear-overview');\n        clearResultsButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.#reset, this);\n        // Toolbar.\n        const toolbarElement = this.containerElement.createChild('div', 'overview-toolbar');\n        const toolbar = new UI.Toolbar.Toolbar('', toolbarElement);\n        toolbar.appendToolbarItem(clearResultsButton);\n    }\n    addItem(name, id) {\n        const item = this.containerElement.createChild('div', ITEM_CLASS_NAME);\n        item.setAttribute('jslog', `${VisualLogging.item()\n            .track({ click: true, keydown: 'Enter|ArrowUp|ArrowDown' })\n            .context(`css-overview.${id}`)}`);\n        UI.ARIAUtils.markAsTreeitem(item);\n        item.textContent = name;\n        item.dataset.id = id;\n        item.tabIndex = 0;\n    }\n    #reset() {\n        this.dispatchEventToListeners(\"Reset\" /* SidebarEvents.RESET */);\n    }\n    #deselectAllItems() {\n        const items = this.containerElement.querySelectorAll(`.${ITEM_CLASS_NAME}`);\n        items.forEach(item => {\n            item.classList.remove(SELECTED_CLASS_NAME);\n        });\n    }\n    #onItemClick(event) {\n        const target = event.composedPath()[0];\n        if (!target.classList.contains(ITEM_CLASS_NAME)) {\n            return;\n        }\n        const { id } = target.dataset;\n        if (!id) {\n            return;\n        }\n        this.select(id, false);\n        this.dispatchEventToListeners(\"ItemSelected\" /* SidebarEvents.ITEM_SELECTED */, { id, isMouseEvent: true, key: undefined });\n    }\n    #onItemKeyDown(event) {\n        if (event.key !== 'Enter' && event.key !== 'ArrowUp' && event.key !== 'ArrowDown') {\n            return;\n        }\n        const target = event.composedPath()[0];\n        if (!target.classList.contains(ITEM_CLASS_NAME)) {\n            return;\n        }\n        const { id } = target.dataset;\n        if (!id) {\n            return;\n        }\n        if (event.key === 'Enter') {\n            this.select(id, false);\n            this.dispatchEventToListeners(\"ItemSelected\" /* SidebarEvents.ITEM_SELECTED */, { id, isMouseEvent: false, key: event.key });\n        }\n        else { // arrow up/down key\n            const items = this.containerElement.querySelectorAll(`.${ITEM_CLASS_NAME}`);\n            let currItemIndex = -1;\n            for (let idx = 0; idx < items.length; idx++) {\n                if (items[idx].dataset.id === id) {\n                    currItemIndex = idx;\n                    break;\n                }\n            }\n            if (currItemIndex < 0) {\n                return;\n            }\n            const moveTo = (event.key === 'ArrowDown' ? 1 : -1);\n            const nextItemIndex = (currItemIndex + moveTo) % items.length;\n            const nextItemId = items[nextItemIndex].dataset.id;\n            if (!nextItemId) {\n                return;\n            }\n            this.select(nextItemId, true);\n            this.dispatchEventToListeners(\"ItemSelected\" /* SidebarEvents.ITEM_SELECTED */, { id: nextItemId, isMouseEvent: false, key: event.key });\n        }\n        event.consume(true);\n    }\n    select(id, focus) {\n        const target = this.containerElement.querySelector(`[data-id=${CSS.escape(id)}]`);\n        if (!target) {\n            return;\n        }\n        if (target.classList.contains(SELECTED_CLASS_NAME)) {\n            return;\n        }\n        this.#deselectAllItems();\n        target.classList.add(SELECTED_CLASS_NAME);\n        if (focus) {\n            target.contentEditable = 'true';\n            target.focus();\n            target.contentEditable = 'false';\n        }\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([cssOverviewSidebarPanelStyles]);\n    }\n}\n//# sourceMappingURL=CSSOverviewSidebarPanel.js.map","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport cssOverviewCompletedViewStyles from './cssOverviewCompletedView.css.js';\nimport { CSSOverviewSidebarPanel } from './CSSOverviewSidebarPanel.js';\nconst UIStrings = {\n    /**\n     *@description Label for the summary in the CSS overview report\n     */\n    overviewSummary: 'Overview summary',\n    /**\n     *@description Title of colors subsection in the CSS overview panel\n     */\n    colors: 'Colors',\n    /**\n     *@description Title of font info subsection in the CSS overview panel\n     */\n    fontInfo: 'Font info',\n    /**\n     *@description Label to denote unused declarations in the target page\n     */\n    unusedDeclarations: 'Unused declarations',\n    /**\n     *@description Label for the number of media queries in the CSS overview report\n     */\n    mediaQueries: 'Media queries',\n    /**\n     *@description Title of the Elements Panel\n     */\n    elements: 'Elements',\n    /**\n     *@description Label for the number of External stylesheets in the CSS overview report\n     */\n    externalStylesheets: 'External stylesheets',\n    /**\n     *@description Label for the number of inline style elements in the CSS overview report\n     */\n    inlineStyleElements: 'Inline style elements',\n    /**\n     *@description Label for the number of style rules in CSS overview report\n     */\n    styleRules: 'Style rules',\n    /**\n     *@description Label for the number of type selectors in the CSS overview report\n     */\n    typeSelectors: 'Type selectors',\n    /**\n     *@description Label for the number of ID selectors in the CSS overview report\n     */\n    idSelectors: 'ID selectors',\n    /**\n     *@description Label for the number of class selectors in the CSS overview report\n     */\n    classSelectors: 'Class selectors',\n    /**\n     *@description Label for the number of universal selectors in the CSS overview report\n     */\n    universalSelectors: 'Universal selectors',\n    /**\n     *@description Label for the number of Attribute selectors in the CSS overview report\n     */\n    attributeSelectors: 'Attribute selectors',\n    /**\n     *@description Label for the number of non-simple selectors in the CSS overview report\n     */\n    nonsimpleSelectors: 'Non-simple selectors',\n    /**\n     *@description Label for unique background colors in the CSS overview panel\n     *@example {32} PH1\n     */\n    backgroundColorsS: 'Background colors: {PH1}',\n    /**\n     *@description Label for unique text colors in the CSS overview panel\n     *@example {32} PH1\n     */\n    textColorsS: 'Text colors: {PH1}',\n    /**\n     *@description Label for unique fill colors in the CSS overview panel\n     *@example {32} PH1\n     */\n    fillColorsS: 'Fill colors: {PH1}',\n    /**\n     *@description Label for unique border colors in the CSS overview panel\n     *@example {32} PH1\n     */\n    borderColorsS: 'Border colors: {PH1}',\n    /**\n     *@description Label to indicate that there are no fonts in use\n     */\n    thereAreNoFonts: 'There are no fonts.',\n    /**\n     *@description Message to show when no unused declarations in the target page\n     */\n    thereAreNoUnusedDeclarations: 'There are no unused declarations.',\n    /**\n     *@description Message to show when no media queries are found in the target page\n     */\n    thereAreNoMediaQueries: 'There are no media queries.',\n    /**\n     *@description Title of the Drawer for contrast issues in the CSS overview panel\n     */\n    contrastIssues: 'Contrast issues',\n    /**\n     * @description Text to indicate how many times this CSS rule showed up.\n     */\n    nOccurrences: '{n, plural, =1 {# occurrence} other {# occurrences}}',\n    /**\n     *@description Section header for contrast issues in the CSS overview panel\n     *@example {1} PH1\n     */\n    contrastIssuesS: 'Contrast issues: {PH1}',\n    /**\n     *@description Title of the button for a contrast issue in the CSS overview panel\n     *@example {#333333} PH1\n     *@example {#333333} PH2\n     *@example {2} PH3\n     */\n    textColorSOverSBackgroundResults: 'Text color {PH1} over {PH2} background results in low contrast for {PH3} elements',\n    /**\n     *@description Label aa text content in Contrast Details of the Color Picker\n     */\n    aa: 'AA',\n    /**\n     *@description Label aaa text content in Contrast Details of the Color Picker\n     */\n    aaa: 'AAA',\n    /**\n     *@description Label for the APCA contrast in Color Picker\n     */\n    apca: 'APCA',\n    /**\n     *@description Label for the column in the element list in the CSS overview report\n     */\n    element: 'Element',\n    /**\n     *@description Column header title denoting which declaration is unused\n     */\n    declaration: 'Declaration',\n    /**\n     *@description Text for the source of something\n     */\n    source: 'Source',\n    /**\n     *@description Text of a DOM element in Contrast Details of the Color Picker\n     */\n    contrastRatio: 'Contrast ratio',\n    /**\n     *@description Accessible title of a table in the CSS overview elements.\n     */\n    cssOverviewElements: 'CSS overview elements',\n    /**\n     *@description Title of the button to show the element in the CSS overview panel\n     */\n    showElement: 'Show element',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewCompletedView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nfunction getBorderString(color) {\n    let { h, s, l } = color.as(\"hsl\" /* Common.Color.Format.HSL */);\n    h = Math.round(h * 360);\n    s = Math.round(s * 100);\n    l = Math.round(l * 100);\n    // Reduce the lightness of the border to make sure that there's always a visible outline.\n    l = Math.max(0, l - 15);\n    return `1px solid hsl(${h}deg ${s}% ${l}%)`;\n}\nexport class CSSOverviewCompletedView extends UI.Widget.VBox {\n    #splitWidget;\n    #controller;\n    #formatter;\n    #mainContainer;\n    #resultsContainer;\n    #elementContainer;\n    #sideBar;\n    #cssModel;\n    #domModel;\n    #linkifier;\n    #viewMap;\n    #data;\n    #fragment;\n    constructor(controller) {\n        super();\n        this.#controller = controller;\n        this.#formatter = new Intl.NumberFormat('en-US');\n        this.#splitWidget = new UI.SplitWidget.SplitWidget(true, false, undefined, 200);\n        this.#splitWidget.show(this.element);\n        this.#mainContainer = new UI.SplitWidget.SplitWidget(true, true);\n        this.#resultsContainer = new UI.Widget.VBox();\n        this.#elementContainer = new DetailsView();\n        // If closing the last tab, collapse the sidebar.\n        this.#elementContainer.addEventListener(\"TabClosed\" /* Events.TAB_CLOSED */, evt => {\n            if (evt.data === 0) {\n                this.#mainContainer.setSidebarMinimized(true);\n            }\n        });\n        // Dupe the styles into the main container because of the shadow root will prevent outer styles.\n        this.#mainContainer.setMainWidget(this.#resultsContainer);\n        this.#mainContainer.setSidebarWidget(this.#elementContainer);\n        this.#mainContainer.setVertical(false);\n        this.#mainContainer.setSecondIsSidebar(true);\n        this.#mainContainer.setSidebarMinimized(true);\n        this.#sideBar = new CSSOverviewSidebarPanel();\n        this.#sideBar.setMinimumSize(100, 25);\n        this.#splitWidget.setSidebarWidget(this.#sideBar);\n        this.#splitWidget.setMainWidget(this.#mainContainer);\n        this.#linkifier = new Components.Linkifier.Linkifier(/* maxLinkLength */ 20, /* useLinkDecorator */ true);\n        this.#viewMap = new Map();\n        this.#sideBar.addItem(i18nString(UIStrings.overviewSummary), 'summary');\n        this.#sideBar.addItem(i18nString(UIStrings.colors), 'colors');\n        this.#sideBar.addItem(i18nString(UIStrings.fontInfo), 'font-info');\n        this.#sideBar.addItem(i18nString(UIStrings.unusedDeclarations), 'unused-declarations');\n        this.#sideBar.addItem(i18nString(UIStrings.mediaQueries), 'media-queries');\n        this.#sideBar.select('summary', false);\n        this.#sideBar.addEventListener(\"ItemSelected\" /* SidebarEvents.ITEM_SELECTED */, this.#sideBarItemSelected, this);\n        this.#sideBar.addEventListener(\"Reset\" /* SidebarEvents.RESET */, this.#sideBarReset, this);\n        this.#controller.addEventListener(\"Reset\" /* CSSOverViewControllerEvents.RESET */, this.#reset, this);\n        this.#controller.addEventListener(\"PopulateNodes\" /* CSSOverViewControllerEvents.POPULATE_NODES */, this.#createElementsView, this);\n        this.#resultsContainer.element.addEventListener('click', this.#onClick.bind(this));\n        this.#data = null;\n    }\n    wasShown() {\n        super.wasShown();\n        this.#mainContainer.registerCSSFiles([cssOverviewCompletedViewStyles]);\n        this.registerCSSFiles([cssOverviewCompletedViewStyles]);\n        // TODO(paullewis): update the links in the panels in case source has been .\n    }\n    initializeModels(target) {\n        const cssModel = target.model(SDK.CSSModel.CSSModel);\n        const domModel = target.model(SDK.DOMModel.DOMModel);\n        if (!cssModel || !domModel) {\n            throw new Error('Target must provide CSS and DOM models');\n        }\n        this.#cssModel = cssModel;\n        this.#domModel = domModel;\n    }\n    #sideBarItemSelected(event) {\n        const { data } = event;\n        const section = this.#fragment.$(data.id);\n        if (!section) {\n            return;\n        }\n        section.scrollIntoView();\n        // Set focus for keyboard invoked event\n        if (!data.isMouseEvent && data.key === 'Enter') {\n            const focusableElement = section.querySelector('button, [tabindex=\"0\"]');\n            focusableElement?.focus();\n        }\n    }\n    #sideBarReset() {\n        this.#controller.dispatchEventToListeners(\"Reset\" /* CSSOverViewControllerEvents.RESET */);\n    }\n    #reset() {\n        this.#resultsContainer.element.removeChildren();\n        this.#mainContainer.setSidebarMinimized(true);\n        this.#elementContainer.closeTabs();\n        this.#viewMap = new Map();\n        CSSOverviewCompletedView.pushedNodes.clear();\n        this.#sideBar.select('summary', false);\n    }\n    #onClick(evt) {\n        if (!evt.target) {\n            return;\n        }\n        const target = evt.target;\n        const dataset = target.dataset;\n        const type = dataset.type;\n        if (!type || !this.#data) {\n            return;\n        }\n        let payload;\n        switch (type) {\n            case 'contrast': {\n                const section = dataset.section;\n                const key = dataset.key;\n                if (!key) {\n                    return;\n                }\n                // Remap the Set to an object that is the same shape as the unused declarations.\n                const nodes = this.#data.textColorContrastIssues.get(key) || [];\n                payload = { type, key, nodes, section };\n                break;\n            }\n            case 'color': {\n                const color = dataset.color;\n                const section = dataset.section;\n                if (!color) {\n                    return;\n                }\n                let nodes;\n                switch (section) {\n                    case 'text':\n                        nodes = this.#data.textColors.get(color);\n                        break;\n                    case 'background':\n                        nodes = this.#data.backgroundColors.get(color);\n                        break;\n                    case 'fill':\n                        nodes = this.#data.fillColors.get(color);\n                        break;\n                    case 'border':\n                        nodes = this.#data.borderColors.get(color);\n                        break;\n                }\n                if (!nodes) {\n                    return;\n                }\n                // Remap the Set to an object that is the same shape as the unused declarations.\n                nodes = Array.from(nodes).map(nodeId => ({ nodeId }));\n                payload = { type, color, nodes, section };\n                break;\n            }\n            case 'unused-declarations': {\n                const declaration = dataset.declaration;\n                if (!declaration) {\n                    return;\n                }\n                const nodes = this.#data.unusedDeclarations.get(declaration);\n                if (!nodes) {\n                    return;\n                }\n                payload = { type, declaration, nodes };\n                break;\n            }\n            case 'media-queries': {\n                const text = dataset.text;\n                if (!text) {\n                    return;\n                }\n                const nodes = this.#data.mediaQueries.get(text);\n                if (!nodes) {\n                    return;\n                }\n                payload = { type, text, nodes };\n                break;\n            }\n            case 'font-info': {\n                const value = dataset.value;\n                if (!dataset.path) {\n                    return;\n                }\n                const [fontFamily, fontMetric] = dataset.path.split('/');\n                if (!value) {\n                    return;\n                }\n                const fontFamilyInfo = this.#data.fontInfo.get(fontFamily);\n                if (!fontFamilyInfo) {\n                    return;\n                }\n                const fontMetricInfo = fontFamilyInfo.get(fontMetric);\n                if (!fontMetricInfo) {\n                    return;\n                }\n                const nodesIds = fontMetricInfo.get(value);\n                if (!nodesIds) {\n                    return;\n                }\n                const nodes = nodesIds.map(nodeId => ({ nodeId }));\n                const name = `${value} (${fontFamily}, ${fontMetric})`;\n                payload = { type, name, nodes };\n                break;\n            }\n            default:\n                return;\n        }\n        evt.consume();\n        this.#controller.dispatchEventToListeners(\"PopulateNodes\" /* CSSOverViewControllerEvents.POPULATE_NODES */, { payload });\n        this.#mainContainer.setSidebarMinimized(false);\n    }\n    async #render(data) {\n        if (!data || !('backgroundColors' in data) || !('textColors' in data)) {\n            return;\n        }\n        this.#data = data;\n        const { elementCount, backgroundColors, textColors, textColorContrastIssues, fillColors, borderColors, globalStyleStats, mediaQueries, unusedDeclarations, fontInfo, } = this.#data;\n        // Convert rgb values from the computed styles to either undefined or HEX(A) strings.\n        const sortedBackgroundColors = this.#sortColorsByLuminance(backgroundColors);\n        const sortedTextColors = this.#sortColorsByLuminance(textColors);\n        const sortedFillColors = this.#sortColorsByLuminance(fillColors);\n        const sortedBorderColors = this.#sortColorsByLuminance(borderColors);\n        this.#fragment = UI.Fragment.Fragment.build `\n    <div class=\"vbox overview-completed-view\">\n      <div $=\"summary\" class=\"results-section horizontally-padded summary\">\n        <h1>${i18nString(UIStrings.overviewSummary)}</h1>\n\n        <ul>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.elements)}</div>\n            <div class=\"value\">${this.#formatter.format(elementCount)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.externalStylesheets)}</div>\n            <div class=\"value\">${this.#formatter.format(globalStyleStats.externalSheets)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.inlineStyleElements)}</div>\n            <div class=\"value\">${this.#formatter.format(globalStyleStats.inlineStyles)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.styleRules)}</div>\n            <div class=\"value\">${this.#formatter.format(globalStyleStats.styleRules)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.mediaQueries)}</div>\n            <div class=\"value\">${this.#formatter.format(mediaQueries.size)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.typeSelectors)}</div>\n            <div class=\"value\">${this.#formatter.format(globalStyleStats.stats.type)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.idSelectors)}</div>\n            <div class=\"value\">${this.#formatter.format(globalStyleStats.stats.id)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.classSelectors)}</div>\n            <div class=\"value\">${this.#formatter.format(globalStyleStats.stats.class)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.universalSelectors)}</div>\n            <div class=\"value\">${this.#formatter.format(globalStyleStats.stats.universal)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.attributeSelectors)}</div>\n            <div class=\"value\">${this.#formatter.format(globalStyleStats.stats.attribute)}</div>\n          </li>\n          <li>\n            <div class=\"label\">${i18nString(UIStrings.nonsimpleSelectors)}</div>\n            <div class=\"value\">${this.#formatter.format(globalStyleStats.stats.nonSimple)}</div>\n          </li>\n        </ul>\n      </div>\n\n      <div $=\"colors\" class=\"results-section horizontally-padded colors\">\n        <h1>${i18nString(UIStrings.colors)}</h1>\n        <h2>${i18nString(UIStrings.backgroundColorsS, {\n            PH1: sortedBackgroundColors.length,\n        })}</h2>\n        <ul>\n          ${sortedBackgroundColors.map(this.#colorsToFragment.bind(this, 'background'))}\n        </ul>\n\n        <h2>${i18nString(UIStrings.textColorsS, {\n            PH1: sortedTextColors.length,\n        })}</h2>\n        <ul>\n          ${sortedTextColors.map(this.#colorsToFragment.bind(this, 'text'))}\n        </ul>\n\n        ${textColorContrastIssues.size > 0 ? this.#contrastIssuesToFragment(textColorContrastIssues) : ''}\n\n        <h2>${i18nString(UIStrings.fillColorsS, {\n            PH1: sortedFillColors.length,\n        })}</h2>\n        <ul>\n          ${sortedFillColors.map(this.#colorsToFragment.bind(this, 'fill'))}\n        </ul>\n\n        <h2>${i18nString(UIStrings.borderColorsS, {\n            PH1: sortedBorderColors.length,\n        })}</h2>\n        <ul>\n          ${sortedBorderColors.map(this.#colorsToFragment.bind(this, 'border'))}\n        </ul>\n      </div>\n\n      <div $=\"font-info\" class=\"results-section font-info\">\n        <h1>${i18nString(UIStrings.fontInfo)}</h1>\n        ${fontInfo.size > 0 ? this.#fontInfoToFragment(fontInfo) :\n            UI.Fragment.Fragment.build `<div>${i18nString(UIStrings.thereAreNoFonts)}</div>`}\n      </div>\n\n      <div $=\"unused-declarations\" class=\"results-section unused-declarations\">\n        <h1>${i18nString(UIStrings.unusedDeclarations)}</h1>\n        ${unusedDeclarations.size > 0 ? this.#groupToFragment(unusedDeclarations, 'unused-declarations', 'declaration') :\n            UI.Fragment.Fragment.build `<div class=\"horizontally-padded\">${i18nString(UIStrings.thereAreNoUnusedDeclarations)}</div>`}\n      </div>\n\n      <div $=\"media-queries\" class=\"results-section media-queries\">\n        <h1>${i18nString(UIStrings.mediaQueries)}</h1>\n        ${mediaQueries.size > 0 ? this.#groupToFragment(mediaQueries, 'media-queries', 'text') :\n            UI.Fragment.Fragment.build `<div class=\"horizontally-padded\">${i18nString(UIStrings.thereAreNoMediaQueries)}</div>`}\n      </div>\n    </div>`;\n        this.#resultsContainer.element.appendChild(this.#fragment.element());\n    }\n    #createElementsView(evt) {\n        const { payload } = evt.data;\n        let id = '';\n        let tabTitle = '';\n        switch (payload.type) {\n            case 'contrast': {\n                const { section, key } = payload;\n                id = `${section}-${key}`;\n                tabTitle = i18nString(UIStrings.contrastIssues);\n                break;\n            }\n            case 'color': {\n                const { section, color } = payload;\n                id = `${section}-${color}`;\n                tabTitle = `${color.toUpperCase()} (${section})`;\n                break;\n            }\n            case 'unused-declarations': {\n                const { declaration } = payload;\n                id = `${declaration}`;\n                tabTitle = `${declaration}`;\n                break;\n            }\n            case 'media-queries': {\n                const { text } = payload;\n                id = `${text}`;\n                tabTitle = `${text}`;\n                break;\n            }\n            case 'font-info': {\n                const { name } = payload;\n                id = `${name}`;\n                tabTitle = `${name}`;\n                break;\n            }\n        }\n        let view = this.#viewMap.get(id);\n        if (!view) {\n            if (!this.#domModel || !this.#cssModel) {\n                throw new Error('Unable to initialize CSS overview, missing models');\n            }\n            view = new ElementDetailsView(this.#controller, this.#domModel, this.#cssModel, this.#linkifier);\n            void view.populateNodes(payload.nodes);\n            this.#viewMap.set(id, view);\n        }\n        this.#elementContainer.appendTab(id, tabTitle, view, payload.type);\n    }\n    #fontInfoToFragment(fontInfo) {\n        const fonts = Array.from(fontInfo.entries());\n        return UI.Fragment.Fragment.build `\n  ${fonts.map(([font, fontMetrics]) => {\n            return UI.Fragment.Fragment.build `<section class=\"font-family\"><h2>${font}</h2> ${this.#fontMetricsToFragment(font, fontMetrics)}</section>`;\n        })}\n  `;\n    }\n    #fontMetricsToFragment(font, fontMetrics) {\n        const fontMetricInfo = Array.from(fontMetrics.entries());\n        return UI.Fragment.Fragment.build `\n  <div class=\"font-metric\">\n  ${fontMetricInfo.map(([label, values]) => {\n            const sanitizedPath = `${font}/${label}`;\n            return UI.Fragment.Fragment.build `\n  <div>\n  <h3>${label}</h3>\n  ${this.#groupToFragment(values, 'font-info', 'value', sanitizedPath)}\n  </div>`;\n        })}\n  </div>`;\n    }\n    #groupToFragment(items, type, dataLabel, path = '') {\n        // Sort by number of items descending.\n        const values = Array.from(items.entries()).sort((d1, d2) => {\n            const v1Nodes = d1[1];\n            const v2Nodes = d2[1];\n            return v2Nodes.length - v1Nodes.length;\n        });\n        const total = values.reduce((prev, curr) => prev + curr[1].length, 0);\n        return UI.Fragment.Fragment.build `<ul>\n    ${values.map(([title, nodes]) => {\n            const width = 100 * nodes.length / total;\n            const itemLabel = i18nString(UIStrings.nOccurrences, { n: nodes.length });\n            return UI.Fragment.Fragment.build `<li>\n        <div class=\"title\">${title}</div>\n        <button data-type=\"${type}\" data-path=\"${path}\" data-${dataLabel}=\"${title}\"\n        jslog=\"${VisualLogging.action().track({ click: true }).context(`css-overview.${type}`)}\">\n          <div class=\"details\">${itemLabel}</div>\n          <div class=\"bar-container\">\n            <div class=\"bar\" style=\"width: ${width}%;\"></div>\n          </div>\n        </button>\n      </li>`;\n        })}\n    </ul>`;\n    }\n    #contrastIssuesToFragment(issues) {\n        return UI.Fragment.Fragment.build `\n  <h2>${i18nString(UIStrings.contrastIssuesS, {\n            PH1: issues.size,\n        })}</h2>\n  <ul>\n  ${[...issues.entries()].map(([key, value]) => this.#contrastIssueToFragment(key, value))}\n  </ul>\n  `;\n    }\n    #contrastIssueToFragment(key, issues) {\n        console.assert(issues.length > 0);\n        let minContrastIssue = issues[0];\n        for (const issue of issues) {\n            // APCA contrast can be a negative value that is to be displayed. But the\n            // absolute value is used to compare against the threshold. Therefore, the min\n            // absolute value is the worst contrast.\n            if (Math.abs(issue.contrastRatio) < Math.abs(minContrastIssue.contrastRatio)) {\n                minContrastIssue = issue;\n            }\n        }\n        const color = minContrastIssue.textColor.asString(\"hexa\" /* Common.Color.Format.HEXA */);\n        const backgroundColor = minContrastIssue.backgroundColor.asString(\"hexa\" /* Common.Color.Format.HEXA */);\n        const showAPCA = Root.Runtime.experiments.isEnabled('apca');\n        const title = i18nString(UIStrings.textColorSOverSBackgroundResults, {\n            PH1: color,\n            PH2: backgroundColor,\n            PH3: issues.length,\n        });\n        const blockFragment = UI.Fragment.Fragment.build `<li>\n      <button\n        title=\"${title}\" aria-label=\"${title}\"\n        data-type=\"contrast\" data-key=\"${key}\" data-section=\"contrast\" class=\"block\" $=\"color\"\n        jslog=\"${VisualLogging.action('css-overview.contrast').track({\n            click: true,\n        })}\">\n        Text\n      </button>\n      <div class=\"block-title\">\n        <div class=\"contrast-warning hidden\" $=\"aa\"><span class=\"threshold-label\">${i18nString(UIStrings.aa)}</span></div>\n        <div class=\"contrast-warning hidden\" $=\"aaa\"><span class=\"threshold-label\">${i18nString(UIStrings.aaa)}</span></div>\n        <div class=\"contrast-warning hidden\" $=\"apca\"><span class=\"threshold-label\">${i18nString(UIStrings.apca)}</span></div>\n      </div>\n    </li>`;\n        if (showAPCA) {\n            const apca = blockFragment.$('apca');\n            if (minContrastIssue.thresholdsViolated.apca) {\n                apca.appendChild(createClearIcon());\n            }\n            else {\n                apca.appendChild(createCheckIcon());\n            }\n            apca.classList.remove('hidden');\n        }\n        else {\n            const aa = blockFragment.$('aa');\n            if (minContrastIssue.thresholdsViolated.aa) {\n                aa.appendChild(createClearIcon());\n            }\n            else {\n                aa.appendChild(createCheckIcon());\n            }\n            const aaa = blockFragment.$('aaa');\n            if (minContrastIssue.thresholdsViolated.aaa) {\n                aaa.appendChild(createClearIcon());\n            }\n            else {\n                aaa.appendChild(createCheckIcon());\n            }\n            aa.classList.remove('hidden');\n            aaa.classList.remove('hidden');\n        }\n        const block = blockFragment.$('color');\n        block.style.backgroundColor = backgroundColor;\n        block.style.color = color;\n        block.style.border = getBorderString(minContrastIssue.backgroundColor.asLegacyColor());\n        return blockFragment;\n    }\n    #colorsToFragment(section, color) {\n        const blockFragment = UI.Fragment.Fragment.build `<li>\n      <button title=${color} data-type=\"color\" data-color=\"${color}\"\n        data-section=\"${section}\" class=\"block\" $=\"color\"\n        jslog=\"${VisualLogging.action('css-overview.color').track({\n            click: true,\n        })}\"></button>\n      <div class=\"block-title color-text\">${color}</div>\n    </li>`;\n        const block = blockFragment.$('color');\n        block.style.backgroundColor = color;\n        const borderColor = Common.Color.parse(color)?.asLegacyColor();\n        if (!borderColor) {\n            return;\n        }\n        block.style.border = getBorderString(borderColor);\n        return blockFragment;\n    }\n    #sortColorsByLuminance(srcColors) {\n        return Array.from(srcColors.keys()).sort((colA, colB) => {\n            const colorA = Common.Color.parse(colA)?.asLegacyColor();\n            const colorB = Common.Color.parse(colB)?.asLegacyColor();\n            if (!colorA || !colorB) {\n                return 0;\n            }\n            return Common.ColorUtils.luminance(colorB.rgba()) - Common.ColorUtils.luminance(colorA.rgba());\n        });\n    }\n    setOverviewData(data) {\n        void this.#render(data);\n    }\n    static pushedNodes = new Set();\n}\nexport class DetailsView extends Common.ObjectWrapper.eventMixin(UI.Widget.VBox) {\n    #tabbedPane;\n    constructor() {\n        super();\n        this.#tabbedPane = new UI.TabbedPane.TabbedPane();\n        this.#tabbedPane.show(this.element);\n        this.#tabbedPane.addEventListener(UI.TabbedPane.Events.TabClosed, () => {\n            this.dispatchEventToListeners(\"TabClosed\" /* Events.TAB_CLOSED */, this.#tabbedPane.tabIds().length);\n        });\n    }\n    appendTab(id, tabTitle, view, jslogContext) {\n        if (!this.#tabbedPane.hasTab(id)) {\n            this.#tabbedPane.appendTab(id, tabTitle, view, undefined, undefined, /* isCloseable */ true, undefined, undefined, jslogContext);\n        }\n        this.#tabbedPane.selectTab(id);\n    }\n    closeTabs() {\n        this.#tabbedPane.closeTabs(this.#tabbedPane.tabIds());\n    }\n}\nexport class ElementDetailsView extends UI.Widget.Widget {\n    #controller;\n    #domModel;\n    #cssModel;\n    #linkifier;\n    #elementGridColumns;\n    #elementGrid;\n    constructor(controller, domModel, cssModel, linkifier) {\n        super();\n        this.#controller = controller;\n        this.#domModel = domModel;\n        this.#cssModel = cssModel;\n        this.#linkifier = linkifier;\n        this.#elementGridColumns = [\n            {\n                id: 'node-id',\n                title: i18nString(UIStrings.element),\n                sortable: true,\n                weight: 50,\n                titleDOMFragment: undefined,\n                sort: undefined,\n                align: undefined,\n                width: undefined,\n                fixedWidth: undefined,\n                editable: undefined,\n                nonSelectable: undefined,\n                longText: undefined,\n                disclosure: undefined,\n                allowInSortByEvenWhenHidden: undefined,\n                dataType: undefined,\n                defaultWeight: undefined,\n            },\n            {\n                id: 'declaration',\n                title: i18nString(UIStrings.declaration),\n                sortable: true,\n                weight: 50,\n                titleDOMFragment: undefined,\n                sort: undefined,\n                align: undefined,\n                width: undefined,\n                fixedWidth: undefined,\n                editable: undefined,\n                nonSelectable: undefined,\n                longText: undefined,\n                disclosure: undefined,\n                allowInSortByEvenWhenHidden: undefined,\n                dataType: undefined,\n                defaultWeight: undefined,\n            },\n            {\n                id: 'source-url',\n                title: i18nString(UIStrings.source),\n                sortable: false,\n                weight: 100,\n                titleDOMFragment: undefined,\n                sort: undefined,\n                align: undefined,\n                width: undefined,\n                fixedWidth: undefined,\n                editable: undefined,\n                nonSelectable: undefined,\n                longText: undefined,\n                disclosure: undefined,\n                allowInSortByEvenWhenHidden: undefined,\n                dataType: undefined,\n                defaultWeight: undefined,\n            },\n            {\n                id: 'contrast-ratio',\n                title: i18nString(UIStrings.contrastRatio),\n                sortable: true,\n                weight: 25,\n                titleDOMFragment: undefined,\n                sort: undefined,\n                align: undefined,\n                width: '150px',\n                fixedWidth: true,\n                editable: undefined,\n                nonSelectable: undefined,\n                longText: undefined,\n                disclosure: undefined,\n                allowInSortByEvenWhenHidden: undefined,\n                dataType: undefined,\n                defaultWeight: undefined,\n            },\n        ];\n        this.#elementGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n            displayName: i18nString(UIStrings.cssOverviewElements),\n            columns: this.#elementGridColumns,\n            editCallback: undefined,\n            deleteCallback: undefined,\n            refreshCallback: undefined,\n        });\n        this.#elementGrid.element.classList.add('element-grid');\n        this.#elementGrid.element.addEventListener('mouseover', this.#onMouseOver.bind(this));\n        this.#elementGrid.setStriped(true);\n        this.#elementGrid.addEventListener(\"SortingChanged\" /* DataGrid.DataGrid.Events.SORTING_CHANGED */, this.#sortMediaQueryDataGrid.bind(this));\n        this.#elementGrid.asWidget().show(this.element);\n    }\n    #sortMediaQueryDataGrid() {\n        const sortColumnId = this.#elementGrid.sortColumnId();\n        if (!sortColumnId) {\n            return;\n        }\n        const comparator = DataGrid.SortableDataGrid.SortableDataGrid.StringComparator.bind(null, sortColumnId);\n        this.#elementGrid.sortNodes(comparator, !this.#elementGrid.isSortOrderAscending());\n    }\n    #onMouseOver(evt) {\n        // Traverse the event path on the grid to find the nearest element with a backend node ID attached. Use\n        // that for the highlighting.\n        const node = evt.composedPath().find(el => el.dataset && el.dataset.backendNodeId);\n        if (!node) {\n            return;\n        }\n        const backendNodeId = Number(node.dataset.backendNodeId);\n        this.#controller.dispatchEventToListeners(\"RequestNodeHighlight\" /* CSSOverViewControllerEvents.REQUEST_NODE_HIGHLIGHT */, backendNodeId);\n    }\n    async populateNodes(data) {\n        this.#elementGrid.rootNode().removeChildren();\n        if (!data.length) {\n            return;\n        }\n        const [firstItem] = data;\n        const visibility = new Set();\n        'nodeId' in firstItem && firstItem.nodeId && visibility.add('node-id');\n        'declaration' in firstItem && firstItem.declaration && visibility.add('declaration');\n        'sourceURL' in firstItem && firstItem.sourceURL && visibility.add('source-url');\n        'contrastRatio' in firstItem && firstItem.contrastRatio && visibility.add('contrast-ratio');\n        let relatedNodesMap;\n        if ('nodeId' in firstItem && visibility.has('node-id')) {\n            // Grab the nodes from the frontend, but only those that have not been\n            // retrieved already.\n            const nodeIds = data.reduce((prev, curr) => {\n                const nodeId = curr.nodeId;\n                if (CSSOverviewCompletedView.pushedNodes.has(nodeId)) {\n                    return prev;\n                }\n                CSSOverviewCompletedView.pushedNodes.add(nodeId);\n                return prev.add(nodeId);\n            }, new Set());\n            relatedNodesMap = await this.#domModel.pushNodesByBackendIdsToFrontend(nodeIds);\n        }\n        for (const item of data) {\n            let frontendNode;\n            if ('nodeId' in item && visibility.has('node-id')) {\n                if (!relatedNodesMap) {\n                    continue;\n                }\n                frontendNode = relatedNodesMap.get(item.nodeId);\n                if (!frontendNode) {\n                    continue;\n                }\n            }\n            const node = new ElementNode(item, frontendNode, this.#linkifier, this.#cssModel);\n            node.selectable = false;\n            this.#elementGrid.insertChild(node);\n        }\n        this.#elementGrid.setColumnsVisibility(visibility);\n        this.#elementGrid.renderInline();\n        this.#elementGrid.wasShown();\n    }\n}\nexport class ElementNode extends DataGrid.SortableDataGrid.SortableDataGridNode {\n    #linkifier;\n    #cssModel;\n    #frontendNode;\n    constructor(data, frontendNode, linkifier, cssModel) {\n        super(data);\n        this.#frontendNode = frontendNode;\n        this.#linkifier = linkifier;\n        this.#cssModel = cssModel;\n    }\n    createCell(columnId) {\n        // Nodes.\n        const frontendNode = this.#frontendNode;\n        if (columnId === 'node-id') {\n            const cell = this.createTD(columnId);\n            cell.textContent = '...';\n            if (!frontendNode) {\n                throw new Error('Node entry is missing a related frontend node.');\n            }\n            void Common.Linkifier.Linkifier.linkify(frontendNode).then(link => {\n                cell.textContent = '';\n                link.dataset.backendNodeId = frontendNode.backendNodeId().toString();\n                cell.appendChild(link);\n                const showNodeIcon = new IconButton.Icon.Icon();\n                showNodeIcon.data = { iconName: 'select-element', color: 'var(--icon-show-element)', width: '16px' };\n                showNodeIcon.classList.add('show-element');\n                UI.Tooltip.Tooltip.install(showNodeIcon, i18nString(UIStrings.showElement));\n                showNodeIcon.tabIndex = 0;\n                showNodeIcon.onclick = () => frontendNode.scrollIntoView();\n                cell.appendChild(showNodeIcon);\n            });\n            return cell;\n        }\n        // Links to CSS.\n        if (columnId === 'source-url') {\n            const cell = this.createTD(columnId);\n            if (this.data.range) {\n                const link = this.#linkifyRuleLocation(this.#cssModel, this.#linkifier, this.data.styleSheetId, TextUtils.TextRange.TextRange.fromObject(this.data.range));\n                if (!link || link.textContent === '') {\n                    cell.textContent = '(unable to link)';\n                }\n                else {\n                    cell.appendChild(link);\n                }\n            }\n            else {\n                cell.textContent = '(unable to link to inlined styles)';\n            }\n            return cell;\n        }\n        if (columnId === 'contrast-ratio') {\n            const cell = this.createTD(columnId);\n            const showAPCA = Root.Runtime.experiments.isEnabled('apca');\n            const contrastRatio = Platform.NumberUtilities.floor(this.data.contrastRatio, 2);\n            const contrastRatioString = showAPCA ? contrastRatio + '%' : contrastRatio;\n            const border = getBorderString(this.data.backgroundColor);\n            const color = this.data.textColor.asString();\n            const backgroundColor = this.data.backgroundColor.asString();\n            const contrastFragment = UI.Fragment.Fragment.build `\n        <div class=\"contrast-container-in-grid\" $=\"container\">\n          <span class=\"contrast-preview\" style=\"border: ${border};\n          color: ${color};\n          background-color: ${backgroundColor};\">Aa</span>\n          <span>${contrastRatioString}</span>\n        </div>\n      `;\n            const container = contrastFragment.$('container');\n            if (showAPCA) {\n                container.append(UI.Fragment.Fragment.build `<span>${i18nString(UIStrings.apca)}</span>`.element());\n                if (this.data.thresholdsViolated.apca) {\n                    container.appendChild(createClearIcon());\n                }\n                else {\n                    container.appendChild(createCheckIcon());\n                }\n            }\n            else {\n                container.append(UI.Fragment.Fragment.build `<span>${i18nString(UIStrings.aa)}</span>`.element());\n                if (this.data.thresholdsViolated.aa) {\n                    container.appendChild(createClearIcon());\n                }\n                else {\n                    container.appendChild(createCheckIcon());\n                }\n                container.append(UI.Fragment.Fragment.build `<span>${i18nString(UIStrings.aaa)}</span>`.element());\n                if (this.data.thresholdsViolated.aaa) {\n                    container.appendChild(createClearIcon());\n                }\n                else {\n                    container.appendChild(createCheckIcon());\n                }\n            }\n            cell.appendChild(contrastFragment.element());\n            return cell;\n        }\n        return super.createCell(columnId);\n    }\n    #linkifyRuleLocation(cssModel, linkifier, styleSheetId, ruleLocation) {\n        const styleSheetHeader = cssModel.styleSheetHeaderForId(styleSheetId);\n        if (!styleSheetHeader) {\n            return;\n        }\n        const lineNumber = styleSheetHeader.lineNumberInSource(ruleLocation.startLine);\n        const columnNumber = styleSheetHeader.columnNumberInSource(ruleLocation.startLine, ruleLocation.startColumn);\n        const matchingSelectorLocation = new SDK.CSSModel.CSSLocation(styleSheetHeader, lineNumber, columnNumber);\n        return linkifier.linkifyCSSLocation(matchingSelectorLocation);\n    }\n}\nfunction createClearIcon() {\n    const icon = new IconButton.Icon.Icon();\n    icon.data = { iconName: 'clear', color: 'var(--icon-error)', width: '14px', height: '14px' };\n    return icon;\n}\nfunction createCheckIcon() {\n    const icon = new IconButton.Icon.Icon();\n    icon.data = { iconName: 'checkmark', color: 'var(--icon-checkmark-green)', width: '14px', height: '14px' };\n    return icon;\n}\n//# sourceMappingURL=CSSOverviewCompletedView.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/**\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\nh1 {\n  font-weight: normal;\n}\n\n.css-overview-start-view {\n  padding: 24px;\n  display: flex;\n  flex-direction: column;\n  background-color: var(--sys-color-cdt-base-container);\n  overflow: auto;\n}\n\n.start-capture-wrapper {\n  width: fit-content;\n}\n\n.preview-feature {\n  padding: 12px 16px;\n  border: 1px solid var(--sys-color-neutral-outline);\n  color: var(--sys-color-on-surface);\n  font-size: 13px;\n  line-height: 20px;\n  border-radius: 12px;\n  margin: 42px 0;\n  letter-spacing: 0.01em;\n}\n\n.preview-header {\n  color: var(--sys-color-primary);\n  font-size: 13px;\n  line-height: 20px;\n  letter-spacing: 0.01em;\n  margin: 9px 0 14px;\n}\n\n.preview-icon {\n  vertical-align: middle;\n}\n\n.feedback-prompt {\n  margin-bottom: 24px;\n}\n\n.feedback-prompt .devtools-link {\n  color: -webkit-link;\n  cursor: pointer;\n  text-decoration: underline;\n}\n\n.resources {\n  display: flex;\n  flex-direction: row;\n}\n\n.thumbnail-wrapper {\n  width: 144px;\n  height: 92px;\n  margin-right: 20px;\n}\n\n.video-doc-header {\n  font-size: 13px;\n  line-height: 20px;\n  letter-spacing: 0.04em;\n  color: var(--sys-color-on-surface);\n  margin-bottom: 2px;\n}\n\ndevtools-feedback-button {\n  align-self: flex-end;\n}\n\n.resources .devtools-link {\n  font-size: 14px;\n  line-height: 22px;\n  letter-spacing: 0.04em;\n  text-decoration-line: underline;\n  color: var(--sys-color-primary);\n}\n\n/*# sourceURL=cssOverviewStartView.css */\n`);\n\nexport default styles;\n","// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport '../../../ui/components/panel_introduction_steps/panel_introduction_steps.js';\nimport '../../../ui/components/panel_feedback/panel_feedback.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport cssOverviewStartViewStyles from './cssOverviewStartView.css.js';\nconst UIStrings = {\n    /**\n     *@description Label for the capture button in the CSS overview panel\n     */\n    captureOverview: 'Capture overview',\n    /**\n     *@description Header for the summary of CSS overview\n     */\n    identifyCSSImprovements: 'Identify potential CSS improvements',\n    /**\n     *@description First point of the summarized features of CSS overview\n     */\n    capturePageCSSOverview: 'Capture an overview of your page’s CSS',\n    /**\n     *@description Second point of the summarized features of CSS overview\n     */\n    identifyCSSImprovementsWithExampleIssues: 'Identify potential CSS improvements (e.g. low contrast issues, unused declarations, color or font mismatches)',\n    /**\n     *@description Third point of the summarized features of CSS overview\n     */\n    locateAffectedElements: 'Locate the affected elements in the Elements panel',\n    /**\n     *@description Title of the link to the quick start video and documentation to CSS overview panel\n     */\n    quickStartWithCSSOverview: 'Quick start: get started with the new CSS overview panel',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/components/CSSOverviewStartView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst { render, html } = LitHtml;\nconst FEEDBACK_LINK = 'https://g.co/devtools/css-overview-feedback';\nconst DOC_LINK = 'https://developer.chrome.com/docs/devtools/css-overview';\nexport class OverviewStartRequestedEvent extends Event {\n    static eventName = 'overviewstartrequested';\n    constructor() {\n        super(OverviewStartRequestedEvent.eventName);\n    }\n}\nexport class CSSOverviewStartView extends HTMLElement {\n    #shadow = this.attachShadow({ mode: 'open' });\n    connectedCallback() {\n        this.#shadow.adoptedStyleSheets = [cssOverviewStartViewStyles];\n        this.#render();\n    }\n    show() {\n        this.classList.remove('hidden');\n    }\n    hide() {\n        this.classList.add('hidden');\n    }\n    #onStartCaptureClick() {\n        this.dispatchEvent(new OverviewStartRequestedEvent());\n    }\n    #render() {\n        // Disabled until https://crbug.com/1079231 is fixed.\n        // clang-format off\n        render(html `\n      <div class=\"css-overview-start-view\">\n        <devtools-panel-introduction-steps>\n          <span slot=\"title\">${i18nString(UIStrings.identifyCSSImprovements)}</span>\n          <span slot=\"step-1\">${i18nString(UIStrings.capturePageCSSOverview)}</span>\n          <span slot=\"step-2\">${i18nString(UIStrings.identifyCSSImprovementsWithExampleIssues)}</span>\n          <span slot=\"step-3\">${i18nString(UIStrings.locateAffectedElements)}</span>\n        </devtools-panel-introduction-steps>\n        <div class=\"start-capture-wrapper\">\n          <devtools-button\n            class=\"start-capture\"\n            .variant=${\"primary\" /* Buttons.Button.Variant.PRIMARY */}\n            .jslogContext=${'css-overview.capture-overview'}\n            @click=${this.#onStartCaptureClick}>\n            ${i18nString(UIStrings.captureOverview)}\n          </devtools-button>\n        </div>\n        <devtools-panel-feedback .data=${{\n            feedbackUrl: FEEDBACK_LINK,\n            quickStartUrl: DOC_LINK,\n            quickStartLinkText: i18nString(UIStrings.quickStartWithCSSOverview),\n        }}>\n        </devtools-panel-feedback>\n        <devtools-feedback-button .data=${{\n            feedbackUrl: FEEDBACK_LINK,\n        }}>\n        </devtools-feedback-button>\n      </div>\n    `, this.#shadow, {\n            host: this,\n        });\n        // clang-format on\n        const startButton = this.#shadow.querySelector('.start-capture');\n        if (startButton) {\n            startButton.focus();\n        }\n    }\n}\ncustomElements.define('devtools-css-overview-start-view', CSSOverviewStartView);\n//# sourceMappingURL=CSSOverviewStartView.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/**\n * Copyright 2019 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.css-overview-panel {\n  overflow: hidden;\n}\n\ndevtools-css-overview-start-view {\n  overflow: auto;\n}\n\n/*# sourceURL=cssOverview.css */\n`);\n\nexport default styles;\n"],"names":["roundAndStringify","arr","el","Platform.StringUtilities.stringifyWithPrecision","functionParamsText","values","colorFormatSpec","color","Common.Color.parse","canonicalHslParams","canonicalHwbParams","lchColor","labColor","srgbColor","srgbLinearColor","displayP3Color","a98Color","proPhotoRGBColor","rec2020Color","xyzColor","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","ContrastDetails","Common.ObjectWrapper.ObjectWrapper","contrastInfo","contentElement","toggleMainColorPickerCallback","expandedChangedCallback","colorSelectedCallback","contrastValueRow","contrastValueRowContents","UI.UIUtils.createTextChild","IconButton.Icon.create","button","event","expandToolbar","UI.Toolbar.Toolbar","UI.Toolbar.ToolbarButton","UI.ARIAUtils.setExpanded","UI.ARIAUtils.setControls","bgColorContainer","pickerToolbar","UI.Toolbar.ToolbarToggle","Swatch","threshold","fgColor","bgColor","requiredContrast","Common.Color.findFgColorForContrastAPCA","Common.Color.findFgColorForContrast","parent","suggestedColor","formattedColor","suggestedColorString","label","UI.ARIAUtils.setLabel","UI.Tooltip.Tooltip","isAPCAEnabled","Root.Runtime.experiments","apcaContrastRatio","Platform.NumberUtilities.floor","apcaThreshold","passesAPCA","labelAPCA","iconCheckmark","IconButton.Icon.Icon","iconNo","_event","contrastRatio","aa","labelAA","aaa","passesAAA","labelAAA","e","Host.InspectorFrontendHost.InspectorFrontendHostInstance","UI.UIUtils.addReferrerToURL","visible","selection","enabled","shouldTriggerEvent","Host.InspectorFrontendHostAPI.Events","rgbColor","rgba","Common.Color.Legacy","Swatch$1","parentElement","ContrastInfo","Common.ColorUtils.getContrastThreshold","Common.ColorUtils.getAPCAThreshold","bgColorText","colorFormat","fgRGBA","blendedRGBA","Common.ColorUtils.blendColors","Common.ColorUtils.contrastRatio","Common.ColorUtils.contrastRatioAPCA","level","ContrastOverlay","colorElement","UI.UIUtils.createSVGChild","ContrastRatioLineBuilder","Common.Throttler.Throttler","width","height","element","path","isAPCA","dS","H","S","V","A","fgHSVA","bgRGBA","bgLuminance","Common.ColorUtils.luminance","fgIsLighter","desiredLuminance","Common.ColorUtils.desiredLuminanceAPCA","Common.Color.desiredLuminance","Common.ColorUtils.contrastRatioByLuminanceAPCA","lastV","currentSlope","candidateHSVA","pathBuilder","candidateRGBA","Common.Color.hsva2rgba","candidateLuminance","Common.ColorUtils.luminanceAPCA","s","v","Common.Color.approachColorValue","FormatPickerContextMenu","#color","onSelect","resolveShowPromise","showPromise","resolve","legacyFormats","modernFormats","menu","UI.ContextMenu.ContextMenu","legacySection","wideSection","colorFunctionSection","Common.Color.Nickname","nickname","Common.Color.ShortHex","shortHex","format","newColor","section","Common.Color.ColorFunction","originalHasAlpha","icon","tooltip","handler","styles","html","LitHtml","coordinator","Coordinator.RenderCoordinator.RenderCoordinator","SRGB_LABEL_HEIGHT","SRGB_LABEL_BOTTOM","SRGB_TEXT_UPPER_POINT_FROM_BOTTOM","EPSILON","isColorInSrgbGamut","hsv","xyzd50","Common.ColorConverter.ColorConverter","val","SrgbOverlay","#shadow","srgbOverlayStyles","#getLinePoints","hue","step","linePoints","x","y","value","saturation","lastPoint","#closestPointAtHeight","points","atHeight","min","closestPoint","point","LitHtml.render","colorElementToMutable","colorElementToColor","srgbGamutFormats","IS_NATIVE_EYE_DROPPER_AVAILABLE","doesFormatSupportDisplayP3","convertColorFormat","getHsvFromColor","gamut","displayP3color","Common.Color.rgb2hsv","getColorFromHsva","hsva","Spectrum","Common.ObjectWrapper.eventMixin","UI.Widget.VBox","VisualLogging.dialog","VisualLogging.canvas","positionColor","swatchAriaText","UI.ARIAUtils.markAsApplication","toolsContainer","toolbar","definedShortcutKey","UI.ShortcutRegistry.ShortcutRegistry","descriptor","VisualLogging.colorEyeDropper","VisualLogging.slider","positionHue","UI.ARIAUtils.markAsSlider","positionAlpha","UI.ARIAUtils.markAsPoliteLiveRegion","i","inputValue","UI.UIUtils.createInput","VisualLogging.value","displaySwitcher","VisualLogging.dropDown","appendSwitcherIcon","UI.UIUtils.setTitle","ev","UI.UIUtils.installDragHandle","VisualLogging.section","VisualLogging.paletteColorShades","paletteSwitcher","UI.ARIAUtils.markAsButton","addColorButton","SrgbOverlay.SrgbOverlay.SrgbOverlay","PaletteGenerator","palette","MaterialPalette","getUpdatedSliderPosition","keyboardEvent","elementPosition","sliderPosition","hueAlphaLeft","newHue","Platform.NumberUtilities.clamp","ChangeSource","colorValues","UI.ARIAUtils.setValueNow","positionFraction","newAlpha","UI.ARIAUtils.setValueText","colorPosition","getUpdatedColorPosition","dragElement","verticalX","horizontalY","defaultUnit","unit","getUnitToMove","switcherIcon","callback","title","VisualLogging.close","show","Platform.KeyboardUtilities.isEscKey","Platform.KeyboardUtilities.isEnterOrSpaceKey","sliderNewPosition","colorText","colorName","animationDelay","VisualLogging.item","Platform.StringUtilities.sprintf","animate","shadow","tooltipText","UI.UIUtils.LongClickController","closeLightnessShades","shadesTop","shades","MaterialPaletteShades","shadeElement","mouseEvent","localX","localY","col","COLOR_CHIP_SIZE","ITEMS_PER_PALETTE_ROW","row","UI.UIUtils.deepElementFromEvent","index","newIndex","offsetX","offsetY","isDeleting","dragElementTransform","children","swatchOffsets","swatch","before","after","colors","defaultCustomPalette","Common.Settings.Settings","customPalette","GeneratedPaletteTitle","previewElement","titleElement","force","numColors","rowsNeeded","paletteColorHeight","paletteMargin","paletteTop","matchUserFormat","colorIndex","nextColorIndex","target","colorElements","contextMenu","toRight","colorOrHsv","colorString","changeSource","oldHue","h","alpha","dragX","dragY","hueSlideX","alphaSlideX","spec","noAlpha","text","inputElement","newValue","UI.UIUtils.createReplacementString","colorTextValues","spectrumStyles","eyeDropper","hexColor","error","stylesheetPromises","cssModel","SDK.TargetManager.TargetManager","SDK.CSSModel.CSSModel","stylesheet","a","b","hueComparator","paletteColors","hsvb","colorsPerRow","regexResult","c","frequency","swatchElement","VisualLogging.action","UI.ARIAUtils.setPressed","CSSOverviewUnusedDeclarations","key","item","unusedDeclarations","nodeId","strings","positionIdx","topIdx","leftIdx","rightIdx","bottomIdx","reason","displayIdx","widthIdx","heightIdx","verticalAlignIdx","CSSOverviewModel","SDK.SDKModel.SDKModel","#runtimeAgent","#cssAgent","#domSnapshotAgent","#overlayAgent","node","highlightConfig","Common.Color.PageHighlight","backgroundColors","textColors","textColorContrastIssues","fillColors","borderColors","fontInfo","snapshotConfig","formatColor","storeColor","id","colorFormatted","isSVGNode","nodeName","isReplacedContent","isTableElementWithDefaultStyles","display","elementCount","documents","nodes","layout","idx","nodeIdx","backgroundColorIdx","textColorIdx","fillIdx","borderTopWidthIdx","borderTopColorIdx","borderBottomWidthIdx","borderBottomColorIdx","borderLeftWidthIdx","borderLeftColorIdx","borderRightWidthIdx","borderRightColorIdx","fontFamilyIdx","fontSizeIdx","fontWeightIdx","lineHeightIdx","textColor","fontFamily","fontFamilyInfo","sizeLabel","weightLabel","lineHeightLabel","size","weight","lineHeight","fontSizeValue","fontWeightValue","lineHeightValue","blendedBackgroundColor","ColorPicker.ContrastInfo.ContrastInfo","blendedTextColor","formattedTextColor","formattedBackgroundColor","issue","aaThreshold","aaaThreshold","queries","queryMap","query","entries","expression","result","CSSOverviewProcessingView","UI.Widget.Widget","#controller","controller","#render","cancelButton","UI.UIUtils.createTextButton","UI.Fragment.Fragment","cssOverviewProcessingViewStyles","ITEM_CLASS_NAME","SELECTED_CLASS_NAME","CSSOverviewSidebarPanel","#onItemClick","#onItemKeyDown","UI.ARIAUtils.markAsTree","clearResultsButton","#reset","toolbarElement","name","UI.ARIAUtils.markAsTreeitem","#deselectAllItems","items","currItemIndex","moveTo","nextItemIndex","nextItemId","focus","cssOverviewSidebarPanelStyles","getBorderString","l","CSSOverviewCompletedView","#splitWidget","#formatter","#mainContainer","#resultsContainer","#elementContainer","#sideBar","#cssModel","#domModel","#linkifier","#viewMap","#data","#fragment","UI.SplitWidget.SplitWidget","DetailsView","evt","Components.Linkifier.Linkifier","#sideBarItemSelected","#sideBarReset","#createElementsView","#onClick","cssOverviewCompletedViewStyles","domModel","SDK.DOMModel.DOMModel","data","dataset","type","payload","declaration","fontMetric","fontMetricInfo","nodesIds","globalStyleStats","mediaQueries","sortedBackgroundColors","#sortColorsByLuminance","sortedTextColors","sortedFillColors","sortedBorderColors","#colorsToFragment","#contrastIssuesToFragment","#fontInfoToFragment","#groupToFragment","tabTitle","view","ElementDetailsView","fonts","font","fontMetrics","#fontMetricsToFragment","sanitizedPath","dataLabel","d1","d2","v1Nodes","total","prev","curr","itemLabel","issues","#contrastIssueToFragment","minContrastIssue","backgroundColor","showAPCA","blockFragment","apca","createClearIcon","createCheckIcon","block","borderColor","srcColors","colA","colB","colorA","colorB","#tabbedPane","UI.TabbedPane.TabbedPane","UI.TabbedPane.Events","jslogContext","#elementGridColumns","#elementGrid","linkifier","DataGrid.SortableDataGrid.SortableDataGrid","#onMouseOver","#sortMediaQueryDataGrid","sortColumnId","comparator","backendNodeId","firstItem","visibility","relatedNodesMap","nodeIds","frontendNode","ElementNode","DataGrid.SortableDataGrid.SortableDataGridNode","#frontendNode","columnId","cell","Common.Linkifier.Linkifier","link","showNodeIcon","#linkifyRuleLocation","TextUtils.TextRange.TextRange","contrastRatioString","border","contrastFragment","container","styleSheetId","ruleLocation","styleSheetHeader","lineNumber","columnNumber","matchingSelectorLocation","SDK.CSSModel.CSSLocation","render","FEEDBACK_LINK","DOC_LINK","OverviewStartRequestedEvent","CSSOverviewStartView","cssOverviewStartViewStyles","#onStartCaptureClick","startButton"],"mappings":"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,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,SAAS,CAChH,EACD,CACI,UACA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAA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"}