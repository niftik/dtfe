{"version":3,"file":"PreviewFactory-7rWtg079.js","sources":["../../entrypoints/formatter_worker/FormatterActions.js","../../ui/legacy/components/source_frame/resourceSourceFrame.css.legacy.js","../../ui/legacy/components/source_frame/selfXssDialog.css.legacy.js","../../ui/legacy/components/source_frame/SourceFrame.js","../../ui/legacy/components/source_frame/ResourceSourceFrame.js","../../ui/legacy/components/source_frame/fontView.css.legacy.js","../../ui/legacy/components/source_frame/FontView.js","../../ui/legacy/components/source_frame/imageView.css.legacy.js","../../ui/legacy/components/source_frame/ImageView.js","../../ui/legacy/components/source_frame/jsonView.css.legacy.js","../../ui/legacy/components/source_frame/JSONView.js","../../ui/legacy/components/source_frame/xmlTree.css.legacy.js","../../ui/legacy/components/source_frame/xmlView.css.legacy.js","../../ui/legacy/components/source_frame/XMLView.js","../../ui/legacy/components/source_frame/PreviewFactory.js"],"sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nexport const FORMATTABLE_MEDIA_TYPES = [\n    \"application/javascript\" /* FormattableMediaTypes.APPLICATION_JAVASCRIPT */,\n    \"application/json\" /* FormattableMediaTypes.APPLICATION_JSON */,\n    \"application/manifest+json\" /* FormattableMediaTypes.APPLICATION_MANIFEST_JSON */,\n    \"text/css\" /* FormattableMediaTypes.TEXT_CSS */,\n    \"text/html\" /* FormattableMediaTypes.TEXT_HTML */,\n    \"text/javascript\" /* FormattableMediaTypes.TEXT_JAVASCRIPT */,\n];\n//# sourceMappingURL=FormatterActions.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default {\n  cssContent: `/*\n * Copyright 2017 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.searchable-view {\n  flex: 1;\n}\n\n.toolbar {\n  background-color: var(--sys-color-cdt-base-container);\n  border-top: 1px solid var(--sys-color-divider);\n}\n\n/*# sourceURL=resourceSourceFrame.css */\n`\n};\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default {\n  cssContent: `/*\n * Copyright (c) 2023 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.widget {\n  padding: 20px;\n}\n\n.title {\n  font-size: larger;\n}\n\n.title,\n.message,\n.button,\n.text-input {\n  margin: 5px;\n}\n\n.button {\n  text-align: right;\n  margin-top: 10px;\n  display: flex;\n  justify-content: flex-end;\n  gap: var(--sys-size-6);\n}\n\n.button button {\n  min-width: 80px;\n}\n\n.dialog-close-button {\n  position: absolute;\n  right: 9px;\n  top: 9px;\n  z-index: 1;\n}\n\n/*# sourceURL=selfXssDialog.css */\n`\n};\n","/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as Root from '../../../../core/root/root.js';\nimport * as Formatter from '../../../../models/formatter/formatter.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as CodeMirror from '../../../../third_party/codemirror.next/codemirror.next.js';\nimport * as Buttons from '../../../components/buttons/buttons.js';\nimport * as CodeHighlighter from '../../../components/code_highlighter/code_highlighter.js';\nimport * as TextEditor from '../../../components/text_editor/text_editor.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\nimport selfXssDialogStyles from './selfXssDialog.css.legacy.js';\nconst UIStrings = {\n    /**\n     *@description Text for the source of something\n     */\n    source: 'Source',\n    /**\n     *@description Text to pretty print a file\n     */\n    prettyPrint: 'Pretty print',\n    /**\n     *@description Text when something is loading\n     */\n    loading: 'Loadingâ€¦',\n    /**\n     * @description Shown at the bottom of the Sources panel when the user has made multiple\n     * simultaneous text selections in the text editor.\n     * @example {2} PH1\n     */\n    dSelectionRegions: '{PH1} selection regions',\n    /**\n     * @description Position indicator in Source Frame of the Sources panel. The placeholder is a\n     * hexadecimal number value, which is why it is prefixed with '0x'.\n     * @example {abc} PH1\n     */\n    bytecodePositionXs: 'Bytecode position `0x`{PH1}',\n    /**\n     *@description Text in Source Frame of the Sources panel\n     *@example {2} PH1\n     *@example {2} PH2\n     */\n    lineSColumnS: 'Line {PH1}, Column {PH2}',\n    /**\n     *@description Text in Source Frame of the Sources panel\n     *@example {2} PH1\n     */\n    dCharactersSelected: '{PH1} characters selected',\n    /**\n     *@description Text in Source Frame of the Sources panel\n     *@example {2} PH1\n     *@example {2} PH2\n     */\n    dLinesDCharactersSelected: '{PH1} lines, {PH2} characters selected',\n    /**\n     *@description Headline of warning shown to users when pasting text/code into DevTools.\n     */\n    doYouTrustThisCode: 'Do you trust this code?',\n    /**\n     *@description Warning shown to users when pasting text/code into DevTools.\n     *@example {allow pasting} PH1\n     */\n    doNotPaste: 'Don\\'t paste code you do not understand or have not reviewed yourself into DevTools. This could allow attackers to steal your identity or take control of your computer. Please type \\'\\'{PH1}\\'\\' below to allow pasting.',\n    /**\n     *@description Text a user needs to type in order to confirm that they are aware of the danger of pasting code into the DevTools console.\n     */\n    allowPasting: 'allow pasting',\n    /**\n     *@description Button text for canceling an action\n     */\n    cancel: 'Cancel',\n    /**\n     *@description Button text for allowing an action\n     */\n    allow: 'Allow',\n    /**\n     *@description Input box placeholder which instructs the user to type 'allow pasing' into the input box.\n     *@example {allow pasting} PH1\n     */\n    typeAllowPasting: 'Type \\'\\'{PH1}\\'\\'',\n    /**\n     * @description Error message shown when the user tries to open a file that contains non-readable data. \"Editor\" refers to\n     * a text editor.\n     */\n    binaryContentError: 'Editor can\\'t show binary data. Use the \"Response\" tab in the \"Network\" panel to inspect this resource.',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/SourceFrame.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport const LINE_NUMBER_FORMATTER = CodeMirror.Facet.define({\n    combine(value) {\n        if (value.length === 0) {\n            return (lineNo) => lineNo.toString();\n        }\n        return value[0];\n    },\n});\nexport class SourceFrameImpl extends Common.ObjectWrapper.eventMixin(UI.View.SimpleView) {\n    options;\n    lazyContent;\n    prettyInternal;\n    rawContent;\n    formattedMap;\n    prettyToggle;\n    shouldAutoPrettyPrint;\n    progressToolbarItem;\n    textEditorInternal;\n    // The 'clean' document, before editing\n    baseDoc;\n    prettyBaseDoc = null;\n    displayedSelection = null;\n    searchConfig;\n    delayedFindSearchMatches;\n    currentSearchResultIndex;\n    searchResults;\n    searchRegex;\n    loadError;\n    muteChangeEventsForSetContent;\n    sourcePosition;\n    searchableView;\n    editable;\n    positionToReveal;\n    lineToScrollTo;\n    selectionToSet;\n    loadedInternal;\n    contentRequested;\n    wasmDisassemblyInternal;\n    contentSet;\n    selfXssWarningDisabledSetting;\n    constructor(lazyContent, options = {}) {\n        super(i18nString(UIStrings.source));\n        this.options = options;\n        this.lazyContent = lazyContent;\n        this.prettyInternal = false;\n        this.rawContent = null;\n        this.formattedMap = null;\n        this.prettyToggle =\n            new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.prettyPrint), 'brackets', undefined, 'pretty-print');\n        this.prettyToggle.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, () => {\n            void this.setPretty(this.prettyToggle.isToggled());\n        });\n        this.shouldAutoPrettyPrint = false;\n        this.prettyToggle.setVisible(false);\n        this.progressToolbarItem = new UI.Toolbar.ToolbarItem(document.createElement('div'));\n        this.textEditorInternal = new TextEditor.TextEditor.TextEditor(this.placeholderEditorState(''));\n        this.textEditorInternal.style.flexGrow = '1';\n        this.element.appendChild(this.textEditorInternal);\n        this.element.addEventListener('keydown', (event) => {\n            if (event.defaultPrevented) {\n                event.stopPropagation();\n            }\n        });\n        this.baseDoc = this.textEditorInternal.state.doc;\n        this.searchConfig = null;\n        this.delayedFindSearchMatches = null;\n        this.currentSearchResultIndex = -1;\n        this.searchResults = [];\n        this.searchRegex = null;\n        this.loadError = false;\n        this.muteChangeEventsForSetContent = false;\n        this.sourcePosition = new UI.Toolbar.ToolbarText();\n        this.searchableView = null;\n        this.editable = false;\n        this.positionToReveal = null;\n        this.lineToScrollTo = null;\n        this.selectionToSet = null;\n        this.loadedInternal = false;\n        this.contentRequested = false;\n        this.wasmDisassemblyInternal = null;\n        this.contentSet = false;\n        this.selfXssWarningDisabledSetting = Common.Settings.Settings.instance().createSetting('disable-self-xss-warning', false, \"Synced\" /* Common.Settings.SettingStorageType.SYNCED */);\n        Common.Settings.Settings.instance()\n            .moduleSetting('text-editor-indent')\n            .addChangeListener(this.#textEditorIndentChanged, this);\n    }\n    disposeView() {\n        Common.Settings.Settings.instance()\n            .moduleSetting('text-editor-indent')\n            .removeChangeListener(this.#textEditorIndentChanged, this);\n    }\n    async #textEditorIndentChanged() {\n        if (this.prettyInternal) {\n            // Indentation settings changed, which are used for pretty printing as well,\n            // so if the editor is currently pretty printed, just toggle the state here\n            // to apply the new indentation settings.\n            await this.setPretty(false);\n            await this.setPretty(true);\n        }\n    }\n    placeholderEditorState(content) {\n        return CodeMirror.EditorState.create({\n            doc: content,\n            extensions: [\n                CodeMirror.EditorState.readOnly.of(true),\n                this.options.lineNumbers !== false ? CodeMirror.lineNumbers() : [],\n                TextEditor.Config.theme(),\n            ],\n        });\n    }\n    editorConfiguration(doc) {\n        return [\n            CodeMirror.EditorView.updateListener.of(update => this.dispatchEventToListeners(\"EditorUpdate\" /* Events.EDITOR_UPDATE */, update)),\n            TextEditor.Config.baseConfiguration(doc),\n            TextEditor.Config.closeBrackets.instance(),\n            TextEditor.Config.autocompletion.instance(),\n            TextEditor.Config.showWhitespace.instance(),\n            TextEditor.Config.allowScrollPastEof.instance(),\n            CodeMirror.Prec.lowest(TextEditor.Config.codeFolding.instance()),\n            TextEditor.Config.autoDetectIndent.instance(),\n            sourceFrameTheme,\n            CodeMirror.EditorView.domEventHandlers({\n                focus: () => this.onFocus(),\n                blur: () => this.onBlur(),\n                paste: () => this.onPaste(),\n                scroll: () => this.dispatchEventToListeners(\"EditorScroll\" /* Events.EDITOR_SCROLL */),\n                contextmenu: event => this.onContextMenu(event),\n            }),\n            CodeMirror.lineNumbers({\n                domEventHandlers: { contextmenu: (_view, block, event) => this.onLineGutterContextMenu(block.from, event) },\n            }),\n            CodeMirror.EditorView.updateListener.of((update) => {\n                if (update.selectionSet || update.docChanged) {\n                    this.updateSourcePosition();\n                }\n                if (update.docChanged) {\n                    this.onTextChanged();\n                }\n            }),\n            activeSearchState,\n            CodeMirror.Prec.lowest(searchHighlighter),\n            config.language.of([]),\n            this.wasmDisassemblyInternal ? markNonBreakableLines(this.wasmDisassemblyInternal) : nonBreakableLines,\n            this.options.lineWrapping ? CodeMirror.EditorView.lineWrapping : [],\n            this.options.lineNumbers !== false ? CodeMirror.lineNumbers() : [],\n            CodeMirror.indentationMarkers({\n                colors: {\n                    light: 'var(--sys-color-divider)',\n                    activeLight: 'var(--sys-color-divider-prominent)',\n                    dark: 'var(--sys-color-divider)',\n                    activeDark: 'var(--sys-color-divider-prominent)',\n                },\n            }),\n        ];\n    }\n    onBlur() {\n    }\n    onFocus() {\n    }\n    onPaste() {\n        if (Root.Runtime.Runtime.queryParam('isChromeForTesting') ||\n            Root.Runtime.Runtime.queryParam('disableSelfXssWarnings') || this.selfXssWarningDisabledSetting.get()) {\n            return false;\n        }\n        void this.showSelfXssWarning();\n        return true;\n    }\n    async showSelfXssWarning() {\n        // Hack to circumvent Chrome issue which would show a tooltip for the newly opened\n        // dialog if pasting via keyboard.\n        await new Promise(resolve => setTimeout(resolve, 0));\n        const allowPasting = await SelfXssWarningDialog.show();\n        if (allowPasting) {\n            this.selfXssWarningDisabledSetting.set(true);\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelfXssAllowPastingInDialog);\n        }\n    }\n    get wasmDisassembly() {\n        return this.wasmDisassemblyInternal;\n    }\n    editorLocationToUILocation(lineNumber, columnNumber) {\n        if (this.wasmDisassemblyInternal) {\n            columnNumber = this.wasmDisassemblyInternal.lineNumberToBytecodeOffset(lineNumber);\n            lineNumber = 0;\n        }\n        else if (this.prettyInternal) {\n            [lineNumber, columnNumber] = this.prettyToRawLocation(lineNumber, columnNumber);\n        }\n        return { lineNumber, columnNumber };\n    }\n    uiLocationToEditorLocation(lineNumber, columnNumber = 0) {\n        if (this.wasmDisassemblyInternal) {\n            lineNumber = this.wasmDisassemblyInternal.bytecodeOffsetToLineNumber(columnNumber);\n            columnNumber = 0;\n        }\n        else if (this.prettyInternal) {\n            [lineNumber, columnNumber] = this.rawToPrettyLocation(lineNumber, columnNumber);\n        }\n        return { lineNumber, columnNumber };\n    }\n    setCanPrettyPrint(canPrettyPrint, autoPrettyPrint) {\n        this.shouldAutoPrettyPrint = autoPrettyPrint === true &&\n            Common.Settings.Settings.instance().moduleSetting('auto-pretty-print-minified').get();\n        this.prettyToggle.setVisible(canPrettyPrint);\n    }\n    setEditable(editable) {\n        this.editable = editable;\n        if (this.loaded && editable !== !this.textEditor.state.readOnly) {\n            this.textEditor.dispatch({ effects: config.editable.reconfigure(CodeMirror.EditorState.readOnly.of(!editable)) });\n        }\n    }\n    async setPretty(value) {\n        this.prettyInternal = value;\n        this.prettyToggle.setEnabled(false);\n        const wasLoaded = this.loaded;\n        const { textEditor } = this;\n        const selection = textEditor.state.selection.main;\n        const startPos = textEditor.toLineColumn(selection.from), endPos = textEditor.toLineColumn(selection.to);\n        let newSelection;\n        if (this.prettyInternal) {\n            const content = this.rawContent instanceof CodeMirror.Text ? this.rawContent.sliceString(0) : this.rawContent || '';\n            const formatInfo = await Formatter.ScriptFormatter.formatScriptContent(this.contentType, content);\n            this.formattedMap = formatInfo.formattedMapping;\n            await this.setContent(formatInfo.formattedContent);\n            this.prettyBaseDoc = textEditor.state.doc;\n            const start = this.rawToPrettyLocation(startPos.lineNumber, startPos.columnNumber);\n            const end = this.rawToPrettyLocation(endPos.lineNumber, endPos.columnNumber);\n            newSelection = textEditor.createSelection({ lineNumber: start[0], columnNumber: start[1] }, { lineNumber: end[0], columnNumber: end[1] });\n        }\n        else {\n            await this.setContent(this.rawContent || '');\n            this.baseDoc = textEditor.state.doc;\n            const start = this.prettyToRawLocation(startPos.lineNumber, startPos.columnNumber);\n            const end = this.prettyToRawLocation(endPos.lineNumber, endPos.columnNumber);\n            newSelection = textEditor.createSelection({ lineNumber: start[0], columnNumber: start[1] }, { lineNumber: end[0], columnNumber: end[1] });\n        }\n        if (wasLoaded) {\n            textEditor.revealPosition(newSelection, false);\n        }\n        this.prettyToggle.setEnabled(true);\n        this.updatePrettyPrintState();\n    }\n    // If this is a disassembled WASM file or a pretty-printed file,\n    // wire in a line number formatter that shows binary offsets or line\n    // numbers in the original source.\n    getLineNumberFormatter() {\n        if (this.options.lineNumbers === false) {\n            return [];\n        }\n        let formatNumber = undefined;\n        if (this.wasmDisassemblyInternal) {\n            const disassembly = this.wasmDisassemblyInternal;\n            const lastBytecodeOffset = disassembly.lineNumberToBytecodeOffset(disassembly.lineNumbers - 1);\n            const bytecodeOffsetDigits = lastBytecodeOffset.toString(16).length + 1;\n            formatNumber = (lineNumber) => {\n                const bytecodeOffset = disassembly.lineNumberToBytecodeOffset(Math.min(disassembly.lineNumbers, lineNumber) - 1);\n                return `0x${bytecodeOffset.toString(16).padStart(bytecodeOffsetDigits, '0')}`;\n            };\n        }\n        else if (this.prettyInternal) {\n            formatNumber = (lineNumber, state) => {\n                // @codemirror/view passes a high number here to estimate the\n                // maximum width to allocate for the line number gutter.\n                if (lineNumber < 2 || lineNumber > state.doc.lines) {\n                    return String(lineNumber);\n                }\n                const [currLine] = this.prettyToRawLocation(lineNumber - 1);\n                const [prevLine] = this.prettyToRawLocation(lineNumber - 2);\n                if (currLine !== prevLine) {\n                    return String(currLine + 1);\n                }\n                return '-';\n            };\n        }\n        return formatNumber ? [CodeMirror.lineNumbers({ formatNumber }), LINE_NUMBER_FORMATTER.of(formatNumber)] : [];\n    }\n    updateLineNumberFormatter() {\n        this.textEditor.dispatch({ effects: config.lineNumbers.reconfigure(this.getLineNumberFormatter()) });\n        this.textEditor.shadowRoot?.querySelector('.cm-lineNumbers')\n            ?.setAttribute('jslog', `${VisualLogging.gutter('line-numbers').track({ click: true })}`);\n    }\n    updatePrettyPrintState() {\n        this.prettyToggle.setToggled(this.prettyInternal);\n        this.textEditorInternal.classList.toggle('pretty-printed', this.prettyInternal);\n        this.updateLineNumberFormatter();\n    }\n    prettyToRawLocation(line, column = 0) {\n        if (!this.formattedMap) {\n            return [line, column];\n        }\n        return this.formattedMap.formattedToOriginal(line, column);\n    }\n    rawToPrettyLocation(line, column) {\n        if (!this.formattedMap) {\n            return [line, column];\n        }\n        return this.formattedMap.originalToFormatted(line, column);\n    }\n    hasLoadError() {\n        return this.loadError;\n    }\n    wasShown() {\n        void this.ensureContentLoaded();\n        this.wasShownOrLoaded();\n    }\n    willHide() {\n        super.willHide();\n        this.clearPositionToReveal();\n    }\n    async toolbarItems() {\n        return [this.prettyToggle, this.sourcePosition, this.progressToolbarItem];\n    }\n    get loaded() {\n        return this.loadedInternal;\n    }\n    get textEditor() {\n        return this.textEditorInternal;\n    }\n    get pretty() {\n        return this.prettyInternal;\n    }\n    get contentType() {\n        return this.loadError ? '' : this.getContentType();\n    }\n    getContentType() {\n        return '';\n    }\n    async ensureContentLoaded() {\n        if (!this.contentRequested) {\n            this.contentRequested = true;\n            await this.setContentDataOrError(this.lazyContent());\n            this.contentSet = true;\n        }\n    }\n    async setContentDataOrError(contentDataPromise) {\n        const progressIndicator = new UI.ProgressIndicator.ProgressIndicator();\n        progressIndicator.setTitle(i18nString(UIStrings.loading));\n        progressIndicator.setTotalWork(100);\n        this.progressToolbarItem.element.appendChild(progressIndicator.element);\n        progressIndicator.setWorked(1);\n        const contentData = await contentDataPromise;\n        let error;\n        let content;\n        let isMinified = false;\n        if (TextUtils.ContentData.ContentData.isError(contentData)) {\n            error = contentData.error;\n            content = contentData.error;\n        }\n        else if (contentData instanceof TextUtils.WasmDisassembly.WasmDisassembly) {\n            content = CodeMirror.Text.of(contentData.lines);\n            this.wasmDisassemblyInternal = contentData;\n        }\n        else if (contentData.isTextContent) {\n            content = contentData.text;\n            isMinified = TextUtils.TextUtils.isMinified(contentData.text);\n            this.wasmDisassemblyInternal = null;\n        }\n        else {\n            error = i18nString(UIStrings.binaryContentError);\n            content = null;\n            this.wasmDisassemblyInternal = null;\n        }\n        progressIndicator.setWorked(100);\n        progressIndicator.done();\n        if (this.rawContent === content && error === undefined) {\n            return;\n        }\n        this.rawContent = content;\n        this.formattedMap = null;\n        this.prettyToggle.setEnabled(true);\n        if (error) {\n            this.loadError = true;\n            this.textEditor.state = this.placeholderEditorState(error);\n            this.prettyToggle.setEnabled(false);\n        }\n        else if (this.shouldAutoPrettyPrint && isMinified) {\n            await this.setPretty(true);\n        }\n        else {\n            await this.setContent(this.rawContent || '');\n        }\n    }\n    revealPosition(position, shouldHighlight) {\n        this.lineToScrollTo = null;\n        this.selectionToSet = null;\n        if (typeof position === 'number') {\n            let line = 0, column = 0;\n            const { doc } = this.textEditor.state;\n            if (position > doc.length) {\n                line = doc.lines - 1;\n            }\n            else if (position >= 0) {\n                const lineObj = doc.lineAt(position);\n                line = lineObj.number - 1;\n                column = position - lineObj.from;\n            }\n            this.positionToReveal = { to: { lineNumber: line, columnNumber: column }, shouldHighlight };\n        }\n        else if ('lineNumber' in position) {\n            const { lineNumber, columnNumber } = position;\n            this.positionToReveal = { to: { lineNumber, columnNumber: columnNumber ?? 0 }, shouldHighlight };\n        }\n        else {\n            this.positionToReveal = { ...position, shouldHighlight };\n        }\n        this.innerRevealPositionIfNeeded();\n    }\n    innerRevealPositionIfNeeded() {\n        if (!this.positionToReveal) {\n            return;\n        }\n        if (!this.loaded || !this.isShowing()) {\n            return;\n        }\n        const { from, to, shouldHighlight } = this.positionToReveal;\n        const toLocation = this.uiLocationToEditorLocation(to.lineNumber, to.columnNumber);\n        const fromLocation = from ? this.uiLocationToEditorLocation(from.lineNumber, from.columnNumber) : undefined;\n        const { textEditor } = this;\n        textEditor.revealPosition(textEditor.createSelection(toLocation, fromLocation), shouldHighlight);\n        this.positionToReveal = null;\n    }\n    clearPositionToReveal() {\n        this.positionToReveal = null;\n    }\n    scrollToLine(line) {\n        this.clearPositionToReveal();\n        this.lineToScrollTo = line;\n        this.innerScrollToLineIfNeeded();\n    }\n    innerScrollToLineIfNeeded() {\n        if (this.lineToScrollTo !== null) {\n            if (this.loaded && this.isShowing()) {\n                const { textEditor } = this;\n                const position = textEditor.toOffset({ lineNumber: this.lineToScrollTo, columnNumber: 0 });\n                textEditor.dispatch({ effects: CodeMirror.EditorView.scrollIntoView(position, { y: 'start', yMargin: 0 }) });\n                this.lineToScrollTo = null;\n            }\n        }\n    }\n    setSelection(textRange) {\n        this.selectionToSet = textRange;\n        this.innerSetSelectionIfNeeded();\n    }\n    innerSetSelectionIfNeeded() {\n        const sel = this.selectionToSet;\n        if (sel && this.loaded && this.isShowing()) {\n            const { textEditor } = this;\n            textEditor.dispatch({\n                selection: textEditor.createSelection({ lineNumber: sel.startLine, columnNumber: sel.startColumn }, { lineNumber: sel.endLine, columnNumber: sel.endColumn }),\n            });\n            this.selectionToSet = null;\n        }\n    }\n    wasShownOrLoaded() {\n        this.innerRevealPositionIfNeeded();\n        this.innerSetSelectionIfNeeded();\n        this.innerScrollToLineIfNeeded();\n        this.textEditor.shadowRoot?.querySelector('.cm-lineNumbers')\n            ?.setAttribute('jslog', `${VisualLogging.gutter('line-numbers').track({ click: true })}`);\n        this.textEditor.shadowRoot?.querySelector('.cm-foldGutter')\n            ?.setAttribute('jslog', `${VisualLogging.gutter('fold')}`);\n        this.textEditor.setAttribute('jslog', `${VisualLogging.textField().track({ change: true })}`);\n    }\n    onTextChanged() {\n        const wasPretty = this.pretty;\n        this.prettyInternal = Boolean(this.prettyBaseDoc && this.textEditor.state.doc.eq(this.prettyBaseDoc));\n        if (this.prettyInternal !== wasPretty) {\n            this.updatePrettyPrintState();\n        }\n        this.prettyToggle.setEnabled(this.isClean());\n        if (this.searchConfig && this.searchableView) {\n            this.performSearch(this.searchConfig, false, false);\n        }\n    }\n    isClean() {\n        return this.textEditor.state.doc.eq(this.baseDoc) ||\n            (this.prettyBaseDoc !== null && this.textEditor.state.doc.eq(this.prettyBaseDoc));\n    }\n    contentCommitted() {\n        this.baseDoc = this.textEditorInternal.state.doc;\n        this.prettyBaseDoc = null;\n        this.rawContent = this.textEditor.state.doc.toString();\n        this.formattedMap = null;\n        if (this.prettyInternal) {\n            this.prettyInternal = false;\n            this.updatePrettyPrintState();\n        }\n        this.prettyToggle.setEnabled(true);\n    }\n    async getLanguageSupport(content) {\n        // This is a pretty horrible work-around for webpack-based Vue2 setups. See\n        // https://crbug.com/1416562 for the full story behind this.\n        let { contentType } = this;\n        if (contentType === 'text/x.vue') {\n            content = typeof content === 'string' ? content : content.sliceString(0);\n            if (!content.trimStart().startsWith('<')) {\n                contentType = 'text/javascript';\n            }\n        }\n        const languageDesc = await CodeHighlighter.CodeHighlighter.languageFromMIME(contentType);\n        if (!languageDesc) {\n            return [];\n        }\n        return [\n            languageDesc,\n            CodeMirror.javascript.javascriptLanguage.data.of({ autocomplete: CodeMirror.completeAnyWord }),\n        ];\n    }\n    async updateLanguageMode(content) {\n        const langExtension = await this.getLanguageSupport(content);\n        this.textEditor.dispatch({ effects: config.language.reconfigure(langExtension) });\n    }\n    async setContent(content) {\n        this.muteChangeEventsForSetContent = true;\n        const { textEditor } = this;\n        const wasLoaded = this.loadedInternal;\n        const scrollTop = textEditor.editor.scrollDOM.scrollTop;\n        this.loadedInternal = true;\n        const languageSupport = await this.getLanguageSupport(content);\n        const editorState = CodeMirror.EditorState.create({\n            doc: content,\n            extensions: [\n                this.editorConfiguration(content),\n                languageSupport,\n                config.lineNumbers.of(this.getLineNumberFormatter()),\n                config.editable.of(this.editable ? [] : CodeMirror.EditorState.readOnly.of(true)),\n            ],\n        });\n        this.baseDoc = editorState.doc;\n        textEditor.state = editorState;\n        if (wasLoaded) {\n            textEditor.editor.scrollDOM.scrollTop = scrollTop;\n        }\n        this.wasShownOrLoaded();\n        if (this.delayedFindSearchMatches) {\n            this.delayedFindSearchMatches();\n            this.delayedFindSearchMatches = null;\n        }\n        this.muteChangeEventsForSetContent = false;\n    }\n    setSearchableView(view) {\n        this.searchableView = view;\n    }\n    doFindSearchMatches(searchConfig, shouldJump, jumpBackwards) {\n        this.currentSearchResultIndex = -1;\n        this.searchRegex = searchConfig.toSearchRegex(true);\n        this.searchResults = this.collectRegexMatches(this.searchRegex);\n        if (this.searchableView) {\n            this.searchableView.updateSearchMatchesCount(this.searchResults.length);\n        }\n        const editor = this.textEditor;\n        if (!this.searchResults.length) {\n            if (editor.state.field(activeSearchState)) {\n                editor.dispatch({ effects: setActiveSearch.of(null) });\n            }\n        }\n        else if (shouldJump && jumpBackwards) {\n            this.jumpToPreviousSearchResult();\n        }\n        else if (shouldJump) {\n            this.jumpToNextSearchResult();\n        }\n        else {\n            editor.dispatch({ effects: setActiveSearch.of(new ActiveSearch(this.searchRegex, null)) });\n        }\n    }\n    performSearch(searchConfig, shouldJump, jumpBackwards) {\n        if (this.searchableView) {\n            this.searchableView.updateSearchMatchesCount(0);\n        }\n        this.resetSearch();\n        this.searchConfig = searchConfig;\n        if (this.loaded) {\n            this.doFindSearchMatches(searchConfig, shouldJump, Boolean(jumpBackwards));\n        }\n        else {\n            this.delayedFindSearchMatches =\n                this.doFindSearchMatches.bind(this, searchConfig, shouldJump, Boolean(jumpBackwards));\n        }\n        void this.ensureContentLoaded();\n    }\n    resetCurrentSearchResultIndex() {\n        if (!this.searchResults.length) {\n            return;\n        }\n        this.currentSearchResultIndex = -1;\n        if (this.searchableView) {\n            this.searchableView.updateCurrentMatchIndex(this.currentSearchResultIndex);\n        }\n        const editor = this.textEditor;\n        const currentActiveSearch = editor.state.field(activeSearchState);\n        if (currentActiveSearch && currentActiveSearch.currentRange) {\n            editor.dispatch({ effects: setActiveSearch.of(new ActiveSearch(currentActiveSearch.regexp, null)) });\n        }\n    }\n    resetSearch() {\n        this.searchConfig = null;\n        this.delayedFindSearchMatches = null;\n        this.currentSearchResultIndex = -1;\n        this.searchResults = [];\n        this.searchRegex = null;\n    }\n    onSearchCanceled() {\n        const range = this.currentSearchResultIndex !== -1 ? this.searchResults[this.currentSearchResultIndex] : null;\n        this.resetSearch();\n        if (!this.loaded) {\n            return;\n        }\n        const editor = this.textEditor;\n        editor.dispatch({\n            effects: setActiveSearch.of(null),\n            selection: range ? { anchor: range.from, head: range.to } : undefined,\n            scrollIntoView: true,\n            userEvent: 'select.search.cancel',\n        });\n    }\n    jumpToLastSearchResult() {\n        this.jumpToSearchResult(this.searchResults.length - 1);\n    }\n    searchResultIndexForCurrentSelection() {\n        return Platform.ArrayUtilities.lowerBound(this.searchResults, this.textEditor.state.selection.main, (a, b) => a.to - b.to);\n    }\n    jumpToNextSearchResult() {\n        const currentIndex = this.searchResultIndexForCurrentSelection();\n        const nextIndex = this.currentSearchResultIndex === -1 ? currentIndex : currentIndex + 1;\n        this.jumpToSearchResult(nextIndex);\n    }\n    jumpToPreviousSearchResult() {\n        const currentIndex = this.searchResultIndexForCurrentSelection();\n        this.jumpToSearchResult(currentIndex - 1);\n    }\n    supportsCaseSensitiveSearch() {\n        return true;\n    }\n    supportsRegexSearch() {\n        return true;\n    }\n    jumpToSearchResult(index) {\n        if (!this.loaded || !this.searchResults.length || !this.searchRegex) {\n            return;\n        }\n        this.currentSearchResultIndex = (index + this.searchResults.length) % this.searchResults.length;\n        if (this.searchableView) {\n            this.searchableView.updateCurrentMatchIndex(this.currentSearchResultIndex);\n        }\n        const editor = this.textEditor;\n        const range = this.searchResults[this.currentSearchResultIndex];\n        editor.dispatch({\n            effects: setActiveSearch.of(new ActiveSearch(this.searchRegex, range)),\n            selection: { anchor: range.from, head: range.to },\n            scrollIntoView: true,\n            userEvent: 'select.search',\n        });\n    }\n    replaceSelectionWith(searchConfig, replacement) {\n        const range = this.searchResults[this.currentSearchResultIndex];\n        if (!range) {\n            return;\n        }\n        const insert = this.searchRegex?.fromQuery ? range.insertPlaceholders(replacement) : replacement;\n        const editor = this.textEditor;\n        const changes = editor.state.changes({ from: range.from, to: range.to, insert });\n        editor.dispatch({ changes, selection: { anchor: changes.mapPos(editor.state.selection.main.to, 1) }, userEvent: 'input.replace' });\n    }\n    replaceAllWith(searchConfig, replacement) {\n        this.resetCurrentSearchResultIndex();\n        const regex = searchConfig.toSearchRegex(true);\n        const ranges = this.collectRegexMatches(regex);\n        if (!ranges.length) {\n            return;\n        }\n        const isRegExp = regex.fromQuery;\n        const changes = ranges.map(match => ({ from: match.from, to: match.to, insert: isRegExp ? match.insertPlaceholders(replacement) : replacement }));\n        this.textEditor.dispatch({ changes, scrollIntoView: true, userEvent: 'input.replace.all' });\n    }\n    collectRegexMatches({ regex }) {\n        const ranges = [];\n        let pos = 0;\n        for (const line of this.textEditor.state.doc.iterLines()) {\n            regex.lastIndex = 0;\n            for (;;) {\n                const match = regex.exec(line);\n                if (!match) {\n                    break;\n                }\n                if (match[0].length) {\n                    const from = pos + match.index;\n                    ranges.push(new SearchMatch(from, from + match[0].length, match));\n                }\n                else {\n                    regex.lastIndex = match.index + 1;\n                }\n            }\n            pos += line.length + 1;\n        }\n        return ranges;\n    }\n    canEditSource() {\n        return this.editable;\n    }\n    updateSourcePosition() {\n        const { textEditor } = this, { state } = textEditor, { selection } = state;\n        if (this.displayedSelection?.eq(selection)) {\n            return;\n        }\n        this.displayedSelection = selection;\n        if (selection.ranges.length > 1) {\n            this.sourcePosition.setText(i18nString(UIStrings.dSelectionRegions, { PH1: selection.ranges.length }));\n            return;\n        }\n        const { main } = state.selection;\n        if (main.empty) {\n            const { lineNumber, columnNumber } = textEditor.toLineColumn(main.head);\n            const location = this.prettyToRawLocation(lineNumber, columnNumber);\n            if (this.wasmDisassemblyInternal) {\n                const disassembly = this.wasmDisassemblyInternal;\n                const lastBytecodeOffset = disassembly.lineNumberToBytecodeOffset(disassembly.lineNumbers - 1);\n                const bytecodeOffsetDigits = lastBytecodeOffset.toString(16).length;\n                const bytecodeOffset = disassembly.lineNumberToBytecodeOffset(location[0]);\n                this.sourcePosition.setText(i18nString(UIStrings.bytecodePositionXs, { PH1: bytecodeOffset.toString(16).padStart(bytecodeOffsetDigits, '0') }));\n            }\n            else {\n                this.sourcePosition.setText(i18nString(UIStrings.lineSColumnS, { PH1: location[0] + 1, PH2: location[1] + 1 }));\n            }\n        }\n        else {\n            const startLine = state.doc.lineAt(main.from), endLine = state.doc.lineAt(main.to);\n            if (startLine.number === endLine.number) {\n                this.sourcePosition.setText(i18nString(UIStrings.dCharactersSelected, { PH1: main.to - main.from }));\n            }\n            else {\n                this.sourcePosition.setText(i18nString(UIStrings.dLinesDCharactersSelected, { PH1: endLine.number - startLine.number + 1, PH2: main.to - main.from }));\n            }\n        }\n    }\n    onContextMenu(event) {\n        event.consume(true); // Consume event now to prevent document from handling the async menu\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        const { state } = this.textEditor;\n        const pos = state.selection.main.from, line = state.doc.lineAt(pos);\n        this.populateTextAreaContextMenu(contextMenu, line.number - 1, pos - line.from);\n        contextMenu.appendApplicableItems(this);\n        void contextMenu.show();\n        return true;\n    }\n    populateTextAreaContextMenu(_menu, _lineNumber, _columnNumber) {\n    }\n    onLineGutterContextMenu(position, event) {\n        event.consume(true); // Consume event now to prevent document from handling the async menu\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        const lineNumber = this.textEditor.state.doc.lineAt(position).number - 1;\n        this.populateLineGutterContextMenu(contextMenu, lineNumber);\n        contextMenu.appendApplicableItems(this);\n        void contextMenu.show();\n        return true;\n    }\n    populateLineGutterContextMenu(_menu, _lineNumber) {\n    }\n    focus() {\n        this.textEditor.focus();\n    }\n}\nclass SearchMatch {\n    from;\n    to;\n    match;\n    constructor(from, to, match) {\n        this.from = from;\n        this.to = to;\n        this.match = match;\n    }\n    insertPlaceholders(replacement) {\n        return replacement.replace(/\\$(\\$|&|\\d+|<[^>]+>)/g, (_, selector) => {\n            if (selector === '$') {\n                return '$';\n            }\n            if (selector === '&') {\n                return this.match[0];\n            }\n            if (selector[0] === '<') {\n                return (this.match.groups && this.match.groups[selector.slice(1, selector.length - 1)]) || '';\n            }\n            return this.match[Number.parseInt(selector, 10)] || '';\n        });\n    }\n}\nexport class SelfXssWarningDialog {\n    static async show() {\n        const dialog = new UI.Dialog.Dialog('self-xss-warning');\n        dialog.setMaxContentSize(new UI.Geometry.Size(504, 340));\n        dialog.setSizeBehavior(\"SetExactWidthMaxHeight\" /* UI.GlassPane.SizeBehavior.SET_EXACT_WIDTH_MAX_HEIGHT */);\n        dialog.setDimmed(true);\n        const shadowRoot = UI.UIUtils.createShadowRootWithCoreStyles(dialog.contentElement, { cssFile: selfXssDialogStyles, delegatesFocus: undefined });\n        const content = shadowRoot.createChild('div', 'widget');\n        const result = await new Promise(resolve => {\n            const closeButton = content.createChild('div', 'dialog-close-button', 'dt-close-button');\n            closeButton.setTabbable(true);\n            self.onInvokeElement(closeButton, event => {\n                dialog.hide();\n                event.consume(true);\n                resolve(false);\n            });\n            content.createChild('div', 'title').textContent = i18nString(UIStrings.doYouTrustThisCode);\n            content.createChild('div', 'message').textContent =\n                i18nString(UIStrings.doNotPaste, { PH1: i18nString(UIStrings.allowPasting) });\n            const input = UI.UIUtils.createInput('text-input', 'text', 'allow-pasting');\n            input.placeholder = i18nString(UIStrings.typeAllowPasting, { PH1: i18nString(UIStrings.allowPasting) });\n            content.appendChild(input);\n            const buttonsBar = content.createChild('div', 'button');\n            const cancelButton = UI.UIUtils.createTextButton(i18nString(UIStrings.cancel), () => resolve(false), { jslogContext: 'cancel' });\n            buttonsBar.appendChild(cancelButton);\n            const allowButton = UI.UIUtils.createTextButton(i18nString(UIStrings.allow), () => {\n                resolve(input.value === i18nString(UIStrings.allowPasting));\n            }, { jslogContext: 'confirm', variant: \"primary\" /* Buttons.Button.Variant.PRIMARY */ });\n            allowButton.disabled = true;\n            buttonsBar.appendChild(allowButton);\n            input.addEventListener('input', () => {\n                allowButton.disabled = !Boolean(input.value);\n            }, false);\n            input.addEventListener('paste', e => e.preventDefault());\n            input.addEventListener('drop', e => e.preventDefault());\n            dialog.setOutsideClickCallback(event => {\n                event.consume();\n                resolve(false);\n            });\n            dialog.show();\n            Host.userMetrics.actionTaken(Host.UserMetrics.Action.SelfXssWarningDialogShown);\n        });\n        dialog.hide();\n        return result;\n    }\n}\nconst config = {\n    editable: new CodeMirror.Compartment(),\n    language: new CodeMirror.Compartment(),\n    lineNumbers: new CodeMirror.Compartment(),\n};\nclass ActiveSearch {\n    regexp;\n    currentRange;\n    constructor(regexp, currentRange) {\n        this.regexp = regexp;\n        this.currentRange = currentRange;\n    }\n    map(change) {\n        return change.empty || !this.currentRange ?\n            this :\n            new ActiveSearch(this.regexp, { from: change.mapPos(this.currentRange.from), to: change.mapPos(this.currentRange.to) });\n    }\n    static eq(a, b) {\n        return Boolean(a === b ||\n            a && b && a.currentRange?.from === b.currentRange?.from && a.currentRange?.to === b.currentRange?.to &&\n                a.regexp.regex.source === b.regexp.regex.source && a.regexp.regex.flags === b.regexp.regex.flags);\n    }\n}\nconst setActiveSearch = CodeMirror.StateEffect.define({ map: (value, mapping) => value && value.map(mapping) });\nconst activeSearchState = CodeMirror.StateField.define({\n    create() {\n        return null;\n    },\n    update(state, tr) {\n        return tr.effects.reduce((state, effect) => effect.is(setActiveSearch) ? effect.value : state, state && state.map(tr.changes));\n    },\n});\nconst searchMatchDeco = CodeMirror.Decoration.mark({ class: 'cm-searchMatch' });\nconst currentSearchMatchDeco = CodeMirror.Decoration.mark({ class: 'cm-searchMatch cm-searchMatch-selected' });\nconst searchHighlighter = CodeMirror.ViewPlugin.fromClass(class {\n    decorations;\n    constructor(view) {\n        this.decorations = this.computeDecorations(view);\n    }\n    update(update) {\n        const active = update.state.field(activeSearchState);\n        if (!ActiveSearch.eq(active, update.startState.field(activeSearchState)) ||\n            (active && (update.viewportChanged || update.docChanged))) {\n            this.decorations = this.computeDecorations(update.view);\n        }\n    }\n    computeDecorations(view) {\n        const active = view.state.field(activeSearchState);\n        if (!active) {\n            return CodeMirror.Decoration.none;\n        }\n        const builder = new CodeMirror.RangeSetBuilder();\n        const { doc } = view.state;\n        for (const { from, to } of view.visibleRanges) {\n            let pos = from;\n            for (const part of doc.iterRange(from, to)) {\n                if (part !== '\\n') {\n                    active.regexp.regex.lastIndex = 0;\n                    for (;;) {\n                        const match = active.regexp.regex.exec(part);\n                        if (!match) {\n                            break;\n                        }\n                        if (match[0].length) {\n                            const start = pos + match.index, end = start + match[0].length;\n                            const current = active.currentRange && active.currentRange.from === start && active.currentRange.to === end;\n                            builder.add(start, end, current ? currentSearchMatchDeco : searchMatchDeco);\n                        }\n                        else {\n                            active.regexp.regex.lastIndex = match.index + 1;\n                        }\n                    }\n                }\n                pos += part.length;\n            }\n        }\n        return builder.finish();\n    }\n}, { decorations: value => value.decorations });\nconst nonBreakableLineMark = new (class extends CodeMirror.GutterMarker {\n    elementClass = 'cm-nonBreakableLine';\n})();\n// Effect to add lines (by position) to the set of non-breakable lines.\nexport const addNonBreakableLines = CodeMirror.StateEffect.define();\nconst nonBreakableLines = CodeMirror.StateField.define({\n    create() {\n        return CodeMirror.RangeSet.empty;\n    },\n    update(deco, tr) {\n        return tr.effects.reduce((deco, effect) => {\n            return !effect.is(addNonBreakableLines) ?\n                deco :\n                deco.update({ add: effect.value.map(pos => nonBreakableLineMark.range(pos)) });\n        }, deco.map(tr.changes));\n    },\n    provide: field => CodeMirror.lineNumberMarkers.from(field),\n});\nexport function isBreakableLine(state, line) {\n    const nonBreakable = state.field(nonBreakableLines);\n    if (!nonBreakable.size) {\n        return true;\n    }\n    let found = false;\n    nonBreakable.between(line.from, line.from, () => {\n        found = true;\n    });\n    return !found;\n}\nfunction markNonBreakableLines(disassembly) {\n    // Mark non-breakable lines in the Wasm disassembly after setting\n    // up the content for the text editor (which creates the gutter).\n    return nonBreakableLines.init(state => {\n        const marks = [];\n        for (const lineNumber of disassembly.nonBreakableLineNumbers()) {\n            if (lineNumber < state.doc.lines) {\n                marks.push(nonBreakableLineMark.range(state.doc.line(lineNumber + 1).from));\n            }\n        }\n        return CodeMirror.RangeSet.of(marks);\n    });\n}\nconst sourceFrameTheme = CodeMirror.EditorView.theme({\n    '&.cm-editor': { height: '100%' },\n    '.cm-scroller': { overflow: 'auto' },\n    '.cm-lineNumbers .cm-gutterElement.cm-nonBreakableLine': { color: 'var(--sys-color-state-disabled) !important' },\n    '.cm-searchMatch': {\n        border: '1px solid var(--sys-color-outline)',\n        borderRadius: '3px',\n        margin: '0 -1px',\n        '&.cm-searchMatch-selected': {\n            borderRadius: '1px',\n            backgroundColor: 'var(--sys-color-yellow-container)',\n            borderColor: 'var(--sys-color-yellow-outline)',\n            '&, & *': {\n                color: 'var(--sys-color-on-surface) !important',\n            },\n        },\n    },\n    ':host-context(.pretty-printed) & .cm-lineNumbers .cm-gutterElement': {\n        color: 'var(--sys-color-primary)',\n    },\n});\n//# sourceMappingURL=SourceFrame.js.map","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) IBM Corp. 2009  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as FormatterActions from '../../../../entrypoints/formatter_worker/FormatterActions.js'; // eslint-disable-line rulesdir/es_modules_import\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\nimport resourceSourceFrameStyles from './resourceSourceFrame.css.legacy.js';\nimport { SourceFrameImpl } from './SourceFrame.js';\nconst UIStrings = {\n    /**\n     *@description Text to find an item\n     */\n    find: 'Find',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/ResourceSourceFrame.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ResourceSourceFrame extends SourceFrameImpl {\n    resourceInternal;\n    #givenContentType;\n    constructor(resource, givenContentType, options) {\n        const isStreamingProvider = TextUtils.ContentProvider.isStreamingContentProvider(resource);\n        /* eslint-disable @typescript-eslint/explicit-function-return-type */\n        const lazyContent = isStreamingProvider ?\n            () => resource.requestStreamingContent().then(TextUtils.StreamingContentData.asContentDataOrError) :\n            () => resource.requestContentData();\n        super(lazyContent, options);\n        /* eslint-enable @typescript-eslint/explicit-function-return-type */\n        this.#givenContentType = givenContentType;\n        this.resourceInternal = resource;\n        if (isStreamingProvider) {\n            void resource.requestStreamingContent().then(streamingContent => {\n                if (!TextUtils.StreamingContentData.isError(streamingContent)) {\n                    streamingContent.addEventListener(\"ChunkAdded\" /* TextUtils.StreamingContentData.Events.CHUNK_ADDED */, () => {\n                        void this.setContentDataOrError(Promise.resolve(streamingContent.content()));\n                    });\n                }\n            });\n        }\n    }\n    static createSearchableView(resource, contentType) {\n        return new SearchableContainer(resource, contentType);\n    }\n    getContentType() {\n        return this.#givenContentType;\n    }\n    get resource() {\n        return this.resourceInternal;\n    }\n    populateTextAreaContextMenu(contextMenu, lineNumber, columnNumber) {\n        super.populateTextAreaContextMenu(contextMenu, lineNumber, columnNumber);\n        contextMenu.appendApplicableItems(this.resourceInternal);\n    }\n}\nexport class SearchableContainer extends UI.Widget.VBox {\n    sourceFrame;\n    constructor(resource, contentType) {\n        super(true);\n        this.registerRequiredCSS(resourceSourceFrameStyles);\n        const simpleContentType = Common.ResourceType.ResourceType.simplifyContentType(contentType);\n        const sourceFrame = new ResourceSourceFrame(resource, simpleContentType);\n        this.sourceFrame = sourceFrame;\n        const canPrettyPrint = FormatterActions.FORMATTABLE_MEDIA_TYPES.includes(simpleContentType);\n        sourceFrame.setCanPrettyPrint(canPrettyPrint, true /* autoPrettyPrint */);\n        const searchableView = new UI.SearchableView.SearchableView(sourceFrame, sourceFrame);\n        searchableView.element.classList.add('searchable-view');\n        searchableView.setPlaceholder(i18nString(UIStrings.find));\n        sourceFrame.show(searchableView.element);\n        sourceFrame.setSearchableView(searchableView);\n        searchableView.show(this.contentElement);\n        const toolbar = new UI.Toolbar.Toolbar('toolbar', this.contentElement);\n        void sourceFrame.toolbarItems().then(items => {\n            items.map(item => toolbar.appendToolbarItem(item));\n        });\n    }\n    async revealPosition(position) {\n        this.sourceFrame.revealPosition(position, true);\n    }\n}\n//# sourceMappingURL=ResourceSourceFrame.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default {\n  cssContent: `/*\n * Copyright (c) 2014 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.font-view {\n  font-size: 60px;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  text-align: center;\n  padding: 15px;\n}\n\n/*# sourceURL=fontView.css */\n`\n};\n","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\nimport fontViewStyles from './fontView.css.legacy.js';\nconst UIStrings = {\n    /**\n     *@description Text that appears on a button for the font resource type filter.\n     */\n    font: 'Font',\n    /**\n     *@description Aria accessible name in Font View of the Sources panel\n     *@example {https://example.com} PH1\n     */\n    previewOfFontFromS: 'Preview of font from {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/FontView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class FontView extends UI.View.SimpleView {\n    url;\n    contentProvider;\n    mimeTypeLabel;\n    fontPreviewElement;\n    dummyElement;\n    fontStyleElement;\n    inResize;\n    constructor(mimeType, contentProvider) {\n        super(i18nString(UIStrings.font));\n        this.registerRequiredCSS(fontViewStyles);\n        this.element.classList.add('font-view');\n        this.element.setAttribute('jslog', `${VisualLogging.pane('font-view')}`);\n        this.url = contentProvider.contentURL();\n        UI.ARIAUtils.setLabel(this.element, i18nString(UIStrings.previewOfFontFromS, { PH1: this.url }));\n        this.contentProvider = contentProvider;\n        this.mimeTypeLabel = new UI.Toolbar.ToolbarText(mimeType);\n    }\n    async toolbarItems() {\n        return [this.mimeTypeLabel];\n    }\n    onFontContentLoaded(uniqueFontName, contentData) {\n        const url = TextUtils.ContentData.ContentData.isError(contentData) ? this.url : contentData.asDataUrl();\n        if (!this.fontStyleElement) {\n            return;\n        }\n        this.fontStyleElement.textContent =\n            Platform.StringUtilities.sprintf('@font-face { font-family: \"%s\"; src: url(%s); }', uniqueFontName, url);\n        this.updateFontPreviewSize();\n    }\n    createContentIfNeeded() {\n        if (this.fontPreviewElement) {\n            return;\n        }\n        const uniqueFontName = `WebInspectorFontPreview${++fontId}`;\n        this.fontStyleElement = document.createElement('style');\n        void this.contentProvider.requestContentData().then(contentData => {\n            this.onFontContentLoaded(uniqueFontName, contentData);\n        });\n        this.element.appendChild(this.fontStyleElement);\n        const fontPreview = document.createElement('div');\n        for (let i = 0; i < FONT_PREVIEW_LINES.length; ++i) {\n            if (i > 0) {\n                fontPreview.createChild('br');\n            }\n            UI.UIUtils.createTextChild(fontPreview, FONT_PREVIEW_LINES[i]);\n        }\n        this.fontPreviewElement = fontPreview.cloneNode(true);\n        if (!this.fontPreviewElement) {\n            return;\n        }\n        UI.ARIAUtils.markAsHidden(this.fontPreviewElement);\n        this.fontPreviewElement.style.overflow = 'hidden';\n        this.fontPreviewElement.style.setProperty('font-family', uniqueFontName);\n        this.fontPreviewElement.style.setProperty('visibility', 'hidden');\n        this.dummyElement = fontPreview;\n        this.dummyElement.style.visibility = 'hidden';\n        this.dummyElement.style.zIndex = '-1';\n        this.dummyElement.style.display = 'inline';\n        this.dummyElement.style.position = 'absolute';\n        this.dummyElement.style.setProperty('font-family', uniqueFontName);\n        this.dummyElement.style.setProperty('font-size', MEASUURE_FONT_SIZE + 'px');\n        this.element.appendChild(this.fontPreviewElement);\n    }\n    wasShown() {\n        this.createContentIfNeeded();\n        this.updateFontPreviewSize();\n    }\n    onResize() {\n        if (this.inResize) {\n            return;\n        }\n        this.inResize = true;\n        try {\n            this.updateFontPreviewSize();\n        }\n        finally {\n            this.inResize = null;\n        }\n    }\n    measureElement() {\n        if (!this.dummyElement) {\n            throw new Error('No font preview loaded');\n        }\n        this.element.appendChild(this.dummyElement);\n        const result = { width: this.dummyElement.offsetWidth, height: this.dummyElement.offsetHeight };\n        this.element.removeChild(this.dummyElement);\n        return result;\n    }\n    updateFontPreviewSize() {\n        if (!this.fontPreviewElement || !this.isShowing()) {\n            return;\n        }\n        this.fontPreviewElement.style.removeProperty('visibility');\n        const dimension = this.measureElement();\n        const height = dimension.height;\n        const width = dimension.width;\n        // Subtract some padding. This should match the paddings in the CSS plus room for the scrollbar.\n        const containerWidth = this.element.offsetWidth - 50;\n        const containerHeight = this.element.offsetHeight - 30;\n        if (!height || !width || !containerWidth || !containerHeight) {\n            this.fontPreviewElement.style.removeProperty('font-size');\n            return;\n        }\n        const widthRatio = containerWidth / width;\n        const heightRatio = containerHeight / height;\n        const finalFontSize = Math.floor(MEASUURE_FONT_SIZE * Math.min(widthRatio, heightRatio)) - 2;\n        this.fontPreviewElement.style.setProperty('font-size', finalFontSize + 'px', undefined);\n    }\n}\nlet fontId = 0;\nconst FONT_PREVIEW_LINES = ['ABCDEFGHIJKLM', 'NOPQRSTUVWXYZ', 'abcdefghijklm', 'nopqrstuvwxyz', '1234567890'];\nconst MEASUURE_FONT_SIZE = 50;\n//# sourceMappingURL=FontView.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default {\n  cssContent: `/*\n * Copyright (c) 2014 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.image-view {\n  overflow: auto;\n}\n\n.image-view > .image {\n  padding: 20px 20px 10px;\n  text-align: center;\n}\n\n.image-view img.resource-image-view {\n  max-width: 100%;\n  max-height: 1000px;\n  background-image: var(--image-file-checker);\n  box-shadow: 0 5px 10px var(--sys-color-outline);\n  user-select: text;\n  -webkit-user-drag: auto;\n}\n\n/*# sourceURL=imageView.css */\n`\n};\n","// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../../../core/common/common.js';\nimport * as Host from '../../../../core/host/host.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../../../models/workspace/workspace.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\nimport imageViewStyles from './imageView.css.legacy.js';\nconst UIStrings = {\n    /**\n     *@description Text in Image View of the Sources panel\n     */\n    image: 'Image',\n    /**\n     *@description Text that appears when user drag and drop something (for example, a file) in Image View of the Sources panel\n     */\n    dropImageFileHere: 'Drop image file here',\n    /**\n     *@description Text to indicate the source of an image\n     *@example {example.com} PH1\n     */\n    imageFromS: 'Image from {PH1}',\n    /**\n     *@description Text in Image View of the Sources panel\n     *@example {2} PH1\n     *@example {2} PH2\n     */\n    dD: '{PH1} Ã— {PH2}',\n    /**\n     *@description A context menu item in the Image View of the Sources panel\n     */\n    copyImageUrl: 'Copy image URL',\n    /**\n     *@description A context menu item in the Image View of the Sources panel\n     */\n    copyImageAsDataUri: 'Copy image as data URI',\n    /**\n     *@description A context menu item in the Image View of the Sources panel\n     */\n    openImageInNewTab: 'Open image in new tab',\n    /**\n     *@description A context menu item in the Image Preview\n     */\n    saveImageAs: 'Save image as...',\n    /**\n     *@description The default file name when downloading a file\n     */\n    download: 'download',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/ImageView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ImageView extends UI.View.SimpleView {\n    url;\n    parsedURL;\n    mimeType;\n    contentProvider;\n    uiSourceCode;\n    sizeLabel;\n    dimensionsLabel;\n    aspectRatioLabel;\n    mimeTypeLabel;\n    container;\n    imagePreviewElement;\n    cachedContent;\n    constructor(mimeType, contentProvider) {\n        super(i18nString(UIStrings.image));\n        this.registerRequiredCSS(imageViewStyles);\n        this.element.tabIndex = -1;\n        this.element.classList.add('image-view');\n        this.element.setAttribute('jslog', `${VisualLogging.pane('image-view')}`);\n        this.url = contentProvider.contentURL();\n        this.parsedURL = new Common.ParsedURL.ParsedURL(this.url);\n        this.mimeType = mimeType;\n        this.contentProvider = contentProvider;\n        this.uiSourceCode = contentProvider instanceof Workspace.UISourceCode.UISourceCode ?\n            contentProvider :\n            null;\n        if (this.uiSourceCode) {\n            this.uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this);\n            new UI.DropTarget.DropTarget(this.element, [UI.DropTarget.Type.ImageFile, UI.DropTarget.Type.URI], i18nString(UIStrings.dropImageFileHere), this.handleDrop.bind(this));\n        }\n        this.sizeLabel = new UI.Toolbar.ToolbarText();\n        this.dimensionsLabel = new UI.Toolbar.ToolbarText();\n        this.aspectRatioLabel = new UI.Toolbar.ToolbarText();\n        this.mimeTypeLabel = new UI.Toolbar.ToolbarText(mimeType);\n        this.container = this.element.createChild('div', 'image');\n        this.imagePreviewElement = this.container.createChild('img', 'resource-image-view');\n        this.imagePreviewElement.addEventListener('contextmenu', this.contextMenu.bind(this), true);\n    }\n    async toolbarItems() {\n        await this.updateContentIfNeeded();\n        return [\n            this.sizeLabel,\n            new UI.Toolbar.ToolbarSeparator(),\n            this.dimensionsLabel,\n            new UI.Toolbar.ToolbarSeparator(),\n            this.aspectRatioLabel,\n            new UI.Toolbar.ToolbarSeparator(),\n            this.mimeTypeLabel,\n        ];\n    }\n    wasShown() {\n        void this.updateContentIfNeeded();\n    }\n    disposeView() {\n        if (this.uiSourceCode) {\n            this.uiSourceCode.removeEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this);\n        }\n    }\n    workingCopyCommitted() {\n        void this.updateContentIfNeeded();\n    }\n    async updateContentIfNeeded() {\n        const content = await this.contentProvider.requestContentData();\n        if (TextUtils.ContentData.ContentData.isError(content) || this.cachedContent?.contentEqualTo(content)) {\n            return;\n        }\n        this.cachedContent = content;\n        const imageSrc = content.asDataUrl() ?? this.url;\n        const loadPromise = new Promise(x => {\n            this.imagePreviewElement.onload = x;\n        });\n        this.imagePreviewElement.src = imageSrc;\n        this.imagePreviewElement.alt = i18nString(UIStrings.imageFromS, { PH1: this.url });\n        const size = content.isTextContent ? content.text.length : Platform.StringUtilities.base64ToSize(content.base64);\n        this.sizeLabel.setText(Platform.NumberUtilities.bytesToString(size));\n        await loadPromise;\n        this.dimensionsLabel.setText(i18nString(UIStrings.dD, { PH1: this.imagePreviewElement.naturalWidth, PH2: this.imagePreviewElement.naturalHeight }));\n        this.aspectRatioLabel.setText(Platform.NumberUtilities.aspectRatio(this.imagePreviewElement.naturalWidth, this.imagePreviewElement.naturalHeight));\n    }\n    contextMenu(event) {\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        const parsedSrc = new Common.ParsedURL.ParsedURL(this.imagePreviewElement.src);\n        if (!this.parsedURL.isDataURL()) {\n            contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyImageUrl), this.copyImageURL.bind(this), {\n                jslogContext: 'image-view.copy-image-url',\n            });\n        }\n        if (parsedSrc.isDataURL()) {\n            contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyImageAsDataUri), this.copyImageAsDataURL.bind(this), {\n                jslogContext: 'image-view.copy-image-as-data-url',\n            });\n        }\n        contextMenu.clipboardSection().appendItem(i18nString(UIStrings.openImageInNewTab), this.openInNewTab.bind(this), {\n            jslogContext: 'image-view.open-in-new-tab',\n        });\n        contextMenu.clipboardSection().appendItem(i18nString(UIStrings.saveImageAs), this.saveImage.bind(this), {\n            jslogContext: 'image-view.save-image',\n        });\n        void contextMenu.show();\n    }\n    copyImageAsDataURL() {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.imagePreviewElement.src);\n    }\n    copyImageURL() {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(this.url);\n    }\n    async saveImage() {\n        const imageDataURL = this.cachedContent?.asDataUrl();\n        if (!imageDataURL) {\n            return;\n        }\n        const link = document.createElement('a');\n        link.href = imageDataURL;\n        // If it is a Base64 image, set a default file name.\n        // When chrome saves a file, the file name characters that are not supported\n        // by the OS will be replaced automatically. For example, in the Mac,\n        // `:` it will be replaced with `_`.\n        link.download =\n            this.parsedURL.isDataURL() ? i18nString(UIStrings.download) : decodeURIComponent(this.parsedURL.displayName);\n        link.click();\n        link.remove();\n    }\n    openInNewTab() {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(this.url);\n    }\n    async handleDrop(dataTransfer) {\n        const items = dataTransfer.items;\n        if (!items.length || items[0].kind !== 'file') {\n            return;\n        }\n        const file = items[0].getAsFile();\n        if (!file) {\n            return;\n        }\n        const encoded = !file.name.endsWith('.svg');\n        const fileCallback = (file) => {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                let result;\n                try {\n                    result = reader.result;\n                }\n                catch (e) {\n                    result = null;\n                    console.error('Can\\'t read file: ' + e);\n                }\n                if (typeof result !== 'string' || !this.uiSourceCode) {\n                    return;\n                }\n                this.uiSourceCode.setContent(encoded ? btoa(result) : result, encoded);\n            };\n            if (encoded) {\n                reader.readAsBinaryString(file);\n            }\n            else {\n                reader.readAsText(file);\n            }\n        };\n        fileCallback(file);\n    }\n}\n//# sourceMappingURL=ImageView.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default {\n  cssContent: `/*\n * Copyright 2021 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.json-view {\n  padding: 2px 6px;\n  overflow: auto;\n}\n\n/*# sourceURL=jsonView.css */\n`\n};\n","/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\nimport * as UI from '../../legacy.js';\nimport * as ObjectUI from '../object_ui/object_ui.js';\nimport jsonViewStyles from './jsonView.css.legacy.js';\nconst UIStrings = {\n    /**\n     *@description Text to find an item\n     */\n    find: 'Find',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/JSONView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class JSONView extends UI.Widget.VBox {\n    initialized;\n    parsedJSON;\n    startCollapsed;\n    searchableView;\n    treeOutline;\n    currentSearchFocusIndex;\n    currentSearchTreeElements;\n    searchRegex;\n    constructor(parsedJSON, startCollapsed) {\n        super();\n        this.initialized = false;\n        this.registerRequiredCSS(jsonViewStyles);\n        this.parsedJSON = parsedJSON;\n        this.startCollapsed = Boolean(startCollapsed);\n        this.element.classList.add('json-view');\n        this.element.setAttribute('jslog', `${VisualLogging.section('json-view')}`);\n        this.currentSearchFocusIndex = 0;\n        this.currentSearchTreeElements = [];\n        this.searchRegex = null;\n    }\n    static async createView(content) {\n        // We support non-strict JSON parsing by parsing an AST tree which is why we offload it to a worker.\n        const parsedJSON = await JSONView.parseJSON(content);\n        if (!parsedJSON || typeof parsedJSON.data !== 'object') {\n            return null;\n        }\n        const jsonView = new JSONView(parsedJSON);\n        const searchableView = new UI.SearchableView.SearchableView(jsonView, null);\n        searchableView.setPlaceholder(i18nString(UIStrings.find));\n        jsonView.searchableView = searchableView;\n        jsonView.show(searchableView.element);\n        return searchableView;\n    }\n    static createViewSync(obj) {\n        const jsonView = new JSONView(new ParsedJSON(obj, '', ''));\n        const searchableView = new UI.SearchableView.SearchableView(jsonView, null);\n        searchableView.setPlaceholder(i18nString(UIStrings.find));\n        jsonView.searchableView = searchableView;\n        jsonView.show(searchableView.element);\n        jsonView.element.tabIndex = 0;\n        return searchableView;\n    }\n    static parseJSON(text) {\n        let returnObj = null;\n        if (text) {\n            returnObj = JSONView.extractJSON(text);\n        }\n        if (!returnObj) {\n            return Promise.resolve(null);\n        }\n        try {\n            const json = JSON.parse(returnObj.data);\n            if (!json) {\n                return Promise.resolve(null);\n            }\n            returnObj.data = json;\n        }\n        catch (e) {\n            returnObj = null;\n        }\n        return Promise.resolve(returnObj);\n    }\n    static extractJSON(text) {\n        // Do not treat HTML as JSON.\n        if (text.startsWith('<')) {\n            return null;\n        }\n        let inner = JSONView.findBrackets(text, '{', '}');\n        const inner2 = JSONView.findBrackets(text, '[', ']');\n        inner = inner2.length > inner.length ? inner2 : inner;\n        // Return on blank payloads or on payloads significantly smaller than original text.\n        if (inner.length === -1 || text.length - inner.length > 80) {\n            return null;\n        }\n        const prefix = text.substring(0, inner.start);\n        const suffix = text.substring(inner.end + 1);\n        text = text.substring(inner.start, inner.end + 1);\n        // Only process valid JSONP.\n        if (suffix.trim().length && !(suffix.trim().startsWith(')') && prefix.trim().endsWith('('))) {\n            return null;\n        }\n        return new ParsedJSON(text, prefix, suffix);\n    }\n    static findBrackets(text, open, close) {\n        const start = text.indexOf(open);\n        const end = text.lastIndexOf(close);\n        let length = end - start - 1;\n        if (start === -1 || end === -1 || end < start) {\n            length = -1;\n        }\n        return { start, end, length };\n    }\n    wasShown() {\n        this.initialize();\n    }\n    initialize() {\n        if (this.initialized) {\n            return;\n        }\n        this.initialized = true;\n        const obj = SDK.RemoteObject.RemoteObject.fromLocalObject(this.parsedJSON.data);\n        const title = this.parsedJSON.prefix + obj.description + this.parsedJSON.suffix;\n        this.treeOutline =\n            new ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection(obj, title, undefined, true /* showOverflow */);\n        this.treeOutline.enableContextMenu();\n        this.treeOutline.setEditable(false);\n        if (!this.startCollapsed) {\n            this.treeOutline.expand();\n        }\n        this.element.appendChild(this.treeOutline.element);\n        const firstChild = this.treeOutline.firstChild();\n        if (firstChild) {\n            firstChild.select(true /* omitFocus */, false /* selectedByUser */);\n        }\n    }\n    jumpToMatch(index) {\n        if (!this.searchRegex) {\n            return;\n        }\n        const previousFocusElement = this.currentSearchTreeElements[this.currentSearchFocusIndex];\n        if (previousFocusElement) {\n            previousFocusElement.setSearchRegex(this.searchRegex);\n        }\n        const newFocusElement = this.currentSearchTreeElements[index];\n        if (newFocusElement) {\n            this.updateSearchIndex(index);\n            newFocusElement.setSearchRegex(this.searchRegex, UI.UIUtils.highlightedCurrentSearchResultClassName);\n            newFocusElement.reveal();\n        }\n        else {\n            this.updateSearchIndex(0);\n        }\n    }\n    updateSearchCount(count) {\n        if (!this.searchableView) {\n            return;\n        }\n        this.searchableView.updateSearchMatchesCount(count);\n    }\n    updateSearchIndex(index) {\n        this.currentSearchFocusIndex = index;\n        if (!this.searchableView) {\n            return;\n        }\n        this.searchableView.updateCurrentMatchIndex(index);\n    }\n    onSearchCanceled() {\n        this.searchRegex = null;\n        this.currentSearchTreeElements = [];\n        let element;\n        for (element = this.treeOutline.rootElement(); element; element = element.traverseNextTreeElement(false)) {\n            if (!(element instanceof ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement)) {\n                continue;\n            }\n            element.revertHighlightChanges();\n        }\n        this.updateSearchCount(0);\n        this.updateSearchIndex(0);\n    }\n    performSearch(searchConfig, shouldJump, jumpBackwards) {\n        let newIndex = this.currentSearchFocusIndex;\n        const previousSearchFocusElement = this.currentSearchTreeElements[newIndex];\n        this.onSearchCanceled();\n        this.searchRegex = searchConfig.toSearchRegex(true).regex;\n        let element;\n        for (element = this.treeOutline.rootElement(); element; element = element.traverseNextTreeElement(false)) {\n            if (!(element instanceof ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement)) {\n                continue;\n            }\n            const hasMatch = element.setSearchRegex(this.searchRegex);\n            if (hasMatch) {\n                this.currentSearchTreeElements.push(element);\n            }\n            if (previousSearchFocusElement === element) {\n                const currentIndex = this.currentSearchTreeElements.length - 1;\n                if (hasMatch || jumpBackwards) {\n                    newIndex = currentIndex;\n                }\n                else {\n                    newIndex = currentIndex + 1;\n                }\n            }\n        }\n        this.updateSearchCount(this.currentSearchTreeElements.length);\n        if (!this.currentSearchTreeElements.length) {\n            this.updateSearchIndex(-1);\n            return;\n        }\n        newIndex = Platform.NumberUtilities.mod(newIndex, this.currentSearchTreeElements.length);\n        this.jumpToMatch(newIndex);\n    }\n    jumpToNextSearchResult() {\n        if (!this.currentSearchTreeElements.length) {\n            return;\n        }\n        const newIndex = Platform.NumberUtilities.mod(this.currentSearchFocusIndex + 1, this.currentSearchTreeElements.length);\n        this.jumpToMatch(newIndex);\n    }\n    jumpToPreviousSearchResult() {\n        if (!this.currentSearchTreeElements.length) {\n            return;\n        }\n        const newIndex = Platform.NumberUtilities.mod(this.currentSearchFocusIndex - 1, this.currentSearchTreeElements.length);\n        this.jumpToMatch(newIndex);\n    }\n    supportsCaseSensitiveSearch() {\n        return true;\n    }\n    supportsRegexSearch() {\n        return true;\n    }\n}\nexport class ParsedJSON {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data;\n    prefix;\n    suffix;\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(data, prefix, suffix) {\n        this.data = data;\n        this.prefix = prefix;\n        this.suffix = suffix;\n    }\n}\n//# sourceMappingURL=JSONView.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default {\n  cssContent: `/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.tree-outline ol {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  padding-inline-start: 16px;\n}\n\nol.tree-outline {\n  padding-inline-start: 0;\n}\n\n.tree-outline li {\n  min-height: 12px;\n}\n\n.tree-outline li.shadow-xml-view-close-tag {\n  margin-left: -16px;\n}\n\n.shadow-xml-view-tag {\n  color: var(--sys-color-purple);\n}\n\n.shadow-xml-view-comment {\n  color: var(--sys-color-green);\n}\n\n.shadow-xml-view-processing-instruction {\n  color: var(--sys-color-green);\n}\n\n.shadow-xml-view-attribute-name {\n  color: var(--sys-color-orange);\n}\n\n.shadow-xml-view-attribute-value {\n  color: var(--sys-color-blue);\n}\n\n.shadow-xml-view-text {\n  color: var(--sys-color-on-surface);\n  white-space: pre;\n}\n\n.shadow-xml-view-cdata {\n  color: var(--sys-color-on-surface);\n}\n\n/*# sourceURL=xmlTree.css */\n`\n};\n","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nexport default {\n  cssContent: `/*\n * Copyright (c) 2014 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.shadow-xml-view {\n  user-select: text;\n  overflow: auto;\n  padding: 2px 4px;\n}\n\n/*# sourceURL=xmlView.css */\n`\n};\n","// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\nimport xmlTreeStyles from './xmlTree.css.legacy.js';\nimport xmlViewStyles from './xmlView.css.legacy.js';\nconst UIStrings = {\n    /**\n     *@description Text to find an item\n     */\n    find: 'Find',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/XMLView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class XMLView extends UI.Widget.Widget {\n    treeOutline;\n    searchableView;\n    currentSearchFocusIndex;\n    currentSearchTreeElements;\n    searchConfig;\n    constructor(parsedXML) {\n        super(true);\n        this.registerRequiredCSS(xmlViewStyles);\n        this.contentElement.classList.add('shadow-xml-view', 'source-code');\n        this.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n        this.treeOutline.registerRequiredCSS(xmlTreeStyles);\n        this.contentElement.appendChild(this.treeOutline.element);\n        this.currentSearchFocusIndex = 0;\n        this.currentSearchTreeElements = [];\n        XMLViewNode.populate(this.treeOutline, parsedXML, this);\n        const firstChild = this.treeOutline.firstChild();\n        if (firstChild) {\n            firstChild.select(true /* omitFocus */, false /* selectedByUser */);\n        }\n    }\n    static createSearchableView(parsedXML) {\n        const xmlView = new XMLView(parsedXML);\n        const searchableView = new UI.SearchableView.SearchableView(xmlView, null);\n        searchableView.setPlaceholder(i18nString(UIStrings.find));\n        xmlView.searchableView = searchableView;\n        xmlView.show(searchableView.element);\n        return searchableView;\n    }\n    static parseXML(text, mimeType) {\n        let parsedXML;\n        try {\n            switch (mimeType) {\n                case 'application/xhtml+xml':\n                case 'application/xml':\n                case 'image/svg+xml':\n                case 'text/html':\n                case 'text/xml':\n                    parsedXML = (new DOMParser()).parseFromString(text, mimeType);\n            }\n        }\n        catch (e) {\n            return null;\n        }\n        if (!parsedXML || parsedXML.body) {\n            return null;\n        }\n        return parsedXML;\n    }\n    jumpToMatch(index, shouldJump) {\n        if (!this.searchConfig) {\n            return;\n        }\n        const { regex } = this.searchConfig.toSearchRegex(true);\n        const previousFocusElement = this.currentSearchTreeElements[this.currentSearchFocusIndex];\n        if (previousFocusElement) {\n            previousFocusElement.setSearchRegex(regex);\n        }\n        const newFocusElement = this.currentSearchTreeElements[index];\n        if (newFocusElement) {\n            this.updateSearchIndex(index);\n            if (shouldJump) {\n                newFocusElement.reveal(true);\n            }\n            newFocusElement.setSearchRegex(regex, UI.UIUtils.highlightedCurrentSearchResultClassName);\n        }\n        else {\n            this.updateSearchIndex(0);\n        }\n    }\n    updateSearchCount(count) {\n        if (!this.searchableView) {\n            return;\n        }\n        this.searchableView.updateSearchMatchesCount(count);\n    }\n    updateSearchIndex(index) {\n        this.currentSearchFocusIndex = index;\n        if (!this.searchableView) {\n            return;\n        }\n        this.searchableView.updateCurrentMatchIndex(index);\n    }\n    innerPerformSearch(shouldJump, jumpBackwards) {\n        if (!this.searchConfig) {\n            return;\n        }\n        let newIndex = this.currentSearchFocusIndex;\n        const previousSearchFocusElement = this.currentSearchTreeElements[newIndex];\n        this.innerSearchCanceled();\n        this.currentSearchTreeElements = [];\n        const { regex } = this.searchConfig.toSearchRegex(true);\n        for (let element = this.treeOutline.rootElement(); element; element = element.traverseNextTreeElement(false)) {\n            if (!(element instanceof XMLViewNode)) {\n                continue;\n            }\n            const hasMatch = element.setSearchRegex(regex);\n            if (hasMatch) {\n                this.currentSearchTreeElements.push(element);\n            }\n            if (previousSearchFocusElement === element) {\n                const currentIndex = this.currentSearchTreeElements.length - 1;\n                if (hasMatch || jumpBackwards) {\n                    newIndex = currentIndex;\n                }\n                else {\n                    newIndex = currentIndex + 1;\n                }\n            }\n        }\n        this.updateSearchCount(this.currentSearchTreeElements.length);\n        if (!this.currentSearchTreeElements.length) {\n            this.updateSearchIndex(0);\n            return;\n        }\n        newIndex = Platform.NumberUtilities.mod(newIndex, this.currentSearchTreeElements.length);\n        this.jumpToMatch(newIndex, shouldJump);\n    }\n    innerSearchCanceled() {\n        for (let element = this.treeOutline.rootElement(); element; element = element.traverseNextTreeElement(false)) {\n            if (!(element instanceof XMLViewNode)) {\n                continue;\n            }\n            element.revertHighlightChanges();\n        }\n        this.updateSearchCount(0);\n        this.updateSearchIndex(0);\n    }\n    onSearchCanceled() {\n        this.searchConfig = null;\n        this.currentSearchTreeElements = [];\n        this.innerSearchCanceled();\n    }\n    performSearch(searchConfig, shouldJump, jumpBackwards) {\n        this.searchConfig = searchConfig;\n        this.innerPerformSearch(shouldJump, jumpBackwards);\n    }\n    jumpToNextSearchResult() {\n        if (!this.currentSearchTreeElements.length) {\n            return;\n        }\n        const newIndex = Platform.NumberUtilities.mod(this.currentSearchFocusIndex + 1, this.currentSearchTreeElements.length);\n        this.jumpToMatch(newIndex, true);\n    }\n    jumpToPreviousSearchResult() {\n        if (!this.currentSearchTreeElements.length) {\n            return;\n        }\n        const newIndex = Platform.NumberUtilities.mod(this.currentSearchFocusIndex - 1, this.currentSearchTreeElements.length);\n        this.jumpToMatch(newIndex, true);\n    }\n    supportsCaseSensitiveSearch() {\n        return true;\n    }\n    supportsRegexSearch() {\n        return true;\n    }\n}\nexport class XMLViewNode extends UI.TreeOutline.TreeElement {\n    node;\n    closeTag;\n    highlightChanges;\n    xmlView;\n    constructor(node, closeTag, xmlView) {\n        super('', !closeTag && 'childElementCount' in node && Boolean(node.childElementCount));\n        this.node = node;\n        this.closeTag = closeTag;\n        this.selectable = true;\n        this.highlightChanges = [];\n        this.xmlView = xmlView;\n        this.updateTitle();\n    }\n    static populate(root, xmlNode, xmlView) {\n        if (!(xmlNode instanceof Node)) {\n            return;\n        }\n        let node = xmlNode.firstChild;\n        while (node) {\n            const currentNode = node;\n            node = node.nextSibling;\n            const nodeType = currentNode.nodeType;\n            // ignore empty TEXT\n            if (nodeType === 3 && currentNode.nodeValue && currentNode.nodeValue.match(/\\s+/)) {\n                continue;\n            }\n            // ignore ATTRIBUTE, ENTITY_REFERENCE, ENTITY, DOCUMENT, DOCUMENT_TYPE, DOCUMENT_FRAGMENT, NOTATION\n            if ((nodeType !== 1) && (nodeType !== 3) && (nodeType !== 4) && (nodeType !== 7) && (nodeType !== 8)) {\n                continue;\n            }\n            root.appendChild(new XMLViewNode(currentNode, false, xmlView));\n        }\n    }\n    setSearchRegex(regex, additionalCssClassName) {\n        this.revertHighlightChanges();\n        if (!regex) {\n            return false;\n        }\n        if (this.closeTag && this.parent && !this.parent.expanded) {\n            return false;\n        }\n        regex.lastIndex = 0;\n        let cssClasses = UI.UIUtils.highlightedSearchResultClassName;\n        if (additionalCssClassName) {\n            cssClasses += ' ' + additionalCssClassName;\n        }\n        if (!this.listItemElement.textContent) {\n            return false;\n        }\n        const content = this.listItemElement.textContent.replace(/\\xA0/g, ' ');\n        let match = regex.exec(content);\n        const ranges = [];\n        while (match) {\n            ranges.push(new TextUtils.TextRange.SourceRange(match.index, match[0].length));\n            match = regex.exec(content);\n        }\n        if (ranges.length) {\n            UI.UIUtils.highlightRangesWithStyleClass(this.listItemElement, ranges, cssClasses, this.highlightChanges);\n        }\n        return Boolean(this.highlightChanges.length);\n    }\n    revertHighlightChanges() {\n        UI.UIUtils.revertDomChanges(this.highlightChanges);\n        this.highlightChanges = [];\n    }\n    updateTitle() {\n        const node = this.node;\n        if (!('nodeType' in node)) {\n            return;\n        }\n        switch (node.nodeType) {\n            case 1: { // ELEMENT\n                if (node instanceof Element) {\n                    const tag = node.tagName;\n                    if (this.closeTag) {\n                        this.setTitle(['</' + tag + '>', 'shadow-xml-view-tag']);\n                        return;\n                    }\n                    const titleItems = ['<' + tag, 'shadow-xml-view-tag'];\n                    const attributes = node.attributes;\n                    for (let i = 0; i < attributes.length; ++i) {\n                        const attributeNode = attributes.item(i);\n                        if (!attributeNode) {\n                            return;\n                        }\n                        titleItems.push('\\xA0', 'shadow-xml-view-tag', attributeNode.name, 'shadow-xml-view-attribute-name', '=\"', 'shadow-xml-view-tag', attributeNode.value, 'shadow-xml-view-attribute-value', '\"', 'shadow-xml-view-tag');\n                    }\n                    if (!this.expanded) {\n                        if (node.childElementCount) {\n                            titleItems.push('>', 'shadow-xml-view-tag', 'â€¦', 'shadow-xml-view-comment', '</' + tag, 'shadow-xml-view-tag');\n                        }\n                        else if (node.textContent) {\n                            titleItems.push('>', 'shadow-xml-view-tag', node.textContent, 'shadow-xml-view-text', '</' + tag, 'shadow-xml-view-tag');\n                        }\n                        else {\n                            titleItems.push(' /', 'shadow-xml-view-tag');\n                        }\n                    }\n                    titleItems.push('>', 'shadow-xml-view-tag');\n                    this.setTitle(titleItems);\n                    return;\n                }\n                return;\n            }\n            case 3: { // TEXT\n                if (node.nodeValue) {\n                    this.setTitle([node.nodeValue, 'shadow-xml-view-text']);\n                }\n                return;\n            }\n            case 4: { // CDATA\n                if (node.nodeValue) {\n                    this.setTitle([\n                        '<![CDATA[',\n                        'shadow-xml-view-cdata',\n                        node.nodeValue,\n                        'shadow-xml-view-text',\n                        ']]>',\n                        'shadow-xml-view-cdata',\n                    ]);\n                }\n                return;\n            }\n            case 7: { // PROCESSING_INSTRUCTION\n                if (node.nodeValue) {\n                    this.setTitle(['<?' + node.nodeName + ' ' + node.nodeValue + '?>', 'shadow-xml-view-processing-instruction']);\n                }\n                return;\n            }\n            case 8: { // COMMENT\n                this.setTitle(['<!--' + node.nodeValue + '-->', 'shadow-xml-view-comment']);\n                return;\n            }\n        }\n    }\n    setTitle(items) {\n        const titleFragment = document.createDocumentFragment();\n        for (let i = 0; i < items.length; i += 2) {\n            titleFragment.createChild('span', items[i + 1]).textContent = items[i];\n        }\n        this.title = titleFragment;\n        this.xmlView.innerPerformSearch(false, false);\n    }\n    onattach() {\n        this.listItemElement.classList.toggle('shadow-xml-view-close-tag', this.closeTag);\n    }\n    onexpand() {\n        this.updateTitle();\n    }\n    oncollapse() {\n        this.updateTitle();\n    }\n    async onpopulate() {\n        XMLViewNode.populate(this, this.node, this.xmlView);\n        this.appendChild(new XMLViewNode(this.node, true, this.xmlView));\n    }\n}\n//# sourceMappingURL=XMLView.js.map","// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\nimport { FontView } from './FontView.js';\nimport { ImageView } from './ImageView.js';\nimport { JSONView } from './JSONView.js';\nimport { ResourceSourceFrame } from './ResourceSourceFrame.js';\nimport { XMLView } from './XMLView.js';\nconst UIStrings = {\n    /**\n     *@description Text in Preview Factory of the Sources panel\n     */\n    nothingToPreview: 'Nothing to preview',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/source_frame/PreviewFactory.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class PreviewFactory {\n    static async createPreview(provider, mimeType) {\n        let resourceType = Common.ResourceType.ResourceType.fromMimeType(mimeType);\n        if (resourceType === Common.ResourceType.resourceTypes.Other) {\n            resourceType = provider.contentType();\n        }\n        switch (resourceType) {\n            case Common.ResourceType.resourceTypes.Image:\n                return new ImageView(mimeType, provider);\n            case Common.ResourceType.resourceTypes.Font:\n                return new FontView(mimeType, provider);\n        }\n        const contentData = await provider.requestContentData();\n        if (TextUtils.ContentData.ContentData.isError(contentData)) {\n            return new UI.EmptyWidget.EmptyWidget(contentData.error);\n        }\n        if (!contentData.isTextContent) {\n            return null;\n        }\n        if (!contentData.text) {\n            return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.nothingToPreview));\n        }\n        const parsedXML = XMLView.parseXML(contentData.text, contentData.mimeType);\n        if (parsedXML) {\n            return XMLView.createSearchableView(parsedXML);\n        }\n        const jsonView = await JSONView.createView(contentData.text);\n        if (jsonView) {\n            return jsonView;\n        }\n        const highlighterType = mimeType.replace(/;.*/, '') /* remove charset */ || provider.contentType().canonicalMimeType();\n        return ResourceSourceFrame.createSearchableView(provider, highlighterType);\n    }\n}\n//# sourceMappingURL=PreviewFactory.js.map"],"names":["FORMATTABLE_MEDIA_TYPES","resourceSourceFrameStyles","selfXssDialogStyles","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","LINE_NUMBER_FORMATTER","CodeMirror.Facet","value","lineNo","SourceFrameImpl","Common.ObjectWrapper.eventMixin","UI.View.SimpleView","lazyContent","options","UI.Toolbar.ToolbarToggle","UI.Toolbar.ToolbarItem","TextEditor.TextEditor.TextEditor","event","UI.Toolbar.ToolbarText","Common.Settings.Settings","#textEditorIndentChanged","content","CodeMirror.EditorState","CodeMirror.lineNumbers","TextEditor.Config.theme","doc","CodeMirror.EditorView","update","TextEditor.Config.baseConfiguration","TextEditor.Config.closeBrackets","TextEditor.Config.autocompletion","TextEditor.Config.showWhitespace","TextEditor.Config.allowScrollPastEof","CodeMirror.Prec","TextEditor.Config.codeFolding","TextEditor.Config.autoDetectIndent","sourceFrameTheme","_view","block","activeSearchState","searchHighlighter","config","markNonBreakableLines","nonBreakableLines","CodeMirror.indentationMarkers","Root.Runtime.Runtime","resolve","SelfXssWarningDialog","Host.userMetrics","Host.UserMetrics.Action","lineNumber","columnNumber","canPrettyPrint","autoPrettyPrint","editable","wasLoaded","textEditor","selection","startPos","endPos","newSelection","CodeMirror.Text","formatInfo","Formatter.ScriptFormatter.formatScriptContent","start","end","formatNumber","disassembly","bytecodeOffsetDigits","state","currLine","prevLine","VisualLogging.gutter","line","column","contentDataPromise","progressIndicator","UI.ProgressIndicator.ProgressIndicator","contentData","error","isMinified","TextUtils.ContentData.ContentData","TextUtils.WasmDisassembly.WasmDisassembly","TextUtils.TextUtils.isMinified","position","shouldHighlight","lineObj","from","to","toLocation","fromLocation","textRange","sel","VisualLogging.textField","wasPretty","contentType","languageDesc","CodeHighlighter.CodeHighlighter.languageFromMIME","CodeMirror.javascript","CodeMirror.completeAnyWord","langExtension","scrollTop","languageSupport","editorState","view","searchConfig","shouldJump","jumpBackwards","editor","setActiveSearch","ActiveSearch","currentActiveSearch","range","Platform.ArrayUtilities.lowerBound","a","b","currentIndex","nextIndex","index","replacement","insert","changes","regex","ranges","isRegExp","match","pos","SearchMatch","main","location","bytecodeOffset","startLine","endLine","contextMenu","UI.ContextMenu.ContextMenu","_menu","_lineNumber","_columnNumber","_","selector","dialog","UI.Dialog.Dialog","UI.Geometry.Size","UI.UIUtils.createShadowRootWithCoreStyles","result","closeButton","input","UI.UIUtils.createInput","buttonsBar","cancelButton","UI.UIUtils.createTextButton","allowButton","e","CodeMirror.Compartment","regexp","currentRange","change","CodeMirror.StateEffect","mapping","CodeMirror.StateField","tr","effect","searchMatchDeco","CodeMirror.Decoration","currentSearchMatchDeco","CodeMirror.ViewPlugin","active","builder","CodeMirror.RangeSetBuilder","part","current","nonBreakableLineMark","CodeMirror.GutterMarker","addNonBreakableLines","CodeMirror.RangeSet","deco","field","CodeMirror.lineNumberMarkers","isBreakableLine","nonBreakable","found","marks","ResourceSourceFrame","#givenContentType","resource","givenContentType","isStreamingProvider","TextUtils.ContentProvider.isStreamingContentProvider","TextUtils.StreamingContentData.asContentDataOrError","streamingContent","TextUtils.StreamingContentData.isError","SearchableContainer","UI.Widget.VBox","simpleContentType","Common.ResourceType.ResourceType","sourceFrame","FormatterActions.FORMATTABLE_MEDIA_TYPES","searchableView","UI.SearchableView.SearchableView","toolbar","UI.Toolbar.Toolbar","items","item","fontViewStyles","FontView","mimeType","contentProvider","VisualLogging.pane","UI.ARIAUtils.setLabel","uniqueFontName","url","Platform.StringUtilities.sprintf","fontId","fontPreview","i","FONT_PREVIEW_LINES","UI.UIUtils.createTextChild","UI.ARIAUtils.markAsHidden","MEASUURE_FONT_SIZE","dimension","height","width","containerWidth","containerHeight","widthRatio","heightRatio","finalFontSize","imageViewStyles","ImageView","Common.ParsedURL.ParsedURL","Workspace.UISourceCode.UISourceCode","Workspace.UISourceCode.Events","UI.DropTarget.DropTarget","UI.DropTarget.Type","UI.Toolbar.ToolbarSeparator","imageSrc","loadPromise","x","size","Platform.StringUtilities.base64ToSize","Platform.NumberUtilities.bytesToString","Platform.NumberUtilities.aspectRatio","parsedSrc","Host.InspectorFrontendHost.InspectorFrontendHostInstance","imageDataURL","link","dataTransfer","file","encoded","reader","jsonViewStyles","JSONView","parsedJSON","startCollapsed","VisualLogging.section","jsonView","obj","ParsedJSON","text","returnObj","json","inner","inner2","prefix","suffix","open","close","length","SDK.RemoteObject.RemoteObject","title","ObjectUI.ObjectPropertiesSection.ObjectPropertiesSection","firstChild","previousFocusElement","newFocusElement","UI.UIUtils.highlightedCurrentSearchResultClassName","count","element","ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement","newIndex","previousSearchFocusElement","hasMatch","Platform.NumberUtilities.mod","data","xmlTreeStyles","xmlViewStyles","XMLView","UI.Widget.Widget","parsedXML","UI.TreeOutline.TreeOutlineInShadow","XMLViewNode","xmlView","UI.TreeOutline.TreeElement","node","closeTag","root","xmlNode","currentNode","nodeType","additionalCssClassName","cssClasses","UI.UIUtils.highlightedSearchResultClassName","TextUtils.TextRange.SourceRange","UI.UIUtils.highlightRangesWithStyleClass","UI.UIUtils.revertDomChanges","tag","titleItems","attributes","attributeNode","titleFragment","PreviewFactory","provider","resourceType","Common.ResourceType.resourceTypes","UI.EmptyWidget.EmptyWidget","highlighterType"],"mappings":"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"}