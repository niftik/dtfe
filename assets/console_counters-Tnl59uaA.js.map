{"version":3,"file":"console_counters-Tnl59uaA.js","sources":["../../panels/console_counters/WarningErrorCounter.js"],"sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nconst UIStrings = {\n    /**\n     *@description The console error count in the Warning Error Counter shown in the main toolbar (top-left in DevTools). The error count refers to the number of errors currently present in the JavaScript console.\n     */\n    sErrors: '{n, plural, =1 {# error} other {# errors}}',\n    /**\n     *@description The console warning count in the Warning Error Counter shown in the main toolbar (top-left in DevTools). The warning count refers to the number of warnings currently present in the JavaScript console.\n     */\n    sWarnings: '{n, plural, =1 {# warning} other {# warnings}}',\n    /**\n     *@description Tooltip shown for a main toolbar button that opens the Console panel\n     *@example {2 errors, 1 warning} PH1\n     */\n    openConsoleToViewS: 'Open Console to view {PH1}',\n    /**\n     *@description Title for the issues count in the Issues Error Counter shown in the main toolbar (top-left in DevTools). The issues count refers to the number of issues in the issues tab.\n     */\n    openIssuesToView: '{n, plural, =1 {Open Issues to view # issue:} other {Open Issues to view # issues:}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/console_counters/WarningErrorCounter.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet warningErrorCounterInstance;\nexport class WarningErrorCounter {\n    toolbarItem;\n    consoleCounter;\n    issueCounter;\n    throttler;\n    updatingForTest;\n    constructor() {\n        WarningErrorCounter.instanceForTest = this;\n        const countersWrapper = document.createElement('div');\n        this.toolbarItem = new UI.Toolbar.ToolbarItemWithCompactLayout(countersWrapper);\n        this.toolbarItem.setVisible(false);\n        this.toolbarItem.addEventListener(\"CompactLayoutUpdated\" /* UI.Toolbar.ToolbarItemWithCompactLayoutEvents.COMPACT_LAYOUT_UPDATED */, this.onSetCompactLayout, this);\n        this.consoleCounter = new IconButton.IconButton.IconButton();\n        this.consoleCounter.setAttribute('jslog', `${VisualLogging.counter('console').track({ click: true })}`);\n        countersWrapper.appendChild(this.consoleCounter);\n        this.consoleCounter.data = {\n            clickHandler: Common.Console.Console.instance().show.bind(Common.Console.Console.instance()),\n            groups: [\n                { iconName: 'cross-circle-filled', iconColor: 'var(--icon-error)', iconHeight: '14px', iconWidth: '14px' },\n                { iconName: 'warning-filled', iconColor: 'var(--icon-warning)', iconHeight: '14px', iconWidth: '14px' },\n            ],\n        };\n        const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n        this.issueCounter = new IssueCounter.IssueCounter.IssueCounter();\n        this.issueCounter.classList.add('main-toolbar');\n        this.issueCounter.setAttribute('jslog', `${VisualLogging.counter('issue').track({ click: true })}`);\n        countersWrapper.appendChild(this.issueCounter);\n        this.issueCounter.data = {\n            clickHandler: () => {\n                Host.userMetrics.issuesPanelOpenedFrom(2 /* Host.UserMetrics.IssueOpener.STATUS_BAR_ISSUES_COUNTER */);\n                void UI.ViewManager.ViewManager.instance().showView('issues-pane');\n            },\n            issuesManager,\n            displayMode: \"OnlyMostImportant\" /* IssueCounter.IssueCounter.DisplayMode.ONLY_MOST_IMPORTANT */,\n        };\n        this.throttler = new Common.Throttler.Throttler(100);\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.ConsoleCleared, this.update, this);\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageAdded, this.update, this);\n        SDK.TargetManager.TargetManager.instance().addModelListener(SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageUpdated, this.update, this);\n        issuesManager.addEventListener(\"IssuesCountUpdated\" /* IssuesManager.IssuesManager.Events.ISSUES_COUNT_UPDATED */, this.update, this);\n        this.update();\n    }\n    onSetCompactLayout(event) {\n        this.setCompactLayout(event.data);\n    }\n    setCompactLayout(enable) {\n        this.consoleCounter.data = { ...this.consoleCounter.data, compact: enable };\n        this.issueCounter.data = { ...this.issueCounter.data, compact: enable };\n    }\n    static instance(opts = { forceNew: null }) {\n        const { forceNew } = opts;\n        if (!warningErrorCounterInstance || forceNew) {\n            warningErrorCounterInstance = new WarningErrorCounter();\n        }\n        return warningErrorCounterInstance;\n    }\n    updatedForTest() {\n        // Sniffed in tests.\n    }\n    update() {\n        this.updatingForTest = true;\n        void this.throttler.schedule(this.updateThrottled.bind(this));\n    }\n    get titlesForTesting() {\n        const button = this.consoleCounter.shadowRoot?.querySelector('button');\n        return button ? button.getAttribute('aria-label') : null;\n    }\n    async updateThrottled() {\n        const errors = SDK.ConsoleModel.ConsoleModel.allErrors();\n        const warnings = SDK.ConsoleModel.ConsoleModel.allWarnings();\n        const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n        const issues = issuesManager.numberOfIssues();\n        const countToText = (c) => c === 0 ? undefined : `${c}`;\n        /* Update consoleCounter items. */\n        const errorCountTitle = i18nString(UIStrings.sErrors, { n: errors });\n        const warningCountTitle = i18nString(UIStrings.sWarnings, { n: warnings });\n        const newConsoleTexts = [countToText(errors), countToText(warnings)];\n        let consoleSummary = '';\n        if (errors && warnings) {\n            consoleSummary = `${errorCountTitle}, ${warningCountTitle}`;\n        }\n        else if (errors) {\n            consoleSummary = errorCountTitle;\n        }\n        else if (warnings) {\n            consoleSummary = warningCountTitle;\n        }\n        const consoleTitle = i18nString(UIStrings.openConsoleToViewS, { PH1: consoleSummary });\n        const previousData = this.consoleCounter.data;\n        this.consoleCounter.data = {\n            ...previousData,\n            groups: previousData.groups.map((g, i) => ({ ...g, text: newConsoleTexts[i] })),\n            accessibleName: consoleTitle,\n        };\n        // TODO(chromium:1167711): Let the component handle the title and ARIA label.\n        UI.Tooltip.Tooltip.install(this.consoleCounter, consoleTitle);\n        this.consoleCounter.classList.toggle('hidden', !(errors || warnings));\n        /* Update issuesCounter items. */\n        const issueEnumeration = IssueCounter.IssueCounter.getIssueCountsEnumeration(issuesManager);\n        const issuesTitleLead = i18nString(UIStrings.openIssuesToView, { n: issues });\n        const issuesTitle = `${issuesTitleLead} ${issueEnumeration}`;\n        // TODO(chromium:1167711): Let the component handle the title and ARIA label.\n        UI.Tooltip.Tooltip.install(this.issueCounter, issuesTitle);\n        this.issueCounter.data = {\n            ...this.issueCounter.data,\n            accessibleName: issuesTitle,\n        };\n        this.issueCounter.classList.toggle('hidden', !issues);\n        this.toolbarItem.setVisible(Boolean(errors || warnings || issues));\n        UI.InspectorView.InspectorView.instance().toolbarItemResized();\n        this.updatingForTest = false;\n        this.updatedForTest();\n        return;\n    }\n    item() {\n        return this.toolbarItem;\n    }\n    static instanceForTest = null;\n}\n//# sourceMappingURL=WarningErrorCounter.js.map"],"names":["UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","warningErrorCounterInstance","WarningErrorCounter","countersWrapper","UI.Toolbar.ToolbarItemWithCompactLayout","IconButton.IconButton.IconButton","VisualLogging.counter","Common.Console.Console","issuesManager","IssuesManager.IssuesManager.IssuesManager","IssueCounter.IssueCounter.IssueCounter","Host.userMetrics","UI.ViewManager.ViewManager","Common.Throttler.Throttler","SDK.TargetManager.TargetManager","SDK.ConsoleModel.ConsoleModel","SDK.ConsoleModel.Events","event","enable","opts","forceNew","button","errors","warnings","issues","countToText","c","errorCountTitle","warningCountTitle","newConsoleTexts","consoleSummary","consoleTitle","previousData","g","i","UI.Tooltip.Tooltip","issueEnumeration","IssueCounter.IssueCounter.getIssueCountsEnumeration","issuesTitle","UI.InspectorView.InspectorView"],"mappings":"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"}