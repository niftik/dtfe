{"version":3,"file":"PaintProfilerView-caNlpRTi.js","sources":["../../core/sdk/LayerTreeBase.js","../../panels/layer_viewer/layerDetailsView.css.js","../../panels/layer_viewer/LayerViewHost.js","../../panels/layer_viewer/LayerDetailsView.js","../../panels/layer_viewer/LayerTreeOutline.js","../../panels/layer_viewer/layers3DView.css.js","../../panels/layer_viewer/TransformController.js","../../panels/layer_viewer/Layers3DView.js","../../panels/layer_viewer/paintProfiler.css.js","../../panels/layer_viewer/PaintProfilerView.js"],"sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport { DOMModel } from './DOMModel.js';\nexport class StickyPositionConstraint {\n    #stickyBoxRectInternal;\n    #containingBlockRectInternal;\n    #nearestLayerShiftingStickyBoxInternal;\n    #nearestLayerShiftingContainingBlockInternal;\n    constructor(layerTree, constraint) {\n        this.#stickyBoxRectInternal = constraint.stickyBoxRect;\n        this.#containingBlockRectInternal = constraint.containingBlockRect;\n        this.#nearestLayerShiftingStickyBoxInternal = null;\n        if (layerTree && constraint.nearestLayerShiftingStickyBox) {\n            this.#nearestLayerShiftingStickyBoxInternal = layerTree.layerById(constraint.nearestLayerShiftingStickyBox);\n        }\n        this.#nearestLayerShiftingContainingBlockInternal = null;\n        if (layerTree && constraint.nearestLayerShiftingContainingBlock) {\n            this.#nearestLayerShiftingContainingBlockInternal =\n                layerTree.layerById(constraint.nearestLayerShiftingContainingBlock);\n        }\n    }\n    stickyBoxRect() {\n        return this.#stickyBoxRectInternal;\n    }\n    containingBlockRect() {\n        return this.#containingBlockRectInternal;\n    }\n    nearestLayerShiftingStickyBox() {\n        return this.#nearestLayerShiftingStickyBoxInternal;\n    }\n    nearestLayerShiftingContainingBlock() {\n        return this.#nearestLayerShiftingContainingBlockInternal;\n    }\n}\nexport class LayerTreeBase {\n    #targetInternal;\n    #domModel;\n    layersById;\n    #rootInternal;\n    #contentRootInternal;\n    #backendNodeIdToNodeInternal;\n    #viewportSizeInternal;\n    constructor(target) {\n        this.#targetInternal = target;\n        this.#domModel = target ? target.model(DOMModel) : null;\n        this.layersById = new Map();\n        this.#rootInternal = null;\n        this.#contentRootInternal = null;\n        this.#backendNodeIdToNodeInternal = new Map();\n    }\n    target() {\n        return this.#targetInternal;\n    }\n    root() {\n        return this.#rootInternal;\n    }\n    setRoot(root) {\n        this.#rootInternal = root;\n    }\n    contentRoot() {\n        return this.#contentRootInternal;\n    }\n    setContentRoot(contentRoot) {\n        this.#contentRootInternal = contentRoot;\n    }\n    forEachLayer(callback, root) {\n        if (!root) {\n            root = this.root();\n            if (!root) {\n                return false;\n            }\n        }\n        return callback(root) || root.children().some(this.forEachLayer.bind(this, callback));\n    }\n    layerById(id) {\n        return this.layersById.get(id) || null;\n    }\n    async resolveBackendNodeIds(requestedNodeIds) {\n        if (!requestedNodeIds.size || !this.#domModel) {\n            return;\n        }\n        const nodesMap = await this.#domModel.pushNodesByBackendIdsToFrontend(requestedNodeIds);\n        if (!nodesMap) {\n            return;\n        }\n        for (const nodeId of nodesMap.keys()) {\n            this.#backendNodeIdToNodeInternal.set(nodeId, nodesMap.get(nodeId) || null);\n        }\n    }\n    backendNodeIdToNode() {\n        return this.#backendNodeIdToNodeInternal;\n    }\n    setViewportSize(viewportSize) {\n        this.#viewportSizeInternal = viewportSize;\n    }\n    viewportSize() {\n        return this.#viewportSizeInternal;\n    }\n    nodeForId(id) {\n        return this.#domModel ? this.#domModel.nodeForId(id) : null;\n    }\n}\n//# sourceMappingURL=LayerTreeBase.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\ntable td {\n  padding-left: 8px;\n}\n\ntable td:first-child {\n  font-weight: bold;\n}\n\n.scroll-rect.active {\n  background-color: var(--sys-color-neutral-container);\n}\n\nul {\n  list-style: none;\n  padding-inline-start: 0;\n  margin-block-start: 0;\n  margin-block-end: 0;\n}\n\n.devtools-link.link-margin {\n  margin: 8px;\n  display: inline-block;\n}\n\n/*# sourceURL=layerDetailsView.css */\n`);\n\nexport default styles;\n","// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nconst UIStrings = {\n    /**\n     *@description Text in Layer View Host of the Layers panel\n     */\n    showInternalLayers: 'Show internal layers',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/LayerViewHost.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class LayerView {\n}\nexport class Selection {\n    typeInternal;\n    layerInternal;\n    constructor(type, layer) {\n        this.typeInternal = type;\n        this.layerInternal = layer;\n    }\n    static isEqual(a, b) {\n        return a && b ? a.isEqual(b) : a === b;\n    }\n    type() {\n        return this.typeInternal;\n    }\n    layer() {\n        return this.layerInternal;\n    }\n    isEqual(_other) {\n        return false;\n    }\n}\nexport class LayerSelection extends Selection {\n    constructor(layer) {\n        console.assert(Boolean(layer), 'LayerSelection with empty layer');\n        super(\"Layer\" /* Type.LAYER */, layer);\n    }\n    isEqual(other) {\n        return other.typeInternal === \"Layer\" /* Type.LAYER */ && other.layer().id() === this.layer().id();\n    }\n}\nexport class ScrollRectSelection extends Selection {\n    scrollRectIndex;\n    constructor(layer, scrollRectIndex) {\n        super(\"ScrollRect\" /* Type.SCROLL_RECT */, layer);\n        this.scrollRectIndex = scrollRectIndex;\n    }\n    isEqual(other) {\n        return other.typeInternal === \"ScrollRect\" /* Type.SCROLL_RECT */ && this.layer().id() === other.layer().id() &&\n            this.scrollRectIndex === other.scrollRectIndex;\n    }\n}\nexport class SnapshotSelection extends Selection {\n    snapshotInternal;\n    constructor(layer, snapshot) {\n        super(\"Snapshot\" /* Type.SNAPSHOT */, layer);\n        this.snapshotInternal = snapshot;\n    }\n    isEqual(other) {\n        return other.typeInternal === \"Snapshot\" /* Type.SNAPSHOT */ && this.layer().id() === other.layer().id() &&\n            this.snapshotInternal === other.snapshotInternal;\n    }\n    snapshot() {\n        return this.snapshotInternal;\n    }\n}\nexport class LayerViewHost {\n    views;\n    selectedObject;\n    hoveredObject;\n    showInternalLayersSettingInternal;\n    snapshotLayers;\n    target;\n    constructor() {\n        this.views = [];\n        this.selectedObject = null;\n        this.hoveredObject = null;\n        this.showInternalLayersSettingInternal =\n            Common.Settings.Settings.instance().createSetting('layers-show-internal-layers', false);\n        this.snapshotLayers = new Map();\n    }\n    registerView(layerView) {\n        this.views.push(layerView);\n    }\n    setLayerSnapshotMap(snapshotLayers) {\n        this.snapshotLayers = snapshotLayers;\n    }\n    getLayerSnapshotMap() {\n        return this.snapshotLayers;\n    }\n    setLayerTree(layerTree) {\n        if (!layerTree) {\n            return;\n        }\n        this.target = layerTree.target();\n        const selectedLayer = this.selectedObject && this.selectedObject.layer();\n        if (selectedLayer && (!layerTree || !layerTree.layerById(selectedLayer.id()))) {\n            this.selectObject(null);\n        }\n        const hoveredLayer = this.hoveredObject && this.hoveredObject.layer();\n        if (hoveredLayer && (!layerTree || !layerTree.layerById(hoveredLayer.id()))) {\n            this.hoverObject(null);\n        }\n        for (const view of this.views) {\n            view.setLayerTree(layerTree);\n        }\n    }\n    hoverObject(selection) {\n        if (Selection.isEqual(this.hoveredObject, selection)) {\n            return;\n        }\n        this.hoveredObject = selection;\n        const layer = selection && selection.layer();\n        this.toggleNodeHighlight(layer ? layer.nodeForSelfOrAncestor() : null);\n        for (const view of this.views) {\n            view.hoverObject(selection);\n        }\n    }\n    selectObject(selection) {\n        if (Selection.isEqual(this.selectedObject, selection)) {\n            return;\n        }\n        this.selectedObject = selection;\n        for (const view of this.views) {\n            view.selectObject(selection);\n        }\n    }\n    selection() {\n        return this.selectedObject;\n    }\n    showContextMenu(contextMenu, selection) {\n        contextMenu.defaultSection().appendCheckboxItem(i18nString(UIStrings.showInternalLayers), this.toggleShowInternalLayers.bind(this), {\n            checked: this.showInternalLayersSettingInternal.get(),\n            jslogContext: this.showInternalLayersSettingInternal.name,\n        });\n        const node = selection && selection.layer() && selection.layer().nodeForSelfOrAncestor();\n        if (node) {\n            contextMenu.appendApplicableItems(node);\n        }\n        void contextMenu.show();\n    }\n    showInternalLayersSetting() {\n        return this.showInternalLayersSettingInternal;\n    }\n    toggleShowInternalLayers() {\n        this.showInternalLayersSettingInternal.set(!this.showInternalLayersSettingInternal.get());\n    }\n    toggleNodeHighlight(node) {\n        if (node) {\n            node.highlightForTwoSeconds();\n            return;\n        }\n        SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n    }\n}\n//# sourceMappingURL=LayerViewHost.js.map","/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport layerDetailsViewStyles from './layerDetailsView.css.js';\nimport { ScrollRectSelection, } from './LayerViewHost.js';\nconst UIStrings = {\n    /**\n     *@description Text in Layer Details View of the Layers panel\n     */\n    selectALayerToSeeItsDetails: 'Select a layer to see its details',\n    /**\n     *@description Element text content in Layer Details View of the Layers panel\n     *@example {Touch event handler} PH1\n     *@example {10} PH2\n     *@example {10} PH3\n     *@example {10} PH4\n     *@example {10} PH5\n     */\n    scrollRectangleDimensions: '{PH1} {PH2} × {PH3} (at {PH4}, {PH5})',\n    /**\n     * @description Text in Layer Details View of the Layers panel. Used to indicate that a particular\n     * layer of the website is unnamed (was not given a name/doesn't have one).\n     */\n    unnamed: '<unnamed>',\n    /**\n     *@description Text in Layer Details View of the Layers panel\n     *@example {Nearest Layer Shifting Sticky Box} PH1\n     *@example {&lt;unnamed&gt;} PH2\n     *@example {5} PH3\n     */\n    stickyAncenstorLayersS: '{PH1}: {PH2} ({PH3})',\n    /**\n     *@description Sticky box rect element text content in Layer Details View of the Layers panel\n     *@example {10} PH1\n     *@example {10} PH2\n     *@example {10} PH3\n     *@example {10} PH4\n     */\n    stickyBoxRectangleDimensions: 'Sticky Box {PH1} × {PH2} (at {PH3}, {PH4})',\n    /**\n     * @description Containing block rect element text content in Layer Details View of the Layers panel.\n     * The placeholder are width, height, x position, and y position respectively.\n     *@example {10} PH1\n     *@example {10} PH2\n     *@example {10} PH3\n     *@example {10} PH4\n     */\n    containingBlocRectangleDimensions: 'Containing Block {PH1} × {PH2} (at {PH3}, {PH4})',\n    /**\n     * @description Text in Layer Details View of the Layers panel. This also means \"The nearest sticky\n     * box that causes a layer shift\".\n     */\n    nearestLayerShiftingStickyBox: 'Nearest Layer Shifting Sticky Box',\n    /**\n     * @description Text in Layer Details View of the Layers panel. This also means \"The nearest block\n     * that causes a layer shift\".\n     */\n    nearestLayerShiftingContaining: 'Nearest Layer Shifting Containing Block',\n    /**\n     *@description Size cell text content in Layer Details View of the Layers panel\n     *@example {10} PH1\n     *@example {10} PH2\n     *@example {10} PH3\n     *@example {10} PH4\n     */\n    updateRectangleDimensions: '{PH1} × {PH2} (at {PH3}, {PH4})',\n    /**\n     *@description Text for the size of something\n     */\n    size: 'Size',\n    /**\n     *@description Text in Layer Details View of the Layers panel\n     */\n    compositingReasons: 'Compositing Reasons',\n    /**\n     *@description Text in Layer Details View of the Layers panel\n     */\n    memoryEstimate: 'Memory estimate',\n    /**\n     *@description Text in Layer Details View of the Layers panel\n     */\n    paintCount: 'Paint count',\n    /**\n     *@description Text in Layer Details View of the Layers panel\n     */\n    slowScrollRegions: 'Slow scroll regions',\n    /**\n     *@description Text in Layer Details View of the Layers panel\n     */\n    stickyPositionConstraint: 'Sticky position constraint',\n    /**\n     *@description Title of the paint profiler, old name of the performance pane\n     */\n    paintProfiler: 'Paint Profiler',\n    /**\n     *@description Text in Layer Details View of the Layers panel\n     */\n    nonFastScrollable: 'Non fast scrollable',\n    /**\n     *@description Text in Layer Details View of the Layers panel\n     */\n    touchEventHandler: 'Touch event handler',\n    /**\n     *@description Text in Layer Details View of the Layers panel\n     */\n    wheelEventHandler: 'Wheel event handler',\n    /**\n     * @description Text in Layer Details View of the Layers panel. Means that this rectangle needs to\n     * be repainted when the webpage is scrolled. 'repaints' means that the browser engine needs to\n     * draw the pixels for this rectangle to the user's monitor again.\n     */\n    repaintsOnScroll: 'Repaints on scroll',\n    /**\n     *@description Text in Layer Details View of the Layers panel\n     */\n    mainThreadScrollingReason: 'Main thread scrolling reason',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/LayerDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nexport class LayerDetailsView extends Common.ObjectWrapper.eventMixin(UI.Widget.Widget) {\n    layerViewHost;\n    emptyWidget;\n    layerSnapshotMap;\n    tableElement;\n    tbodyElement;\n    sizeCell;\n    compositingReasonsCell;\n    memoryEstimateCell;\n    paintCountCell;\n    scrollRectsCell;\n    stickyPositionConstraintCell;\n    paintProfilerLink;\n    selection;\n    constructor(layerViewHost) {\n        super(true);\n        this.element.setAttribute('jslog', `${VisualLogging.pane('layers-details')}`);\n        this.layerViewHost = layerViewHost;\n        this.layerViewHost.registerView(this);\n        this.emptyWidget = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.selectALayerToSeeItsDetails));\n        this.layerSnapshotMap = this.layerViewHost.getLayerSnapshotMap();\n        this.buildContent();\n        this.selection = null;\n    }\n    hoverObject(_selection) {\n    }\n    selectObject(selection) {\n        this.selection = selection;\n        if (this.isShowing()) {\n            this.update();\n        }\n    }\n    setLayerTree(_layerTree) {\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([layerDetailsViewStyles]);\n        this.update();\n    }\n    onScrollRectClicked(index, event) {\n        if (event.which !== 1) {\n            return;\n        }\n        if (!this.selection) {\n            return;\n        }\n        this.layerViewHost.selectObject(new ScrollRectSelection(this.selection.layer(), index));\n    }\n    invokeProfilerLink() {\n        if (!this.selection) {\n            return;\n        }\n        const snapshotSelection = this.selection.type() === \"Snapshot\" /* Type.SNAPSHOT */ ? this.selection : this.layerSnapshotMap.get(this.selection.layer());\n        if (snapshotSelection) {\n            this.dispatchEventToListeners(\"PaintProfilerRequested\" /* Events.PAINT_PROFILER_REQUESTED */, snapshotSelection);\n        }\n    }\n    createScrollRectElement(scrollRect, index) {\n        if (index) {\n            UI.UIUtils.createTextChild(this.scrollRectsCell, ', ');\n        }\n        const element = this.scrollRectsCell.createChild('span', 'scroll-rect');\n        if (this.selection && this.selection.scrollRectIndex === index) {\n            element.classList.add('active');\n        }\n        element.textContent = i18nString(UIStrings.scrollRectangleDimensions, {\n            PH1: String(slowScrollRectNames.get(scrollRect.type)?.()),\n            PH2: scrollRect.rect.width,\n            PH3: scrollRect.rect.height,\n            PH4: scrollRect.rect.x,\n            PH5: scrollRect.rect.y,\n        });\n        element.addEventListener('click', this.onScrollRectClicked.bind(this, index), false);\n        element.setAttribute('jslog', `${VisualLogging.action('layers.select-object').track({ click: true })}`);\n    }\n    formatStickyAncestorLayer(title, layer) {\n        if (!layer) {\n            return '';\n        }\n        const node = layer.nodeForSelfOrAncestor();\n        const name = node ? node.simpleSelector() : i18nString(UIStrings.unnamed);\n        return i18nString(UIStrings.stickyAncenstorLayersS, { PH1: title, PH2: name, PH3: layer.id() });\n    }\n    createStickyAncestorChild(title, layer) {\n        if (!layer) {\n            return;\n        }\n        UI.UIUtils.createTextChild(this.stickyPositionConstraintCell, ', ');\n        const child = this.stickyPositionConstraintCell.createChild('span');\n        child.textContent = this.formatStickyAncestorLayer(title, layer);\n    }\n    populateStickyPositionConstraintCell(constraint) {\n        this.stickyPositionConstraintCell.removeChildren();\n        if (!constraint) {\n            return;\n        }\n        const stickyBoxRect = constraint.stickyBoxRect();\n        const stickyBoxRectElement = this.stickyPositionConstraintCell.createChild('span');\n        stickyBoxRectElement.textContent = i18nString(UIStrings.stickyBoxRectangleDimensions, { PH1: stickyBoxRect.width, PH2: stickyBoxRect.height, PH3: stickyBoxRect.x, PH4: stickyBoxRect.y });\n        UI.UIUtils.createTextChild(this.stickyPositionConstraintCell, ', ');\n        const containingBlockRect = constraint.containingBlockRect();\n        const containingBlockRectElement = this.stickyPositionConstraintCell.createChild('span');\n        containingBlockRectElement.textContent = i18nString(UIStrings.containingBlocRectangleDimensions, {\n            PH1: containingBlockRect.width,\n            PH2: containingBlockRect.height,\n            PH3: containingBlockRect.x,\n            PH4: containingBlockRect.y,\n        });\n        this.createStickyAncestorChild(i18nString(UIStrings.nearestLayerShiftingStickyBox), constraint.nearestLayerShiftingStickyBox());\n        this.createStickyAncestorChild(i18nString(UIStrings.nearestLayerShiftingContaining), constraint.nearestLayerShiftingContainingBlock());\n    }\n    update() {\n        const layer = this.selection && this.selection.layer();\n        if (!layer) {\n            this.tableElement.remove();\n            this.paintProfilerLink.remove();\n            this.emptyWidget.show(this.contentElement);\n            return;\n        }\n        this.emptyWidget.detach();\n        this.contentElement.appendChild(this.tableElement);\n        this.contentElement.appendChild(this.paintProfilerLink);\n        this.sizeCell.textContent = i18nString(UIStrings.updateRectangleDimensions, { PH1: layer.width(), PH2: layer.height(), PH3: layer.offsetX(), PH4: layer.offsetY() });\n        if (this.paintCountCell.parentElement) {\n            this.paintCountCell.parentElement.classList.toggle('hidden', !layer.paintCount());\n        }\n        this.paintCountCell.textContent = String(layer.paintCount());\n        this.memoryEstimateCell.textContent = Platform.NumberUtilities.bytesToString(layer.gpuMemoryUsage());\n        void layer.requestCompositingReasons().then(this.updateCompositingReasons.bind(this));\n        this.scrollRectsCell.removeChildren();\n        layer.scrollRects().forEach(this.createScrollRectElement.bind(this));\n        this.populateStickyPositionConstraintCell(layer.stickyPositionConstraint());\n        const snapshot = this.selection && this.selection.type() === \"Snapshot\" /* Type.SNAPSHOT */ ?\n            this.selection.snapshot() :\n            null;\n        this.paintProfilerLink.classList.toggle('hidden', !(this.layerSnapshotMap.has(layer) || snapshot));\n    }\n    buildContent() {\n        this.tableElement = this.contentElement.createChild('table');\n        this.tbodyElement = this.tableElement.createChild('tbody');\n        this.sizeCell = this.createRow(i18nString(UIStrings.size));\n        this.compositingReasonsCell = this.createRow(i18nString(UIStrings.compositingReasons));\n        this.memoryEstimateCell = this.createRow(i18nString(UIStrings.memoryEstimate));\n        this.paintCountCell = this.createRow(i18nString(UIStrings.paintCount));\n        this.scrollRectsCell = this.createRow(i18nString(UIStrings.slowScrollRegions));\n        this.stickyPositionConstraintCell = this.createRow(i18nString(UIStrings.stickyPositionConstraint));\n        this.paintProfilerLink = this.contentElement.createChild('button', 'hidden devtools-link link-margin text-button link-style');\n        UI.ARIAUtils.markAsLink(this.paintProfilerLink);\n        this.paintProfilerLink.textContent = i18nString(UIStrings.paintProfiler);\n        this.paintProfilerLink.tabIndex = 0;\n        this.paintProfilerLink.addEventListener('click', e => {\n            e.consume(true);\n            this.invokeProfilerLink();\n        });\n        this.paintProfilerLink.setAttribute('jslog', `${VisualLogging.action('layers.paint-profiler').track({ click: true, keydown: 'Enter' })}`);\n    }\n    createRow(title) {\n        const tr = this.tbodyElement.createChild('tr');\n        const titleCell = tr.createChild('td');\n        titleCell.textContent = title;\n        return tr.createChild('td');\n    }\n    updateCompositingReasons(compositingReasons) {\n        if (!compositingReasons || !compositingReasons.length) {\n            this.compositingReasonsCell.textContent = 'n/a';\n            return;\n        }\n        this.compositingReasonsCell.removeChildren();\n        const list = this.compositingReasonsCell.createChild('ul');\n        for (const compositingReason of compositingReasons) {\n            list.createChild('li').textContent = compositingReason;\n        }\n    }\n}\nexport const slowScrollRectNames = new Map([\n    [\"NonFastScrollable\" /* SDK.LayerTreeBase.Layer.ScrollRectType.NON_FAST_SCROLLABLE */, i18nLazyString(UIStrings.nonFastScrollable)],\n    [\"TouchEventHandler\" /* SDK.LayerTreeBase.Layer.ScrollRectType.TOUCH_EVENT_HANDLER */, i18nLazyString(UIStrings.touchEventHandler)],\n    [\"WheelEventHandler\" /* SDK.LayerTreeBase.Layer.ScrollRectType.WHEEL_EVENT_HANDLER */, i18nLazyString(UIStrings.wheelEventHandler)],\n    [\"RepaintsOnScroll\" /* SDK.LayerTreeBase.Layer.ScrollRectType.REPAINTS_ON_SCROLL */, i18nLazyString(UIStrings.repaintsOnScroll)],\n    [\n        \"MainThreadScrollingReason\" /* SDK.LayerTreeBase.Layer.ScrollRectType.MAIN_THREAD_SCROLL_REASON */,\n        i18nLazyString(UIStrings.mainThreadScrollingReason),\n    ],\n]);\n//# sourceMappingURL=LayerDetailsView.js.map","/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport { LayerSelection, } from './LayerViewHost.js';\nconst UIStrings = {\n    /**\n     *@description Label for layers sidepanel tree\n     */\n    layersTreePane: 'Layers Tree Pane',\n    /**\n     *@description A context menu item in the DView of the Layers panel\n     */\n    showPaintProfiler: 'Show Paint Profiler',\n    /**\n     *@description Details text content in Layer Tree Outline of the Layers panel\n     *@example {10} PH1\n     *@example {10} PH2\n     */\n    updateChildDimension: ' ({PH1} × {PH2})',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/LayerTreeOutline.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class LayerTreeOutline extends Common.ObjectWrapper.eventMixin(UI.TreeOutline.TreeOutline) {\n    layerViewHost;\n    treeOutline;\n    lastHoveredNode;\n    element;\n    layerTree;\n    layerSnapshotMap;\n    constructor(layerViewHost) {\n        super();\n        this.layerViewHost = layerViewHost;\n        this.layerViewHost.registerView(this);\n        this.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n        this.treeOutline.element.classList.add('layer-tree', 'overflow-auto');\n        this.treeOutline.element.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n        this.treeOutline.element.addEventListener('mouseout', this.onMouseMove.bind(this), false);\n        this.treeOutline.element.addEventListener('contextmenu', this.onContextMenu.bind(this), true);\n        UI.ARIAUtils.setLabel(this.treeOutline.contentElement, i18nString(UIStrings.layersTreePane));\n        this.lastHoveredNode = null;\n        this.element = this.treeOutline.element;\n        this.layerViewHost.showInternalLayersSetting().addChangeListener(this.update, this);\n    }\n    focus() {\n        this.treeOutline.focus();\n    }\n    selectObject(selection) {\n        this.hoverObject(null);\n        const layer = selection && selection.layer();\n        const node = layer && layerToTreeElement.get(layer);\n        if (node) {\n            node.revealAndSelect(true);\n        }\n        else if (this.treeOutline.selectedTreeElement) {\n            this.treeOutline.selectedTreeElement.deselect();\n        }\n    }\n    hoverObject(selection) {\n        const layer = selection && selection.layer();\n        const node = layer && layerToTreeElement.get(layer);\n        if (node === this.lastHoveredNode) {\n            return;\n        }\n        if (this.lastHoveredNode) {\n            this.lastHoveredNode.setHovered(false);\n        }\n        if (node) {\n            node.setHovered(true);\n        }\n        this.lastHoveredNode = node;\n    }\n    setLayerTree(layerTree) {\n        this.layerTree = layerTree;\n        this.update();\n    }\n    update() {\n        const showInternalLayers = this.layerViewHost.showInternalLayersSetting().get();\n        const seenLayers = new Map();\n        let root = null;\n        if (this.layerTree) {\n            if (!showInternalLayers) {\n                root = this.layerTree.contentRoot();\n            }\n            if (!root) {\n                root = this.layerTree.root();\n            }\n        }\n        function updateLayer(layer) {\n            if (!layer.drawsContent() && !showInternalLayers) {\n                return;\n            }\n            if (seenLayers.get(layer)) {\n                console.assert(false, 'Duplicate layer: ' + layer.id());\n            }\n            seenLayers.set(layer, true);\n            let node = layerToTreeElement.get(layer) || null;\n            let parentLayer = layer.parent();\n            // Skip till nearest visible ancestor.\n            while (parentLayer && parentLayer !== root && !parentLayer.drawsContent() && !showInternalLayers) {\n                parentLayer = parentLayer.parent();\n            }\n            const parent = layer === root ? this.treeOutline.rootElement() : parentLayer && layerToTreeElement.get(parentLayer);\n            if (!parent) {\n                console.assert(false, 'Parent is not in the tree');\n                return;\n            }\n            if (!node) {\n                node = new LayerTreeElement(this, layer);\n                parent.appendChild(node);\n                // Expand all new non-content layers to expose content layers better.\n                if (!layer.drawsContent()) {\n                    node.expand();\n                }\n            }\n            else {\n                if (node.parent !== parent) {\n                    const oldSelection = this.treeOutline.selectedTreeElement;\n                    if (node.parent) {\n                        node.parent.removeChild(node);\n                    }\n                    parent.appendChild(node);\n                    if (oldSelection && oldSelection !== this.treeOutline.selectedTreeElement) {\n                        oldSelection.select();\n                    }\n                }\n                node.update();\n            }\n        }\n        if (root && this.layerTree) {\n            this.layerTree.forEachLayer(updateLayer.bind(this), root);\n        }\n        // Cleanup layers that don't exist anymore from tree.\n        const rootElement = this.treeOutline.rootElement();\n        for (let node = rootElement.firstChild(); node instanceof LayerTreeElement && !node.root;) {\n            if (seenLayers.get(node.layer)) {\n                node = node.traverseNextTreeElement(false);\n            }\n            else {\n                const nextNode = node.nextSibling || node.parent;\n                if (node.parent) {\n                    node.parent.removeChild(node);\n                }\n                if (node === this.lastHoveredNode) {\n                    this.lastHoveredNode = null;\n                }\n                node = nextNode;\n            }\n        }\n        if (!this.treeOutline.selectedTreeElement && this.layerTree) {\n            const elementToSelect = this.layerTree.contentRoot() || this.layerTree.root();\n            if (elementToSelect) {\n                const layer = layerToTreeElement.get(elementToSelect);\n                if (layer) {\n                    layer.revealAndSelect(true);\n                }\n            }\n        }\n    }\n    onMouseMove(event) {\n        const node = this.treeOutline.treeElementFromEvent(event);\n        if (node === this.lastHoveredNode) {\n            return;\n        }\n        this.layerViewHost.hoverObject(this.selectionForNode(node));\n    }\n    selectedNodeChanged(node) {\n        this.layerViewHost.selectObject(this.selectionForNode(node));\n    }\n    onContextMenu(event) {\n        const selection = this.selectionForNode(this.treeOutline.treeElementFromEvent(event));\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        const layer = selection && selection.layer();\n        if (layer) {\n            this.layerSnapshotMap = this.layerViewHost.getLayerSnapshotMap();\n            if (this.layerSnapshotMap.has(layer)) {\n                contextMenu.defaultSection().appendItem(i18nString(UIStrings.showPaintProfiler), () => this.dispatchEventToListeners(\"PaintProfilerRequested\" /* Events.PAINT_PROFILER_REQUESTED */, selection), { jslogContext: 'layers.paint-profiler' });\n            }\n        }\n        this.layerViewHost.showContextMenu(contextMenu, selection);\n    }\n    selectionForNode(node) {\n        return node && node.layer ? new LayerSelection(node.layer) : null;\n    }\n}\nexport class LayerTreeElement extends UI.TreeOutline.TreeElement {\n    // Watch out: This is different from treeOutline that\n    // LayerTreeElement inherits from UI.TreeOutline.TreeElement.\n    treeOutlineInternal;\n    layer;\n    constructor(tree, layer) {\n        super();\n        this.treeOutlineInternal = tree;\n        this.layer = layer;\n        layerToTreeElement.set(layer, this);\n        this.update();\n    }\n    update() {\n        const node = this.layer.nodeForSelfOrAncestor();\n        const title = document.createDocumentFragment();\n        UI.UIUtils.createTextChild(title, node ? node.simpleSelector() : '#' + this.layer.id());\n        const details = title.createChild('span', 'dimmed');\n        details.textContent =\n            i18nString(UIStrings.updateChildDimension, { PH1: this.layer.width(), PH2: this.layer.height() });\n        this.title = title;\n    }\n    onselect() {\n        this.treeOutlineInternal.selectedNodeChanged(this);\n        return false;\n    }\n    setHovered(hovered) {\n        this.listItemElement.classList.toggle('hovered', hovered);\n    }\n}\nexport const layerToTreeElement = new WeakMap();\n//# sourceMappingURL=LayerTreeOutline.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.layers-3d-view {\n  overflow: hidden;\n  user-select: none;\n}\n\n.toolbar {\n  background-color: var(--sys-color-cdt-base-container);\n  border-bottom: 1px solid var(--sys-color-divider);\n}\n\ncanvas {\n  flex: 1 1;\n}\n\n.layers-3d-view > canvas:focus-visible {\n  outline: auto 5px -webkit-focus-ring-color;\n}\n\n/*# sourceURL=layers3DView.css */\n`);\n\nexport default styles;\n","// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nconst UIStrings = {\n    /**\n     *@description Tooltip text that appears when hovering over largeicon pan button in Transform Controller of the Layers panel\n     */\n    panModeX: 'Pan mode (X)',\n    /**\n     *@description Tooltip text that appears when hovering over largeicon rotate button in Transform Controller of the Layers panel\n     */\n    rotateModeV: 'Rotate mode (V)',\n    /**\n     *@description Tooltip text that appears when hovering over the largeicon center button in the Transform Controller of the Layers panel\n     */\n    resetTransform: 'Reset transform (0)',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/TransformController.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TransformController extends Common.ObjectWrapper.ObjectWrapper {\n    mode;\n    scaleInternal;\n    offsetXInternal;\n    offsetYInternal;\n    rotateXInternal;\n    rotateYInternal;\n    oldRotateX;\n    oldRotateY;\n    originX;\n    originY;\n    element;\n    minScale;\n    maxScale;\n    controlPanelToolbar;\n    modeButtons;\n    constructor(element, disableRotate) {\n        super();\n        this.scaleInternal = 1;\n        this.offsetXInternal = 0;\n        this.offsetYInternal = 0;\n        this.rotateXInternal = 0;\n        this.rotateYInternal = 0;\n        this.oldRotateX = 0;\n        this.oldRotateY = 0;\n        this.originX = 0;\n        this.originY = 0;\n        this.element = element;\n        this.registerShortcuts();\n        UI.UIUtils.installDragHandle(element, this.onDragStart.bind(this), this.onDrag.bind(this), this.onDragEnd.bind(this), 'move', null);\n        element.addEventListener('wheel', this.onMouseWheel.bind(this), false);\n        this.minScale = 0;\n        this.maxScale = Infinity;\n        this.controlPanelToolbar = new UI.Toolbar.Toolbar('transform-control-panel');\n        this.controlPanelToolbar.element.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n        this.modeButtons = {};\n        if (!disableRotate) {\n            const panModeButton = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.panModeX), '3d-pan', undefined, 'layers.3d-pan', /* toggleOnClick */ false);\n            panModeButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.setMode.bind(this, \"Pan\" /* Modes.PAN */));\n            this.modeButtons[\"Pan\" /* Modes.PAN */] = panModeButton;\n            this.controlPanelToolbar.appendToolbarItem(panModeButton);\n            const rotateModeButton = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.rotateModeV), '3d-rotate', undefined, 'layers.3d-rotate', /* toggleOnClick */ false);\n            rotateModeButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.setMode.bind(this, \"Rotate\" /* Modes.ROTATE */));\n            this.modeButtons[\"Rotate\" /* Modes.ROTATE */] = rotateModeButton;\n            this.controlPanelToolbar.appendToolbarItem(rotateModeButton);\n        }\n        this.setMode(\"Pan\" /* Modes.PAN */);\n        const resetButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.resetTransform), '3d-center', undefined, 'layers.3d-center');\n        resetButton.addEventListener(\"Click\" /* UI.Toolbar.ToolbarButton.Events.CLICK */, this.resetAndNotify.bind(this, undefined));\n        this.controlPanelToolbar.appendToolbarItem(resetButton);\n        this.reset();\n    }\n    toolbar() {\n        return this.controlPanelToolbar;\n    }\n    registerShortcuts() {\n        const zoomFactor = 1.1;\n        UI.ShortcutRegistry.ShortcutRegistry.instance().addShortcutListener(this.element, {\n            'layers.reset-view': async () => {\n                this.resetAndNotify();\n                return true;\n            },\n            'layers.pan-mode': async () => {\n                this.setMode(\"Pan\" /* Modes.PAN */);\n                return true;\n            },\n            'layers.rotate-mode': async () => {\n                this.setMode(\"Rotate\" /* Modes.ROTATE */);\n                return true;\n            },\n            'layers.zoom-in': this.onKeyboardZoom.bind(this, zoomFactor),\n            'layers.zoom-out': this.onKeyboardZoom.bind(this, 1 / zoomFactor),\n            'layers.up': this.onKeyboardPanOrRotate.bind(this, 0, -1),\n            'layers.down': this.onKeyboardPanOrRotate.bind(this, 0, 1),\n            'layers.left': this.onKeyboardPanOrRotate.bind(this, -1, 0),\n            'layers.right': this.onKeyboardPanOrRotate.bind(this, 1, 0),\n        });\n    }\n    postChangeEvent() {\n        this.dispatchEventToListeners(\"TransformChanged\" /* Events.TRANSFORM_CHANGED */);\n    }\n    reset() {\n        this.scaleInternal = 1;\n        this.offsetXInternal = 0;\n        this.offsetYInternal = 0;\n        this.rotateXInternal = 0;\n        this.rotateYInternal = 0;\n    }\n    setMode(mode) {\n        if (this.mode === mode) {\n            return;\n        }\n        this.mode = mode;\n        this.updateModeButtons();\n    }\n    updateModeButtons() {\n        for (const mode in this.modeButtons) {\n            this.modeButtons[mode].setToggled(mode === this.mode);\n        }\n    }\n    resetAndNotify(event) {\n        this.reset();\n        this.postChangeEvent();\n        if (event) {\n            event.preventDefault();\n        }\n        this.element.focus();\n    }\n    setScaleConstraints(minScale, maxScale) {\n        this.minScale = minScale;\n        this.maxScale = maxScale;\n        this.scaleInternal = Platform.NumberUtilities.clamp(this.scaleInternal, minScale, maxScale);\n    }\n    clampOffsets(minX, maxX, minY, maxY) {\n        this.offsetXInternal = Platform.NumberUtilities.clamp(this.offsetXInternal, minX, maxX);\n        this.offsetYInternal = Platform.NumberUtilities.clamp(this.offsetYInternal, minY, maxY);\n    }\n    scale() {\n        return this.scaleInternal;\n    }\n    offsetX() {\n        return this.offsetXInternal;\n    }\n    offsetY() {\n        return this.offsetYInternal;\n    }\n    rotateX() {\n        return this.rotateXInternal;\n    }\n    rotateY() {\n        return this.rotateYInternal;\n    }\n    onScale(scaleFactor, x, y) {\n        scaleFactor = Platform.NumberUtilities.clamp(this.scaleInternal * scaleFactor, this.minScale, this.maxScale) /\n            this.scaleInternal;\n        this.scaleInternal *= scaleFactor;\n        this.offsetXInternal -= (x - this.offsetXInternal) * (scaleFactor - 1);\n        this.offsetYInternal -= (y - this.offsetYInternal) * (scaleFactor - 1);\n        this.postChangeEvent();\n    }\n    onPan(offsetX, offsetY) {\n        this.offsetXInternal += offsetX;\n        this.offsetYInternal += offsetY;\n        this.postChangeEvent();\n    }\n    onRotate(rotateX, rotateY) {\n        this.rotateXInternal = rotateX;\n        this.rotateYInternal = rotateY;\n        this.postChangeEvent();\n    }\n    async onKeyboardZoom(zoomFactor) {\n        this.onScale(zoomFactor, this.element.clientWidth / 2, this.element.clientHeight / 2);\n        return true;\n    }\n    async onKeyboardPanOrRotate(xMultiplier, yMultiplier) {\n        const panStepInPixels = 6;\n        const rotateStepInDegrees = 5;\n        if (this.mode === \"Rotate\" /* Modes.ROTATE */) {\n            // Sic! onRotate treats X and Y as \"rotate around X\" and \"rotate around Y\", so swap X/Y multiplers.\n            this.onRotate(this.rotateXInternal + yMultiplier * rotateStepInDegrees, this.rotateYInternal + xMultiplier * rotateStepInDegrees);\n        }\n        else {\n            this.onPan(xMultiplier * panStepInPixels, yMultiplier * panStepInPixels);\n        }\n        return true;\n    }\n    onMouseWheel(event) {\n        /** @const */\n        const zoomFactor = 1.1;\n        /** @const */\n        const wheelZoomSpeed = 1 / 53;\n        const mouseEvent = event;\n        const scaleFactor = Math.pow(zoomFactor, -mouseEvent.deltaY * wheelZoomSpeed);\n        this.onScale(scaleFactor, mouseEvent.clientX - this.element.getBoundingClientRect().left, mouseEvent.clientY - this.element.getBoundingClientRect().top);\n    }\n    onDrag(event) {\n        const { clientX, clientY } = event;\n        if (this.mode === \"Rotate\" /* Modes.ROTATE */) {\n            this.onRotate(this.oldRotateX + (this.originY - clientY) / this.element.clientHeight * 180, this.oldRotateY - (this.originX - clientX) / this.element.clientWidth * 180);\n        }\n        else {\n            this.onPan(clientX - this.originX, clientY - this.originY);\n            this.originX = clientX;\n            this.originY = clientY;\n        }\n    }\n    onDragStart(event) {\n        this.element.focus();\n        this.originX = event.clientX;\n        this.originY = event.clientY;\n        this.oldRotateX = this.rotateXInternal;\n        this.oldRotateY = this.rotateYInternal;\n        return true;\n    }\n    onDragEnd() {\n        this.originX = 0;\n        this.originY = 0;\n        this.oldRotateX = 0;\n        this.oldRotateY = 0;\n    }\n}\n//# sourceMappingURL=TransformController.js.map","/*\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport layers3DViewStyles from './layers3DView.css.js';\nimport { LayerSelection, ScrollRectSelection, Selection, SnapshotSelection, } from './LayerViewHost.js';\nimport { TransformController } from './TransformController.js';\nconst UIStrings = {\n    /**\n     *@description Text of a DOM element in DView of the Layers panel\n     */\n    layerInformationIsNotYet: 'Layer information is not yet available.',\n    /**\n     *@description Accessibility label for canvas view in Layers tool\n     */\n    dLayersView: '3D Layers View',\n    /**\n     *@description Text in DView of the Layers panel\n     */\n    cantDisplayLayers: 'Can\\'t display layers,',\n    /**\n     *@description Text in DView of the Layers panel\n     */\n    webglSupportIsDisabledInYour: 'WebGL support is disabled in your browser.',\n    /**\n     *@description Text in DView of the Layers panel\n     *@example {about:gpu} PH1\n     */\n    checkSForPossibleReasons: 'Check {PH1} for possible reasons.',\n    /**\n     *@description Text for a checkbox in the toolbar of the Layers panel to show the area of slow scroll rect\n     */\n    slowScrollRects: 'Slow scroll rects',\n    /**\n     * @description Text for a checkbox in the toolbar of the Layers panel. This is a noun, for a\n     * setting meaning 'display paints in the layers viewer'. 'Paints' here means 'paint events' i.e.\n     * when the browser draws pixels to the screen.\n     */\n    paints: 'Paints',\n    /**\n     *@description A context menu item in the DView of the Layers panel\n     */\n    resetView: 'Reset View',\n    /**\n     *@description A context menu item in the DView of the Layers panel\n     */\n    showPaintProfiler: 'Show Paint Profiler',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/Layers3DView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst vertexPositionAttributes = new Map();\nconst vertexColorAttributes = new Map();\nconst textureCoordAttributes = new Map();\nconst uniformMatrixLocations = new Map();\nconst uniformSamplerLocations = new Map();\nconst imageForTexture = new Map();\nexport class Layers3DView extends Common.ObjectWrapper.eventMixin(UI.Widget.VBox) {\n    failBanner;\n    layerViewHost;\n    transformController;\n    canvasElement;\n    lastSelection;\n    layerTree;\n    textureManager;\n    chromeTextures;\n    rects;\n    snapshotLayers;\n    shaderProgram;\n    oldTextureScale;\n    depthByLayerId;\n    visibleLayers;\n    maxDepth;\n    scale;\n    layerTexture;\n    projectionMatrix;\n    whiteTexture;\n    gl;\n    dimensionsForAutoscale;\n    needsUpdate;\n    updateScheduled;\n    panelToolbar;\n    showSlowScrollRectsSetting;\n    showPaintsSetting;\n    mouseDownX;\n    mouseDownY;\n    constructor(layerViewHost) {\n        super(true);\n        this.element.setAttribute('jslog', `${VisualLogging.pane('layers-3d-view')}`);\n        this.contentElement.classList.add('layers-3d-view');\n        this.failBanner = new UI.Widget.VBox();\n        this.failBanner.element.classList.add('full-widget-dimmed-banner');\n        UI.UIUtils.createTextChild(this.failBanner.element, i18nString(UIStrings.layerInformationIsNotYet));\n        this.layerViewHost = layerViewHost;\n        this.layerViewHost.registerView(this);\n        this.transformController = new TransformController(this.contentElement);\n        this.transformController.addEventListener(\"TransformChanged\" /* TransformControllerEvents.TRANSFORM_CHANGED */, this.update, this);\n        this.initToolbar();\n        this.canvasElement = this.contentElement.createChild('canvas');\n        this.canvasElement.tabIndex = 0;\n        this.canvasElement.addEventListener('dblclick', this.onDoubleClick.bind(this), false);\n        this.canvasElement.addEventListener('mousedown', this.onMouseDown.bind(this), false);\n        this.canvasElement.addEventListener('mouseup', this.onMouseUp.bind(this), false);\n        this.canvasElement.addEventListener('mouseleave', this.onMouseMove.bind(this), false);\n        this.canvasElement.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n        this.canvasElement.addEventListener('contextmenu', this.onContextMenu.bind(this), false);\n        this.canvasElement.setAttribute('jslog', `${VisualLogging.canvas('layers').track({ click: true, drag: true })}`);\n        UI.ARIAUtils.setLabel(this.canvasElement, i18nString(UIStrings.dLayersView));\n        this.lastSelection = {};\n        this.layerTree = null;\n        this.updateScheduled = false;\n        this.textureManager = new LayerTextureManager(this.update.bind(this));\n        this.chromeTextures = [];\n        this.rects = [];\n        this.snapshotLayers = new Map();\n        this.layerViewHost.setLayerSnapshotMap(this.snapshotLayers);\n        this.layerViewHost.showInternalLayersSetting().addChangeListener(this.update, this);\n    }\n    setLayerTree(layerTree) {\n        this.layerTree = layerTree;\n        this.layerTexture = null;\n        delete this.oldTextureScale;\n        if (this.showPaints()) {\n            this.textureManager.setLayerTree(layerTree);\n        }\n        this.update();\n    }\n    showImageForLayer(layer, imageURL) {\n        if (!imageURL) {\n            this.layerTexture = null;\n            this.update();\n            return;\n        }\n        void UI.UIUtils.loadImage(imageURL).then(image => {\n            const texture = image && LayerTextureManager.createTextureForImage(this.gl || null, image);\n            this.layerTexture = texture ? { layer, texture } : null;\n            this.update();\n        });\n    }\n    onResize() {\n        this.resizeCanvas();\n        this.update();\n    }\n    willHide() {\n        this.textureManager.suspend();\n    }\n    wasShown() {\n        this.textureManager.resume();\n        this.registerCSSFiles([layers3DViewStyles]);\n        if (!this.needsUpdate) {\n            return;\n        }\n        this.resizeCanvas();\n        this.update();\n    }\n    updateLayerSnapshot(layer) {\n        this.textureManager.layerNeedsUpdate(layer);\n    }\n    setOutline(type, selection) {\n        this.lastSelection[type] = selection;\n        this.update();\n    }\n    hoverObject(selection) {\n        this.setOutline(OutlineType.Hovered, selection);\n    }\n    selectObject(selection) {\n        this.setOutline(OutlineType.Hovered, null);\n        this.setOutline(OutlineType.Selected, selection);\n    }\n    snapshotForSelection(selection) {\n        if (selection.type() === \"Snapshot\" /* Type.SNAPSHOT */) {\n            const snapshotWithRect = selection.snapshot();\n            snapshotWithRect.snapshot.addReference();\n            return Promise.resolve(snapshotWithRect);\n        }\n        if (selection.layer()) {\n            const promise = selection.layer().snapshots()[0];\n            if (promise !== undefined) {\n                return promise;\n            }\n        }\n        return Promise.resolve(null);\n    }\n    initGL(canvas) {\n        const gl = canvas.getContext('webgl');\n        if (!gl) {\n            return null;\n        }\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.enable(gl.DEPTH_TEST);\n        return gl;\n    }\n    createShader(type, script) {\n        if (!this.gl) {\n            return;\n        }\n        const shader = this.gl.createShader(type);\n        if (shader && this.shaderProgram) {\n            this.gl.shaderSource(shader, script);\n            this.gl.compileShader(shader);\n            this.gl.attachShader(this.shaderProgram, shader);\n        }\n    }\n    initShaders() {\n        if (!this.gl) {\n            return;\n        }\n        this.shaderProgram = this.gl.createProgram();\n        if (!this.shaderProgram) {\n            return;\n        }\n        this.createShader(this.gl.FRAGMENT_SHADER, FragmentShader);\n        this.createShader(this.gl.VERTEX_SHADER, VertexShader);\n        this.gl.linkProgram(this.shaderProgram);\n        this.gl.useProgram(this.shaderProgram);\n        const aVertexPositionAttribute = this.gl.getAttribLocation(this.shaderProgram, 'aVertexPosition');\n        this.gl.enableVertexAttribArray(aVertexPositionAttribute);\n        vertexPositionAttributes.set(this.shaderProgram, aVertexPositionAttribute);\n        const aVertexColorAttribute = this.gl.getAttribLocation(this.shaderProgram, 'aVertexColor');\n        this.gl.enableVertexAttribArray(aVertexColorAttribute);\n        vertexColorAttributes.set(this.shaderProgram, aVertexColorAttribute);\n        const aTextureCoordAttribute = this.gl.getAttribLocation(this.shaderProgram, 'aTextureCoord');\n        this.gl.enableVertexAttribArray(aTextureCoordAttribute);\n        textureCoordAttributes.set(this.shaderProgram, aTextureCoordAttribute);\n        const uMatrixLocation = this.gl.getUniformLocation(this.shaderProgram, 'uPMatrix');\n        uniformMatrixLocations.set(this.shaderProgram, uMatrixLocation);\n        const uSamplerLocation = this.gl.getUniformLocation(this.shaderProgram, 'uSampler');\n        uniformSamplerLocations.set(this.shaderProgram, uSamplerLocation);\n    }\n    resizeCanvas() {\n        this.canvasElement.width = this.canvasElement.offsetWidth * window.devicePixelRatio;\n        this.canvasElement.height = this.canvasElement.offsetHeight * window.devicePixelRatio;\n    }\n    updateTransformAndConstraints() {\n        const paddingFraction = 0.1;\n        const dimensionsForAutoscale = this.dimensionsForAutoscale || { width: 0, height: 0 };\n        const viewport = this.layerTree ? this.layerTree.viewportSize() : null;\n        const baseWidth = viewport ? viewport.width : dimensionsForAutoscale.width;\n        const baseHeight = viewport ? viewport.height : dimensionsForAutoscale.height;\n        const canvasWidth = this.canvasElement.width;\n        const canvasHeight = this.canvasElement.height;\n        const paddingX = canvasWidth * paddingFraction;\n        const paddingY = canvasHeight * paddingFraction;\n        const scaleX = (canvasWidth - 2 * paddingX) / baseWidth;\n        const scaleY = (canvasHeight - 2 * paddingY) / baseHeight;\n        const viewScale = Math.min(scaleX, scaleY);\n        const minScaleConstraint = Math.min(baseWidth / dimensionsForAutoscale.width, baseHeight / dimensionsForAutoscale.width) / 2;\n        this.transformController.setScaleConstraints(minScaleConstraint, 10 / viewScale); // 1/viewScale is 1:1 in terms of pixels, so allow zooming to 10x of native size\n        const scale = this.transformController.scale();\n        const rotateX = this.transformController.rotateX();\n        const rotateY = this.transformController.rotateY();\n        this.scale = scale * viewScale;\n        const textureScale = Platform.NumberUtilities.clamp(this.scale, 0.1, 1);\n        if (textureScale !== this.oldTextureScale) {\n            this.oldTextureScale = textureScale;\n            this.textureManager.setScale(textureScale);\n            this.dispatchEventToListeners(\"ScaleChanged\" /* Events.SCALE_CHANGED */, textureScale);\n        }\n        const scaleAndRotationMatrix = new WebKitCSSMatrix()\n            .scale(scale, scale, scale)\n            .translate(canvasWidth / 2, canvasHeight / 2, 0)\n            .rotate(rotateX, rotateY, 0)\n            .scale(viewScale, viewScale, viewScale)\n            .translate(-baseWidth / 2, -baseHeight / 2, 0);\n        let bounds;\n        for (let i = 0; i < this.rects.length; ++i) {\n            bounds = UI.Geometry.boundsForTransformedPoints(scaleAndRotationMatrix, this.rects[i].vertices, bounds);\n        }\n        if (bounds) {\n            this.transformController.clampOffsets((paddingX - bounds.maxX) / window.devicePixelRatio, (canvasWidth - paddingX - bounds.minX) / window.devicePixelRatio, (paddingY - bounds.maxY) / window.devicePixelRatio, (canvasHeight - paddingY - bounds.minY) / window.devicePixelRatio);\n        }\n        const offsetX = this.transformController.offsetX() * window.devicePixelRatio;\n        const offsetY = this.transformController.offsetY() * window.devicePixelRatio;\n        // Multiply to translation matrix on the right rather than translate (which would implicitly multiply on the left).\n        this.projectionMatrix = new WebKitCSSMatrix().translate(offsetX, offsetY, 0).multiply(scaleAndRotationMatrix);\n        const glProjectionMatrix = new WebKitCSSMatrix()\n            .scale(1, -1, -1)\n            .translate(-1, -1, 0)\n            .scale(2 / this.canvasElement.width, 2 / this.canvasElement.height, 1 / 1000000)\n            .multiply(this.projectionMatrix);\n        if (this.shaderProgram) {\n            const pMatrixUniform = uniformMatrixLocations.get(this.shaderProgram);\n            if (this.gl && pMatrixUniform) {\n                this.gl.uniformMatrix4fv(pMatrixUniform, false, this.arrayFromMatrix(glProjectionMatrix));\n            }\n        }\n    }\n    arrayFromMatrix(m) {\n        return new Float32Array([\n            m.m11,\n            m.m12,\n            m.m13,\n            m.m14,\n            m.m21,\n            m.m22,\n            m.m23,\n            m.m24,\n            m.m31,\n            m.m32,\n            m.m33,\n            m.m34,\n            m.m41,\n            m.m42,\n            m.m43,\n            m.m44,\n        ]);\n    }\n    initWhiteTexture() {\n        if (!this.gl) {\n            return;\n        }\n        this.whiteTexture = this.gl.createTexture();\n        this.gl.bindTexture(this.gl.TEXTURE_2D, this.whiteTexture);\n        const whitePixel = new Uint8Array([255, 255, 255, 255]);\n        this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, whitePixel);\n    }\n    initChromeTextures() {\n        function loadChromeTexture(index, url) {\n            void UI.UIUtils.loadImage(url).then(image => {\n                this.chromeTextures[index] =\n                    image && LayerTextureManager.createTextureForImage(this.gl || null, image) || undefined;\n            });\n        }\n        loadChromeTexture.call(this, 0 /* ChromeTexture.LEFT */, 'Images/chromeLeft.avif');\n        loadChromeTexture.call(this, 1 /* ChromeTexture.MIDDLE */, 'Images/chromeMiddle.avif');\n        loadChromeTexture.call(this, 2 /* ChromeTexture.RIGHT */, 'Images/chromeRight.avif');\n    }\n    initGLIfNecessary() {\n        if (this.gl) {\n            return this.gl;\n        }\n        this.gl = this.initGL(this.canvasElement);\n        if (!this.gl) {\n            return null;\n        }\n        this.initShaders();\n        this.initWhiteTexture();\n        this.initChromeTextures();\n        this.textureManager.setContext(this.gl);\n        return this.gl;\n    }\n    calculateDepthsAndVisibility() {\n        this.depthByLayerId = new Map();\n        let depth = 0;\n        const showInternalLayers = this.layerViewHost.showInternalLayersSetting().get();\n        if (!this.layerTree) {\n            return;\n        }\n        const root = showInternalLayers ? this.layerTree.root() : (this.layerTree.contentRoot() || this.layerTree.root());\n        if (!root) {\n            return;\n        }\n        const queue = [root];\n        this.depthByLayerId.set(root.id(), 0);\n        this.visibleLayers = new Set();\n        while (queue.length > 0) {\n            const layer = queue.shift();\n            if (!layer) {\n                break;\n            }\n            if (showInternalLayers || layer.drawsContent()) {\n                this.visibleLayers.add(layer);\n            }\n            const children = layer.children();\n            for (let i = 0; i < children.length; ++i) {\n                this.depthByLayerId.set(children[i].id(), ++depth);\n                queue.push(children[i]);\n            }\n        }\n        this.maxDepth = depth;\n    }\n    depthForLayer(layer) {\n        return (this.depthByLayerId.get(layer.id()) || 0) * LayerSpacing;\n    }\n    calculateScrollRectDepth(layer, index) {\n        return this.depthForLayer(layer) + index * ScrollRectSpacing + 1;\n    }\n    updateDimensionsForAutoscale(layer) {\n        // We don't want to be precise, but rather pick something least affected by\n        // animationtransforms, so that we don't change scale too often. So let's\n        // disregard transforms, scrolling and relative layer positioning and choose\n        // the largest dimensions of all layers.\n        if (!this.dimensionsForAutoscale) {\n            this.dimensionsForAutoscale = { width: 0, height: 0 };\n        }\n        this.dimensionsForAutoscale.width = Math.max(layer.width(), this.dimensionsForAutoscale.width);\n        this.dimensionsForAutoscale.height = Math.max(layer.height(), this.dimensionsForAutoscale.height);\n    }\n    calculateLayerRect(layer) {\n        if (!this.visibleLayers.has(layer)) {\n            return;\n        }\n        const selection = new LayerSelection(layer);\n        const rect = new Rectangle(selection);\n        rect.setVertices(layer.quad(), this.depthForLayer(layer));\n        this.appendRect(rect);\n        this.updateDimensionsForAutoscale(layer);\n    }\n    appendRect(rect) {\n        const selection = rect.relatedObject;\n        const isSelected = Selection.isEqual(this.lastSelection[OutlineType.Selected], selection);\n        const isHovered = Selection.isEqual(this.lastSelection[OutlineType.Hovered], selection);\n        if (isSelected) {\n            rect.borderColor = SelectedBorderColor;\n        }\n        else if (isHovered) {\n            rect.borderColor = HoveredBorderColor;\n            const fillColor = rect.fillColor || [255, 255, 255, 1];\n            const maskColor = HoveredImageMaskColor;\n            rect.fillColor = [\n                fillColor[0] * maskColor[0] / 255,\n                fillColor[1] * maskColor[1] / 255,\n                fillColor[2] * maskColor[2] / 255,\n                fillColor[3] * maskColor[3],\n            ];\n        }\n        else {\n            rect.borderColor = BorderColor;\n        }\n        rect.lineWidth = isSelected ? SelectedBorderWidth : BorderWidth;\n        this.rects.push(rect);\n    }\n    calculateLayerScrollRects(layer) {\n        const scrollRects = layer.scrollRects();\n        for (let i = 0; i < scrollRects.length; ++i) {\n            const selection = new ScrollRectSelection(layer, i);\n            const rect = new Rectangle(selection);\n            rect.calculateVerticesFromRect(layer, scrollRects[i].rect, this.calculateScrollRectDepth(layer, i));\n            rect.fillColor = ScrollRectBackgroundColor;\n            this.appendRect(rect);\n        }\n    }\n    calculateLayerTileRects(layer) {\n        const tiles = this.textureManager.tilesForLayer(layer);\n        for (let i = 0; i < tiles.length; ++i) {\n            const tile = tiles[i];\n            if (!tile.texture) {\n                continue;\n            }\n            const selection = new SnapshotSelection(layer, { rect: tile.rect, snapshot: tile.snapshot });\n            const rect = new Rectangle(selection);\n            if (!this.snapshotLayers.has(layer)) {\n                this.snapshotLayers.set(layer, selection);\n            }\n            rect.calculateVerticesFromRect(layer, tile.rect, this.depthForLayer(layer) + 1);\n            rect.texture = tile.texture;\n            this.appendRect(rect);\n        }\n    }\n    calculateRects() {\n        this.rects = [];\n        this.snapshotLayers.clear();\n        this.dimensionsForAutoscale = { width: 0, height: 0 };\n        if (this.layerTree) {\n            this.layerTree.forEachLayer(this.calculateLayerRect.bind(this));\n        }\n        if (this.showSlowScrollRectsSetting && this.showSlowScrollRectsSetting.get() && this.layerTree) {\n            this.layerTree.forEachLayer(this.calculateLayerScrollRects.bind(this));\n        }\n        if (this.layerTexture && this.visibleLayers.has(this.layerTexture.layer)) {\n            const layer = this.layerTexture.layer;\n            const selection = new LayerSelection(layer);\n            const rect = new Rectangle(selection);\n            rect.setVertices(layer.quad(), this.depthForLayer(layer));\n            rect.texture = this.layerTexture.texture;\n            this.appendRect(rect);\n        }\n        else if (this.showPaints() && this.layerTree) {\n            this.layerTree.forEachLayer(this.calculateLayerTileRects.bind(this));\n        }\n    }\n    makeColorsArray(color) {\n        let colors = [];\n        const normalizedColor = [color[0] / 255, color[1] / 255, color[2] / 255, color[3]];\n        for (let i = 0; i < 4; i++) {\n            colors = colors.concat(normalizedColor);\n        }\n        return colors;\n    }\n    setVertexAttribute(attribute, array, length) {\n        const gl = this.gl;\n        if (!gl) {\n            return;\n        }\n        const buffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(array), gl.STATIC_DRAW);\n        gl.vertexAttribPointer(attribute, length, gl.FLOAT, false, 0, 0);\n    }\n    // This view currently draws every rect, every frame\n    // It'd be far more effectient to retain the buffers created in setVertexAttribute,\n    // and manipulate them as needed.\n    // TODO(crbug.com/1473451): consider those optimizations or porting to 3D css transforms\n    drawRectangle(vertices, mode, color, texture) {\n        const gl = this.gl;\n        const white = [255, 255, 255, 1];\n        color = color || white;\n        if (!this.shaderProgram) {\n            return;\n        }\n        const vertexPositionAttribute = vertexPositionAttributes.get(this.shaderProgram);\n        const textureCoordAttribute = textureCoordAttributes.get(this.shaderProgram);\n        const vertexColorAttribute = vertexColorAttributes.get(this.shaderProgram);\n        if (typeof vertexPositionAttribute !== 'undefined') {\n            this.setVertexAttribute(vertexPositionAttribute, vertices, 3);\n        }\n        if (typeof textureCoordAttribute !== 'undefined') {\n            this.setVertexAttribute(textureCoordAttribute, [0, 1, 1, 1, 1, 0, 0, 0], 2);\n        }\n        if (typeof vertexColorAttribute !== 'undefined') {\n            this.setVertexAttribute(vertexColorAttribute, this.makeColorsArray(color), color.length);\n        }\n        if (!gl) {\n            return;\n        }\n        const samplerUniform = uniformSamplerLocations.get(this.shaderProgram);\n        if (texture) {\n            if (samplerUniform) {\n                gl.activeTexture(gl.TEXTURE0);\n                gl.bindTexture(gl.TEXTURE_2D, texture);\n                gl.uniform1i(samplerUniform, 0);\n            }\n        }\n        else if (this.whiteTexture) {\n            gl.bindTexture(gl.TEXTURE_2D, this.whiteTexture);\n        }\n        const numberOfVertices = vertices.length / 3;\n        gl.drawArrays(mode, 0, numberOfVertices);\n    }\n    drawTexture(vertices, texture, color) {\n        if (!this.gl) {\n            return;\n        }\n        this.drawRectangle(vertices, this.gl.TRIANGLE_FAN, color, texture);\n    }\n    drawViewportAndChrome() {\n        if (!this.layerTree) {\n            return;\n        }\n        const viewport = this.layerTree.viewportSize();\n        if (!viewport) {\n            return;\n        }\n        const drawChrome = !Common.Settings.Settings.instance().moduleSetting('frame-viewer-hide-chrome-window').get() &&\n            this.chromeTextures.length >= 3 && this.chromeTextures.indexOf(undefined) < 0;\n        const z = (this.maxDepth + 1) * LayerSpacing;\n        const borderWidth = Math.ceil(ViewportBorderWidth * this.scale);\n        let vertices = [viewport.width, 0, z, viewport.width, viewport.height, z, 0, viewport.height, z, 0, 0, z];\n        if (!this.gl) {\n            return;\n        }\n        this.gl.lineWidth(borderWidth);\n        this.drawRectangle(vertices, drawChrome ? this.gl.LINE_STRIP : this.gl.LINE_LOOP, ViewportBorderColor);\n        if (!drawChrome) {\n            return;\n        }\n        const viewportSize = this.layerTree.viewportSize();\n        if (!viewportSize) {\n            return;\n        }\n        const borderAdjustment = ViewportBorderWidth / 2;\n        const viewportWidth = viewportSize.width + 2 * borderAdjustment;\n        if (this.chromeTextures[0] && this.chromeTextures[2]) {\n            const chromeTextureImage = imageForTexture.get(this.chromeTextures[0]) || { naturalHeight: 0, naturalWidth: 0 };\n            const chromeHeight = chromeTextureImage.naturalHeight;\n            const middleTextureImage = imageForTexture.get(this.chromeTextures[2]) || { naturalHeight: 0, naturalWidth: 0 };\n            const middleFragmentWidth = viewportWidth - chromeTextureImage.naturalWidth - middleTextureImage.naturalWidth;\n            let x = -borderAdjustment;\n            const y = -chromeHeight;\n            for (let i = 0; i < this.chromeTextures.length; ++i) {\n                const texture = this.chromeTextures[i];\n                if (!texture) {\n                    continue;\n                }\n                const image = imageForTexture.get(texture);\n                if (!image) {\n                    continue;\n                }\n                const width = i === 1 /* ChromeTexture.MIDDLE */ ? middleFragmentWidth : image.naturalWidth;\n                if (width < 0 || x + width > viewportWidth) {\n                    break;\n                }\n                vertices = [x, y, z, x + width, y, z, x + width, y + chromeHeight, z, x, y + chromeHeight, z];\n                this.drawTexture(vertices, this.chromeTextures[i]);\n                x += width;\n            }\n        }\n    }\n    drawViewRect(rect) {\n        if (!this.gl) {\n            return;\n        }\n        const vertices = rect.vertices;\n        if (rect.texture) {\n            this.drawTexture(vertices, rect.texture, rect.fillColor || undefined);\n        }\n        else if (rect.fillColor) {\n            this.drawRectangle(vertices, this.gl.TRIANGLE_FAN, rect.fillColor);\n        }\n        this.gl.lineWidth(rect.lineWidth);\n        if (rect.borderColor) {\n            this.drawRectangle(vertices, this.gl.LINE_LOOP, rect.borderColor);\n        }\n    }\n    update() {\n        if (!this.isShowing()) {\n            this.needsUpdate = true;\n            return;\n        }\n        // Debounce into the next frame (double rAF).\n        // Without this the GPU work can pile up without any backpressure.\n        // A single rAF might be fine, but the GPU work here is so heavy, we prefer\n        // the extra breathing room over lower latency\n        if (!this.updateScheduled) {\n            this.updateScheduled = true;\n            requestAnimationFrame(() => requestAnimationFrame(() => {\n                this.updateScheduled = false;\n                this.innerUpdate();\n            }));\n        }\n    }\n    innerUpdate() {\n        if (!this.layerTree || !this.layerTree.root()) {\n            this.failBanner.show(this.contentElement);\n            return;\n        }\n        const gl = this.initGLIfNecessary();\n        if (!gl) {\n            this.failBanner.element.removeChildren();\n            this.failBanner.element.appendChild(this.webglDisabledBanner());\n            this.failBanner.show(this.contentElement);\n            return;\n        }\n        this.failBanner.detach();\n        const viewportWidth = this.canvasElement.width;\n        const viewportHeight = this.canvasElement.height;\n        this.calculateDepthsAndVisibility();\n        this.calculateRects();\n        this.updateTransformAndConstraints();\n        gl.viewport(0, 0, viewportWidth, viewportHeight);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.rects.forEach(this.drawViewRect.bind(this));\n        this.drawViewportAndChrome();\n    }\n    webglDisabledBanner() {\n        const fragment = this.contentElement.ownerDocument.createDocumentFragment();\n        fragment.createChild('div').textContent = i18nString(UIStrings.cantDisplayLayers);\n        fragment.createChild('div').textContent = i18nString(UIStrings.webglSupportIsDisabledInYour);\n        fragment.appendChild(i18n.i18n.getFormatLocalizedString(str_, UIStrings.checkSForPossibleReasons, { PH1: UI.XLink.XLink.create('about:gpu', undefined, undefined, undefined, 'about-gpu') }));\n        return fragment;\n    }\n    selectionFromEventPoint(event) {\n        const mouseEvent = event;\n        if (!this.layerTree) {\n            return null;\n        }\n        let closestIntersectionPoint = Infinity;\n        let closestObject = null;\n        const projectionMatrix = new WebKitCSSMatrix().scale(1, -1, -1).translate(-1, -1, 0).multiply(this.projectionMatrix);\n        const x0 = (mouseEvent.clientX - this.canvasElement.getBoundingClientRect().left) * window.devicePixelRatio;\n        const y0 = -(mouseEvent.clientY - this.canvasElement.getBoundingClientRect().top) * window.devicePixelRatio;\n        function checkIntersection(rect) {\n            if (!rect.relatedObject) {\n                return;\n            }\n            const t = rect.intersectWithLine(projectionMatrix, x0, y0);\n            if (t && t < closestIntersectionPoint) {\n                closestIntersectionPoint = t;\n                closestObject = rect.relatedObject;\n            }\n        }\n        this.rects.forEach(checkIntersection);\n        return closestObject;\n    }\n    createVisibilitySetting(caption, name, value, toolbar) {\n        const setting = Common.Settings.Settings.instance().createSetting(name, value);\n        setting.setTitle(caption);\n        setting.addChangeListener(this.update, this);\n        toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(setting));\n        return setting;\n    }\n    initToolbar() {\n        this.panelToolbar = this.transformController.toolbar();\n        this.contentElement.appendChild(this.panelToolbar.element);\n        this.showPaintsSetting = this.createVisibilitySetting(i18nString(UIStrings.paints), 'frame-viewer-show-paints', false, this.panelToolbar);\n        this.showSlowScrollRectsSetting = this.createVisibilitySetting(i18nString(UIStrings.slowScrollRects), 'frame-viewer-show-slow-scroll-rects', true, this.panelToolbar);\n        this.showPaintsSetting.addChangeListener(this.updatePaints, this);\n        Common.Settings.Settings.instance()\n            .moduleSetting('frame-viewer-hide-chrome-window')\n            .addChangeListener(this.update, this);\n    }\n    onContextMenu(event) {\n        const contextMenu = new UI.ContextMenu.ContextMenu(event);\n        contextMenu.defaultSection().appendItem(i18nString(UIStrings.resetView), () => this.transformController.resetAndNotify(), {\n            jslogContext: 'layers.3d-center',\n        });\n        const selection = this.selectionFromEventPoint(event);\n        if (selection && selection.type() === \"Snapshot\" /* Type.SNAPSHOT */) {\n            contextMenu.defaultSection().appendItem(i18nString(UIStrings.showPaintProfiler), () => this.dispatchEventToListeners(\"PaintProfilerRequested\" /* Events.PAINT_PROFILER_REQUESTED */, selection), {\n                jslogContext: 'layers.paint-profiler',\n            });\n        }\n        this.layerViewHost.showContextMenu(contextMenu, selection);\n    }\n    onMouseMove(event) {\n        const mouseEvent = event;\n        if (mouseEvent.which) {\n            return;\n        }\n        this.layerViewHost.hoverObject(this.selectionFromEventPoint(event));\n    }\n    onMouseDown(event) {\n        const mouseEvent = event;\n        this.mouseDownX = mouseEvent.clientX;\n        this.mouseDownY = mouseEvent.clientY;\n    }\n    onMouseUp(event) {\n        const mouseEvent = event;\n        const maxDistanceInPixels = 6;\n        if (this.mouseDownX && Math.abs(mouseEvent.clientX - this.mouseDownX) < maxDistanceInPixels &&\n            Math.abs(mouseEvent.clientY - (this.mouseDownY || 0)) < maxDistanceInPixels) {\n            this.canvasElement.focus();\n            this.layerViewHost.selectObject(this.selectionFromEventPoint(event));\n        }\n        delete this.mouseDownX;\n        delete this.mouseDownY;\n    }\n    onDoubleClick(event) {\n        const selection = this.selectionFromEventPoint(event);\n        if (selection && (selection.type() === \"Snapshot\" /* Type.SNAPSHOT */ || selection.layer())) {\n            this.dispatchEventToListeners(\"PaintProfilerRequested\" /* Events.PAINT_PROFILER_REQUESTED */, selection);\n        }\n        event.stopPropagation();\n    }\n    updatePaints() {\n        if (this.showPaints()) {\n            this.textureManager.setLayerTree(this.layerTree);\n            this.textureManager.forceUpdate();\n        }\n        else {\n            this.textureManager.reset();\n        }\n        this.update();\n    }\n    showPaints() {\n        return this.showPaintsSetting ? this.showPaintsSetting.get() : false;\n    }\n}\nexport var OutlineType;\n(function (OutlineType) {\n    /* eslint-disable @typescript-eslint/naming-convention -- Used by web_tests. */\n    OutlineType[\"Hovered\"] = \"hovered\";\n    OutlineType[\"Selected\"] = \"selected\";\n    /* eslint-enable @typescript-eslint/naming-convention */\n})(OutlineType || (OutlineType = {}));\nexport const FragmentShader = '' +\n    'precision mediump float;\\n' +\n    'varying vec4 vColor;\\n' +\n    'varying vec2 vTextureCoord;\\n' +\n    'uniform sampler2D uSampler;\\n' +\n    'void main(void)\\n' +\n    '{\\n' +\n    '    gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t)) * vColor;\\n' +\n    '}';\nexport const VertexShader = '' +\n    'attribute vec3 aVertexPosition;\\n' +\n    'attribute vec2 aTextureCoord;\\n' +\n    'attribute vec4 aVertexColor;\\n' +\n    'uniform mat4 uPMatrix;\\n' +\n    'varying vec2 vTextureCoord;\\n' +\n    'varying vec4 vColor;\\n' +\n    'void main(void)\\n' +\n    '{\\n' +\n    'gl_Position = uPMatrix * vec4(aVertexPosition, 1.0);\\n' +\n    'vColor = aVertexColor;\\n' +\n    'vTextureCoord = aTextureCoord;\\n' +\n    '}';\nexport const HoveredBorderColor = [0, 0, 255, 1];\nexport const SelectedBorderColor = [0, 255, 0, 1];\nexport const BorderColor = [0, 0, 0, 1];\nexport const ViewportBorderColor = [160, 160, 160, 1];\nexport const ScrollRectBackgroundColor = [178, 100, 100, 0.6];\nexport const HoveredImageMaskColor = [200, 200, 255, 1];\nexport const BorderWidth = 1;\nexport const SelectedBorderWidth = 2;\nexport const ViewportBorderWidth = 3;\nexport const LayerSpacing = 20;\nexport const ScrollRectSpacing = 4;\nexport class LayerTextureManager {\n    textureUpdatedCallback;\n    throttler;\n    scale;\n    active;\n    queue;\n    tilesByLayer;\n    gl;\n    constructor(textureUpdatedCallback) {\n        this.textureUpdatedCallback = textureUpdatedCallback;\n        this.throttler = new Common.Throttler.Throttler(0);\n        this.scale = 0;\n        this.active = false;\n        this.reset();\n    }\n    static createTextureForImage(gl, image) {\n        if (!gl) {\n            throw new Error('WebGLRenderingContext not provided');\n        }\n        const texture = gl.createTexture();\n        if (!texture) {\n            throw new Error('Unable to create texture');\n        }\n        imageForTexture.set(texture, image);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        return texture;\n    }\n    reset() {\n        if (this.tilesByLayer) {\n            this.setLayerTree(null);\n        }\n        this.tilesByLayer = new Map();\n        this.queue = [];\n    }\n    setContext(glContext) {\n        this.gl = glContext;\n        if (this.scale) {\n            this.updateTextures();\n        }\n    }\n    suspend() {\n        this.active = false;\n    }\n    resume() {\n        this.active = true;\n        if (this.queue.length) {\n            void this.update();\n        }\n    }\n    setLayerTree(layerTree) {\n        const newLayers = new Set();\n        const oldLayers = Array.from(this.tilesByLayer.keys());\n        if (layerTree) {\n            layerTree.forEachLayer(layer => {\n                if (!layer.drawsContent()) {\n                    return;\n                }\n                newLayers.add(layer);\n                if (!this.tilesByLayer.has(layer)) {\n                    this.tilesByLayer.set(layer, []);\n                    this.layerNeedsUpdate(layer);\n                }\n            });\n        }\n        if (!oldLayers.length) {\n            this.forceUpdate();\n        }\n        for (const layer of oldLayers) {\n            if (newLayers.has(layer)) {\n                continue;\n            }\n            const tiles = this.tilesByLayer.get(layer);\n            if (tiles) {\n                tiles.forEach(tile => tile.dispose());\n            }\n            this.tilesByLayer.delete(layer);\n        }\n    }\n    setSnapshotsForLayer(layer, snapshots) {\n        const oldSnapshotsToTiles = new Map((this.tilesByLayer.get(layer) || []).map(tile => [tile.snapshot, tile]));\n        const newTiles = [];\n        const reusedTiles = [];\n        for (const snapshot of snapshots) {\n            const oldTile = oldSnapshotsToTiles.get(snapshot.snapshot);\n            if (oldTile) {\n                reusedTiles.push(oldTile);\n                oldSnapshotsToTiles.delete(snapshot.snapshot);\n            }\n            else {\n                newTiles.push(new Tile(snapshot));\n            }\n        }\n        this.tilesByLayer.set(layer, reusedTiles.concat(newTiles));\n        for (const tile of oldSnapshotsToTiles.values()) {\n            tile.dispose();\n        }\n        const gl = this.gl;\n        if (!gl || !this.scale) {\n            return Promise.resolve();\n        }\n        return Promise.all(newTiles.map(tile => tile.update(gl, this.scale))).then(this.textureUpdatedCallback);\n    }\n    setScale(scale) {\n        if (this.scale && this.scale >= scale) {\n            return;\n        }\n        this.scale = scale;\n        this.updateTextures();\n    }\n    tilesForLayer(layer) {\n        return this.tilesByLayer.get(layer) || [];\n    }\n    layerNeedsUpdate(layer) {\n        if (this.queue.indexOf(layer) < 0) {\n            this.queue.push(layer);\n        }\n        if (this.active) {\n            void this.throttler.schedule(this.update.bind(this));\n        }\n    }\n    forceUpdate() {\n        this.queue.forEach(layer => this.updateLayer(layer));\n        this.queue = [];\n        void this.update();\n    }\n    update() {\n        const layer = this.queue.shift();\n        if (!layer) {\n            return Promise.resolve();\n        }\n        if (this.queue.length) {\n            void this.throttler.schedule(this.update.bind(this));\n        }\n        return this.updateLayer(layer);\n    }\n    updateLayer(layer) {\n        return Promise.all(layer.snapshots())\n            .then(snapshots => this.setSnapshotsForLayer(layer, snapshots.filter(snapshot => snapshot !== null)));\n    }\n    updateTextures() {\n        if (!this.gl) {\n            return;\n        }\n        if (!this.scale) {\n            return;\n        }\n        for (const tiles of this.tilesByLayer.values()) {\n            for (const tile of tiles) {\n                const promise = tile.updateScale(this.gl, this.scale);\n                if (promise) {\n                    void promise.then(this.textureUpdatedCallback);\n                }\n            }\n        }\n    }\n}\nexport class Rectangle {\n    relatedObject;\n    lineWidth;\n    borderColor;\n    fillColor;\n    texture;\n    vertices;\n    constructor(relatedObject) {\n        this.relatedObject = relatedObject;\n        this.lineWidth = 1;\n        this.borderColor = null;\n        this.fillColor = null;\n        this.texture = null;\n    }\n    setVertices(quad, z) {\n        this.vertices = [quad[0], quad[1], z, quad[2], quad[3], z, quad[4], quad[5], z, quad[6], quad[7], z];\n    }\n    /**\n     * Finds coordinates of point on layer quad, having offsets (ratioX * width) and (ratioY * height)\n     * from the left corner of the initial layer rect, where width and heigth are layer bounds.\n     */\n    calculatePointOnQuad(quad, ratioX, ratioY) {\n        const x0 = quad[0];\n        const y0 = quad[1];\n        const x1 = quad[2];\n        const y1 = quad[3];\n        const x2 = quad[4];\n        const y2 = quad[5];\n        const x3 = quad[6];\n        const y3 = quad[7];\n        // Point on the first quad side clockwise\n        const firstSidePointX = x0 + ratioX * (x1 - x0);\n        const firstSidePointY = y0 + ratioX * (y1 - y0);\n        // Point on the third quad side clockwise\n        const thirdSidePointX = x3 + ratioX * (x2 - x3);\n        const thirdSidePointY = y3 + ratioX * (y2 - y3);\n        const x = firstSidePointX + ratioY * (thirdSidePointX - firstSidePointX);\n        const y = firstSidePointY + ratioY * (thirdSidePointY - firstSidePointY);\n        return [x, y];\n    }\n    calculateVerticesFromRect(layer, rect, z) {\n        const quad = layer.quad();\n        const rx1 = rect.x / layer.width();\n        const rx2 = (rect.x + rect.width) / layer.width();\n        const ry1 = rect.y / layer.height();\n        const ry2 = (rect.y + rect.height) / layer.height();\n        const rectQuad = this.calculatePointOnQuad(quad, rx1, ry1)\n            .concat(this.calculatePointOnQuad(quad, rx2, ry1))\n            .concat(this.calculatePointOnQuad(quad, rx2, ry2))\n            .concat(this.calculatePointOnQuad(quad, rx1, ry2));\n        this.setVertices(rectQuad, z);\n    }\n    /**\n     * Intersects quad with given transform matrix and line l(t) = (x0, y0, t)\n     */\n    intersectWithLine(matrix, x0, y0) {\n        let i;\n        // Vertices of the quad with transform matrix applied\n        const points = [];\n        for (i = 0; i < 4; ++i) {\n            points[i] = UI.Geometry.multiplyVectorByMatrixAndNormalize(new UI.Geometry.Vector(this.vertices[i * 3], this.vertices[i * 3 + 1], this.vertices[i * 3 + 2]), matrix);\n        }\n        // Calculating quad plane normal\n        const normal = UI.Geometry.crossProduct(UI.Geometry.subtract(points[1], points[0]), UI.Geometry.subtract(points[2], points[1]));\n        // General form of the equation of the quad plane: A * x + B * y + C * z + D = 0\n        const A = normal.x;\n        const B = normal.y;\n        const C = normal.z;\n        const D = -(A * points[0].x + B * points[0].y + C * points[0].z);\n        // Finding t from the equation\n        const t = -(D + A * x0 + B * y0) / C;\n        // Point of the intersection\n        const pt = new UI.Geometry.Vector(x0, y0, t);\n        // Vectors from the intersection point to vertices of the quad\n        const tVects = points.map(UI.Geometry.subtract.bind(null, pt));\n        // Intersection point lies inside of the polygon if scalar products of normal of the plane and\n        // cross products of successive tVects are all nonstrictly above or all nonstrictly below zero\n        for (i = 0; i < tVects.length; ++i) {\n            const product = UI.Geometry.scalarProduct(normal, UI.Geometry.crossProduct(tVects[i], tVects[(i + 1) % tVects.length]));\n            if (product < 0) {\n                return undefined;\n            }\n        }\n        return t;\n    }\n}\nexport class Tile {\n    snapshot;\n    rect;\n    scale;\n    texture;\n    gl;\n    constructor(snapshotWithRect) {\n        this.snapshot = snapshotWithRect.snapshot;\n        this.rect = snapshotWithRect.rect;\n        this.scale = 0;\n        this.texture = null;\n    }\n    dispose() {\n        this.snapshot.release();\n        if (this.texture) {\n            this.gl.deleteTexture(this.texture);\n            this.texture = null;\n        }\n    }\n    updateScale(glContext, scale) {\n        if (this.texture && this.scale >= scale) {\n            return null;\n        }\n        return this.update(glContext, scale);\n    }\n    async update(glContext, scale) {\n        this.gl = glContext;\n        this.scale = scale;\n        const imageURL = await this.snapshot.replay(scale);\n        const image = imageURL ? await UI.UIUtils.loadImage(imageURL) : null;\n        this.texture = image ? LayerTextureManager.createTextureForImage(glContext, image) : null;\n    }\n}\n//# sourceMappingURL=Layers3DView.js.map","// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// IMPORTANT: this file is auto generated. Please do not edit this file.\n/* istanbul ignore file */\nconst styles = new CSSStyleSheet();\nstyles.replaceSync(\n`/*\n * Copyright 2016 The Chromium Authors. All rights reserved.\n * Use of this source code is governed by a BSD-style license that can be\n * found in the LICENSE file.\n */\n\n.paint-profiler-overview {\n  background-color: var(--sys-color-cdt-base-container);\n}\n\n.paint-profiler-canvas-container {\n  flex: auto;\n  position: relative;\n}\n\n.paint-profiler-pie-chart {\n  width: 60px !important; /* stylelint-disable-line declaration-no-important */\n  height: 60px !important; /* stylelint-disable-line declaration-no-important */\n  padding: 2px;\n  overflow: hidden;\n  font-size: 10px;\n}\n\n.paint-profiler-canvas-container canvas {\n  z-index: 200;\n  background-color: var(--sys-color-cdt-base-container);\n  opacity: 95%;\n  height: 100%;\n  width: 100%;\n}\n\n.paint-profiler-canvas-container .overview-grid-window-resizer {\n  z-index: 2000;\n}\n\n/*# sourceURL=paintProfiler.css */\n`);\n\nexport default styles;\n","/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport paintProfilerStyles from './paintProfiler.css.js';\nconst UIStrings = {\n    /**\n     *@description Text to indicate the progress of a profile\n     */\n    profiling: 'Profiling…',\n    /**\n     *@description Text in Paint Profiler View of the Layers panel\n     */\n    shapes: 'Shapes',\n    /**\n     *@description Text in Paint Profiler View of the Layers panel\n     */\n    bitmap: 'Bitmap',\n    /**\n     *@description Generic label for any text\n     */\n    text: 'Text',\n    /**\n     *@description Text in Paint Profiler View of the Layers panel\n     */\n    misc: 'Misc',\n    /**\n     *@description ARIA label for a pie chart that shows the results of the paint profiler\n     */\n    profilingResults: 'Profiling results',\n    /**\n     *@description Label for command log tree in the Profiler tab\n     */\n    commandLog: 'Command Log',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/PaintProfilerView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet categories = null;\nlet logItemCategoriesMap = null;\nexport class PaintProfilerView extends Common.ObjectWrapper.eventMixin(UI.Widget.HBox) {\n    canvasContainer;\n    progressBanner;\n    pieChart;\n    showImageCallback;\n    canvas;\n    context;\n    selectionWindowInternal;\n    innerBarWidth;\n    minBarHeight;\n    barPaddingWidth;\n    outerBarWidth;\n    pendingScale;\n    scale;\n    samplesPerBar;\n    log;\n    snapshot;\n    logCategories;\n    profiles;\n    updateImageTimer;\n    constructor(showImageCallback) {\n        super(true);\n        this.contentElement.classList.add('paint-profiler-overview');\n        this.canvasContainer = this.contentElement.createChild('div', 'paint-profiler-canvas-container');\n        this.progressBanner = this.contentElement.createChild('div', 'full-widget-dimmed-banner hidden');\n        this.progressBanner.textContent = i18nString(UIStrings.profiling);\n        this.pieChart = new PerfUI.PieChart.PieChart();\n        this.populatePieChart(0, []);\n        this.pieChart.classList.add('paint-profiler-pie-chart');\n        this.contentElement.appendChild(this.pieChart);\n        this.showImageCallback = showImageCallback;\n        this.canvas = this.canvasContainer.createChild('canvas', 'fill');\n        this.context = this.canvas.getContext('2d');\n        this.selectionWindowInternal = new PerfUI.OverviewGrid.Window(this.canvasContainer);\n        this.selectionWindowInternal.addEventListener(\"WindowChanged\" /* PerfUI.OverviewGrid.Events.WINDOW_CHANGED */, this.onWindowChanged, this);\n        this.innerBarWidth = 4 * window.devicePixelRatio;\n        this.minBarHeight = window.devicePixelRatio;\n        this.barPaddingWidth = 2 * window.devicePixelRatio;\n        this.outerBarWidth = this.innerBarWidth + this.barPaddingWidth;\n        this.pendingScale = 1;\n        this.scale = this.pendingScale;\n        this.samplesPerBar = 0;\n        this.log = [];\n        this.reset();\n    }\n    static categories() {\n        if (!categories) {\n            categories = {\n                shapes: new PaintProfilerCategory('shapes', i18nString(UIStrings.shapes), 'rgb(255, 161, 129)'),\n                bitmap: new PaintProfilerCategory('bitmap', i18nString(UIStrings.bitmap), 'rgb(136, 196, 255)'),\n                text: new PaintProfilerCategory('text', i18nString(UIStrings.text), 'rgb(180, 255, 137)'),\n                misc: new PaintProfilerCategory('misc', i18nString(UIStrings.misc), 'rgb(206, 160, 255)'),\n            };\n        }\n        return categories;\n    }\n    static initLogItemCategories() {\n        if (!logItemCategoriesMap) {\n            const categories = PaintProfilerView.categories();\n            const logItemCategories = {};\n            logItemCategories['Clear'] = categories['misc'];\n            logItemCategories['DrawPaint'] = categories['misc'];\n            logItemCategories['DrawData'] = categories['misc'];\n            logItemCategories['SetMatrix'] = categories['misc'];\n            logItemCategories['PushCull'] = categories['misc'];\n            logItemCategories['PopCull'] = categories['misc'];\n            logItemCategories['Translate'] = categories['misc'];\n            logItemCategories['Scale'] = categories['misc'];\n            logItemCategories['Concat'] = categories['misc'];\n            logItemCategories['Restore'] = categories['misc'];\n            logItemCategories['SaveLayer'] = categories['misc'];\n            logItemCategories['Save'] = categories['misc'];\n            logItemCategories['BeginCommentGroup'] = categories['misc'];\n            logItemCategories['AddComment'] = categories['misc'];\n            logItemCategories['EndCommentGroup'] = categories['misc'];\n            logItemCategories['ClipRect'] = categories['misc'];\n            logItemCategories['ClipRRect'] = categories['misc'];\n            logItemCategories['ClipPath'] = categories['misc'];\n            logItemCategories['ClipRegion'] = categories['misc'];\n            logItemCategories['DrawPoints'] = categories['shapes'];\n            logItemCategories['DrawRect'] = categories['shapes'];\n            logItemCategories['DrawOval'] = categories['shapes'];\n            logItemCategories['DrawRRect'] = categories['shapes'];\n            logItemCategories['DrawPath'] = categories['shapes'];\n            logItemCategories['DrawVertices'] = categories['shapes'];\n            logItemCategories['DrawDRRect'] = categories['shapes'];\n            logItemCategories['DrawBitmap'] = categories['bitmap'];\n            logItemCategories['DrawBitmapRectToRect'] = categories['bitmap'];\n            logItemCategories['DrawBitmapMatrix'] = categories['bitmap'];\n            logItemCategories['DrawBitmapNine'] = categories['bitmap'];\n            logItemCategories['DrawSprite'] = categories['bitmap'];\n            logItemCategories['DrawPicture'] = categories['bitmap'];\n            logItemCategories['DrawText'] = categories['text'];\n            logItemCategories['DrawPosText'] = categories['text'];\n            logItemCategories['DrawPosTextH'] = categories['text'];\n            logItemCategories['DrawTextOnPath'] = categories['text'];\n            logItemCategoriesMap = logItemCategories;\n        }\n        return logItemCategoriesMap;\n    }\n    static categoryForLogItem(logItem) {\n        const method = Platform.StringUtilities.toTitleCase(logItem.method);\n        const logItemCategories = PaintProfilerView.initLogItemCategories();\n        let result = logItemCategories[method];\n        if (!result) {\n            result = PaintProfilerView.categories()['misc'];\n            logItemCategories[method] = result;\n        }\n        return result;\n    }\n    onResize() {\n        this.update();\n    }\n    async setSnapshotAndLog(snapshot, log, clipRect) {\n        this.reset();\n        this.snapshot = snapshot;\n        if (this.snapshot) {\n            this.snapshot.addReference();\n        }\n        this.log = log;\n        this.logCategories = this.log.map(PaintProfilerView.categoryForLogItem);\n        if (!snapshot) {\n            this.update();\n            this.populatePieChart(0, []);\n            this.selectionWindowInternal.setEnabled(false);\n            return;\n        }\n        this.selectionWindowInternal.setEnabled(true);\n        this.progressBanner.classList.remove('hidden');\n        this.updateImage();\n        const profiles = await snapshot.profile(clipRect);\n        this.progressBanner.classList.add('hidden');\n        this.profiles = profiles;\n        this.update();\n        this.updatePieChart();\n    }\n    setScale(scale) {\n        const needsUpdate = scale > this.scale;\n        const predictiveGrowthFactor = 2;\n        this.pendingScale = Math.min(1, scale * predictiveGrowthFactor);\n        if (needsUpdate && this.snapshot) {\n            this.updateImage();\n        }\n    }\n    update() {\n        this.canvas.width = this.canvasContainer.clientWidth * window.devicePixelRatio;\n        this.canvas.height = this.canvasContainer.clientHeight * window.devicePixelRatio;\n        this.samplesPerBar = 0;\n        if (!this.profiles || !this.profiles.length || !this.logCategories) {\n            return;\n        }\n        const maxBars = Math.floor((this.canvas.width - 2 * this.barPaddingWidth) / this.outerBarWidth);\n        const sampleCount = this.log.length;\n        this.samplesPerBar = Math.ceil(sampleCount / maxBars);\n        let maxBarTime = 0;\n        const barTimes = [];\n        const barHeightByCategory = [];\n        let heightByCategory = {};\n        for (let i = 0, lastBarIndex = 0, lastBarTime = 0; i < sampleCount;) {\n            let categoryName = (this.logCategories[i] && this.logCategories[i].name) || 'misc';\n            const sampleIndex = this.log[i].commandIndex;\n            for (let row = 0; row < this.profiles.length; row++) {\n                const sample = this.profiles[row][sampleIndex];\n                lastBarTime += sample;\n                heightByCategory[categoryName] = (heightByCategory[categoryName] || 0) + sample;\n            }\n            ++i;\n            if (i - lastBarIndex === this.samplesPerBar || i === sampleCount) {\n                // Normalize by total number of samples accumulated.\n                const factor = this.profiles.length * (i - lastBarIndex);\n                lastBarTime /= factor;\n                for (categoryName in heightByCategory) {\n                    heightByCategory[categoryName] /= factor;\n                }\n                barTimes.push(lastBarTime);\n                barHeightByCategory.push(heightByCategory);\n                if (lastBarTime > maxBarTime) {\n                    maxBarTime = lastBarTime;\n                }\n                lastBarTime = 0;\n                heightByCategory = {};\n                lastBarIndex = i;\n            }\n        }\n        const paddingHeight = 4 * window.devicePixelRatio;\n        const scale = (this.canvas.height - paddingHeight - this.minBarHeight) / maxBarTime;\n        for (let i = 0; i < barTimes.length; ++i) {\n            for (const categoryName in barHeightByCategory[i]) {\n                barHeightByCategory[i][categoryName] *= (barTimes[i] * scale + this.minBarHeight) / barTimes[i];\n            }\n            this.renderBar(i, barHeightByCategory[i]);\n        }\n    }\n    renderBar(index, heightByCategory) {\n        const categories = PaintProfilerView.categories();\n        let currentHeight = 0;\n        const x = this.barPaddingWidth + index * this.outerBarWidth;\n        for (const categoryName in categories) {\n            if (!heightByCategory[categoryName]) {\n                continue;\n            }\n            currentHeight += heightByCategory[categoryName];\n            const y = this.canvas.height - currentHeight;\n            this.context.fillStyle = categories[categoryName].color;\n            this.context.fillRect(x, y, this.innerBarWidth, heightByCategory[categoryName]);\n        }\n    }\n    onWindowChanged() {\n        this.dispatchEventToListeners(\"WindowChanged\" /* Events.WINDOW_CHANGED */);\n        this.updatePieChart();\n        if (this.updateImageTimer) {\n            return;\n        }\n        this.updateImageTimer = window.setTimeout(this.updateImage.bind(this), 100);\n    }\n    updatePieChart() {\n        const { total, slices } = this.calculatePieChart();\n        this.populatePieChart(total, slices);\n    }\n    calculatePieChart() {\n        const window = this.selectionWindow();\n        if (!this.profiles || !this.profiles.length || !window) {\n            return { total: 0, slices: [] };\n        }\n        let totalTime = 0;\n        const timeByCategory = {};\n        for (let i = window.left; i < window.right; ++i) {\n            const logEntry = this.log[i];\n            const category = PaintProfilerView.categoryForLogItem(logEntry);\n            timeByCategory[category.color] = timeByCategory[category.color] || 0;\n            for (let j = 0; j < this.profiles.length; ++j) {\n                const time = this.profiles[j][logEntry.commandIndex];\n                totalTime += time;\n                timeByCategory[category.color] += time;\n            }\n        }\n        const slices = [];\n        for (const color in timeByCategory) {\n            slices.push({ value: timeByCategory[color] / this.profiles.length, color, title: '' });\n        }\n        return { total: totalTime / this.profiles.length, slices };\n    }\n    populatePieChart(total, slices) {\n        this.pieChart.data = {\n            chartName: i18nString(UIStrings.profilingResults),\n            size: 55,\n            formatter: this.formatPieChartTime.bind(this),\n            showLegend: false,\n            total,\n            slices,\n        };\n    }\n    formatPieChartTime(value) {\n        return i18n.TimeUtilities.millisToString(value * 1000, true);\n    }\n    selectionWindow() {\n        if (!this.log) {\n            return null;\n        }\n        const screenLeft = (this.selectionWindowInternal.windowLeft || 0) * this.canvas.width;\n        const screenRight = (this.selectionWindowInternal.windowRight || 0) * this.canvas.width;\n        const barLeft = Math.floor(screenLeft / this.outerBarWidth);\n        const barRight = Math.floor((screenRight + this.innerBarWidth - this.barPaddingWidth / 2) / this.outerBarWidth);\n        const stepLeft = Platform.NumberUtilities.clamp(barLeft * this.samplesPerBar, 0, this.log.length - 1);\n        const stepRight = Platform.NumberUtilities.clamp(barRight * this.samplesPerBar, 0, this.log.length);\n        return { left: stepLeft, right: stepRight };\n    }\n    updateImage() {\n        delete this.updateImageTimer;\n        let left;\n        let right;\n        const window = this.selectionWindow();\n        if (this.profiles && this.profiles.length && window) {\n            left = this.log[window.left].commandIndex;\n            right = this.log[window.right - 1].commandIndex;\n        }\n        const scale = this.pendingScale;\n        if (!this.snapshot) {\n            return;\n        }\n        void this.snapshot.replay(scale, left, right).then(image => {\n            if (!image) {\n                return;\n            }\n            this.scale = scale;\n            this.showImageCallback(image);\n        });\n    }\n    reset() {\n        if (this.snapshot) {\n            this.snapshot.release();\n        }\n        this.snapshot = null;\n        this.profiles = null;\n        this.selectionWindowInternal.reset();\n        this.selectionWindowInternal.setEnabled(false);\n    }\n    wasShown() {\n        super.wasShown();\n        this.registerCSSFiles([paintProfilerStyles]);\n    }\n}\nexport class PaintProfilerCommandLogView extends UI.ThrottledWidget.ThrottledWidget {\n    treeOutline;\n    log;\n    treeItemCache;\n    selectionWindow;\n    constructor() {\n        super();\n        this.setMinimumSize(100, 25);\n        this.element.classList.add('overflow-auto');\n        this.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n        UI.ARIAUtils.setLabel(this.treeOutline.contentElement, i18nString(UIStrings.commandLog));\n        this.element.appendChild(this.treeOutline.element);\n        this.setDefaultFocusedElement(this.treeOutline.contentElement);\n        this.log = [];\n        this.treeItemCache = new Map();\n    }\n    setCommandLog(log) {\n        this.log = log;\n        this.updateWindow({ left: 0, right: this.log.length });\n    }\n    appendLogItem(logItem) {\n        let treeElement = this.treeItemCache.get(logItem);\n        if (!treeElement) {\n            treeElement = new LogTreeElement(this, logItem);\n            this.treeItemCache.set(logItem, treeElement);\n        }\n        else if (treeElement.parent) {\n            return;\n        }\n        this.treeOutline.appendChild(treeElement);\n    }\n    updateWindow(selectionWindow) {\n        this.selectionWindow = selectionWindow;\n        this.update();\n    }\n    doUpdate() {\n        if (!this.selectionWindow || !this.log.length) {\n            this.treeOutline.removeChildren();\n            return Promise.resolve();\n        }\n        const root = this.treeOutline.rootElement();\n        for (;;) {\n            const child = root.firstChild();\n            if (!child || child.logItem.commandIndex >= this.selectionWindow.left) {\n                break;\n            }\n            root.removeChildAtIndex(0);\n        }\n        for (;;) {\n            const child = root.lastChild();\n            if (!child || child.logItem.commandIndex < this.selectionWindow.right) {\n                break;\n            }\n            root.removeChildAtIndex(root.children().length - 1);\n        }\n        for (let i = this.selectionWindow.left, right = this.selectionWindow.right; i < right; ++i) {\n            this.appendLogItem(this.log[i]);\n        }\n        return Promise.resolve();\n    }\n}\nexport class LogTreeElement extends UI.TreeOutline.TreeElement {\n    logItem;\n    ownerView;\n    filled;\n    constructor(ownerView, logItem) {\n        super('', Boolean(logItem.params));\n        this.logItem = logItem;\n        this.ownerView = ownerView;\n        this.filled = false;\n    }\n    onattach() {\n        this.update();\n    }\n    async onpopulate() {\n        for (const param in this.logItem.params) {\n            LogPropertyTreeElement.appendLogPropertyItem(this, param, this.logItem.params[param]);\n        }\n    }\n    paramToString(param, name) {\n        if (typeof param !== 'object') {\n            return typeof param === 'string' && param.length > 100 ? name : JSON.stringify(param);\n        }\n        let str = '';\n        let keyCount = 0;\n        for (const key in param) {\n            const paramKey = param[key];\n            if (++keyCount > 4 || paramKey === 'object' || (paramKey === 'string' && paramKey.length > 100)) {\n                return name;\n            }\n            if (str) {\n                str += ', ';\n            }\n            str += paramKey;\n        }\n        return str;\n    }\n    paramsToString(params) {\n        let str = '';\n        for (const key in params) {\n            if (str) {\n                str += ', ';\n            }\n            str += this.paramToString(params[key], key);\n        }\n        return str;\n    }\n    update() {\n        const title = document.createDocumentFragment();\n        UI.UIUtils.createTextChild(title, this.logItem.method + '(' + this.paramsToString(this.logItem.params) + ')');\n        this.title = title;\n    }\n}\nexport class LogPropertyTreeElement extends UI.TreeOutline.TreeElement {\n    property;\n    constructor(property) {\n        super();\n        this.property = property;\n    }\n    static appendLogPropertyItem(element, name, value) {\n        const treeElement = new LogPropertyTreeElement({ name, value });\n        element.appendChild(treeElement);\n        if (value && typeof value === 'object') {\n            for (const property in value) {\n                LogPropertyTreeElement.appendLogPropertyItem(treeElement, property, value[property]);\n            }\n        }\n    }\n    onattach() {\n        const title = document.createDocumentFragment();\n        const nameElement = title.createChild('span', 'name');\n        nameElement.textContent = this.property.name;\n        const separatorElement = title.createChild('span', 'separator');\n        separatorElement.textContent = ': ';\n        if (this.property.value === null || typeof this.property.value !== 'object') {\n            const valueElement = title.createChild('span', 'value');\n            valueElement.textContent = JSON.stringify(this.property.value);\n            valueElement.classList.add('cm-js-' + (this.property.value === null ? 'null' : typeof this.property.value));\n        }\n        this.title = title;\n    }\n}\nexport class PaintProfilerCategory {\n    name;\n    title;\n    color;\n    constructor(name, title, color) {\n        this.name = name;\n        this.title = title;\n        this.color = color;\n    }\n}\n//# sourceMappingURL=PaintProfilerView.js.map"],"names":["StickyPositionConstraint","#stickyBoxRectInternal","#containingBlockRectInternal","#nearestLayerShiftingStickyBoxInternal","#nearestLayerShiftingContainingBlockInternal","layerTree","constraint","LayerTreeBase","#targetInternal","#domModel","#rootInternal","#contentRootInternal","#backendNodeIdToNodeInternal","#viewportSizeInternal","target","DOMModel","root","contentRoot","callback","id","requestedNodeIds","nodesMap","nodeId","viewportSize","styles","UIStrings","str_","i18n.i18n.registerUIStrings","i18nString","i18n.i18n.getLocalizedString","Selection","type","layer","a","b","_other","LayerSelection","other","ScrollRectSelection","scrollRectIndex","SnapshotSelection","snapshot","LayerViewHost","Common.Settings.Settings","layerView","snapshotLayers","selectedLayer","hoveredLayer","view","selection","contextMenu","node","SDK.OverlayModel.OverlayModel","i18nLazyString","i18n.i18n.getLazilyComputedLocalizedString","LayerDetailsView","Common.ObjectWrapper.eventMixin","UI.Widget.Widget","layerViewHost","VisualLogging.pane","UI.EmptyWidget.EmptyWidget","_selection","_layerTree","layerDetailsViewStyles","index","event","snapshotSelection","scrollRect","UI.UIUtils.createTextChild","element","slowScrollRectNames","VisualLogging.action","title","name","child","stickyBoxRect","stickyBoxRectElement","containingBlockRect","containingBlockRectElement","Platform.NumberUtilities.bytesToString","UI.ARIAUtils.markAsLink","tr","titleCell","compositingReasons","list","compositingReason","LayerTreeOutline","UI.TreeOutline.TreeOutline","UI.TreeOutline.TreeOutlineInShadow","UI.ARIAUtils.setLabel","layerToTreeElement","showInternalLayers","seenLayers","updateLayer","parentLayer","parent","LayerTreeElement","oldSelection","rootElement","nextNode","elementToSelect","UI.ContextMenu.ContextMenu","UI.TreeOutline.TreeElement","tree","details","hovered","TransformController","Common.ObjectWrapper.ObjectWrapper","disableRotate","UI.UIUtils.installDragHandle","UI.Toolbar.Toolbar","VisualLogging.toolbar","panModeButton","UI.Toolbar.ToolbarToggle","rotateModeButton","resetButton","UI.Toolbar.ToolbarButton","UI.ShortcutRegistry.ShortcutRegistry","mode","minScale","maxScale","Platform.NumberUtilities.clamp","minX","maxX","minY","maxY","scaleFactor","x","y","offsetX","offsetY","rotateX","rotateY","zoomFactor","xMultiplier","yMultiplier","wheelZoomSpeed","mouseEvent","clientX","clientY","vertexPositionAttributes","vertexColorAttributes","textureCoordAttributes","uniformMatrixLocations","uniformSamplerLocations","imageForTexture","Layers3DView","UI.Widget.VBox","VisualLogging.canvas","LayerTextureManager","imageURL","UI.UIUtils.loadImage","image","texture","layers3DViewStyles","OutlineType","snapshotWithRect","promise","canvas","gl","script","shader","FragmentShader","VertexShader","aVertexPositionAttribute","aVertexColorAttribute","aTextureCoordAttribute","uMatrixLocation","uSamplerLocation","dimensionsForAutoscale","viewport","baseWidth","baseHeight","canvasWidth","canvasHeight","paddingX","paddingY","scaleX","scaleY","viewScale","minScaleConstraint","scale","textureScale","scaleAndRotationMatrix","bounds","i","UI.Geometry.boundsForTransformedPoints","glProjectionMatrix","pMatrixUniform","m","whitePixel","loadChromeTexture","url","depth","queue","children","LayerSpacing","ScrollRectSpacing","rect","Rectangle","isSelected","isHovered","SelectedBorderColor","HoveredBorderColor","fillColor","maskColor","HoveredImageMaskColor","BorderColor","SelectedBorderWidth","BorderWidth","scrollRects","ScrollRectBackgroundColor","tiles","tile","color","colors","normalizedColor","attribute","array","length","buffer","vertices","vertexPositionAttribute","textureCoordAttribute","vertexColorAttribute","samplerUniform","numberOfVertices","drawChrome","z","borderWidth","ViewportBorderWidth","ViewportBorderColor","borderAdjustment","viewportWidth","chromeTextureImage","chromeHeight","middleTextureImage","middleFragmentWidth","width","viewportHeight","fragment","i18n.i18n.getFormatLocalizedString","UI.XLink.XLink","closestIntersectionPoint","closestObject","projectionMatrix","x0","y0","checkIntersection","t","caption","value","toolbar","setting","UI.Toolbar.ToolbarSettingCheckbox","maxDistanceInPixels","textureUpdatedCallback","Common.Throttler.Throttler","glContext","newLayers","oldLayers","snapshots","oldSnapshotsToTiles","newTiles","reusedTiles","oldTile","Tile","relatedObject","quad","ratioX","ratioY","x1","y1","x2","y2","x3","y3","firstSidePointX","firstSidePointY","thirdSidePointX","thirdSidePointY","rx1","rx2","ry1","ry2","rectQuad","matrix","points","UI.Geometry.multiplyVectorByMatrixAndNormalize","UI.Geometry.Vector","normal","UI.Geometry.crossProduct","UI.Geometry.subtract","A","B","C","pt","tVects","UI.Geometry.scalarProduct","categories","logItemCategoriesMap","PaintProfilerView","UI.Widget.HBox","showImageCallback","PerfUI.PieChart.PieChart","PerfUI.OverviewGrid.Window","PaintProfilerCategory","logItemCategories","logItem","method","Platform.StringUtilities.toTitleCase","result","log","clipRect","profiles","needsUpdate","predictiveGrowthFactor","maxBars","sampleCount","maxBarTime","barTimes","barHeightByCategory","heightByCategory","lastBarIndex","lastBarTime","categoryName","sampleIndex","row","sample","factor","paddingHeight","currentHeight","total","slices","window","totalTime","timeByCategory","logEntry","category","j","time","i18n.TimeUtilities.millisToString","screenLeft","screenRight","barLeft","barRight","stepLeft","stepRight","left","right","paintProfilerStyles","PaintProfilerCommandLogView","UI.ThrottledWidget.ThrottledWidget","treeElement","LogTreeElement","selectionWindow","ownerView","param","LogPropertyTreeElement","str","keyCount","key","paramKey","params","property","nameElement","separatorElement","valueElement"],"mappings":"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"}